begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nCells Scheduler\n"""'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'rpcapi'
name|'as'
name|'scheduler_rpcapi'
newline|'\n'
nl|'\n'
DECL|variable|cell_scheduler_opts
name|'cell_scheduler_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'scheduler_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'How many retries when no cells are available.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'scheduler_retry_delay'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'2'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'How often to retry in seconds when no cells are '"
nl|'\n'
string|"'available.'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'cell_scheduler_opts'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsScheduler
name|'class'
name|'CellsScheduler'
op|'('
name|'base'
op|'.'
name|'Base'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The cells scheduler."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'msg_runner'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsScheduler'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'msg_runner'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'='
name|'msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler_rpcapi'
op|'='
name|'scheduler_rpcapi'
op|'.'
name|'SchedulerAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instances_here
dedent|''
name|'def'
name|'_create_instances_here'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_values'
op|'='
name|'request_spec'
op|'['
string|"'instance_properties'"
op|']'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'request_spec'
op|'['
string|"'instance_uuids'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'instance_values'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create_db_entry_for_new_instance'
op|'('
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'request_spec'
op|'['
string|"'instance_type'"
op|']'
op|','
nl|'\n'
name|'request_spec'
op|'['
string|"'image'"
op|']'
op|','
nl|'\n'
name|'instance_values'
op|','
nl|'\n'
name|'request_spec'
op|'['
string|"'security_group'"
op|']'
op|','
nl|'\n'
name|'request_spec'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_possible_cells
dedent|''
dedent|''
name|'def'
name|'_get_possible_cells'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'set'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cells'
op|'('
op|')'
op|')'
newline|'\n'
name|'our_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
comment|'# Include our cell in the list, if we have any capacity info'
nl|'\n'
name|'if'
name|'not'
name|'cells'
name|'or'
name|'our_cell'
op|'.'
name|'capacities'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'our_cell'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cells'
newline|'\n'
nl|'\n'
DECL|member|_run_instance
dedent|''
name|'def'
name|'_run_instance'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attempt to schedule instance(s).  If we have no cells\n        to try, raise exception.NoCellsAvailable\n        """'
newline|'\n'
name|'ctxt'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'request_spec'
op|'='
name|'host_sched_kwargs'
op|'['
string|"'request_spec'"
op|']'
newline|'\n'
nl|'\n'
comment|'# The message we might forward to a child cell'
nl|'\n'
name|'cells'
op|'='
name|'self'
op|'.'
name|'_get_possible_cells'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cells'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoCellsAvailable'
op|'('
op|')'
newline|'\n'
dedent|''
name|'cells'
op|'='
name|'list'
op|'('
name|'cells'
op|')'
newline|'\n'
nl|'\n'
comment|'# Random selection for now'
nl|'\n'
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'cells'
op|')'
newline|'\n'
name|'target_cell'
op|'='
name|'cells'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Scheduling with routing_path=%(routing_path)s"'
op|')'
op|','
nl|'\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'target_cell'
op|'.'
name|'is_me'
op|':'
newline|'\n'
comment|'# Need to create instance DB entries as the host scheduler'
nl|'\n'
comment|'# expects that the instance(s) already exists.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_instances_here'
op|'('
name|'ctxt'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'run_instance'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'**'
name|'host_sched_kwargs'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'ctxt'
op|','
name|'target_cell'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_instance
dedent|''
name|'def'
name|'run_instance'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pick a cell where we should create a new instance."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'max'
op|'('
number|'0'
op|','
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'scheduler_retries'
op|')'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'_run_instance'
op|'('
name|'message'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoCellsAvailable'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'i'
op|'=='
name|'max'
op|'('
number|'0'
op|','
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'scheduler_retries'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
name|'sleep_time'
op|'='
name|'max'
op|'('
number|'1'
op|','
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'scheduler_retry_delay'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"No cells available when scheduling.  Will "'
nl|'\n'
string|'"retry in %(sleep_time)s second(s)"'
op|')'
op|','
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'sleep_time'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'request_spec'
op|'='
name|'host_sched_kwargs'
op|'['
string|"'request_spec'"
op|']'
newline|'\n'
name|'instance_uuids'
op|'='
name|'request_spec'
op|'['
string|"'instance_uuids'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error scheduling instances %(instance_uuids)s"'
op|')'
op|','
nl|'\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
