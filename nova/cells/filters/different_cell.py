begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nDifferent cell filter.\n\nA scheduler hint of \'different_cell\' with a value of a full cell name may be\nspecified to route a build away from a particular cell.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'filters'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'utils'
name|'as'
name|'cells_utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DifferentCellFilter
name|'class'
name|'DifferentCellFilter'
op|'('
name|'filters'
op|'.'
name|'BaseCellFilter'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Different cell filter.  Works by specifying a scheduler hint of\n    \'different_cell\'. The value should be the full cell path.\n    """'
newline|'\n'
DECL|member|filter_all
name|'def'
name|'filter_all'
op|'('
name|'self'
op|','
name|'cells'
op|','
name|'filter_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Override filter_all() which operates on the full list\n        of cells...\n        """'
newline|'\n'
name|'scheduler_hints'
op|'='
name|'filter_properties'
op|'.'
name|'get'
op|'('
string|"'scheduler_hints'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'scheduler_hints'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'cells'
newline|'\n'
nl|'\n'
dedent|''
name|'cell_routes'
op|'='
name|'scheduler_hints'
op|'.'
name|'get'
op|'('
string|"'different_cell'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cell_routes'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'cells'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'cell_routes'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_routes'
op|'='
op|'['
name|'cell_routes'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'authorized'
op|'('
name|'filter_properties'
op|'['
string|"'context'"
op|']'
op|')'
op|':'
newline|'\n'
comment|'# No filtering, if not authorized.'
nl|'\n'
indent|'            '
name|'return'
name|'cells'
newline|'\n'
nl|'\n'
dedent|''
name|'routing_path'
op|'='
name|'filter_properties'
op|'['
string|"'routing_path'"
op|']'
newline|'\n'
name|'filtered_cells'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'cells'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_cell_state_matches'
op|'('
name|'cell'
op|','
name|'routing_path'
op|','
name|'cell_routes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'filtered_cells'
op|'.'
name|'append'
op|'('
name|'cell'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'filtered_cells'
newline|'\n'
nl|'\n'
DECL|member|_cell_state_matches
dedent|''
name|'def'
name|'_cell_state_matches'
op|'('
name|'self'
op|','
name|'cell_state'
op|','
name|'routing_path'
op|','
name|'cell_routes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell_route'
op|'='
name|'routing_path'
newline|'\n'
name|'if'
name|'not'
name|'cell_state'
op|'.'
name|'is_me'
op|':'
newline|'\n'
indent|'            '
name|'cell_route'
op|'+='
name|'cells_utils'
op|'.'
name|'PATH_CELL_SEP'
op|'+'
name|'cell_state'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'if'
name|'cell_route'
name|'in'
name|'cell_routes'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
