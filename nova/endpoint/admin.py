begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright [2010] [Anso Labs, LLC]'
nl|'\n'
comment|'# '
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'#    you may not use this file except in compliance with the License.'
nl|'\n'
comment|'#    You may obtain a copy of the License at'
nl|'\n'
comment|'# '
nl|'\n'
comment|'#        http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'# '
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'#    See the License for the specific language governing permissions and'
nl|'\n'
comment|'#    limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""\nAdmin API controller, exposed through http via the api worker.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
nl|'\n'
DECL|function|user_dict
name|'def'
name|'user_dict'
op|'('
name|'user'
op|','
name|'base64_file'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Convert the user object to a result dict"""'
newline|'\n'
name|'if'
name|'user'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'username'"
op|':'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'accesskey'"
op|':'
name|'user'
op|'.'
name|'access'
op|','
nl|'\n'
string|"'secretkey'"
op|':'
name|'user'
op|'.'
name|'secret'
op|','
nl|'\n'
string|"'file'"
op|':'
name|'base64_file'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|node_dict
dedent|''
dedent|''
name|'def'
name|'node_dict'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Convert a node object to a result dict"""'
newline|'\n'
name|'if'
name|'node'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'node_id'"
op|':'
name|'node'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'workers'"
op|':'
string|'", "'
op|'.'
name|'join'
op|'('
name|'node'
op|'.'
name|'workers'
op|')'
op|','
nl|'\n'
string|"'disks'"
op|':'
string|'", "'
op|'.'
name|'join'
op|'('
name|'node'
op|'.'
name|'disks'
op|')'
op|','
nl|'\n'
string|"'ram'"
op|':'
name|'node'
op|'.'
name|'memory'
op|','
nl|'\n'
string|"'load_average'"
op|':'
name|'node'
op|'.'
name|'load_average'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|admin_only
dedent|''
dedent|''
name|'def'
name|'admin_only'
op|'('
name|'target'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator for admin-only API calls"""'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Internal wrapper method for admin-only API calls"""'
newline|'\n'
name|'context'
op|'='
name|'args'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'target'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
DECL|class|AdminController
dedent|''
name|'class'
name|'AdminController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    API Controller for users, node status, and worker mgmt.\n    Trivial admin_only wrapper will be replaced with RBAC,\n    allowing project managers to administer project users.\n    \n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'user_manager'
op|','
name|'node_manager'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'user_manager'
op|'='
name|'user_manager'
newline|'\n'
name|'self'
op|'.'
name|'node_manager'
op|'='
name|'node_manager'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'AdminController'"
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|describe_user
name|'def'
name|'describe_user'
op|'('
name|'self'
op|','
name|'_context'
op|','
name|'name'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns user data, including access and secret keys.\n        """'
newline|'\n'
name|'return'
name|'user_dict'
op|'('
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'get_user'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|describe_users
name|'def'
name|'describe_users'
op|'('
name|'self'
op|','
name|'_context'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns all users - should be changed to deal with a list.\n        """'
newline|'\n'
name|'return'
op|'{'
string|"'userSet'"
op|':'
nl|'\n'
op|'['
name|'user_dict'
op|'('
name|'u'
op|')'
name|'for'
name|'u'
name|'in'
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'get_users'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|register_user
name|'def'
name|'register_user'
op|'('
name|'self'
op|','
name|'_context'
op|','
name|'name'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Creates a new user, and returns generated credentials.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'create_user'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'user_dict'
op|'('
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'get_user'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|deregister_user
name|'def'
name|'deregister_user'
op|'('
name|'self'
op|','
name|'_context'
op|','
name|'name'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a single user (NOT undoable.)\n           Should throw an exception if the user has instances,\n           volumes, or buckets remaining.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'delete_user'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|generate_x509_for_user
name|'def'
name|'generate_x509_for_user'
op|'('
name|'self'
op|','
name|'_context'
op|','
name|'name'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generates and returns an x509 certificate for a single user.\n           Is usually called from a client that will wrap this with\n           access and secret key info, and return a zip file.\n        """'
newline|'\n'
name|'user'
op|'='
name|'self'
op|'.'
name|'user_manager'
op|'.'
name|'get_user'
op|'('
name|'name'
op|')'
newline|'\n'
name|'return'
name|'user_dict'
op|'('
name|'user'
op|','
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'user'
op|'.'
name|'get_credentials'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|describe_nodes
name|'def'
name|'describe_nodes'
op|'('
name|'self'
op|','
name|'_context'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns status info for all nodes. Includes:\n            * Disk Space\n            * Instance List\n            * RAM used\n            * CPU used\n            * DHCP servers running\n            * Iptables / bridges\n        """'
newline|'\n'
name|'return'
op|'{'
string|"'nodeSet'"
op|':'
nl|'\n'
op|'['
name|'node_dict'
op|'('
name|'n'
op|')'
name|'for'
name|'n'
name|'in'
name|'self'
op|'.'
name|'node_manager'
op|'.'
name|'get_nodes'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'admin_only'
newline|'\n'
DECL|member|describe_node
name|'def'
name|'describe_node'
op|'('
name|'self'
op|','
name|'_context'
op|','
name|'name'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns status info for single node.\n        """'
newline|'\n'
name|'return'
name|'node_dict'
op|'('
name|'self'
op|'.'
name|'node_manager'
op|'.'
name|'get_node'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
