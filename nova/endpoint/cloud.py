begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nCloud Controller: Implementation of EC2 REST API calls, which are\ndispatched to other nodes via AMQP RPC. State is via distributed\ndatastore.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'datastore'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'rbac'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'instance_types'
name|'import'
name|'INSTANCE_TYPES'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'endpoint'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'service'
name|'as'
name|'network_service'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'service'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_gen_key
name|'def'
name|'_gen_key'
op|'('
name|'user_id'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" Tuck this into AuthManager """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'mgr'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'private_key'
op|','
name|'fingerprint'
op|'='
name|'mgr'
op|'.'
name|'generate_key_pair'
op|'('
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'exception'"
op|':'
name|'ex'
op|'}'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'private_key'"
op|':'
name|'private_key'
op|','
string|"'fingerprint'"
op|':'
name|'fingerprint'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudController
dedent|''
name|'class'
name|'CloudController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" CloudController provides the critical dispatch between\n inbound API calls through the endpoint and messages\n sent to the other nodes.\n"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instdir'
op|'='
name|'model'
op|'.'
name|'InstanceDirectory'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setup'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|instances
name|'def'
name|'instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" All instances in the system, as dicts """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'all'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|volumes
name|'def'
name|'volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" returns a list of all volumes """'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'datastore'
op|'.'
name|'Redis'
op|'.'
name|'instance'
op|'('
op|')'
op|'.'
name|'smembers'
op|'('
string|'"volumes"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'='
name|'service'
op|'.'
name|'get_volume'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'yield'
name|'volume'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'CloudController'"
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Ensure the keychains and folders exist. """'
newline|'\n'
comment|"# Create keys folder, if it doesn't exist"
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
newline|'\n'
comment|"# Gen root CA, if we don't have one"
nl|'\n'
dedent|''
name|'root_ca_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|','
name|'FLAGS'
op|'.'
name|'ca_file'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'root_ca_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chdir'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'runthis'
op|'('
string|'"Generating root CA: %s"'
op|','
string|'"sh genrootca.sh"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chdir'
op|'('
name|'start'
op|')'
newline|'\n'
comment|'# TODO: Do this with M2Crypto instead'
nl|'\n'
nl|'\n'
DECL|member|get_instance_by_ip
dedent|''
dedent|''
name|'def'
name|'get_instance_by_ip'
op|'('
name|'self'
op|','
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'by_ip'
op|'('
name|'ip'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_mpi_data
dedent|''
name|'def'
name|'_get_mpi_data'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'all'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'project_id'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
string|"'%s slots=%d'"
op|'%'
op|'('
name|'instance'
op|'['
string|"'private_dns_name'"
op|']'
op|','
nl|'\n'
name|'INSTANCE_TYPES'
op|'['
name|'instance'
op|'['
string|"'instance_type'"
op|']'
op|']'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'instance'
op|'['
string|"'key_name'"
op|']'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'['
name|'instance'
op|'['
string|"'key_name'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'['
name|'instance'
op|'['
string|"'key_name'"
op|']'
op|']'
op|'='
op|'['
name|'line'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|get_metadata
dedent|''
name|'def'
name|'get_metadata'
op|'('
name|'self'
op|','
name|'ipaddress'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'get_instance_by_ip'
op|'('
name|'ipaddress'
op|')'
newline|'\n'
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'mpi'
op|'='
name|'self'
op|'.'
name|'_get_mpi_data'
op|'('
name|'i'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'['
string|"'key_name'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
op|'{'
nl|'\n'
string|"'0'"
op|':'
op|'{'
nl|'\n'
string|"'_name'"
op|':'
name|'i'
op|'['
string|"'key_name'"
op|']'
op|','
nl|'\n'
string|"'openssh-key'"
op|':'
name|'i'
op|'['
string|"'key_data'"
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'address_record'
op|'='
name|'network_model'
op|'.'
name|'FixedIp'
op|'('
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'address_record'
op|':'
newline|'\n'
indent|'            '
name|'hostname'
op|'='
name|'address_record'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'hostname'
op|'='
string|"'ip-%s'"
op|'%'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|'.'
name|'replace'
op|'('
string|"'.'"
op|','
string|"'-'"
op|')'
newline|'\n'
dedent|''
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'user-data'"
op|':'
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'i'
op|'['
string|"'user_data'"
op|']'
op|')'
op|','
nl|'\n'
string|"'meta-data'"
op|':'
op|'{'
nl|'\n'
string|"'ami-id'"
op|':'
name|'i'
op|'['
string|"'image_id'"
op|']'
op|','
nl|'\n'
string|"'ami-launch-index'"
op|':'
name|'i'
op|'['
string|"'ami_launch_index'"
op|']'
op|','
nl|'\n'
string|"'ami-manifest-path'"
op|':'
string|"'FIXME'"
op|','
comment|'# image property'
nl|'\n'
string|"'block-device-mapping'"
op|':'
op|'{'
comment|'# TODO: replace with real data'
nl|'\n'
string|"'ami'"
op|':'
string|"'sda1'"
op|','
nl|'\n'
string|"'ephemeral0'"
op|':'
string|"'sda2'"
op|','
nl|'\n'
string|"'root'"
op|':'
string|"'/dev/sda1'"
op|','
nl|'\n'
string|"'swap'"
op|':'
string|"'sda3'"
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'instance-action'"
op|':'
string|"'none'"
op|','
nl|'\n'
string|"'instance-id'"
op|':'
name|'i'
op|'['
string|"'instance_id'"
op|']'
op|','
nl|'\n'
string|"'instance-type'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'local-hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'local-ipv4'"
op|':'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|','
comment|'# TODO: switch to IP'
nl|'\n'
string|"'kernel-id'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'placement'"
op|':'
op|'{'
nl|'\n'
string|"'availaibility-zone'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'public-hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'public-ipv4'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'dns_name'"
op|','
string|"''"
op|')'
op|','
comment|'# TODO: switch to IP'
nl|'\n'
string|"'public-keys'"
op|':'
name|'keys'
op|','
nl|'\n'
string|"'ramdisk-id'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'reservation-id'"
op|':'
name|'i'
op|'['
string|"'reservation_id'"
op|']'
op|','
nl|'\n'
string|"'security-groups'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'groups'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'mpi'"
op|':'
name|'mpi'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'False'
op|':'
comment|'# TODO: store ancestor ids'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'ancestor-ami-ids'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'i'
op|'.'
name|'get'
op|'('
string|"'product_codes'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'product-codes'"
op|']'
op|'='
name|'i'
op|'['
string|"'product_codes'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_availability_zones
name|'def'
name|'describe_availability_zones'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'availabilityZoneInfo'"
op|':'
op|'['
op|'{'
string|"'zoneName'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|"'available'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_regions
name|'def'
name|'describe_regions'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'region_name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'region'
name|'in'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|','
name|'_sep'
op|','
name|'url'
op|'='
name|'region'
op|'.'
name|'partition'
op|'('
string|"'|'"
op|')'
newline|'\n'
name|'regions'
op|'.'
name|'append'
op|'('
op|'{'
string|"'regionName'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'regionEndpoint'"
op|':'
name|'url'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'['
op|'{'
string|"'regionName'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'regionEndpoint'"
op|':'
name|'FLAGS'
op|'.'
name|'ec2_url'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'region_name'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'regions'
name|'if'
name|'r'
op|'['
string|"'regionName'"
op|']'
name|'in'
name|'region_name'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'regionInfo'"
op|':'
name|'regions'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_snapshots
name|'def'
name|'describe_snapshots'
op|'('
name|'self'
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'owner'
op|'='
name|'None'
op|','
nl|'\n'
name|'restorable_by'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'snapshotSet'"
op|':'
op|'['
op|'{'
string|"'snapshotId'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'startTime'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'progress'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'ownerId'"
op|':'
string|"'fixme'"
op|','
nl|'\n'
string|"'volumeSize'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'fixme'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_key_pairs
name|'def'
name|'describe_key_pairs'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_pairs'
op|'='
name|'context'
op|'.'
name|'user'
op|'.'
name|'get_key_pairs'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'key_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'key_pairs'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'key_pairs'
name|'if'
name|'x'
op|'.'
name|'name'
name|'in'
name|'key_name'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key_pair'
name|'in'
name|'key_pairs'
op|':'
newline|'\n'
comment|'# filter out the vpn keys'
nl|'\n'
indent|'            '
name|'suffix'
op|'='
name|'FLAGS'
op|'.'
name|'vpn_key_suffix'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'not'
name|'key_pair'
op|'.'
name|'name'
op|'.'
name|'endswith'
op|'('
name|'suffix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'.'
name|'append'
op|'('
op|'{'
nl|'\n'
string|"'keyName'"
op|':'
name|'key_pair'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'keyFingerprint'"
op|':'
name|'key_pair'
op|'.'
name|'fingerprint'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'keypairsSet'"
op|':'
name|'result'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|create_key_pair
name|'def'
name|'create_key_pair'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dcall'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'pool'
op|'='
name|'context'
op|'.'
name|'handler'
op|'.'
name|'application'
op|'.'
name|'settings'
op|'.'
name|'get'
op|'('
string|"'pool'"
op|')'
newline|'\n'
DECL|function|_complete
name|'def'
name|'_complete'
op|'('
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'exception'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                '
name|'dcall'
op|'.'
name|'errback'
op|'('
name|'kwargs'
op|'['
string|"'exception'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'dcall'
op|'.'
name|'callback'
op|'('
op|'{'
string|"'keyName'"
op|':'
name|'key_name'
op|','
nl|'\n'
string|"'keyFingerprint'"
op|':'
name|'kwargs'
op|'['
string|"'fingerprint'"
op|']'
op|','
nl|'\n'
string|"'keyMaterial'"
op|':'
name|'kwargs'
op|'['
string|"'private_key'"
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'pool'
op|'.'
name|'apply_async'
op|'('
name|'_gen_key'
op|','
op|'['
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
name|'key_name'
op|']'
op|','
nl|'\n'
name|'callback'
op|'='
name|'_complete'
op|')'
newline|'\n'
name|'return'
name|'dcall'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|delete_key_pair
name|'def'
name|'delete_key_pair'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'.'
name|'user'
op|'.'
name|'delete_key_pair'
op|'('
name|'key_name'
op|')'
newline|'\n'
comment|"# aws returns true even if the key doens't exist"
nl|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_security_groups
name|'def'
name|'describe_security_groups'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_names'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
op|'{'
string|"'securityGroupSet'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Stubbed for now to unblock other things.'
nl|'\n'
name|'return'
name|'groups'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
DECL|member|create_security_group
name|'def'
name|'create_security_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
DECL|member|delete_security_group
name|'def'
name|'delete_security_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|get_console_output
name|'def'
name|'get_console_output'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# instance_id is passed in as a list of instances'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'rpc'
op|'.'
name|'call'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'instance'
op|'['
string|"'node_name'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"get_console_output"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'instance_id'
op|'['
number|'0'
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_user_id
dedent|''
name|'def'
name|'_get_user_id'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'context'
name|'and'
name|'context'
op|'.'
name|'user'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|describe_volumes
name|'def'
name|'describe_volumes'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'volume'
name|'in'
name|'self'
op|'.'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'volume'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'self'
op|'.'
name|'format_volume'
op|'('
name|'context'
op|','
name|'volume'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'volumeSet'"
op|':'
name|'volumes'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|format_volume
dedent|''
name|'def'
name|'format_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'v'
op|'['
string|"'volumeId'"
op|']'
op|'='
name|'volume'
op|'['
string|"'volume_id'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'status'"
op|']'
op|'='
name|'volume'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'size'"
op|']'
op|'='
name|'volume'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'availabilityZone'"
op|']'
op|'='
name|'volume'
op|'['
string|"'availability_zone'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'createTime'"
op|']'
op|'='
name|'volume'
op|'['
string|"'create_time'"
op|']'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'status'"
op|']'
op|'='
string|"'%s (%s, %s, %s, %s)'"
op|'%'
op|'('
nl|'\n'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'status'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'user_id'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'node_name'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'mountpoint'"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|'=='
string|"'attached'"
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'attachmentSet'"
op|']'
op|'='
op|'['
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'volume'
op|'['
string|"'delete_on_termination'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'volume'
op|'['
string|"'instance_id'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'attached'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'volume'
op|'['
string|"'volume_id'"
op|']'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'attachmentSet'"
op|']'
op|'='
op|'['
op|'{'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'v'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|create_volume
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'size'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# TODO(vish): refactor this to create the volume object here and tell service to create it'
nl|'\n'
indent|'        '
name|'result'
op|'='
name|'yield'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'FLAGS'
op|'.'
name|'volume_topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"create_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"size"'
op|':'
name|'size'
op|','
nl|'\n'
string|'"user_id"'
op|':'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|'}'
op|'}'
op|')'
newline|'\n'
comment|'# NOTE(vish): rpc returned value is in the result key in the dictionary'
nl|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_get_volume'
op|'('
name|'context'
op|','
name|'result'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'returnValue'
op|'('
op|'{'
string|"'volumeSet'"
op|':'
op|'['
name|'self'
op|'.'
name|'format_volume'
op|'('
name|'context'
op|','
name|'volume'
op|')'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_address
dedent|''
name|'def'
name|'_get_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'public_ip'
op|')'
op|':'
newline|'\n'
comment|'# FIXME(vish) this should move into network.py'
nl|'\n'
indent|'        '
name|'address'
op|'='
name|'network_model'
op|'.'
name|'ElasticIp'
op|'.'
name|'lookup'
op|'('
name|'public_ip'
op|')'
newline|'\n'
name|'if'
name|'address'
name|'and'
op|'('
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'address'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'address'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"Address at ip %s not found"'
op|'%'
name|'public_ip'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_image
dedent|''
name|'def'
name|'_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""passes in context because\n        objectstore does its own authorization"""'
newline|'\n'
name|'result'
op|'='
name|'images'
op|'.'
name|'list'
op|'('
name|'context'
op|','
op|'['
name|'image_id'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'Image %s could not be found'"
op|'%'
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'image'
op|'='
name|'result'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'image'
newline|'\n'
nl|'\n'
DECL|member|_get_instance
dedent|''
name|'def'
name|'_get_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'instance'
name|'in'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'all'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'instance_id'"
op|']'
op|'=='
name|'instance_id'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'instance'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'Instance %s could not be found'"
op|'%'
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_volume
dedent|''
name|'def'
name|'_get_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume'
op|'='
name|'service'
op|'.'
name|'get_volume'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'volume'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'volume'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'Volume %s could not be found'"
op|'%'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|attach_volume
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
name|'instance_id'
op|','
name|'device'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_get_volume'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'if'
name|'volume'
op|'['
string|"'status'"
op|']'
op|'=='
string|'"attached"'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|'"Volume is already attached"'
op|')'
newline|'\n'
comment|'# TODO(vish): looping through all volumes is slow. We should probably maintain an index'
nl|'\n'
dedent|''
name|'for'
name|'vol'
name|'in'
name|'self'
op|'.'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'vol'
op|'['
string|"'instance_id'"
op|']'
op|'=='
name|'instance_id'
name|'and'
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
name|'device'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|'"Volume %s is already attached to %s"'
op|'%'
op|'('
name|'vol'
op|'['
string|"'volume_id'"
op|']'
op|','
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'volume'
op|'.'
name|'start_attach'
op|'('
name|'instance_id'
op|','
name|'device'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'compute_node'
op|'='
name|'instance'
op|'['
string|"'node_name'"
op|']'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'compute_node'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"attach_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"volume_id"'
op|':'
name|'volume_id'
op|','
nl|'\n'
string|'"instance_id"'
op|':'
name|'instance_id'
op|','
nl|'\n'
string|'"mountpoint"'
op|':'
name|'device'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'requestId'"
op|':'
name|'context'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'volume_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|detach_volume
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_get_volume'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'volume'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
string|'"Volume isn\'t attached to anything!"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'volume'
op|'['
string|"'status'"
op|']'
op|'=='
string|'"available"'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
string|'"Volume is already detached"'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'.'
name|'start_detach'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'instance'
op|'['
string|"'node_name'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"detach_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'instance_id'
op|','
nl|'\n'
string|'"volume_id"'
op|':'
name|'volume_id'
op|'}'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
comment|"# If the instance doesn't exist anymore,"
nl|'\n'
comment|'# then we need to call detach blind'
nl|'\n'
indent|'            '
name|'volume'
op|'.'
name|'finish_detach'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'requestId'"
op|':'
name|'context'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'volume_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_convert_to_set
dedent|''
name|'def'
name|'_convert_to_set'
op|'('
name|'self'
op|','
name|'lst'
op|','
name|'label'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'lst'
op|'=='
name|'None'
name|'or'
name|'lst'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'lst'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'lst'
op|'='
op|'['
name|'lst'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|'{'
name|'label'
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
name|'lst'
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_instances
name|'def'
name|'describe_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'self'
op|'.'
name|'_format_describe_instances'
op|'('
name|'context'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_describe_instances
dedent|''
name|'def'
name|'_format_describe_instances'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'reservationSet'"
op|':'
name|'self'
op|'.'
name|'_format_instances'
op|'('
name|'context'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_run_instances
dedent|''
name|'def'
name|'_format_run_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'reservation_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_format_instances'
op|'('
name|'context'
op|','
name|'reservation_id'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'i'
op|')'
op|'=='
number|'1'
newline|'\n'
name|'return'
name|'i'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_format_instances
dedent|''
name|'def'
name|'_format_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'reservation_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reservations'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instgenerator'
op|'='
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'all'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'instgenerator'
op|'='
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'by_project'
op|'('
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'instance'
name|'in'
name|'instgenerator'
op|':'
newline|'\n'
indent|'            '
name|'res_id'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|','
string|"'Unknown'"
op|')'
newline|'\n'
name|'if'
name|'reservation_id'
op|'!='
name|'None'
name|'and'
name|'reservation_id'
op|'!='
name|'res_id'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'instance'
op|'['
string|"'image_id'"
op|']'
op|'=='
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'i'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'i'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'image_id'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'image_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'instance_state'"
op|']'
op|'='
op|'{'
nl|'\n'
string|"'code'"
op|':'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'state'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'state_description'"
op|','
string|"'pending'"
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'i'
op|'['
string|"'public_dns_name'"
op|']'
op|'='
name|'network_model'
op|'.'
name|'get_public_ip_for_instance'
op|'('
nl|'\n'
name|'i'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'private_dns_name'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'i'
op|'['
string|"'public_dns_name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'['
string|"'public_dns_name'"
op|']'
op|'='
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
newline|'\n'
dedent|''
name|'i'
op|'['
string|"'dns_name'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'dns_name'"
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'key_name'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'['
string|"'key_name'"
op|']'
op|'='
string|"'%s (%s, %s)'"
op|'%'
op|'('
name|'i'
op|'['
string|"'key_name'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'project_id'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'node_name'"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
dedent|''
name|'i'
op|'['
string|"'product_codes_set'"
op|']'
op|'='
name|'self'
op|'.'
name|'_convert_to_set'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'product_codes'"
op|','
name|'None'
op|')'
op|','
string|"'product_code'"
op|')'
newline|'\n'
name|'i'
op|'['
string|"'instance_type'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'launch_time'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'launch_time'"
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'ami_launch_index'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'reservations'
op|'.'
name|'has_key'
op|'('
name|'res_id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'r'
op|'['
string|"'reservation_id'"
op|']'
op|'='
name|'res_id'
newline|'\n'
name|'r'
op|'['
string|"'owner_id'"
op|']'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'project_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'r'
op|'['
string|"'group_set'"
op|']'
op|'='
name|'self'
op|'.'
name|'_convert_to_set'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'groups'"
op|','
name|'None'
op|')'
op|','
string|"'group_id'"
op|')'
newline|'\n'
name|'r'
op|'['
string|"'instances_set'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'reservations'
op|'['
name|'res_id'
op|']'
op|'='
name|'r'
newline|'\n'
dedent|''
name|'reservations'
op|'['
name|'res_id'
op|']'
op|'['
string|"'instances_set'"
op|']'
op|'.'
name|'append'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'list'
op|'('
name|'reservations'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_addresses
name|'def'
name|'describe_addresses'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'format_addresses'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|format_addresses
dedent|''
name|'def'
name|'format_addresses'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'address'
name|'in'
name|'network_model'
op|'.'
name|'ElasticIp'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# TODO(vish): implement a by_project iterator for addresses'
nl|'\n'
indent|'            '
name|'if'
op|'('
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
nl|'\n'
name|'address'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'address_rv'
op|'='
op|'{'
nl|'\n'
string|"'public_ip'"
op|':'
name|'address'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'address'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
string|"'free'"
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_admin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'address_rv'
op|'['
string|"'instance_id'"
op|']'
op|'='
string|'"%s (%s, %s)"'
op|'%'
op|'('
nl|'\n'
name|'address'
op|'['
string|"'instance_id'"
op|']'
op|','
nl|'\n'
name|'address'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'address'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'addresses'
op|'.'
name|'append'
op|'('
name|'address_rv'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'addressesSet'"
op|':'
name|'addresses'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|allocate_address
name|'def'
name|'allocate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
name|'public_ip'
op|'='
name|'yield'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"allocate_elastic_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"user_id"'
op|':'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'returnValue'
op|'('
op|'{'
string|"'addressSet'"
op|':'
op|'['
op|'{'
string|"'publicIp'"
op|':'
name|'public_ip'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|release_address
name|'def'
name|'release_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): Should we make sure this works?'
nl|'\n'
indent|'        '
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"deallocate_elastic_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"elastic_ip"'
op|':'
name|'public_ip'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'returnValue'
op|'('
op|'{'
string|"'releaseResponse'"
op|':'
op|'['
string|'"Address released."'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|associate_address
name|'def'
name|'associate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'_get_address'
op|'('
name|'context'
op|','
name|'public_ip'
op|')'
newline|'\n'
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"associate_elastic_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"elastic_ip"'
op|':'
name|'address'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
string|'"fixed_ip"'
op|':'
name|'instance'
op|'['
string|"'private_dns_name'"
op|']'
op|','
nl|'\n'
string|'"instance_id"'
op|':'
name|'instance'
op|'['
string|"'instance_id'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'returnValue'
op|'('
op|'{'
string|"'associateResponse'"
op|':'
op|'['
string|'"Address associated."'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'netadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|disassociate_address
name|'def'
name|'disassociate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
name|'self'
op|'.'
name|'_get_address'
op|'('
name|'context'
op|','
name|'public_ip'
op|')'
newline|'\n'
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"disassociate_elastic_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"elastic_ip"'
op|':'
name|'address'
op|'['
string|"'address'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'returnValue'
op|'('
op|'{'
string|"'disassociateResponse'"
op|':'
op|'['
string|'"Address disassociated."'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|_get_network_topic
name|'def'
name|'_get_network_topic'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves the network host for a project"""'
newline|'\n'
name|'host'
op|'='
name|'network_service'
op|'.'
name|'get_host_for_project'
op|'('
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'yield'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'FLAGS'
op|'.'
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"set_network_host"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"user_id"'
op|':'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|'}'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'defer'
op|'.'
name|'returnValue'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'network_topic'
op|','
name|'host'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|run_instances
name|'def'
name|'run_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# make sure user can access the image'
nl|'\n'
comment|"# vpn image is private so it doesn't show up on lists"
nl|'\n'
indent|'        '
name|'if'
name|'kwargs'
op|'['
string|"'image_id'"
op|']'
op|'!='
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kwargs'
op|'['
string|"'image_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# FIXME(ja): if image is cloudpipe, this breaks'
nl|'\n'
nl|'\n'
comment|'# get defaults from imagestore'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'image'
op|'['
string|"'imageId'"
op|']'
newline|'\n'
name|'kernel_id'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'kernelId'"
op|','
name|'FLAGS'
op|'.'
name|'default_kernel'
op|')'
newline|'\n'
name|'ramdisk_id'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'ramdiskId'"
op|','
name|'FLAGS'
op|'.'
name|'default_ramdisk'
op|')'
newline|'\n'
nl|'\n'
comment|'# API parameters overrides of defaults'
nl|'\n'
name|'kernel_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|','
name|'kernel_id'
op|')'
newline|'\n'
name|'ramdisk_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|','
name|'ramdisk_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure we have access to kernel and ramdisk'
nl|'\n'
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kernel_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'ramdisk_id'
op|')'
newline|'\n'
nl|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Going to run instances..."'
op|')'
newline|'\n'
name|'reservation_id'
op|'='
name|'utils'
op|'.'
name|'generate_uid'
op|'('
string|"'r'"
op|')'
newline|'\n'
name|'launch_time'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%Y-%m-%dT%H:%M:%SZ'"
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
newline|'\n'
name|'key_data'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'kwargs'
op|'.'
name|'has_key'
op|'('
string|"'key_name'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key_pair'
op|'='
name|'context'
op|'.'
name|'user'
op|'.'
name|'get_key_pair'
op|'('
name|'kwargs'
op|'['
string|"'key_name'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'key_pair'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'Key Pair %s not found'"
op|'%'
nl|'\n'
name|'kwargs'
op|'['
string|"'key_name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'key_data'
op|'='
name|'key_pair'
op|'.'
name|'public_key'
newline|'\n'
dedent|''
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
comment|'# TODO: Get the real security group of launch in here'
nl|'\n'
name|'security_group'
op|'='
string|'"default"'
newline|'\n'
name|'for'
name|'num'
name|'in'
name|'range'
op|'('
name|'int'
op|'('
name|'kwargs'
op|'['
string|"'max_count'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'is_vpn'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'image_id'
op|'=='
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|':'
newline|'\n'
indent|'                '
name|'is_vpn'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'inst'
op|'='
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'new'
op|'('
op|')'
newline|'\n'
name|'allocate_data'
op|'='
name|'yield'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"allocate_fixed_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"user_id"'
op|':'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"security_group"'
op|':'
name|'security_group'
op|','
nl|'\n'
string|'"is_vpn"'
op|':'
name|'is_vpn'
op|','
nl|'\n'
string|'"hostname"'
op|':'
name|'inst'
op|'.'
name|'instance_id'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'image_id'"
op|']'
op|'='
name|'image_id'
newline|'\n'
name|'inst'
op|'['
string|"'kernel_id'"
op|']'
op|'='
name|'kernel_id'
newline|'\n'
name|'inst'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
name|'ramdisk_id'
newline|'\n'
name|'inst'
op|'['
string|"'user_data'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'user_data'"
op|','
string|"''"
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|','
string|"'m1.small'"
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
name|'reservation_id'
newline|'\n'
name|'inst'
op|'['
string|"'launch_time'"
op|']'
op|'='
name|'launch_time'
newline|'\n'
name|'inst'
op|'['
string|"'key_data'"
op|']'
op|'='
name|'key_data'
name|'or'
string|"''"
newline|'\n'
name|'inst'
op|'['
string|"'key_name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|','
string|"''"
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'project'
op|'.'
name|'id'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
name|'num'
newline|'\n'
name|'inst'
op|'['
string|"'security_group'"
op|']'
op|'='
name|'security_group'
newline|'\n'
name|'inst'
op|'['
string|"'hostname'"
op|']'
op|'='
name|'inst'
op|'.'
name|'instance_id'
newline|'\n'
name|'for'
op|'('
name|'key'
op|','
name|'value'
op|')'
name|'in'
name|'allocate_data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'inst'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"run_instance"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'inst'
op|'.'
name|'instance_id'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Casting to node for %s\'s instance with IP of %s"'
op|'%'
nl|'\n'
op|'('
name|'context'
op|'.'
name|'user'
op|'.'
name|'name'
op|','
name|'inst'
op|'['
string|"'private_dns_name'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# TODO: Make Network figure out the network name from ip.'
nl|'\n'
dedent|''
name|'defer'
op|'.'
name|'returnValue'
op|'('
name|'self'
op|'.'
name|'_format_run_instances'
op|'('
name|'context'
op|','
name|'reservation_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|terminate_instances
name|'def'
name|'terminate_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Going to start terminating instances"'
op|')'
newline|'\n'
name|'network_topic'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_network_topic'
op|'('
name|'context'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Going to try and terminate %s"'
op|'%'
name|'i'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'i'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                '
name|'logging'
op|'.'
name|'warning'
op|'('
string|'"Instance %s was not found during terminate"'
nl|'\n'
op|'%'
name|'i'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'elastic_ip'
op|'='
name|'network_model'
op|'.'
name|'get_public_ip_for_instance'
op|'('
name|'i'
op|')'
newline|'\n'
name|'if'
name|'elastic_ip'
op|':'
newline|'\n'
indent|'                '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Disassociating address %s"'
op|'%'
name|'elastic_ip'
op|')'
newline|'\n'
comment|"# NOTE(vish): Right now we don't really care if the ip is"
nl|'\n'
comment|'#             disassociated.  We may need to worry about'
nl|'\n'
comment|'#             checking this later.  Perhaps in the scheduler?'
nl|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"disassociate_elastic_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"elastic_ip"'
op|':'
name|'elastic_ip'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fixed_ip'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'private_dns_name'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'fixed_ip'
op|':'
newline|'\n'
indent|'                '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Deallocating address %s"'
op|'%'
name|'fixed_ip'
op|')'
newline|'\n'
comment|"# NOTE(vish): Right now we don't really care if the ip is"
nl|'\n'
comment|'#             actually removed.  We may need to worry about'
nl|'\n'
comment|'#             checking this later.  Perhaps in the scheduler?'
nl|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'network_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"deallocate_fixed_ip"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"fixed_ip"'
op|':'
name|'fixed_ip'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'node_name'"
op|','
string|"'unassigned'"
op|')'
op|'!='
string|"'unassigned'"
op|':'
newline|'\n'
comment|"# NOTE(joshua?): It's also internal default"
nl|'\n'
indent|'                '
name|'rpc'
op|'.'
name|'cast'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'instance'
op|'['
string|"'node_name'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"terminate_instance"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'i'
op|'}'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'defer'
op|'.'
name|'returnValue'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|reboot_instances
name|'def'
name|'reboot_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""instance_id is a list of instance ids"""'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'i'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'instance'
op|'['
string|"'node_name'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"reboot_instance"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'i'
op|'}'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|delete_volume
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# TODO: return error if not authorized'
nl|'\n'
indent|'        '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_get_volume'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume_node'
op|'='
name|'volume'
op|'['
string|"'node_name'"
op|']'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
string|"'%s.%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_topic'
op|','
name|'volume_node'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"delete_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"volume_id"'
op|':'
name|'volume_id'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_images
name|'def'
name|'describe_images'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# The objectstore does its own authorization for describe'
nl|'\n'
indent|'        '
name|'imageSet'
op|'='
name|'images'
op|'.'
name|'list'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'imagesSet'"
op|':'
name|'imageSet'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|deregister_image
name|'def'
name|'deregister_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: should the objectstore be doing these authorization checks?'
nl|'\n'
indent|'        '
name|'images'
op|'.'
name|'deregister'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|register_image
name|'def'
name|'register_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_location'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: should the objectstore be doing these authorization checks?'
nl|'\n'
indent|'        '
name|'if'
name|'image_location'
name|'is'
name|'None'
name|'and'
name|'kwargs'
op|'.'
name|'has_key'
op|'('
string|"'name'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image_location'
op|'='
name|'kwargs'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'image_id'
op|'='
name|'images'
op|'.'
name|'register'
op|'('
name|'context'
op|','
name|'image_location'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Registered %s as %s"'
op|'%'
op|'('
name|'image_location'
op|','
name|'image_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'all'"
op|')'
newline|'\n'
DECL|member|describe_image_attribute
name|'def'
name|'describe_image_attribute'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'attribute'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attribute'
op|'!='
string|"'launchPermission'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'attribute not supported: %s'"
op|'%'
name|'attribute'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'images'
op|'.'
name|'list'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'invalid id: %s'"
op|'%'
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'image_id'
op|','
string|"'launchPermission'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'if'
name|'image'
op|'['
string|"'isPublic'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'launchPermission'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
string|"'group'"
op|':'
string|"'all'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'rbac'
op|'.'
name|'allow'
op|'('
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|')'
newline|'\n'
DECL|member|modify_image_attribute
name|'def'
name|'modify_image_attribute'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'attribute'
op|','
name|'operation_type'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|"# TODO(devcamcar): Support users and groups other than 'all'."
nl|'\n'
indent|'        '
name|'if'
name|'attribute'
op|'!='
string|"'launchPermission'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'attribute not supported: %s'"
op|'%'
name|'attribute'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
string|"'user_group'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'user or group not specified'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'kwargs'
op|'['
string|"'user_group'"
op|']'
op|')'
op|'!='
number|'1'
name|'and'
name|'kwargs'
op|'['
string|"'user_group'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'all'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|'\'only group "all" is supported\''
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'operation_type'
name|'in'
op|'['
string|"'add'"
op|','
string|"'remove'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
string|"'operation_type must be add or remove'"
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'images'
op|'.'
name|'modify'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'operation_type'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update_state
dedent|''
name|'def'
name|'update_state'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" accepts status reports from the queue and consolidates them """'
newline|'\n'
comment|'# TODO(jmc): if an instance has disappeared from'
nl|'\n'
comment|'# the node, call instance_death'
nl|'\n'
name|'if'
name|'topic'
op|'=='
string|'"instances"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
name|'aggregate_state'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'topic'
op|')'
newline|'\n'
name|'node_name'
op|'='
name|'value'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'items'
op|'='
name|'value'
op|'['
name|'node_name'
op|']'
newline|'\n'
nl|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Updating %s state for %s"'
op|'%'
op|'('
name|'topic'
op|','
name|'node_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'item_id'
name|'in'
name|'items'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'aggregate_state'
op|'.'
name|'has_key'
op|'('
string|"'pending'"
op|')'
name|'and'
nl|'\n'
name|'aggregate_state'
op|'['
string|"'pending'"
op|']'
op|'.'
name|'has_key'
op|'('
name|'item_id'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'aggregate_state'
op|'['
string|"'pending'"
op|']'
op|'['
name|'item_id'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'aggregate_state'
op|'['
name|'node_name'
op|']'
op|'='
name|'items'
newline|'\n'
nl|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
