begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright [2010] [Anso Labs, LLC]'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'#    you may not use this file except in compliance with the License.'
nl|'\n'
comment|'#    You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#        http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'#    See the License for the specific language governing permissions and'
nl|'\n'
comment|'#    limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""\nRackspace API\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'multiprocessing'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'vendor'
newline|'\n'
name|'import'
name|'tornado'
op|'.'
name|'web'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'datastore'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'users'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'endpoint'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'storage'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'cloud_topic'"
op|','
string|"'cloud'"
op|','
string|"'the topic clouds listen on'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_gen_key
name|'def'
name|'_gen_key'
op|'('
name|'user_id'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" Tuck this into UserManager """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'users'
op|'.'
name|'UserManager'
op|'.'
name|'instance'
op|'('
op|')'
newline|'\n'
name|'private_key'
op|','
name|'fingerprint'
op|'='
name|'manager'
op|'.'
name|'generate_key_pair'
op|'('
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'exception'"
op|':'
name|'ex'
op|'}'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'private_key'"
op|':'
name|'private_key'
op|','
string|"'fingerprint'"
op|':'
name|'fingerprint'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersController
dedent|''
name|'class'
name|'ServersController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" ServersController provides the critical dispatch between\n inbound API calls through the endpoint and messages\n sent to the other nodes.\n"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instdir'
op|'='
name|'model'
op|'.'
name|'InstanceDirectory'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'network'
op|'.'
name|'PublicNetworkController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setup'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|instances
name|'def'
name|'instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" All instances in the system, as dicts """'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'all'
op|':'
newline|'\n'
indent|'            '
name|'yield'
op|'{'
name|'instance'
op|'['
string|"'instance_id'"
op|']'
op|':'
name|'instance'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|volumes
name|'def'
name|'volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" returns a list of all volumes """'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'datastore'
op|'.'
name|'Redis'
op|'.'
name|'instance'
op|'('
op|')'
op|'.'
name|'smembers'
op|'('
string|'"volumes"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'='
name|'storage'
op|'.'
name|'Volume'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'yield'
name|'volume'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'ServersController'"
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Ensure the keychains and folders exist. """'
newline|'\n'
comment|"# Create keys folder, if it doesn't exist"
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
op|')'
newline|'\n'
comment|"# Gen root CA, if we don't have one"
nl|'\n'
dedent|''
name|'root_ca_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|','
name|'FLAGS'
op|'.'
name|'ca_file'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'root_ca_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chdir'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'runthis'
op|'('
string|'"Generating root CA: %s"'
op|','
string|'"sh genrootca.sh"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chdir'
op|'('
name|'start'
op|')'
newline|'\n'
comment|'# TODO: Do this with M2Crypto instead'
nl|'\n'
nl|'\n'
DECL|member|get_instance_by_ip
dedent|''
dedent|''
name|'def'
name|'get_instance_by_ip'
op|'('
name|'self'
op|','
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instdir'
op|'.'
name|'by_ip'
op|'('
name|'ip'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_metadata
dedent|''
name|'def'
name|'get_metadata'
op|'('
name|'self'
op|','
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'get_instance_by_ip'
op|'('
name|'ip'
op|')'
newline|'\n'
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'i'
op|'['
string|"'key_name'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
op|'{'
nl|'\n'
string|"'0'"
op|':'
op|'{'
nl|'\n'
string|"'_name'"
op|':'
name|'i'
op|'['
string|"'key_name'"
op|']'
op|','
nl|'\n'
string|"'openssh-key'"
op|':'
name|'i'
op|'['
string|"'key_data'"
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'user-data'"
op|':'
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'i'
op|'['
string|"'user_data'"
op|']'
op|')'
op|','
nl|'\n'
string|"'meta-data'"
op|':'
op|'{'
nl|'\n'
string|"'ami-id'"
op|':'
name|'i'
op|'['
string|"'image_id'"
op|']'
op|','
nl|'\n'
string|"'ami-launch-index'"
op|':'
name|'i'
op|'['
string|"'ami_launch_index'"
op|']'
op|','
nl|'\n'
string|"'ami-manifest-path'"
op|':'
string|"'FIXME'"
op|','
comment|'# image property'
nl|'\n'
string|"'block-device-mapping'"
op|':'
op|'{'
comment|'# TODO: replace with real data'
nl|'\n'
string|"'ami'"
op|':'
string|"'sda1'"
op|','
nl|'\n'
string|"'ephemeral0'"
op|':'
string|"'sda2'"
op|','
nl|'\n'
string|"'root'"
op|':'
string|"'/dev/sda1'"
op|','
nl|'\n'
string|"'swap'"
op|':'
string|"'sda3'"
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|','
comment|'# is this public sometimes?'
nl|'\n'
string|"'instance-action'"
op|':'
string|"'none'"
op|','
nl|'\n'
string|"'instance-id'"
op|':'
name|'i'
op|'['
string|"'instance_id'"
op|']'
op|','
nl|'\n'
string|"'instance-type'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'local-hostname'"
op|':'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|','
nl|'\n'
string|"'local-ipv4'"
op|':'
name|'i'
op|'['
string|"'private_dns_name'"
op|']'
op|','
comment|'# TODO: switch to IP'
nl|'\n'
string|"'kernel-id'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'placement'"
op|':'
op|'{'
nl|'\n'
string|"'availaibility-zone'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'public-hostname'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'dns_name'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'public-ipv4'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'dns_name'"
op|','
string|"''"
op|')'
op|','
comment|'# TODO: switch to IP'
nl|'\n'
string|"'public-keys'"
op|':'
name|'keys'
op|','
nl|'\n'
string|"'ramdisk-id'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
string|"'reservation-id'"
op|':'
name|'i'
op|'['
string|"'reservation_id'"
op|']'
op|','
nl|'\n'
string|"'security-groups'"
op|':'
name|'i'
op|'.'
name|'get'
op|'('
string|"'groups'"
op|','
string|"''"
op|')'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'False'
op|':'
comment|'# TODO: store ancestor ids'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'ancestor-ami-ids'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'i'
op|'.'
name|'get'
op|'('
string|"'product_codes'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'product-codes'"
op|']'
op|'='
name|'i'
op|'['
string|"'product_codes'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|update_state
dedent|''
name|'def'
name|'update_state'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" accepts status reports from the queue and consolidates them """'
newline|'\n'
comment|'# TODO(jmc): if an instance has disappeared from'
nl|'\n'
comment|'# the node, call instance_death'
nl|'\n'
name|'if'
name|'topic'
op|'=='
string|'"instances"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
name|'aggregate_state'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'topic'
op|')'
newline|'\n'
name|'node_name'
op|'='
name|'value'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'items'
op|'='
name|'value'
op|'['
name|'node_name'
op|']'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Updating %s state for %s"'
op|'%'
op|'('
name|'topic'
op|','
name|'node_name'
op|')'
op|')'
newline|'\n'
name|'for'
name|'item_id'
name|'in'
name|'items'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'aggregate_state'
op|'.'
name|'has_key'
op|'('
string|"'pending'"
op|')'
name|'and'
nl|'\n'
name|'aggregate_state'
op|'['
string|"'pending'"
op|']'
op|'.'
name|'has_key'
op|'('
name|'item_id'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'aggregate_state'
op|'['
string|"'pending'"
op|']'
op|'['
name|'item_id'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'aggregate_state'
op|'['
name|'node_name'
op|']'
op|'='
name|'items'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|class|RackspaceAPIServerApplication
dedent|''
dedent|''
name|'class'
name|'RackspaceAPIServerApplication'
op|'('
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'Application'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'user_manager'
op|','
name|'controllers'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'Application'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'['
nl|'\n'
op|'('
string|"r'/servers/?(.*)'"
op|','
name|'RackspaceServerRequestHandler'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'pool'
op|'='
name|'multiprocessing'
op|'.'
name|'Pool'
op|'('
number|'4'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_manager'
op|'='
name|'user_manager'
newline|'\n'
name|'self'
op|'.'
name|'controllers'
op|'='
name|'controllers'
newline|'\n'
nl|'\n'
DECL|class|RackspaceServerRequestHandler
dedent|''
dedent|''
name|'class'
name|'RackspaceServerRequestHandler'
op|'('
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'RequestHandler'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get
indent|'    '
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'controller_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'execute'
op|'('
name|'controller_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'asynchronous'
newline|'\n'
DECL|member|execute
name|'def'
name|'execute'
op|'('
name|'self'
op|','
name|'controller_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'self'
op|'.'
name|'application'
op|'.'
name|'controllers'
op|'['
string|"'Servers'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Obtain the appropriate controller for this request.'
nl|'\n'
comment|'#        try:'
nl|'\n'
comment|'#            controller = self.application.controllers[controller_name]'
nl|'\n'
comment|'#        except KeyError:'
nl|'\n'
comment|"#            self._error('unhandled', 'no controller named %s' % controller_name)"
nl|'\n'
comment|'#            return'
nl|'\n'
comment|'#'
nl|'\n'
name|'args'
op|'='
name|'self'
op|'.'
name|'request'
op|'.'
name|'arguments'
newline|'\n'
name|'logging'
op|'.'
name|'error'
op|'('
string|'"ARGS: %s"'
op|'%'
name|'args'
op|')'
newline|'\n'
nl|'\n'
comment|'# Read request signature.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'signature'
op|'='
name|'args'
op|'.'
name|'pop'
op|'('
string|"'Signature'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'HTTPError'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make a copy of args for authentication and signature verification.'
nl|'\n'
dedent|''
name|'auth_params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'args'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auth_params'
op|'['
name|'key'
op|']'
op|'='
name|'value'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# Get requested action and remove authentication args for final request.'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'action'
op|'='
name|'args'
op|'.'
name|'pop'
op|'('
string|"'Action'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'access'
op|'='
name|'args'
op|'.'
name|'pop'
op|'('
string|"'AWSAccessKeyId'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'args'
op|'.'
name|'pop'
op|'('
string|"'SignatureMethod'"
op|')'
newline|'\n'
name|'args'
op|'.'
name|'pop'
op|'('
string|"'SignatureVersion'"
op|')'
newline|'\n'
name|'args'
op|'.'
name|'pop'
op|'('
string|"'Version'"
op|')'
newline|'\n'
name|'args'
op|'.'
name|'pop'
op|'('
string|"'Timestamp'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'HTTPError'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|'# Authenticate the request.'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'user'
op|','
name|'project'
op|')'
op|'='
name|'users'
op|'.'
name|'UserManager'
op|'.'
name|'instance'
op|'('
op|')'
op|'.'
name|'authenticate'
op|'('
nl|'\n'
name|'access'
op|','
nl|'\n'
name|'signature'
op|','
nl|'\n'
name|'auth_params'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'method'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'path'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Error'
op|','
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Authentication Failure: %s"'
op|'%'
name|'ex'
op|')'
newline|'\n'
name|'raise'
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'HTTPError'
op|'('
number|'403'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_log'
op|'.'
name|'debug'
op|'('
string|"'action: %s'"
op|'%'
name|'action'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'args'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_log'
op|'.'
name|'debug'
op|'('
string|"'arg: %s\\t\\tval: %s'"
op|'%'
op|'('
name|'key'
op|','
name|'value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'request'
op|'='
name|'APIRequest'
op|'('
name|'controller'
op|','
name|'action'
op|')'
newline|'\n'
name|'context'
op|'='
name|'APIRequestContext'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
newline|'\n'
name|'d'
op|'='
name|'request'
op|'.'
name|'send'
op|'('
name|'context'
op|','
op|'**'
name|'args'
op|')'
newline|'\n'
comment|'# d.addCallback(utils.debug)'
nl|'\n'
nl|'\n'
comment|'# TODO: Wrap response in AWS XML format'
nl|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_write_callback'
op|','
name|'self'
op|'.'
name|'_error_callback'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_write_callback
dedent|''
name|'def'
name|'_write_callback'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'set_header'
op|'('
string|"'Content-Type'"
op|','
string|"'text/xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'finish'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_error_callback
dedent|''
name|'def'
name|'_error_callback'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'.'
name|'raiseException'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ApiError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_error'
op|'('
name|'type'
op|'('
name|'ex'
op|')'
op|'.'
name|'__name__'
op|'+'
string|'"."'
op|'+'
name|'ex'
op|'.'
name|'code'
op|','
name|'ex'
op|'.'
name|'message'
op|')'
newline|'\n'
comment|'# TODO(vish): do something more useful with unknown exceptions'
nl|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_error'
op|'('
name|'type'
op|'('
name|'ex'
op|')'
op|'.'
name|'__name__'
op|','
name|'str'
op|'('
name|'ex'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|post
dedent|''
dedent|''
name|'def'
name|'post'
op|'('
name|'self'
op|','
name|'controller_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'execute'
op|'('
name|'controller_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_error
dedent|''
name|'def'
name|'_error'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_status_code'
op|'='
number|'400'
newline|'\n'
name|'self'
op|'.'
name|'set_header'
op|'('
string|"'Content-Type'"
op|','
string|"'text/xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
string|'\'<?xml version="1.0"?>\\n\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
string|"'<Response><Errors><Error><Code>%s</Code>'"
nl|'\n'
string|"'<Message>%s</Message></Error></Errors>'"
nl|'\n'
string|"'<RequestID>?</RequestID></Response>'"
op|'%'
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'finish'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
