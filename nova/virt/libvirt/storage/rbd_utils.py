begin_unit
comment|'# Copyright 2012 Grid Dynamics'
nl|'\n'
comment|'# Copyright 2013 Inktank Storage, Inc.'
nl|'\n'
comment|'# Copyright 2014 Mirantis, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'tpool'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'rados'
newline|'\n'
name|'import'
name|'rbd'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|rados
indent|'    '
name|'rados'
op|'='
name|'None'
newline|'\n'
DECL|variable|rbd
name|'rbd'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_service'
name|'import'
name|'loopingcall'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'excutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'units'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LE'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RBDVolumeProxy
name|'class'
name|'RBDVolumeProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Context manager for dealing with an existing rbd volume.\n\n    This handles connecting to rados and opening an ioctx automatically, and\n    otherwise acts like a librbd Image object.\n\n    The underlying librados client and ioctx can be accessed as the attributes\n    \'client\' and \'ioctx\'.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'driver'
op|','
name|'name'
op|','
name|'pool'
op|'='
name|'None'
op|','
name|'snapshot'
op|'='
name|'None'
op|','
nl|'\n'
name|'read_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'client'
op|','
name|'ioctx'
op|'='
name|'driver'
op|'.'
name|'_connect_to_rados'
op|'('
name|'pool'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'snap_name'
op|'='
name|'snapshot'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
name|'if'
name|'snapshot'
name|'else'
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'rbd'
op|'.'
name|'Image'
op|'('
name|'ioctx'
op|','
name|'name'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
op|','
nl|'\n'
name|'snapshot'
op|'='
name|'snap_name'
op|','
nl|'\n'
name|'read_only'
op|'='
name|'read_only'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"rbd image %s does not exist"'
op|','
name|'name'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'_disconnect_from_rados'
op|'('
name|'client'
op|','
name|'ioctx'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'Error'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_LE'
op|'('
string|'"error opening rbd image %s"'
op|')'
op|','
name|'name'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'_disconnect_from_rados'
op|'('
name|'client'
op|','
name|'ioctx'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'self'
op|'.'
name|'ioctx'
op|'='
name|'ioctx'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
name|'type_'
op|','
name|'value'
op|','
name|'traceback'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'volume'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_disconnect_from_rados'
op|'('
name|'self'
op|'.'
name|'client'
op|','
name|'self'
op|'.'
name|'ioctx'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'attrib'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'volume'
op|','
name|'attrib'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RADOSClient
dedent|''
dedent|''
name|'class'
name|'RADOSClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Context manager to simplify error handling for connecting to ceph."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'driver'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'cluster'
op|','
name|'self'
op|'.'
name|'ioctx'
op|'='
name|'driver'
op|'.'
name|'_connect_to_rados'
op|'('
name|'pool'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
name|'type_'
op|','
name|'value'
op|','
name|'traceback'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_disconnect_from_rados'
op|'('
name|'self'
op|'.'
name|'cluster'
op|','
name|'self'
op|'.'
name|'ioctx'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|features
name|'def'
name|'features'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'features'
op|'='
name|'self'
op|'.'
name|'cluster'
op|'.'
name|'conf_get'
op|'('
string|"'rbd_default_features'"
op|')'
newline|'\n'
name|'if'
op|'('
op|'('
name|'features'
name|'is'
name|'None'
op|')'
name|'or'
op|'('
name|'int'
op|'('
name|'features'
op|')'
op|'=='
number|'0'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'features'
op|'='
name|'rbd'
op|'.'
name|'RBD_FEATURE_LAYERING'
newline|'\n'
dedent|''
name|'return'
name|'int'
op|'('
name|'features'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RBDDriver
dedent|''
dedent|''
name|'class'
name|'RBDDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pool'
op|','
name|'ceph_conf'
op|','
name|'rbd_user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pool'
op|'='
name|'pool'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
comment|'# NOTE(angdraug): rados.Rados fails to connect if ceph_conf is None:'
nl|'\n'
comment|'# https://github.com/ceph/ceph/pull/1787'
nl|'\n'
name|'self'
op|'.'
name|'ceph_conf'
op|'='
name|'ceph_conf'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
name|'if'
name|'ceph_conf'
name|'else'
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'rbd_user'
op|'='
name|'rbd_user'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
name|'if'
name|'rbd_user'
name|'else'
name|'None'
newline|'\n'
name|'if'
name|'rbd'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RuntimeError'
op|'('
name|'_'
op|'('
string|"'rbd python libraries not found'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_connect_to_rados
dedent|''
dedent|''
name|'def'
name|'_connect_to_rados'
op|'('
name|'self'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'client'
op|'='
name|'rados'
op|'.'
name|'Rados'
op|'('
name|'rados_id'
op|'='
name|'self'
op|'.'
name|'rbd_user'
op|','
nl|'\n'
name|'conffile'
op|'='
name|'self'
op|'.'
name|'ceph_conf'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'pool_to_open'
op|'='
name|'pool'
name|'or'
name|'self'
op|'.'
name|'pool'
newline|'\n'
name|'ioctx'
op|'='
name|'client'
op|'.'
name|'open_ioctx'
op|'('
name|'pool_to_open'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'client'
op|','
name|'ioctx'
newline|'\n'
dedent|''
name|'except'
name|'rados'
op|'.'
name|'Error'
op|':'
newline|'\n'
comment|'# shutdown cannot raise an exception'
nl|'\n'
indent|'            '
name|'client'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|_disconnect_from_rados
dedent|''
dedent|''
name|'def'
name|'_disconnect_from_rados'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'ioctx'
op|')'
op|':'
newline|'\n'
comment|'# closing an ioctx cannot raise an exception'
nl|'\n'
indent|'        '
name|'ioctx'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|ceph_args
dedent|''
name|'def'
name|'ceph_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List of command line parameters to be passed to ceph commands to\n           reflect RBDDriver configuration such as RBD user name and location\n           of ceph.conf.\n        """'
newline|'\n'
name|'args'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'rbd_user'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'.'
name|'extend'
op|'('
op|'['
string|"'--id'"
op|','
name|'self'
op|'.'
name|'rbd_user'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'ceph_conf'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'.'
name|'extend'
op|'('
op|'['
string|"'--conf'"
op|','
name|'self'
op|'.'
name|'ceph_conf'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'args'
newline|'\n'
nl|'\n'
DECL|member|get_mon_addrs
dedent|''
name|'def'
name|'get_mon_addrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
string|"'ceph'"
op|','
string|"'mon'"
op|','
string|"'dump'"
op|','
string|"'--format=json'"
op|']'
op|'+'
name|'self'
op|'.'
name|'ceph_args'
op|'('
op|')'
newline|'\n'
name|'out'
op|','
name|'_'
op|'='
name|'utils'
op|'.'
name|'execute'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
name|'lines'
op|'='
name|'out'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
name|'lines'
op|'['
number|'0'
op|']'
op|'.'
name|'startswith'
op|'('
string|"'dumped monmap epoch'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'lines'
op|'='
name|'lines'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'monmap'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'lines'
op|')'
op|')'
newline|'\n'
name|'addrs'
op|'='
op|'['
name|'mon'
op|'['
string|"'addr'"
op|']'
name|'for'
name|'mon'
name|'in'
name|'monmap'
op|'['
string|"'mons'"
op|']'
op|']'
newline|'\n'
name|'hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'ports'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'addr'
name|'in'
name|'addrs'
op|':'
newline|'\n'
indent|'            '
name|'host_port'
op|'='
name|'addr'
op|'['
op|':'
name|'addr'
op|'.'
name|'rindex'
op|'('
string|"'/'"
op|')'
op|']'
newline|'\n'
name|'host'
op|','
name|'port'
op|'='
name|'host_port'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'hosts'
op|'.'
name|'append'
op|'('
name|'host'
op|'.'
name|'strip'
op|'('
string|"'[]'"
op|')'
op|')'
newline|'\n'
name|'ports'
op|'.'
name|'append'
op|'('
name|'port'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'hosts'
op|','
name|'ports'
newline|'\n'
nl|'\n'
DECL|member|parse_url
dedent|''
name|'def'
name|'parse_url'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prefix'
op|'='
string|"'rbd://'"
newline|'\n'
name|'if'
name|'not'
name|'url'
op|'.'
name|'startswith'
op|'('
name|'prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'_'
op|'('
string|"'Not stored in rbd'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'url'
op|','
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'pieces'
op|'='
name|'map'
op|'('
name|'urllib'
op|'.'
name|'unquote'
op|','
name|'url'
op|'['
name|'len'
op|'('
name|'prefix'
op|')'
op|':'
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
name|'if'
string|"''"
name|'in'
name|'pieces'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'_'
op|'('
string|"'Blank components'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'url'
op|','
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'pieces'
op|')'
op|'!='
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'_'
op|'('
string|"'Not an rbd snapshot'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'url'
op|','
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pieces'
newline|'\n'
nl|'\n'
DECL|member|get_fsid
dedent|''
name|'def'
name|'get_fsid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|')'
name|'as'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'client'
op|'.'
name|'cluster'
op|'.'
name|'get_fsid'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_cloneable
dedent|''
dedent|''
name|'def'
name|'is_cloneable'
op|'('
name|'self'
op|','
name|'image_location'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
name|'image_location'
op|'['
string|"'url'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fsid'
op|','
name|'pool'
op|','
name|'image'
op|','
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'parse_url'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageUnacceptable'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'not cloneable: %s'"
op|','
name|'e'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'get_fsid'
op|'('
op|')'
op|'!='
name|'fsid'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
string|"'%s is in a different ceph cluster'"
op|'%'
name|'url'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'image_meta'
op|'.'
name|'get'
op|'('
string|"'disk_format'"
op|')'
op|'!='
string|"'raw'"
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
op|'('
string|'"rbd image clone requires image format to be "'
nl|'\n'
string|'"\'raw\' but image {0} is \'{1}\'"'
op|')'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'url'
op|','
name|'image_meta'
op|'.'
name|'get'
op|'('
string|"'disk_format'"
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
comment|'# check that we can read the image'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'exists'
op|'('
name|'image'
op|','
name|'pool'
op|'='
name|'pool'
op|','
name|'snapshot'
op|'='
name|'snapshot'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'Error'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'Unable to open image %(loc)s: %(err)s'"
op|'%'
nl|'\n'
name|'dict'
op|'('
name|'loc'
op|'='
name|'url'
op|','
name|'err'
op|'='
name|'e'
op|')'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|clone
dedent|''
dedent|''
name|'def'
name|'clone'
op|'('
name|'self'
op|','
name|'image_location'
op|','
name|'dest_name'
op|','
name|'dest_pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_fsid'
op|','
name|'pool'
op|','
name|'image'
op|','
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'parse_url'
op|'('
nl|'\n'
name|'image_location'
op|'['
string|"'url'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'cloning %(pool)s/%(img)s@%(snap)s to '"
nl|'\n'
string|"'%(dest_pool)s/%(dest_name)s'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'pool'
op|'='
name|'pool'
op|','
name|'img'
op|'='
name|'image'
op|','
name|'snap'
op|'='
name|'snapshot'
op|','
nl|'\n'
name|'dest_pool'
op|'='
name|'dest_pool'
op|','
name|'dest_name'
op|'='
name|'dest_name'
op|')'
op|')'
newline|'\n'
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'pool'
op|')'
op|')'
name|'as'
name|'src_client'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|','
name|'dest_pool'
op|')'
name|'as'
name|'dest_client'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'rbd'
op|'.'
name|'RBD'
op|'('
op|')'
op|'.'
name|'clone'
op|'('
name|'src_client'
op|'.'
name|'ioctx'
op|','
nl|'\n'
name|'image'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|','
nl|'\n'
name|'snapshot'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|','
nl|'\n'
name|'dest_client'
op|'.'
name|'ioctx'
op|','
nl|'\n'
name|'str'
op|'('
name|'dest_name'
op|')'
op|','
nl|'\n'
name|'features'
op|'='
name|'src_client'
op|'.'
name|'features'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'PermissionError'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'Forbidden'
op|'('
name|'_'
op|'('
string|"'no write permission on '"
nl|'\n'
string|"'storage pool %s'"
op|')'
op|'%'
name|'dest_pool'
op|')'
newline|'\n'
nl|'\n'
DECL|member|size
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'size'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'name'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'vol'
op|'.'
name|'size'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|resize
dedent|''
dedent|''
name|'def'
name|'resize'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resize RBD volume.\n\n        :name: Name of RBD object\n        :size: New size in bytes\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'resizing rbd image %s to %d'"
op|','
name|'name'
op|','
name|'size'
op|')'
newline|'\n'
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'name'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'vol'
op|'.'
name|'resize'
op|'('
name|'size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parent_info
dedent|''
dedent|''
name|'def'
name|'parent_info'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the pool, image and snapshot name for the parent of an\n        RBD volume.\n\n        :volume: Name of RBD object\n        :pool: Name of pool\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'volume'
op|')'
op|','
name|'pool'
op|'='
name|'pool'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vol'
op|'.'
name|'parent_info'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'_'
op|'('
string|'"no usable parent snapshot "'
nl|'\n'
string|'"for volume %s"'
op|')'
op|'%'
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|flatten
dedent|''
dedent|''
name|'def'
name|'flatten'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""""Flattens" a snapshotted image with the parents\' data,\n        effectively detaching it from the parent.\n\n        :volume: Name of RBD object\n        :pool: Name of pool\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'flattening %(pool)s/%(vol)s'"
op|','
name|'dict'
op|'('
name|'pool'
op|'='
name|'pool'
op|','
name|'vol'
op|'='
name|'volume'
op|')'
op|')'
newline|'\n'
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'volume'
op|')'
op|','
name|'pool'
op|'='
name|'pool'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'flatten'
op|')'
newline|'\n'
nl|'\n'
DECL|member|exists
dedent|''
dedent|''
name|'def'
name|'exists'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'pool'
op|'='
name|'None'
op|','
name|'snapshot'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'name'
op|','
nl|'\n'
name|'pool'
op|'='
name|'pool'
op|','
nl|'\n'
name|'snapshot'
op|'='
name|'snapshot'
op|','
nl|'\n'
name|'read_only'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|remove_image
dedent|''
dedent|''
name|'def'
name|'remove_image'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove RBD volume\n\n        :name: Name of RBD volume\n        """'
newline|'\n'
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'pool'
op|')'
name|'as'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'rbd'
op|'.'
name|'RBD'
op|'('
op|')'
op|'.'
name|'remove'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|"'image %(volume)s in pool %(pool)s can not be '"
nl|'\n'
string|"'found, failed to remove'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'volume'"
op|':'
name|'name'
op|','
string|"'pool'"
op|':'
name|'self'
op|'.'
name|'pool'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageHasSnapshots'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|"'image %(volume)s in pool %(pool)s has '"
nl|'\n'
string|"'snapshots, failed to remove'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'volume'"
op|':'
name|'name'
op|','
string|"'pool'"
op|':'
name|'self'
op|'.'
name|'pool'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|import_image
dedent|''
dedent|''
dedent|''
name|'def'
name|'import_image'
op|'('
name|'self'
op|','
name|'base'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Import RBD volume from image file.\n\n        Uses the command line import instead of librbd since rbd import\n        command detects zeroes to preserve sparseness in the image.\n\n        :base: Path to image file\n        :name: Name of RBD volume\n        """'
newline|'\n'
name|'args'
op|'='
op|'['
string|"'--pool'"
op|','
name|'self'
op|'.'
name|'pool'
op|','
name|'base'
op|','
name|'name'
op|']'
newline|'\n'
comment|'# Image format 2 supports cloning,'
nl|'\n'
comment|'# in stable ceph rbd release default is not 2,'
nl|'\n'
comment|'# we need to use it explicitly.'
nl|'\n'
name|'args'
op|'+='
op|'['
string|"'--image-format=2'"
op|']'
newline|'\n'
name|'args'
op|'+='
name|'self'
op|'.'
name|'ceph_args'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'rbd'"
op|','
string|"'import'"
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_destroy_volume
dedent|''
name|'def'
name|'_destroy_volume'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'volume'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroy an RBD volume, retrying as needed.\n        """'
newline|'\n'
DECL|function|_cleanup_vol
name|'def'
name|'_cleanup_vol'
op|'('
name|'ioctx'
op|','
name|'volume'
op|','
name|'retryctx'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'rbd'
op|'.'
name|'RBD'
op|'('
op|')'
op|'.'
name|'remove'
op|'('
name|'ioctx'
op|','
name|'volume'
op|')'
newline|'\n'
name|'raise'
name|'loopingcall'
op|'.'
name|'LoopingCallDone'
op|'('
name|'retvalue'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rbd'
op|'.'
name|'ImageHasSnapshots'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'remove_snap'
op|'('
name|'volume'
op|','
name|'libvirt_utils'
op|'.'
name|'RESIZE_SNAPSHOT_NAME'
op|','
nl|'\n'
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'rbd'
op|'.'
name|'ImageBusy'
op|','
name|'rbd'
op|'.'
name|'ImageHasSnapshots'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|"'rbd remove %(volume)s in pool %(pool)s '"
nl|'\n'
string|"'failed'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'volume'"
op|':'
name|'volume'
op|','
string|"'pool'"
op|':'
name|'self'
op|'.'
name|'pool'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'retryctx'
op|'['
string|"'retries'"
op|']'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'retryctx'
op|'['
string|"'retries'"
op|']'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'loopingcall'
op|'.'
name|'LoopingCallDone'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): We let it go for ten seconds'
nl|'\n'
dedent|''
dedent|''
name|'retryctx'
op|'='
op|'{'
string|"'retries'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'timer'
op|'='
name|'loopingcall'
op|'.'
name|'FixedIntervalLoopingCall'
op|'('
nl|'\n'
name|'_cleanup_vol'
op|','
name|'client'
op|'.'
name|'ioctx'
op|','
name|'volume'
op|','
name|'retryctx'
op|')'
newline|'\n'
name|'timed_out'
op|'='
name|'timer'
op|'.'
name|'start'
op|'('
name|'interval'
op|'='
number|'1'
op|')'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'timed_out'
op|':'
newline|'\n'
comment|'# NOTE(danms): Run this again to propagate the error, but'
nl|'\n'
comment|"# if it succeeds, don't raise the loopingcall exception"
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'_cleanup_vol'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
name|'volume'
op|','
name|'retryctx'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'loopingcall'
op|'.'
name|'LoopingCallDone'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|cleanup_volumes
dedent|''
dedent|''
dedent|''
name|'def'
name|'cleanup_volumes'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'pool'
op|')'
name|'as'
name|'client'
op|':'
newline|'\n'
nl|'\n'
DECL|function|belongs_to_instance
indent|'            '
name|'def'
name|'belongs_to_instance'
op|'('
name|'disk'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(nic): On revert_resize, the cleanup steps for the root'
nl|'\n'
comment|'# volume are handled with an "rbd snap rollback" command,'
nl|'\n'
comment|'# and none of this is needed (and is, in fact, harmful) so'
nl|'\n'
comment|'# filter out non-ephemerals from the list'
nl|'\n'
indent|'                '
name|'if'
name|'instance'
op|'.'
name|'task_state'
op|'=='
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
name|'disk'
op|'.'
name|'startswith'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|')'
name|'and'
nl|'\n'
name|'disk'
op|'.'
name|'endswith'
op|'('
string|"'disk.local'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'disk'
op|'.'
name|'startswith'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'volumes'
op|'='
name|'rbd'
op|'.'
name|'RBD'
op|'('
op|')'
op|'.'
name|'list'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|')'
newline|'\n'
name|'for'
name|'volume'
name|'in'
name|'filter'
op|'('
name|'belongs_to_instance'
op|','
name|'volumes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_destroy_volume'
op|'('
name|'client'
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_pool_info
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_pool_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|')'
name|'as'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
name|'client'
op|'.'
name|'cluster'
op|'.'
name|'get_cluster_stats'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'total'"
op|':'
name|'stats'
op|'['
string|"'kb'"
op|']'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
string|"'free'"
op|':'
name|'stats'
op|'['
string|"'kb_avail'"
op|']'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
string|"'used'"
op|':'
name|'stats'
op|'['
string|"'kb_used'"
op|']'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_snap
dedent|''
dedent|''
name|'def'
name|'create_snap'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'name'
op|','
name|'pool'
op|'='
name|'None'
op|','
name|'protect'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a snapshot of an RBD volume.\n\n        :volume: Name of RBD object\n        :name: Name of snapshot\n        :pool: Name of pool\n        :protect: Set the snapshot to "protected"\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'creating snapshot(%(snap)s) on rbd image(%(img)s)'"
op|','
nl|'\n'
op|'{'
string|"'snap'"
op|':'
name|'name'
op|','
string|"'img'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'volume'
op|')'
op|','
name|'pool'
op|'='
name|'pool'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'create_snap'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'protect'
name|'and'
name|'not'
name|'vol'
op|'.'
name|'is_protected_snap'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'protect_snap'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_snap
dedent|''
dedent|''
dedent|''
name|'def'
name|'remove_snap'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'name'
op|','
name|'ignore_errors'
op|'='
name|'False'
op|','
name|'pool'
op|'='
name|'None'
op|','
nl|'\n'
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes a snapshot from an RBD volume.\n\n        :volume: Name of RBD object\n        :name: Name of snapshot\n        :ignore_errors: whether or not to log warnings on failures\n        :pool: Name of pool\n        :force: Remove snapshot even if it is protected\n        """'
newline|'\n'
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'volume'
op|')'
op|','
name|'pool'
op|'='
name|'pool'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'in'
op|'['
name|'snap'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
string|"''"
op|')'
name|'for'
name|'snap'
name|'in'
name|'vol'
op|'.'
name|'list_snaps'
op|'('
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vol'
op|'.'
name|'is_protected_snap'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'force'
op|':'
newline|'\n'
indent|'                        '
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'unprotect_snap'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'ignore_errors'
op|':'
newline|'\n'
indent|'                        '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|"'snapshot(%(name)s) on rbd '"
nl|'\n'
string|"'image(%(img)s) is protected, '"
nl|'\n'
string|"'skipping'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
string|"'img'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'removing snapshot(%(name)s) on rbd image(%(img)s)'"
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
string|"'img'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'remove_snap'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'ignore_errors'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|"'no snapshot(%(name)s) found on rbd '"
nl|'\n'
string|"'image(%(img)s)'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
string|"'img'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rollback_to_snap
dedent|''
dedent|''
dedent|''
name|'def'
name|'rollback_to_snap'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Revert an RBD volume to its contents at a snapshot.\n\n        :volume: Name of RBD object\n        :name: Name of snapshot\n        """'
newline|'\n'
name|'with'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|','
name|'volume'
op|')'
name|'as'
name|'vol'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'in'
op|'['
name|'snap'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
string|"''"
op|')'
name|'for'
name|'snap'
name|'in'
name|'vol'
op|'.'
name|'list_snaps'
op|'('
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'rolling back rbd image(%(img)s) to '"
nl|'\n'
string|"'snapshot(%(snap)s)'"
op|','
op|'{'
string|"'snap'"
op|':'
name|'name'
op|','
string|"'img'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'vol'
op|'.'
name|'rollback_to_snap'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|'('
name|'snapshot_id'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroy_volume
dedent|''
dedent|''
dedent|''
name|'def'
name|'destroy_volume'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'pool'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""A one-shot version of cleanup_volumes()\n        """'
newline|'\n'
name|'with'
name|'RADOSClient'
op|'('
name|'self'
op|','
name|'pool'
op|')'
name|'as'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_destroy_volume'
op|'('
name|'client'
op|','
name|'volume'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
