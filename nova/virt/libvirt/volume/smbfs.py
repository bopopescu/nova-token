begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'paths'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'fs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'remotefs'
newline|'\n'
nl|'\n'
DECL|variable|volume_opts
name|'volume_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'smbfs_mount_point_base'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'paths'
op|'.'
name|'state_path_def'
op|'('
string|"'mnt'"
op|')'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Directory where the SMBFS shares are mounted on the '"
nl|'\n'
string|"'compute node'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'smbfs_mount_options'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"''"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Mount options passed to the SMBFS client. See '"
nl|'\n'
string|"'mount.cifs man page for details. Note that the '"
nl|'\n'
string|"'libvirt-qemu uid and gid must be specified.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'volume_opts'
op|','
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|USERNAME_REGEX
name|'USERNAME_REGEX'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'r"(user(?:name)?)=(?:[^ ,]+\\\\)?([^ ,]+)"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtSMBFSVolumeDriver
name|'class'
name|'LibvirtSMBFSVolumeDriver'
op|'('
name|'fs'
op|'.'
name|'LibvirtBaseFileSystemVolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class implements libvirt part of volume driver for SMBFS."""'
newline|'\n'
nl|'\n'
DECL|member|_get_mount_point_base
name|'def'
name|'_get_mount_point_base'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'smbfs_mount_point_base'
newline|'\n'
nl|'\n'
DECL|member|get_config
dedent|''
name|'def'
name|'get_config'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'disk_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns xml for libvirt."""'
newline|'\n'
name|'conf'
op|'='
name|'super'
op|'('
name|'LibvirtSMBFSVolumeDriver'
op|','
nl|'\n'
name|'self'
op|')'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'.'
name|'source_type'
op|'='
string|"'file'"
newline|'\n'
name|'conf'
op|'.'
name|'driver_cache'
op|'='
string|"'writethrough'"
newline|'\n'
name|'conf'
op|'.'
name|'source_path'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'driver_format'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'get'
op|'('
string|"'format'"
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'return'
name|'conf'
newline|'\n'
nl|'\n'
DECL|member|connect_volume
dedent|''
name|'def'
name|'connect_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'disk_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Connect the volume."""'
newline|'\n'
name|'smbfs_share'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'export'"
op|']'
newline|'\n'
name|'mount_path'
op|'='
name|'self'
op|'.'
name|'_get_mount_path'
op|'('
name|'connection_info'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'libvirt_utils'
op|'.'
name|'is_mounted'
op|'('
name|'mount_path'
op|','
name|'smbfs_share'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mount_options'
op|'='
name|'self'
op|'.'
name|'_parse_mount_options'
op|'('
name|'connection_info'
op|')'
newline|'\n'
name|'remotefs'
op|'.'
name|'mount_share'
op|'('
name|'mount_path'
op|','
name|'smbfs_share'
op|','
nl|'\n'
name|'export_type'
op|'='
string|"'cifs'"
op|','
name|'options'
op|'='
name|'mount_options'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'device_path'
op|'='
name|'self'
op|'.'
name|'_get_device_path'
op|'('
name|'connection_info'
op|')'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|'='
name|'device_path'
newline|'\n'
nl|'\n'
DECL|member|disconnect_volume
dedent|''
name|'def'
name|'disconnect_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'disk_dev'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Disconnect the volume."""'
newline|'\n'
name|'smbfs_share'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'export'"
op|']'
newline|'\n'
name|'mount_path'
op|'='
name|'self'
op|'.'
name|'_get_mount_path'
op|'('
name|'connection_info'
op|')'
newline|'\n'
name|'remotefs'
op|'.'
name|'unmount_share'
op|'('
name|'mount_path'
op|','
name|'smbfs_share'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_parse_mount_options
dedent|''
name|'def'
name|'_parse_mount_options'
op|'('
name|'self'
op|','
name|'connection_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mount_options'
op|'='
string|'" "'
op|'.'
name|'join'
op|'('
nl|'\n'
op|'['
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'get'
op|'('
string|"'options'"
op|')'
name|'or'
string|"''"
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'smbfs_mount_options'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'USERNAME_REGEX'
op|'.'
name|'findall'
op|'('
name|'mount_options'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mount_options'
op|'='
name|'mount_options'
op|'+'
string|"' -o username=guest'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Remove the Domain Name from user name'
nl|'\n'
indent|'            '
name|'mount_options'
op|'='
name|'USERNAME_REGEX'
op|'.'
name|'sub'
op|'('
string|"r'\\1=\\2'"
op|','
name|'mount_options'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'mount_options'
op|'.'
name|'strip'
op|'('
string|'", "'
op|')'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
