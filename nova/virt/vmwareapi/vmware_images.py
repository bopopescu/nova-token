begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\r\n'
nl|'\r\n'
comment|'# Copyright (c) 2011 Citrix Systems, Inc.'
nl|'\r\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\r\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\r\n'
comment|'#    a copy of the License at'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\r\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\r\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\r\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\r\n'
comment|'#    under the License.'
nl|'\r\n'
string|'"""\r\nUtility functions for Image transfer.\r\n"""'
newline|'\r\n'
nl|'\r\n'
name|'import'
name|'glance'
op|'.'
name|'client'
newline|'\r\n'
nl|'\r\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\r\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\r\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\r\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'read_write_util'
newline|'\r\n'
nl|'\r\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\r\n'
nl|'\r\n'
DECL|variable|QUEUE_BUFFER_SIZE
name|'QUEUE_BUFFER_SIZE'
op|'='
number|'5'
newline|'\r\n'
DECL|variable|READ_CHUNKSIZE
name|'READ_CHUNKSIZE'
op|'='
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\r\n'
DECL|variable|WRITE_CHUNKSIZE
name|'WRITE_CHUNKSIZE'
op|'='
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\r\n'
nl|'\r\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"nova.virt.vmwareapi.vmware_images"'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|fetch_image
name|'def'
name|'fetch_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Fetch an image for attaching to the newly created VM."""'
newline|'\r\n'
comment|'# Depending upon the image service, make appropriate image service call'
nl|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_glance_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_s3_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_local_image'
newline|'\r\n'
dedent|''
name|'else'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
name|'_'
op|'('
string|'"The Image Service %s is not implemented"'
op|')'
nl|'\r\n'
op|'%'
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\r\n'
dedent|''
name|'return'
name|'func'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|upload_image
dedent|''
name|'def'
name|'upload_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Upload the newly snapshotted VM disk file."""'
newline|'\r\n'
comment|'# Depending upon the image service, make appropriate image service call'
nl|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_glance_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_s3_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_local_image'
newline|'\r\n'
dedent|''
name|'else'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
name|'_'
op|'('
string|'"The Image Service %s is not implemented"'
op|')'
nl|'\r\n'
op|'%'
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\r\n'
dedent|''
name|'return'
name|'func'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_glance_image
dedent|''
name|'def'
name|'_get_glance_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Download image from the glance image server."""'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Downloading image %s from glance image server"'
op|')'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'glance_client'
op|'='
name|'glance'
op|'.'
name|'client'
op|'.'
name|'Client'
op|'('
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
name|'FLAGS'
op|'.'
name|'glance_port'
op|')'
newline|'\r\n'
name|'metadata'
op|','
name|'read_file_handle'
op|'='
name|'glance_client'
op|'.'
name|'get_image'
op|'('
name|'image'
op|')'
newline|'\r\n'
name|'file_size'
op|'='
name|'int'
op|'('
name|'metadata'
op|'['
string|"'size'"
op|']'
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VMWareHTTPWriteFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|','
nl|'\r\n'
name|'file_size'
op|')'
newline|'\r\n'
name|'for'
name|'chunk'
name|'in'
name|'read_file_handle'
op|':'
newline|'\r\n'
indent|'        '
name|'write_file_handle'
op|'.'
name|'write'
op|'('
name|'chunk'
op|')'
newline|'\r\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Downloaded image %s from glance image server"'
op|')'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_s3_image
dedent|''
name|'def'
name|'_get_s3_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Download image from the S3 image server."""'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_local_image
dedent|''
name|'def'
name|'_get_local_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Download image from the local nova compute node."""'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_glance_image
dedent|''
name|'def'
name|'_put_glance_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Upload the snapshotted vm disk file to Glance image server."""'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Uploading image %s to the Glance image server"'
op|')'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VmWareHTTPReadFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|')'
newline|'\r\n'
name|'glance_client'
op|'='
name|'glance'
op|'.'
name|'client'
op|'.'
name|'Client'
op|'('
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
name|'FLAGS'
op|'.'
name|'glance_port'
op|')'
newline|'\r\n'
name|'image_metadata'
op|'='
op|'{'
string|'"is_public"'
op|':'
name|'True'
op|','
nl|'\r\n'
string|'"disk_format"'
op|':'
string|'"vmdk"'
op|','
nl|'\r\n'
string|'"container_format"'
op|':'
string|'"bare"'
op|','
nl|'\r\n'
string|'"type"'
op|':'
string|'"vmdk"'
op|','
nl|'\r\n'
string|'"properties"'
op|':'
op|'{'
string|'"vmware_adaptertype"'
op|':'
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"adapter_type"'
op|')'
op|','
nl|'\r\n'
string|'"vmware_ostype"'
op|':'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"os_type"'
op|')'
op|','
nl|'\r\n'
string|'"vmware_image_version"'
op|':'
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"image_version"'
op|')'
op|'}'
op|'}'
newline|'\r\n'
name|'glance_client'
op|'.'
name|'update_image'
op|'('
name|'image'
op|','
name|'image_meta'
op|'='
name|'image_metadata'
op|','
nl|'\r\n'
name|'image_data'
op|'='
name|'read_file_handle'
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Uploaded image %s to the Glance image server"'
op|')'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_local_image
dedent|''
name|'def'
name|'_put_local_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Upload the snapshotted vm disk file to the local nova compute node."""'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_s3_image
dedent|''
name|'def'
name|'_put_s3_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""Upload the snapshotted vm disk file to S3 image server."""'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|get_vmdk_size_and_properties
dedent|''
name|'def'
name|'get_vmdk_size_and_properties'
op|'('
name|'image'
op|','
name|'instance'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Get size of the vmdk file that is to be downloaded for attach in spawn.\r\n    Need this to create the dummy virtual disk for the meta-data file. The\r\n    geometry of the disk created depends on the size.\r\n    """'
newline|'\r\n'
nl|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Getting image size for the image %s"'
op|')'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'glance_client'
op|'='
name|'glance'
op|'.'
name|'client'
op|'.'
name|'Client'
op|'('
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_port'
op|')'
newline|'\r\n'
name|'meta_data'
op|'='
name|'glance_client'
op|'.'
name|'get_image_meta'
op|'('
name|'image'
op|')'
newline|'\r\n'
name|'size'
op|','
name|'properties'
op|'='
name|'meta_data'
op|'['
string|'"size"'
op|']'
op|','
name|'meta_data'
op|'['
string|'"properties"'
op|']'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got image size of %(size)s for the image %(image)s"'
op|')'
op|'%'
nl|'\r\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\r\n'
name|'return'
name|'size'
op|','
name|'properties'
newline|'\r\n'
dedent|''
endmarker|''
end_unit
