begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\r\n'
nl|'\r\n'
comment|'# Copyright (c) 2011 Citrix Systems, Inc.'
nl|'\r\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\r\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\r\n'
comment|'#    a copy of the License at'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\r\n'
comment|'#'
nl|'\r\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\r\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\r\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\r\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\r\n'
comment|'#    under the License.'
nl|'\r\n'
nl|'\r\n'
name|'import'
name|'time'
newline|'\r\n'
name|'import'
name|'os'
newline|'\r\n'
name|'import'
name|'logging'
newline|'\r\n'
nl|'\r\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\r\n'
nl|'\r\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'read_write_util'
newline|'\r\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'io_util'
newline|'\r\n'
nl|'\r\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\r\n'
nl|'\r\n'
DECL|variable|QUEUE_BUFFER_SIZE
name|'QUEUE_BUFFER_SIZE'
op|'='
number|'5'
newline|'\r\n'
DECL|variable|READ_CHUNKSIZE
name|'READ_CHUNKSIZE'
op|'='
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\r\n'
DECL|variable|WRITE_CHUNKSIZE
name|'WRITE_CHUNKSIZE'
op|'='
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\r\n'
nl|'\r\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"nova.virt.vmwareapi.vmware_images"'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|start_transfer
name|'def'
name|'start_transfer'
op|'('
name|'read_file_handle'
op|','
name|'write_file_handle'
op|','
name|'data_size'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Start the data transfer from the read handle to the write handle.\r\n    """'
newline|'\r\n'
comment|'#The thread safe pipe'
nl|'\r\n'
name|'thread_safe_pipe'
op|'='
name|'io_util'
op|'.'
name|'ThreadSafePipe'
op|'('
name|'QUEUE_BUFFER_SIZE'
op|')'
newline|'\r\n'
comment|'#The read thread'
nl|'\r\n'
name|'read_thread'
op|'='
name|'io_util'
op|'.'
name|'IOThread'
op|'('
name|'read_file_handle'
op|','
name|'thread_safe_pipe'
op|','
nl|'\r\n'
name|'READ_CHUNKSIZE'
op|','
name|'long'
op|'('
name|'data_size'
op|')'
op|')'
newline|'\r\n'
comment|'#The write thread'
nl|'\r\n'
name|'write_thread'
op|'='
name|'io_util'
op|'.'
name|'IOThread'
op|'('
name|'thread_safe_pipe'
op|','
name|'write_file_handle'
op|','
nl|'\r\n'
name|'WRITE_CHUNKSIZE'
op|','
name|'long'
op|'('
name|'data_size'
op|')'
op|')'
newline|'\r\n'
name|'read_thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\r\n'
name|'write_thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Starting image file transfer"'
op|')'
newline|'\r\n'
comment|'#Wait till both the read thread and the write thread are done'
nl|'\r\n'
name|'while'
name|'not'
op|'('
name|'read_thread'
op|'.'
name|'is_done'
op|'('
op|')'
name|'and'
name|'write_thread'
op|'.'
name|'is_done'
op|'('
op|')'
op|')'
op|':'
newline|'\r\n'
indent|'        '
name|'if'
name|'read_thread'
op|'.'
name|'get_error'
op|'('
op|')'
name|'or'
name|'write_thread'
op|'.'
name|'get_error'
op|'('
op|')'
op|':'
newline|'\r\n'
indent|'            '
name|'read_thread'
op|'.'
name|'stop_io_transfer'
op|'('
op|')'
newline|'\r\n'
name|'write_thread'
op|'.'
name|'stop_io_transfer'
op|'('
op|')'
newline|'\r\n'
comment|'# If there was an exception in reading or writing, raise the same.'
nl|'\r\n'
name|'read_excep'
op|'='
name|'read_thread'
op|'.'
name|'get_exception'
op|'('
op|')'
newline|'\r\n'
name|'write_excep'
op|'='
name|'write_thread'
op|'.'
name|'get_exception'
op|'('
op|')'
newline|'\r\n'
name|'if'
name|'read_excep'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\r\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'str'
op|'('
name|'read_excep'
op|')'
op|')'
newline|'\r\n'
name|'raise'
name|'Exception'
op|'('
name|'read_excep'
op|')'
newline|'\r\n'
dedent|''
name|'if'
name|'write_excep'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\r\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'str'
op|'('
name|'write_excep'
op|')'
op|')'
newline|'\r\n'
name|'raise'
name|'Exception'
op|'('
name|'write_excep'
op|')'
newline|'\r\n'
dedent|''
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'2'
op|')'
newline|'\r\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Finished image file transfer and closing the file handles"'
op|')'
newline|'\r\n'
comment|'#Close the file handles'
nl|'\r\n'
name|'read_file_handle'
op|'.'
name|'close'
op|'('
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'.'
name|'close'
op|'('
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|fetch_image
dedent|''
name|'def'
name|'fetch_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Fetch an image for attaching to the newly created VM\r\n    """'
newline|'\r\n'
comment|'#Depending upon the image service, make appropriate image service call'
nl|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_glance_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_s3_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_local_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.FakeImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_get_fake_image'
newline|'\r\n'
dedent|''
name|'else'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
string|'"The Image Service %s is not implemented"'
nl|'\r\n'
op|'%'
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\r\n'
dedent|''
name|'return'
name|'func'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|upload_image
dedent|''
name|'def'
name|'upload_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Upload the newly snapshotted VM disk file.\r\n    """'
newline|'\r\n'
comment|'#Depending upon the image service, make appropriate image service call'
nl|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_glance_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_s3_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_local_image'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.FakeImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'func'
op|'='
name|'_put_fake_image'
newline|'\r\n'
dedent|''
name|'else'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
string|'"The Image Service %s is not implemented"'
nl|'\r\n'
op|'%'
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\r\n'
dedent|''
name|'return'
name|'func'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_glance_image
dedent|''
name|'def'
name|'_get_glance_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Download image from the glance image server.\r\n    """'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Downloading image %s from glance image server"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'GlanceHTTPReadFile'
op|'('
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_port'
op|','
nl|'\r\n'
name|'image'
op|')'
newline|'\r\n'
name|'file_size'
op|'='
name|'read_file_handle'
op|'.'
name|'get_size'
op|'('
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VMWareHTTPWriteFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|','
nl|'\r\n'
name|'file_size'
op|')'
newline|'\r\n'
name|'start_transfer'
op|'('
name|'read_file_handle'
op|','
name|'write_file_handle'
op|','
name|'file_size'
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Downloaded image %s from glance image server"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_s3_image
dedent|''
name|'def'
name|'_get_s3_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Download image from the S3 image server.\r\n    """'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_local_image
dedent|''
name|'def'
name|'_get_local_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Download image from the local nova compute node.\r\n    """'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_get_fake_image
dedent|''
name|'def'
name|'_get_fake_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Download a fake image from the nova local file repository for testing\r\n    purposes\r\n    """'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Downloading image %s from fake image service"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'image'
op|'='
name|'str'
op|'('
name|'image'
op|')'
newline|'\r\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|'"/tmp/vmware-test-images"'
op|','
name|'image'
op|','
name|'image'
op|')'
newline|'\r\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'FakeFileRead'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
name|'file_size'
op|'='
name|'read_file_handle'
op|'.'
name|'get_size'
op|'('
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VMWareHTTPWriteFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|','
nl|'\r\n'
name|'file_size'
op|')'
newline|'\r\n'
name|'start_transfer'
op|'('
name|'read_file_handle'
op|','
name|'write_file_handle'
op|','
name|'file_size'
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Downloaded image %s from fake image service"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_glance_image
dedent|''
name|'def'
name|'_put_glance_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Upload the snapshotted vm disk file to Glance image server\r\n    """'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Uploading image %s to the Glance image server"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VmWareHTTPReadFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|')'
newline|'\r\n'
name|'file_size'
op|'='
name|'read_file_handle'
op|'.'
name|'get_size'
op|'('
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'GlanceHTTPWriteFile'
op|'('
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_port'
op|','
nl|'\r\n'
name|'image'
op|','
nl|'\r\n'
name|'file_size'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"os_type"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"adapter_type"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"image_version"'
op|')'
op|')'
newline|'\r\n'
name|'start_transfer'
op|'('
name|'read_file_handle'
op|','
name|'write_file_handle'
op|','
name|'file_size'
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Uploaded image %s to the Glance image server"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_local_image
dedent|''
name|'def'
name|'_put_local_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Upload the snapshotted vm disk file to the local nova compute node.\r\n    """'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_s3_image
dedent|''
name|'def'
name|'_put_s3_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Upload the snapshotted vm disk file to S3 image server.\r\n    """'
newline|'\r\n'
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|_put_fake_image
dedent|''
name|'def'
name|'_put_fake_image'
op|'('
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Upload a dummy vmdk from the ESX host to the local file repository of\r\n    the nova node for testing purposes\r\n    """'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Uploading image %s to the Fake Image Service"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'VmWareHTTPReadFile'
op|'('
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"data_center_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"datastore_name"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"cookies"'
op|')'
op|','
nl|'\r\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"file_path"'
op|')'
op|')'
newline|'\r\n'
name|'file_size'
op|'='
name|'read_file_handle'
op|'.'
name|'get_size'
op|'('
op|')'
newline|'\r\n'
name|'image'
op|'='
name|'str'
op|'('
name|'image'
op|')'
newline|'\r\n'
name|'image_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|'"/tmp/vmware-test-images"'
op|','
name|'image'
op|')'
newline|'\r\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|'"/tmp/vmware-test-images"'
op|')'
op|':'
newline|'\r\n'
indent|'        '
name|'os'
op|'.'
name|'mkdir'
op|'('
string|'"/tmp/vmware-test-images"'
op|')'
newline|'\r\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'image_dir_path'
op|')'
newline|'\r\n'
dedent|''
name|'else'
op|':'
newline|'\r\n'
indent|'        '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'image_dir_path'
op|')'
op|':'
newline|'\r\n'
indent|'            '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'image_dir_path'
op|')'
newline|'\r\n'
dedent|''
dedent|''
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'image_dir_path'
op|','
name|'image'
op|')'
newline|'\r\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
name|'write_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'FakeFileWrite'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
name|'start_transfer'
op|'('
name|'read_file_handle'
op|','
name|'write_file_handle'
op|','
name|'file_size'
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Uploaded image %s to the Fake Image Service"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
nl|'\r\n'
nl|'\r\n'
DECL|function|get_vmdk_size_and_properties
dedent|''
name|'def'
name|'get_vmdk_size_and_properties'
op|'('
name|'image'
op|','
name|'instance'
op|')'
op|':'
newline|'\r\n'
indent|'    '
string|'"""\r\n    Get size of the vmdk file that is to be downloaded for attach in spawn.\r\n    Need this to create the dummy virtual disk for the meta-data file. The\r\n    geometry of the disk created depends on the size.\r\n    """'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Getting image size for the image %s"'
op|'%'
name|'image'
op|')'
newline|'\r\n'
name|'if'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.glance.GlanceImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'GlanceHTTPReadFile'
op|'('
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
nl|'\r\n'
name|'FLAGS'
op|'.'
name|'glance_port'
op|','
nl|'\r\n'
name|'image'
op|')'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.s3.S3ImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.image.local.LocalImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\r\n'
dedent|''
name|'elif'
name|'FLAGS'
op|'.'
name|'image_service'
op|'=='
string|'"nova.FakeImageService"'
op|':'
newline|'\r\n'
indent|'        '
name|'image'
op|'='
name|'str'
op|'('
name|'image'
op|')'
newline|'\r\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|'"/tmp/vmware-test-images"'
op|','
name|'image'
op|','
name|'image'
op|')'
newline|'\r\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'='
name|'read_write_util'
op|'.'
name|'FakeFileRead'
op|'('
name|'file_path'
op|')'
newline|'\r\n'
dedent|''
name|'size'
op|'='
name|'read_file_handle'
op|'.'
name|'get_size'
op|'('
op|')'
newline|'\r\n'
name|'properties'
op|'='
name|'read_file_handle'
op|'.'
name|'get_image_properties'
op|'('
op|')'
newline|'\r\n'
name|'read_file_handle'
op|'.'
name|'close'
op|'('
op|')'
newline|'\r\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Got image size of %s for the image %s"'
op|'%'
op|'('
name|'size'
op|','
name|'image'
op|')'
op|')'
newline|'\r\n'
name|'return'
name|'size'
op|','
name|'properties'
newline|'\r\n'
dedent|''
endmarker|''
end_unit
