begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# Copyright (c) 2012 VMware, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManagement class for Storage-related functions (attach, detach, etc).\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'exceptions'
name|'as'
name|'oslo_vmw_exceptions'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'vim_util'
name|'as'
name|'vutil'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
op|','
name|'_LI'
op|','
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vim_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vm_util'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareVolumeOps
name|'class'
name|'VMwareVolumeOps'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Management class for Volume-related tasks."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'session'
op|','
name|'cluster'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
name|'self'
op|'.'
name|'_cluster'
op|'='
name|'cluster'
newline|'\n'
nl|'\n'
DECL|member|attach_disk_to_vm
dedent|''
name|'def'
name|'attach_disk_to_vm'
op|'('
name|'self'
op|','
name|'vm_ref'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|','
name|'disk_type'
op|','
name|'vmdk_path'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_size'
op|'='
name|'None'
op|','
name|'linked_clone'
op|'='
name|'False'
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach disk to VM by reconfiguration."""'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'.'
name|'name'
newline|'\n'
name|'client_factory'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
name|'devices'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|'"get_dynamic_property"'
op|','
name|'vm_ref'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
string|'"config.hardware.device"'
op|')'
newline|'\n'
op|'('
name|'controller_key'
op|','
name|'unit_number'
op|','
nl|'\n'
name|'controller_spec'
op|')'
op|'='
name|'vm_util'
op|'.'
name|'allocate_controller_key_and_unit_number'
op|'('
nl|'\n'
name|'client_factory'
op|','
nl|'\n'
name|'devices'
op|','
nl|'\n'
name|'adapter_type'
op|')'
newline|'\n'
nl|'\n'
name|'vmdk_attach_config_spec'
op|'='
name|'vm_util'
op|'.'
name|'get_vmdk_attach_config_spec'
op|'('
nl|'\n'
name|'client_factory'
op|','
name|'disk_type'
op|','
name|'vmdk_path'
op|','
nl|'\n'
name|'disk_size'
op|','
name|'linked_clone'
op|','
name|'controller_key'
op|','
nl|'\n'
name|'unit_number'
op|','
name|'device_name'
op|')'
newline|'\n'
name|'if'
name|'controller_spec'
op|':'
newline|'\n'
indent|'            '
name|'vmdk_attach_config_spec'
op|'.'
name|'deviceChange'
op|'.'
name|'append'
op|'('
name|'controller_spec'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Reconfiguring VM instance %(instance_name)s to attach "'
nl|'\n'
string|'"disk %(vmdk_path)s or device %(device_name)s with type "'
nl|'\n'
string|'"%(disk_type)s"'
op|','
nl|'\n'
op|'{'
string|"'instance_name'"
op|':'
name|'instance_name'
op|','
string|"'vmdk_path'"
op|':'
name|'vmdk_path'
op|','
nl|'\n'
string|"'device_name'"
op|':'
name|'device_name'
op|','
string|"'disk_type'"
op|':'
name|'disk_type'
op|'}'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'reconfigure_vm'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'vm_ref'
op|','
name|'vmdk_attach_config_spec'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Reconfigured VM instance %(instance_name)s to attach "'
nl|'\n'
string|'"disk %(vmdk_path)s or device %(device_name)s with type "'
nl|'\n'
string|'"%(disk_type)s"'
op|','
nl|'\n'
op|'{'
string|"'instance_name'"
op|':'
name|'instance_name'
op|','
string|"'vmdk_path'"
op|':'
name|'vmdk_path'
op|','
nl|'\n'
string|"'device_name'"
op|':'
name|'device_name'
op|','
string|"'disk_type'"
op|':'
name|'disk_type'
op|'}'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_volume_details
dedent|''
name|'def'
name|'_update_volume_details'
op|'('
name|'self'
op|','
name|'vm_ref'
op|','
name|'volume_uuid'
op|','
name|'device_uuid'
op|')'
op|':'
newline|'\n'
comment|'# Store the uuid of the volume_device'
nl|'\n'
indent|'        '
name|'volume_option'
op|'='
string|"'volume-%s'"
op|'%'
name|'volume_uuid'
newline|'\n'
name|'extra_opts'
op|'='
op|'{'
name|'volume_option'
op|':'
name|'device_uuid'
op|'}'
newline|'\n'
nl|'\n'
name|'client_factory'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
name|'extra_config_specs'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_extra_config_spec'
op|'('
nl|'\n'
name|'client_factory'
op|','
name|'extra_opts'
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'reconfigure_vm'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'vm_ref'
op|','
name|'extra_config_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_volume_uuid
dedent|''
name|'def'
name|'_get_volume_uuid'
op|'('
name|'self'
op|','
name|'vm_ref'
op|','
name|'volume_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prop'
op|'='
string|'\'config.extraConfig["volume-%s"]\''
op|'%'
name|'volume_uuid'
newline|'\n'
name|'opt_val'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|"'get_dynamic_property'"
op|','
nl|'\n'
name|'vm_ref'
op|','
string|"'VirtualMachine'"
op|','
nl|'\n'
name|'prop'
op|')'
newline|'\n'
name|'if'
name|'opt_val'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'opt_val'
op|'.'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|detach_disk_from_vm
dedent|''
dedent|''
name|'def'
name|'detach_disk_from_vm'
op|'('
name|'self'
op|','
name|'vm_ref'
op|','
name|'instance'
op|','
name|'device'
op|','
nl|'\n'
name|'destroy_disk'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach disk from VM by reconfiguration."""'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'.'
name|'name'
newline|'\n'
name|'client_factory'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
name|'vmdk_detach_config_spec'
op|'='
name|'vm_util'
op|'.'
name|'get_vmdk_detach_config_spec'
op|'('
nl|'\n'
name|'client_factory'
op|','
name|'device'
op|','
name|'destroy_disk'
op|')'
newline|'\n'
name|'disk_key'
op|'='
name|'device'
op|'.'
name|'key'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Reconfiguring VM instance %(instance_name)s to detach "'
nl|'\n'
string|'"disk %(disk_key)s"'
op|','
nl|'\n'
op|'{'
string|"'instance_name'"
op|':'
name|'instance_name'
op|','
string|"'disk_key'"
op|':'
name|'disk_key'
op|'}'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'reconfigure_vm'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'vm_ref'
op|','
name|'vmdk_detach_config_spec'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Reconfigured VM instance %(instance_name)s to detach "'
nl|'\n'
string|'"disk %(disk_key)s"'
op|','
nl|'\n'
op|'{'
string|"'instance_name'"
op|':'
name|'instance_name'
op|','
string|"'disk_key'"
op|':'
name|'disk_key'
op|'}'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iscsi_get_target
dedent|''
name|'def'
name|'_iscsi_get_target'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the iSCSI Target given a volume info."""'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'host_mor'
op|'='
name|'vm_util'
op|'.'
name|'get_host_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'_cluster'
op|')'
newline|'\n'
nl|'\n'
name|'lst_properties'
op|'='
op|'['
string|'"config.storageDevice.hostBusAdapter"'
op|','
nl|'\n'
string|'"config.storageDevice.scsiTopology"'
op|','
nl|'\n'
string|'"config.storageDevice.scsiLun"'
op|']'
newline|'\n'
name|'prop_dict'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'vim_util'
op|','
string|'"get_dynamic_properties"'
op|','
nl|'\n'
name|'host_mor'
op|','
string|'"HostSystem"'
op|','
name|'lst_properties'
op|')'
newline|'\n'
name|'result'
op|'='
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'hbas_ret'
op|'='
name|'None'
newline|'\n'
name|'scsi_topology'
op|'='
name|'None'
newline|'\n'
name|'scsi_lun_ret'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'prop_dict'
op|':'
newline|'\n'
indent|'            '
name|'hbas_ret'
op|'='
name|'prop_dict'
op|'.'
name|'get'
op|'('
string|"'config.storageDevice.hostBusAdapter'"
op|')'
newline|'\n'
name|'scsi_topology'
op|'='
name|'prop_dict'
op|'.'
name|'get'
op|'('
string|"'config.storageDevice.scsiTopology'"
op|')'
newline|'\n'
name|'scsi_lun_ret'
op|'='
name|'prop_dict'
op|'.'
name|'get'
op|'('
string|"'config.storageDevice.scsiLun'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Meaning there are no host bus adapters on the host'
nl|'\n'
dedent|''
name|'if'
name|'hbas_ret'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'host_hbas'
op|'='
name|'hbas_ret'
op|'.'
name|'HostHostBusAdapter'
newline|'\n'
name|'if'
name|'not'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'hba'
name|'in'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hba'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|'=='
string|"'HostInternetScsiHba'"
op|':'
newline|'\n'
indent|'                '
name|'hba_key'
op|'='
name|'hba'
op|'.'
name|'key'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'scsi_topology'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'host_adapters'
op|'='
name|'scsi_topology'
op|'.'
name|'adapter'
newline|'\n'
name|'if'
name|'not'
name|'host_adapters'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'scsi_lun_key'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'adapter'
name|'in'
name|'host_adapters'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'adapter'
op|'.'
name|'adapter'
op|'=='
name|'hba_key'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'adapter'
op|','
string|"'target'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'target'
name|'in'
name|'adapter'
op|'.'
name|'target'
op|':'
newline|'\n'
indent|'                    '
name|'if'
op|'('
name|'getattr'
op|'('
name|'target'
op|'.'
name|'transport'
op|','
string|"'address'"
op|','
name|'None'
op|')'
name|'and'
nl|'\n'
name|'target'
op|'.'
name|'transport'
op|'.'
name|'address'
op|'['
number|'0'
op|']'
op|'=='
name|'target_portal'
name|'and'
nl|'\n'
name|'target'
op|'.'
name|'transport'
op|'.'
name|'iScsiName'
op|'=='
name|'target_iqn'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'not'
name|'target'
op|'.'
name|'lun'
op|':'
newline|'\n'
indent|'                            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'lun'
name|'in'
name|'target'
op|'.'
name|'lun'
op|':'
newline|'\n'
indent|'                            '
name|'if'
string|"'host.ScsiDisk'"
name|'in'
name|'lun'
op|'.'
name|'scsiLun'
op|':'
newline|'\n'
indent|'                                '
name|'scsi_lun_key'
op|'='
name|'lun'
op|'.'
name|'scsiLun'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'scsi_lun_key'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'scsi_lun_ret'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'host_scsi_luns'
op|'='
name|'scsi_lun_ret'
op|'.'
name|'ScsiLun'
newline|'\n'
name|'if'
name|'not'
name|'host_scsi_luns'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'scsi_lun'
name|'in'
name|'host_scsi_luns'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'scsi_lun'
op|'.'
name|'key'
op|'=='
name|'scsi_lun_key'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
name|'scsi_lun'
op|'.'
name|'deviceName'
op|','
name|'scsi_lun'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_iscsi_add_send_target_host
dedent|''
name|'def'
name|'_iscsi_add_send_target_host'
op|'('
name|'self'
op|','
name|'storage_system_mor'
op|','
name|'hba_device'
op|','
nl|'\n'
name|'target_portal'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Adds the iscsi host to send target host list."""'
newline|'\n'
name|'client_factory'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
name|'send_tgt'
op|'='
name|'client_factory'
op|'.'
name|'create'
op|'('
string|"'ns0:HostInternetScsiHbaSendTarget'"
op|')'
newline|'\n'
op|'('
name|'send_tgt'
op|'.'
name|'address'
op|','
name|'send_tgt'
op|'.'
name|'port'
op|')'
op|'='
name|'target_portal'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Adding iSCSI host %s to send targets"'
op|','
name|'send_tgt'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|','
string|'"AddInternetScsiSendTargets"'
op|','
nl|'\n'
name|'storage_system_mor'
op|','
name|'iScsiHbaDevice'
op|'='
name|'hba_device'
op|','
name|'targets'
op|'='
op|'['
name|'send_tgt'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iscsi_rescan_hba
dedent|''
name|'def'
name|'_iscsi_rescan_hba'
op|'('
name|'self'
op|','
name|'target_portal'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rescan the iSCSI HBA to discover iSCSI targets."""'
newline|'\n'
name|'host_mor'
op|'='
name|'vm_util'
op|'.'
name|'get_host_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'_cluster'
op|')'
newline|'\n'
name|'storage_system_mor'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'vim_util'
op|','
string|'"get_dynamic_property"'
op|','
nl|'\n'
name|'host_mor'
op|','
string|'"HostSystem"'
op|','
nl|'\n'
string|'"configManager.storageSystem"'
op|')'
newline|'\n'
name|'hbas_ret'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'vim_util'
op|','
string|'"get_dynamic_property"'
op|','
nl|'\n'
name|'storage_system_mor'
op|','
string|'"HostStorageSystem"'
op|','
nl|'\n'
string|'"storageDeviceInfo.hostBusAdapter"'
op|')'
newline|'\n'
comment|'# Meaning there are no host bus adapters on the host'
nl|'\n'
name|'if'
name|'hbas_ret'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'host_hbas'
op|'='
name|'hbas_ret'
op|'.'
name|'HostHostBusAdapter'
newline|'\n'
name|'if'
name|'not'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'hba'
name|'in'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hba'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|'=='
string|"'HostInternetScsiHba'"
op|':'
newline|'\n'
indent|'                '
name|'hba_device'
op|'='
name|'hba'
op|'.'
name|'device'
newline|'\n'
name|'if'
name|'target_portal'
op|':'
newline|'\n'
comment|'# Check if iscsi host is already in the send target host'
nl|'\n'
comment|'# list'
nl|'\n'
indent|'                    '
name|'send_targets'
op|'='
name|'getattr'
op|'('
name|'hba'
op|','
string|"'configuredSendTarget'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'send_tgt_portals'
op|'='
op|'['
string|"'%s:%s'"
op|'%'
op|'('
name|'s'
op|'.'
name|'address'
op|','
name|'s'
op|'.'
name|'port'
op|')'
name|'for'
name|'s'
name|'in'
nl|'\n'
name|'send_targets'
op|']'
newline|'\n'
name|'if'
name|'target_portal'
name|'not'
name|'in'
name|'send_tgt_portals'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'_iscsi_add_send_target_host'
op|'('
name|'storage_system_mor'
op|','
nl|'\n'
name|'hba_device'
op|','
nl|'\n'
name|'target_portal'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Rescanning HBA %s"'
op|','
name|'hba_device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|','
nl|'\n'
string|'"RescanHba"'
op|','
name|'storage_system_mor'
op|','
name|'hbaDevice'
op|'='
name|'hba_device'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Rescanned HBA %s "'
op|','
name|'hba_device'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iscsi_discover_target
dedent|''
name|'def'
name|'_iscsi_discover_target'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get iSCSI target, rescanning the HBA if necessary."""'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Discovering iSCSI target %(target_iqn)s from "'
nl|'\n'
string|'"%(target_portal)s."'
op|','
nl|'\n'
op|'{'
string|"'target_iqn'"
op|':'
name|'target_iqn'
op|','
string|"'target_portal'"
op|':'
name|'target_portal'
op|'}'
op|')'
newline|'\n'
name|'device_name'
op|','
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_iscsi_get_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'device_name'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Storage target found. No need to discover"'
op|')'
newline|'\n'
name|'return'
op|'('
name|'device_name'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Rescan iSCSI HBA with iscsi target host'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_iscsi_rescan_hba'
op|'('
name|'target_portal'
op|')'
newline|'\n'
nl|'\n'
comment|'# Find iSCSI Target again'
nl|'\n'
name|'device_name'
op|','
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_iscsi_get_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'device_name'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Discovered iSCSI target %(target_iqn)s from "'
nl|'\n'
string|'"%(target_portal)s."'
op|','
nl|'\n'
op|'{'
string|"'target_iqn'"
op|':'
name|'target_iqn'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
name|'target_portal'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Unable to discovered iSCSI target %(target_iqn)s "'
nl|'\n'
string|'"from %(target_portal)s."'
op|','
nl|'\n'
op|'{'
string|"'target_iqn'"
op|':'
name|'target_iqn'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
name|'target_portal'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'device_name'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iscsi_get_host_iqn
dedent|''
name|'def'
name|'_iscsi_get_host_iqn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the host iSCSI IQN."""'
newline|'\n'
name|'host_mor'
op|'='
name|'vm_util'
op|'.'
name|'get_host_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'_cluster'
op|')'
newline|'\n'
name|'hbas_ret'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'vim_util'
op|','
string|'"get_dynamic_property"'
op|','
nl|'\n'
name|'host_mor'
op|','
string|'"HostSystem"'
op|','
nl|'\n'
string|'"config.storageDevice.hostBusAdapter"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Meaning there are no host bus adapters on the host'
nl|'\n'
name|'if'
name|'hbas_ret'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'host_hbas'
op|'='
name|'hbas_ret'
op|'.'
name|'HostHostBusAdapter'
newline|'\n'
name|'if'
name|'not'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'hba'
name|'in'
name|'host_hbas'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hba'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|'=='
string|"'HostInternetScsiHba'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hba'
op|'.'
name|'iScsiName'
newline|'\n'
nl|'\n'
DECL|member|get_volume_connector
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_volume_connector'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return volume connector information."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'vm_ref'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'iqn'
op|'='
name|'self'
op|'.'
name|'_iscsi_get_host_iqn'
op|'('
op|')'
newline|'\n'
name|'connector'
op|'='
op|'{'
string|"'ip'"
op|':'
name|'CONF'
op|'.'
name|'vmware'
op|'.'
name|'host_ip'
op|','
nl|'\n'
string|"'initiator'"
op|':'
name|'iqn'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'CONF'
op|'.'
name|'vmware'
op|'.'
name|'host_ip'
op|'}'
newline|'\n'
name|'if'
name|'vm_ref'
op|':'
newline|'\n'
indent|'            '
name|'connector'
op|'['
string|"'instance'"
op|']'
op|'='
name|'vm_ref'
op|'.'
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'connector'
newline|'\n'
nl|'\n'
DECL|member|_get_volume_ref
dedent|''
name|'def'
name|'_get_volume_ref'
op|'('
name|'self'
op|','
name|'volume_ref_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the volume moref from the ref name."""'
newline|'\n'
name|'return'
name|'vutil'
op|'.'
name|'get_moref'
op|'('
name|'volume_ref_name'
op|','
string|"'VirtualMachine'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vmdk_base_volume_device
dedent|''
name|'def'
name|'_get_vmdk_base_volume_device'
op|'('
name|'self'
op|','
name|'volume_ref'
op|')'
op|':'
newline|'\n'
comment|'# Get the vmdk file name that the VM is pointing to'
nl|'\n'
indent|'        '
name|'hardware_devices'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|'"get_dynamic_property"'
op|','
name|'volume_ref'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
string|'"config.hardware.device"'
op|')'
newline|'\n'
name|'return'
name|'vm_util'
op|'.'
name|'get_vmdk_volume_disk'
op|'('
name|'hardware_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_attach_volume_vmdk
dedent|''
name|'def'
name|'_attach_volume_vmdk'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach vmdk volume storage to VM instance."""'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"_attach_volume_vmdk: %s"'
op|','
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'volume_ref'
op|'='
name|'self'
op|'.'
name|'_get_volume_ref'
op|'('
name|'data'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get details required for adding disk device such as'
nl|'\n'
comment|'# adapter_type, disk_type'
nl|'\n'
name|'vmdk'
op|'='
name|'vm_util'
op|'.'
name|'get_vmdk_info'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'volume_ref'
op|')'
newline|'\n'
name|'adapter_type'
op|'='
name|'adapter_type'
name|'or'
name|'vmdk'
op|'.'
name|'adapter_type'
newline|'\n'
nl|'\n'
comment|'# IDE does not support disk hotplug'
nl|'\n'
name|'if'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
name|'and'
nl|'\n'
name|'adapter_type'
op|'=='
name|'constants'
op|'.'
name|'ADAPTER_TYPE_IDE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'%s does not support disk hotplug.'"
op|')'
op|'%'
name|'adapter_type'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach the disk to virtual machine instance'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'adapter_type'
op|','
name|'vmdk'
op|'.'
name|'disk_type'
op|','
nl|'\n'
name|'vmdk_path'
op|'='
name|'vmdk'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
comment|'# Store the uuid of the volume_device'
nl|'\n'
name|'self'
op|'.'
name|'_update_volume_details'
op|'('
name|'vm_ref'
op|','
name|'data'
op|'['
string|"'volume_id'"
op|']'
op|','
nl|'\n'
name|'vmdk'
op|'.'
name|'device'
op|'.'
name|'backing'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Attached VMDK: %s"'
op|','
name|'connection_info'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_attach_volume_iscsi
dedent|''
name|'def'
name|'_attach_volume_iscsi'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach iscsi volume storage to VM instance."""'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
comment|'# Attach Volume to VM'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"_attach_volume_iscsi: %s"'
op|','
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Discover iSCSI Target'
nl|'\n'
name|'device_name'
op|'='
name|'self'
op|'.'
name|'_iscsi_discover_target'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'device_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'StorageError'
op|'('
nl|'\n'
name|'reason'
op|'='
name|'_'
op|'('
string|'"Unable to find iSCSI Target"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'adapter_type'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# Get the vmdk file name that the VM is pointing to'
nl|'\n'
indent|'            '
name|'hardware_devices'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
nl|'\n'
name|'vim_util'
op|','
string|'"get_dynamic_property"'
op|','
name|'vm_ref'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
string|'"config.hardware.device"'
op|')'
newline|'\n'
name|'adapter_type'
op|'='
name|'vm_util'
op|'.'
name|'get_scsi_adapter_type'
op|'('
name|'hardware_devices'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|','
string|"'rdmp'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'device_name'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Attached ISCSI: %s"'
op|','
name|'connection_info'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
name|'adapter_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach volume storage to VM instance."""'
newline|'\n'
name|'driver_type'
op|'='
name|'connection_info'
op|'['
string|"'driver_volume_type'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Volume attach. Driver type: %s"'
op|','
name|'driver_type'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'if'
name|'driver_type'
op|'=='
name|'constants'
op|'.'
name|'DISK_FORMAT_VMDK'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_attach_volume_vmdk'
op|'('
name|'connection_info'
op|','
name|'instance'
op|','
name|'adapter_type'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'driver_type'
op|'=='
string|"'iscsi'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_attach_volume_iscsi'
op|'('
name|'connection_info'
op|','
name|'instance'
op|','
name|'adapter_type'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|'('
name|'driver_type'
op|'='
name|'driver_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_relocate_vmdk_volume
dedent|''
dedent|''
name|'def'
name|'_relocate_vmdk_volume'
op|'('
name|'self'
op|','
name|'volume_ref'
op|','
name|'res_pool'
op|','
name|'datastore'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Relocate the volume.\n\n        The move type will be moveAllDiskBackingsAndAllowSharing.\n        """'
newline|'\n'
name|'client_factory'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
name|'spec'
op|'='
name|'vm_util'
op|'.'
name|'relocate_vm_spec'
op|'('
name|'client_factory'
op|','
nl|'\n'
name|'datastore'
op|'='
name|'datastore'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'pool'
op|'='
name|'res_pool'
newline|'\n'
name|'task'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'self'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|','
nl|'\n'
string|'"RelocateVM_Task"'
op|','
name|'volume_ref'
op|','
nl|'\n'
name|'spec'
op|'='
name|'spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_wait_for_task'
op|'('
name|'task'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_host_of_vm
dedent|''
name|'def'
name|'_get_host_of_vm'
op|'('
name|'self'
op|','
name|'vm_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the ESX host of given VM."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
string|"'get_dynamic_property'"
op|','
nl|'\n'
name|'vm_ref'
op|','
string|"'VirtualMachine'"
op|','
nl|'\n'
string|"'runtime'"
op|')'
op|'.'
name|'host'
newline|'\n'
nl|'\n'
DECL|member|_get_res_pool_of_host
dedent|''
name|'def'
name|'_get_res_pool_of_host'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the resource pool of given host\'s cluster."""'
newline|'\n'
comment|'# Get the compute resource, the host belongs to'
nl|'\n'
name|'compute_res'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|"'get_dynamic_property'"
op|','
nl|'\n'
name|'host'
op|','
string|"'HostSystem'"
op|','
nl|'\n'
string|"'parent'"
op|')'
newline|'\n'
comment|'# Get resource pool from the compute resource'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
string|"'get_dynamic_property'"
op|','
nl|'\n'
name|'compute_res'
op|','
name|'compute_res'
op|'.'
name|'_type'
op|','
nl|'\n'
string|"'resourcePool'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_res_pool_of_vm
dedent|''
name|'def'
name|'_get_res_pool_of_vm'
op|'('
name|'self'
op|','
name|'vm_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get resource pool to which the VM belongs."""'
newline|'\n'
comment|'# Get the host, the VM belongs to'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_host_of_vm'
op|'('
name|'vm_ref'
op|')'
newline|'\n'
comment|"# Get the resource pool of host's cluster."
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_res_pool_of_host'
op|'('
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_consolidate_vmdk_volume
dedent|''
name|'def'
name|'_consolidate_vmdk_volume'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vm_ref'
op|','
name|'device'
op|','
name|'volume_ref'
op|','
nl|'\n'
name|'adapter_type'
op|'='
name|'None'
op|','
name|'disk_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Consolidate volume backing VMDK files if needed.\n\n        The volume\'s VMDK file attached to an instance can be moved by SDRS\n        if enabled on the cluster.\n        By this the VMDK files can get copied onto another datastore and the\n        copy on this new location will be the latest version of the VMDK file.\n        So at the time of detach, we need to consolidate the current backing\n        VMDK file with the VMDK file in the new location.\n\n        We need to ensure that the VMDK chain (snapshots) remains intact during\n        the consolidation. SDRS retains the chain when it copies VMDK files\n        over, so for consolidation we relocate the backing with move option\n        as moveAllDiskBackingsAndAllowSharing and then delete the older version\n        of the VMDK file attaching the new version VMDK file.\n\n        In the case of a volume boot the we need to ensure that the volume\n        is on the datastore of the instance.\n        """'
newline|'\n'
nl|'\n'
name|'original_device'
op|'='
name|'self'
op|'.'
name|'_get_vmdk_base_volume_device'
op|'('
name|'volume_ref'
op|')'
newline|'\n'
nl|'\n'
name|'original_device_path'
op|'='
name|'original_device'
op|'.'
name|'backing'
op|'.'
name|'fileName'
newline|'\n'
name|'current_device_path'
op|'='
name|'device'
op|'.'
name|'backing'
op|'.'
name|'fileName'
newline|'\n'
nl|'\n'
name|'if'
name|'original_device_path'
op|'=='
name|'current_device_path'
op|':'
newline|'\n'
comment|'# The volume is not moved from its original location.'
nl|'\n'
comment|'# No consolidation is required.'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"The volume has not been displaced from "'
nl|'\n'
string|'"its original location: %s. No consolidation "'
nl|'\n'
string|'"needed."'
op|','
name|'current_device_path'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
comment|'# The volume has been moved from its original location.'
nl|'\n'
comment|'# Need to consolidate the VMDK files.'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_LI'
op|'('
string|'"The volume\'s backing has been relocated to %s. Need to "'
nl|'\n'
string|'"consolidate backing disk file."'
op|')'
op|','
name|'current_device_path'
op|')'
newline|'\n'
nl|'\n'
comment|'# Pick the host and resource pool on which the instance resides.'
nl|'\n'
comment|'# Move the volume to the datastore where the new VMDK file is present.'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_host_of_vm'
op|'('
name|'vm_ref'
op|')'
newline|'\n'
name|'res_pool'
op|'='
name|'self'
op|'.'
name|'_get_res_pool_of_host'
op|'('
name|'host'
op|')'
newline|'\n'
name|'datastore'
op|'='
name|'device'
op|'.'
name|'backing'
op|'.'
name|'datastore'
newline|'\n'
name|'detached'
op|'='
name|'False'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Relocating volume\'s backing: %(backing)s to resource "'
nl|'\n'
string|'"pool: %(rp)s, datastore: %(ds)s, host: %(host)s."'
op|','
nl|'\n'
op|'{'
string|"'backing'"
op|':'
name|'volume_ref'
op|','
string|"'rp'"
op|':'
name|'res_pool'
op|','
string|"'ds'"
op|':'
name|'datastore'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_relocate_vmdk_volume'
op|'('
name|'volume_ref'
op|','
name|'res_pool'
op|','
name|'datastore'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'oslo_vmw_exceptions'
op|'.'
name|'FileNotFoundException'
op|':'
newline|'\n'
comment|"# Volume's vmdk was moved; remove the device so that we can"
nl|'\n'
comment|'# relocate the volume.'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_LW'
op|'('
string|'"Virtual disk: %s of volume\'s backing not found."'
op|')'
op|','
nl|'\n'
name|'original_device_path'
op|','
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Removing disk device of volume\'s backing and "'
nl|'\n'
string|'"reattempting relocate."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'volume_ref'
op|','
name|'instance'
op|','
name|'original_device'
op|')'
newline|'\n'
name|'detached'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'_relocate_vmdk_volume'
op|'('
name|'volume_ref'
op|','
name|'res_pool'
op|','
name|'datastore'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|"# Volume's backing is relocated now; detach the old vmdk if not done"
nl|'\n'
comment|'# already.'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'detached'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'volume_ref'
op|','
name|'instance'
op|','
name|'original_device'
op|','
nl|'\n'
name|'destroy_disk'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach the current volume to the volume_ref'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'volume_ref'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|','
name|'disk_type'
op|','
nl|'\n'
name|'vmdk_path'
op|'='
name|'current_device_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vmdk_backed_disk_device
dedent|''
name|'def'
name|'_get_vmdk_backed_disk_device'
op|'('
name|'self'
op|','
name|'vm_ref'
op|','
name|'connection_info_data'
op|')'
op|':'
newline|'\n'
comment|'# Get the vmdk file name that the VM is pointing to'
nl|'\n'
indent|'        '
name|'hardware_devices'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|'"get_dynamic_property"'
op|','
name|'vm_ref'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
string|'"config.hardware.device"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get disk uuid'
nl|'\n'
name|'disk_uuid'
op|'='
name|'self'
op|'.'
name|'_get_volume_uuid'
op|'('
name|'vm_ref'
op|','
nl|'\n'
name|'connection_info_data'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'device'
op|'='
name|'vm_util'
op|'.'
name|'get_vmdk_backed_disk_device'
op|'('
name|'hardware_devices'
op|','
nl|'\n'
name|'disk_uuid'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'device'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'StorageError'
op|'('
name|'reason'
op|'='
name|'_'
op|'('
string|'"Unable to find volume"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'device'
newline|'\n'
nl|'\n'
DECL|member|_detach_volume_vmdk
dedent|''
name|'def'
name|'_detach_volume_vmdk'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volume storage to VM instance."""'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
comment|'# Detach Volume from VM'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"_detach_volume_vmdk: %s"'
op|','
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'volume_ref'
op|'='
name|'self'
op|'.'
name|'_get_volume_ref'
op|'('
name|'data'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'device'
op|'='
name|'self'
op|'.'
name|'_get_vmdk_backed_disk_device'
op|'('
name|'vm_ref'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get details required for adding disk device such as'
nl|'\n'
comment|'# adapter_type, disk_type'
nl|'\n'
name|'vmdk'
op|'='
name|'vm_util'
op|'.'
name|'get_vmdk_info'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'volume_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# IDE does not support disk hotplug'
nl|'\n'
name|'if'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
name|'and'
nl|'\n'
name|'vmdk'
op|'.'
name|'adapter_type'
op|'=='
name|'constants'
op|'.'
name|'ADAPTER_TYPE_IDE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'%s does not support disk hotplug.'"
op|')'
op|'%'
name|'vmdk'
op|'.'
name|'adapter_type'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_consolidate_vmdk_volume'
op|'('
name|'instance'
op|','
name|'vm_ref'
op|','
name|'device'
op|','
name|'volume_ref'
op|','
nl|'\n'
name|'adapter_type'
op|'='
name|'vmdk'
op|'.'
name|'adapter_type'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'vmdk'
op|'.'
name|'disk_type'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'device'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Detached VMDK: %s"'
op|','
name|'connection_info'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_detach_volume_iscsi
dedent|''
name|'def'
name|'_detach_volume_iscsi'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volume storage to VM instance."""'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
comment|'# Detach Volume from VM'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"_detach_volume_iscsi: %s"'
op|','
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Discover iSCSI Target'
nl|'\n'
name|'device_name'
op|','
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_iscsi_get_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'device_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'StorageError'
op|'('
nl|'\n'
name|'reason'
op|'='
name|'_'
op|'('
string|'"Unable to find iSCSI Target"'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get the vmdk file name that the VM is pointing to'
nl|'\n'
dedent|''
name|'hardware_devices'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
nl|'\n'
string|'"get_dynamic_property"'
op|','
name|'vm_ref'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
string|'"config.hardware.device"'
op|')'
newline|'\n'
name|'device'
op|'='
name|'vm_util'
op|'.'
name|'get_rdm_disk'
op|'('
name|'hardware_devices'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'if'
name|'device'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'StorageError'
op|'('
name|'reason'
op|'='
name|'_'
op|'('
string|'"Unable to find volume"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'device'
op|','
name|'destroy_disk'
op|'='
name|'True'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Detached ISCSI: %s"'
op|','
name|'connection_info'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volume storage to VM instance."""'
newline|'\n'
name|'driver_type'
op|'='
name|'connection_info'
op|'['
string|"'driver_volume_type'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Volume detach. Driver type: %s"'
op|','
name|'driver_type'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'if'
name|'driver_type'
op|'=='
name|'constants'
op|'.'
name|'DISK_FORMAT_VMDK'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_detach_volume_vmdk'
op|'('
name|'connection_info'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'driver_type'
op|'=='
string|"'iscsi'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_detach_volume_iscsi'
op|'('
name|'connection_info'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|'('
name|'driver_type'
op|'='
name|'driver_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|attach_root_volume
dedent|''
dedent|''
name|'def'
name|'attach_root_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
nl|'\n'
name|'datastore'
op|','
name|'adapter_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach a root volume to the VM instance."""'
newline|'\n'
name|'driver_type'
op|'='
name|'connection_info'
op|'['
string|"'driver_volume_type'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Root volume attach. Driver type: %s"'
op|','
name|'driver_type'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'if'
name|'driver_type'
op|'=='
name|'constants'
op|'.'
name|'DISK_FORMAT_VMDK'
op|':'
newline|'\n'
indent|'            '
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'instance'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
comment|'# Get the volume ref'
nl|'\n'
name|'volume_ref'
op|'='
name|'self'
op|'.'
name|'_get_volume_ref'
op|'('
name|'data'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
comment|'# Pick the resource pool on which the instance resides. Move the'
nl|'\n'
comment|'# volume to the datastore of the instance.'
nl|'\n'
name|'res_pool'
op|'='
name|'self'
op|'.'
name|'_get_res_pool_of_vm'
op|'('
name|'vm_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_relocate_vmdk_volume'
op|'('
name|'volume_ref'
op|','
name|'res_pool'
op|','
name|'datastore'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
name|'instance'
op|','
name|'adapter_type'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
