begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2013 dotCloud, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|statvfs
name|'def'
name|'statvfs'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'docker_path'
op|'='
string|"'/var/lib/docker'"
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'docker_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'docker_path'
op|'='
string|"'/'"
newline|'\n'
dedent|''
name|'return'
name|'os'
op|'.'
name|'statvfs'
op|'('
name|'docker_path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_meminfo
dedent|''
name|'def'
name|'get_meminfo'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'with'
name|'open'
op|'('
string|"'/proc/meminfo'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'f'
op|'.'
name|'readlines'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_disk_usage
dedent|''
dedent|''
name|'def'
name|'get_disk_usage'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# This is the location where Docker stores its containers. It's currently"
nl|'\n'
comment|"# hardcoded in Docker so it's not configurable yet."
nl|'\n'
indent|'    '
name|'st'
op|'='
name|'statvfs'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'total'"
op|':'
name|'st'
op|'.'
name|'f_blocks'
op|'*'
name|'st'
op|'.'
name|'f_frsize'
op|','
nl|'\n'
string|"'available'"
op|':'
name|'st'
op|'.'
name|'f_bavail'
op|'*'
name|'st'
op|'.'
name|'f_frsize'
op|','
nl|'\n'
string|"'used'"
op|':'
op|'('
name|'st'
op|'.'
name|'f_blocks'
op|'-'
name|'st'
op|'.'
name|'f_bfree'
op|')'
op|'*'
name|'st'
op|'.'
name|'f_frsize'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_meminfo
dedent|''
name|'def'
name|'parse_meminfo'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meminfo'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'ln'
name|'in'
name|'get_meminfo'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'parts'
op|'='
name|'ln'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'key'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'value'
op|'='
name|'parts'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'parts'
op|'='
name|'value'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'value'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'value'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'int'
op|'('
name|'parts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'>'
number|'1'
name|'and'
name|'parts'
op|'['
number|'1'
op|']'
op|'=='
string|"'kB'"
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'*='
number|'1024'
newline|'\n'
dedent|''
name|'meminfo'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'meminfo'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_memory_usage
dedent|''
name|'def'
name|'get_memory_usage'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meminfo'
op|'='
name|'parse_meminfo'
op|'('
op|')'
newline|'\n'
name|'total'
op|'='
name|'meminfo'
op|'.'
name|'get'
op|'('
string|"'memtotal'"
op|','
number|'0'
op|')'
newline|'\n'
name|'free'
op|'='
name|'meminfo'
op|'.'
name|'get'
op|'('
string|"'memfree'"
op|','
number|'0'
op|')'
newline|'\n'
name|'free'
op|'+='
name|'meminfo'
op|'.'
name|'get'
op|'('
string|"'cached'"
op|','
number|'0'
op|')'
newline|'\n'
name|'free'
op|'+='
name|'meminfo'
op|'.'
name|'get'
op|'('
string|"'buffers'"
op|','
number|'0'
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'total'"
op|':'
name|'total'
op|','
nl|'\n'
string|"'free'"
op|':'
name|'free'
op|','
nl|'\n'
string|"'used'"
op|':'
name|'total'
op|'-'
name|'free'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_mounts
dedent|''
name|'def'
name|'get_mounts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'with'
name|'open'
op|'('
string|"'/proc/mounts'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'f'
op|'.'
name|'readlines'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_cgroup_devices_path
dedent|''
dedent|''
name|'def'
name|'get_cgroup_devices_path'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'ln'
name|'in'
name|'get_mounts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fields'
op|'='
name|'ln'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'if'
name|'fields'
op|'['
number|'2'
op|']'
op|'=='
string|"'cgroup'"
name|'and'
string|"'devices'"
name|'in'
name|'fields'
op|'['
number|'3'
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fields'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
