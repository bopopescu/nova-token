begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManagement class for basic VM operations.\n"""'
newline|'\n'
name|'import'
name|'multiprocessing'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'baseops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|hyperv_opts
name|'hyperv_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'vswitch_name'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Default vSwitch Name, '"
nl|'\n'
string|"'if none provided first external is used'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'limit_cpu_features'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'required for live migration among '"
nl|'\n'
string|"'hosts with different CPU features'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'hyperv_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMOps
name|'class'
name|'VMOps'
op|'('
name|'baseops'
op|'.'
name|'BaseOps'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'volumeops'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMOps'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vmutils'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'='
name|'volumeops'
newline|'\n'
nl|'\n'
DECL|member|list_instances
dedent|''
name|'def'
name|'list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Return the names of all the instances known to Hyper-V. """'
newline|'\n'
name|'vms'
op|'='
op|'['
name|'v'
op|'.'
name|'ElementName'
nl|'\n'
name|'for'
name|'v'
name|'in'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
op|'['
string|"'ElementName'"
op|']'
op|','
nl|'\n'
name|'Caption'
op|'='
string|'"Virtual Machine"'
op|')'
op|']'
newline|'\n'
name|'return'
name|'vms'
newline|'\n'
nl|'\n'
DECL|member|list_instances_detail
dedent|''
name|'def'
name|'list_instances_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_infos'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'instance_name'
name|'in'
name|'self'
op|'.'
name|'list_instances'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
name|'instance_name'
op|')'
newline|'\n'
name|'instance_info'
op|'='
name|'driver'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'instance_name'
op|','
name|'int'
op|'('
name|'info'
op|'['
string|"'state'"
op|']'
op|')'
op|')'
newline|'\n'
name|'instance_infos'
op|'.'
name|'append'
op|'('
name|'instance_info'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'instance_infos'
newline|'\n'
nl|'\n'
DECL|member|get_info
dedent|''
name|'def'
name|'get_info'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get information about the VM"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"get_info called for instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_info'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_info
dedent|''
name|'def'
name|'_get_info'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'lookup'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'vm'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance'
op|'='
name|'instance_name'
op|')'
newline|'\n'
dedent|''
name|'vm'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'instance_name'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_association_class'
op|'='
string|"'Msvm_SettingsDefineState'"
op|','
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'settings_paths'
op|'='
op|'['
name|'v'
op|'.'
name|'path_'
op|'('
op|')'
name|'for'
name|'v'
name|'in'
name|'vmsettings'
op|']'
newline|'\n'
comment|'#See http://msdn.microsoft.com/en-us/library/cc160706%28VS.85%29.aspx'
nl|'\n'
name|'summary_info'
op|'='
name|'vs_man_svc'
op|'.'
name|'GetSummaryInformation'
op|'('
nl|'\n'
op|'['
name|'constants'
op|'.'
name|'VM_SUMMARY_NUM_PROCS'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'VM_SUMMARY_ENABLED_STATE'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'VM_SUMMARY_MEMORY_USAGE'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'VM_SUMMARY_UPTIME'
op|']'
op|','
nl|'\n'
name|'settings_paths'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'info'
op|'='
name|'summary_info'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"hyperv vm state: %s"'
op|')'
op|','
name|'info'
op|'.'
name|'EnabledState'
op|')'
newline|'\n'
name|'state'
op|'='
name|'str'
op|'('
name|'constants'
op|'.'
name|'HYPERV_POWER_STATE'
op|'['
name|'info'
op|'.'
name|'EnabledState'
op|']'
op|')'
newline|'\n'
name|'memusage'
op|'='
name|'str'
op|'('
name|'info'
op|'.'
name|'MemoryUsage'
op|')'
newline|'\n'
name|'numprocs'
op|'='
name|'str'
op|'('
name|'info'
op|'.'
name|'NumberOfProcessors'
op|')'
newline|'\n'
name|'uptime'
op|'='
name|'str'
op|'('
name|'info'
op|'.'
name|'UpTime'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got Info for vm %(instance_name)s: state=%(state)s,"'
nl|'\n'
string|'" mem=%(memusage)s, num_cpu=%(numprocs)s,"'
nl|'\n'
string|'" uptime=%(uptime)s"'
op|')'
op|','
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'state'"
op|':'
name|'state'
op|','
nl|'\n'
string|"'max_mem'"
op|':'
name|'info'
op|'.'
name|'MemoryUsage'
op|','
nl|'\n'
string|"'mem'"
op|':'
name|'info'
op|'.'
name|'MemoryUsage'
op|','
nl|'\n'
string|"'num_cpu'"
op|':'
name|'info'
op|'.'
name|'NumberOfProcessors'
op|','
nl|'\n'
string|"'cpu_time'"
op|':'
name|'info'
op|'.'
name|'UpTime'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|spawn
dedent|''
name|'def'
name|'spawn'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Create a new VM and start it."""'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'lookup'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'vm'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceExists'
op|'('
name|'name'
op|'='
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ebs_root'
op|'='
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'volume_in_mapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'get_default_root_device'
op|'('
op|')'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
comment|'#If is not a boot from volume spawn'
nl|'\n'
name|'if'
name|'not'
op|'('
name|'ebs_root'
op|')'
op|':'
newline|'\n'
comment|'#Fetch the file, assume it is a VHD file.'
nl|'\n'
indent|'            '
name|'vhdfile'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'get_vhd_path'
op|'('
name|'instance_name'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_cache_image'
op|'('
name|'fn'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'fetch_image'
op|','
nl|'\n'
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'target'
op|'='
name|'vhdfile'
op|','
nl|'\n'
name|'fname'
op|'='
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|','
nl|'\n'
name|'user'
op|'='
name|'instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'project'
op|'='
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'cow'
op|'='
name|'FLAGS'
op|'.'
name|'use_cow_images'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exn'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'cache image failed: %s'"
op|')'
op|','
name|'exn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'ebs_root'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_create_disk'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'vhdfile'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'attach_boot_volume'
op|'('
name|'block_device_info'
op|','
nl|'\n'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
comment|'#A SCSI controller for volumes connection is created'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_scsi_controller'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'vif'
name|'in'
name|'network_info'
op|':'
newline|'\n'
indent|'                '
name|'mac_address'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_nic'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'mac_address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Starting VM %s '"
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
string|"'Enabled'"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Started VM %s '"
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exn'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'spawn vm failed: %s'"
op|')'
op|','
name|'exn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'raise'
name|'exn'
newline|'\n'
nl|'\n'
DECL|member|_create_vm
dedent|''
dedent|''
name|'def'
name|'_create_vm'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a VM but don\'t start it.  """'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'vs_gs_data'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSystemGlobalSettingData'
op|'.'
name|'new'
op|'('
op|')'
newline|'\n'
name|'vs_gs_data'
op|'.'
name|'ElementName'
op|'='
name|'instance_name'
newline|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'DefineVirtualSystem'
op|'('
nl|'\n'
op|'['
op|']'
op|','
name|'None'
op|','
name|'vs_gs_data'
op|'.'
name|'GetText_'
op|'('
number|'1'
op|')'
op|')'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Failed to create VM %s'"
op|')'
op|'%'
nl|'\n'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Created VM %s...'"
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'instance_name'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'vmsetting'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'vmsettings'
nl|'\n'
name|'if'
name|'s'
op|'.'
name|'SettingType'
op|'=='
number|'3'
op|']'
op|'['
number|'0'
op|']'
comment|'# avoid snapshots'
newline|'\n'
name|'memsetting'
op|'='
name|'vmsetting'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_MemorySettingData'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#No Dynamic Memory, so reservation, limit and quantity are identical.'
nl|'\n'
name|'mem'
op|'='
name|'long'
op|'('
name|'str'
op|'('
name|'instance'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|')'
newline|'\n'
name|'memsetting'
op|'.'
name|'VirtualQuantity'
op|'='
name|'mem'
newline|'\n'
name|'memsetting'
op|'.'
name|'Reservation'
op|'='
name|'mem'
newline|'\n'
name|'memsetting'
op|'.'
name|'Limit'
op|'='
name|'mem'
newline|'\n'
nl|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'ModifyVirtualSystemResources'
op|'('
nl|'\n'
name|'vm'
op|'.'
name|'path_'
op|'('
op|')'
op|','
op|'['
name|'memsetting'
op|'.'
name|'GetText_'
op|'('
number|'1'
op|')'
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Set memory for vm %s...'"
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'procsetting'
op|'='
name|'vmsetting'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_ProcessorSettingData'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vcpus'
op|'='
name|'long'
op|'('
name|'instance'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'procsetting'
op|'.'
name|'VirtualQuantity'
op|'='
name|'vcpus'
newline|'\n'
name|'procsetting'
op|'.'
name|'Reservation'
op|'='
name|'vcpus'
newline|'\n'
name|'procsetting'
op|'.'
name|'Limit'
op|'='
number|'100000'
comment|'# static assignment to 100%'
newline|'\n'
nl|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'limit_cpu_features'
op|':'
newline|'\n'
indent|'            '
name|'procsetting'
op|'.'
name|'LimitProcessorFeatures'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'ModifyVirtualSystemResources'
op|'('
nl|'\n'
name|'vm'
op|'.'
name|'path_'
op|'('
op|')'
op|','
op|'['
name|'procsetting'
op|'.'
name|'GetText_'
op|'('
number|'1'
op|')'
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Set vcpus for vm %s...'"
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_scsi_controller
dedent|''
name|'def'
name|'_create_scsi_controller'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Create an iscsi controller ready to mount volumes """'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating a scsi controller for %(vm_name)s for volume '"
nl|'\n'
string|"'attaching'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'MSVM_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
newline|'\n'
name|'scsicontrldefault'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT * FROM Msvm_ResourceAllocationSettingData \\\n                WHERE ResourceSubType = \'Microsoft Synthetic SCSI Controller\'\\\n                AND InstanceID LIKE \'%Default%\'"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'scsicontrldefault'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Controller not found'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'scsicontrl'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'clone_wmi_obj'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
string|"'Msvm_ResourceAllocationSettingData'"
op|','
name|'scsicontrldefault'
op|')'
newline|'\n'
name|'scsicontrl'
op|'.'
name|'VirtualSystemIdentifiers'
op|'='
op|'['
string|"'{'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|'+'
string|"'}'"
op|']'
newline|'\n'
name|'scsiresource'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'add_virt_resource'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
name|'scsicontrl'
op|','
name|'vm'
op|')'
newline|'\n'
name|'if'
name|'scsiresource'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Failed to add scsi controller to VM %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_disk
dedent|''
dedent|''
name|'def'
name|'_create_disk'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'vhdfile'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a disk and attach it to the vm"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating disk for %(vm_name)s by attaching'"
nl|'\n'
string|"' disk file %(vhdfile)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
comment|'#Find the IDE controller for the vm.'
nl|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'MSVM_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'rasds'
op|'='
name|'vmsettings'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'MSVM_ResourceAllocationSettingData'"
op|')'
newline|'\n'
name|'ctrller'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Emulated IDE Controller'"
nl|'\n'
name|'and'
name|'r'
op|'.'
name|'Address'
op|'=='
string|'"0"'
op|']'
newline|'\n'
comment|'#Find the default disk drive object for the vm and clone it.'
nl|'\n'
name|'diskdflt'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT * FROM Msvm_ResourceAllocationSettingData \\\n            WHERE ResourceSubType LIKE \'Microsoft Synthetic Disk Drive\'\\\n            AND InstanceID LIKE \'%Default%\'"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'diskdrive'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'clone_wmi_obj'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
string|"'Msvm_ResourceAllocationSettingData'"
op|','
name|'diskdflt'
op|')'
newline|'\n'
comment|'#Set the IDE ctrller as parent.'
nl|'\n'
name|'diskdrive'
op|'.'
name|'Parent'
op|'='
name|'ctrller'
op|'['
number|'0'
op|']'
op|'.'
name|'path_'
op|'('
op|')'
newline|'\n'
name|'diskdrive'
op|'.'
name|'Address'
op|'='
number|'0'
newline|'\n'
comment|'#Add the cloned disk drive object to the vm.'
nl|'\n'
name|'new_resources'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'add_virt_resource'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
name|'diskdrive'
op|','
name|'vm'
op|')'
newline|'\n'
name|'if'
name|'new_resources'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Failed to add diskdrive to VM %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'diskdrive_path'
op|'='
name|'new_resources'
op|'['
number|'0'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'New disk drive path is %s'"
op|')'
op|','
name|'diskdrive_path'
op|')'
newline|'\n'
comment|'#Find the default VHD disk object.'
nl|'\n'
name|'vhddefault'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT * FROM Msvm_ResourceAllocationSettingData \\\n                 WHERE ResourceSubType LIKE \'Microsoft Virtual Hard Disk\' AND \\\n                 InstanceID LIKE \'%Default%\' "'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'#Clone the default and point it to the image file.'
nl|'\n'
name|'vhddisk'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'clone_wmi_obj'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
string|"'Msvm_ResourceAllocationSettingData'"
op|','
name|'vhddefault'
op|')'
newline|'\n'
comment|'#Set the new drive as the parent.'
nl|'\n'
name|'vhddisk'
op|'.'
name|'Parent'
op|'='
name|'diskdrive_path'
newline|'\n'
name|'vhddisk'
op|'.'
name|'Connection'
op|'='
op|'['
name|'vhdfile'
op|']'
newline|'\n'
nl|'\n'
comment|'#Add the new vhd object as a virtual hard disk to the vm.'
nl|'\n'
name|'new_resources'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'add_virt_resource'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
name|'vhddisk'
op|','
name|'vm'
op|')'
newline|'\n'
name|'if'
name|'new_resources'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Failed to add vhd file to VM %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Created disk for %s'"
op|')'
op|','
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_nic
dedent|''
name|'def'
name|'_create_nic'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'mac'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a (synthetic) nic and attach it to the vm"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating nic for %s '"
op|')'
op|','
name|'vm_name'
op|')'
newline|'\n'
comment|'#Find the vswitch that is connected to the physical nic.'
nl|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'extswitch'
op|'='
name|'self'
op|'.'
name|'_find_external_network'
op|'('
op|')'
newline|'\n'
name|'if'
name|'extswitch'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Cannot find vSwitch'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vm'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
newline|'\n'
name|'switch_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitchManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#Find the default nic and clone it to create a new nic for the vm.'
nl|'\n'
comment|'#Use Msvm_SyntheticEthernetPortSettingData for Windows or Linux with'
nl|'\n'
comment|'#Linux Integration Components installed.'
nl|'\n'
name|'syntheticnics_data'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_SyntheticEthernetPortSettingData'
op|'('
op|')'
newline|'\n'
name|'default_nic_data'
op|'='
op|'['
name|'n'
name|'for'
name|'n'
name|'in'
name|'syntheticnics_data'
nl|'\n'
name|'if'
name|'n'
op|'.'
name|'InstanceID'
op|'.'
name|'rfind'
op|'('
string|"'Default'"
op|')'
op|'>'
number|'0'
op|']'
newline|'\n'
name|'new_nic_data'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'clone_wmi_obj'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
string|"'Msvm_SyntheticEthernetPortSettingData'"
op|','
nl|'\n'
name|'default_nic_data'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
comment|'#Create a port on the vswitch.'
nl|'\n'
op|'('
name|'new_port'
op|','
name|'ret_val'
op|')'
op|'='
name|'switch_svc'
op|'.'
name|'CreateSwitchPort'
op|'('
nl|'\n'
name|'Name'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'FriendlyName'
op|'='
name|'vm_name'
op|','
nl|'\n'
name|'ScopeOfResidence'
op|'='
string|'""'
op|','
nl|'\n'
name|'VirtualSwitch'
op|'='
name|'extswitch'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Failed creating a port on the external vswitch'"
op|')'
op|')'
newline|'\n'
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Failed creating port for %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'ext_path'
op|'='
name|'extswitch'
op|'.'
name|'path_'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Created switch port %(vm_name)s on switch %(ext_path)s"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
comment|'#Connect the new nic to the new port.'
nl|'\n'
name|'new_nic_data'
op|'.'
name|'Connection'
op|'='
op|'['
name|'new_port'
op|']'
newline|'\n'
name|'new_nic_data'
op|'.'
name|'ElementName'
op|'='
name|'vm_name'
op|'+'
string|"' nic'"
newline|'\n'
name|'new_nic_data'
op|'.'
name|'Address'
op|'='
name|'mac'
newline|'\n'
name|'new_nic_data'
op|'.'
name|'StaticMacAddress'
op|'='
string|"'True'"
newline|'\n'
name|'new_nic_data'
op|'.'
name|'VirtualSystemIdentifiers'
op|'='
op|'['
string|"'{'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|'+'
string|"'}'"
op|']'
newline|'\n'
comment|'#Add the new nic to the vm.'
nl|'\n'
name|'new_resources'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'add_virt_resource'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
nl|'\n'
name|'new_nic_data'
op|','
name|'vm'
op|')'
newline|'\n'
name|'if'
name|'new_resources'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Failed to add nic to VM %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Created nic for %s "'
op|')'
op|','
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_find_external_network
dedent|''
name|'def'
name|'_find_external_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Find the vswitch that is connected to the physical nic.\n           Assumes only one physical nic on the host\n        """'
newline|'\n'
comment|'#If there are no physical nics connected to networks, return.'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Attempting to bind NIC to %s "'
op|')'
nl|'\n'
op|'%'
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Attempting to bind NIC to %s "'
op|')'
nl|'\n'
op|'%'
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'bound'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitch'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"No vSwitch specified, attaching to default"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ExternalEthernetPort'
op|'('
name|'IsBound'
op|'='
string|"'TRUE'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'bound'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitch'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'FLAGS'
op|'.'
name|'vswitch_name'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_SwitchPort'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSwitch'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ExternalEthernetPort'
op|'('
name|'IsBound'
op|'='
string|"'TRUE'"
op|')'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_SwitchPort'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSwitch'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|reboot
dedent|''
dedent|''
name|'def'
name|'reboot'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'reboot_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_name'
op|'='
name|'instance'
op|'['
string|'"name"'
op|']'
newline|'\n'
string|'"""Reboot the specified instance."""'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'lookup'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'vm'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'['
string|'"id"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance_name'
op|','
string|"'Reboot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroy
dedent|''
name|'def'
name|'destroy'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|'='
name|'None'
op|','
name|'cleanup'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroy the VM. Also destroy the associated VHD disk files"""'
newline|'\n'
name|'instance_name'
op|'='
name|'instance'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got request to destroy vm %s"'
op|')'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'lookup'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'vm'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'vm'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'instance_name'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#Stop the VM first.'
nl|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance_name'
op|','
string|"'Disabled'"
op|')'
newline|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'rasds'
op|'='
name|'vmsettings'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'MSVM_ResourceAllocationSettingData'"
op|')'
newline|'\n'
name|'disks'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Virtual Hard Disk'"
op|']'
newline|'\n'
name|'disk_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'volumes'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Physical Disk Drive'"
op|']'
newline|'\n'
name|'volumes_drives_list'
op|'='
op|'['
op|']'
newline|'\n'
comment|'#collect the volumes information before destroying the VM.'
nl|'\n'
name|'for'
name|'volume'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'hostResources'
op|'='
name|'volume'
op|'.'
name|'HostResource'
newline|'\n'
name|'drive_path'
op|'='
name|'hostResources'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#Appending the Msvm_Disk path'
nl|'\n'
name|'volumes_drives_list'
op|'.'
name|'append'
op|'('
name|'drive_path'
op|')'
newline|'\n'
comment|'#Collect disk file information before destroying the VM.'
nl|'\n'
dedent|''
name|'for'
name|'disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'disk_files'
op|'.'
name|'extend'
op|'('
op|'['
name|'c'
name|'for'
name|'c'
name|'in'
name|'disk'
op|'.'
name|'Connection'
op|']'
op|')'
newline|'\n'
comment|'#Nuke the VM. Does not destroy disks.'
nl|'\n'
dedent|''
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'DestroyVirtualSystem'
op|'('
name|'vm'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Failed to destroy vm %s'"
op|')'
op|'%'
nl|'\n'
name|'instance_name'
op|')'
newline|'\n'
comment|'#Disconnect volumes'
nl|'\n'
dedent|''
name|'for'
name|'volume_drive'
name|'in'
name|'volumes_drives_list'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'disconnect_volume'
op|'('
name|'volume_drive'
op|')'
newline|'\n'
comment|'#Delete associated vhd disk files.'
nl|'\n'
dedent|''
name|'for'
name|'disk'
name|'in'
name|'disk_files'
op|':'
newline|'\n'
indent|'            '
name|'vhdfile'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from CIM_DataFile where Name = \'"'
op|'+'
nl|'\n'
name|'disk'
op|'.'
name|'replace'
op|'('
string|'"\'"'
op|','
string|'"\'\'"'
op|')'
op|'+'
string|'"\'"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Del: disk %(vhdfile)s vm %(instance_name)s"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'vhdfile'
op|'.'
name|'Delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|pause
dedent|''
dedent|''
name|'def'
name|'pause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pause VM instance."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Pause instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Paused'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|unpause
dedent|''
name|'def'
name|'unpause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unpause paused VM instance."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Unpause instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Enabled'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|suspend
dedent|''
name|'def'
name|'suspend'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Suspend the specified instance."""'
newline|'\n'
name|'print'
name|'instance'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Suspend instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Suspended'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resume the suspended VM instance."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Resume instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Enabled'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_off
dedent|''
name|'def'
name|'power_off'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power off the specified instance."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Power off instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Disabled'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_on
dedent|''
name|'def'
name|'power_on'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power on the specified instance"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Power on instance"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
string|"'Enabled'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_vm_state
dedent|''
name|'def'
name|'_set_vm_state'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'req_state'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the desired state of the VM"""'
newline|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'vms'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
op|'.'
name|'RequestStateChange'
op|'('
nl|'\n'
name|'constants'
op|'.'
name|'REQ_POWER_STATE'
op|'['
name|'req_state'
op|']'
op|')'
newline|'\n'
name|'success'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'32775'
op|':'
newline|'\n'
comment|'#Invalid state for current operation. Typically means it is'
nl|'\n'
comment|'#already in the state requested'
nl|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Successfully changed vm state of %(vm_name)s"'
nl|'\n'
string|'" to %(req_state)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Failed to change vm state of %(vm_name)s"'
nl|'\n'
string|'" to %(req_state)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_total
dedent|''
dedent|''
name|'def'
name|'_get_vcpu_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get vcpu number of physical computer.\n        :returns: the number of cpu core.\n        """'
newline|'\n'
comment|'# On certain platforms, this will raise a NotImplementedError.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'multiprocessing'
op|'.'
name|'cpu_count'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Cannot get the number of cpu, because this "'
nl|'\n'
string|'"function is not implemented for this platform. "'
nl|'\n'
string|'"This error can be safely ignored for now."'
op|')'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_memory_mb_total
dedent|''
dedent|''
name|'def'
name|'_get_memory_mb_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the total memory size(MB) of physical computer.\n        :returns: the total amount of memory(MB).\n        """'
newline|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT TotalVisibleMemorySize FROM win32_operatingsystem"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'TotalVisibleMemorySize'
newline|'\n'
name|'total_mb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
number|'1024'
newline|'\n'
name|'return'
name|'total_mb'
newline|'\n'
nl|'\n'
DECL|member|_get_local_gb_total
dedent|''
name|'def'
name|'_get_local_gb_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the total hdd size(GB) of physical computer.\n        :returns:\n            The total amount of HDD(GB).\n            Note that this value shows a partition where\n            NOVA-INST-DIR/instances mounts.\n        """'
newline|'\n'
comment|'#TODO(jordanrinke): This binds to C only right now,'
nl|'\n'
comment|'#need to bind to instance dir'
nl|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT Size FROM win32_logicaldisk WHERE DriveType=3"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'Size'
newline|'\n'
name|'total_gb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
name|'return'
name|'total_gb'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_used
dedent|''
name|'def'
name|'_get_vcpu_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Get vcpu usage number of physical computer.\n        :returns: The total number of vcpu that currently used.\n        """'
newline|'\n'
comment|'#TODO(jordanrinke) figure out a way to count assigned VCPUs'
nl|'\n'
name|'total_vcpu'
op|'='
number|'0'
newline|'\n'
name|'return'
name|'total_vcpu'
newline|'\n'
nl|'\n'
DECL|member|_get_memory_mb_used
dedent|''
name|'def'
name|'_get_memory_mb_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the free memory size(MB) of physical computer.\n        :returns: the total usage of memory(MB).\n        """'
newline|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT FreePhysicalMemory FROM win32_operatingsystem"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'FreePhysicalMemory'
newline|'\n'
name|'total_mb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
number|'1024'
newline|'\n'
nl|'\n'
name|'return'
name|'total_mb'
newline|'\n'
nl|'\n'
DECL|member|_get_local_gb_used
dedent|''
name|'def'
name|'_get_local_gb_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the free hdd size(GB) of physical computer.\n        :returns:\n           The total usage of HDD(GB).\n           Note that this value shows a partition where\n           NOVA-INST-DIR/instances mounts.\n        """'
newline|'\n'
comment|'#TODO(jordanrinke): This binds to C only right now,'
nl|'\n'
comment|'#need to bind to instance dir'
nl|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT FreeSpace FROM win32_logicaldisk WHERE DriveType=3"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'FreeSpace'
newline|'\n'
name|'total_gb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
name|'return'
name|'total_gb'
newline|'\n'
nl|'\n'
DECL|member|_get_hypervisor_version
dedent|''
name|'def'
name|'_get_hypervisor_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get hypervisor version.\n        :returns: hypervisor version (ex. 12003)\n        """'
newline|'\n'
name|'version'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'Win32_OperatingSystem'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'Version'
op|'.'
name|'replace'
op|'('
string|"'.'"
op|','
string|"''"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Windows version: %s '"
op|')'
op|'%'
name|'version'
op|')'
newline|'\n'
name|'return'
name|'version'
newline|'\n'
nl|'\n'
DECL|member|update_available_resource
dedent|''
name|'def'
name|'update_available_resource'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates compute manager resource info on ComputeNode table.\n\n        This method is called as an periodic tasks and is used only\n        in live migration currently.\n\n        :param ctxt: security context\n        :param host: hostname that compute manager is currently running\n\n        """'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'service_ref'
op|'='
name|'db'
op|'.'
name|'service_get_all_compute_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|'# Updating host information'
nl|'\n'
comment|'# TODO(alexpilotti) implemented cpu_info'
nl|'\n'
dedent|''
name|'dic'
op|'='
op|'{'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'_get_memory_mb_total'
op|'('
op|')'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'self'
op|'.'
name|'_get_local_gb_total'
op|'('
op|')'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
name|'self'
op|'.'
name|'_get_vcpu_used'
op|'('
op|')'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'self'
op|'.'
name|'_get_memory_mb_used'
op|'('
op|')'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'self'
op|'.'
name|'_get_local_gb_used'
op|'('
op|')'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|'"hyperv"'
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
name|'self'
op|'.'
name|'_get_hypervisor_version'
op|'('
op|')'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|'"unknown"'
op|','
nl|'\n'
string|"'service_id'"
op|':'
name|'service_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'disk_available_least'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'compute_node_ref'
op|'='
name|'service_ref'
op|'['
string|"'compute_node'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'compute_node_ref'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record created for %s '"
op|')'
op|'%'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'dic'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record updated for %s '"
op|')'
op|'%'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'compute_node_ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cache_image
dedent|''
dedent|''
name|'def'
name|'_cache_image'
op|'('
name|'self'
op|','
name|'fn'
op|','
name|'target'
op|','
name|'fname'
op|','
name|'cow'
op|'='
name|'False'
op|','
name|'Size'
op|'='
name|'None'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wrapper for a method that creates an image that caches the image.\n\n        This wrapper will save the image into a common store and create a\n        copy for use by the hypervisor.\n\n        The underlying method should specify a kwarg of target representing\n        where the image will be saved.\n\n        fname is used as the filename of the base image.  The filename needs\n        to be unique to a given image.\n\n        If cow is True, it will make a CoW image instead of a copy.\n        """'
newline|'\n'
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'fname'
op|')'
newline|'\n'
DECL|function|call_if_not_exists
name|'def'
name|'call_if_not_exists'
op|'('
name|'path'
op|','
name|'fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'fn'
op|'('
name|'target'
op|'='
name|'path'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'target'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"use_cow_image:%s"'
op|')'
op|','
name|'cow'
op|')'
newline|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'                '
name|'base'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'get_base_vhd_path'
op|'('
name|'fname'
op|')'
newline|'\n'
name|'call_if_not_exists'
op|'('
name|'base'
op|','
name|'fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'image_service'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from Msvm_ImageManagementService"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'image_service'
op|'.'
name|'CreateDifferencingVirtualHardDisk'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'target'
op|','
name|'ParentPath'
op|'='
name|'base'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
nl|'\n'
string|'"Creating difference disk: JobID=%s, Source=%s, Target=%s"'
op|','
nl|'\n'
name|'job'
op|','
name|'base'
op|','
name|'target'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'                    '
name|'success'
op|'='
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Failed to create Difference Disk from '"
nl|'\n'
string|"'%(base)s to %(target)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'call_if_not_exists'
op|'('
name|'target'
op|','
name|'fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
