begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'ctypes'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'wmi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostUtils
dedent|''
name|'class'
name|'HostUtils'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_conn_cimv2'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/cimv2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_cpus_info
dedent|''
dedent|''
name|'def'
name|'get_cpus_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cpus'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
string|'"SELECT * FROM Win32_Processor "'
nl|'\n'
string|'"WHERE ProcessorType = 3"'
op|')'
newline|'\n'
name|'cpus_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'cpu'
name|'in'
name|'cpus'
op|':'
newline|'\n'
indent|'            '
name|'cpu_info'
op|'='
op|'{'
string|"'Architecture'"
op|':'
name|'cpu'
op|'.'
name|'Architecture'
op|','
nl|'\n'
string|"'Name'"
op|':'
name|'cpu'
op|'.'
name|'Name'
op|','
nl|'\n'
string|"'Manufacturer'"
op|':'
name|'cpu'
op|'.'
name|'Manufacturer'
op|','
nl|'\n'
string|"'NumberOfCores'"
op|':'
name|'cpu'
op|'.'
name|'NumberOfCores'
op|','
nl|'\n'
string|"'NumberOfLogicalProcessors'"
op|':'
nl|'\n'
name|'cpu'
op|'.'
name|'NumberOfLogicalProcessors'
op|'}'
newline|'\n'
name|'cpus_list'
op|'.'
name|'append'
op|'('
name|'cpu_info'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cpus_list'
newline|'\n'
nl|'\n'
DECL|member|is_cpu_feature_present
dedent|''
name|'def'
name|'is_cpu_feature_present'
op|'('
name|'self'
op|','
name|'feature_key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ctypes'
op|'.'
name|'windll'
op|'.'
name|'kernel32'
op|'.'
name|'IsProcessorFeaturePresent'
op|'('
name|'feature_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_memory_info
dedent|''
name|'def'
name|'get_memory_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a tuple with total visible memory and free physical memory\n        expressed in kB.\n        """'
newline|'\n'
name|'mem_info'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
string|'"SELECT TotalVisibleMemorySize, "'
nl|'\n'
string|'"FreePhysicalMemory "'
nl|'\n'
string|'"FROM win32_operatingsystem"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
op|'('
name|'long'
op|'('
name|'mem_info'
op|'.'
name|'TotalVisibleMemorySize'
op|')'
op|','
nl|'\n'
name|'long'
op|'('
name|'mem_info'
op|'.'
name|'FreePhysicalMemory'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_volume_info
dedent|''
name|'def'
name|'get_volume_info'
op|'('
name|'self'
op|','
name|'drive'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a tuple with total size and free space\n        expressed in bytes.\n        """'
newline|'\n'
name|'logical_disk'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
string|'"SELECT Size, FreeSpace "'
nl|'\n'
string|'"FROM win32_logicaldisk "'
nl|'\n'
string|'"WHERE DeviceID=\'%s\'"'
nl|'\n'
op|'%'
name|'drive'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
op|'('
name|'long'
op|'('
name|'logical_disk'
op|'.'
name|'Size'
op|')'
op|','
name|'long'
op|'('
name|'logical_disk'
op|'.'
name|'FreeSpace'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_min_windows_version
dedent|''
name|'def'
name|'check_min_windows_version'
op|'('
name|'self'
op|','
name|'major'
op|','
name|'minor'
op|','
name|'build'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'version_str'
op|'='
name|'self'
op|'.'
name|'get_windows_version'
op|'('
op|')'
newline|'\n'
name|'return'
name|'map'
op|'('
name|'int'
op|','
name|'version_str'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|')'
op|'>='
op|'['
name|'major'
op|','
name|'minor'
op|','
name|'build'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_windows_version
dedent|''
name|'def'
name|'get_windows_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'Win32_OperatingSystem'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'Version'
newline|'\n'
nl|'\n'
DECL|member|get_local_ips
dedent|''
name|'def'
name|'get_local_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addr_info'
op|'='
name|'socket'
op|'.'
name|'getaddrinfo'
op|'('
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|','
name|'None'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Returns IPv4 and IPv6 addresses, ordered by protocol family'
nl|'\n'
name|'addr_info'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
name|'a'
op|'['
number|'4'
op|']'
op|'['
number|'0'
op|']'
name|'for'
name|'a'
name|'in'
name|'addr_info'
op|']'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
