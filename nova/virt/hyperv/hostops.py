begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManagement class for host operations.\n"""'
newline|'\n'
name|'import'
name|'multiprocessing'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'platform'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'baseops'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostOps
name|'class'
name|'HostOps'
op|'('
name|'baseops'
op|'.'
name|'BaseOps'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostOps'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_stats'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_total
dedent|''
name|'def'
name|'_get_vcpu_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get vcpu number of physical computer.\n        :returns: the number of cpu core.\n        """'
newline|'\n'
comment|'# On certain platforms, this will raise a NotImplementedError.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'multiprocessing'
op|'.'
name|'cpu_count'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Cannot get the number of cpu, because this "'
nl|'\n'
string|'"function is not implemented for this platform. "'
nl|'\n'
string|'"This error can be safely ignored for now."'
op|')'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_memory_mb_total
dedent|''
dedent|''
name|'def'
name|'_get_memory_mb_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the total memory size(MB) of physical computer.\n        :returns: the total amount of memory(MB).\n        """'
newline|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT TotalVisibleMemorySize FROM win32_operatingsystem"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'TotalVisibleMemorySize'
newline|'\n'
name|'total_mb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
number|'1024'
newline|'\n'
name|'return'
name|'total_mb'
newline|'\n'
nl|'\n'
DECL|member|_get_local_hdd_info_gb
dedent|''
name|'def'
name|'_get_local_hdd_info_gb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the total and used size of the volume containing\n           CONF.instances_path expressed in GB.\n        :returns:\n            A tuple with the total and used space in GB.\n        """'
newline|'\n'
name|'normalized_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|')'
newline|'\n'
name|'drive'
op|','
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitdrive'
op|'('
name|'normalized_path'
op|')'
newline|'\n'
name|'hdd_info'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
op|'('
string|'"SELECT FreeSpace,Size FROM win32_logicaldisk WHERE DeviceID=\'%s\'"'
nl|'\n'
op|')'
op|'%'
name|'drive'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'total_gb'
op|'='
name|'long'
op|'('
name|'hdd_info'
op|'.'
name|'Size'
op|')'
op|'/'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
name|'free_gb'
op|'='
name|'long'
op|'('
name|'hdd_info'
op|'.'
name|'FreeSpace'
op|')'
op|'/'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
name|'used_gb'
op|'='
name|'total_gb'
op|'-'
name|'free_gb'
newline|'\n'
name|'return'
name|'total_gb'
op|','
name|'used_gb'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_used
dedent|''
name|'def'
name|'_get_vcpu_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Get vcpu usage number of physical computer.\n        :returns: The total number of vcpu that currently used.\n        """'
newline|'\n'
comment|'#TODO(jordanrinke) figure out a way to count assigned VCPUs'
nl|'\n'
name|'total_vcpu'
op|'='
number|'0'
newline|'\n'
name|'return'
name|'total_vcpu'
newline|'\n'
nl|'\n'
DECL|member|_get_memory_mb_used
dedent|''
name|'def'
name|'_get_memory_mb_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the free memory size(MB) of physical computer.\n        :returns: the total usage of memory(MB).\n        """'
newline|'\n'
name|'total_kb'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT FreePhysicalMemory FROM win32_operatingsystem"'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'FreePhysicalMemory'
newline|'\n'
name|'total_mb'
op|'='
name|'long'
op|'('
name|'total_kb'
op|')'
op|'/'
number|'1024'
newline|'\n'
nl|'\n'
name|'return'
name|'total_mb'
newline|'\n'
nl|'\n'
DECL|member|_get_hypervisor_version
dedent|''
name|'def'
name|'_get_hypervisor_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get hypervisor version.\n        :returns: hypervisor version (ex. 12003)\n        """'
newline|'\n'
name|'version'
op|'='
name|'self'
op|'.'
name|'_conn_cimv2'
op|'.'
name|'Win32_OperatingSystem'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'Version'
op|'.'
name|'replace'
op|'('
string|"'.'"
op|','
string|"''"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Windows version: %s '"
op|')'
op|'%'
name|'version'
op|')'
newline|'\n'
name|'return'
name|'version'
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve resource info.\n\n        This method is called when nova-compute launches, and\n        as part of a periodic task.\n\n        :returns: dictionary describing resources\n\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'get_available_resource called'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'local_gb'
op|','
name|'used_gb'
op|'='
name|'self'
op|'.'
name|'_get_local_hdd_info_gb'
op|'('
op|')'
newline|'\n'
comment|'# TODO(alexpilotti) implemented cpu_info'
nl|'\n'
name|'dic'
op|'='
op|'{'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'_get_memory_mb_total'
op|'('
op|')'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'local_gb'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
name|'self'
op|'.'
name|'_get_vcpu_used'
op|'('
op|')'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'self'
op|'.'
name|'_get_memory_mb_used'
op|'('
op|')'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'used_gb'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|'"hyperv"'
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
name|'self'
op|'.'
name|'_get_hypervisor_version'
op|'('
op|')'
op|','
nl|'\n'
string|"'hypervisor_hostname'"
op|':'
name|'platform'
op|'.'
name|'node'
op|'('
op|')'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"'unknown'"
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'dic'
newline|'\n'
nl|'\n'
DECL|member|_update_stats
dedent|''
name|'def'
name|'_update_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Updating host stats"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'data'
op|'['
string|'"disk_total"'
op|']'
op|','
name|'data'
op|'['
string|'"disk_used"'
op|']'
op|'='
name|'self'
op|'.'
name|'_get_local_hdd_info_gb'
op|'('
op|')'
newline|'\n'
name|'data'
op|'['
string|'"disk_available"'
op|']'
op|'='
name|'data'
op|'['
string|'"disk_total"'
op|']'
op|'-'
name|'data'
op|'['
string|'"disk_used"'
op|']'
newline|'\n'
name|'data'
op|'['
string|'"host_memory_total"'
op|']'
op|'='
name|'self'
op|'.'
name|'_get_memory_mb_total'
op|'('
op|')'
newline|'\n'
name|'data'
op|'['
string|'"host_memory_overhead"'
op|']'
op|'='
name|'self'
op|'.'
name|'_get_memory_mb_used'
op|'('
op|')'
newline|'\n'
name|'data'
op|'['
string|'"host_memory_free"'
op|']'
op|'='
name|'data'
op|'['
string|'"host_memory_total"'
op|']'
op|'-'
name|'data'
op|'['
string|'"host_memory_overhead"'
op|']'
newline|'\n'
name|'data'
op|'['
string|'"host_memory_free_computed"'
op|']'
op|'='
name|'data'
op|'['
string|'"host_memory_free"'
op|']'
newline|'\n'
name|'data'
op|'['
string|'"supported_instances"'
op|']'
op|'='
op|'['
op|'('
string|"'i686'"
op|','
string|"'hyperv'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
string|"'x86_64'"
op|','
string|"'hyperv'"
op|','
string|"'hvm'"
op|')'
op|']'
newline|'\n'
name|'data'
op|'['
string|'"hypervisor_hostname"'
op|']'
op|'='
name|'platform'
op|'.'
name|'node'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_stats'
op|'='
name|'data'
newline|'\n'
nl|'\n'
DECL|member|get_host_stats
dedent|''
name|'def'
name|'get_host_stats'
op|'('
name|'self'
op|','
name|'refresh'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the current state of the host. If \'refresh\' is\n           True, run the update first."""'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"get_host_stats called"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'refresh'
name|'or'
name|'not'
name|'self'
op|'.'
name|'_stats'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_stats'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_stats'
newline|'\n'
nl|'\n'
DECL|member|host_power_action
dedent|''
name|'def'
name|'host_power_action'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'action'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reboots, shuts down or powers up the host."""'
newline|'\n'
name|'pass'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
