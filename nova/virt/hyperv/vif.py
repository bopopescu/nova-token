begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2013 Cloudbase Solutions Srl'
nl|'\n'
comment|'# Copyright 2013 Pedro Navarro Perez'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
name|'import'
name|'abc'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
comment|'# Check needed for unit testing on Unix'
nl|'\n'
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'wmi'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|hyperv_opts
name|'hyperv_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'vswitch_name'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'External virtual switch Name, '"
nl|'\n'
string|"'if not provided, the first external virtual '"
nl|'\n'
string|"'switch is used'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'hyperv_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVBaseVIFDriver
name|'class'
name|'HyperVBaseVIFDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|plug
name|'def'
name|'plug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|unplug
name|'def'
name|'unplug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVQuantumVIFDriver
dedent|''
dedent|''
name|'class'
name|'HyperVQuantumVIFDriver'
op|'('
name|'HyperVBaseVIFDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Quantum VIF driver."""'
newline|'\n'
nl|'\n'
DECL|member|plug
name|'def'
name|'plug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
comment|'# Quantum takes care of plugging the port'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|unplug
dedent|''
name|'def'
name|'unplug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
comment|'# Quantum takes care of unplugging the port'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVNovaNetworkVIFDriver
dedent|''
dedent|''
name|'class'
name|'HyperVNovaNetworkVIFDriver'
op|'('
name|'HyperVBaseVIFDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Nova network VIF driver."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_vmutils'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/virtualization'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_find_external_network
dedent|''
name|'def'
name|'_find_external_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Find the vswitch that is connected to the physical nic.\n           Assumes only one physical nic on the host\n        """'
newline|'\n'
comment|'#If there are no physical nics connected to networks, return.'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Attempting to bind NIC to %s "'
op|')'
nl|'\n'
op|'%'
name|'CONF'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'vswitch_name'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Attempting to bind NIC to %s "'
op|')'
nl|'\n'
op|'%'
name|'CONF'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'bound'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitch'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'CONF'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"No vSwitch specified, attaching to default"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ExternalEthernetPort'
op|'('
name|'IsBound'
op|'='
string|"'TRUE'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'bound'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'vswitch_name'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitch'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'CONF'
op|'.'
name|'vswitch_name'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_SwitchPort'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSwitch'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ExternalEthernetPort'
op|'('
name|'IsBound'
op|'='
string|"'TRUE'"
op|')'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_SwitchPort'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSwitch'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|plug
dedent|''
dedent|''
name|'def'
name|'plug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extswitch'
op|'='
name|'self'
op|'.'
name|'_find_external_network'
op|'('
op|')'
newline|'\n'
name|'if'
name|'extswitch'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Cannot find vSwitch'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vm_name'
op|'='
name|'instance'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
name|'nic_data'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_SyntheticEthernetPortSettingData'
op|'('
nl|'\n'
name|'ElementName'
op|'='
name|'vif'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'switch_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSwitchManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#Create a port on the vswitch.'
nl|'\n'
op|'('
name|'new_port'
op|','
name|'ret_val'
op|')'
op|'='
name|'switch_svc'
op|'.'
name|'CreateSwitchPort'
op|'('
nl|'\n'
name|'Name'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'FriendlyName'
op|'='
name|'vm_name'
op|','
nl|'\n'
name|'ScopeOfResidence'
op|'='
string|'""'
op|','
nl|'\n'
name|'VirtualSwitch'
op|'='
name|'extswitch'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Failed creating a port on the external vswitch'"
op|')'
op|')'
newline|'\n'
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'Failed creating port for %s'"
op|')'
op|'%'
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'ext_path'
op|'='
name|'extswitch'
op|'.'
name|'path_'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Created switch port %(vm_name)s on switch %(ext_path)s"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'MSVM_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'nic_data'
op|'.'
name|'Connection'
op|'='
op|'['
name|'new_port'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_vmutils'
op|'.'
name|'modify_virt_resource'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'nic_data'
op|','
name|'vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unplug
dedent|''
name|'def'
name|'unplug'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
comment|'#TODO(alepilotti) Not implemented'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
