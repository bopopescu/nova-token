begin_unit
comment|'# Copyright 2016 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'patcher'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
nl|'\n'
comment|'# Note(lpetrut): Eventlet greenpipes are not supported on Windows. The named'
nl|'\n'
comment|'# pipe handlers implemented in os-win use Windows API calls which can block'
nl|'\n'
comment|'# the whole thread. In order to avoid this, those workers run in separate'
nl|'\n'
comment|"# 'native' threads."
nl|'\n'
comment|'#'
nl|'\n'
comment|'# As this proxy communicates with those workers via queues, the serial console'
nl|'\n'
comment|"# proxy workers have to run in 'native' threads as well."
nl|'\n'
DECL|variable|threading
name|'threading'
op|'='
name|'patcher'
op|'.'
name|'original'
op|'('
string|"'threading'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|handle_socket_errors
name|'def'
name|'handle_socket_errors'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'func'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'func'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SerialProxy
dedent|''
name|'class'
name|'SerialProxy'
op|'('
name|'threading'
op|'.'
name|'Thread'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'addr'
op|','
name|'port'
op|','
name|'input_queue'
op|','
nl|'\n'
name|'output_queue'
op|','
name|'client_connected'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SerialProxy'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setDaemon'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instance_name'
op|'='
name|'instance_name'
newline|'\n'
name|'self'
op|'.'
name|'_addr'
op|'='
name|'addr'
newline|'\n'
name|'self'
op|'.'
name|'_port'
op|'='
name|'port'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_input_queue'
op|'='
name|'input_queue'
newline|'\n'
name|'self'
op|'.'
name|'_output_queue'
op|'='
name|'output_queue'
newline|'\n'
name|'self'
op|'.'
name|'_client_connected'
op|'='
name|'client_connected'
newline|'\n'
name|'self'
op|'.'
name|'_stopped'
op|'='
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_socket
dedent|''
name|'def'
name|'_setup_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sock'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
name|'socket'
op|'.'
name|'AF_INET'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'SOCK_STREAM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'setsockopt'
op|'('
name|'socket'
op|'.'
name|'SOL_SOCKET'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'SO_REUSEADDR'
op|','
nl|'\n'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'bind'
op|'('
op|'('
name|'self'
op|'.'
name|'_addr'
op|','
name|'self'
op|'.'
name|'_port'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'listen'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'msg'
op|'='
op|'('
name|'_'
op|'('
string|"'Failed to initialize serial proxy on'"
nl|'\n'
string|"'%(addr)s:%(port)s, handling connections '"
nl|'\n'
string|"'to instance %(instance_name)s. Error: %(error)s'"
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'addr'"
op|':'
name|'self'
op|'.'
name|'_addr'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'self'
op|'.'
name|'_port'
op|','
nl|'\n'
string|"'instance_name'"
op|':'
name|'self'
op|'.'
name|'_instance_name'
op|','
nl|'\n'
string|"'error'"
op|':'
name|'err'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stop
dedent|''
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stopped'
op|'.'
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_conn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'shutdown'
op|'('
name|'socket'
op|'.'
name|'SHUT_RDWR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_socket'
op|'('
op|')'
newline|'\n'
name|'while'
name|'not'
name|'self'
op|'.'
name|'_stopped'
op|'.'
name|'isSet'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_accept_conn'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'handle_socket_errors'
newline|'\n'
DECL|member|_accept_conn
name|'def'
name|'_accept_conn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_conn'
op|','
name|'client_addr'
op|'='
name|'self'
op|'.'
name|'_sock'
op|'.'
name|'accept'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'workers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'job'
name|'in'
op|'['
name|'self'
op|'.'
name|'_get_data'
op|','
name|'self'
op|'.'
name|'_send_data'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'worker'
op|'='
name|'threading'
op|'.'
name|'Thread'
op|'('
name|'target'
op|'='
name|'job'
op|')'
newline|'\n'
name|'worker'
op|'.'
name|'setDaemon'
op|'('
name|'True'
op|')'
newline|'\n'
name|'worker'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'workers'
op|'.'
name|'append'
op|'('
name|'worker'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'worker'
name|'in'
name|'workers'
op|':'
newline|'\n'
indent|'            '
name|'worker_running'
op|'='
op|'('
name|'worker'
op|'.'
name|'is_alive'
op|'('
op|')'
name|'and'
nl|'\n'
name|'worker'
name|'is'
name|'not'
name|'threading'
op|'.'
name|'current_thread'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'worker_running'
op|':'
newline|'\n'
indent|'                '
name|'worker'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'handle_socket_errors'
newline|'\n'
DECL|member|_get_data
name|'def'
name|'_get_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'isSet'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'recv'
op|'('
name|'constants'
op|'.'
name|'SERIAL_CONSOLE_BUFFER_SIZE'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_input_queue'
op|'.'
name|'put'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'handle_socket_errors'
newline|'\n'
DECL|member|_send_data
name|'def'
name|'_send_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'self'
op|'.'
name|'_client_connected'
op|'.'
name|'isSet'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'self'
op|'.'
name|'_output_queue'
op|'.'
name|'get_burst'
op|'('
op|')'
newline|'\n'
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'sendall'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
