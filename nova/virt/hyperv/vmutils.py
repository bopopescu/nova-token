begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Cloudbase Solutions Srl / Pedro Navarro Perez'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUtility class for VM related operations.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
nl|'\n'
comment|'# Check needed for unit testing on Unix'
nl|'\n'
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'wmi'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
dedent|''
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVException
name|'class'
name|'HyperVException'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'message'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HyperVException'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMUtils
dedent|''
dedent|''
name|'class'
name|'VMUtils'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|lookup
indent|'    '
name|'def'
name|'lookup'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vms'
op|'='
name|'conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'i'
op|')'
newline|'\n'
name|'n'
op|'='
name|'len'
op|'('
name|'vms'
op|')'
newline|'\n'
name|'if'
name|'n'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'elif'
name|'n'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'duplicate name found: %s'"
op|')'
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'vms'
op|'['
number|'0'
op|']'
op|'.'
name|'ElementName'
newline|'\n'
nl|'\n'
comment|'#TODO(alexpilotti): use the reactor to poll instead of sleep'
nl|'\n'
DECL|member|check_job_status
dedent|''
dedent|''
name|'def'
name|'check_job_status'
op|'('
name|'self'
op|','
name|'jobpath'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll WMI job state for completion"""'
newline|'\n'
name|'job_wmi_path'
op|'='
name|'jobpath'
op|'.'
name|'replace'
op|'('
string|"'\\\\'"
op|','
string|"'/'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
name|'job_wmi_path'
op|')'
newline|'\n'
nl|'\n'
name|'while'
name|'job'
op|'.'
name|'JobState'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATE_RUNNING'
op|':'
newline|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
name|'job'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
name|'job_wmi_path'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'job'
op|'.'
name|'JobState'
op|'!='
name|'constants'
op|'.'
name|'WMI_JOB_STATE_COMPLETED'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"WMI job failed: %(ErrorSummaryDescription)s - "'
nl|'\n'
string|'"%(ErrorDescription)s - %(ErrorCode)s"'
op|')'
op|'%'
name|'job'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'desc'
op|'='
name|'job'
op|'.'
name|'Description'
newline|'\n'
name|'elap'
op|'='
name|'job'
op|'.'
name|'ElapsedTime'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"WMI job succeeded: %(desc)s, Elapsed=%(elap)s "'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_vhd_path
dedent|''
name|'def'
name|'get_vhd_path'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_vhd_folder'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'instances_path'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'base_vhd_folder'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating folder %s '"
op|')'
op|','
name|'base_vhd_folder'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'base_vhd_folder'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_vhd_folder'
op|','
name|'instance_name'
op|'+'
string|'".vhd"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_base_vhd_path
dedent|''
name|'def'
name|'get_base_vhd_path'
op|'('
name|'self'
op|','
name|'image_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'instances_path'
op|','
string|"'_base'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'base_dir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'base_dir'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
name|'image_name'
op|'+'
string|'".vhd"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_export_path
dedent|''
name|'def'
name|'make_export_path'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'export_folder'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'instances_path'
op|','
string|'"export"'
op|','
nl|'\n'
name|'instance_name'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'export_folder'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Removing existing folder %s '"
op|')'
op|','
name|'export_folder'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'export_folder'
op|')'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating folder %s '"
op|')'
op|','
name|'export_folder'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'export_folder'
op|')'
newline|'\n'
name|'return'
name|'export_folder'
newline|'\n'
nl|'\n'
DECL|member|clone_wmi_obj
dedent|''
name|'def'
name|'clone_wmi_obj'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'wmi_class'
op|','
name|'wmi_obj'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Clone a WMI object"""'
newline|'\n'
name|'cl'
op|'='
name|'conn'
op|'.'
name|'__getattr__'
op|'('
name|'wmi_class'
op|')'
comment|'# get the class'
newline|'\n'
name|'newinst'
op|'='
name|'cl'
op|'.'
name|'new'
op|'('
op|')'
newline|'\n'
comment|'#Copy the properties from the original.'
nl|'\n'
name|'for'
name|'prop'
name|'in'
name|'wmi_obj'
op|'.'
name|'_properties'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'prop'
op|'=='
string|'"VirtualSystemIdentifiers"'
op|':'
newline|'\n'
indent|'                '
name|'strguid'
op|'='
op|'['
op|']'
newline|'\n'
name|'strguid'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'newinst'
op|'.'
name|'Properties_'
op|'.'
name|'Item'
op|'('
name|'prop'
op|')'
op|'.'
name|'Value'
op|'='
name|'strguid'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'newinst'
op|'.'
name|'Properties_'
op|'.'
name|'Item'
op|'('
name|'prop'
op|')'
op|'.'
name|'Value'
op|'='
name|'wmi_obj'
op|'.'
name|'Properties_'
op|'.'
name|'Item'
op|'('
name|'prop'
op|')'
op|'.'
name|'Value'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'newinst'
newline|'\n'
nl|'\n'
DECL|member|add_virt_resource
dedent|''
name|'def'
name|'add_virt_resource'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'res_setting_data'
op|','
name|'target_vm'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a new resource (disk/nic) to the VM"""'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
op|'('
name|'job'
op|','
name|'new_resources'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'AddVirtualSystemResources'
op|'('
op|'['
name|'res_setting_data'
op|'.'
name|'GetText_'
op|'('
number|'1'
op|')'
op|']'
op|','
nl|'\n'
name|'target_vm'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'success'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'new_resources'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|remove_virt_resource
dedent|''
dedent|''
name|'def'
name|'remove_virt_resource'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'res_setting_data'
op|','
name|'target_vm'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a new resource (disk/nic) to the VM"""'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'RemoveVirtualSystemResources'
op|'('
op|'['
name|'res_setting_data'
op|'.'
name|'path_'
op|'('
op|')'
op|']'
op|','
nl|'\n'
name|'target_vm'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'success'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'success'
newline|'\n'
nl|'\n'
DECL|member|fetch_image
dedent|''
name|'def'
name|'fetch_image'
op|'('
name|'self'
op|','
name|'target'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'user'
op|','
name|'project'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'images'
op|'.'
name|'fetch'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user'
op|','
name|'project'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
