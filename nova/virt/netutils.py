begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Network-releated utilities for supporting libvirt connection code."""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'netaddr'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'injected_network_template'"
op|','
string|"'nova.virt.disk.api'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|Template
name|'Template'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_late_load_cheetah
name|'def'
name|'_late_load_cheetah'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'Template'
newline|'\n'
name|'if'
name|'Template'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'__import__'
op|'('
string|"'Cheetah.Template'"
op|','
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'Template'"
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'Template'
op|'='
name|'t'
op|'.'
name|'Template'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_net_and_mask
dedent|''
dedent|''
name|'def'
name|'get_net_and_mask'
op|'('
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'net'
op|'='
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'cidr'
op|')'
newline|'\n'
name|'return'
name|'str'
op|'('
name|'net'
op|'.'
name|'ip'
op|')'
op|','
name|'str'
op|'('
name|'net'
op|'.'
name|'netmask'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_net_and_prefixlen
dedent|''
name|'def'
name|'get_net_and_prefixlen'
op|'('
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'net'
op|'='
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'cidr'
op|')'
newline|'\n'
name|'return'
name|'str'
op|'('
name|'net'
op|'.'
name|'ip'
op|')'
op|','
name|'str'
op|'('
name|'net'
op|'.'
name|'_prefixlen'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_ip_version
dedent|''
name|'def'
name|'get_ip_version'
op|'('
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'net'
op|'='
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'cidr'
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'net'
op|'.'
name|'version'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_injected_network_template
dedent|''
name|'def'
name|'get_injected_network_template'
op|'('
name|'network_info'
op|','
name|'use_ipv6'
op|'='
name|'FLAGS'
op|'.'
name|'use_ipv6'
op|','
nl|'\n'
name|'template'
op|'='
name|'FLAGS'
op|'.'
name|'injected_network_template'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    return a rendered network template for the given network_info\n\n    :param network_info:\n       :py:meth:`~nova.network.manager.NetworkManager.get_instance_nw_info`\n\n    Note: this code actually depends on the legacy network_info, but will\n    convert the type itself if necessary.\n    """'
newline|'\n'
nl|'\n'
comment|"# the code below depends on the legacy 'network_info'"
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'network_info'
op|','
string|"'legacy'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_info'
op|'='
name|'network_info'
op|'.'
name|'legacy'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'nets'
op|'='
op|'['
op|']'
newline|'\n'
name|'ifc_num'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'have_injected_networks'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'network_ref'
op|','
name|'mapping'
op|')'
name|'in'
name|'network_info'
op|':'
newline|'\n'
indent|'        '
name|'ifc_num'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'network_ref'
op|'['
string|"'injected'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'have_injected_networks'
op|'='
name|'True'
newline|'\n'
name|'address'
op|'='
name|'mapping'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ip'"
op|']'
newline|'\n'
name|'netmask'
op|'='
name|'mapping'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'netmask'"
op|']'
newline|'\n'
name|'address_v6'
op|'='
name|'None'
newline|'\n'
name|'gateway_v6'
op|'='
name|'None'
newline|'\n'
name|'netmask_v6'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'use_ipv6'
op|':'
newline|'\n'
indent|'            '
name|'address_v6'
op|'='
name|'mapping'
op|'['
string|"'ip6s'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ip'"
op|']'
newline|'\n'
name|'netmask_v6'
op|'='
name|'mapping'
op|'['
string|"'ip6s'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'netmask'"
op|']'
newline|'\n'
name|'gateway_v6'
op|'='
name|'mapping'
op|'['
string|"'gateway_v6'"
op|']'
newline|'\n'
dedent|''
name|'net_info'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'eth%d'"
op|'%'
name|'ifc_num'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'netmask'"
op|':'
name|'netmask'
op|','
nl|'\n'
string|"'gateway'"
op|':'
name|'mapping'
op|'['
string|"'gateway'"
op|']'
op|','
nl|'\n'
string|"'broadcast'"
op|':'
name|'mapping'
op|'['
string|"'broadcast'"
op|']'
op|','
nl|'\n'
string|"'dns'"
op|':'
string|"' '"
op|'.'
name|'join'
op|'('
name|'mapping'
op|'['
string|"'dns'"
op|']'
op|')'
op|','
nl|'\n'
string|"'address_v6'"
op|':'
name|'address_v6'
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
name|'gateway_v6'
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
name|'netmask_v6'
op|'}'
newline|'\n'
name|'nets'
op|'.'
name|'append'
op|'('
name|'net_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'have_injected_networks'
name|'is'
name|'False'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'template'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'_late_load_cheetah'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ifc_template'
op|'='
name|'open'
op|'('
name|'template'
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'str'
op|'('
name|'Template'
op|'('
name|'ifc_template'
op|','
nl|'\n'
name|'searchList'
op|'='
op|'['
op|'{'
string|"'interfaces'"
op|':'
name|'nets'
op|','
nl|'\n'
string|"'use_ipv6'"
op|':'
name|'use_ipv6'
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
