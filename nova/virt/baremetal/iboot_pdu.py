begin_unit
comment|'# Copyright 2013 Red Hat Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# iBoot Power Driver'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
name|'import'
name|'baremetal_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
name|'import'
name|'base'
newline|'\n'
nl|'\n'
DECL|variable|iboot
name|'iboot'
op|'='
name|'importutils'
op|'.'
name|'try_import'
op|'('
string|"'iboot'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IBootManager
name|'class'
name|'IBootManager'
op|'('
name|'base'
op|'.'
name|'PowerManager'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""iBoot Power Driver for Baremetal Nova Compute\n\n    This PowerManager class provides a mechanism for controlling power state\n    via an iBoot capable device (tested with an iBoot G2).\n\n    Requires installation of python-iboot:\n\n        https://github.com/darkip/python-iboot\n\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'node'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'addr_relay'
op|'='
name|'str'
op|'('
name|'node'
op|'['
string|"'pm_address'"
op|']'
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'addr_relay'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'relay_id'
op|'='
name|'int'
op|'('
name|'addr_relay'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"iboot PDU relay ID must be an integer."'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'relay_id'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'addr_port'
op|'='
name|'addr_relay'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'address'
op|'='
name|'addr_port'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'addr_port'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'port'
op|'='
name|'int'
op|'('
name|'addr_port'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"iboot PDU port must be an integer."'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'port'
op|'='
number|'9100'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'user'
op|'='
name|'str'
op|'('
name|'node'
op|'['
string|"'pm_user'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'str'
op|'('
name|'node'
op|'['
string|"'pm_password'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'instance'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'hostname'"
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_create_connection
dedent|''
name|'def'
name|'_create_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'='
name|'iboot'
op|'.'
name|'iBootInterface'
op|'('
name|'self'
op|'.'
name|'address'
op|','
name|'self'
op|'.'
name|'user'
op|','
nl|'\n'
name|'self'
op|'.'
name|'password'
op|','
name|'port'
op|'='
name|'self'
op|'.'
name|'port'
op|','
nl|'\n'
name|'num_relays'
op|'='
name|'self'
op|'.'
name|'relay_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'conn'
newline|'\n'
nl|'\n'
DECL|member|_switch
dedent|''
name|'def'
name|'_switch'
op|'('
name|'self'
op|','
name|'relay_id'
op|','
name|'enabled'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'switch'
op|'('
name|'relay_id'
op|','
name|'enabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_relay
dedent|''
name|'def'
name|'_get_relay'
op|'('
name|'self'
op|','
name|'relay_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_relays'
op|'('
op|')'
op|'['
name|'relay_id'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|member|activate_node
dedent|''
name|'def'
name|'activate_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"activate_node name %s"'
op|')'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_switch'
op|'('
name|'self'
op|'.'
name|'relay_id'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'is_power_on'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'ACTIVE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'ERROR'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'state'
newline|'\n'
nl|'\n'
DECL|member|reboot_node
dedent|''
name|'def'
name|'reboot_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"reboot_node: %s"'
op|')'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_switch'
op|'('
name|'self'
op|'.'
name|'relay_id'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_switch'
op|'('
name|'self'
op|'.'
name|'relay_id'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'is_power_on'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'ACTIVE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'ERROR'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'state'
newline|'\n'
nl|'\n'
DECL|member|deactivate_node
dedent|''
name|'def'
name|'deactivate_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"deactivate_node name %s"'
op|')'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_connection'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_power_on'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_switch'
op|'('
name|'self'
op|'.'
name|'relay_id'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'is_power_on'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'ERROR'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'baremetal_states'
op|'.'
name|'DELETED'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'state'
newline|'\n'
nl|'\n'
DECL|member|is_power_on
dedent|''
name|'def'
name|'is_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Checking if %s is running"'
op|')'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_connection'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_relay'
op|'('
name|'self'
op|'.'
name|'relay_id'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
