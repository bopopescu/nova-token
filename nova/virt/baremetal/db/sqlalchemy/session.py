begin_unit
comment|'# Copyright (c) 2012 NTT DOCOMO, INC.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Session Handling for SQLAlchemy backend."""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'session'
name|'as'
name|'db_session'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'paths'
newline|'\n'
nl|'\n'
DECL|variable|opts
name|'opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'sql_connection'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'('
string|"'sqlite:///'"
op|'+'
nl|'\n'
name|'paths'
op|'.'
name|'state_path_def'
op|'('
string|"'baremetal_nova.sqlite'"
op|')'
op|')'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQLAlchemy connection string used to connect to the '"
nl|'\n'
string|"'bare-metal database'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|baremetal_group
name|'baremetal_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
name|'name'
op|'='
string|"'baremetal'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'Baremetal Options'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_group'
op|'('
name|'baremetal_group'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'opts'
op|','
name|'baremetal_group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_FACADE
name|'_FACADE'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_facade_lazily
name|'def'
name|'_create_facade_lazily'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'_FACADE'
newline|'\n'
nl|'\n'
name|'if'
name|'_FACADE'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'_FACADE'
op|'='
name|'db_session'
op|'.'
name|'EngineFacade'
op|'('
name|'CONF'
op|'.'
name|'baremetal'
op|'.'
name|'sql_connection'
op|','
nl|'\n'
op|'**'
name|'dict'
op|'('
name|'CONF'
op|'.'
name|'database'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_FACADE'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_session
dedent|''
name|'def'
name|'get_session'
op|'('
name|'autocommit'
op|'='
name|'True'
op|','
name|'expire_on_commit'
op|'='
name|'False'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a SQLAlchemy session."""'
newline|'\n'
nl|'\n'
name|'facade'
op|'='
name|'_create_facade_lazily'
op|'('
op|')'
newline|'\n'
name|'return'
name|'facade'
op|'.'
name|'get_session'
op|'('
name|'autocommit'
op|'='
name|'autocommit'
op|','
nl|'\n'
name|'expire_on_commit'
op|'='
name|'expire_on_commit'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_engine
dedent|''
name|'def'
name|'get_engine'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a SQLAlchemy engine."""'
newline|'\n'
nl|'\n'
name|'facade'
op|'='
name|'_create_facade_lazily'
op|'('
op|')'
newline|'\n'
name|'return'
name|'facade'
op|'.'
name|'get_engine'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
