begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nA connection to XenServer or Xen Cloud Platform.\n\nThe concurrency model for this class is as follows:\n\nAll XenAPI calls are on a green thread (using eventlet\'s "tpool"\nthread pool). They are remote calls, and so may hang for the usual\nreasons.\n\nAll long-running XenAPI calls (VM.start, VM.reboot, etc) are called async\n(using XenAPI.VM.async_start etc). These return a task, which can then be\npolled for completion.\n\nThis combination of techniques means that we don\'t block the main thread at\nall, and at the same time we don\'t hold lots of threads waiting for\nlong-running operations.\n\nFIXME: get_info currently doesn\'t conform to these rules, and will block the\nreactor thread if the VM.get_by_name_label or VM.get_record calls block.\n\n**Related Flags**\n\n:xenapi_connection_url:  URL for connection to XenServer/Xen Cloud Platform.\n:xenapi_connection_username:  Username for connection to XenServer/Xen Cloud\n                              Platform (default: root).\n:xenapi_connection_password:  Password for connection to XenServer/Xen Cloud\n                              Platform.\n:xenapi_task_poll_interval:  The interval (seconds) used for polling of\n                             remote tasks (Async.VM.start, etc)\n                             (default: 0.5).\n:target_host:                the iSCSI Target Host IP address, i.e. the IP\n                             address for the nova-volume host\n:target_port:                iSCSI Target Port, 3260 Default\n:iqn_prefix:                 IQN Prefix, e.g. \'iqn.2010-10.org.openstack\'\n\n**Variable Naming Scheme**\n\n- suffix "_ref" for opaque references\n- suffix "_uuid" for UUIDs\n- suffix "_rec" for record objects\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'xmlrpclib'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'queue'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'tpool'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'host'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'pool'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volumeops'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|xenapi_opts
name|'xenapi_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_connection_url'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'URL for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'Required if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_connection_username'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'root'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Username for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_connection_password'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Password for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'xenapi_connection_concurrent'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum number of concurrent XenAPI connections. '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'xenapi_task_poll_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'0.5'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The interval used for polling of remote tasks '"
nl|'\n'
string|"'(Async.VM.start, etc). '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'xenapi_vhd_coalesce_poll_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The interval used for polling of coalescing vhds. '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'xenapi_vhd_coalesce_max_attempts'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Max number of times to poll for VHD to coalesce. '"
nl|'\n'
string|"'Used only if connection_type=xenapi.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_agent_path'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'usr/sbin/xe-update-networking'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Specifies the path in which the xenapi guest agent '"
nl|'\n'
string|"'should be located. If the agent is present, network '"
nl|'\n'
string|"'configuration is not injected into the image. '"
nl|'\n'
string|"'Used if connection_type=xenapi and flat_injected=True'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_sr_base_path'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'/var/run/sr-mount'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Base path to the storage repository'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'xenapi_log_instance_actions'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Log all instance calls to XenAPI in the database.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'target_host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'iSCSI Target Host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'target_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'3260'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'iSCSI Target Port, 3260 Default'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'iqn_prefix'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'iqn.2010-10.org.openstack'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'IQN Prefix'"
op|')'
op|','
nl|'\n'
comment|'# NOTE(sirp): This is a work-around for a bug in Ubuntu Maverick,'
nl|'\n'
comment|'# when we pull support for it, we should remove this'
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'xenapi_remap_vbd_dev'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Used to enable the remapping of VBD dev '"
nl|'\n'
string|"'(Works around an issue in Ubuntu Maverick)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'xenapi_remap_vbd_dev_prefix'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'sd'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Specify prefix to remap VBD dev to '"
nl|'\n'
string|"'(ex. /dev/xvdb -> /dev/sdb)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'xenapi_login_timeout'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Timeout in seconds for XenAPI login.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'xenapi_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_connection
name|'def'
name|'get_connection'
op|'('
name|'_read_only'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Note that XenAPI doesn\'t have a read-only connection mode, so\n    the read_only parameter is ignored."""'
newline|'\n'
name|'url'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
newline|'\n'
name|'username'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_username'
newline|'\n'
name|'password'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_password'
newline|'\n'
name|'if'
name|'not'
name|'url'
name|'or'
name|'password'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Must specify xenapi_connection_url, '"
nl|'\n'
string|"'xenapi_connection_username (optionally), and '"
nl|'\n'
string|"'xenapi_connection_password to use '"
nl|'\n'
string|"'connection_type=xenapi'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'XenAPIConnection'
op|'('
name|'url'
op|','
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIConnection
dedent|''
name|'class'
name|'XenAPIConnection'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A connection to XenServer or Xen Cloud Platform"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIConnection'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'XenAPISession'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'='
name|'volumeops'
op|'.'
name|'VolumeOps'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_host_state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_host'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_product_version'
op|'='
name|'self'
op|'.'
name|'_session'
op|'.'
name|'get_product_version'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'='
name|'vmops'
op|'.'
name|'VMOps'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'_product_version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_pool'
op|'='
name|'pool'
op|'.'
name|'ResourcePool'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|host_state
name|'def'
name|'host_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_host_state'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_host_state'
op|'='
name|'host'
op|'.'
name|'HostState'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_host_state'
newline|'\n'
nl|'\n'
DECL|member|init_host
dedent|''
name|'def'
name|'init_host'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
comment|'#FIXME(armando): implement this'
nl|'\n'
comment|'#NOTE(armando): would we need a method'
nl|'\n'
comment|'#to call when shutting down the host?'
nl|'\n'
comment|'#e.g. to do session logout?'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|list_instances
dedent|''
name|'def'
name|'list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List VM instances"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_instances_detail
dedent|''
name|'def'
name|'list_instances_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'list_instances_detail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|spawn
dedent|''
name|'def'
name|'spawn'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'spawn'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|confirm_migration
dedent|''
name|'def'
name|'confirm_migration'
op|'('
name|'self'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms a resize, destroying the source VM"""'
newline|'\n'
comment|'# TODO(Vek): Need to pass context in for access to auth_token'
nl|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'confirm_migration'
op|'('
name|'migration'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|finish_revert_migration
dedent|''
name|'def'
name|'finish_revert_migration'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish reverting a resize, powering back on the instance"""'
newline|'\n'
comment|'# NOTE(vish): Xen currently does not use network info.'
nl|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'finish_revert_migration'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|finish_migration
dedent|''
name|'def'
name|'finish_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Completes a resize, turning on the migrated instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'finish_migration'
op|'('
name|'context'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Create snapshot from a running VM instance """'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'snapshot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reboot
dedent|''
name|'def'
name|'reboot'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'reboot_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reboot VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'reboot'
op|'('
name|'instance'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_admin_password
dedent|''
name|'def'
name|'set_admin_password'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'new_pass'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the root/admin password on the VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'set_admin_password'
op|'('
name|'instance'
op|','
name|'new_pass'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_file
dedent|''
name|'def'
name|'inject_file'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'b64_path'
op|','
name|'b64_contents'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a file on the VM instance. The file path and contents\n        should be base64-encoded.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'inject_file'
op|'('
name|'instance'
op|','
name|'b64_path'
op|','
name|'b64_contents'
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroy
dedent|''
name|'def'
name|'destroy'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroy VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pause
dedent|''
name|'def'
name|'pause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pause VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'pause'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unpause
dedent|''
name|'def'
name|'unpause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unpause paused VM instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unpause'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|migrate_disk_and_power_off
dedent|''
name|'def'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'dest'
op|','
nl|'\n'
name|'instance_type'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Transfers the VHD of a running instance to another host, then shuts\n        off the instance copies over the COW disk"""'
newline|'\n'
comment|'# NOTE(vish): Xen currently does not use network info.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest'
op|','
name|'instance_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|suspend
dedent|''
name|'def'
name|'suspend'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""suspend the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'suspend'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""resume the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'resume'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rescue
dedent|''
name|'def'
name|'rescue'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rescue the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'rescue'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unrescue
dedent|''
name|'def'
name|'unrescue'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unrescue the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unrescue'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_off
dedent|''
name|'def'
name|'power_off'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power off the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'power_off'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_on
dedent|''
name|'def'
name|'power_on'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power on the specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'power_on'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll_rebooting_instances
dedent|''
name|'def'
name|'poll_rebooting_instances'
op|'('
name|'self'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll for rebooting instances"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'poll_rebooting_instances'
op|'('
name|'timeout'
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll_rescued_instances
dedent|''
name|'def'
name|'poll_rescued_instances'
op|'('
name|'self'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll for rescued instances"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'poll_rescued_instances'
op|'('
name|'timeout'
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll_unconfirmed_resizes
dedent|''
name|'def'
name|'poll_unconfirmed_resizes'
op|'('
name|'self'
op|','
name|'resize_confirm_window'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll for unconfirmed resizes"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'poll_unconfirmed_resizes'
op|'('
name|'resize_confirm_window'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_network
dedent|''
name|'def'
name|'reset_network'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""reset networking for specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'reset_network'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_network_info
dedent|''
name|'def'
name|'inject_network_info'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""inject network info for specified instance"""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'inject_network_info'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|plug_vifs
dedent|''
name|'def'
name|'plug_vifs'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Plug VIFs into networks."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'plug_vifs'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unplug_vifs
dedent|''
name|'def'
name|'unplug_vifs'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unplug VIFs from networks."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unplug_vifs'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_info
dedent|''
name|'def'
name|'get_info'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return data about VM instance"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_diagnostics
dedent|''
name|'def'
name|'get_diagnostics'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return data about VM diagnostics"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_bw_usage
dedent|''
name|'def'
name|'get_all_bw_usage'
op|'('
name|'self'
op|','
name|'start_time'
op|','
name|'stop_time'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return bandwidth usage info for each interface on each\n           running VM"""'
newline|'\n'
name|'bwusage'
op|'='
op|'['
op|']'
newline|'\n'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'mktime'
op|'('
name|'start_time'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'stop_time'
op|':'
newline|'\n'
indent|'            '
name|'stop_time'
op|'='
name|'time'
op|'.'
name|'mktime'
op|'('
name|'stop_time'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'iusage'
name|'in'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_all_bw_usage'
op|'('
name|'start_time'
op|','
nl|'\n'
name|'stop_time'
op|')'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'macaddr'
op|','
name|'usage'
name|'in'
name|'iusage'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'bwusage'
op|'.'
name|'append'
op|'('
name|'dict'
op|'('
name|'mac_address'
op|'='
name|'macaddr'
op|','
nl|'\n'
name|'bw_in'
op|'='
name|'usage'
op|'['
string|"'bw_in'"
op|']'
op|','
nl|'\n'
name|'bw_out'
op|'='
name|'usage'
op|'['
string|"'bw_out'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'bwusage'
newline|'\n'
nl|'\n'
DECL|member|get_console_output
dedent|''
name|'def'
name|'get_console_output'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return snapshot of console"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_console_output'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vnc_console
dedent|''
name|'def'
name|'get_vnc_console'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return link to instance\'s VNC console"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_vnc_console'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_volume_connector
dedent|''
name|'def'
name|'get_volume_connector'
op|'('
name|'self'
op|','
name|'_instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return volume connector information"""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_initiator'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
name|'self'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'True'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'stats'
op|'['
string|"'host_other-config'"
op|']'
op|'['
string|"'iscsi_iqn'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Could not determine iscsi initiator name'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'ip'"
op|':'
name|'self'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|','
nl|'\n'
string|"'initiator'"
op|':'
name|'self'
op|'.'
name|'_initiator'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|get_host_ip_addr
name|'def'
name|'get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xs_url'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
op|')'
newline|'\n'
name|'return'
name|'xs_url'
op|'.'
name|'netloc'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance_name'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach volume storage to VM instance"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'instance_name'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance_name'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volume storage to VM instance"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'instance_name'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_console_pool_info
dedent|''
name|'def'
name|'get_console_pool_info'
op|'('
name|'self'
op|','
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xs_url'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'address'"
op|':'
name|'xs_url'
op|'.'
name|'netloc'
op|','
nl|'\n'
string|"'username'"
op|':'
name|'FLAGS'
op|'.'
name|'xenapi_connection_username'
op|','
nl|'\n'
string|"'password'"
op|':'
name|'FLAGS'
op|'.'
name|'xenapi_connection_password'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|update_available_resource
dedent|''
name|'def'
name|'update_available_resource'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates compute manager resource info on ComputeNode table.\n\n        This method is called when nova-compute launches, and\n        whenever admin executes "nova-manage service update_resource".\n\n        :param ctxt: security context\n        :param host: hostname that compute manager is currently running\n\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'service_ref'
op|'='
name|'db'
op|'.'
name|'service_get_all_compute_by_host'
op|'('
name|'ctxt'
op|','
name|'host'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'host_stats'
op|'='
name|'self'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Updating host information'
nl|'\n'
name|'total_ram_mb'
op|'='
name|'host_stats'
op|'['
string|"'host_memory_total'"
op|']'
op|'/'
op|'('
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'free_ram_mb'
op|'='
name|'host_stats'
op|'['
string|"'host_memory_free'"
op|']'
op|'/'
op|'('
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'total_disk_gb'
op|'='
name|'host_stats'
op|'['
string|"'disk_total'"
op|']'
op|'/'
op|'('
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'used_disk_gb'
op|'='
name|'host_stats'
op|'['
string|"'disk_used'"
op|']'
op|'/'
op|'('
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
nl|'\n'
name|'dic'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'total_ram_mb'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'total_disk_gb'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'total_ram_mb'
op|'-'
name|'free_ram_mb'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'used_disk_gb'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'xen'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hypervisor_hostname'"
op|':'
name|'host_stats'
op|'['
string|"'host_hostname'"
op|']'
op|','
nl|'\n'
string|"'service_id'"
op|':'
name|'service_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
name|'host_stats'
op|'['
string|"'host_cpu_info'"
op|']'
op|'['
string|"'cpu_count'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'compute_node_ref'
op|'='
name|'service_ref'
op|'['
string|"'compute_node'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'compute_node_ref'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record created for %s '"
op|')'
op|'%'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'ctxt'
op|','
name|'dic'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record updated for %s '"
op|')'
op|'%'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'ctxt'
op|','
name|'compute_node_ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
DECL|member|compare_cpu
dedent|''
dedent|''
name|'def'
name|'compare_cpu'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This method is supported only by libvirt."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|"'This method is supported only by libvirt.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_filtering_rules_for_instance
dedent|''
name|'def'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This method is supported only libvirt."""'
newline|'\n'
comment|'# NOTE(salvatore-orlando): it enforces security groups on'
nl|'\n'
comment|'# host initialization and live migration.'
nl|'\n'
comment|'# Live migration is not supported by XenAPI (as of 2011-11-09)'
nl|'\n'
comment|'# In XenAPI we do not assume instances running upon host initialization'
nl|'\n'
name|'return'
newline|'\n'
nl|'\n'
DECL|member|live_migration
dedent|''
name|'def'
name|'live_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest'
op|','
nl|'\n'
name|'post_method'
op|','
name|'recover_method'
op|','
name|'block_migration'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This method is supported only by libvirt."""'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
DECL|member|unfilter_instance
dedent|''
name|'def'
name|'unfilter_instance'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes security groups configured for an instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unfilter_instance'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_security_group_rules
dedent|''
name|'def'
name|'refresh_security_group_rules'
op|'('
name|'self'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Updates security group rules for all instances\n            associated with a given security group\n            Invoked when security group rules are updated\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_security_group_rules'
op|'('
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_security_group_members
dedent|''
name|'def'
name|'refresh_security_group_members'
op|'('
name|'self'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Updates security group rules for all instances\n            associated with a given security group\n            Invoked when instances are added/removed to a security group\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_security_group_members'
op|'('
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_provider_fw_rules
dedent|''
name|'def'
name|'refresh_provider_fw_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|update_host_status
dedent|''
name|'def'
name|'update_host_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update the status info of the host, and return those values\n            to the calling program."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'host_state'
op|'.'
name|'update_status'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_host_stats
dedent|''
name|'def'
name|'get_host_stats'
op|'('
name|'self'
op|','
name|'refresh'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the current state of the host. If \'refresh\' is\n           True, run the update first."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'host_state'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'refresh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|host_power_action
dedent|''
name|'def'
name|'host_power_action'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'action'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The only valid values for \'action\' on XenServer are \'reboot\' or\n        \'shutdown\', even though the API also accepts \'startup\'. As this is\n        not technically possible on XenServer, since the host is the same\n        physical machine as the hypervisor, if this is requested, we need to\n        raise an exception.\n        """'
newline|'\n'
name|'if'
name|'action'
name|'in'
op|'('
string|'"reboot"'
op|','
string|'"shutdown"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'host_power_action'
op|'('
name|'host'
op|','
name|'action'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Host startup on XenServer is not supported."'
op|')'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_host_enabled
dedent|''
dedent|''
name|'def'
name|'set_host_enabled'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'enabled'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets the specified host\'s ability to accept new instances."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'set_host_enabled'
op|'('
name|'host'
op|','
name|'enabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|host_maintenance_mode
dedent|''
name|'def'
name|'host_maintenance_mode'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start/Stop host maintenance window. On start, it triggers\n        guest VMs evacuation."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'host_maintenance_mode'
op|'('
name|'host'
op|','
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_to_aggregate
dedent|''
name|'def'
name|'add_to_aggregate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a compute host to an aggregate."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pool'
op|'.'
name|'add_to_aggregate'
op|'('
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_from_aggregate
dedent|''
name|'def'
name|'remove_from_aggregate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a compute host from an aggregate."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'context'
op|','
nl|'\n'
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPISession
dedent|''
dedent|''
name|'class'
name|'XenAPISession'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The session to invoke XenAPI SDK calls"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'XenAPI'
op|'='
name|'self'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sessions'
op|'='
name|'queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host_uuid'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'is_slave'
op|'='
name|'False'
newline|'\n'
name|'exception'
op|'='
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
name|'_'
op|'('
string|'"Unable to log in to XenAPI "'
nl|'\n'
string|'"(is the Dom0 disk full?)"'
op|')'
op|')'
newline|'\n'
name|'url'
op|'='
name|'self'
op|'.'
name|'_create_first_session'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_session_pool'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_host_uuid'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_first_session
dedent|''
name|'def'
name|'_create_first_session'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'self'
op|'.'
name|'_create_session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'with'
name|'timeout'
op|'.'
name|'Timeout'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_login_timeout'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|','
name|'e'
op|':'
newline|'\n'
comment|"# if user and pw of the master are different, we're doomed!"
nl|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'details'
op|'['
number|'0'
op|']'
op|'=='
string|"'HOST_IS_SLAVE'"
op|':'
newline|'\n'
indent|'                '
name|'master'
op|'='
name|'e'
op|'.'
name|'details'
op|'['
number|'1'
op|']'
newline|'\n'
name|'url'
op|'='
name|'pool'
op|'.'
name|'swap_xapi_host'
op|'('
name|'url'
op|','
name|'master'
op|')'
newline|'\n'
name|'session'
op|'='
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_slave'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
name|'return'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|_populate_session_pool
dedent|''
name|'def'
name|'_populate_session_pool'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_connection_concurrent'
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'self'
op|'.'
name|'_create_session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'with'
name|'timeout'
op|'.'
name|'Timeout'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_login_timeout'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_populate_host_uuid
dedent|''
dedent|''
name|'def'
name|'_populate_host_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'is_slave'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'aggr'
op|'='
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host_uuid'
op|'='
name|'aggr'
op|'.'
name|'metadetails'
op|'['
name|'FLAGS'
op|'.'
name|'host'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'Host is member of a pool, but DB '"
nl|'\n'
string|"'says otherwise'"
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'                '
name|'host_ref'
op|'='
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'session'
op|'.'
name|'get_this_host'
op|'('
name|'session'
op|'.'
name|'handle'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host_uuid'
op|'='
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'host'
op|'.'
name|'get_uuid'
op|'('
name|'host_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_product_version
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_product_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a tuple of (major, minor, rev) for the host version"""'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'get_xenapi_host'
op|'('
op|')'
newline|'\n'
name|'software_version'
op|'='
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|"'host.get_software_version'"
op|','
nl|'\n'
name|'host'
op|')'
newline|'\n'
name|'product_version'
op|'='
name|'software_version'
op|'['
string|"'product_version'"
op|']'
newline|'\n'
name|'return'
name|'tuple'
op|'('
name|'int'
op|'('
name|'part'
op|')'
name|'for'
name|'part'
name|'in'
name|'product_version'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_imported_xenapi
dedent|''
name|'def'
name|'get_imported_xenapi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stubout point. This can be replaced with a mock xenapi module."""'
newline|'\n'
name|'return'
name|'__import__'
op|'('
string|"'XenAPI'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_session_id
dedent|''
name|'def'
name|'get_session_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a string session_id.  Used for vnc consoles."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'str'
op|'('
name|'session'
op|'.'
name|'_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|member|_get_session
name|'def'
name|'_get_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return exclusive session for scope of with statement"""'
newline|'\n'
name|'session'
op|'='
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'session'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_xenapi_host
dedent|''
dedent|''
name|'def'
name|'get_xenapi_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the xenapi host on which nova-compute runs on."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'host'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'host_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_xenapi
dedent|''
dedent|''
name|'def'
name|'call_xenapi'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call the specified XenAPI method on a background thread."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'session'
op|'.'
name|'xenapi'
newline|'\n'
name|'for'
name|'m'
name|'in'
name|'method'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'='
name|'getattr'
op|'('
name|'f'
op|','
name|'m'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'f'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_xenapi_request
dedent|''
dedent|''
name|'def'
name|'call_xenapi_request'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Some interactions with dom0, such as interacting with xenstore\'s\n        param record, require using the xenapi_request method of the session\n        object. This wraps that call on a background thread.\n        """'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'session'
op|'.'
name|'xenapi_request'
newline|'\n'
name|'return'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'f'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|async_call_plugin
dedent|''
dedent|''
name|'def'
name|'async_call_plugin'
op|'('
name|'self'
op|','
name|'plugin'
op|','
name|'fn'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call Async.host.call_plugin on a background thread."""'
newline|'\n'
comment|'# NOTE(johannes): Fetch host before we acquire a session. Since'
nl|'\n'
comment|'# _get_session() acquires a session too, it can result in a deadlock'
nl|'\n'
comment|'# if multiple greenthreads race with each other. See bug 924918'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'get_xenapi_host'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(armando): pass the host uuid along with the args so that'
nl|'\n'
comment|'# the plugin gets executed on the right host when using XS pools'
nl|'\n'
name|'args'
op|'['
string|"'host_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'host_uuid'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'self'
op|'.'
name|'_unwrap_plugin_exceptions'
op|','
nl|'\n'
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'Async'
op|'.'
name|'host'
op|'.'
name|'call_plugin'
op|','
nl|'\n'
name|'host'
op|','
name|'plugin'
op|','
name|'fn'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait_for_task
dedent|''
dedent|''
name|'def'
name|'wait_for_task'
op|'('
name|'self'
op|','
name|'task'
op|','
name|'uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the result of the given task. The task is polled\n        until it completes."""'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
string|'"""Poll the given XenAPI task, and return the result if the\n            action was completed successfully or not.\n            """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'name'
op|'='
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|'"task.get_name_label"'
op|','
name|'task'
op|')'
newline|'\n'
name|'status'
op|'='
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|'"task.get_status"'
op|','
name|'task'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure action is never > 255'
nl|'\n'
name|'action'
op|'='
name|'dict'
op|'('
name|'action'
op|'='
name|'name'
op|'['
op|':'
number|'255'
op|']'
op|','
name|'error'
op|'='
name|'None'
op|')'
newline|'\n'
name|'log_instance_actions'
op|'='
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_log_instance_actions'
name|'and'
nl|'\n'
name|'uuid'
op|')'
newline|'\n'
name|'if'
name|'log_instance_actions'
op|':'
newline|'\n'
indent|'                '
name|'action'
op|'['
string|'"instance_uuid"'
op|']'
op|'='
name|'uuid'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'status'
op|'=='
string|'"pending"'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'elif'
name|'status'
op|'=='
string|'"success"'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|'"task.get_result"'
op|','
name|'task'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Task [%(name)s] %(task)s status:"'
nl|'\n'
string|'" success    %(result)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'log_instance_actions'
op|':'
newline|'\n'
indent|'                    '
name|'db'
op|'.'
name|'instance_action_create'
op|'('
name|'ctxt'
op|','
name|'action'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_parse_xmlrpc_value'
op|'('
name|'result'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'error_info'
op|'='
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|'"task.get_error_info"'
op|','
name|'task'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Task [%(name)s] %(task)s status:"'
nl|'\n'
string|'" %(status)s    %(error_info)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'log_instance_actions'
op|':'
newline|'\n'
indent|'                    '
name|'action'
op|'['
string|'"error"'
op|']'
op|'='
name|'str'
op|'('
name|'error_info'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_action_create'
op|'('
name|'ctxt'
op|','
name|'action'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
name|'error_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'greenthread'
op|'.'
name|'sleep'
op|'('
name|'FLAGS'
op|'.'
name|'xenapi_task_poll_interval'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_session
dedent|''
dedent|''
name|'def'
name|'_create_session'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stubout point. This can be replaced with a mock session."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Session'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unwrap_plugin_exceptions
dedent|''
name|'def'
name|'_unwrap_plugin_exceptions'
op|'('
name|'self'
op|','
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Parse exception details"""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got exception: %s"'
op|')'
op|','
name|'exc'
op|')'
newline|'\n'
name|'if'
op|'('
name|'len'
op|'('
name|'exc'
op|'.'
name|'details'
op|')'
op|'=='
number|'4'
name|'and'
nl|'\n'
name|'exc'
op|'.'
name|'details'
op|'['
number|'0'
op|']'
op|'=='
string|"'XENAPI_PLUGIN_EXCEPTION'"
name|'and'
nl|'\n'
name|'exc'
op|'.'
name|'details'
op|'['
number|'2'
op|']'
op|'=='
string|"'Failure'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'params'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'params'
op|'='
name|'eval'
op|'('
name|'exc'
op|'.'
name|'details'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exc'
newline|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'xmlrpclib'
op|'.'
name|'ProtocolError'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got exception: %s"'
op|')'
op|','
name|'exc'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_xmlrpc_value
dedent|''
dedent|''
dedent|''
name|'def'
name|'_parse_xmlrpc_value'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse the given value as if it were an XML-RPC value. This is\n    sometimes used as the format for the task.result field."""'
newline|'\n'
name|'if'
name|'not'
name|'val'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'x'
op|'='
name|'xmlrpclib'
op|'.'
name|'loads'
op|'('
nl|'\n'
string|'\'<?xml version="1.0"?><methodResponse><params><param>\''
op|'+'
nl|'\n'
name|'val'
op|'+'
nl|'\n'
string|"'</param></params></methodResponse>'"
op|')'
newline|'\n'
name|'return'
name|'x'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
endmarker|''
end_unit
