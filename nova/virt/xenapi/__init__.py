begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\n:mod:`xenapi` -- Nova support for XenServer and XCP through XenAPI\n==================================================================\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|load_sdk
name|'def'
name|'load_sdk'
op|'('
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This method is used for loading the XenAPI SDK (fake or real)\n    """'
newline|'\n'
name|'xenapi_module'
op|'='
name|'flags'
op|'.'
name|'xenapi_use_fake_session'
name|'and'
string|"'nova.virt.xenapi.fake'"
name|'or'
string|"'XenAPI'"
newline|'\n'
name|'from_list'
op|'='
name|'flags'
op|'.'
name|'xenapi_use_fake_session'
name|'and'
op|'['
string|"'fake'"
op|']'
name|'or'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'__import__'
op|'('
name|'xenapi_module'
op|','
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
name|'from_list'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HelperBase
dedent|''
name|'class'
name|'HelperBase'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The class that wraps the helper methods together.\n    """'
newline|'\n'
DECL|variable|XenAPI
name|'XenAPI'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|late_import
name|'def'
name|'late_import'
op|'('
name|'cls'
op|','
name|'FLAGS'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Load XenAPI module in for helper class\n        """'
newline|'\n'
name|'if'
name|'cls'
op|'.'
name|'XenAPI'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cls'
op|'.'
name|'XenAPI'
op|'='
name|'load_sdk'
op|'('
name|'FLAGS'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
