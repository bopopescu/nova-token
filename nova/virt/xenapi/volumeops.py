begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManagement class for Storage-related functions (attach, detach, etc).\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeOps
name|'class'
name|'VolumeOps'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|attach_volume
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'device_path'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
comment|'# NOTE: No Resource Pool concept so far'
nl|'\n'
indent|'        '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Attach_volume: %s, %s, %s"'
op|','
nl|'\n'
name|'instance_name'
op|','
name|'device_path'
op|','
name|'mountpoint'
op|')'
newline|'\n'
name|'volume_info'
op|'='
name|'_parse_volume_info'
op|'('
name|'device_path'
op|','
name|'mountpoint'
op|')'
newline|'\n'
comment|'# Create the iSCSI SR, and the PDB through which hosts access SRs.'
nl|'\n'
comment|'# But first, retrieve target info, like Host, IQN, LUN and SCSIID'
nl|'\n'
name|'target'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_get_target'
op|'('
name|'volume_info'
op|')'
newline|'\n'
name|'label'
op|'='
string|"'SR-%s'"
op|'%'
name|'volume_info'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'description'
op|'='
string|"'Attached-to:%s'"
op|'%'
name|'instance_name'
newline|'\n'
comment|'# Create SR and check the physical space available for the VDI allocation '
nl|'\n'
name|'sr_ref'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_create_sr'
op|'('
name|'target'
op|','
name|'label'
op|','
name|'description'
op|')'
newline|'\n'
name|'disk_size'
op|'='
name|'int'
op|'('
name|'target'
op|'['
string|"'size'"
op|']'
op|')'
newline|'\n'
comment|'#disk_size = yield self._get_sr_available_space(sr_ref)'
nl|'\n'
comment|'# Create VDI  and attach VBD to VM'
nl|'\n'
name|'vm_ref'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_lookup'
op|'('
name|'instance_name'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Mounting disk of: %s GB"'
op|','
op|'('
name|'disk_size'
op|'/'
op|'('
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024.0'
op|')'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'vdi_ref'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_create_vdi'
op|'('
name|'sr_ref'
op|','
name|'disk_size'
op|','
nl|'\n'
string|"'user'"
op|','
name|'volume_info'
op|'['
string|"'volumeId'"
op|']'
op|','
string|"''"
op|','
nl|'\n'
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'logging'
op|'.'
name|'warn'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'yield'
name|'self'
op|'.'
name|'_destroy_sr'
op|'('
name|'sr_ref'
op|')'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|"'Unable to create VDI on SR %s for instance %s'"
nl|'\n'
op|'%'
op|'('
name|'sr_ref'
op|','
nl|'\n'
name|'instance_name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'userdevice'
op|'='
number|'2'
comment|'# FIXME: this depends on the numbers of attached disks '
newline|'\n'
name|'vbd_ref'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_create_vbd'
op|'('
name|'vm_ref'
op|','
name|'vdi_ref'
op|','
name|'userdevice'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'logging'
op|'.'
name|'warn'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'yield'
name|'self'
op|'.'
name|'_destroy_sr'
op|'('
name|'sr_ref'
op|')'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|"'Unable to create VBD on SR %s for instance %s'"
nl|'\n'
op|'%'
op|'('
name|'sr_ref'
op|','
nl|'\n'
name|'instance_name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"''"
op|')'
newline|'\n'
name|'task'
op|'='
name|'yield'
name|'self'
op|'.'
name|'_call_xenapi'
op|'('
string|"'Async.VBD.plug'"
op|','
name|'vbd_ref'
op|')'
newline|'\n'
name|'yield'
name|'self'
op|'.'
name|'_wait_for_task'
op|'('
name|'task'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'                    '
name|'logging'
op|'.'
name|'warn'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'yield'
name|'self'
op|'.'
name|'_destroy_sr'
op|'('
name|'sr_ref'
op|')'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|"'Unable to attach volume to instance %s'"
op|'%'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'yield'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'defer'
op|'.'
name|'inlineCallbacks'
newline|'\n'
DECL|member|detach_volume
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Detach_volume: %s, %s, %s"'
op|','
name|'instance_name'
op|','
name|'mountpoint'
op|')'
newline|'\n'
comment|'# Detach VBD from VM'
nl|'\n'
comment|'# Forget SR/PDB info associated with host'
nl|'\n'
comment|'# TODO: can we avoid destroying the SR every time we detach?'
nl|'\n'
name|'yield'
name|'True'
dedent|''
dedent|''
endmarker|''
end_unit
