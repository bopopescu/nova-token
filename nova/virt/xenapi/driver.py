begin_unit
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'# Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nA driver for XenServer or Xen Cloud Platform.\n\n**Related Flags**\n\n:connection_url:  URL for connection to XenServer/Xen Cloud Platform.\n:connection_username:  Username for connection to XenServer/Xen Cloud\n                       Platform (default: root).\n:connection_password:  Password for connection to XenServer/Xen Cloud\n                       Platform.\n:target_host:                the iSCSI Target Host IP address, i.e. the IP\n                             address for the nova-volume host\n:target_port:                iSCSI Target Port, 3260 Default\n:iqn_prefix:                 IQN Prefix, e.g. \'iqn.2010-10.org.openstack\'\n\n**Variable Naming Scheme**\n\n- suffix "_ref" for opaque references\n- suffix "_uuid" for UUIDs\n- suffix "_rec" for record objects\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'xmlrpclib'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'queue'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'timeout'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'aggregate'
name|'as'
name|'aggregate_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'versionutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'unit'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'host'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'pool'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'pool_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vm_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volumeops'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|xenapi_opts
name|'xenapi_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'connection_url'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_connection_url'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'URL for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'A special value of unix://local can be used to connect '"
nl|'\n'
string|"'to the local unix socket.  '"
nl|'\n'
string|"'Required if compute_driver=xenapi.XenAPIDriver'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'connection_username'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'root'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_connection_username'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Username for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'Used only if compute_driver=xenapi.XenAPIDriver'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'connection_password'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_connection_password'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Password for connection to XenServer/Xen Cloud Platform. '"
nl|'\n'
string|"'Used only if compute_driver=xenapi.XenAPIDriver'"
op|','
nl|'\n'
DECL|variable|secret
name|'secret'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'connection_concurrent'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_connection_concurrent'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum number of concurrent XenAPI connections. '"
nl|'\n'
string|"'Used only if compute_driver=xenapi.XenAPIDriver'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'vhd_coalesce_poll_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5.0'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_vhd_coalesce_poll_interval'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The interval used for polling of coalescing vhds. '"
nl|'\n'
string|"'Used only if compute_driver=xenapi.XenAPIDriver'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'check_host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_check_host'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Ensure compute service is running on host XenAPI '"
nl|'\n'
string|"'connects to.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'vhd_coalesce_max_attempts'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_vhd_coalesce_max_attempts'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Max number of times to poll for VHD to coalesce. '"
nl|'\n'
string|"'Used only if compute_driver=xenapi.XenAPIDriver'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'sr_base_path'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'/var/run/sr-mount'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_sr_base_path'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Base path to the storage repository'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'target_host'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'target_host'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'iSCSI Target Host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'target_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'3260'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'target_port'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'iSCSI Target Port, 3260 Default'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'iqn_prefix'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'iqn.2010-10.org.openstack'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'iqn_prefix'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'IQN Prefix'"
op|')'
op|','
nl|'\n'
comment|'# NOTE(sirp): This is a work-around for a bug in Ubuntu Maverick,'
nl|'\n'
comment|'# when we pull support for it, we should remove this'
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'remap_vbd_dev'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_remap_vbd_dev'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Used to enable the remapping of VBD dev '"
nl|'\n'
string|"'(Works around an issue in Ubuntu Maverick)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'remap_vbd_dev_prefix'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'sd'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_remap_vbd_dev_prefix'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Specify prefix to remap VBD dev to '"
nl|'\n'
string|"'(ex. /dev/xvdb -> /dev/sdb)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'login_timeout'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'xenapi_login_timeout'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Timeout in seconds for XenAPI login.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'xenapi_opts'
op|','
string|"'xenserver'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIDriver
name|'class'
name|'XenAPIDriver'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A connection to XenServer or Xen Cloud Platform."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'virtapi'
op|','
name|'read_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'virtapi'
op|')'
newline|'\n'
nl|'\n'
name|'url'
op|'='
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_url'
newline|'\n'
name|'username'
op|'='
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_username'
newline|'\n'
name|'password'
op|'='
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_password'
newline|'\n'
name|'if'
name|'not'
name|'url'
name|'or'
name|'password'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Must specify connection_url, '"
nl|'\n'
string|"'connection_username (optionally), and '"
nl|'\n'
string|"'connection_password to use '"
nl|'\n'
string|"'compute_driver=xenapi.XenAPIDriver'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_session'
op|'='
name|'XenAPISession'
op|'('
name|'url'
op|','
name|'username'
op|','
name|'password'
op|','
name|'self'
op|'.'
name|'virtapi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'='
name|'volumeops'
op|'.'
name|'VolumeOps'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_host_state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_host'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'virtapi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'='
name|'vmops'
op|'.'
name|'VMOps'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'virtapi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_hypervisor_hostname'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_pool'
op|'='
name|'pool'
op|'.'
name|'ResourcePool'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'virtapi'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|host_state
name|'def'
name|'host_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_host_state'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_host_state'
op|'='
name|'host'
op|'.'
name|'HostState'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_host_state'
newline|'\n'
nl|'\n'
DECL|member|init_host
dedent|''
name|'def'
name|'init_host'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'check_host'
op|':'
newline|'\n'
indent|'            '
name|'vm_utils'
op|'.'
name|'ensure_correct_host'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'vm_utils'
op|'.'
name|'cleanup_attached_vdis'
op|'('
name|'self'
op|'.'
name|'_session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'Failure while cleaning up attached VDIs'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_exists
dedent|''
dedent|''
name|'def'
name|'instance_exists'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks existence of an instance on the host.\n\n        :param instance_name: The name of the instance to lookup\n\n        Returns True if an instance with the supplied name exists on\n        the host, False otherwise.\n\n        NOTE(belliott): This is an override of the base method for\n        efficiency.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'instance_exists'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|estimate_instance_overhead
dedent|''
name|'def'
name|'estimate_instance_overhead'
op|'('
name|'self'
op|','
name|'instance_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get virtualization overhead required to build an instance of the\n        given flavor.\n\n        :param instance_info: Instance/flavor to calculate overhead for.\n        :returns: Overhead memory in MB.\n        """'
newline|'\n'
nl|'\n'
comment|'# XenServer memory overhead is proportional to the size of the'
nl|'\n'
comment|'# VM.  Larger flavor VMs become more efficient with respect to'
nl|'\n'
comment|'# overhead.'
nl|'\n'
nl|'\n'
comment|'# interpolated formula to predict overhead required per vm.'
nl|'\n'
comment|'# based on data from:'
nl|'\n'
comment|'# https://wiki.openstack.org/wiki/XenServer/Overhead'
nl|'\n'
name|'base'
op|'='
number|'3'
comment|'# MB'
newline|'\n'
name|'per_mb'
op|'='
number|'0.0081'
comment|'# MB'
newline|'\n'
nl|'\n'
name|'memory_mb'
op|'='
name|'instance_info'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'overhead'
op|'='
name|'memory_mb'
op|'*'
name|'per_mb'
op|'+'
name|'base'
newline|'\n'
name|'overhead'
op|'='
name|'math'
op|'.'
name|'ceil'
op|'('
name|'overhead'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'memory_mb'"
op|':'
name|'overhead'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_instances
dedent|''
name|'def'
name|'list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List VM instances."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_instance_uuids
dedent|''
name|'def'
name|'list_instance_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the list of nova instance uuids for VMs found on the\n        hypervisor.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|spawn
dedent|''
name|'def'
name|'spawn'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|','
name|'network_info'
op|'='
name|'None'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'spawn'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|confirm_migration
dedent|''
name|'def'
name|'confirm_migration'
op|'('
name|'self'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms a resize, destroying the source VM."""'
newline|'\n'
comment|'# TODO(Vek): Need to pass context in for access to auth_token'
nl|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'confirm_migration'
op|'('
name|'migration'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|finish_revert_migration
dedent|''
name|'def'
name|'finish_revert_migration'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish reverting a resize."""'
newline|'\n'
comment|'# NOTE(vish): Xen currently does not use network info.'
nl|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'finish_revert_migration'
op|'('
name|'instance'
op|','
name|'block_device_info'
op|','
nl|'\n'
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
DECL|member|finish_migration
dedent|''
name|'def'
name|'finish_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'False'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Completes a resize, turning on the migrated instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'finish_migration'
op|'('
name|'context'
op|','
name|'migration'
op|','
name|'instance'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|','
nl|'\n'
name|'block_device_info'
op|','
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'image_id'
op|','
name|'update_task_state'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create snapshot from a running VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'snapshot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'image_id'
op|','
name|'update_task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reboot
dedent|''
name|'def'
name|'reboot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'reboot_type'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'bad_volumes_callback'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reboot VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'reboot'
op|'('
name|'instance'
op|','
name|'reboot_type'
op|','
nl|'\n'
name|'bad_volumes_callback'
op|'='
name|'bad_volumes_callback'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_admin_password
dedent|''
name|'def'
name|'set_admin_password'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'new_pass'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the root/admin password on the VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'set_admin_password'
op|'('
name|'instance'
op|','
name|'new_pass'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_file
dedent|''
name|'def'
name|'inject_file'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'b64_path'
op|','
name|'b64_contents'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a file on the VM instance. The file path and contents\n        should be base64-encoded.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'inject_file'
op|'('
name|'instance'
op|','
name|'b64_path'
op|','
name|'b64_contents'
op|')'
newline|'\n'
nl|'\n'
DECL|member|change_instance_metadata
dedent|''
name|'def'
name|'change_instance_metadata'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'diff'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Apply a diff to the instance metadata."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'change_instance_metadata'
op|'('
name|'instance'
op|','
name|'diff'
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroy
dedent|''
name|'def'
name|'destroy'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'destroy_disks'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroy VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|','
nl|'\n'
name|'destroy_disks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pause
dedent|''
name|'def'
name|'pause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pause VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'pause'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unpause
dedent|''
name|'def'
name|'unpause'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unpause paused VM instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unpause'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|migrate_disk_and_power_off
dedent|''
name|'def'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'dest'
op|','
nl|'\n'
name|'instance_type'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Transfers the VHD of a running instance to another host, then shuts\n        off the instance copies over the COW disk\n        """'
newline|'\n'
comment|'# NOTE(vish): Xen currently does not use network info.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest'
op|','
name|'instance_type'
op|','
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|suspend
dedent|''
name|'def'
name|'suspend'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""suspend the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'suspend'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""resume the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'resume'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rescue
dedent|''
name|'def'
name|'rescue'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'rescue_password'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rescue the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'rescue'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'rescue_password'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unrescue
dedent|''
name|'def'
name|'unrescue'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unrescue the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unrescue'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_off
dedent|''
name|'def'
name|'power_off'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power off the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'power_off'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|power_on
dedent|''
name|'def'
name|'power_on'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Power on the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'power_on'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|soft_delete
dedent|''
name|'def'
name|'soft_delete'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Soft delete the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'soft_delete'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|restore
dedent|''
name|'def'
name|'restore'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Restore the specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'restore'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll_rebooting_instances
dedent|''
name|'def'
name|'poll_rebooting_instances'
op|'('
name|'self'
op|','
name|'timeout'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll for rebooting instances."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'poll_rebooting_instances'
op|'('
name|'timeout'
op|','
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_network
dedent|''
name|'def'
name|'reset_network'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""reset networking for specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'reset_network'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_network_info
dedent|''
name|'def'
name|'inject_network_info'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""inject network info for specified instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'inject_network_info'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|plug_vifs
dedent|''
name|'def'
name|'plug_vifs'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Plug VIFs into networks."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'plug_vifs'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unplug_vifs
dedent|''
name|'def'
name|'unplug_vifs'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unplug VIFs from networks."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unplug_vifs'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_info
dedent|''
name|'def'
name|'get_info'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return data about VM instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_diagnostics
dedent|''
name|'def'
name|'get_diagnostics'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return data about VM diagnostics."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_bw_counters
dedent|''
name|'def'
name|'get_all_bw_counters'
op|'('
name|'self'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return bandwidth usage counters for each interface on each\n           running VM.\n        """'
newline|'\n'
nl|'\n'
comment|'# we only care about VMs that correspond to a nova-managed'
nl|'\n'
comment|'# instance:'
nl|'\n'
name|'imap'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'inst'
op|'['
string|"'name'"
op|']'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
name|'for'
name|'inst'
name|'in'
name|'instances'
op|']'
op|')'
newline|'\n'
name|'bwcounters'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# get a dictionary of instance names.  values are dictionaries'
nl|'\n'
comment|'# of mac addresses with values that are the bw counters:'
nl|'\n'
comment|"# e.g. {'instance-001' : { 12:34:56:78:90:12 : {'bw_in': 0, ....}}"
nl|'\n'
name|'all_counters'
op|'='
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_all_bw_counters'
op|'('
op|')'
newline|'\n'
name|'for'
name|'instance_name'
op|','
name|'counters'
name|'in'
name|'all_counters'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
name|'in'
name|'imap'
op|':'
newline|'\n'
comment|'# yes these are stats for a nova-managed vm'
nl|'\n'
comment|'# correlate the stats with the nova instance uuid:'
nl|'\n'
indent|'                '
name|'for'
name|'vif_counter'
name|'in'
name|'counters'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'vif_counter'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'imap'
op|'['
name|'instance_name'
op|']'
newline|'\n'
name|'bwcounters'
op|'.'
name|'append'
op|'('
name|'vif_counter'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'bwcounters'
newline|'\n'
nl|'\n'
DECL|member|get_console_output
dedent|''
name|'def'
name|'get_console_output'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return snapshot of console."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_console_output'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vnc_console
dedent|''
name|'def'
name|'get_vnc_console'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return link to instance\'s VNC console."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_vnc_console'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_volume_connector
dedent|''
name|'def'
name|'get_volume_connector'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return volume connector information."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_initiator'
name|'or'
name|'not'
name|'self'
op|'.'
name|'_hypervisor_hostname'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
name|'self'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'True'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'stats'
op|'['
string|"'host_other-config'"
op|']'
op|'['
string|"'iscsi_iqn'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_hypervisor_hostname'
op|'='
name|'stats'
op|'['
string|"'host_hostname'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Could not determine key: %s'"
op|')'
op|'%'
name|'err'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_initiator'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'ip'"
op|':'
name|'self'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|','
nl|'\n'
string|"'initiator'"
op|':'
name|'self'
op|'.'
name|'_initiator'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'_hypervisor_hostname'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|get_host_ip_addr
name|'def'
name|'get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xs_url'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_url'
op|')'
newline|'\n'
name|'return'
name|'xs_url'
op|'.'
name|'netloc'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
name|'mountpoint'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach volume storage to VM instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
name|'mountpoint'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volume storage from VM instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_console_pool_info
dedent|''
name|'def'
name|'get_console_pool_info'
op|'('
name|'self'
op|','
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xs_url'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_url'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'address'"
op|':'
name|'xs_url'
op|'.'
name|'netloc'
op|','
nl|'\n'
string|"'username'"
op|':'
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_username'
op|','
nl|'\n'
string|"'password'"
op|':'
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_password'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve resource information.\n\n        This method is called when nova-compute launches, and\n        as part of a periodic task that records the results in the DB.\n\n        :param nodename: ignored in this driver\n        :returns: dictionary describing resources\n\n        """'
newline|'\n'
name|'host_stats'
op|'='
name|'self'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Updating host information'
nl|'\n'
name|'total_ram_mb'
op|'='
name|'host_stats'
op|'['
string|"'host_memory_total'"
op|']'
op|'/'
name|'unit'
op|'.'
name|'Mi'
newline|'\n'
comment|'# NOTE(belliott) memory-free-computed is a value provided by XenServer'
nl|'\n'
comment|'# for gauging free memory more conservatively than memory-free.'
nl|'\n'
name|'free_ram_mb'
op|'='
name|'host_stats'
op|'['
string|"'host_memory_free_computed'"
op|']'
op|'/'
name|'unit'
op|'.'
name|'Mi'
newline|'\n'
name|'total_disk_gb'
op|'='
name|'host_stats'
op|'['
string|"'disk_total'"
op|']'
op|'/'
name|'unit'
op|'.'
name|'Gi'
newline|'\n'
name|'used_disk_gb'
op|'='
name|'host_stats'
op|'['
string|"'disk_used'"
op|']'
op|'/'
name|'unit'
op|'.'
name|'Gi'
newline|'\n'
name|'hyper_ver'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
name|'self'
op|'.'
name|'_session'
op|'.'
name|'product_version'
op|')'
newline|'\n'
name|'dic'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'total_ram_mb'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'total_disk_gb'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'total_ram_mb'
op|'-'
name|'free_ram_mb'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'used_disk_gb'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'xen'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
name|'hyper_ver'
op|','
nl|'\n'
string|"'hypervisor_hostname'"
op|':'
name|'host_stats'
op|'['
string|"'host_hostname'"
op|']'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
name|'host_stats'
op|'['
string|"'host_cpu_info'"
op|']'
op|'['
string|"'cpu_count'"
op|']'
op|','
nl|'\n'
string|"'supported_instances'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
name|'host_stats'
op|'['
string|"'supported_instances'"
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'dic'
newline|'\n'
nl|'\n'
DECL|member|ensure_filtering_rules_for_instance
dedent|''
name|'def'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(salvatore-orlando): it enforces security groups on'
nl|'\n'
comment|'# host initialization and live migration.'
nl|'\n'
comment|'# In XenAPI we do not assume instances running upon host initialization'
nl|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|check_can_live_migrate_destination
dedent|''
name|'def'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'src_compute_info'
op|','
name|'dst_compute_info'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'False'
op|','
name|'disk_over_commit'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if it is possible to execute live migration.\n\n        :param context: security context\n        :param instance_ref: nova.db.sqlalchemy.models.Instance object\n        :param block_migration: if true, prepare for block migration\n        :param disk_over_commit: if true, allow disk over commit\n\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'block_migration'
op|','
nl|'\n'
name|'disk_over_commit'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_can_live_migrate_destination_cleanup
dedent|''
name|'def'
name|'check_can_live_migrate_destination_cleanup'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Do required cleanup on dest host after check_can_live_migrate calls\n\n        :param ctxt: security context\n        :param disk_over_commit: if true, allow disk over commit\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|check_can_live_migrate_source
dedent|''
name|'def'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if it is possible to execute live migration.\n\n        This checks if the live migration can succeed, based on the\n        results from check_can_live_migrate_destination.\n\n        :param context: security context\n        :param instance_ref: nova.db.sqlalchemy.models.Instance\n        :param dest_check_data: result of check_can_live_migrate_destination\n                                includes the block_migration flag\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_instance_disk_info
dedent|''
name|'def'
name|'get_instance_disk_info'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Used by libvirt for live migration. We rely on xenapi\n        checks to do this for us.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|live_migration
dedent|''
name|'def'
name|'live_migration'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'dest'
op|','
nl|'\n'
name|'post_method'
op|','
name|'recover_method'
op|','
name|'block_migration'
op|'='
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Performs the live migration of the specified instance.\n\n        :params ctxt: security context\n        :params instance_ref:\n            nova.db.sqlalchemy.models.Instance object\n            instance object that is migrated.\n        :params dest: destination host\n        :params post_method:\n            post operation method.\n            expected nova.compute.manager.post_live_migration.\n        :params recover_method:\n            recovery method when any exception occurs.\n            expected nova.compute.manager.recover_live_migration.\n        :params block_migration: if true, migrate VM disk.\n        :params migrate_data: implementation specific params\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'live_migrate'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'dest'
op|','
name|'post_method'
op|','
nl|'\n'
name|'recover_method'
op|','
name|'block_migration'
op|','
name|'migrate_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pre_live_migration
dedent|''
name|'def'
name|'pre_live_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'block_device_info'
op|','
nl|'\n'
name|'network_info'
op|','
name|'data'
op|','
name|'migrate_data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Preparation live migration.\n\n        :params block_device_info:\n            It must be the result of _get_instance_volume_bdms()\n            at compute manager.\n        """'
newline|'\n'
comment|'# TODO(JohnGarbutt) look again when boot-from-volume hits trunk'
nl|'\n'
name|'pre_live_migration_result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'pre_live_migration_result'
op|'['
string|"'sr_uuid_map'"
op|']'
op|'='
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'attach_block_device_volumes'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
name|'return'
name|'pre_live_migration_result'
newline|'\n'
nl|'\n'
DECL|member|post_live_migration_at_destination
dedent|''
name|'def'
name|'post_live_migration_at_destination'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'block_migration'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Post operation of live migration at destination host.\n\n        :params ctxt: security context\n        :params instance_ref:\n            nova.db.sqlalchemy.models.Instance object\n            instance object that is migrated.\n        :params network_info: instance network information\n        :params : block_migration: if true, post operation of block_migration.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'post_live_migration_at_destination'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'block_device_info'
op|','
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unfilter_instance
dedent|''
name|'def'
name|'unfilter_instance'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes security groups configured for an instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'unfilter_instance'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_security_group_rules
dedent|''
name|'def'
name|'refresh_security_group_rules'
op|'('
name|'self'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates security group rules for all instances associated with a\n        given security group.\n\n        Invoked when security group rules are updated.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_security_group_rules'
op|'('
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_security_group_members
dedent|''
name|'def'
name|'refresh_security_group_members'
op|'('
name|'self'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates security group rules for all instances associated with a\n        given security group.\n\n        Invoked when instances are added/removed to a security group.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_security_group_members'
op|'('
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_instance_security_rules
dedent|''
name|'def'
name|'refresh_instance_security_rules'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates security group rules for specified instance.\n\n        Invoked when instances are added/removed to a security group\n        or when a rule is added/removed to a security group.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_instance_security_rules'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|refresh_provider_fw_rules
dedent|''
name|'def'
name|'refresh_provider_fw_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_host_stats
dedent|''
name|'def'
name|'get_host_stats'
op|'('
name|'self'
op|','
name|'refresh'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the current state of the host.\n\n           If \'refresh\' is True, run the update first.\n         """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'host_state'
op|'.'
name|'get_host_stats'
op|'('
name|'refresh'
op|'='
name|'refresh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|host_power_action
dedent|''
name|'def'
name|'host_power_action'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'action'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The only valid values for \'action\' on XenServer are \'reboot\' or\n        \'shutdown\', even though the API also accepts \'startup\'. As this is\n        not technically possible on XenServer, since the host is the same\n        physical machine as the hypervisor, if this is requested, we need to\n        raise an exception.\n        """'
newline|'\n'
name|'if'
name|'action'
name|'in'
op|'('
string|'"reboot"'
op|','
string|'"shutdown"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'host_power_action'
op|'('
name|'host'
op|','
name|'action'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Host startup on XenServer is not supported."'
op|')'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_host_enabled
dedent|''
dedent|''
name|'def'
name|'set_host_enabled'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'enabled'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets the specified host\'s ability to accept new instances."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'set_host_enabled'
op|'('
name|'host'
op|','
name|'enabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_host_uptime
dedent|''
name|'def'
name|'get_host_uptime'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the result of calling "uptime" on the target host."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'get_host_uptime'
op|'('
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|host_maintenance_mode
dedent|''
name|'def'
name|'host_maintenance_mode'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start/Stop host maintenance window. On start, it triggers\n        guest VMs evacuation.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'host_maintenance_mode'
op|'('
name|'host'
op|','
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_to_aggregate
dedent|''
name|'def'
name|'add_to_aggregate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a compute host to an aggregate."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pool'
op|'.'
name|'add_to_aggregate'
op|'('
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_from_aggregate
dedent|''
name|'def'
name|'remove_from_aggregate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a compute host from an aggregate."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'context'
op|','
nl|'\n'
name|'aggregate'
op|','
name|'host'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|undo_aggregate_operation
dedent|''
name|'def'
name|'undo_aggregate_operation'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'op'
op|','
name|'aggregate'
op|','
nl|'\n'
name|'host'
op|','
name|'set_error'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undo aggregate operation when pool error raised."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pool'
op|'.'
name|'undo_aggregate_operation'
op|'('
name|'context'
op|','
name|'op'
op|','
nl|'\n'
name|'aggregate'
op|','
name|'host'
op|','
name|'set_error'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume_state_on_host_boot
dedent|''
name|'def'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""resume guest state when a host is booted."""'
newline|'\n'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'power_on'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_per_instance_usage
dedent|''
name|'def'
name|'get_per_instance_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get information about instance resource usage.\n\n        :returns: dict of  nova uuid => dict of usage\n        info\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vmops'
op|'.'
name|'get_per_instance_usage'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPISession
dedent|''
dedent|''
name|'class'
name|'XenAPISession'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The session to invoke XenAPI SDK calls."""'
newline|'\n'
nl|'\n'
comment|'# This is not a config option as it should only ever be'
nl|'\n'
comment|'# changed in development environments.'
nl|'\n'
comment|'# MAJOR VERSION: Incompatible changes with the plugins'
nl|'\n'
comment|'# MINOR VERSION: Compatible changes, new plguins, etc'
nl|'\n'
DECL|variable|PLUGIN_REQUIRED_VERSION
name|'PLUGIN_REQUIRED_VERSION'
op|'='
string|"'1.0'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'virtapi'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'XenAPI'
newline|'\n'
name|'self'
op|'.'
name|'XenAPI'
op|'='
name|'XenAPI'
newline|'\n'
name|'self'
op|'.'
name|'_sessions'
op|'='
name|'queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_slave'
op|'='
name|'False'
newline|'\n'
name|'exception'
op|'='
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
name|'_'
op|'('
string|'"Unable to log in to XenAPI "'
nl|'\n'
string|'"(is the Dom0 disk full?)"'
op|')'
op|')'
newline|'\n'
name|'url'
op|'='
name|'self'
op|'.'
name|'_create_first_session'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_session_pool'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host_uuid'
op|'='
name|'self'
op|'.'
name|'_get_host_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'product_version'
op|','
name|'self'
op|'.'
name|'product_brand'
op|'='
name|'self'
op|'.'
name|'_get_product_version_and_brand'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_virtapi'
op|'='
name|'virtapi'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_verify_plugin_version'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_plugin_version
dedent|''
name|'def'
name|'_verify_plugin_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested_version'
op|'='
name|'self'
op|'.'
name|'PLUGIN_REQUIRED_VERSION'
newline|'\n'
name|'current_version'
op|'='
name|'self'
op|'.'
name|'call_plugin_serialized'
op|'('
nl|'\n'
string|"'nova_plugin_version'"
op|','
string|"'get_version'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'versionutils'
op|'.'
name|'is_compatible'
op|'('
name|'requested_version'
op|','
name|'current_version'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Plugin version mismatch (Expected %(exp)s, got %(got)s)"'
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'exp'"
op|':'
name|'requested_version'
op|','
string|"'got'"
op|':'
name|'current_version'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_first_session
dedent|''
dedent|''
name|'def'
name|'_create_first_session'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'self'
op|'.'
name|'_create_session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'with'
name|'timeout'
op|'.'
name|'Timeout'
op|'('
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'login_timeout'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
name|'as'
name|'e'
op|':'
newline|'\n'
comment|"# if user and pw of the master are different, we're doomed!"
nl|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'details'
op|'['
number|'0'
op|']'
op|'=='
string|"'HOST_IS_SLAVE'"
op|':'
newline|'\n'
indent|'                '
name|'master'
op|'='
name|'e'
op|'.'
name|'details'
op|'['
number|'1'
op|']'
newline|'\n'
name|'url'
op|'='
name|'pool'
op|'.'
name|'swap_xapi_host'
op|'('
name|'url'
op|','
name|'master'
op|')'
newline|'\n'
name|'session'
op|'='
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_slave'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
name|'return'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|_populate_session_pool
dedent|''
name|'def'
name|'_populate_session_pool'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'user'
op|','
name|'pw'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'connection_concurrent'
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'self'
op|'.'
name|'_create_session'
op|'('
name|'url'
op|')'
newline|'\n'
name|'with'
name|'timeout'
op|'.'
name|'Timeout'
op|'('
name|'CONF'
op|'.'
name|'xenserver'
op|'.'
name|'login_timeout'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'session'
op|'.'
name|'login_with_password'
op|'('
name|'user'
op|','
name|'pw'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_host_uuid
dedent|''
dedent|''
name|'def'
name|'_get_host_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'is_slave'
op|':'
newline|'\n'
indent|'            '
name|'aggr'
op|'='
name|'aggregate_obj'
op|'.'
name|'AggregateList'
op|'.'
name|'get_by_host'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'host'
op|','
name|'key'
op|'='
name|'pool_states'
op|'.'
name|'POOL_FLAG'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'aggr'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Host is member of a pool, but DB '"
nl|'\n'
string|"'says otherwise'"
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'aggr'
op|'.'
name|'metadetails'
op|'['
name|'CONF'
op|'.'
name|'host'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'                '
name|'host_ref'
op|'='
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'session'
op|'.'
name|'get_this_host'
op|'('
name|'session'
op|'.'
name|'handle'
op|')'
newline|'\n'
name|'return'
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'host'
op|'.'
name|'get_uuid'
op|'('
name|'host_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_product_version_and_brand
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_product_version_and_brand'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a tuple of (major, minor, rev) for the host version and\n        a string of the product brand.\n        """'
newline|'\n'
name|'software_version'
op|'='
name|'self'
op|'.'
name|'_get_software_version'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'product_version_str'
op|'='
name|'software_version'
op|'.'
name|'get'
op|'('
string|"'product_version'"
op|')'
newline|'\n'
comment|'# Product version is only set in some cases (e.g. XCP, XenServer) and'
nl|'\n'
comment|'# not in others (e.g. xenserver-core, XAPI-XCP).'
nl|'\n'
comment|'# In these cases, the platform version is the best number to use.'
nl|'\n'
name|'if'
name|'product_version_str'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'product_version_str'
op|'='
name|'software_version'
op|'.'
name|'get'
op|'('
string|"'platform_version'"
op|','
nl|'\n'
string|"'0.0.0'"
op|')'
newline|'\n'
dedent|''
name|'product_brand'
op|'='
name|'software_version'
op|'.'
name|'get'
op|'('
string|"'product_brand'"
op|')'
newline|'\n'
name|'product_version'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_tuple'
op|'('
name|'product_version_str'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'product_version'
op|','
name|'product_brand'
newline|'\n'
nl|'\n'
DECL|member|_get_software_version
dedent|''
name|'def'
name|'_get_software_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'self'
op|'.'
name|'get_xenapi_host'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|"'host.get_software_version'"
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_session_id
dedent|''
name|'def'
name|'get_session_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a string session_id.  Used for vnc consoles."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'str'
op|'('
name|'session'
op|'.'
name|'_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|member|_get_session
name|'def'
name|'_get_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return exclusive session for scope of with statement."""'
newline|'\n'
name|'session'
op|'='
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'session'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sessions'
op|'.'
name|'put'
op|'('
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_xenapi_host
dedent|''
dedent|''
name|'def'
name|'get_xenapi_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the xenapi host on which nova-compute runs on."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'host'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'host_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_xenapi
dedent|''
dedent|''
name|'def'
name|'call_xenapi'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call the specified XenAPI method on a background thread."""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'session'
op|'.'
name|'xenapi_request'
op|'('
name|'method'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_plugin
dedent|''
dedent|''
name|'def'
name|'call_plugin'
op|'('
name|'self'
op|','
name|'plugin'
op|','
name|'fn'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call host.call_plugin on a background thread."""'
newline|'\n'
comment|'# NOTE(johannes): Fetch host before we acquire a session. Since'
nl|'\n'
comment|'# get_xenapi_host() acquires a session too, it can result in a'
nl|'\n'
comment|'# deadlock if multiple greenthreads race with each other. See'
nl|'\n'
comment|'# bug 924918'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'get_xenapi_host'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(armando): pass the host uuid along with the args so that'
nl|'\n'
comment|'# the plugin gets executed on the right host when using XS pools'
nl|'\n'
name|'args'
op|'['
string|"'host_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'host_uuid'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_get_session'
op|'('
op|')'
name|'as'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_unwrap_plugin_exceptions'
op|'('
nl|'\n'
name|'session'
op|'.'
name|'xenapi'
op|'.'
name|'host'
op|'.'
name|'call_plugin'
op|','
nl|'\n'
name|'host'
op|','
name|'plugin'
op|','
name|'fn'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_plugin_serialized
dedent|''
dedent|''
name|'def'
name|'call_plugin_serialized'
op|'('
name|'self'
op|','
name|'plugin'
op|','
name|'fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'params'"
op|':'
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'args'
op|'='
name|'args'
op|','
name|'kwargs'
op|'='
name|'kwargs'
op|')'
op|')'
op|'}'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'call_plugin'
op|'('
name|'plugin'
op|','
name|'fn'
op|','
name|'params'
op|')'
newline|'\n'
name|'return'
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'rv'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_plugin_serialized_with_retry
dedent|''
name|'def'
name|'call_plugin_serialized_with_retry'
op|'('
name|'self'
op|','
name|'plugin'
op|','
name|'fn'
op|','
name|'num_retries'
op|','
nl|'\n'
name|'callback'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Allows a plugin to raise RetryableError so we can try again."""'
newline|'\n'
name|'attempts'
op|'='
name|'num_retries'
op|'+'
number|'1'
newline|'\n'
name|'sleep_time'
op|'='
number|'0.5'
newline|'\n'
name|'for'
name|'attempt'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'attempts'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'%(plugin)s.%(fn)s attempt %(attempt)d/%(attempts)d'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'plugin'"
op|':'
name|'plugin'
op|','
string|"'fn'"
op|':'
name|'fn'
op|','
string|"'attempt'"
op|':'
name|'attempt'
op|','
nl|'\n'
string|"'attempts'"
op|':'
name|'attempts'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'attempt'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'time'
op|'.'
name|'sleep'
op|'('
name|'sleep_time'
op|')'
newline|'\n'
name|'sleep_time'
op|'='
name|'min'
op|'('
number|'2'
op|'*'
name|'sleep_time'
op|','
number|'15'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'callback'
op|':'
newline|'\n'
indent|'                    '
name|'callback'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'call_plugin_serialized'
op|'('
name|'plugin'
op|','
name|'fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'_is_retryable_exception'
op|'('
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'%(plugin)s.%(fn)s failed. Retrying call.'"
op|')'
nl|'\n'
op|'%'
op|'{'
string|"'plugin'"
op|':'
name|'plugin'
op|','
string|"'fn'"
op|':'
name|'fn'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'PluginRetriesExceeded'
op|'('
name|'num_retries'
op|'='
name|'num_retries'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_is_retryable_exception
dedent|''
name|'def'
name|'_is_retryable_exception'
op|'('
name|'self'
op|','
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_type'
op|','
name|'method'
op|','
name|'error'
op|'='
name|'exc'
op|'.'
name|'details'
op|'['
op|':'
number|'3'
op|']'
newline|'\n'
name|'if'
name|'error'
op|'=='
string|"'RetryableError'"
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"RetryableError, so retrying upload_vhd"'
op|')'
op|','
nl|'\n'
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'elif'
string|'"signal"'
name|'in'
name|'method'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Error due to a signal, retrying upload_vhd"'
op|')'
op|','
nl|'\n'
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_create_session
dedent|''
dedent|''
name|'def'
name|'_create_session'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stubout point. This can be replaced with a mock session."""'
newline|'\n'
name|'self'
op|'.'
name|'is_local_connection'
op|'='
name|'url'
op|'=='
string|'"unix://local"'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_local_connection'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'xapi_local'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Session'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unwrap_plugin_exceptions
dedent|''
name|'def'
name|'_unwrap_plugin_exceptions'
op|'('
name|'self'
op|','
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Parse exception details."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got exception: %s"'
op|')'
op|','
name|'exc'
op|')'
newline|'\n'
name|'if'
op|'('
name|'len'
op|'('
name|'exc'
op|'.'
name|'details'
op|')'
op|'=='
number|'4'
name|'and'
nl|'\n'
name|'exc'
op|'.'
name|'details'
op|'['
number|'0'
op|']'
op|'=='
string|"'XENAPI_PLUGIN_EXCEPTION'"
name|'and'
nl|'\n'
name|'exc'
op|'.'
name|'details'
op|'['
number|'2'
op|']'
op|'=='
string|"'Failure'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'params'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# FIXME(comstud): eval is evil.'
nl|'\n'
indent|'                    '
name|'params'
op|'='
name|'eval'
op|'('
name|'exc'
op|'.'
name|'details'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exc'
newline|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'xmlrpclib'
op|'.'
name|'ProtocolError'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Got exception: %s"'
op|')'
op|','
name|'exc'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|get_rec
dedent|''
dedent|''
name|'def'
name|'get_rec'
op|'('
name|'self'
op|','
name|'record_type'
op|','
name|'ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|"'%s.get_record'"
op|'%'
name|'record_type'
op|','
name|'ref'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'self'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'details'
op|'['
number|'0'
op|']'
op|'!='
string|"'HANDLE_INVALID'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_all_refs_and_recs
dedent|''
name|'def'
name|'get_all_refs_and_recs'
op|'('
name|'self'
op|','
name|'record_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve all refs and recs for a Xen record type.\n\n        Handles race-conditions where the record may be deleted between\n        the `get_all` call and the `get_record` call.\n        """'
newline|'\n'
nl|'\n'
name|'for'
name|'ref'
name|'in'
name|'self'
op|'.'
name|'call_xenapi'
op|'('
string|"'%s.get_all'"
op|'%'
name|'record_type'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rec'
op|'='
name|'self'
op|'.'
name|'get_rec'
op|'('
name|'record_type'
op|','
name|'ref'
op|')'
newline|'\n'
comment|'# Check to make sure the record still exists. It may have'
nl|'\n'
comment|'# been deleted between the get_all call and get_record call'
nl|'\n'
name|'if'
name|'rec'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'ref'
op|','
name|'rec'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
