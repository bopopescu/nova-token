begin_unit
op|'<<'
op|'<<'
op|'<<'
op|'<'
name|'TREE'
newline|'\n'
comment|'#!/usr/bin/python'
nl|'\n'
comment|'# -*- coding: UTF-8 -*-'
nl|'\n'
nl|'\n'
DECL|variable|NOVA_DIR
name|'NOVA_DIR'
op|'='
string|"'/opt/openstack/nova'"
newline|'\n'
comment|"#NOVA_DIR = '/opt/nova-2010.4'"
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'commands'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'mock'
name|'import'
name|'Mock'
newline|'\n'
name|'import'
name|'twisted'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'print'
newline|'\n'
name|'print'
string|"'checking %s/bin/nova-manage exists, set the NOVA_DIR properly..'"
op|'%'
name|'NOVA_DIR'
newline|'\n'
name|'print'
newline|'\n'
nl|'\n'
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'NOVA_DIR'
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'manager'
name|'import'
name|'ComputeManager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt_conn'
name|'import'
name|'LibvirtConnection'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cloudpipe'
name|'import'
name|'pipelib'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'models'
name|'import'
op|'*'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|"'set PYTHONPATH to nova-install-dir'"
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|tmpStdout
dedent|''
name|'class'
name|'tmpStdout'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'='
string|'""'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|writelines
dedent|''
name|'def'
name|'writelines'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'flush'"
newline|'\n'
name|'self'
op|'.'
name|'buffer'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|tmpStderr
dedent|''
dedent|''
name|'class'
name|'tmpStderr'
op|'('
name|'tmpStdout'
op|')'
op|':'
newline|'\n'
DECL|member|write
indent|'    '
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|realFlush
dedent|''
name|'def'
name|'realFlush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|variable|dummyCallReturnValue
dedent|''
dedent|''
name|'dummyCallReturnValue'
op|'='
op|'{'
number|'0'
op|':'
name|'True'
op|'}'
newline|'\n'
DECL|variable|dummyCallCount
name|'dummyCallCount'
op|'='
number|'0'
newline|'\n'
DECL|function|dummyCall
name|'def'
name|'dummyCall'
op|'('
name|'context'
op|','
name|'topic'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'dummyCallReturnValue'
op|','
name|'dummyCallCount'
newline|'\n'
name|'if'
name|'dummyCallCount'
name|'in'
name|'dummyCallReturnValue'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
name|'dummyCallReturnValue'
op|'['
name|'dummyCallCount'
op|']'
newline|'\n'
name|'dummyCallCount'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'ret'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'dummyCallCount'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeTestFunctions
dedent|''
dedent|''
name|'class'
name|'ComputeTestFunctions'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|stdout
indent|'    '
name|'stdout'
op|'='
name|'None'
newline|'\n'
DECL|variable|stdoutBak
name|'stdoutBak'
op|'='
name|'None'
newline|'\n'
DECL|variable|stderr
name|'stderr'
op|'='
name|'None'
newline|'\n'
DECL|variable|stderrBak
name|'stderrBak'
op|'='
name|'None'
newline|'\n'
DECL|variable|manager
name|'manager'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# \xe5\x85\xb1\xe9\x80\x9a\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\xe5\x87\xa6\xe7\x90\x86'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""common init method. """'
newline|'\n'
nl|'\n'
comment|'#if self.stdout is None:'
nl|'\n'
comment|'#    self.__class__.stdout = tmpStdout()'
nl|'\n'
comment|'#self.stdoutBak = sys.stdout'
nl|'\n'
comment|'#sys.stdout = self.stdout'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'stderr'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'stderr'
op|'='
name|'tmpStderr'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stderrBak'
op|'='
name|'sys'
op|'.'
name|'stderr'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stderr'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'openstack2-api'"
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'manager'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'manager'
op|'='
name|'ComputeManager'
op|'('
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'setTestData'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setMocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setTestData
dedent|''
name|'def'
name|'setTestData'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'host1'
op|'='
name|'Host'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'name'"
op|','
string|"'host1'"
op|')'
op|','
op|'('
string|"'cpu'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'memory_mb'"
op|','
number|'20480'
op|')'
op|','
op|'('
string|"'hdd_gb'"
op|','
number|'876'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host2'
op|'='
name|'Host'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'name'"
op|','
string|"'host2'"
op|')'
op|','
op|'('
string|"'cpu'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'memory_mb'"
op|','
number|'20480'
op|')'
op|','
op|'('
string|"'hdd_gb'"
op|','
number|'876'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'instance1'
op|'='
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'hostname'"
op|','
string|"'i-12345'"
op|')'
op|','
op|'('
string|"'state'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
op|'('
string|"'project_id'"
op|','
string|"'testPJ'"
op|')'
op|','
op|'('
string|"'vcpus'"
op|','
number|'3'
op|')'
op|','
op|'('
string|"'memory_mb'"
op|','
number|'1024'
op|')'
op|','
nl|'\n'
op|'('
string|"'hdd_gb'"
op|','
number|'5'
op|')'
op|','
op|'('
string|"'internal_id'"
op|','
number|'12345'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'instance2'
op|'='
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'hostname'"
op|','
string|"'i-12345'"
op|')'
op|','
op|'('
string|"'state'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
op|'('
string|"'project_id'"
op|','
string|"'testPJ'"
op|')'
op|','
op|'('
string|"'vcpus'"
op|','
number|'3'
op|')'
op|','
op|'('
string|"'memory_mb'"
op|','
number|'1024'
op|')'
op|','
nl|'\n'
op|'('
string|"'hdd_gb'"
op|','
number|'5'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fixed_ip1'
op|'='
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'address'"
op|','
string|"'1.1.1.1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'network_id'"
op|','
string|"'1'"
op|')'
op|','
op|'('
string|"'instance_id'"
op|','
number|'1'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fixed_ip1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'vol1'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'vol-qijjuc7e'"
op|')'
op|','
nl|'\n'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'vol1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'vol2'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'vol-qi22222'"
op|')'
op|','
nl|'\n'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'vol2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'secgrp1'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'default'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'secgrp1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'secgrp2'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'def2'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'secgrp2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'netref1'
op|'='
name|'Network'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setMocks
dedent|''
name|'def'
name|'setMocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# mocks for pre_live_migration'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'['
name|'self'
op|'.'
name|'vol1'
op|','
name|'self'
op|'.'
name|'vol2'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_get_shelf_and_blade'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'('
number|'3'
op|','
number|'4'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'fixed_ip1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'['
name|'self'
op|'.'
name|'secgrp1'
op|','
name|'self'
op|'.'
name|'secgrp2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'setup_nwfilters_for_instance'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'nwfilter_for_instance_exists'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
comment|'# mocks for live_migration_'
nl|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# ---> test for nova.compute.manager.pre_live_migration()'
nl|'\n'
DECL|member|test01
dedent|''
name|'def'
name|'test01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""01: NotFound error occurs on finding instance on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test02
dedent|''
name|'def'
name|'test02'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""02: NotAuthrized occurs on finding volume on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotAuthorized'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test03
dedent|''
name|'def'
name|'test03'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""03: Unexpected exception occurs on finding volume on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test04
dedent|''
name|'def'
name|'test04'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""04: no volume and fixed ip found on DB,  """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
name|'c1'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'has no volume'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test05
dedent|''
name|'def'
name|'test05'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""05: volume found and no fixed_ip found on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test06
dedent|''
name|'def'
name|'test06'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""06: self.driver.setup_nwfilters_for_instance causes NotFound. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'setup_nwfilters_for_instance'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test07
dedent|''
name|'def'
name|'test07'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""07: self.network_manager.setup_compute_network causes ProcessExecutionError. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test08
dedent|''
name|'def'
name|'test08'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""08: self.manager.network_manager.setup_compute_network\n        exception.NotFound. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
comment|'# those 2 cases are omitted :'
nl|'\n'
comment|'# self.driver.setup_nwfilters_for_instance causes'
nl|'\n'
comment|'# twisted.python.failure.Failure.'
nl|'\n'
comment|'# self.driver.refresh_security_group causes twisted.python.failure.Failure.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# twisted.python.failure.Failure can not be used with assertRaises,'
nl|'\n'
comment|'# it doesnt have __call___'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
DECL|member|test09
dedent|''
name|'def'
name|'test09'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""09: volume/fixed_ip found on DB, all procedure finish\n        successfully.. """'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# ---> test for nova.compute.manager.live_migration()'
nl|'\n'
nl|'\n'
DECL|member|test10
dedent|''
name|'def'
name|'test10'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""10: rpc.call(pre_live_migration returns Error(Not None). """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test11
dedent|''
name|'def'
name|'test11'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""11: if rpc.call returns rpc.RemoteError. """'
newline|'\n'
nl|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
name|'None'
op|'=='
name|'result'
op|')'
newline|'\n'
name|'c2'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'err at'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
name|'and'
name|'c2'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test12
dedent|''
name|'def'
name|'test12'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""12: if rpc.call returns rpc.RemoteError and instance_set_state\n           also ends up err. (then , unexpected err occurs, in this case\n           TypeError)\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test13
dedent|''
name|'def'
name|'test13'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""13: if wait for pre_live_migration, but timeout. """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'dummyCall'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
name|'None'
op|'=='
name|'result'
op|')'
newline|'\n'
name|'c2'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'Timeout for'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
name|'and'
name|'c2'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test14
dedent|''
name|'def'
name|'test14'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""14: if db_instance_get issues NotFound.\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test15
dedent|''
name|'def'
name|'test15'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""15: if rpc.call returns True, and instance_get() cause other\n           exception. (Unexpected case - b/c it already checked by\n           nova-manage)\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test16
dedent|''
name|'def'
name|'test16'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""16: if rpc.call returns True, and live_migration issues\n        ProcessExecutionError. """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'utils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'utils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test17
dedent|''
name|'def'
name|'test17'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""17: everything goes well. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'i-12345'"
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""common terminating method. """'
newline|'\n'
name|'self'
op|'.'
name|'stderr'
op|'.'
name|'realFlush'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stderrBak'
newline|'\n'
comment|'#sys.stdout = self.stdoutBak'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'DEBUG'
op|')'
newline|'\n'
comment|'#unittest.main()'
nl|'\n'
nl|'\n'
DECL|variable|suite
name|'suite'
op|'='
name|'unittest'
op|'.'
name|'TestLoader'
op|'('
op|')'
op|'.'
name|'loadTestsFromTestCase'
op|'('
name|'ComputeTestFunctions'
op|')'
newline|'\n'
name|'unittest'
op|'.'
name|'TextTestRunner'
op|'('
name|'verbosity'
op|'='
number|'2'
op|')'
op|'.'
name|'run'
op|'('
name|'suite'
op|')'
newline|'\n'
nl|'\n'
comment|'#suite = unittest.TestSuite()'
nl|'\n'
comment|'#suite.addTest(ComputeTestFunctions("test15"))'
nl|'\n'
comment|'#suite.addTest(ComputeTestFunctions("test16"))'
nl|'\n'
comment|'#unittest.TextTestRunner(verbosity=2).run(suite)'
nl|'\n'
dedent|''
op|'=='
op|'=='
op|'=='
op|'='
newline|'\n'
comment|'#!/usr/bin/python'
nl|'\n'
comment|'# -*- coding: UTF-8 -*-'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'commands'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'mock'
name|'import'
name|'Mock'
newline|'\n'
name|'import'
name|'twisted'
newline|'\n'
nl|'\n'
comment|'# getting /nova-inst-dir'
nl|'\n'
DECL|variable|NOVA_DIR
name|'NOVA_DIR'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|':'
newline|'\n'
DECL|variable|NOVA_DIR
indent|'    '
name|'NOVA_DIR'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'NOVA_DIR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'print'
newline|'\n'
name|'print'
string|"'checking %s/bin/nova-manage exists, set the NOVA_DIR properly..'"
op|'%'
name|'NOVA_DIR'
newline|'\n'
name|'print'
newline|'\n'
nl|'\n'
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'NOVA_DIR'
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'manager'
name|'import'
name|'ComputeManager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt_conn'
name|'import'
name|'LibvirtConnection'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cloudpipe'
name|'import'
name|'pipelib'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'models'
name|'import'
op|'*'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|"'set correct NOVA_DIR in this script. '"
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|tmpStdout
dedent|''
name|'class'
name|'tmpStdout'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'='
string|'""'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|writelines
dedent|''
name|'def'
name|'writelines'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'flush'"
newline|'\n'
name|'self'
op|'.'
name|'buffer'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|tmpStderr
dedent|''
dedent|''
name|'class'
name|'tmpStderr'
op|'('
name|'tmpStdout'
op|')'
op|':'
newline|'\n'
DECL|member|write
indent|'    '
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'arg'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|realFlush
dedent|''
name|'def'
name|'realFlush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|variable|dummyCallReturnValue
dedent|''
dedent|''
name|'dummyCallReturnValue'
op|'='
op|'{'
number|'0'
op|':'
name|'True'
op|'}'
newline|'\n'
DECL|variable|dummyCallCount
name|'dummyCallCount'
op|'='
number|'0'
newline|'\n'
DECL|function|dummyCall
name|'def'
name|'dummyCall'
op|'('
name|'context'
op|','
name|'topic'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'dummyCallReturnValue'
op|','
name|'dummyCallCount'
newline|'\n'
name|'if'
name|'dummyCallCount'
name|'in'
name|'dummyCallReturnValue'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
name|'dummyCallReturnValue'
op|'['
name|'dummyCallCount'
op|']'
newline|'\n'
name|'dummyCallCount'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'ret'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'dummyCallCount'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeTestFunctions
dedent|''
dedent|''
name|'class'
name|'ComputeTestFunctions'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|stdout
indent|'    '
name|'stdout'
op|'='
name|'None'
newline|'\n'
DECL|variable|stdoutBak
name|'stdoutBak'
op|'='
name|'None'
newline|'\n'
DECL|variable|stderr
name|'stderr'
op|'='
name|'None'
newline|'\n'
DECL|variable|stderrBak
name|'stderrBak'
op|'='
name|'None'
newline|'\n'
DECL|variable|manager
name|'manager'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# \xe5\x85\xb1\xe9\x80\x9a\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\xe5\x87\xa6\xe7\x90\x86'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""common init method. """'
newline|'\n'
nl|'\n'
comment|'#if self.stdout is None:'
nl|'\n'
comment|'#    self.__class__.stdout = tmpStdout()'
nl|'\n'
comment|'#self.stdoutBak = sys.stdout'
nl|'\n'
comment|'#sys.stdout = self.stdout'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'stderr'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'stderr'
op|'='
name|'tmpStderr'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stderrBak'
op|'='
name|'sys'
op|'.'
name|'stderr'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stderr'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'openstack2-api'"
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'manager'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'manager'
op|'='
name|'ComputeManager'
op|'('
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'setTestData'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setMocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setTestData
dedent|''
name|'def'
name|'setTestData'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'host1'
op|'='
name|'Host'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'name'"
op|','
string|"'host1'"
op|')'
op|','
op|'('
string|"'cpu'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'memory_mb'"
op|','
number|'20480'
op|')'
op|','
op|'('
string|"'hdd_gb'"
op|','
number|'876'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host2'
op|'='
name|'Host'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'name'"
op|','
string|"'host2'"
op|')'
op|','
op|'('
string|"'cpu'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'memory_mb'"
op|','
number|'20480'
op|')'
op|','
op|'('
string|"'hdd_gb'"
op|','
number|'876'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'instance1'
op|'='
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'hostname'"
op|','
string|"'i-12345'"
op|')'
op|','
op|'('
string|"'state'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
op|'('
string|"'project_id'"
op|','
string|"'testPJ'"
op|')'
op|','
op|'('
string|"'vcpus'"
op|','
number|'3'
op|')'
op|','
op|'('
string|"'memory_mb'"
op|','
number|'1024'
op|')'
op|','
nl|'\n'
op|'('
string|"'hdd_gb'"
op|','
number|'5'
op|')'
op|','
op|'('
string|"'internal_id'"
op|','
number|'12345'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'instance2'
op|'='
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'hostname'"
op|','
string|"'i-12345'"
op|')'
op|','
op|'('
string|"'state'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
op|'('
string|"'project_id'"
op|','
string|"'testPJ'"
op|')'
op|','
op|'('
string|"'vcpus'"
op|','
number|'3'
op|')'
op|','
op|'('
string|"'memory_mb'"
op|','
number|'1024'
op|')'
op|','
nl|'\n'
op|'('
string|"'hdd_gb'"
op|','
number|'5'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fixed_ip1'
op|'='
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'address'"
op|','
string|"'1.1.1.1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'network_id'"
op|','
string|"'1'"
op|')'
op|','
op|'('
string|"'instance_id'"
op|','
number|'1'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fixed_ip1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'vol1'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'vol-qijjuc7e'"
op|')'
op|','
nl|'\n'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'vol1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'vol2'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'vol-qi22222'"
op|')'
op|','
nl|'\n'
op|'('
string|"'availability_zone'"
op|','
string|"'nova'"
op|')'
op|','
op|'('
string|"'host'"
op|','
string|"'host1'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'vol2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'secgrp1'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'1'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'default'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'secgrp1'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'secgrp2'
op|'='
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
op|'['
op|'('
string|"'id'"
op|','
number|'2'
op|')'
op|','
op|'('
string|"'ec2_id'"
op|','
string|"'def2'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'secgrp2'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'netref1'
op|'='
name|'Network'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setMocks
dedent|''
name|'def'
name|'setMocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# mocks for pre_live_migration'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'['
name|'self'
op|'.'
name|'vol1'
op|','
name|'self'
op|'.'
name|'vol2'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_get_shelf_and_blade'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'('
number|'3'
op|','
number|'4'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'fixed_ip1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
op|'['
name|'self'
op|'.'
name|'secgrp1'
op|','
name|'self'
op|'.'
name|'secgrp2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'setup_nwfilters_for_instance'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'nwfilter_for_instance_exists'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
comment|'# mocks for live_migration_'
nl|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# ---> test for nova.compute.manager.pre_live_migration()'
nl|'\n'
DECL|member|test01
dedent|''
name|'def'
name|'test01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""01: NotFound error occurs on finding instance on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test02
dedent|''
name|'def'
name|'test02'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""02: NotAuthrized occurs on finding volume on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotAuthorized'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test03
dedent|''
name|'def'
name|'test03'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""03: Unexpected exception occurs on finding volume on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test04
dedent|''
name|'def'
name|'test04'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""04: no volume and fixed ip found on DB,  """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_get_by_ec2_id'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
name|'c1'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'has no volume'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test05
dedent|''
name|'def'
name|'test05'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""05: volume found and no fixed_ip found on DB. """'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get_fixed_address'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test06
dedent|''
name|'def'
name|'test06'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""06: self.driver.setup_nwfilters_for_instance causes NotFound. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'setup_nwfilters_for_instance'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test07
dedent|''
name|'def'
name|'test07'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""07: self.network_manager.setup_compute_network causes ProcessExecutionError. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test08
dedent|''
name|'def'
name|'test08'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""08: self.manager.network_manager.setup_compute_network\n        exception.NotFound. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'network_manager'
op|'.'
name|'setup_compute_network'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
comment|'# those 2 cases are omitted :'
nl|'\n'
comment|'# self.driver.setup_nwfilters_for_instance causes'
nl|'\n'
comment|'# twisted.python.failure.Failure.'
nl|'\n'
comment|'# self.driver.refresh_security_group causes twisted.python.failure.Failure.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# twisted.python.failure.Failure can not be used with assertRaises,'
nl|'\n'
comment|'# it doesnt have __call___'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
DECL|member|test09
dedent|''
name|'def'
name|'test09'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""09: volume/fixed_ip found on DB, all procedure finish\n        successfully.. """'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# ---> test for nova.compute.manager.live_migration()'
nl|'\n'
nl|'\n'
DECL|member|test10
dedent|''
name|'def'
name|'test10'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""10: rpc.call(pre_live_migration returns Error(Not None). """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test11
dedent|''
name|'def'
name|'test11'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""11: if rpc.call returns rpc.RemoteError. """'
newline|'\n'
nl|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
name|'None'
op|'=='
name|'result'
op|')'
newline|'\n'
name|'c2'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'err at'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
name|'and'
name|'c2'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test12
dedent|''
name|'def'
name|'test12'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""12: if rpc.call returns rpc.RemoteError and instance_set_state\n           also ends up err. (then , unexpected err occurs, in this case\n           TypeError)\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test13
dedent|''
name|'def'
name|'test13'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""13: if wait for pre_live_migration, but timeout. """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'dummyCall'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
name|'None'
op|'=='
name|'result'
op|')'
newline|'\n'
name|'c2'
op|'='
op|'('
number|'0'
op|'<='
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'buffer'
op|'.'
name|'find'
op|'('
string|"'Timeout for'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'c1'
name|'and'
name|'c2'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test14
dedent|''
name|'def'
name|'test14'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""14: if db_instance_get issues NotFound.\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test15
dedent|''
name|'def'
name|'test15'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""15: if rpc.call returns True, and instance_get() cause other\n           exception. (Unexpected case - b/c it already checked by\n           nova-manage)\n        """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test16
dedent|''
name|'def'
name|'test16'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""16: if rpc.call returns True, and live_migration issues\n        ProcessExecutionError. """'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance1'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'='
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'utils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'utils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'dummy_ec2_id'"
op|','
nl|'\n'
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test17
dedent|''
name|'def'
name|'test17'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""17: everything goes well. """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'='
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'i-12345'"
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""common terminating method. """'
newline|'\n'
name|'self'
op|'.'
name|'stderr'
op|'.'
name|'realFlush'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stderrBak'
newline|'\n'
comment|'#sys.stdout = self.stdoutBak'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'DEBUG'
op|')'
newline|'\n'
comment|'#unittest.main()'
nl|'\n'
nl|'\n'
DECL|variable|suite
name|'suite'
op|'='
name|'unittest'
op|'.'
name|'TestLoader'
op|'('
op|')'
op|'.'
name|'loadTestsFromTestCase'
op|'('
name|'ComputeTestFunctions'
op|')'
newline|'\n'
name|'unittest'
op|'.'
name|'TextTestRunner'
op|'('
name|'verbosity'
op|'='
number|'2'
op|')'
op|'.'
name|'run'
op|'('
name|'suite'
op|')'
newline|'\n'
nl|'\n'
comment|'#suite = unittest.TestSuite()'
nl|'\n'
comment|'#suite.addTest(ComputeTestFunctions("test15"))'
nl|'\n'
comment|'#suite.addTest(ComputeTestFunctions("test16"))'
nl|'\n'
comment|'#unittest.TextTestRunner(verbosity=2).run(suite)'
nl|'\n'
dedent|''
op|'>>'
op|'>>'
op|'>>'
op|'>'
name|'MERGE'
op|'-'
name|'SOURCE'
newline|'\n'
endmarker|''
end_unit
