begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nCloud Controller: Implementation of EC2 REST API calls, which are\ndispatched to other nodes via AMQP RPC. State is via distributed\ndatastore.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'crypto'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'ipv6'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'volume'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'s3'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'service_down_time'"
op|','
string|"'nova.scheduler.driver'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"nova.api.cloud"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_gen_key
name|'def'
name|'_gen_key'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Generate a key\n\n    This is a module level method because it is slow and we need to defer\n    it into a process pool."""'
newline|'\n'
comment|'# NOTE(vish): generating key pair is slow so check for legal'
nl|'\n'
comment|'#             creation before creating key_pair'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'KeyPairExists'
op|'('
name|'key_name'
op|'='
name|'key_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'private_key'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|'='
name|'crypto'
op|'.'
name|'generate_key_pair'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'key'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'user_id'
newline|'\n'
name|'key'
op|'['
string|"'name'"
op|']'
op|'='
name|'key_name'
newline|'\n'
name|'key'
op|'['
string|"'public_key'"
op|']'
op|'='
name|'public_key'
newline|'\n'
name|'key'
op|'['
string|"'fingerprint'"
op|']'
op|'='
name|'fingerprint'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'key'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'private_key'"
op|':'
name|'private_key'
op|','
string|"'fingerprint'"
op|':'
name|'fingerprint'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(yamahata): hypervisor dependent default device name'
nl|'\n'
DECL|variable|_DEFAULT_ROOT_DEVICE_NAME
dedent|''
name|'_DEFAULT_ROOT_DEVICE_NAME'
op|'='
string|"'/dev/sda1'"
newline|'\n'
DECL|variable|_DEFAULT_MAPPINGS
name|'_DEFAULT_MAPPINGS'
op|'='
op|'{'
string|"'ami'"
op|':'
string|"'sda1'"
op|','
nl|'\n'
string|"'ephemeral0'"
op|':'
string|"'sda2'"
op|','
nl|'\n'
string|"'root'"
op|':'
name|'_DEFAULT_ROOT_DEVICE_NAME'
op|','
nl|'\n'
string|"'swap'"
op|':'
string|"'sda3'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_block_device_mapping
name|'def'
name|'_parse_block_device_mapping'
op|'('
name|'bdm'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse BlockDeviceMappingItemType into flat hash\n    BlockDevicedMapping.<N>.DeviceName\n    BlockDevicedMapping.<N>.Ebs.SnapshotId\n    BlockDevicedMapping.<N>.Ebs.VolumeSize\n    BlockDevicedMapping.<N>.Ebs.DeleteOnTermination\n    BlockDevicedMapping.<N>.Ebs.NoDevice\n    BlockDevicedMapping.<N>.VirtualName\n    => remove .Ebs and allow volume id in SnapshotId\n    """'
newline|'\n'
name|'ebs'
op|'='
name|'bdm'
op|'.'
name|'pop'
op|'('
string|"'ebs'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'ebs'
op|':'
newline|'\n'
indent|'        '
name|'ec2_id'
op|'='
name|'ebs'
op|'.'
name|'pop'
op|'('
string|"'snapshot_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'ec2_id'
op|':'
newline|'\n'
indent|'            '
name|'id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'if'
name|'ec2_id'
op|'.'
name|'startswith'
op|'('
string|"'snap-'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
op|'='
name|'id'
newline|'\n'
dedent|''
name|'elif'
name|'ec2_id'
op|'.'
name|'startswith'
op|'('
string|"'vol-'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|'='
name|'id'
newline|'\n'
dedent|''
name|'ebs'
op|'.'
name|'setdefault'
op|'('
string|"'delete_on_termination'"
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'bdm'
op|'.'
name|'update'
op|'('
name|'ebs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'bdm'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_properties_get_mappings
dedent|''
name|'def'
name|'_properties_get_mappings'
op|'('
name|'properties'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'block_device'
op|'.'
name|'mappings_prepend_dev'
op|'('
name|'properties'
op|'.'
name|'get'
op|'('
string|"'mappings'"
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_format_block_device_mapping
dedent|''
name|'def'
name|'_format_block_device_mapping'
op|'('
name|'bdm'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Contruct BlockDeviceMappingItemType\n    {\'device_name\': \'...\', \'snapshot_id\': , ...}\n    => BlockDeviceMappingItemType\n    """'
newline|'\n'
name|'keys'
op|'='
op|'('
op|'('
string|"'deviceName'"
op|','
string|"'device_name'"
op|')'
op|','
nl|'\n'
op|'('
string|"'virtualName'"
op|','
string|"'virtual_name'"
op|')'
op|')'
newline|'\n'
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'k'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'k'
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'['
name|'name'
op|']'
op|'='
name|'bdm'
op|'['
name|'k'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'bdm'
op|'.'
name|'get'
op|'('
string|"'no_device'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'['
string|"'noDevice'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
op|'('
string|"'snapshot_id'"
name|'in'
name|'bdm'
op|')'
name|'or'
op|'('
string|"'volume_id'"
name|'in'
name|'bdm'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ebs_keys'
op|'='
op|'('
op|'('
string|"'snapshotId'"
op|','
string|"'snapshot_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'snapshotId'"
op|','
string|"'volume_id'"
op|')'
op|','
comment|'# snapshotId is abused'
nl|'\n'
op|'('
string|"'volumeSize'"
op|','
string|"'volume_size'"
op|')'
op|','
nl|'\n'
op|'('
string|"'deleteOnTermination'"
op|','
string|"'delete_on_termination'"
op|')'
op|')'
newline|'\n'
name|'ebs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'k'
name|'in'
name|'ebs_keys'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'k'
op|'=='
string|"'snapshot_id'"
op|':'
newline|'\n'
indent|'                    '
name|'ebs'
op|'['
name|'name'
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'bdm'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'k'
op|'=='
string|"'volume_id'"
op|':'
newline|'\n'
indent|'                    '
name|'ebs'
op|'['
name|'name'
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'bdm'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ebs'
op|'['
name|'name'
op|']'
op|'='
name|'bdm'
op|'['
name|'k'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'assert'
string|"'snapshotId'"
name|'in'
name|'ebs'
newline|'\n'
name|'item'
op|'['
string|"'ebs'"
op|']'
op|'='
name|'ebs'
newline|'\n'
dedent|''
name|'return'
name|'item'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_format_mappings
dedent|''
name|'def'
name|'_format_mappings'
op|'('
name|'properties'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Format multiple BlockDeviceMappingItemType"""'
newline|'\n'
name|'mappings'
op|'='
op|'['
op|'{'
string|"'virtualName'"
op|':'
name|'m'
op|'['
string|"'virtual'"
op|']'
op|','
string|"'deviceName'"
op|':'
name|'m'
op|'['
string|"'device'"
op|']'
op|'}'
nl|'\n'
name|'for'
name|'m'
name|'in'
name|'_properties_get_mappings'
op|'('
name|'properties'
op|')'
nl|'\n'
name|'if'
name|'block_device'
op|'.'
name|'is_swap_or_ephemeral'
op|'('
name|'m'
op|'['
string|"'virtual'"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'block_device_mapping'
op|'='
op|'['
name|'_format_block_device_mapping'
op|'('
name|'bdm'
op|')'
name|'for'
name|'bdm'
name|'in'
nl|'\n'
name|'properties'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata): overwrite mappings with block_device_mapping'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'block_device_mapping'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'mappings'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'bdm'
op|'['
string|"'deviceName'"
op|']'
op|'=='
name|'mappings'
op|'['
name|'i'
op|']'
op|'['
string|"'deviceName'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'mappings'
op|'['
name|'i'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'mappings'
op|'.'
name|'append'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata): trim ebs.no_device == true. Is this necessary?'
nl|'\n'
dedent|''
name|'mappings'
op|'='
op|'['
name|'bdm'
name|'for'
name|'bdm'
name|'in'
name|'mappings'
name|'if'
name|'not'
op|'('
name|'bdm'
op|'.'
name|'get'
op|'('
string|"'noDevice'"
op|','
name|'False'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'mappings'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|'='
name|'mappings'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudController
dedent|''
dedent|''
name|'class'
name|'CloudController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" CloudController provides the critical dispatch between\n inbound API calls through the endpoint and messages\n sent to the other nodes.\n"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_service'
op|'='
name|'s3'
op|'.'
name|'S3ImageService'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_api'
op|'='
name|'network'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_api'
op|'='
name|'volume'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
nl|'\n'
name|'network_api'
op|'='
name|'self'
op|'.'
name|'network_api'
op|','
nl|'\n'
name|'volume_api'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setup'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'CloudController'"
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Ensure the keychains and folders exist. """'
newline|'\n'
comment|'# FIXME(ja): this should be moved to a nova-manage command,'
nl|'\n'
comment|'# if not setup throw exceptions instead of running'
nl|'\n'
comment|"# Create keys folder, if it doesn't exist"
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'FLAGS'
op|'.'
name|'keys_path'
op|')'
newline|'\n'
comment|"# Gen root CA, if we don't have one"
nl|'\n'
dedent|''
name|'root_ca_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|','
name|'FLAGS'
op|'.'
name|'ca_file'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'root_ca_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'genrootca_sh_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'pardir'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'pardir'
op|','
nl|'\n'
string|"'CA'"
op|','
nl|'\n'
string|"'genrootca.sh'"
op|')'
newline|'\n'
nl|'\n'
name|'start'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'chdir'
op|'('
name|'FLAGS'
op|'.'
name|'ca_path'
op|')'
newline|'\n'
comment|'# TODO(vish): Do this with M2Crypto instead'
nl|'\n'
name|'utils'
op|'.'
name|'runthis'
op|'('
name|'_'
op|'('
string|'"Generating root CA: %s"'
op|')'
op|','
string|'"sh"'
op|','
name|'genrootca_sh_path'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chdir'
op|'('
name|'start'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_mpi_data
dedent|''
dedent|''
name|'def'
name|'_get_mpi_data'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|'}'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'fixed_ips'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
string|"'%s slots=%d'"
op|'%'
op|'('
name|'instance'
op|'['
string|"'fixed_ips'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'key'
op|'='
name|'str'
op|'('
name|'instance'
op|'['
string|"'key_name'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'key'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'['
name|'key'
op|']'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'['
name|'key'
op|']'
op|'='
op|'['
name|'line'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_get_availability_zone_by_host
dedent|''
name|'def'
name|'_get_availability_zone_by_host'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'host'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'services'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'services'
op|'['
number|'0'
op|']'
op|'['
string|"'availability_zone'"
op|']'
newline|'\n'
dedent|''
name|'return'
string|"'unknown zone'"
newline|'\n'
nl|'\n'
DECL|member|_get_image_state
dedent|''
name|'def'
name|'_get_image_state'
op|'('
name|'self'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
comment|"# NOTE(vish): fallback status if image_state isn't set"
nl|'\n'
indent|'        '
name|'state'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'status'"
op|')'
newline|'\n'
name|'if'
name|'state'
op|'=='
string|"'active'"
op|':'
newline|'\n'
indent|'            '
name|'state'
op|'='
string|"'available'"
newline|'\n'
dedent|''
name|'return'
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'image_state'"
op|','
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_instance_mapping
dedent|''
name|'def'
name|'_format_instance_mapping'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root_device_name'
op|'='
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
newline|'\n'
name|'if'
name|'root_device_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'_DEFAULT_MAPPINGS'
newline|'\n'
nl|'\n'
dedent|''
name|'mappings'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'mappings'
op|'['
string|"'ami'"
op|']'
op|'='
name|'block_device'
op|'.'
name|'strip_dev'
op|'('
name|'root_device_name'
op|')'
newline|'\n'
name|'mappings'
op|'['
string|"'root'"
op|']'
op|'='
name|'root_device_name'
newline|'\n'
nl|'\n'
comment|"# 'ephemeralN' and 'swap'"
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
name|'or'
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
name|'or'
name|'bdm'
op|'['
string|"'no_device'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'virtual_name'
op|'='
name|'bdm'
op|'['
string|"'virtual_name'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'virtual_name'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'block_device'
op|'.'
name|'is_swap_or_ephemeral'
op|'('
name|'virtual_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mappings'
op|'['
name|'virtual_name'
op|']'
op|'='
name|'bdm'
op|'['
string|"'device_name'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'mappings'
newline|'\n'
nl|'\n'
DECL|member|get_metadata
dedent|''
name|'def'
name|'get_metadata'
op|'('
name|'self'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'fixed_ip'"
op|':'
name|'address'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'instance_ref'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'instance_ref'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'# This ensures that all attributes of the instance'
nl|'\n'
comment|'# are populated.'
nl|'\n'
dedent|''
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'mpi'
op|'='
name|'self'
op|'.'
name|'_get_mpi_data'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'instance_ref'
op|'['
string|"'key_name'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
op|'{'
string|"'0'"
op|':'
op|'{'
string|"'_name'"
op|':'
name|'instance_ref'
op|'['
string|"'key_name'"
op|']'
op|','
nl|'\n'
string|"'openssh-key'"
op|':'
name|'instance_ref'
op|'['
string|"'key_data'"
op|']'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'hostname'
op|'='
name|'instance_ref'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'host'
op|'='
name|'instance_ref'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'availability_zone'
op|'='
name|'self'
op|'.'
name|'_get_availability_zone_by_host'
op|'('
name|'ctxt'
op|','
name|'host'
op|')'
newline|'\n'
name|'floating_ip'
op|'='
name|'db'
op|'.'
name|'instance_get_floating_address'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'image_ec2_id'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|')'
newline|'\n'
name|'security_groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'security_groups'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'security_groups'
op|']'
newline|'\n'
name|'mappings'
op|'='
name|'self'
op|'.'
name|'_format_instance_mapping'
op|'('
name|'ctxt'
op|','
name|'instance_ref'
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'user-data'"
op|':'
name|'self'
op|'.'
name|'_format_user_data'
op|'('
name|'instance_ref'
op|')'
op|','
nl|'\n'
string|"'meta-data'"
op|':'
op|'{'
nl|'\n'
string|"'ami-id'"
op|':'
name|'image_ec2_id'
op|','
nl|'\n'
string|"'ami-launch-index'"
op|':'
name|'instance_ref'
op|'['
string|"'launch_index'"
op|']'
op|','
nl|'\n'
string|"'ami-manifest-path'"
op|':'
string|"'FIXME'"
op|','
nl|'\n'
string|"'block-device-mapping'"
op|':'
name|'mappings'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'instance-action'"
op|':'
string|"'none'"
op|','
nl|'\n'
string|"'instance-id'"
op|':'
name|'ec2_id'
op|','
nl|'\n'
string|"'instance-type'"
op|':'
name|'instance_ref'
op|'['
string|"'instance_type'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'local-hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'local-ipv4'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'placement'"
op|':'
op|'{'
string|"'availability-zone'"
op|':'
name|'availability_zone'
op|'}'
op|','
nl|'\n'
string|"'public-hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'public-ipv4'"
op|':'
name|'floating_ip'
name|'or'
string|"''"
op|','
nl|'\n'
string|"'public-keys'"
op|':'
name|'keys'
op|','
nl|'\n'
string|"'reservation-id'"
op|':'
name|'instance_ref'
op|'['
string|"'reservation_id'"
op|']'
op|','
nl|'\n'
string|"'security-groups'"
op|':'
name|'security_groups'
op|','
nl|'\n'
string|"'mpi'"
op|':'
name|'mpi'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'image_type'
name|'in'
op|'['
string|"'kernel'"
op|','
string|"'ramdisk'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_ref'
op|'.'
name|'get'
op|'('
string|"'%s_id'"
op|'%'
name|'image_type'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ec2_id'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'instance_ref'
op|'['
string|"'%s_id'"
op|'%'
name|'image_type'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_image_type'
op|'('
name|'image_type'
op|')'
op|')'
newline|'\n'
name|'data'
op|'['
string|"'meta-data'"
op|']'
op|'['
string|"'%s-id'"
op|'%'
name|'image_type'
op|']'
op|'='
name|'ec2_id'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'False'
op|':'
comment|'# TODO(vish): store ancestor ids'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'ancestor-ami-ids'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'False'
op|':'
comment|'# TODO(vish): store product codes'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|"'product-codes'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|describe_availability_zones
dedent|''
name|'def'
name|'describe_availability_zones'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
string|"'zone_name'"
name|'in'
name|'kwargs'
name|'and'
nl|'\n'
string|"'verbose'"
name|'in'
name|'kwargs'
op|'['
string|"'zone_name'"
op|']'
name|'and'
nl|'\n'
name|'context'
op|'.'
name|'is_admin'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_describe_availability_zones_verbose'
op|'('
name|'context'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_describe_availability_zones'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_describe_availability_zones
dedent|''
dedent|''
name|'def'
name|'_describe_availability_zones'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'enabled_services'
op|'='
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
name|'False'
op|')'
newline|'\n'
name|'disabled_services'
op|'='
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
name|'True'
op|')'
newline|'\n'
name|'available_zones'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'zone'
name|'in'
op|'['
name|'service'
op|'.'
name|'availability_zone'
name|'for'
name|'service'
nl|'\n'
name|'in'
name|'enabled_services'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'zone'
name|'in'
name|'available_zones'
op|':'
newline|'\n'
indent|'                '
name|'available_zones'
op|'.'
name|'append'
op|'('
name|'zone'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'not_available_zones'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'zone'
name|'in'
op|'['
name|'service'
op|'.'
name|'availability_zone'
name|'for'
name|'service'
name|'in'
name|'disabled_services'
nl|'\n'
name|'if'
name|'not'
name|'service'
op|'['
string|"'availability_zone'"
op|']'
name|'in'
name|'available_zones'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'zone'
name|'in'
name|'not_available_zones'
op|':'
newline|'\n'
indent|'                '
name|'not_available_zones'
op|'.'
name|'append'
op|'('
name|'zone'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'zone'
name|'in'
name|'available_zones'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'append'
op|'('
op|'{'
string|"'zoneName'"
op|':'
name|'zone'
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'zone'
name|'in'
name|'not_available_zones'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'append'
op|'('
op|'{'
string|"'zoneName'"
op|':'
name|'zone'
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|'"not available"'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'availabilityZoneInfo'"
op|':'
name|'result'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_describe_availability_zones_verbose
dedent|''
name|'def'
name|'_describe_availability_zones_verbose'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
op|'{'
string|"'availabilityZoneInfo'"
op|':'
op|'['
op|'{'
string|"'zoneName'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|"'available'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'context'
op|','
name|'False'
op|')'
newline|'\n'
name|'now'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'host'
name|'in'
op|'['
name|'service'
op|'['
string|"'host'"
op|']'
name|'for'
name|'service'
name|'in'
name|'services'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'                '
name|'hosts'
op|'.'
name|'append'
op|'('
name|'host'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'['
string|"'availabilityZoneInfo'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
string|"'zoneName'"
op|':'
string|"'|- %s'"
op|'%'
name|'host'
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'hsvcs'
op|'='
op|'['
name|'service'
name|'for'
name|'service'
name|'in'
name|'services'
name|'if'
name|'service'
op|'['
string|"'host'"
op|']'
op|'=='
name|'host'
op|']'
newline|'\n'
name|'for'
name|'svc'
name|'in'
name|'hsvcs'
op|':'
newline|'\n'
indent|'                '
name|'delta'
op|'='
name|'now'
op|'-'
op|'('
name|'svc'
op|'['
string|"'updated_at'"
op|']'
name|'or'
name|'svc'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
name|'alive'
op|'='
op|'('
name|'delta'
op|'.'
name|'seconds'
op|'<='
name|'FLAGS'
op|'.'
name|'service_down_time'
op|')'
newline|'\n'
name|'art'
op|'='
op|'('
name|'alive'
name|'and'
string|'":-)"'
op|')'
name|'or'
string|'"XXX"'
newline|'\n'
name|'active'
op|'='
string|"'enabled'"
newline|'\n'
name|'if'
name|'svc'
op|'['
string|"'disabled'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'active'
op|'='
string|"'disabled'"
newline|'\n'
dedent|''
name|'rv'
op|'['
string|"'availabilityZoneInfo'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
nl|'\n'
string|"'zoneName'"
op|':'
string|"'| |- %s'"
op|'%'
name|'svc'
op|'['
string|"'binary'"
op|']'
op|','
nl|'\n'
string|"'zoneState'"
op|':'
string|"'%s %s %s'"
op|'%'
op|'('
name|'active'
op|','
name|'art'
op|','
nl|'\n'
name|'svc'
op|'['
string|"'updated_at'"
op|']'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
DECL|member|describe_regions
dedent|''
name|'def'
name|'describe_regions'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'region_name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'region'
name|'in'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|','
name|'_sep'
op|','
name|'host'
op|'='
name|'region'
op|'.'
name|'partition'
op|'('
string|"'='"
op|')'
newline|'\n'
name|'endpoint'
op|'='
string|"'%s://%s:%s%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'ec2_scheme'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_port'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_path'
op|')'
newline|'\n'
name|'regions'
op|'.'
name|'append'
op|'('
op|'{'
string|"'regionName'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'regionEndpoint'"
op|':'
name|'endpoint'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'['
op|'{'
string|"'regionName'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'regionEndpoint'"
op|':'
string|"'%s://%s:%s%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'ec2_scheme'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_host'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_port'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_path'
op|')'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'regionInfo'"
op|':'
name|'regions'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|describe_snapshots
dedent|''
name|'def'
name|'describe_snapshots'
op|'('
name|'self'
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'owner'
op|'='
name|'None'
op|','
nl|'\n'
name|'restorable_by'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'snapshot_id'
op|':'
newline|'\n'
indent|'            '
name|'snapshots'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'ec2_id'
name|'in'
name|'snapshot_id'
op|':'
newline|'\n'
indent|'                '
name|'internal_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_snapshot'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'internal_id'
op|')'
newline|'\n'
name|'snapshots'
op|'.'
name|'append'
op|'('
name|'snapshot'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'snapshots'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all_snapshots'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'snapshots'
op|'='
op|'['
name|'self'
op|'.'
name|'_format_snapshot'
op|'('
name|'context'
op|','
name|'s'
op|')'
name|'for'
name|'s'
name|'in'
name|'snapshots'
op|']'
newline|'\n'
name|'return'
op|'{'
string|"'snapshotSet'"
op|':'
name|'snapshots'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_snapshot
dedent|''
name|'def'
name|'_format_snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'s'
op|'['
string|"'snapshotId'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snapshot'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'s'
op|'['
string|"'volumeId'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'snapshot'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'s'
op|'['
string|"'status'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'startTime'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'progress'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'progress'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'ownerId'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'volumeSize'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'description'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'display_description'"
op|']'
newline|'\n'
nl|'\n'
name|'s'
op|'['
string|"'display_name'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'display_name'"
op|']'
newline|'\n'
name|'s'
op|'['
string|"'display_description'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'display_description'"
op|']'
newline|'\n'
name|'return'
name|'s'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Create snapshot of volume %s"'
op|')'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_snapshot'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volume_id'
op|','
nl|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|','
nl|'\n'
name|'description'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_description'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_format_snapshot'
op|'('
name|'context'
op|','
name|'snapshot'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'snapshot_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'delete_snapshot'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|describe_key_pairs
dedent|''
name|'def'
name|'describe_key_pairs'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_pairs'
op|'='
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'key_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'key_pairs'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'key_pairs'
name|'if'
name|'x'
op|'['
string|"'name'"
op|']'
name|'in'
name|'key_name'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key_pair'
name|'in'
name|'key_pairs'
op|':'
newline|'\n'
comment|'# filter out the vpn keys'
nl|'\n'
indent|'            '
name|'suffix'
op|'='
name|'FLAGS'
op|'.'
name|'vpn_key_suffix'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
name|'or'
name|'not'
name|'key_pair'
op|'['
string|"'name'"
op|']'
op|'.'
name|'endswith'
op|'('
name|'suffix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'.'
name|'append'
op|'('
op|'{'
nl|'\n'
string|"'keyName'"
op|':'
name|'key_pair'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'keyFingerprint'"
op|':'
name|'key_pair'
op|'['
string|"'fingerprint'"
op|']'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'keySet'"
op|':'
name|'result'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_key_pair
dedent|''
name|'def'
name|'create_key_pair'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Create key pair %s"'
op|')'
op|','
name|'key_name'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'data'
op|'='
name|'_gen_key'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'keyName'"
op|':'
name|'key_name'
op|','
nl|'\n'
string|"'keyFingerprint'"
op|':'
name|'data'
op|'['
string|"'fingerprint'"
op|']'
op|','
nl|'\n'
string|"'keyMaterial'"
op|':'
name|'data'
op|'['
string|"'private_key'"
op|']'
op|'}'
newline|'\n'
comment|'# TODO(vish): when context is no longer an object, pass it here'
nl|'\n'
nl|'\n'
DECL|member|import_public_key
dedent|''
name|'def'
name|'import_public_key'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|','
name|'public_key'
op|','
nl|'\n'
name|'fingerprint'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Import key %s"'
op|')'
op|','
name|'key_name'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'key'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'key'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
name|'key'
op|'['
string|"'name'"
op|']'
op|'='
name|'key_name'
newline|'\n'
name|'key'
op|'['
string|"'public_key'"
op|']'
op|'='
name|'public_key'
newline|'\n'
name|'if'
name|'fingerprint'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'pubfile'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
string|"'temp.pub'"
op|')'
newline|'\n'
name|'fh'
op|'='
name|'open'
op|'('
name|'pubfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'fh'
op|'.'
name|'write'
op|'('
name|'public_key'
op|')'
newline|'\n'
name|'fh'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
op|'('
name|'out'
op|','
name|'err'
op|')'
op|'='
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'ssh-keygen'"
op|','
string|"'-q'"
op|','
string|"'-l'"
op|','
string|"'-f'"
op|','
nl|'\n'
string|"'%s'"
op|'%'
op|'('
name|'pubfile'
op|')'
op|')'
newline|'\n'
name|'fingerprint'
op|'='
name|'out'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'tmpdir'
op|')'
newline|'\n'
dedent|''
name|'key'
op|'['
string|"'fingerprint'"
op|']'
op|'='
name|'fingerprint'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'key'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|delete_key_pair
dedent|''
name|'def'
name|'delete_key_pair'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'key_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Delete key pair %s"'
op|')'
op|','
name|'key_name'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
comment|"# aws returns true even if the key doesn't exist"
nl|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|describe_security_groups
dedent|''
name|'def'
name|'describe_security_groups'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|'='
name|'None'
op|','
name|'group_id'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'ensure_default_security_group'
op|'('
name|'context'
op|')'
newline|'\n'
name|'if'
name|'group_name'
name|'or'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'group_name'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'name'
name|'in'
name|'group_name'
op|':'
newline|'\n'
indent|'                    '
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'name'
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'group'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'group_id'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'gid'
name|'in'
name|'group_id'
op|':'
newline|'\n'
indent|'                    '
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'gid'
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'group'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
op|'['
name|'self'
op|'.'
name|'_format_security_group'
op|'('
name|'context'
op|','
name|'g'
op|')'
name|'for'
name|'g'
name|'in'
name|'groups'
op|']'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'securityGroupInfo'"
op|':'
nl|'\n'
name|'list'
op|'('
name|'sorted'
op|'('
name|'groups'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'k'
op|':'
op|'('
name|'k'
op|'['
string|"'ownerId'"
op|']'
op|','
name|'k'
op|'['
string|"'groupName'"
op|']'
op|')'
op|')'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_security_group
dedent|''
name|'def'
name|'_format_security_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'g'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'g'
op|'['
string|"'groupDescription'"
op|']'
op|'='
name|'group'
op|'.'
name|'description'
newline|'\n'
name|'g'
op|'['
string|"'groupName'"
op|']'
op|'='
name|'group'
op|'.'
name|'name'
newline|'\n'
name|'g'
op|'['
string|"'ownerId'"
op|']'
op|'='
name|'group'
op|'.'
name|'project_id'
newline|'\n'
name|'g'
op|'['
string|"'ipPermissions'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'group'
op|'.'
name|'rules'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'r'
op|'['
string|"'ipProtocol'"
op|']'
op|'='
name|'rule'
op|'.'
name|'protocol'
newline|'\n'
name|'r'
op|'['
string|"'fromPort'"
op|']'
op|'='
name|'rule'
op|'.'
name|'from_port'
newline|'\n'
name|'r'
op|'['
string|"'toPort'"
op|']'
op|'='
name|'rule'
op|'.'
name|'to_port'
newline|'\n'
name|'r'
op|'['
string|"'groups'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'r'
op|'['
string|"'ipRanges'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'rule'
op|'.'
name|'group_id'
op|':'
newline|'\n'
indent|'                '
name|'source_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'rule'
op|'.'
name|'group_id'
op|')'
newline|'\n'
name|'r'
op|'['
string|"'groups'"
op|']'
op|'+='
op|'['
op|'{'
string|"'groupName'"
op|':'
name|'source_group'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'userId'"
op|':'
name|'source_group'
op|'.'
name|'project_id'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'['
string|"'ipRanges'"
op|']'
op|'+='
op|'['
op|'{'
string|"'cidrIp'"
op|':'
name|'rule'
op|'.'
name|'cidr'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'g'
op|'['
string|"'ipPermissions'"
op|']'
op|'+='
op|'['
name|'r'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'g'
newline|'\n'
nl|'\n'
DECL|member|_rule_args_to_dict
dedent|''
name|'def'
name|'_rule_args_to_dict'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'not'
string|"'groups'"
name|'in'
name|'kwargs'
name|'and'
name|'not'
string|"'ip_ranges'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'rule'
op|'='
name|'self'
op|'.'
name|'_rule_dict_last_step'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'rules'
op|'.'
name|'append'
op|'('
name|'rule'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rules'
newline|'\n'
dedent|''
name|'if'
string|"'ip_ranges'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'rules'
op|'='
name|'self'
op|'.'
name|'_cidr_args_split'
op|'('
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rules'
op|'='
op|'['
name|'kwargs'
op|']'
newline|'\n'
dedent|''
name|'finalset'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'groups'"
name|'in'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'groups_values'
op|'='
name|'self'
op|'.'
name|'_groups_args_split'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'for'
name|'groups_value'
name|'in'
name|'groups_values'
op|':'
newline|'\n'
indent|'                    '
name|'final'
op|'='
name|'self'
op|'.'
name|'_rule_dict_last_step'
op|'('
name|'context'
op|','
op|'**'
name|'groups_value'
op|')'
newline|'\n'
name|'finalset'
op|'.'
name|'append'
op|'('
name|'final'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'final'
op|'='
name|'self'
op|'.'
name|'_rule_dict_last_step'
op|'('
name|'context'
op|','
op|'**'
name|'rule'
op|')'
newline|'\n'
name|'finalset'
op|'.'
name|'append'
op|'('
name|'final'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'finalset'
newline|'\n'
nl|'\n'
DECL|member|_cidr_args_split
dedent|''
name|'def'
name|'_cidr_args_split'
op|'('
name|'self'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr_args_split'
op|'='
op|'['
op|']'
newline|'\n'
name|'cidrs'
op|'='
name|'kwargs'
op|'['
string|"'ip_ranges'"
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'cidr'
name|'in'
name|'cidrs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mykwargs'
op|'='
name|'kwargs'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'del'
name|'mykwargs'
op|'['
string|"'ip_ranges'"
op|']'
newline|'\n'
name|'mykwargs'
op|'['
string|"'cidr_ip'"
op|']'
op|'='
name|'cidr'
op|'['
string|"'cidr_ip'"
op|']'
newline|'\n'
name|'cidr_args_split'
op|'.'
name|'append'
op|'('
name|'mykwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cidr_args_split'
newline|'\n'
nl|'\n'
DECL|member|_groups_args_split
dedent|''
name|'def'
name|'_groups_args_split'
op|'('
name|'self'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups_args_split'
op|'='
op|'['
op|']'
newline|'\n'
name|'groups'
op|'='
name|'kwargs'
op|'['
string|"'groups'"
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'group'
name|'in'
name|'groups'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mykwargs'
op|'='
name|'kwargs'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'del'
name|'mykwargs'
op|'['
string|"'groups'"
op|']'
newline|'\n'
name|'if'
string|"'group_name'"
name|'in'
name|'group'
op|':'
newline|'\n'
indent|'                '
name|'mykwargs'
op|'['
string|"'source_security_group_name'"
op|']'
op|'='
name|'group'
op|'['
string|"'group_name'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'user_id'"
name|'in'
name|'group'
op|':'
newline|'\n'
indent|'                '
name|'mykwargs'
op|'['
string|"'source_security_group_owner_id'"
op|']'
op|'='
name|'group'
op|'['
string|"'user_id'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'group_id'"
name|'in'
name|'group'
op|':'
newline|'\n'
indent|'                '
name|'mykwargs'
op|'['
string|"'source_security_group_id'"
op|']'
op|'='
name|'group'
op|'['
string|"'group_id'"
op|']'
newline|'\n'
dedent|''
name|'groups_args_split'
op|'.'
name|'append'
op|'('
name|'mykwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'groups_args_split'
newline|'\n'
nl|'\n'
DECL|member|_rule_dict_last_step
dedent|''
name|'def'
name|'_rule_dict_last_step'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'to_port'
op|'='
name|'None'
op|','
name|'from_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'ip_protocol'
op|'='
name|'None'
op|','
name|'cidr_ip'
op|'='
name|'None'
op|','
name|'user_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'source_security_group_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'source_security_group_owner_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'source_security_group_name'
op|':'
newline|'\n'
indent|'            '
name|'source_project_id'
op|'='
name|'self'
op|'.'
name|'_get_source_project_id'
op|'('
name|'context'
op|','
nl|'\n'
name|'source_security_group_owner_id'
op|')'
newline|'\n'
nl|'\n'
name|'source_security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'source_project_id'
op|','
nl|'\n'
name|'source_security_group_name'
op|')'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'if'
name|'not'
name|'source_security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'source_security_group_name'
op|')'
newline|'\n'
dedent|''
name|'values'
op|'['
string|"'group_id'"
op|']'
op|'='
name|'source_security_group'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'cidr_ip'
op|':'
newline|'\n'
comment|'# If this fails, it throws an exception. This is what we want.'
nl|'\n'
indent|'            '
name|'cidr_ip'
op|'='
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'cidr_ip'
op|')'
op|'.'
name|'decode'
op|'('
op|')'
newline|'\n'
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'cidr_ip'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'cidr'"
op|']'
op|'='
name|'cidr_ip'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'cidr'"
op|']'
op|'='
string|"'0.0.0.0/0'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'ip_protocol'
name|'and'
name|'from_port'
name|'and'
name|'to_port'
op|':'
newline|'\n'
indent|'            '
name|'from_port'
op|'='
name|'int'
op|'('
name|'from_port'
op|')'
newline|'\n'
name|'to_port'
op|'='
name|'int'
op|'('
name|'to_port'
op|')'
newline|'\n'
name|'ip_protocol'
op|'='
name|'str'
op|'('
name|'ip_protocol'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'ip_protocol'
op|'.'
name|'upper'
op|'('
op|')'
name|'not'
name|'in'
op|'['
string|"'TCP'"
op|','
string|"'UDP'"
op|','
string|"'ICMP'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InvalidIpProtocol'
op|'('
name|'protocol'
op|'='
name|'ip_protocol'
op|')'
newline|'\n'
dedent|''
name|'if'
op|'('
op|'('
name|'min'
op|'('
name|'from_port'
op|','
name|'to_port'
op|')'
op|'<'
op|'-'
number|'1'
op|')'
name|'or'
nl|'\n'
op|'('
name|'max'
op|'('
name|'from_port'
op|','
name|'to_port'
op|')'
op|'>'
number|'65535'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InvalidPortRange'
op|'('
name|'from_port'
op|'='
name|'from_port'
op|','
nl|'\n'
name|'to_port'
op|'='
name|'to_port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'['
string|"'protocol'"
op|']'
op|'='
name|'ip_protocol'
newline|'\n'
name|'values'
op|'['
string|"'from_port'"
op|']'
op|'='
name|'from_port'
newline|'\n'
name|'values'
op|'['
string|"'to_port'"
op|']'
op|'='
name|'to_port'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# If cidr based filtering, protocol and ports are mandatory'
nl|'\n'
indent|'            '
name|'if'
string|"'cidr'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
DECL|member|_security_group_rule_exists
dedent|''
name|'def'
name|'_security_group_rule_exists'
op|'('
name|'self'
op|','
name|'security_group'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicates whether the specified rule values are already\n           defined in the given security group.\n        """'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'security_group'
op|'.'
name|'rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'group_id'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'rule'
op|'['
string|"'group_id'"
op|']'
op|'=='
name|'values'
op|'['
string|"'group_id'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'rule'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'is_duplicate'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'('
string|"'cidr'"
op|','
string|"'from_port'"
op|','
string|"'to_port'"
op|','
string|"'protocol'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'rule'
op|'['
name|'key'
op|']'
op|'!='
name|'values'
op|'['
name|'key'
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'is_duplicate'
op|'='
name|'False'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'is_duplicate'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'rule'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|revoke_security_group_ingress
dedent|''
name|'def'
name|'revoke_security_group_ingress'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'group_id'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'group_name'
name|'and'
name|'not'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
string|'"Not enough parameters, need group_name or group_id"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'ensure_default_security_group'
op|'('
name|'context'
op|')'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'if'
name|'group_name'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'group_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'msg'
op|'='
string|'"Revoke security group ingress %s"'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
name|'msg'
op|')'
op|','
name|'security_group'
op|'['
string|"'name'"
op|']'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'prevalues'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'prevalues'
op|'='
name|'kwargs'
op|'['
string|"'ip_permissions'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'prevalues'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'rule_id'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'values'
name|'in'
name|'prevalues'
op|':'
newline|'\n'
indent|'            '
name|'rulesvalues'
op|'='
name|'self'
op|'.'
name|'_rule_args_to_dict'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'rulesvalues'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'='
string|'"%s Not enough parameters to build a valid rule"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|'%'
name|'rulesvalues'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'values_for_rule'
name|'in'
name|'rulesvalues'
op|':'
newline|'\n'
indent|'                '
name|'values_for_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|'='
name|'security_group'
op|'.'
name|'id'
newline|'\n'
name|'rule_id'
op|'='
name|'self'
op|'.'
name|'_security_group_rule_exists'
op|'('
name|'security_group'
op|','
nl|'\n'
name|'values_for_rule'
op|')'
newline|'\n'
name|'if'
name|'rule_id'
op|':'
newline|'\n'
indent|'                    '
name|'db'
op|'.'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'rule_id'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'rule_id'
op|':'
newline|'\n'
comment|'# NOTE(vish): we removed a rule, so refresh'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'trigger_security_group_rules_refresh'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|'='
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|'"No rule for the specified parameters."'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(soren): This has only been tested with Boto as the client.'
nl|'\n'
comment|'#              Unfortunately, it seems Boto is using an old API'
nl|'\n'
comment|'#              for these operations, so support for newer API versions'
nl|'\n'
comment|'#              is sketchy.'
nl|'\n'
DECL|member|authorize_security_group_ingress
dedent|''
name|'def'
name|'authorize_security_group_ingress'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'group_id'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'group_name'
name|'and'
name|'not'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
string|'"Not enough parameters, need group_name or group_id"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'ensure_default_security_group'
op|'('
name|'context'
op|')'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'if'
name|'group_name'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'group_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'msg'
op|'='
string|'"Authorize security group ingress %s"'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
name|'msg'
op|')'
op|','
name|'security_group'
op|'['
string|"'name'"
op|']'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'prevalues'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'prevalues'
op|'='
name|'kwargs'
op|'['
string|"'ip_permissions'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'prevalues'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'postvalues'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'values'
name|'in'
name|'prevalues'
op|':'
newline|'\n'
indent|'            '
name|'rulesvalues'
op|'='
name|'self'
op|'.'
name|'_rule_args_to_dict'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'rulesvalues'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'='
string|'"%s Not enough parameters to build a valid rule"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|'%'
name|'rulesvalues'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'values_for_rule'
name|'in'
name|'rulesvalues'
op|':'
newline|'\n'
indent|'                '
name|'values_for_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|'='
name|'security_group'
op|'.'
name|'id'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_security_group_rule_exists'
op|'('
name|'security_group'
op|','
nl|'\n'
name|'values_for_rule'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'err'
op|'='
string|"'%s - This rule already exists in group'"
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|')'
op|'%'
name|'values_for_rule'
op|')'
newline|'\n'
dedent|''
name|'postvalues'
op|'.'
name|'append'
op|'('
name|'values_for_rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'values_for_rule'
name|'in'
name|'postvalues'
op|':'
newline|'\n'
indent|'            '
name|'security_group_rule'
op|'='
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'values_for_rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'postvalues'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'trigger_security_group_rules_refresh'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|'='
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|'"No rule for the specified parameters."'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_source_project_id
dedent|''
name|'def'
name|'_get_source_project_id'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'source_security_group_owner_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'source_security_group_owner_id'
op|':'
newline|'\n'
comment|'# Parse user:project for source group.'
nl|'\n'
indent|'            '
name|'source_parts'
op|'='
name|'source_security_group_owner_id'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
nl|'\n'
comment|"# If no project name specified, assume it's same as user name."
nl|'\n'
comment|"# Since we're looking up by project name, the user name is not"
nl|'\n'
comment|"# used here.  It's only read for EC2 API compatibility."
nl|'\n'
name|'if'
name|'len'
op|'('
name|'source_parts'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'source_project_id'
op|'='
name|'source_parts'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'source_project_id'
op|'='
name|'source_parts'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'source_project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'source_project_id'
newline|'\n'
nl|'\n'
DECL|member|create_security_group
dedent|''
name|'def'
name|'create_security_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|','
name|'group_description'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'re'
op|'.'
name|'match'
op|'('
string|"'^[a-zA-Z0-9_\\- ]+$'"
op|','
name|'str'
op|'('
name|'group_name'
op|')'
op|')'
op|':'
newline|'\n'
comment|'# Some validation to ensure that values match API spec.'
nl|'\n'
comment|'# - Alphanumeric characters, spaces, dashes, and underscores.'
nl|'\n'
comment|'# TODO(Daviey): LP: #813685 extend beyond group_name checking, and'
nl|'\n'
comment|'#  probably create a param validator that can be used elsewhere.'
nl|'\n'
indent|'            '
name|'err'
op|'='
name|'_'
op|'('
string|'"Value (%s) for parameter GroupName is invalid."'
nl|'\n'
string|'" Content limited to Alphanumeric characters, "'
nl|'\n'
string|'"spaces, dashes, and underscores."'
op|')'
op|'%'
name|'group_name'
newline|'\n'
comment|'# err not that of master ec2 implementation, as they fail to raise.'
nl|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'err'
op|'='
name|'err'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'str'
op|'('
name|'group_name'
op|')'
op|')'
op|'>'
number|'255'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
name|'_'
op|'('
string|'"Value (%s) for parameter GroupName is invalid."'
nl|'\n'
string|'" Length exceeds maximum of 255."'
op|')'
op|'%'
name|'group_name'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'err'
op|'='
name|'err'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Create Security Group %s"'
op|')'
op|','
name|'group_name'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'ensure_default_security_group'
op|'('
name|'context'
op|')'
newline|'\n'
name|'if'
name|'db'
op|'.'
name|'security_group_exists'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'group %s already exists'"
op|')'
op|'%'
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'group'
op|'='
op|'{'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'group_name'
op|','
nl|'\n'
string|"'description'"
op|':'
name|'group_description'
op|'}'
newline|'\n'
name|'group_ref'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'group'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'securityGroupSet'"
op|':'
op|'['
name|'self'
op|'.'
name|'_format_security_group'
op|'('
name|'context'
op|','
nl|'\n'
name|'group_ref'
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|delete_security_group
dedent|''
name|'def'
name|'delete_security_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_name'
op|'='
name|'None'
op|','
name|'group_id'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'group_name'
name|'and'
name|'not'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
string|'"Not enough parameters, need group_name or group_id"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'if'
name|'group_name'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'group_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'group_id'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_group'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'notfound'
op|'('
name|'security_group_id'
op|'='
name|'group_id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Delete security group %s"'
op|')'
op|','
name|'group_name'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'security_group'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_console_output
dedent|''
name|'def'
name|'get_console_output'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Get console output for instance %s"'
op|')'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
comment|'# instance_id may be passed in as a list of instances'
nl|'\n'
name|'if'
name|'type'
op|'('
name|'instance_id'
op|')'
op|'=='
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'ec2_id'
op|'='
name|'instance_id'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ec2_id'
op|'='
name|'instance_id'
newline|'\n'
dedent|''
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_console_output'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
name|'now'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
string|'"InstanceId"'
op|':'
name|'ec2_id'
op|','
nl|'\n'
string|'"Timestamp"'
op|':'
name|'now'
op|','
nl|'\n'
string|'"output"'
op|':'
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'output'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_ajax_console
dedent|''
name|'def'
name|'get_ajax_console'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_id'
op|'='
name|'instance_id'
op|'['
number|'0'
op|']'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_ajax_console'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vnc_console
dedent|''
name|'def'
name|'get_vnc_console'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns vnc browser url.  Used by OS dashboard."""'
newline|'\n'
name|'ec2_id'
op|'='
name|'instance_id'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_vnc_console'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_volumes
dedent|''
name|'def'
name|'describe_volumes'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'volume_id'
op|':'
newline|'\n'
indent|'            '
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'ec2_id'
name|'in'
name|'volume_id'
op|':'
newline|'\n'
indent|'                '
name|'internal_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'internal_id'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'volume'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'volumes'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'volumes'
op|'='
op|'['
name|'self'
op|'.'
name|'_format_volume'
op|'('
name|'context'
op|','
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'volumes'
op|']'
newline|'\n'
name|'return'
op|'{'
string|"'volumeSet'"
op|':'
name|'volumes'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_volume
dedent|''
name|'def'
name|'_format_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ec2_id'
op|'='
name|'None'
newline|'\n'
name|'instance_data'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'instance'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_id'
op|'='
name|'volume'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance_ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'instance_data'
op|'='
string|"'%s[%s]'"
op|'%'
op|'('
name|'instance_ec2_id'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'v'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'v'
op|'['
string|"'volumeId'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'v'
op|'['
string|"'status'"
op|']'
op|'='
name|'volume'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'size'"
op|']'
op|'='
name|'volume'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'availabilityZone'"
op|']'
op|'='
name|'volume'
op|'['
string|"'availability_zone'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'createTime'"
op|']'
op|'='
name|'volume'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'status'"
op|']'
op|'='
string|"'%s (%s, %s, %s, %s)'"
op|'%'
op|'('
nl|'\n'
name|'volume'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'instance_data'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|'=='
string|"'attached'"
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'attachmentSet'"
op|']'
op|'='
op|'['
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'instance_ec2_id'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'attached'"
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'v'
op|'['
string|"'volumeId'"
op|']'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'attachmentSet'"
op|']'
op|'='
op|'['
op|'{'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'volume'
op|'.'
name|'get'
op|'('
string|"'snapshot_id'"
op|')'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'snapshotId'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'volume'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'['
string|"'snapshotId'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'v'
op|'['
string|"'display_name'"
op|']'
op|'='
name|'volume'
op|'['
string|"'display_name'"
op|']'
newline|'\n'
name|'v'
op|'['
string|"'display_description'"
op|']'
op|'='
name|'volume'
op|'['
string|"'display_description'"
op|']'
newline|'\n'
name|'return'
name|'v'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'size'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'size'"
op|')'
newline|'\n'
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'snapshot_id'"
op|')'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'kwargs'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Create volume from snapshot %s"'
op|')'
op|','
name|'snapshot_id'
op|','
nl|'\n'
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'snapshot_id'
op|'='
name|'None'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Create volume of %s GB"'
op|')'
op|','
name|'size'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'volume'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
name|'size'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|','
nl|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|','
nl|'\n'
name|'description'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_description'"
op|')'
op|')'
newline|'\n'
comment|'# TODO(vish): Instance should be None at db layer instead of'
nl|'\n'
comment|'#             trying to lazy load, but for now we turn it into'
nl|'\n'
comment|'#             a dict to avoid an error.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_format_volume'
op|'('
name|'context'
op|','
name|'dict'
op|'('
name|'volume'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|update_volume
dedent|''
name|'def'
name|'update_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'updatable_fields'
op|'='
op|'['
string|"'display_name'"
op|','
string|"'display_description'"
op|']'
newline|'\n'
name|'changes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'updatable_fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                '
name|'changes'
op|'['
name|'field'
op|']'
op|'='
name|'kwargs'
op|'['
name|'field'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'changes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'update'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volume_id'
op|','
nl|'\n'
name|'fields'
op|'='
name|'changes'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
name|'instance_id'
op|','
name|'device'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Attach volume %(volume_id)s to instance %(instance_id)s"'
nl|'\n'
string|'" at %(device)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'attach_volume'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volume_id'
op|','
nl|'\n'
name|'device'
op|'='
name|'device'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
op|','
nl|'\n'
string|"'requestId'"
op|':'
name|'context'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'volume_id'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Detach volume %s"'
op|')'
op|','
name|'volume_id'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'detach_volume'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'attachTime'"
op|':'
name|'volume'
op|'['
string|"'attach_time'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'volume'
op|'['
string|"'mountpoint'"
op|']'
op|','
nl|'\n'
string|"'instanceId'"
op|':'
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
string|"'requestId'"
op|':'
name|'context'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'volume'
op|'['
string|"'attach_status'"
op|']'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'volume_id'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_kernel_id
dedent|''
name|'def'
name|'_format_kernel_id'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'result'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kernel_id'
op|'='
name|'instance_ref'
op|'['
string|"'kernel_id'"
op|']'
newline|'\n'
name|'if'
name|'kernel_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'result'
op|'['
name|'key'
op|']'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'instance_ref'
op|'['
string|"'kernel_id'"
op|']'
op|','
string|"'aki'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_ramdisk_id
dedent|''
name|'def'
name|'_format_ramdisk_id'
op|'('
name|'self'
op|','
name|'instance_ref'
op|','
name|'result'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ramdisk_id'
op|'='
name|'instance_ref'
op|'['
string|"'ramdisk_id'"
op|']'
newline|'\n'
name|'if'
name|'ramdisk_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'result'
op|'['
name|'key'
op|']'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'instance_ref'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
string|"'ari'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_format_user_data
name|'def'
name|'_format_user_data'
op|'('
name|'instance_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'instance_ref'
op|'['
string|"'user_data'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_instance_attribute
dedent|''
name|'def'
name|'describe_instance_attribute'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'attribute'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|_unsupported_attribute
indent|'        '
name|'def'
name|'_unsupported_attribute'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'attribute not supported: %s'"
op|')'
op|'%'
nl|'\n'
name|'attribute'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_block_device_mapping
dedent|''
name|'def'
name|'_format_attr_block_device_mapping'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'tmp'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_format_instance_root_device_name'
op|'('
name|'instance'
op|','
name|'tmp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'tmp'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_disable_api_termination
dedent|''
name|'def'
name|'_format_attr_disable_api_termination'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_unsupported_attribute'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_group_set
dedent|''
name|'def'
name|'_format_attr_group_set'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'CloudController'
op|'.'
name|'_format_group_set'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_instance_initiated_shutdown_behavior
dedent|''
name|'def'
name|'_format_attr_instance_initiated_shutdown_behavior'
op|'('
name|'instance'
op|','
nl|'\n'
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'state_description'
op|'='
name|'instance'
op|'['
string|"'state_description'"
op|']'
newline|'\n'
name|'state_to_value'
op|'='
op|'{'
string|"'stopping'"
op|':'
string|"'stop'"
op|','
nl|'\n'
string|"'stopped'"
op|':'
string|"'stop'"
op|','
nl|'\n'
string|"'terminating'"
op|':'
string|"'terminate'"
op|'}'
newline|'\n'
name|'value'
op|'='
name|'state_to_value'
op|'.'
name|'get'
op|'('
name|'state_description'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'['
string|"'instanceInitiatedShutdownBehavior'"
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_instance_type
dedent|''
dedent|''
name|'def'
name|'_format_attr_instance_type'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_format_instance_type'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_kernel
dedent|''
name|'def'
name|'_format_attr_kernel'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_format_kernel_id'
op|'('
name|'instance'
op|','
name|'result'
op|','
string|"'kernel'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_ramdisk
dedent|''
name|'def'
name|'_format_attr_ramdisk'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_format_ramdisk_id'
op|'('
name|'instance'
op|','
name|'result'
op|','
string|"'ramdisk'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_root_device_name
dedent|''
name|'def'
name|'_format_attr_root_device_name'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_format_instance_root_device_name'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_source_dest_check
dedent|''
name|'def'
name|'_format_attr_source_dest_check'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_unsupported_attribute'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_format_attr_user_data
dedent|''
name|'def'
name|'_format_attr_user_data'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'userData'"
op|']'
op|'='
name|'self'
op|'.'
name|'_format_user_data'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'attribute_formatter'
op|'='
op|'{'
nl|'\n'
string|"'blockDeviceMapping'"
op|':'
name|'_format_attr_block_device_mapping'
op|','
nl|'\n'
string|"'disableApiTermination'"
op|':'
name|'_format_attr_disable_api_termination'
op|','
nl|'\n'
string|"'groupSet'"
op|':'
name|'_format_attr_group_set'
op|','
nl|'\n'
string|"'instanceInitiatedShutdownBehavior'"
op|':'
nl|'\n'
name|'_format_attr_instance_initiated_shutdown_behavior'
op|','
nl|'\n'
string|"'instanceType'"
op|':'
name|'_format_attr_instance_type'
op|','
nl|'\n'
string|"'kernel'"
op|':'
name|'_format_attr_kernel'
op|','
nl|'\n'
string|"'ramdisk'"
op|':'
name|'_format_attr_ramdisk'
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
name|'_format_attr_root_device_name'
op|','
nl|'\n'
string|"'sourceDestCheck'"
op|':'
name|'_format_attr_source_dest_check'
op|','
nl|'\n'
string|"'userData'"
op|':'
name|'_format_attr_user_data'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'attribute_formatter'
op|'.'
name|'get'
op|'('
name|'attribute'
op|')'
newline|'\n'
name|'if'
name|'fn'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'attribute not supported: %s'"
op|')'
op|'%'
name|'attribute'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'result'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'ec2_instance_id'
op|'}'
newline|'\n'
name|'fn'
op|'('
name|'instance'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|describe_instances
dedent|''
name|'def'
name|'describe_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Optional DescribeInstances argument'
nl|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_format_describe_instances'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_instances_v6
dedent|''
name|'def'
name|'describe_instances_v6'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Optional DescribeInstancesV6 argument'
nl|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'instance_id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_format_describe_instances'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|','
name|'use_v6'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_describe_instances
dedent|''
name|'def'
name|'_format_describe_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'reservationSet'"
op|':'
name|'self'
op|'.'
name|'_format_instances'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_format_run_instances
dedent|''
name|'def'
name|'_format_run_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'reservation_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_format_instances'
op|'('
name|'context'
op|','
name|'reservation_id'
op|'='
name|'reservation_id'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'i'
op|')'
op|'=='
number|'1'
newline|'\n'
name|'return'
name|'i'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_format_instance_bdm
dedent|''
name|'def'
name|'_format_instance_bdm'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'root_device_name'
op|','
nl|'\n'
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Format InstanceBlockDeviceMappingResponseItemType"""'
newline|'\n'
name|'root_device_type'
op|'='
string|"'instance-store'"
newline|'\n'
name|'mapping'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume_id'
op|'='
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
newline|'\n'
name|'if'
op|'('
name|'volume_id'
name|'is'
name|'None'
name|'or'
name|'bdm'
op|'['
string|"'no_device'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|'=='
name|'root_device_name'
name|'and'
nl|'\n'
op|'('
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
name|'or'
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'not'
name|'bdm'
op|'['
string|"'virtual_name'"
op|']'
newline|'\n'
name|'root_device_type'
op|'='
string|"'ebs'"
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"vol = %s\\n"'
op|')'
op|','
name|'vol'
op|')'
newline|'\n'
comment|'# TODO(yamahata): volume attach time'
nl|'\n'
name|'ebs'
op|'='
op|'{'
string|"'volumeId'"
op|':'
name|'volume_id'
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'bdm'
op|'['
string|"'delete_on_termination'"
op|']'
op|','
nl|'\n'
string|"'attachTime'"
op|':'
name|'vol'
op|'['
string|"'attach_time'"
op|']'
name|'or'
string|"'-'"
op|','
nl|'\n'
string|"'status'"
op|':'
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
op|'}'
newline|'\n'
name|'res'
op|'='
op|'{'
string|"'deviceName'"
op|':'
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|','
nl|'\n'
string|"'ebs'"
op|':'
name|'ebs'
op|','
op|'}'
newline|'\n'
name|'mapping'
op|'.'
name|'append'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'mapping'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|'='
name|'mapping'
newline|'\n'
dedent|''
name|'result'
op|'['
string|"'rootDeviceType'"
op|']'
op|'='
name|'root_device_type'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_format_instance_root_device_name
name|'def'
name|'_format_instance_root_device_name'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|'='
op|'('
name|'instance'
op|'.'
name|'get'
op|'('
string|"'root_device_name'"
op|')'
name|'or'
nl|'\n'
name|'_DEFAULT_ROOT_DEVICE_NAME'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_format_instance_type
name|'def'
name|'_format_instance_type'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'instance'
op|'['
string|"'instance_type'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'instanceType'"
op|']'
op|'='
name|'instance'
op|'['
string|"'instance_type'"
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'instanceType'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_format_group_set
name|'def'
name|'_format_group_set'
op|'('
name|'instance'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group_names'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'security_group'
name|'in'
name|'instance'
op|'['
string|"'security_groups'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'security_group_names'
op|'.'
name|'append'
op|'('
name|'security_group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'result'
op|'['
string|"'groupSet'"
op|']'
op|'='
name|'utils'
op|'.'
name|'convert_to_set'
op|'('
nl|'\n'
name|'security_group_names'
op|','
string|"'groupId'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_instances
dedent|''
name|'def'
name|'_format_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|'='
name|'None'
op|','
name|'use_v6'
op|'='
name|'False'
op|','
nl|'\n'
op|'**'
name|'search_opts'
op|')'
op|':'
newline|'\n'
comment|'# TODO(termie): this method is poorly named as its name does not imply'
nl|'\n'
comment|'#               that it will be making a variety of database calls'
nl|'\n'
comment|'#               rather than simply formatting a bunch of instances that'
nl|'\n'
comment|'#               were handed to it'
nl|'\n'
indent|'        '
name|'reservations'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# NOTE(vish): instance_id is an optional list of ids to filter by'
nl|'\n'
name|'if'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'ec2_id'
name|'in'
name|'instance_id'
op|':'
newline|'\n'
indent|'                '
name|'internal_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'internal_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                '
name|'instances'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'=='
name|'str'
op|'('
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'i'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'instanceId'"
op|']'
op|'='
name|'ec2_id'
newline|'\n'
name|'i'
op|'['
string|"'imageId'"
op|']'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_format_kernel_id'
op|'('
name|'instance'
op|','
name|'i'
op|','
string|"'kernelId'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_format_ramdisk_id'
op|'('
name|'instance'
op|','
name|'i'
op|','
string|"'ramdiskId'"
op|')'
newline|'\n'
name|'i'
op|'['
string|"'instanceState'"
op|']'
op|'='
op|'{'
nl|'\n'
string|"'code'"
op|':'
name|'instance'
op|'['
string|"'state'"
op|']'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'instance'
op|'['
string|"'state_description'"
op|']'
op|'}'
newline|'\n'
name|'fixed_addr'
op|'='
name|'None'
newline|'\n'
name|'floating_addr'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'instance'
op|'['
string|"'fixed_ips'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'fixed'
op|'='
name|'instance'
op|'['
string|"'fixed_ips'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'fixed_addr'
op|'='
name|'fixed'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'if'
name|'fixed'
op|'['
string|"'floating_ips'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'floating_addr'
op|'='
name|'fixed'
op|'['
string|"'floating_ips'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'fixed'
op|'['
string|"'network'"
op|']'
name|'and'
name|'use_v6'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'['
string|"'dnsNameV6'"
op|']'
op|'='
name|'ipv6'
op|'.'
name|'to_global'
op|'('
nl|'\n'
name|'fixed'
op|'['
string|"'network'"
op|']'
op|'['
string|"'cidr_v6'"
op|']'
op|','
nl|'\n'
name|'fixed'
op|'['
string|"'virtual_interface'"
op|']'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'i'
op|'['
string|"'privateDnsName'"
op|']'
op|'='
name|'fixed_addr'
newline|'\n'
name|'i'
op|'['
string|"'privateIpAddress'"
op|']'
op|'='
name|'fixed_addr'
newline|'\n'
name|'i'
op|'['
string|"'publicDnsName'"
op|']'
op|'='
name|'floating_addr'
newline|'\n'
name|'i'
op|'['
string|"'ipAddress'"
op|']'
op|'='
name|'floating_addr'
name|'or'
name|'fixed_addr'
newline|'\n'
name|'i'
op|'['
string|"'dnsName'"
op|']'
op|'='
name|'i'
op|'['
string|"'publicDnsName'"
op|']'
name|'or'
name|'i'
op|'['
string|"'privateDnsName'"
op|']'
newline|'\n'
name|'i'
op|'['
string|"'keyName'"
op|']'
op|'='
name|'instance'
op|'['
string|"'key_name'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'['
string|"'keyName'"
op|']'
op|'='
string|"'%s (%s, %s)'"
op|'%'
op|'('
name|'i'
op|'['
string|"'keyName'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'i'
op|'['
string|"'productCodesSet'"
op|']'
op|'='
name|'utils'
op|'.'
name|'convert_to_set'
op|'('
op|'['
op|']'
op|','
string|"'product_codes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_format_instance_type'
op|'('
name|'instance'
op|','
name|'i'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'launchTime'"
op|']'
op|'='
name|'instance'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
name|'i'
op|'['
string|"'amiLaunchIndex'"
op|']'
op|'='
name|'instance'
op|'['
string|"'launch_index'"
op|']'
newline|'\n'
name|'i'
op|'['
string|"'displayName'"
op|']'
op|'='
name|'instance'
op|'['
string|"'display_name'"
op|']'
newline|'\n'
name|'i'
op|'['
string|"'displayDescription'"
op|']'
op|'='
name|'instance'
op|'['
string|"'display_description'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_format_instance_root_device_name'
op|'('
name|'instance'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'i'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'zone'
op|'='
name|'self'
op|'.'
name|'_get_availability_zone_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'placement'"
op|']'
op|'='
op|'{'
string|"'availabilityZone'"
op|':'
name|'zone'
op|'}'
newline|'\n'
name|'if'
name|'instance'
op|'['
string|"'reservation_id'"
op|']'
name|'not'
name|'in'
name|'reservations'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'r'
op|'['
string|"'reservationId'"
op|']'
op|'='
name|'instance'
op|'['
string|"'reservation_id'"
op|']'
newline|'\n'
name|'r'
op|'['
string|"'ownerId'"
op|']'
op|'='
name|'instance'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_format_group_set'
op|'('
name|'instance'
op|','
name|'r'
op|')'
newline|'\n'
name|'r'
op|'['
string|"'instancesSet'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'reservations'
op|'['
name|'instance'
op|'['
string|"'reservation_id'"
op|']'
op|']'
op|'='
name|'r'
newline|'\n'
dedent|''
name|'reservations'
op|'['
name|'instance'
op|'['
string|"'reservation_id'"
op|']'
op|']'
op|'['
string|"'instancesSet'"
op|']'
op|'.'
name|'append'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'list'
op|'('
name|'reservations'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_addresses
dedent|''
name|'def'
name|'describe_addresses'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'format_addresses'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|format_addresses
dedent|''
name|'def'
name|'format_addresses'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'            '
name|'iterator'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'iterator'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all_by_project'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'floating_ip_ref'
name|'in'
name|'iterator'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'floating_ip_ref'
op|'['
string|"'project_id'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'address'
op|'='
name|'floating_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'ec2_id'
op|'='
name|'None'
newline|'\n'
name|'if'
op|'('
name|'floating_ip_ref'
op|'['
string|"'fixed_ip'"
op|']'
nl|'\n'
name|'and'
name|'floating_ip_ref'
op|'['
string|"'fixed_ip'"
op|']'
op|'['
string|"'instance'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance_id'
op|'='
name|'floating_ip_ref'
op|'['
string|"'fixed_ip'"
op|']'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'address_rv'
op|'='
op|'{'
string|"'public_ip'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'ec2_id'
op|'}'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'details'
op|'='
string|'"%s (%s)"'
op|'%'
op|'('
name|'address_rv'
op|'['
string|"'instance_id'"
op|']'
op|','
nl|'\n'
name|'floating_ip_ref'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'address_rv'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'details'
newline|'\n'
dedent|''
name|'addresses'
op|'.'
name|'append'
op|'('
name|'address_rv'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'addressesSet'"
op|':'
name|'addresses'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|allocate_address
dedent|''
name|'def'
name|'allocate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Allocate address"'
op|')'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'public_ip'
op|'='
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'allocate_floating_ip'
op|'('
name|'context'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'publicIp'"
op|':'
name|'public_ip'
op|'}'
newline|'\n'
dedent|''
name|'except'
name|'rpc'
op|'.'
name|'RemoteError'
name|'as'
name|'ex'
op|':'
newline|'\n'
comment|'# NOTE(tr3buchet) - why does this block exist?'
nl|'\n'
indent|'            '
name|'if'
name|'ex'
op|'.'
name|'exc_type'
op|'=='
string|"'NoMoreFloatingIps'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|release_address
dedent|''
dedent|''
dedent|''
name|'def'
name|'release_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Release address %s"'
op|')'
op|','
name|'public_ip'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'release_floating_ip'
op|'('
name|'context'
op|','
name|'address'
op|'='
name|'public_ip'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'releaseResponse'"
op|':'
op|'['
string|'"Address released."'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|associate_address
dedent|''
name|'def'
name|'associate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Associate address %(public_ip)s to"'
nl|'\n'
string|'" instance %(instance_id)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'associate_floating_ip'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|','
nl|'\n'
name|'address'
op|'='
name|'public_ip'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'associateResponse'"
op|':'
op|'['
string|'"Address associated."'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|disassociate_address
dedent|''
name|'def'
name|'disassociate_address'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'public_ip'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Disassociate address %s"'
op|')'
op|','
name|'public_ip'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'disassociate_floating_ip'
op|'('
name|'context'
op|','
name|'address'
op|'='
name|'public_ip'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'disassociateResponse'"
op|':'
op|'['
string|'"Address disassociated."'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|run_instances
dedent|''
name|'def'
name|'run_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'max_count'
op|'='
name|'int'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'max_count'"
op|','
number|'1'
op|')'
op|')'
newline|'\n'
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kernel'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kwargs'
op|'['
string|"'kernel_id'"
op|']'
op|')'
newline|'\n'
name|'kwargs'
op|'['
string|"'kernel_id'"
op|']'
op|'='
name|'kernel'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ramdisk'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kwargs'
op|'['
string|"'ramdisk_id'"
op|']'
op|')'
newline|'\n'
name|'kwargs'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
name|'ramdisk'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
name|'for'
name|'bdm'
name|'in'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_parse_block_device_mapping'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kwargs'
op|'['
string|"'image_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'image'
op|':'
newline|'\n'
indent|'            '
name|'image_state'
op|'='
name|'self'
op|'.'
name|'_get_image_state'
op|'('
name|'image'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'kwargs'
op|'['
string|"'image_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'image_state'
op|'!='
string|"'available'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'Image must be available'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
nl|'\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|','
name|'None'
op|')'
op|')'
op|','
nl|'\n'
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'kwargs'
op|'['
string|"'image_id'"
op|']'
op|')'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'min_count'
op|'='
name|'int'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'min_count'"
op|','
name|'max_count'
op|')'
op|')'
op|','
nl|'\n'
name|'max_count'
op|'='
name|'max_count'
op|','
nl|'\n'
name|'kernel_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|')'
op|','
nl|'\n'
name|'ramdisk_id'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|')'
op|','
nl|'\n'
name|'display_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|','
nl|'\n'
name|'display_description'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'display_description'"
op|')'
op|','
nl|'\n'
name|'key_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|')'
op|','
nl|'\n'
name|'user_data'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'user_data'"
op|')'
op|','
nl|'\n'
name|'security_group'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'placement'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'AvailabilityZone'"
op|')'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_format_run_instances'
op|'('
name|'context'
op|','
nl|'\n'
name|'reservation_id'
op|'='
name|'instances'
op|'['
number|'0'
op|']'
op|'['
string|"'reservation_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_instance
dedent|''
name|'def'
name|'_do_instance'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'action'
op|'('
name|'context'
op|','
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_instances
dedent|''
name|'def'
name|'_do_instances'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
name|'in'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_do_instance'
op|'('
name|'action'
op|','
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|terminate_instances
dedent|''
dedent|''
name|'def'
name|'terminate_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Terminate each instance in instance_id, which is a list of ec2 ids.\n        instance_id is a kwarg so its name cannot be modified."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Going to start terminating instances"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_instances'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|reboot_instances
dedent|''
name|'def'
name|'reboot_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""instance_id is a list of instance ids"""'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Reboot instance %r"'
op|')'
op|','
name|'instance_id'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_instances'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|stop_instances
dedent|''
name|'def'
name|'stop_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stop each instances in instance_id.\n        Here instance_id is a list of instance ids"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Going to stop instances"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_instances'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|start_instances
dedent|''
name|'def'
name|'start_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start each instances in instance_id.\n        Here instance_id is a list of instance ids"""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Going to start instances"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_instances'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|rescue_instance
dedent|''
name|'def'
name|'rescue_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This is an extension to the normal ec2_api"""'
newline|'\n'
name|'self'
op|'.'
name|'_do_instance'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rescue'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|unrescue_instance
dedent|''
name|'def'
name|'unrescue_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This is an extension to the normal ec2_api"""'
newline|'\n'
name|'self'
op|'.'
name|'_do_instance'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'unrescue'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|update_instance
dedent|''
name|'def'
name|'update_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'updatable_fields'
op|'='
op|'['
string|"'display_name'"
op|','
string|"'display_description'"
op|']'
newline|'\n'
name|'changes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'updatable_fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                '
name|'changes'
op|'['
name|'field'
op|']'
op|'='
name|'kwargs'
op|'['
name|'field'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'changes'
op|':'
newline|'\n'
indent|'            '
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'instance_id'
op|'='
name|'instance_id'
op|','
nl|'\n'
op|'**'
name|'changes'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_image_type
name|'def'
name|'_image_type'
op|'('
name|'image_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Converts to a three letter image type.\n\n        aki, kernel => aki\n        ari, ramdisk => ari\n        anything else => ami\n\n        """'
newline|'\n'
name|'if'
name|'image_type'
op|'=='
string|"'kernel'"
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'aki'"
newline|'\n'
dedent|''
name|'if'
name|'image_type'
op|'=='
string|"'ramdisk'"
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'ari'"
newline|'\n'
dedent|''
name|'if'
name|'image_type'
name|'not'
name|'in'
op|'['
string|"'aki'"
op|','
string|"'ari'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'ami'"
newline|'\n'
dedent|''
name|'return'
name|'image_type'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|image_ec2_id
name|'def'
name|'image_ec2_id'
op|'('
name|'image_id'
op|','
name|'image_type'
op|'='
string|"'ami'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns image ec2_id using id and three letter type."""'
newline|'\n'
name|'template'
op|'='
name|'image_type'
op|'+'
string|"'-%08x'"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'int'
op|'('
name|'image_id'
op|')'
op|','
name|'template'
op|'='
name|'template'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|'#TODO(wwolf): once we have ec2_id -> glance_id mapping'
nl|'\n'
comment|'# in place, this wont be necessary'
nl|'\n'
indent|'            '
name|'return'
string|'"ami-00000000"'
newline|'\n'
nl|'\n'
DECL|member|_get_image
dedent|''
dedent|''
name|'def'
name|'_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'internal_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_id'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'internal_id'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'InvalidEc2Id'
op|','
name|'exception'
op|'.'
name|'ImageNotFound'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show_by_name'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'image_type'
op|'='
name|'ec2_id'
op|'.'
name|'split'
op|'('
string|"'-'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_image_type'
op|'('
name|'image'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|')'
op|')'
op|'!='
name|'image_type'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'image'
newline|'\n'
nl|'\n'
DECL|member|_format_image
dedent|''
name|'def'
name|'_format_image'
op|'('
name|'self'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Convert from format defined by BaseImageService to S3 format."""'
newline|'\n'
name|'i'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'image_type'
op|'='
name|'self'
op|'.'
name|'_image_type'
op|'('
name|'image'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|')'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'image'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|','
name|'image_type'
op|')'
newline|'\n'
name|'name'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'i'
op|'['
string|"'imageId'"
op|']'
op|'='
name|'ec2_id'
newline|'\n'
name|'kernel_id'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|')'
newline|'\n'
name|'if'
name|'kernel_id'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'['
string|"'kernelId'"
op|']'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'kernel_id'
op|','
string|"'aki'"
op|')'
newline|'\n'
dedent|''
name|'ramdisk_id'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|')'
newline|'\n'
name|'if'
name|'ramdisk_id'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'['
string|"'ramdiskId'"
op|']'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'ramdisk_id'
op|','
string|"'ari'"
op|')'
newline|'\n'
dedent|''
name|'i'
op|'['
string|"'imageOwnerId'"
op|']'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'owner_id'"
op|')'
newline|'\n'
name|'if'
name|'name'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'['
string|"'imageLocation'"
op|']'
op|'='
string|'"%s (%s)"'
op|'%'
op|'('
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'image_location'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'['
string|"'imageLocation'"
op|']'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'image_location'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'i'
op|'['
string|"'imageState'"
op|']'
op|'='
name|'self'
op|'.'
name|'_get_image_state'
op|'('
name|'image'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'displayName'"
op|']'
op|'='
name|'name'
newline|'\n'
name|'i'
op|'['
string|"'description'"
op|']'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'description'"
op|')'
newline|'\n'
name|'display_mapping'
op|'='
op|'{'
string|"'aki'"
op|':'
string|"'kernel'"
op|','
nl|'\n'
string|"'ari'"
op|':'
string|"'ramdisk'"
op|','
nl|'\n'
string|"'ami'"
op|':'
string|"'machine'"
op|'}'
newline|'\n'
name|'i'
op|'['
string|"'imageType'"
op|']'
op|'='
name|'display_mapping'
op|'.'
name|'get'
op|'('
name|'image_type'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'isPublic'"
op|']'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'is_public'"
op|')'
op|'=='
name|'True'
newline|'\n'
name|'i'
op|'['
string|"'architecture'"
op|']'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'get'
op|'('
string|"'architecture'"
op|')'
newline|'\n'
nl|'\n'
name|'properties'
op|'='
name|'image'
op|'['
string|"'properties'"
op|']'
newline|'\n'
name|'root_device_name'
op|'='
name|'block_device'
op|'.'
name|'properties_root_device_name'
op|'('
name|'properties'
op|')'
newline|'\n'
name|'root_device_type'
op|'='
string|"'instance-store'"
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'properties'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'bdm'
op|'.'
name|'get'
op|'('
string|"'device_name'"
op|')'
op|'=='
name|'root_device_name'
name|'and'
nl|'\n'
op|'('
string|"'snapshot_id'"
name|'in'
name|'bdm'
name|'or'
string|"'volume_id'"
name|'in'
name|'bdm'
op|')'
name|'and'
nl|'\n'
name|'not'
name|'bdm'
op|'.'
name|'get'
op|'('
string|"'no_device'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'root_device_type'
op|'='
string|"'ebs'"
newline|'\n'
dedent|''
dedent|''
name|'i'
op|'['
string|"'rootDeviceName'"
op|']'
op|'='
op|'('
name|'root_device_name'
name|'or'
name|'_DEFAULT_ROOT_DEVICE_NAME'
op|')'
newline|'\n'
name|'i'
op|'['
string|"'rootDeviceType'"
op|']'
op|'='
name|'root_device_type'
newline|'\n'
nl|'\n'
name|'_format_mappings'
op|'('
name|'properties'
op|','
name|'i'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'i'
newline|'\n'
nl|'\n'
DECL|member|describe_images
dedent|''
name|'def'
name|'describe_images'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE: image_id is a list!'
nl|'\n'
indent|'        '
name|'if'
name|'image_id'
op|':'
newline|'\n'
indent|'            '
name|'images'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'ec2_id'
name|'in'
name|'image_id'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
name|'images'
op|'.'
name|'append'
op|'('
name|'image'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'images'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'detail'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'images'
op|'='
op|'['
name|'self'
op|'.'
name|'_format_image'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'images'
op|']'
newline|'\n'
name|'return'
op|'{'
string|"'imagesSet'"
op|':'
name|'images'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|deregister_image
dedent|''
name|'def'
name|'deregister_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"De-registering image %s"'
op|')'
op|','
name|'image_id'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'internal_id'
op|'='
name|'image'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'internal_id'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_register_image
dedent|''
name|'def'
name|'_register_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'image_type'
op|'='
name|'self'
op|'.'
name|'_image_type'
op|'('
name|'image'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|')'
op|')'
newline|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'image_ec2_id'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|','
name|'image_type'
op|')'
newline|'\n'
name|'return'
name|'image_id'
newline|'\n'
nl|'\n'
DECL|member|register_image
dedent|''
name|'def'
name|'register_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_location'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'image_location'
name|'is'
name|'None'
name|'and'
string|"'name'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'image_location'
op|'='
name|'kwargs'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
string|"'properties'"
op|':'
op|'{'
string|"'image_location'"
op|':'
name|'image_location'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'root_device_name'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'root_device_name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'root_device_name'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mappings'
op|'='
op|'['
name|'_parse_block_device_mapping'
op|'('
name|'bdm'
op|')'
name|'for'
name|'bdm'
name|'in'
nl|'\n'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
name|'if'
name|'mappings'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'block_device_mapping'"
op|']'
op|'='
name|'mappings'
newline|'\n'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'self'
op|'.'
name|'_register_image'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Registered image %(image_location)s with"'
nl|'\n'
string|'" id %(image_id)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|describe_image_attribute
dedent|''
name|'def'
name|'describe_image_attribute'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'attribute'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|_block_device_mapping_attribute
indent|'        '
name|'def'
name|'_block_device_mapping_attribute'
op|'('
name|'image'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_format_mappings'
op|'('
name|'image'
op|'['
string|"'properties'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_launch_permission_attribute
dedent|''
name|'def'
name|'_launch_permission_attribute'
op|'('
name|'image'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'launchPermission'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'image'
op|'['
string|"'is_public'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'['
string|"'launchPermission'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
string|"'group'"
op|':'
string|"'all'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_root_device_name_attribute
dedent|''
dedent|''
name|'def'
name|'_root_device_name_attribute'
op|'('
name|'image'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|'='
name|'block_device'
op|'.'
name|'properties_root_device_name'
op|'('
name|'image'
op|'['
string|"'properties'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|'='
name|'_DEFAULT_ROOT_DEVICE_NAME'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'supported_attributes'
op|'='
op|'{'
nl|'\n'
string|"'blockDeviceMapping'"
op|':'
name|'_block_device_mapping_attribute'
op|','
nl|'\n'
string|"'launchPermission'"
op|':'
name|'_launch_permission_attribute'
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
name|'_root_device_name_attribute'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'supported_attributes'
op|'.'
name|'get'
op|'('
name|'attribute'
op|')'
newline|'\n'
name|'if'
name|'fn'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'attribute not supported: %s'"
op|')'
nl|'\n'
op|'%'
name|'attribute'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
newline|'\n'
name|'fn'
op|'('
name|'image'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|modify_image_attribute
dedent|''
name|'def'
name|'modify_image_attribute'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'attribute'
op|','
nl|'\n'
name|'operation_type'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|"# TODO(devcamcar): Support users and groups other than 'all'."
nl|'\n'
indent|'        '
name|'if'
name|'attribute'
op|'!='
string|"'launchPermission'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'attribute not supported: %s'"
op|')'
nl|'\n'
op|'%'
name|'attribute'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
string|"'user_group'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'user or group not specified'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'kwargs'
op|'['
string|"'user_group'"
op|']'
op|')'
op|'!='
number|'1'
name|'and'
name|'kwargs'
op|'['
string|"'user_group'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'all'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|'\'only group "all" is supported\''
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'operation_type'
name|'in'
op|'['
string|"'add'"
op|','
string|"'remove'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|"'operation_type must be add or remove'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Updating image %s publicity"'
op|')'
op|','
name|'image_id'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'internal_id'
op|'='
name|'image'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'del'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'['
string|"'is_public'"
op|']'
op|'='
op|'('
name|'operation_type'
op|'=='
string|"'add'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'internal_id'
op|','
name|'image'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update_image
dedent|''
name|'def'
name|'update_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'internal_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'image_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'internal_id'
op|','
name|'dict'
op|'('
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
comment|'# TODO(yamahata): race condition'
nl|'\n'
comment|'# At the moment there is no way to prevent others from'
nl|'\n'
comment|'# manipulating instances/volumes/snapshots.'
nl|'\n'
comment|"# As other code doesn't take it into consideration, here we don't"
nl|'\n'
comment|'# care of it for now. Ostrich algorithm'
nl|'\n'
DECL|member|create_image
dedent|''
name|'def'
name|'create_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(yamahata): name/description are ignored by register_image(),'
nl|'\n'
comment|'#                 do so here'
nl|'\n'
indent|'        '
name|'no_reboot'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'no_reboot'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'ec2_instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# stop the instance if necessary'
nl|'\n'
name|'restart_instance'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'not'
name|'no_reboot'
op|':'
newline|'\n'
indent|'            '
name|'state_description'
op|'='
name|'instance'
op|'['
string|"'state_description'"
op|']'
newline|'\n'
nl|'\n'
comment|'# if the instance is in subtle state, refuse to proceed.'
nl|'\n'
name|'if'
name|'state_description'
name|'not'
name|'in'
op|'('
string|"'running'"
op|','
string|"'stopping'"
op|','
string|"'stopped'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotRunning'
op|'('
name|'instance_id'
op|'='
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'state_description'
op|'=='
string|"'running'"
op|':'
newline|'\n'
indent|'                '
name|'restart_instance'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'context'
op|','
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# wait instance for really stopped'
nl|'\n'
dedent|''
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'while'
name|'state_description'
op|'!='
string|"'stopped'"
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'state_description'
op|'='
name|'instance'
op|'['
string|"'state_description'"
op|']'
newline|'\n'
comment|'# NOTE(yamahata): timeout and error. 1 hour for now for safety.'
nl|'\n'
comment|'#                 Is it too short/long?'
nl|'\n'
comment|'#                 Or is there any better way?'
nl|'\n'
name|'timeout'
op|'='
number|'1'
op|'*'
number|'60'
op|'*'
number|'60'
op|'*'
number|'60'
newline|'\n'
name|'if'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'>'
name|'start_time'
op|'+'
name|'timeout'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Couldn\\'t stop instance with in %d sec'"
op|')'
op|'%'
name|'timeout'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'src_image'
op|'='
name|'self'
op|'.'
name|'_get_image'
op|'('
name|'context'
op|','
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|')'
newline|'\n'
name|'properties'
op|'='
name|'src_image'
op|'['
string|"'properties'"
op|']'
newline|'\n'
name|'if'
name|'instance'
op|'['
string|"'root_device_name'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'properties'
op|'['
string|"'root_device_name'"
op|']'
op|'='
name|'instance'
op|'['
string|"'root_device_name'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mapping'
op|'='
op|'['
op|']'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'bdm'
op|'.'
name|'no_device'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'m'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'attr'
name|'in'
op|'('
string|"'device_name'"
op|','
string|"'snapshot_id'"
op|','
string|"'volume_id'"
op|','
nl|'\n'
string|"'volume_size'"
op|','
string|"'delete_on_termination'"
op|','
string|"'no_device'"
op|','
nl|'\n'
string|"'virtual_name'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'val'
op|'='
name|'getattr'
op|'('
name|'bdm'
op|','
name|'attr'
op|')'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'m'
op|'['
name|'attr'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'volume_id'
op|'='
name|'m'
op|'.'
name|'get'
op|'('
string|"'volume_id'"
op|')'
newline|'\n'
name|'if'
name|'m'
op|'.'
name|'get'
op|'('
string|"'snapshot_id'"
op|')'
name|'and'
name|'volume_id'
op|':'
newline|'\n'
comment|'# create snapshot based on volume_id'
nl|'\n'
indent|'                '
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
comment|'# NOTE(yamahata): Should we wait for snapshot creation?'
nl|'\n'
comment|'#                 Linux LVM snapshot creation completes in'
nl|'\n'
comment|"#                 short time, it doesn't matter for now."
nl|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_snapshot_force'
op|'('
nl|'\n'
name|'context'
op|','
name|'volume_id'
op|'='
name|'volume_id'
op|','
name|'name'
op|'='
name|'vol'
op|'['
string|"'display_name'"
op|']'
op|','
nl|'\n'
name|'description'
op|'='
name|'vol'
op|'['
string|"'display_description'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'['
string|"'snapshot_id'"
op|']'
op|'='
name|'snapshot'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'del'
name|'m'
op|'['
string|"'volume_id'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'mapping'
op|'.'
name|'append'
op|'('
name|'m'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'m'
name|'in'
name|'_properties_get_mappings'
op|'('
name|'properties'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'virtual_name'
op|'='
name|'m'
op|'['
string|"'virtual'"
op|']'
newline|'\n'
name|'if'
name|'virtual_name'
name|'in'
op|'('
string|"'ami'"
op|','
string|"'root'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'assert'
name|'block_device'
op|'.'
name|'is_swap_or_ephemeral'
op|'('
name|'virtual_name'
op|')'
newline|'\n'
name|'device_name'
op|'='
name|'m'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'if'
name|'device_name'
name|'in'
op|'['
name|'b'
op|'['
string|"'device_name'"
op|']'
name|'for'
name|'b'
name|'in'
name|'mapping'
nl|'\n'
name|'if'
name|'not'
name|'b'
op|'.'
name|'get'
op|'('
string|"'no_device'"
op|','
name|'False'
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata): swap and ephemeral devices are specified in'
nl|'\n'
comment|'#                 AMI, but disabled for this instance by user.'
nl|'\n'
comment|'#                 So disable those device by no_device.'
nl|'\n'
dedent|''
name|'mapping'
op|'.'
name|'append'
op|'('
op|'{'
string|"'device_name'"
op|':'
name|'device_name'
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'mapping'
op|':'
newline|'\n'
indent|'            '
name|'properties'
op|'['
string|"'block_device_mapping'"
op|']'
op|'='
name|'mapping'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'attr'
name|'in'
op|'('
string|"'status'"
op|','
string|"'location'"
op|','
string|"'id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'src_image'
op|'.'
name|'pop'
op|'('
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'self'
op|'.'
name|'_register_image'
op|'('
name|'context'
op|','
name|'src_image'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'restart_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|'('
name|'context'
op|','
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
string|"'imageId'"
op|':'
name|'image_id'
op|'}'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
