begin_unit
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nStarting point for routing EC2 requests.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'urlparse'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'httplib'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'import'
name|'webob'
op|'.'
name|'dec'
newline|'\n'
name|'import'
name|'webob'
op|'.'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'apirequest'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'faults'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'validator'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'memorycache'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'wsgi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ec2_opts
name|'ec2_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'lockout_attempts'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of failed auths before lockout.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'lockout_minutes'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'15'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of minutes to lockout if triggered.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'lockout_window'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'15'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of minutes for lockout window.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'keystone_ec2_url'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'http://localhost:5000/v2.0/ec2tokens'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'URL to get token from ec2 request.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'ec2_private_dns_show_ip'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Return the IP address as private dns hostname in '"
nl|'\n'
string|"'describe instances'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'ec2_strict_validation'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Validate security group names'"
nl|'\n'
string|"' according to EC2 specification'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'ec2_timestamp_expiry'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'300'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Time in seconds before ec2 timestamp expires'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'ec2_opts'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'use_forwarded_for'"
op|','
string|"'nova.api.auth'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'## Fault Wrapper around all EC2 requests ##'
nl|'\n'
DECL|class|FaultWrapper
name|'class'
name|'FaultWrapper'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Calls the middleware stack, captures any exceptions into faults."""'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'application'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"FaultWrapper: %s"'
op|')'
op|','
name|'unicode'
op|'('
name|'ex'
op|')'
op|')'
newline|'\n'
name|'return'
name|'faults'
op|'.'
name|'Fault'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPInternalServerError'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RequestLogging
dedent|''
dedent|''
dedent|''
name|'class'
name|'RequestLogging'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Access-Log akin logging for all EC2 API requests."""'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'rv'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'application'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_request_completion'
op|'('
name|'rv'
op|','
name|'req'
op|','
name|'start'
op|')'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
DECL|member|log_request_completion
dedent|''
name|'def'
name|'log_request_completion'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'request'
op|','
name|'start'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'apireq'
op|'='
name|'request'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'ec2.request'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'apireq'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'apireq'
op|'.'
name|'controller'
newline|'\n'
name|'action'
op|'='
name|'apireq'
op|'.'
name|'action'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'None'
newline|'\n'
name|'action'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'ctxt'
op|'='
name|'request'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'nova.context'"
op|','
name|'None'
op|')'
newline|'\n'
name|'delta'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'start'
newline|'\n'
name|'seconds'
op|'='
name|'delta'
op|'.'
name|'seconds'
newline|'\n'
name|'microseconds'
op|'='
name|'delta'
op|'.'
name|'microseconds'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
nl|'\n'
string|'"%s.%ss %s %s %s %s:%s %s [%s] %s %s"'
op|','
nl|'\n'
name|'seconds'
op|','
nl|'\n'
name|'microseconds'
op|','
nl|'\n'
name|'request'
op|'.'
name|'remote_addr'
op|','
nl|'\n'
name|'request'
op|'.'
name|'method'
op|','
nl|'\n'
string|'"%s%s"'
op|'%'
op|'('
name|'request'
op|'.'
name|'script_name'
op|','
name|'request'
op|'.'
name|'path_info'
op|')'
op|','
nl|'\n'
name|'controller'
op|','
nl|'\n'
name|'action'
op|','
nl|'\n'
name|'response'
op|'.'
name|'status_int'
op|','
nl|'\n'
name|'request'
op|'.'
name|'user_agent'
op|','
nl|'\n'
name|'request'
op|'.'
name|'content_type'
op|','
nl|'\n'
name|'response'
op|'.'
name|'content_type'
op|','
nl|'\n'
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Lockout
dedent|''
dedent|''
name|'class'
name|'Lockout'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Lockout for x minutes on y failed auths in a z minute period.\n\n    x = lockout_timeout flag\n    y = lockout_window flag\n    z = lockout_attempts flag\n\n    Uses memcached if lockout_memcached_servers flag is set, otherwise it\n    uses a very simple in-process cache. Due to the simplicity of\n    the implementation, the timeout window is started with the first\n    failed request, so it will block if there are x failed logins within\n    that period.\n\n    There is a possible race condition where simultaneous requests could\n    sneak in before the lockout hits, but this is extremely rare and would\n    only result in a couple of extra failed attempts.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""middleware can use fake for testing."""'
newline|'\n'
name|'self'
op|'.'
name|'mc'
op|'='
name|'memorycache'
op|'.'
name|'get_client'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'Lockout'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'application'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'access_key'
op|'='
name|'str'
op|'('
name|'req'
op|'.'
name|'params'
op|'['
string|"'AWSAccessKeyId'"
op|']'
op|')'
newline|'\n'
name|'failures_key'
op|'='
string|'"authfailures-%s"'
op|'%'
name|'access_key'
newline|'\n'
name|'failures'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'mc'
op|'.'
name|'get'
op|'('
name|'failures_key'
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'failures'
op|'>='
name|'CONF'
op|'.'
name|'lockout_attempts'
op|':'
newline|'\n'
indent|'            '
name|'detail'
op|'='
name|'_'
op|'('
string|'"Too many failed authentications."'
op|')'
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
name|'detail'
op|'='
name|'detail'
op|')'
newline|'\n'
dedent|''
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'application'
op|')'
newline|'\n'
name|'if'
name|'res'
op|'.'
name|'status_int'
op|'=='
number|'403'
op|':'
newline|'\n'
indent|'            '
name|'failures'
op|'='
name|'self'
op|'.'
name|'mc'
op|'.'
name|'incr'
op|'('
name|'failures_key'
op|')'
newline|'\n'
name|'if'
name|'failures'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# NOTE(vish): To use incr, failures has to be a string.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'mc'
op|'.'
name|'set'
op|'('
name|'failures_key'
op|','
string|"'1'"
op|','
name|'time'
op|'='
name|'CONF'
op|'.'
name|'lockout_window'
op|'*'
number|'60'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'failures'
op|'>='
name|'CONF'
op|'.'
name|'lockout_attempts'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Access key %(access_key)s has had %(failures)d '"
nl|'\n'
string|"'failed authentications and will be locked out '"
nl|'\n'
string|"'for %(lock_mins)d minutes.'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'access_key'"
op|':'
name|'access_key'
op|','
nl|'\n'
string|"'failures'"
op|':'
name|'failures'
op|','
nl|'\n'
string|"'lock_mins'"
op|':'
name|'CONF'
op|'.'
name|'lockout_minutes'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mc'
op|'.'
name|'set'
op|'('
name|'failures_key'
op|','
name|'str'
op|'('
name|'failures'
op|')'
op|','
nl|'\n'
name|'time'
op|'='
name|'CONF'
op|'.'
name|'lockout_minutes'
op|'*'
number|'60'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EC2KeystoneAuth
dedent|''
dedent|''
name|'class'
name|'EC2KeystoneAuth'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Authenticate an EC2 request with keystone and convert to context."""'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request_id'
op|'='
name|'context'
op|'.'
name|'generate_request_id'
op|'('
op|')'
newline|'\n'
name|'signature'
op|'='
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'Signature'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'signature'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Signature not provided"'
op|')'
newline|'\n'
name|'return'
name|'faults'
op|'.'
name|'ec2_error_response'
op|'('
name|'request_id'
op|','
string|'"AuthFailure"'
op|','
name|'msg'
op|','
nl|'\n'
name|'status'
op|'='
number|'400'
op|')'
newline|'\n'
dedent|''
name|'access'
op|'='
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'AWSAccessKeyId'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'access'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Access key not provided"'
op|')'
newline|'\n'
name|'return'
name|'faults'
op|'.'
name|'ec2_error_response'
op|'('
name|'request_id'
op|','
string|'"AuthFailure"'
op|','
name|'msg'
op|','
nl|'\n'
name|'status'
op|'='
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make a copy of args for authentication and signature verification.'
nl|'\n'
dedent|''
name|'auth_params'
op|'='
name|'dict'
op|'('
name|'req'
op|'.'
name|'params'
op|')'
newline|'\n'
comment|'# Not part of authentication args'
nl|'\n'
name|'auth_params'
op|'.'
name|'pop'
op|'('
string|"'Signature'"
op|')'
newline|'\n'
nl|'\n'
name|'cred_dict'
op|'='
op|'{'
nl|'\n'
string|"'access'"
op|':'
name|'access'
op|','
nl|'\n'
string|"'signature'"
op|':'
name|'signature'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'req'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'verb'"
op|':'
name|'req'
op|'.'
name|'method'
op|','
nl|'\n'
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|','
nl|'\n'
string|"'params'"
op|':'
name|'auth_params'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
string|'"ec2"'
name|'in'
name|'CONF'
op|'.'
name|'keystone_ec2_url'
op|':'
newline|'\n'
indent|'            '
name|'creds'
op|'='
op|'{'
string|"'ec2Credentials'"
op|':'
name|'cred_dict'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'creds'
op|'='
op|'{'
string|"'auth'"
op|':'
op|'{'
string|"'OS-KSEC2:ec2Credentials'"
op|':'
name|'cred_dict'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'creds_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'creds'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json'"
op|'}'
newline|'\n'
nl|'\n'
name|'o'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'CONF'
op|'.'
name|'keystone_ec2_url'
op|')'
newline|'\n'
name|'if'
name|'o'
op|'.'
name|'scheme'
op|'=='
string|'"http"'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'('
name|'o'
op|'.'
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'httplib'
op|'.'
name|'HTTPSConnection'
op|'('
name|'o'
op|'.'
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'('
string|"'POST'"
op|','
name|'o'
op|'.'
name|'path'
op|','
name|'body'
op|'='
name|'creds_json'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'401'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'response'
op|'.'
name|'reason'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Failure communicating with keystone"'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'faults'
op|'.'
name|'ec2_error_response'
op|'('
name|'request_id'
op|','
string|'"AuthFailure"'
op|','
name|'msg'
op|','
nl|'\n'
name|'status'
op|'='
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'data'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'token_id'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'token'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'user_id'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'user'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'project_id'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'token'"
op|']'
op|'['
string|"'tenant'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'user_name'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'user'"
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'project_name'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'token'"
op|']'
op|'['
string|"'tenant'"
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'roles'
op|'='
op|'['
name|'role'
op|'['
string|"'name'"
op|']'
name|'for'
name|'role'
nl|'\n'
name|'in'
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'user'"
op|']'
op|'['
string|"'roles'"
op|']'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'AttributeError'
op|','
name|'KeyError'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Keystone failure: %s"'
op|')'
op|'%'
name|'e'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Failure communicating with keystone"'
op|')'
newline|'\n'
name|'return'
name|'faults'
op|'.'
name|'ec2_error_response'
op|'('
name|'request_id'
op|','
string|'"AuthFailure"'
op|','
name|'msg'
op|','
nl|'\n'
name|'status'
op|'='
number|'400'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'remote_address'
op|'='
name|'req'
op|'.'
name|'remote_addr'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_forwarded_for'
op|':'
newline|'\n'
indent|'            '
name|'remote_address'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Forwarded-For'"
op|','
nl|'\n'
name|'remote_address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'catalog'
op|'='
name|'result'
op|'['
string|"'access'"
op|']'
op|'['
string|"'serviceCatalog'"
op|']'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'user_name'
op|'='
name|'user_name'
op|','
nl|'\n'
name|'project_name'
op|'='
name|'project_name'
op|','
nl|'\n'
name|'roles'
op|'='
name|'roles'
op|','
nl|'\n'
name|'auth_token'
op|'='
name|'token_id'
op|','
nl|'\n'
name|'remote_address'
op|'='
name|'remote_address'
op|','
nl|'\n'
name|'service_catalog'
op|'='
name|'catalog'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'='
name|'ctxt'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'application'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoAuth
dedent|''
dedent|''
name|'class'
name|'NoAuth'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add user:project as \'nova.context\' to WSGI environ."""'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'AWSAccessKeyId'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'user_id'
op|','
name|'_sep'
op|','
name|'project_id'
op|'='
name|'req'
op|'.'
name|'params'
op|'['
string|"'AWSAccessKeyId'"
op|']'
op|'.'
name|'partition'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'project_id'
op|'='
name|'project_id'
name|'or'
name|'user_id'
newline|'\n'
name|'remote_address'
op|'='
name|'req'
op|'.'
name|'remote_addr'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_forwarded_for'
op|':'
newline|'\n'
indent|'            '
name|'remote_address'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Forwarded-For'"
op|','
name|'remote_address'
op|')'
newline|'\n'
dedent|''
name|'ctx'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|','
nl|'\n'
name|'remote_address'
op|'='
name|'remote_address'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'='
name|'ctx'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'application'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Requestify
dedent|''
dedent|''
name|'class'
name|'Requestify'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'controller'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Requestify'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'controller'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'non_args'
op|'='
op|'['
string|"'Action'"
op|','
string|"'Signature'"
op|','
string|"'AWSAccessKeyId'"
op|','
string|"'SignatureMethod'"
op|','
nl|'\n'
string|"'SignatureVersion'"
op|','
string|"'Version'"
op|','
string|"'Timestamp'"
op|']'
newline|'\n'
name|'args'
op|'='
name|'dict'
op|'('
name|'req'
op|'.'
name|'params'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'expired'
op|'='
name|'ec2utils'
op|'.'
name|'is_ec2_timestamp_expired'
op|'('
name|'req'
op|'.'
name|'params'
op|','
nl|'\n'
name|'expires'
op|'='
name|'CONF'
op|'.'
name|'ec2_timestamp_expiry'
op|')'
newline|'\n'
name|'if'
name|'expired'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Timestamp failed validation."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
name|'detail'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# Raise KeyError if omitted'
nl|'\n'
dedent|''
name|'action'
op|'='
name|'req'
op|'.'
name|'params'
op|'['
string|"'Action'"
op|']'
newline|'\n'
comment|'# Fix bug lp:720157 for older (version 1) clients'
nl|'\n'
name|'version'
op|'='
name|'req'
op|'.'
name|'params'
op|'['
string|"'SignatureVersion'"
op|']'
newline|'\n'
name|'if'
name|'int'
op|'('
name|'version'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'non_args'
op|'.'
name|'remove'
op|'('
string|"'SignatureMethod'"
op|')'
newline|'\n'
name|'if'
string|"'SignatureMethod'"
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'                    '
name|'args'
op|'.'
name|'pop'
op|'('
string|"'SignatureMethod'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'non_arg'
name|'in'
name|'non_args'
op|':'
newline|'\n'
comment|'# Remove, but raise KeyError if omitted'
nl|'\n'
indent|'                '
name|'args'
op|'.'
name|'pop'
op|'('
name|'non_arg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidRequest'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'action: %s'"
op|')'
op|','
name|'action'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'args'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'arg: %(key)s\\t\\tval: %(value)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
string|"'value'"
op|':'
name|'value'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Success!'
nl|'\n'
dedent|''
name|'api_request'
op|'='
name|'apirequest'
op|'.'
name|'APIRequest'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
name|'action'
op|','
nl|'\n'
name|'req'
op|'.'
name|'params'
op|'['
string|"'Version'"
op|']'
op|','
name|'args'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'ec2.request'"
op|']'
op|'='
name|'api_request'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'application'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Authorizer
dedent|''
dedent|''
name|'class'
name|'Authorizer'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Authorize an EC2 API request.\n\n    Return a 401 if ec2.controller and ec2.action in WSGI environ may not be\n    executed in nova.context.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Authorizer'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'application'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'action_roles'
op|'='
op|'{'
nl|'\n'
string|"'CloudController'"
op|':'
op|'{'
nl|'\n'
string|"'DescribeAvailabilityZones'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DescribeRegions'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DescribeSnapshots'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DescribeKeyPairs'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'CreateKeyPair'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DeleteKeyPair'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DescribeSecurityGroups'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'ImportKeyPair'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'AuthorizeSecurityGroupIngress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'RevokeSecurityGroupIngress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'CreateSecurityGroup'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'DeleteSecurityGroup'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'GetConsoleOutput'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DescribeVolumes'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'CreateVolume'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'AttachVolume'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DetachVolume'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DescribeInstances'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DescribeAddresses'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'AllocateAddress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'ReleaseAddress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'AssociateAddress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'DisassociateAddress'"
op|':'
op|'['
string|"'netadmin'"
op|']'
op|','
nl|'\n'
string|"'RunInstances'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'TerminateInstances'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'RebootInstances'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'UpdateInstance'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'StartInstances'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'StopInstances'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DeleteVolume'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DescribeImages'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'DeregisterImage'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'RegisterImage'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'DescribeImageAttribute'"
op|':'
op|'['
string|"'all'"
op|']'
op|','
nl|'\n'
string|"'ModifyImageAttribute'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'UpdateImage'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
string|"'CreateImage'"
op|':'
op|'['
string|"'projectmanager'"
op|','
string|"'sysadmin'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'AdminController'"
op|':'
op|'{'
nl|'\n'
comment|"# All actions have the same permission: ['none'] (the default)"
nl|'\n'
comment|'# superusers will be allowed to run them'
nl|'\n'
comment|'# all others will get HTTPUnauthorized.'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'controller'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'ec2.request'"
op|']'
op|'.'
name|'controller'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
newline|'\n'
name|'action'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'ec2.request'"
op|']'
op|'.'
name|'action'
newline|'\n'
name|'allowed_roles'
op|'='
name|'self'
op|'.'
name|'action_roles'
op|'['
name|'controller'
op|']'
op|'.'
name|'get'
op|'('
name|'action'
op|','
op|'['
string|"'none'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_matches_any_role'
op|'('
name|'context'
op|','
name|'allowed_roles'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'application'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|"'Unauthorized request for controller=%(controller)s '"
nl|'\n'
string|"'and action=%(action)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'controller'"
op|':'
name|'controller'
op|','
string|"'action'"
op|':'
name|'action'
op|'}'
op|','
nl|'\n'
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnauthorized'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_matches_any_role
dedent|''
dedent|''
name|'def'
name|'_matches_any_role'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'roles'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return True if any role in roles is allowed in context."""'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'all'"
name|'in'
name|'roles'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'none'"
name|'in'
name|'roles'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'any'
op|'('
name|'role'
name|'in'
name|'context'
op|'.'
name|'roles'
name|'for'
name|'role'
name|'in'
name|'roles'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Validator
dedent|''
dedent|''
name|'class'
name|'Validator'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|validate_ec2_id
indent|'    '
name|'def'
name|'validate_ec2_id'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidEc2Id'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'validator'
op|'.'
name|'validate_ec2_id'
op|'='
name|'validate_ec2_id'
newline|'\n'
nl|'\n'
name|'validator'
op|'.'
name|'DEFAULT_VALIDATOR'
op|'='
op|'{'
nl|'\n'
string|"'instance_id'"
op|':'
name|'validator'
op|'.'
name|'validate_ec2_id'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'validator'
op|'.'
name|'validate_ec2_id'
op|','
nl|'\n'
string|"'image_id'"
op|':'
name|'validator'
op|'.'
name|'validate_ec2_id'
op|','
nl|'\n'
string|"'attribute'"
op|':'
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|','
nl|'\n'
string|"'image_location'"
op|':'
name|'validator'
op|'.'
name|'validate_image_path'
op|','
nl|'\n'
string|"'public_ip'"
op|':'
name|'utils'
op|'.'
name|'is_valid_ipv4'
op|','
nl|'\n'
string|"'region_name'"
op|':'
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|','
nl|'\n'
string|"'group_name'"
op|':'
name|'validator'
op|'.'
name|'validate_str'
op|'('
name|'max_length'
op|'='
number|'255'
op|')'
op|','
nl|'\n'
string|"'group_description'"
op|':'
name|'validator'
op|'.'
name|'validate_str'
op|'('
name|'max_length'
op|'='
number|'255'
op|')'
op|','
nl|'\n'
string|"'size'"
op|':'
name|'validator'
op|'.'
name|'validate_int'
op|'('
op|')'
op|','
nl|'\n'
string|"'user_data'"
op|':'
name|'validator'
op|'.'
name|'validate_user_data'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Validator'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'application'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'validator'
op|'.'
name|'validate'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'ec2.request'"
op|']'
op|'.'
name|'args'
op|','
nl|'\n'
name|'validator'
op|'.'
name|'DEFAULT_VALIDATOR'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'application'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|exception_to_ec2code
dedent|''
dedent|''
dedent|''
name|'def'
name|'exception_to_ec2code'
op|'('
name|'ex'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Helper to extract EC2 error code from exception.\n\n    For other than EC2 exceptions (those without ec2_code attribute),\n    use exception name.\n    """'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'ex'
op|','
string|"'ec2_code'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'code'
op|'='
name|'ex'
op|'.'
name|'ec2_code'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'code'
op|'='
name|'type'
op|'('
name|'ex'
op|')'
op|'.'
name|'__name__'
newline|'\n'
dedent|''
name|'return'
name|'code'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ec2_error_ex
dedent|''
name|'def'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|','
name|'code'
op|'='
name|'None'
op|','
name|'message'
op|'='
name|'None'
op|','
name|'unexpected'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return an EC2 error response based on passed exception and log\n    the exception on an appropriate log level:\n\n        * DEBUG: expected errors\n        * ERROR: unexpected errors\n\n    All expected errors are treated as client errors and 4xx HTTP\n    status codes are always returned for them.\n\n    Unexpected 5xx errors may contain sensitive information,\n    supress their messages for security.\n    """'
newline|'\n'
name|'if'
name|'not'
name|'code'
op|':'
newline|'\n'
indent|'        '
name|'code'
op|'='
name|'exception_to_ec2code'
op|'('
name|'ex'
op|')'
newline|'\n'
dedent|''
name|'status'
op|'='
name|'getattr'
op|'('
name|'ex'
op|','
string|"'code'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'status'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|'='
number|'500'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'unexpected'
op|':'
newline|'\n'
indent|'        '
name|'log_fun'
op|'='
name|'LOG'
op|'.'
name|'error'
newline|'\n'
name|'if'
name|'ex'
op|'.'
name|'args'
name|'and'
name|'status'
op|'<'
number|'500'
op|':'
newline|'\n'
indent|'            '
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"Unexpected %(ex_name)s raised: %(ex_str)s"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"Unexpected %(ex_name)s raised"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'log_fun'
op|'='
name|'LOG'
op|'.'
name|'debug'
newline|'\n'
name|'if'
name|'ex'
op|'.'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"%(ex_name)s raised: %(ex_str)s"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"%(ex_name)s raised"'
op|')'
newline|'\n'
comment|'# NOTE(jruzicka): For compatibility with EC2 API, treat expected'
nl|'\n'
comment|'# exceptions as client (4xx) errors. The exception error code is 500'
nl|'\n'
comment|'# by default and most exceptions inherit this from NovaException even'
nl|'\n'
comment|'# though they are actually client errors in most cases.'
nl|'\n'
dedent|''
name|'if'
name|'status'
op|'>='
number|'500'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|'='
number|'400'
newline|'\n'
dedent|''
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'request_id'
op|'='
name|'context'
op|'.'
name|'request_id'
newline|'\n'
name|'log_msg_args'
op|'='
op|'{'
nl|'\n'
string|"'ex_name'"
op|':'
name|'type'
op|'('
name|'ex'
op|')'
op|'.'
name|'__name__'
op|','
nl|'\n'
string|"'ex_str'"
op|':'
name|'unicode'
op|'('
name|'ex'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'log_fun'
op|'('
name|'log_msg'
op|'%'
name|'log_msg_args'
op|','
name|'context'
op|'='
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'ex'
op|'.'
name|'args'
name|'and'
name|'not'
name|'message'
name|'and'
op|'('
name|'not'
name|'unexpected'
name|'or'
name|'status'
op|'<'
number|'500'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'='
name|'unicode'
op|'('
name|'ex'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'unexpected'
op|':'
newline|'\n'
comment|'# Log filtered environment for unexpected errors.'
nl|'\n'
indent|'        '
name|'env'
op|'='
name|'req'
op|'.'
name|'environ'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'env'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'env'
op|'['
name|'k'
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'.'
name|'pop'
op|'('
name|'k'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'log_fun'
op|'('
name|'_'
op|'('
string|"'Environment: %s'"
op|')'
op|'%'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'env'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'message'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'='
name|'_'
op|'('
string|"'Unknown error occurred.'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'faults'
op|'.'
name|'ec2_error_response'
op|'('
name|'request_id'
op|','
name|'code'
op|','
name|'message'
op|','
name|'status'
op|'='
name|'status'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Executor
dedent|''
name|'class'
name|'Executor'
op|'('
name|'wsgi'
op|'.'
name|'Application'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Execute an EC2 API request.\n\n    Executes \'ec2.action\' upon \'ec2.controller\', passing \'nova.context\' and\n    \'ec2.action_args\' (all variables in WSGI environ.)  Returns an XML\n    response, or a 400 upon failure.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'api_request'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'ec2.request'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'api_request'
op|'.'
name|'invoke'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'message'
op|'='
name|'ex'
op|'.'
name|'msg_fmt'
op|'%'
op|'{'
string|"'instance_id'"
op|':'
name|'ec2_id'
op|'}'
newline|'\n'
name|'return'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|','
name|'message'
op|'='
name|'message'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'VolumeNotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'message'
op|'='
name|'ex'
op|'.'
name|'msg_fmt'
op|'%'
op|'{'
string|"'volume_id'"
op|':'
name|'ec2_id'
op|'}'
newline|'\n'
name|'return'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|','
name|'message'
op|'='
name|'message'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SnapshotNotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
name|'message'
op|'='
name|'ex'
op|'.'
name|'msg_fmt'
op|'%'
op|'{'
string|"'snapshot_id'"
op|':'
name|'ec2_id'
op|'}'
newline|'\n'
name|'return'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|','
name|'message'
op|'='
name|'message'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'CannotDisassociateAutoAssignedFloatingIP'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FloatingIpAssociated'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FloatingIpNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotActive'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidInstanceIDMalformed'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidKeypair'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidPortRange'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'KeyPairExists'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'MissingParameter'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NoFloatingIpInterface'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NoMoreFixedIps'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'QuotaError'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'SecurityGroupExists'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'SecurityGroupLimitExceeded'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'SecurityGroupRuleExists'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'VolumeUnattached'
op|','
nl|'\n'
comment|"# Following aren't translated to valid EC2 errors."
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotFoundEC2'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidAttribute'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidRequest'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NotFound'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ec2_error_ex'
op|'('
name|'ex'
op|','
name|'req'
op|','
name|'unexpected'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'text/xml'"
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
name|'str'
op|'('
name|'result'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
