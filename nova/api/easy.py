begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Public HTTP interface that allows services to self-register.\n\nThe general flow of a request is:\n    - Request is parsed into WSGI bits.\n    - Some middleware checks authentication.\n    - Routing takes place based on the URL to find a controller.\n      (/controller/method)\n    - Parameters are parsed from the request and passed to a method on the\n      controller as keyword arguments.\n      - Optionally json_body is decoded to provide all the parameters.\n    - Actual work is done and a result is returned.\n    - That result is turned into json and returned.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'inspect'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'import'
name|'routes'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'wsgi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|EASY_ROUTES
name|'EASY_ROUTES'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_service
name|'def'
name|'register_service'
op|'('
name|'path'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'EASY_ROUTES'
op|'['
name|'path'
op|']'
op|'='
name|'handle'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DelegatedAuthMiddleware
dedent|''
name|'class'
name|'DelegatedAuthMiddleware'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
DECL|member|process_request
indent|'    '
name|'def'
name|'process_request'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os_user'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
string|"'X-OpenStack-User'"
op|']'
newline|'\n'
name|'os_project'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
string|"'X-OpenStack-Project'"
op|']'
newline|'\n'
name|'context_ref'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user'
op|'='
name|'os_user'
op|','
name|'project'
op|'='
name|'os_project'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'openstack.context'"
op|']'
op|'='
name|'context_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|JsonParamsMiddleware
dedent|''
dedent|''
name|'class'
name|'JsonParamsMiddleware'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
DECL|member|process_request
indent|'    '
name|'def'
name|'process_request'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'json'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'params_json'
op|'='
name|'request'
op|'.'
name|'params'
op|'['
string|"'json'"
op|']'
newline|'\n'
name|'params_parsed'
op|'='
name|'utils'
op|'.'
name|'loads'
op|'('
name|'params_json'
op|')'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'params_parsed'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
name|'in'
op|'('
string|"'self'"
op|','
string|"'context'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'params'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
dedent|''
name|'request'
op|'.'
name|'environ'
op|'['
string|"'openstack.params'"
op|']'
op|'='
name|'params'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReqParamsMiddleware
dedent|''
dedent|''
name|'class'
name|'ReqParamsMiddleware'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
DECL|member|process_request
indent|'    '
name|'def'
name|'process_request'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params_parsed'
op|'='
name|'request'
op|'.'
name|'params'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'params_parsed'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
name|'in'
op|'('
string|"'self'"
op|','
string|"'context'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'params'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
dedent|''
name|'request'
op|'.'
name|'environ'
op|'['
string|"'openstack.params'"
op|']'
op|'='
name|'params'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SundayMorning
dedent|''
dedent|''
name|'class'
name|'SundayMorning'
op|'('
name|'wsgi'
op|'.'
name|'Router'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mapper'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'mapper'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'mapper'
op|'='
name|'routes'
op|'.'
name|'Mapper'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_load_registered_routes'
op|'('
name|'mapper'
op|')'
newline|'\n'
name|'super'
op|'('
name|'SundayMorning'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'mapper'
op|'='
name|'mapper'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_load_registered_routes
dedent|''
name|'def'
name|'_load_registered_routes'
op|'('
name|'self'
op|','
name|'mapper'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'route'
name|'in'
name|'EASY_ROUTES'
op|':'
newline|'\n'
indent|'            '
name|'mapper'
op|'.'
name|'connect'
op|'('
string|"'/%s/{action}'"
op|'%'
name|'route'
op|','
nl|'\n'
name|'controller'
op|'='
name|'ServiceWrapper'
op|'('
name|'EASY_ROUTES'
op|'['
name|'route'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Reflection
dedent|''
dedent|''
dedent|''
name|'class'
name|'Reflection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_methods'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_gather_methods
dedent|''
name|'def'
name|'_gather_methods'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'methods'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'route'
op|','
name|'handler'
name|'in'
name|'EASY_ROUTES'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'k'
name|'in'
name|'dir'
op|'('
name|'handler'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'getattr'
op|'('
name|'handler'
op|','
name|'k'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'callable'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# bunch of ugly formatting stuff'
nl|'\n'
dedent|''
name|'argspec'
op|'='
name|'inspect'
op|'.'
name|'getargspec'
op|'('
name|'f'
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'argspec'
op|'['
number|'0'
op|']'
name|'if'
name|'x'
op|'!='
string|"'self'"
name|'and'
name|'x'
op|'!='
string|"'context'"
op|']'
newline|'\n'
name|'defaults'
op|'='
name|'argspec'
op|'['
number|'3'
op|']'
name|'and'
name|'argspec'
op|'['
number|'3'
op|']'
name|'or'
op|'['
op|']'
newline|'\n'
name|'args_r'
op|'='
name|'list'
op|'('
name|'reversed'
op|'('
name|'args'
op|')'
op|')'
newline|'\n'
name|'defaults_r'
op|'='
name|'list'
op|'('
name|'reversed'
op|'('
name|'defaults'
op|')'
op|')'
newline|'\n'
name|'args_out'
op|'='
op|'['
op|']'
newline|'\n'
name|'while'
name|'args_r'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'defaults_r'
op|':'
newline|'\n'
indent|'                        '
name|'args_out'
op|'.'
name|'append'
op|'('
op|'('
name|'args_r'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|','
name|'defaults_r'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'args_out'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'args_r'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'methods'
op|'['
string|"'/%s/%s'"
op|'%'
op|'('
name|'route'
op|','
name|'k'
op|')'
op|']'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'k'
op|','
nl|'\n'
string|"'args'"
op|':'
name|'list'
op|'('
name|'reversed'
op|'('
name|'args_out'
op|')'
op|')'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'methods'
newline|'\n'
nl|'\n'
DECL|member|get_methods
dedent|''
name|'def'
name|'get_methods'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_methods'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_methods'
op|'='
name|'self'
op|'.'
name|'_gather_methods'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'method_list'
op|'='
name|'self'
op|'.'
name|'_methods'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'method_list'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'methods'"
op|':'
name|'method_list'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_method_info
dedent|''
name|'def'
name|'get_method_info'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_methods'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_methods'
op|'='
name|'self'
op|'.'
name|'_gather_methods'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_methods'
op|'['
name|'method'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServiceWrapper
dedent|''
dedent|''
name|'class'
name|'ServiceWrapper'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service_handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'service_handle'
op|'='
name|'service_handle'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'arg_dict'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgiorg.routing_args'"
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'action'
op|'='
name|'arg_dict'
op|'['
string|"'action'"
op|']'
newline|'\n'
name|'del'
name|'arg_dict'
op|'['
string|"'action'"
op|']'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'openstack.context'"
op|']'
newline|'\n'
comment|'# allow middleware up the stack to override the params'
nl|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'openstack.params'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'openstack.params'"
op|']'
newline|'\n'
nl|'\n'
comment|'# TODO(termie): do some basic normalization on methods'
nl|'\n'
dedent|''
name|'method'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'service_handle'
op|','
name|'action'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'method'
op|'('
name|'context'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
name|'if'
name|'type'
op|'('
name|'result'
op|')'
name|'is'
name|'dict'
name|'or'
name|'type'
op|'('
name|'result'
op|')'
name|'is'
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_serialize'
op|'('
name|'result'
op|','
name|'req'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Proxy
dedent|''
dedent|''
dedent|''
name|'class'
name|'Proxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Pretend an Easy API endpoint is an object."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'prefix'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'prefix'
op|'='
name|'prefix'
newline|'\n'
nl|'\n'
DECL|member|__do_request
dedent|''
name|'def'
name|'__do_request'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'urllib'
op|'.'
name|'urlencode'
op|'('
op|'{'
string|"'json'"
op|':'
name|'utils'
op|'.'
name|'dumps'
op|'('
name|'kwargs'
op|')'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'openstack.context'"
op|']'
op|'='
name|'context'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'utils'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'resp'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'prefix'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'__class__'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'prefix'
op|'='
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_wrapper
dedent|''
name|'def'
name|'_wrapper'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'__do_request'
op|'('
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'prefix'
op|','
name|'key'
op|')'
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'_wrapper'
op|'.'
name|'func_name'
op|'='
name|'key'
newline|'\n'
name|'return'
name|'_wrapper'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
