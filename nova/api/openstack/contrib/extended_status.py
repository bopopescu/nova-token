begin_unit
comment|'#   Copyright 2011 Openstack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#   Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#   not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#   a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#       http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#   Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#   License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#   under the License.'
nl|'\n'
nl|'\n'
string|'"""The Extended Status Admin API extension."""'
newline|'\n'
nl|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'faults'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"nova.api.openstack.contrib.extendedstatus"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Extended_status
name|'class'
name|'Extended_status'
op|'('
name|'extensions'
op|'.'
name|'ExtensionDescriptor'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Extended Status support"""'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
string|'"ExtendedStatus"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|'"OS-EXT-STS"'
newline|'\n'
DECL|variable|namespace
name|'namespace'
op|'='
string|'"http://docs.openstack.org/ext/extended_status/api/v1.1"'
newline|'\n'
DECL|variable|updated
name|'updated'
op|'='
string|'"2011-11-03T00:00:00+00:00"'
newline|'\n'
nl|'\n'
DECL|member|get_request_extensions
name|'def'
name|'get_request_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request_extensions'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_get_and_extend_one
name|'def'
name|'_get_and_extend_one'
op|'('
name|'context'
op|','
name|'server_id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'inst_ref'
op|'='
name|'compute_api'
op|'.'
name|'routing_get'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                '
name|'explanation'
op|'='
name|'_'
op|'('
string|'"Server not found."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'explanation'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'state'
name|'in'
op|'['
string|"'task_state'"
op|','
string|"'vm_state'"
op|','
string|"'power_state'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'='
string|'"%s:%s"'
op|'%'
op|'('
name|'Extended_status'
op|'.'
name|'alias'
op|','
name|'state'
op|')'
newline|'\n'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
name|'key'
op|']'
op|'='
name|'inst_ref'
op|'['
name|'state'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_get_and_extend_all
dedent|''
dedent|''
name|'def'
name|'_get_and_extend_all'
op|'('
name|'context'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
comment|'# TODO(mdietz): This is a brilliant argument for this to *not*'
nl|'\n'
comment|'# be an extension. The problem is we either have to 1) duplicate'
nl|'\n'
comment|'# the logic from the servers controller or 2) do what we did'
nl|'\n'
comment|'# and iterate over the list of potentially sorted, limited'
nl|'\n'
comment|'# and whatever else elements and find each individual.'
nl|'\n'
indent|'            '
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'server'
name|'in'
name|'body'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'inst_ref'
op|'='
name|'compute_api'
op|'.'
name|'routing_get'
op|'('
name|'context'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'                    '
name|'explanation'
op|'='
name|'_'
op|'('
string|'"Server not found."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'explanation'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'state'
name|'in'
op|'['
string|"'task_state'"
op|','
string|"'vm_state'"
op|','
string|"'power_state'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
string|'"%s:%s"'
op|'%'
op|'('
name|'Extended_status'
op|'.'
name|'alias'
op|','
name|'state'
op|')'
newline|'\n'
name|'server'
op|'['
name|'key'
op|']'
op|'='
name|'inst_ref'
op|'['
name|'state'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_extended_status_handler
dedent|''
dedent|''
dedent|''
name|'def'
name|'_extended_status_handler'
op|'('
name|'req'
op|','
name|'res'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'server_id'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgiorg.routing_args'"
op|']'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'nova.template'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                '
name|'tmpl'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.template'"
op|']'
newline|'\n'
name|'tmpl'
op|'.'
name|'attach'
op|'('
name|'ExtendedStatusTemplate'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'server_id'
op|':'
newline|'\n'
indent|'                '
name|'_get_and_extend_one'
op|'('
name|'context'
op|','
name|'server_id'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'_get_and_extend_all'
op|'('
name|'context'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'FLAGS'
op|'.'
name|'allow_admin_api'
op|':'
newline|'\n'
indent|'            '
name|'req_ext'
op|'='
name|'extensions'
op|'.'
name|'RequestExtension'
op|'('
string|"'GET'"
op|','
nl|'\n'
string|"'/:(project_id)/servers/:(id)'"
op|','
nl|'\n'
name|'_extended_status_handler'
op|')'
newline|'\n'
name|'request_extensions'
op|'.'
name|'append'
op|'('
name|'req_ext'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'request_extensions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedStatusTemplate
dedent|''
dedent|''
name|'class'
name|'ExtendedStatusTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'server'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'{%s}task_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'namespace'
op|','
nl|'\n'
string|"'%s:task_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'{%s}power_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'namespace'
op|','
nl|'\n'
string|"'%s:power_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'{%s}vm_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'namespace'
op|','
nl|'\n'
string|"'%s:vm_state'"
op|'%'
name|'Extended_status'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'SlaveTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
op|'{'
nl|'\n'
name|'Extended_status'
op|'.'
name|'alias'
op|':'
name|'Extended_status'
op|'.'
name|'namespace'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
