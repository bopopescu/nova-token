begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 Justin Santa Barbara'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Contrib contains extensions that are shipped with nova.\n\nIt can\'t be called \'extensions\' because that causes namespacing problems.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.api.openstack.contrib'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|standard_extensions
name|'def'
name|'standard_extensions'
op|'('
name|'ext_mgr'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Registers all standard API extensions."""'
newline|'\n'
nl|'\n'
comment|'# Walk through all the modules in our directory...'
nl|'\n'
name|'our_dir'
op|'='
name|'__path__'
op|'['
number|'0'
op|']'
newline|'\n'
name|'for'
name|'dirpath'
op|','
name|'dirnames'
op|','
name|'filenames'
name|'in'
name|'os'
op|'.'
name|'walk'
op|'('
name|'our_dir'
op|')'
op|':'
newline|'\n'
comment|'# Compute the relative package name from the dirpath'
nl|'\n'
indent|'        '
name|'relpath'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'relpath'
op|'('
name|'dirpath'
op|','
name|'our_dir'
op|')'
newline|'\n'
name|'if'
name|'relpath'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'relpkg'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'relpkg'
op|'='
string|"'.%s'"
op|'%'
string|"'.'"
op|'.'
name|'join'
op|'('
name|'relpath'
op|'.'
name|'split'
op|'('
name|'os'
op|'.'
name|'sep'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now, consider each file in turn, only considering .py files'
nl|'\n'
dedent|''
name|'for'
name|'fname'
name|'in'
name|'filenames'
op|':'
newline|'\n'
indent|'            '
name|'root'
op|','
name|'ext'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitext'
op|'('
name|'fname'
op|')'
newline|'\n'
nl|'\n'
comment|"# Skip __init__ and anything that's not .py"
nl|'\n'
name|'if'
name|'ext'
op|'!='
string|"'.py'"
name|'or'
name|'root'
op|'=='
string|"'__init__'"
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Try loading it'
nl|'\n'
dedent|''
name|'classname'
op|'='
op|'('
string|'"%s%s.%s.%s%s"'
op|'%'
nl|'\n'
op|'('
name|'__package__'
op|','
name|'relpkg'
op|','
name|'root'
op|','
nl|'\n'
name|'root'
op|'['
number|'0'
op|']'
op|'.'
name|'upper'
op|'('
op|')'
op|','
name|'root'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'ext_mgr'
op|'.'
name|'load_extension'
op|'('
name|'classname'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Failed to load extension %(classname)s: '"
nl|'\n'
string|"'%(exc)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Now, let's consider any subdirectories we may have..."
nl|'\n'
dedent|''
dedent|''
name|'subdirs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'dname'
name|'in'
name|'dirnames'
op|':'
newline|'\n'
comment|'# Skip it if it does not have __init__.py'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dirpath'
op|','
name|'dname'
op|','
nl|'\n'
string|"'__init__.py'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# If it has extension(), delegate...'
nl|'\n'
dedent|''
name|'ext_name'
op|'='
op|'('
string|'"%s%s.%s.extension"'
op|'%'
nl|'\n'
op|'('
name|'__package__'
op|','
name|'relpkg'
op|','
name|'dname'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'ext'
op|'='
name|'utils'
op|'.'
name|'import_class'
op|'('
name|'ext_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ClassNotFound'
op|':'
newline|'\n'
comment|"# extension() doesn't exist on it, so we'll explore"
nl|'\n'
comment|'# the directory for ourselves'
nl|'\n'
indent|'                '
name|'subdirs'
op|'.'
name|'append'
op|'('
name|'dname'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'ext'
op|'('
name|'ext_mgr'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                    '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Failed to load extension %(ext_name)s: '"
nl|'\n'
string|"'%(exc)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Update the list of directories we'll explore..."
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'dirnames'
op|'['
op|':'
op|']'
op|'='
name|'subdirs'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
