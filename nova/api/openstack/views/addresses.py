begin_unit
name|'import'
name|'hashlib'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_view_builder
name|'def'
name|'get_view_builder'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''\n    A factory method that returns the correct builder based on the version of\n    the api requested.\n    '''"
newline|'\n'
name|'version'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'version'
newline|'\n'
name|'if'
name|'version'
op|'=='
string|"'1.1'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ViewBuilder_1_1'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ViewBuilder_1_0'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ViewBuilder
dedent|''
dedent|''
name|'class'
name|'ViewBuilder'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"''' Models a server addresses response as a python dictionary.'''"
newline|'\n'
nl|'\n'
DECL|member|build
name|'def'
name|'build'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ViewBuilder_1_0
dedent|''
dedent|''
name|'class'
name|'ViewBuilder_1_0'
op|'('
name|'ViewBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|build
indent|'    '
name|'def'
name|'build'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/address'"
op|')'
newline|'\n'
name|'public_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/floating_ips/address'"
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'public'
op|'='
name|'public_ips'
op|','
name|'private'
op|'='
name|'private_ips'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ViewBuilder_1_1
dedent|''
dedent|''
name|'class'
name|'ViewBuilder_1_1'
op|'('
name|'ViewBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|build
indent|'    '
name|'def'
name|'build'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/address'"
op|')'
newline|'\n'
name|'private_ips'
op|'='
op|'['
name|'dict'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'addr'
op|'='
name|'a'
op|')'
name|'for'
name|'a'
name|'in'
name|'private_ips'
op|']'
newline|'\n'
name|'public_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/floating_ips/address'"
op|')'
newline|'\n'
name|'public_ips'
op|'='
op|'['
name|'dict'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'addr'
op|'='
name|'a'
op|')'
name|'for'
name|'a'
name|'in'
name|'public_ips'
op|']'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'public'
op|'='
name|'public_ips'
op|','
name|'private'
op|'='
name|'private_ips'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
