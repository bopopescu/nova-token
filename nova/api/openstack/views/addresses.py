begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010-2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.api.openstack.views.addresses'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ViewBuilder
name|'class'
name|'ViewBuilder'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Models a server addresses response as a python dictionary."""'
newline|'\n'
nl|'\n'
DECL|member|_extract_ips
name|'def'
name|'_extract_ips'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'            '
name|'chain'
op|'='
name|'network'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'chain'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
name|'network'
op|'['
string|"'ips'"
op|']'
op|','
name|'network'
op|'['
string|"'floating_ips'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'ip'
name|'in'
name|'chain'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'FLAGS'
op|'.'
name|'use_ipv6'
name|'and'
name|'ip'
op|'['
string|"'version'"
op|']'
op|'=='
number|'6'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'yield'
name|'ip'
newline|'\n'
nl|'\n'
DECL|member|build
dedent|''
dedent|''
name|'def'
name|'build'
op|'('
name|'self'
op|','
name|'networks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'network'
name|'not'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'['
name|'network'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'['
name|'network'
op|']'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'_extract_ips'
op|'('
name|'networks'
op|'['
name|'network'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|build_network
dedent|''
name|'def'
name|'build_network'
op|'('
name|'self'
op|','
name|'networks'
op|','
name|'requested_network'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'network'
op|'=='
name|'requested_network'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
name|'network'
op|':'
name|'list'
op|'('
name|'self'
op|'.'
name|'_extract_ips'
op|'('
name|'networks'
op|'['
name|'network'
op|']'
op|')'
op|')'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_network_label
dedent|''
name|'def'
name|'_extract_network_label'
op|'('
name|'self'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network'
op|'['
string|"'label'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
