begin_unit
name|'import'
name|'hashlib'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|function|get_view_builder
name|'def'
name|'get_view_builder'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''\n    A factory method that returns the correct builder based on the version of\n    the api requested.\n    '''"
newline|'\n'
name|'version'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'version'
newline|'\n'
name|'if'
name|'version'
op|'=='
string|"'1.1'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'DataViewBuilder_1_1'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'DataViewBuilder_1_0'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DataViewBuilder
dedent|''
dedent|''
name|'class'
name|'DataViewBuilder'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"''' Models a server response as a python dictionary. '''"
newline|'\n'
nl|'\n'
DECL|member|build
name|'def'
name|'build'
op|'('
name|'self'
op|','
name|'inst'
op|','
name|'is_detail'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Coerces into dictionary format, mapping everything to Rackspace-like\n        attributes for return"""'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'is_detail'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
name|'name'
op|'='
name|'inst'
op|'['
string|"'display_name'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'power_mapping'
op|'='
op|'{'
nl|'\n'
name|'None'
op|':'
string|"'build'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|':'
string|"'build'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|':'
string|"'active'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'BLOCKED'
op|':'
string|"'active'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|':'
string|"'suspended'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|':'
string|"'paused'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|':'
string|"'active'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTOFF'
op|':'
string|"'active'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'CRASHED'
op|':'
string|"'error'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'FAILED'
op|':'
string|"'error'"
op|'}'
newline|'\n'
name|'inst_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'mapped_keys'
op|'='
name|'dict'
op|'('
name|'status'
op|'='
string|"'state'"
op|','
name|'imageId'
op|'='
string|"'image_id'"
op|','
nl|'\n'
name|'flavorId'
op|'='
string|"'instance_type'"
op|','
name|'name'
op|'='
string|"'display_name'"
op|','
name|'id'
op|'='
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'mapped_keys'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst_dict'
op|'['
name|'k'
op|']'
op|'='
name|'inst'
op|'['
name|'v'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'inst_dict'
op|'['
string|"'status'"
op|']'
op|'='
name|'power_mapping'
op|'['
name|'inst_dict'
op|'['
string|"'status'"
op|']'
op|']'
newline|'\n'
name|'inst_dict'
op|'['
string|"'addresses'"
op|']'
op|'='
name|'self'
op|'.'
name|'_build_addresses'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
comment|'# Return the metadata as a dictionary'
nl|'\n'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
name|'item'
op|'['
string|"'key'"
op|']'
op|']'
op|'='
name|'item'
op|'['
string|"'value'"
op|']'
newline|'\n'
dedent|''
name|'inst_dict'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'inst_dict'
op|'['
string|"'hostId'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'inst'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'inst_dict'
op|'['
string|"'hostId'"
op|']'
op|'='
name|'hashlib'
op|'.'
name|'sha224'
op|'('
name|'inst'
op|'['
string|"'host'"
op|']'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DataViewBuilder_1_0
dedent|''
dedent|''
name|'class'
name|'DataViewBuilder_1_0'
op|'('
name|'DataViewBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|_build_addresses
indent|'    '
name|'def'
name|'_build_addresses'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/address'"
op|')'
newline|'\n'
name|'public_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/floating_ips/address'"
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'public'
op|'='
name|'public_ips'
op|','
name|'private'
op|'='
name|'private_ips'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DataViewBuilder_1_1
dedent|''
dedent|''
name|'class'
name|'DataViewBuilder_1_1'
op|'('
name|'DataViewBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|_build_addresses
indent|'    '
name|'def'
name|'_build_addresses'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/address'"
op|')'
newline|'\n'
name|'private_ips'
op|'='
op|'['
name|'dict'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'addr'
op|'='
name|'a'
op|')'
name|'for'
name|'a'
name|'in'
name|'private_ips'
op|']'
newline|'\n'
name|'public_ips'
op|'='
name|'utils'
op|'.'
name|'get_from_path'
op|'('
name|'inst'
op|','
string|"'fixed_ip/floating_ips/address'"
op|')'
newline|'\n'
name|'public_ips'
op|'='
op|'['
name|'dict'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'addr'
op|'='
name|'a'
op|')'
name|'for'
name|'a'
name|'in'
name|'public_ips'
op|']'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'public'
op|'='
name|'public_ips'
op|','
name|'private'
op|'='
name|'private_ips'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
