begin_unit
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'ips'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
name|'import'
name|'addresses'
name|'as'
name|'views_addresses'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
name|'import'
name|'flavors'
name|'as'
name|'views_flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
name|'import'
name|'images'
name|'as'
name|'views_images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
name|'import'
name|'servers'
name|'as'
name|'views_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'image'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'rpc'
name|'import'
name|'common'
name|'as'
name|'rpc_common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'api'
name|'as'
name|'scheduler_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.api.openstack.servers'"
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConvertedException
name|'class'
name|'ConvertedException'
op|'('
name|'exc'
op|'.'
name|'WSGIHTTPException'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'title'
op|','
name|'explanation'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'code'
op|'='
name|'code'
newline|'\n'
name|'self'
op|'.'
name|'title'
op|'='
name|'title'
newline|'\n'
name|'self'
op|'.'
name|'explanation'
op|'='
name|'explanation'
newline|'\n'
name|'super'
op|'('
name|'ConvertedException'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Controller
dedent|''
dedent|''
name|'class'
name|'Controller'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" The Server API base controller class for the OpenStack API """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_api'
op|'='
name|'network'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|index
dedent|''
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Returns a list of server names and ids for a given user """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
DECL|member|detail
dedent|''
name|'def'
name|'detail'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Returns a list of server details for a given user """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
DECL|member|_get_block_device_mapping
dedent|''
name|'def'
name|'_get_block_device_mapping'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get block_device_mapping from \'server\' dictionary.\n        Overidden by volumes controller.\n        """'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_block_device_mapping
dedent|''
name|'def'
name|'_get_block_device_mapping'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get block_device_mapping from \'server\' dictionary.\n        Overidden by volumes controller.\n        """'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'is_detail'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of servers, taking into account any search\n        options specified.\n        """'
newline|'\n'
nl|'\n'
name|'search_opts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'search_opts'
op|'.'
name|'update'
op|'('
name|'req'
op|'.'
name|'str_GET'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_opts'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_server_search_options'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Convert local_zone_only into a boolean'
nl|'\n'
name|'search_opts'
op|'['
string|"'local_zone_only'"
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
nl|'\n'
name|'search_opts'
op|'.'
name|'get'
op|'('
string|"'local_zone_only'"
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# If search by 'status', we need to convert it to 'vm_state'"
nl|'\n'
comment|'# to pass on to child zones.'
nl|'\n'
name|'if'
string|"'status'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|'='
name|'search_opts'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'state'
op|'='
name|'common'
op|'.'
name|'vm_state_from_status'
op|'('
name|'status'
op|')'
newline|'\n'
name|'if'
name|'state'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'reason'
op|'='
name|'_'
op|'('
string|"'Invalid server status: %(status)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'state'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'changes-since'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'parsed'
op|'='
name|'utils'
op|'.'
name|'parse_isotime'
op|'('
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Invalid changes-since value'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|'='
name|'parsed'
newline|'\n'
nl|'\n'
comment|"# By default, compute's get_all() will return deleted instances."
nl|'\n'
comment|"# If an admin hasn't specified a 'deleted' search option, we need"
nl|'\n'
comment|'# to filter out deleted instances by setting the filter ourselves.'
nl|'\n'
comment|"# ... Unless 'changes-since' is specified, because 'changes-since'"
nl|'\n'
comment|'# should return recently deleted images according to the API spec.'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'deleted'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'changes-since'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
comment|"# No 'changes-since', so we only want non-deleted servers"
nl|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance_list'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|')'
newline|'\n'
nl|'\n'
name|'limited_list'
op|'='
name|'self'
op|'.'
name|'_limit_items'
op|'('
name|'instance_list'
op|','
name|'req'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_build_list'
op|'('
name|'req'
op|','
name|'limited_list'
op|','
name|'is_detail'
op|'='
name|'is_detail'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_handle_quota_error
dedent|''
name|'def'
name|'_handle_quota_error'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reraise quota errors as api-specific http exceptions\n        """'
newline|'\n'
nl|'\n'
name|'code_mappings'
op|'='
op|'{'
nl|'\n'
string|'"OnsetFileLimitExceeded"'
op|':'
nl|'\n'
name|'_'
op|'('
string|'"Personality file limit exceeded"'
op|')'
op|','
nl|'\n'
string|'"OnsetFilePathLimitExceeded"'
op|':'
nl|'\n'
name|'_'
op|'('
string|'"Personality file path too long"'
op|')'
op|','
nl|'\n'
string|'"OnsetFileContentLimitExceeded"'
op|':'
nl|'\n'
name|'_'
op|'('
string|'"Personality file content too long"'
op|')'
op|','
nl|'\n'
string|'"InstanceLimitExceeded"'
op|':'
nl|'\n'
name|'_'
op|'('
string|'"Instance quotas have been exceeded"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'expl'
op|'='
name|'code_mappings'
op|'.'
name|'get'
op|'('
name|'error'
op|'.'
name|'code'
op|')'
newline|'\n'
name|'if'
name|'expl'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'explanation'
op|'='
name|'expl'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Retry-After'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
comment|'# if the original error is okay, just reraise it'
nl|'\n'
dedent|''
name|'raise'
name|'error'
newline|'\n'
nl|'\n'
DECL|member|_deserialize_create
dedent|''
name|'def'
name|'_deserialize_create'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deserialize a create request\n\n        Overrides normal behavior in the case of xml content\n        """'
newline|'\n'
name|'if'
name|'request'
op|'.'
name|'content_type'
op|'=='
string|'"application/xml"'
op|':'
newline|'\n'
indent|'            '
name|'deserializer'
op|'='
name|'ServerXMLDeserializer'
op|'('
op|')'
newline|'\n'
name|'return'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'request'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_deserialize'
op|'('
name|'request'
op|'.'
name|'body'
op|','
name|'request'
op|'.'
name|'get_content_type'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_server_name
dedent|''
dedent|''
name|'def'
name|'_validate_server_name'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is not a string or unicode"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'value'
op|'.'
name|'strip'
op|'('
op|')'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is an empty string"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_kernel_ramdisk_from_image
dedent|''
dedent|''
name|'def'
name|'_get_kernel_ramdisk_from_image'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'image_service'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetch an image from the ImageService, then if present, return the\n        associated kernel and ramdisk image IDs.\n        """'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'image_meta'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
comment|'# NOTE(sirp): extracted to a separate method to aid unit-testing, the'
nl|'\n'
comment|"# new method doesn't need a request obj or an ImageService stub"
nl|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|'='
name|'self'
op|'.'
name|'_do_get_kernel_ramdisk_from_image'
op|'('
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'return'
name|'kernel_id'
op|','
name|'ramdisk_id'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_do_get_kernel_ramdisk_from_image
name|'def'
name|'_do_get_kernel_ramdisk_from_image'
op|'('
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Given an ImageService image_meta, return kernel and ramdisk image\n        ids if present.\n\n        This is only valid for `ami` style images.\n        """'
newline|'\n'
name|'image_id'
op|'='
name|'image_meta'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'if'
name|'image_meta'
op|'['
string|"'status'"
op|']'
op|'!='
string|"'active'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|','
nl|'\n'
name|'reason'
op|'='
name|'_'
op|'('
string|'"status is not active"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'image_meta'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|')'
op|'!='
string|"'ami'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'kernel_id'
op|'='
name|'image_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'kernel_id'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'KernelNotFoundForImage'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ramdisk_id'
op|'='
name|'image_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'ramdisk_id'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'ramdisk_id'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'kernel_id'
op|','
name|'ramdisk_id'
newline|'\n'
nl|'\n'
DECL|member|_get_injected_files
dedent|''
name|'def'
name|'_get_injected_files'
op|'('
name|'self'
op|','
name|'personality'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a list of injected files from the personality attribute\n\n        At this time, injected_files must be formatted as a list of\n        (file_path, file_content) pairs for compatibility with the\n        underlying compute service.\n        """'
newline|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'personality'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'item'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'contents'
op|'='
name|'item'
op|'['
string|"'contents'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad personality format: missing %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad personality format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'contents'
op|'='
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'contents'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Personality content for %s cannot be decoded'"
op|')'
op|'%'
name|'path'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'injected_files'
op|'.'
name|'append'
op|'('
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'injected_files'
newline|'\n'
nl|'\n'
DECL|member|_get_server_admin_password_old_style
dedent|''
name|'def'
name|'_get_server_admin_password_old_style'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Determine the admin password for a server on creation """'
newline|'\n'
name|'return'
name|'utils'
op|'.'
name|'generate_password'
op|'('
name|'FLAGS'
op|'.'
name|'password_length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_admin_password_new_style
dedent|''
name|'def'
name|'_get_server_admin_password_new_style'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Determine the admin password for a server on creation """'
newline|'\n'
name|'password'
op|'='
name|'server'
op|'.'
name|'get'
op|'('
string|"'adminPass'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'password'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'utils'
op|'.'
name|'generate_password'
op|'('
name|'FLAGS'
op|'.'
name|'password_length'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'password'
op|','
name|'basestring'
op|')'
name|'or'
name|'password'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid adminPass"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'password'
newline|'\n'
nl|'\n'
DECL|member|_get_requested_networks
dedent|''
name|'def'
name|'_get_requested_networks'
op|'('
name|'self'
op|','
name|'requested_networks'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a list of requested networks from the networks attribute\n        """'
newline|'\n'
name|'networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'requested_networks'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'network_uuid'
op|'='
name|'network'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'utils'
op|'.'
name|'is_uuid_like'
op|'('
name|'network_uuid'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Bad networks format: network uuid is not in"'
nl|'\n'
string|'" proper format (%s)"'
op|')'
op|'%'
name|'network_uuid'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'#fixed IP address is optional'
nl|'\n'
comment|'#if the fixed IP address is not provided then'
nl|'\n'
comment|'#it will use one of the available IP address from the network'
nl|'\n'
dedent|''
name|'address'
op|'='
name|'network'
op|'.'
name|'get'
op|'('
string|"'fixed_ip'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'address'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'utils'
op|'.'
name|'is_valid_ipv4'
op|'('
name|'address'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid fixed IP address (%s)"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
comment|'# check if the network id is already present in the list,'
nl|'\n'
comment|"# we don't want duplicate networks to be passed"
nl|'\n'
comment|'# at the boot time'
nl|'\n'
dedent|''
name|'for'
name|'id'
op|','
name|'ip'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'id'
op|'=='
name|'network_uuid'
op|':'
newline|'\n'
indent|'                        '
name|'expl'
op|'='
name|'_'
op|'('
string|'"Duplicate networks (%s) are not allowed"'
op|')'
op|'%'
name|'network_uuid'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'networks'
op|'.'
name|'append'
op|'('
op|'('
name|'network_uuid'
op|','
name|'address'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad network format: missing %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad networks format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'networks'
newline|'\n'
nl|'\n'
DECL|member|_validate_user_data
dedent|''
name|'def'
name|'_validate_user_data'
op|'('
name|'self'
op|','
name|'user_data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the user_data is encoded properly"""'
newline|'\n'
name|'if'
name|'not'
name|'user_data'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'user_data'
op|'='
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'user_data'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Userdata content cannot be decoded'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Returns server details by server id """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'routing_get'
op|'('
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'id'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_build_view'
op|'('
name|'req'
op|','
name|'instance'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Creates a new server for a given user """'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
string|"'server'"
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'key_name'"
op|']'
op|'='
name|'self'
op|'.'
name|'_get_key_name'
op|'('
name|'req'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'server_dict'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'_get_server_admin_password'
op|'('
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
string|"'name'"
name|'in'
name|'server_dict'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is not defined"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'name'
op|'='
name|'server_dict'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_image_ref_from_req_data'
op|'('
name|'body'
op|')'
newline|'\n'
comment|'# If the image href was generated by nova api, strip image_href'
nl|'\n'
comment|'# down to an id and use the default glance connection params'
nl|'\n'
nl|'\n'
name|'if'
name|'str'
op|'('
name|'image_href'
op|')'
op|'.'
name|'startswith'
op|'('
name|'req'
op|'.'
name|'application_url'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'image_href'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_service'
op|','
name|'image_id'
op|'='
name|'image'
op|'.'
name|'get_image_service'
op|'('
name|'context'
op|','
nl|'\n'
name|'image_href'
op|')'
newline|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|'='
name|'self'
op|'.'
name|'_get_kernel_ramdisk_from_image'
op|'('
nl|'\n'
name|'req'
op|','
name|'image_service'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'images'
op|'='
name|'set'
op|'('
op|'['
name|'str'
op|'('
name|'x'
op|'['
string|"'id'"
op|']'
op|')'
name|'for'
name|'x'
name|'in'
name|'image_service'
op|'.'
name|'index'
op|'('
name|'context'
op|')'
op|']'
op|')'
newline|'\n'
name|'assert'
name|'str'
op|'('
name|'image_id'
op|')'
name|'in'
name|'images'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot find requested image %(image_href)s: %(e)s"'
op|'%'
nl|'\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personality'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'personality'"
op|')'
newline|'\n'
name|'config_drive'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'config_drive'"
op|')'
newline|'\n'
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'personality'
op|':'
newline|'\n'
indent|'            '
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_get_injected_files'
op|'('
name|'personality'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sg_names'
op|'='
op|'['
op|']'
newline|'\n'
name|'security_groups'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
name|'if'
name|'security_groups'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'sg_names'
op|'='
op|'['
name|'sg'
op|'['
string|"'name'"
op|']'
name|'for'
name|'sg'
name|'in'
name|'security_groups'
name|'if'
name|'sg'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'sg_names'
op|':'
newline|'\n'
indent|'            '
name|'sg_names'
op|'.'
name|'append'
op|'('
string|"'default'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sg_names'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'sg_names'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'networks'"
op|')'
newline|'\n'
name|'if'
name|'requested_networks'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'_get_requested_networks'
op|'('
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_id'
op|'='
name|'self'
op|'.'
name|'_flavor_id_from_req_data'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'zone_blob'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'blob'"
op|')'
newline|'\n'
nl|'\n'
comment|'# optional openstack extensions:'
nl|'\n'
name|'key_name'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|')'
newline|'\n'
name|'user_data'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'user_data'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_user_data'
op|'('
name|'user_data'
op|')'
newline|'\n'
nl|'\n'
name|'availability_zone'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|')'
newline|'\n'
name|'name'
op|'='
name|'server_dict'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'_get_block_device_mapping'
op|'('
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Only allow admins to specify their own reservation_ids'
nl|'\n'
comment|'# This is really meant to allow zones to work.'
nl|'\n'
name|'reservation_id'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|')'
newline|'\n'
name|'if'
name|'all'
op|'('
op|'['
name|'reservation_id'
name|'is'
name|'not'
name|'None'
op|','
nl|'\n'
name|'reservation_id'
op|'!='
string|"''"
op|','
nl|'\n'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'reservation_id'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'ret_resv_id'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'return_reservation_id'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'min_count'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'min_count'"
op|')'
newline|'\n'
name|'max_count'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'max_count'"
op|')'
newline|'\n'
comment|'# min_count and max_count are optional.  If they exist, they come'
nl|'\n'
comment|"# in as strings.  We want to default 'min_count' to 1, and default"
nl|'\n'
comment|"# 'max_count' to be 'min_count'."
nl|'\n'
name|'min_count'
op|'='
name|'int'
op|'('
name|'min_count'
op|')'
name|'if'
name|'min_count'
name|'else'
number|'1'
newline|'\n'
name|'max_count'
op|'='
name|'int'
op|'('
name|'max_count'
op|')'
name|'if'
name|'max_count'
name|'else'
name|'min_count'
newline|'\n'
name|'if'
name|'min_count'
op|'>'
name|'max_count'
op|':'
newline|'\n'
indent|'            '
name|'min_count'
op|'='
name|'max_count'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'inst_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_flavor_id'
op|'('
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'instances'
op|','
name|'resv_id'
op|')'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_type'
op|','
nl|'\n'
name|'image_id'
op|','
nl|'\n'
name|'kernel_id'
op|'='
name|'kernel_id'
op|','
nl|'\n'
name|'ramdisk_id'
op|'='
name|'ramdisk_id'
op|','
nl|'\n'
name|'display_name'
op|'='
name|'name'
op|','
nl|'\n'
name|'display_description'
op|'='
name|'name'
op|','
nl|'\n'
name|'key_name'
op|'='
name|'key_name'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'access_ip_v4'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'accessIPv4'"
op|')'
op|','
nl|'\n'
name|'access_ip_v6'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'accessIPv6'"
op|')'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'password'
op|','
nl|'\n'
name|'zone_blob'
op|'='
name|'zone_blob'
op|','
nl|'\n'
name|'reservation_id'
op|'='
name|'reservation_id'
op|','
nl|'\n'
name|'min_count'
op|'='
name|'min_count'
op|','
nl|'\n'
name|'max_count'
op|'='
name|'max_count'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|','
nl|'\n'
name|'security_group'
op|'='
name|'sg_names'
op|','
nl|'\n'
name|'user_data'
op|'='
name|'user_data'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'config_drive'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'block_device_mapping'
op|','
nl|'\n'
name|'wait_for_instances'
op|'='
name|'not'
name|'ret_resv_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'quota'
op|'.'
name|'QuotaError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_handle_quota_error'
op|'('
name|'error'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeMemoryTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeDiskTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Can not find requested image"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'KeypairNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid key_name provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rpc_common'
op|'.'
name|'RemoteError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"%(err_type)s: %(err_msg)s"'
op|'%'
op|'{'
string|"'err_type'"
op|':'
name|'err'
op|'.'
name|'exc_type'
op|','
string|"'err_msg'"
op|':'
name|'err'
op|'.'
name|'value'
op|'}'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
comment|'# Let the caller deal with unhandled exceptions.'
nl|'\n'
nl|'\n'
comment|'# If the caller wanted a reservation_id, return it'
nl|'\n'
dedent|''
name|'if'
name|'ret_resv_id'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'reservation_id'"
op|':'
name|'resv_id'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Instances is a list'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'instances'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'instance'
op|'.'
name|'get'
op|'('
string|"'_is_precooked'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'['
string|"'instance_type'"
op|']'
op|'='
name|'inst_type'
newline|'\n'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'='
name|'image_href'
newline|'\n'
nl|'\n'
dedent|''
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_view'
op|'('
name|'req'
op|','
name|'instance'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
string|"'_is_precooked'"
name|'in'
name|'server'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'_is_precooked'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
dedent|''
name|'return'
name|'server'
newline|'\n'
nl|'\n'
DECL|member|_delete
dedent|''
name|'def'
name|'_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'FLAGS'
op|'.'
name|'reclaim_instance_interval'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|update
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update server then pass on to version-specific controller"""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'update_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'name'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'update_dict'
op|'['
string|"'display_name'"
op|']'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'accessIPv4'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'access_ipv4'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
newline|'\n'
name|'update_dict'
op|'['
string|"'access_ip_v4'"
op|']'
op|'='
name|'access_ipv4'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'accessIPv6'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'access_ipv6'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
newline|'\n'
name|'update_dict'
op|'['
string|"'access_ip_v6'"
op|']'
op|'='
name|'access_ipv6'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'update'
op|'('
name|'ctxt'
op|','
name|'id'
op|','
op|'**'
name|'update_dict'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'routing_get'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_build_view'
op|'('
name|'req'
op|','
name|'instance'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|action
name|'def'
name|'action'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Multi-purpose method used to take actions on a server"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'actions'
op|'='
op|'{'
nl|'\n'
string|"'changePassword'"
op|':'
name|'self'
op|'.'
name|'_action_change_password'
op|','
nl|'\n'
string|"'reboot'"
op|':'
name|'self'
op|'.'
name|'_action_reboot'
op|','
nl|'\n'
string|"'resize'"
op|':'
name|'self'
op|'.'
name|'_action_resize'
op|','
nl|'\n'
string|"'confirmResize'"
op|':'
name|'self'
op|'.'
name|'_action_confirm_resize'
op|','
nl|'\n'
string|"'revertResize'"
op|':'
name|'self'
op|'.'
name|'_action_revert_resize'
op|','
nl|'\n'
string|"'rebuild'"
op|':'
name|'self'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
string|"'createImage'"
op|':'
name|'self'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'allow_admin_api'
op|':'
newline|'\n'
indent|'            '
name|'admin_actions'
op|'='
op|'{'
nl|'\n'
string|"'createBackup'"
op|':'
name|'self'
op|'.'
name|'_action_create_backup'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'actions'
op|'.'
name|'update'
op|'('
name|'admin_actions'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'self'
op|'.'
name|'actions'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'actions'
op|'['
name|'key'
op|']'
op|'('
name|'body'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"There is no such server action: %s"'
op|')'
op|'%'
op|'('
name|'key'
op|','
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid request body"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_create_backup
dedent|''
name|'def'
name|'_action_create_backup'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Backup a server instance.\n\n        Images now have an `image_type` associated with them, which can be\n        \'snapshot\' or the backup type, like \'daily\' or \'weekly\'.\n\n        If the image_type is backup-like, then the rotation factor can be\n        included and that will cause the oldest backups that exceed the\n        rotation factor to be deleted.\n\n        """'
newline|'\n'
name|'entity'
op|'='
name|'input_dict'
op|'['
string|'"createBackup"'
op|']'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_name'
op|'='
name|'entity'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'backup_type'
op|'='
name|'entity'
op|'['
string|'"backup_type"'
op|']'
newline|'\n'
name|'rotation'
op|'='
name|'entity'
op|'['
string|'"rotation"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'missing_key'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"createBackup entity requires %s attribute"'
op|')'
op|'%'
name|'missing_key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Malformed createBackup entity"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'rotation'
op|'='
name|'int'
op|'('
name|'rotation'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"createBackup attribute \'rotation\' must be an integer"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# preserve link to server in image properties'
nl|'\n'
dedent|''
name|'server_ref'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'req'
op|'.'
name|'application_url'
op|','
nl|'\n'
string|"'servers'"
op|','
nl|'\n'
name|'str'
op|'('
name|'instance_id'
op|')'
op|')'
newline|'\n'
name|'props'
op|'='
op|'{'
string|"'instance_ref'"
op|':'
name|'server_ref'
op|'}'
newline|'\n'
nl|'\n'
name|'metadata'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
name|'common'
op|'.'
name|'check_img_metadata_quota_limit'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'props'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid metadata"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'backup_type'
op|','
nl|'\n'
name|'rotation'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
nl|'\n'
comment|'# build location of newly-created image entity'
nl|'\n'
name|'image_id'
op|'='
name|'str'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'image_ref'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'req'
op|'.'
name|'application_url'
op|','
string|"'images'"
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Location'"
op|']'
op|'='
name|'image_ref'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|_action_confirm_resize
dedent|''
name|'def'
name|'_action_confirm_resize'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in confirm-resize %s"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'exc'
op|'.'
name|'HTTPNoContent'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_revert_resize
dedent|''
name|'def'
name|'_action_revert_resize'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'revert_resize'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in revert-resize %s"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_reboot
dedent|''
name|'def'
name|'_action_reboot'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'reboot'"
name|'in'
name|'input_dict'
name|'and'
string|"'type'"
name|'in'
name|'input_dict'
op|'['
string|"'reboot'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'valid_reboot_types'
op|'='
op|'['
string|"'HARD'"
op|','
string|"'SOFT'"
op|']'
newline|'\n'
name|'reboot_type'
op|'='
name|'input_dict'
op|'['
string|"'reboot'"
op|']'
op|'['
string|"'type'"
op|']'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'valid_reboot_types'
op|'.'
name|'count'
op|'('
name|'reboot_type'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Argument \'type\' for reboot is not HARD or SOFT"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing argument \'type\' for reboot"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'id'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in reboot %s"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|get_lock
name|'def'
name|'get_lock'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        return the boolean state of (instance with id)\'s lock\n\n        """'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_lock'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'readable'
op|'='
name|'traceback'
op|'.'
name|'format_exc'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Compute.api::get_lock %s"'
op|')'
op|','
name|'readable'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|get_ajax_console
name|'def'
name|'get_ajax_console'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a url to an instance\'s ajaxterm console."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_ajax_console'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
nl|'\n'
name|'int'
op|'('
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|get_vnc_console
name|'def'
name|'get_vnc_console'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a url to an instance\'s ajaxterm console."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_vnc_console'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
nl|'\n'
name|'int'
op|'('
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|diagnostics
name|'def'
name|'diagnostics'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Permit Admins to retrieve server diagnostics."""'
newline|'\n'
name|'ctxt'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_diagnostics'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|actions
dedent|''
name|'def'
name|'actions'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Permit Admins to retrieve server actions."""'
newline|'\n'
name|'ctxt'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
name|'items'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_actions'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
newline|'\n'
name|'actions'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# TODO(jk0): Do not do pre-serialization here once the default'
nl|'\n'
comment|'# serializer is updated'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'items'
op|':'
newline|'\n'
indent|'            '
name|'actions'
op|'.'
name|'append'
op|'('
name|'dict'
op|'('
nl|'\n'
name|'created_at'
op|'='
name|'str'
op|'('
name|'item'
op|'.'
name|'created_at'
op|')'
op|','
nl|'\n'
name|'action'
op|'='
name|'item'
op|'.'
name|'action'
op|','
nl|'\n'
name|'error'
op|'='
name|'item'
op|'.'
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'actions'
op|'='
name|'actions'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resize
dedent|''
name|'def'
name|'resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'instance_id'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Begin the resize process with given instance/flavor."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'flavor_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to locate requested flavor."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'CannotResizeToSameSize'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requires a change in size."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'CannotResizeToSmallerSize'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resizing to a smaller size is not supported."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'exception'
op|'.'
name|'novaclient_converter'
newline|'\n'
op|'@'
name|'scheduler_api'
op|'.'
name|'redirect_handler'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Destroys a server """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_key_name
dedent|''
dedent|''
name|'def'
name|'_get_key_name'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'server'"
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Malformed server entity"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_ref_from_req_data
dedent|''
dedent|''
dedent|''
name|'def'
name|'_image_ref_from_req_data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'data'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing imageRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_flavor_id_from_req_data
dedent|''
dedent|''
name|'def'
name|'_flavor_id_from_req_data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'data'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing flavorRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'common'
op|'.'
name|'get_id_from_href'
op|'('
name|'flavor_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_view
dedent|''
name|'def'
name|'_build_view'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'instance'
op|','
name|'is_detail'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'project_id'
op|'='
name|'getattr'
op|'('
name|'context'
op|','
string|"'project_id'"
op|','
string|"''"
op|')'
newline|'\n'
name|'base_url'
op|'='
name|'req'
op|'.'
name|'application_url'
newline|'\n'
name|'flavor_builder'
op|'='
name|'views_flavors'
op|'.'
name|'ViewBuilder'
op|'('
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'image_builder'
op|'='
name|'views_images'
op|'.'
name|'ViewBuilder'
op|'('
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'addresses_builder'
op|'='
name|'views_addresses'
op|'.'
name|'ViewBuilder'
op|'('
op|')'
newline|'\n'
name|'builder'
op|'='
name|'views_servers'
op|'.'
name|'ViewBuilder'
op|'('
name|'context'
op|','
name|'addresses_builder'
op|','
nl|'\n'
name|'flavor_builder'
op|','
name|'image_builder'
op|','
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'builder'
op|'.'
name|'build'
op|'('
name|'instance'
op|','
name|'is_detail'
op|'='
name|'is_detail'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_list
dedent|''
name|'def'
name|'_build_list'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'instances'
op|','
name|'is_detail'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'req'
op|'.'
name|'GET'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'pagination_params'
op|'='
name|'common'
op|'.'
name|'get_pagination_params'
op|'('
name|'req'
op|')'
newline|'\n'
comment|'# Update params with int() values from pagination params'
nl|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'pagination_params'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'project_id'
op|'='
name|'getattr'
op|'('
name|'context'
op|','
string|"'project_id'"
op|','
string|"''"
op|')'
newline|'\n'
name|'base_url'
op|'='
name|'req'
op|'.'
name|'application_url'
newline|'\n'
name|'flavor_builder'
op|'='
name|'views_flavors'
op|'.'
name|'ViewBuilder'
op|'('
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'image_builder'
op|'='
name|'views_images'
op|'.'
name|'ViewBuilder'
op|'('
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'addresses_builder'
op|'='
name|'views_addresses'
op|'.'
name|'ViewBuilder'
op|'('
op|')'
newline|'\n'
name|'builder'
op|'='
name|'views_servers'
op|'.'
name|'ViewBuilder'
op|'('
name|'context'
op|','
name|'addresses_builder'
op|','
nl|'\n'
name|'flavor_builder'
op|','
name|'image_builder'
op|','
name|'base_url'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'builder'
op|'.'
name|'build_list'
op|'('
name|'instances'
op|','
name|'is_detail'
op|'='
name|'is_detail'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_change_password
dedent|''
name|'def'
name|'_action_change_password'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'if'
op|'('
name|'not'
string|"'changePassword'"
name|'in'
name|'input_dict'
nl|'\n'
name|'or'
name|'not'
string|"'adminPass'"
name|'in'
name|'input_dict'
op|'['
string|"'changePassword'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"No adminPass was specified"'
op|')'
newline|'\n'
name|'return'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'password'
op|'='
name|'input_dict'
op|'['
string|"'changePassword'"
op|']'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'password'
op|','
name|'basestring'
op|')'
name|'or'
name|'password'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid adminPass"'
op|')'
newline|'\n'
name|'return'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'set_admin_password'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'password'
op|')'
newline|'\n'
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_limit_items
dedent|''
name|'def'
name|'_limit_items'
op|'('
name|'self'
op|','
name|'items'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'common'
op|'.'
name|'limited_by_marker'
op|'('
name|'items'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_metadata
dedent|''
name|'def'
name|'_validate_metadata'
op|'('
name|'self'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that we can work with the metadata given."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to parse metadata key/value pairs."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_decode_personalities
dedent|''
dedent|''
name|'def'
name|'_decode_personalities'
op|'('
name|'self'
op|','
name|'personalities'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Decode the Base64-encoded personalities."""'
newline|'\n'
name|'for'
name|'personality'
name|'in'
name|'personalities'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'personality'
op|'['
string|'"path"'
op|']'
newline|'\n'
name|'contents'
op|'='
name|'personality'
op|'['
string|'"contents"'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to parse personality path/contents."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'personality'
op|'['
string|'"contents"'
op|']'
op|'='
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'contents'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Personality content could not be Base64 decoded."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_resize
dedent|''
dedent|''
dedent|''
name|'def'
name|'_action_resize'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Resizes a given instance to the flavor size requested """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'input_dict'
op|'['
string|'"resize"'
op|']'
op|'['
string|'"flavorRef"'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'flavor_ref'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize request has invalid \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requests require \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'resize'
op|'('
name|'req'
op|','
name|'id'
op|','
name|'flavor_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_rebuild
dedent|''
name|'def'
name|'_action_rebuild'
op|'('
name|'self'
op|','
name|'info'
op|','
name|'request'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'info'
op|'['
string|'"rebuild"'
op|']'
op|'['
string|'"imageRef"'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Could not parse imageRef from request."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personalities'
op|'='
name|'info'
op|'['
string|'"rebuild"'
op|']'
op|'.'
name|'get'
op|'('
string|'"personality"'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'info'
op|'['
string|'"rebuild"'
op|']'
op|'.'
name|'get'
op|'('
string|'"metadata"'
op|')'
newline|'\n'
name|'name'
op|'='
name|'info'
op|'['
string|'"rebuild"'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_decode_personalities'
op|'('
name|'personalities'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'rebuild'"
name|'in'
name|'info'
name|'and'
string|"'adminPass'"
name|'in'
name|'info'
op|'['
string|"'rebuild'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'info'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'utils'
op|'.'
name|'generate_password'
op|'('
name|'FLAGS'
op|'.'
name|'password_length'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'image_href'
op|','
nl|'\n'
name|'password'
op|','
name|'name'
op|'='
name|'name'
op|','
name|'metadata'
op|'='
name|'metadata'
op|','
nl|'\n'
name|'files_to_inject'
op|'='
name|'personalities'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'RebuildRequiresActiveInstance'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance %s must be active to rebuild."'
op|')'
op|'%'
name|'instance_id'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance %s could not be found"'
op|')'
op|'%'
name|'instance_id'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'routing_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'view'
op|'='
name|'self'
op|'.'
name|'_build_view'
op|'('
name|'request'
op|','
name|'instance'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
name|'view'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
name|'return'
name|'view'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'common'
op|'.'
name|'check_snapshots_enabled'
newline|'\n'
DECL|member|_action_create_image
name|'def'
name|'_action_create_image'
op|'('
name|'self'
op|','
name|'input_dict'
op|','
name|'req'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Snapshot a server instance."""'
newline|'\n'
name|'entity'
op|'='
name|'input_dict'
op|'.'
name|'get'
op|'('
string|'"createImage"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_name'
op|'='
name|'entity'
op|'['
string|'"name"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"createImage entity requires name attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Malformed createImage entity"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# preserve link to server in image properties'
nl|'\n'
dedent|''
name|'server_ref'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'req'
op|'.'
name|'application_url'
op|','
nl|'\n'
string|"'servers'"
op|','
nl|'\n'
name|'str'
op|'('
name|'instance_id'
op|')'
op|')'
newline|'\n'
name|'props'
op|'='
op|'{'
string|"'instance_ref'"
op|':'
name|'server_ref'
op|'}'
newline|'\n'
nl|'\n'
name|'metadata'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'common'
op|'.'
name|'check_img_metadata_quota_limit'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'props'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid metadata"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceBusy'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server is currently creating an image. Please wait."'
op|')'
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# build location of newly-created image entity'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'str'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'image_ref'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'req'
op|'.'
name|'application_url'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'images'"
op|','
nl|'\n'
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Location'"
op|']'
op|'='
name|'image_ref'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|get_default_xmlns
dedent|''
name|'def'
name|'get_default_xmlns'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'common'
op|'.'
name|'XML_NS_V11'
newline|'\n'
nl|'\n'
DECL|member|_get_server_admin_password
dedent|''
name|'def'
name|'_get_server_admin_password'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Determine the admin password for a server on creation """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_server_admin_password_new_style'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_search_options
dedent|''
name|'def'
name|'_get_server_search_options'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return server search options allowed by non-admin"""'
newline|'\n'
name|'return'
op|'('
string|"'reservation_id'"
op|','
string|"'name'"
op|','
string|"'local_zone_only'"
op|','
nl|'\n'
string|"'status'"
op|','
string|"'image'"
op|','
string|"'flavor'"
op|','
string|"'changes-since'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HeadersSerializer
dedent|''
dedent|''
name|'class'
name|'HeadersSerializer'
op|'('
name|'wsgi'
op|'.'
name|'ResponseHeadersSerializer'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|create
indent|'    '
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'.'
name|'status_int'
op|'='
number|'202'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
nl|'\n'
DECL|member|action
dedent|''
name|'def'
name|'action'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'.'
name|'status_int'
op|'='
number|'202'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerXMLSerializer
dedent|''
dedent|''
name|'class'
name|'ServerXMLSerializer'
op|'('
name|'wsgi'
op|'.'
name|'XMLDictSerializer'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|NSMAP
indent|'    '
name|'NSMAP'
op|'='
op|'{'
name|'None'
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_V11'
op|','
string|"'atom'"
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_ATOM'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata_serializer'
op|'='
name|'common'
op|'.'
name|'MetadataXMLSerializer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addresses_serializer'
op|'='
name|'ips'
op|'.'
name|'IPXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_metadata_node
dedent|''
name|'def'
name|'_create_metadata_node'
op|'('
name|'self'
op|','
name|'metadata_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metadata_elem'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'metadata'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata_serializer'
op|'.'
name|'populate_metadata'
op|'('
name|'metadata_elem'
op|','
nl|'\n'
name|'metadata_dict'
op|')'
newline|'\n'
name|'return'
name|'metadata_elem'
newline|'\n'
nl|'\n'
DECL|member|_create_image_node
dedent|''
name|'def'
name|'_create_image_node'
op|'('
name|'self'
op|','
name|'image_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_elem'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'image'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'image_elem'
op|'.'
name|'set'
op|'('
string|"'id'"
op|','
name|'str'
op|'('
name|'image_dict'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'link'
name|'in'
name|'image_dict'
op|'.'
name|'get'
op|'('
string|"'links'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'elem'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'image_elem'
op|','
nl|'\n'
string|"'{%s}link'"
op|'%'
name|'xmlutil'
op|'.'
name|'XMLNS_ATOM'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'rel'"
op|','
name|'link'
op|'['
string|"'rel'"
op|']'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'href'"
op|','
name|'link'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'image_elem'
newline|'\n'
nl|'\n'
DECL|member|_create_flavor_node
dedent|''
name|'def'
name|'_create_flavor_node'
op|'('
name|'self'
op|','
name|'flavor_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_elem'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'flavor'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'flavor_elem'
op|'.'
name|'set'
op|'('
string|"'id'"
op|','
name|'str'
op|'('
name|'flavor_dict'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'link'
name|'in'
name|'flavor_dict'
op|'.'
name|'get'
op|'('
string|"'links'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'elem'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'flavor_elem'
op|','
nl|'\n'
string|"'{%s}link'"
op|'%'
name|'xmlutil'
op|'.'
name|'XMLNS_ATOM'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'rel'"
op|','
name|'link'
op|'['
string|"'rel'"
op|']'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'href'"
op|','
name|'link'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'flavor_elem'
newline|'\n'
nl|'\n'
DECL|member|_create_addresses_node
dedent|''
name|'def'
name|'_create_addresses_node'
op|'('
name|'self'
op|','
name|'addresses_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses_elem'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'addresses'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addresses_serializer'
op|'.'
name|'populate_addresses_node'
op|'('
name|'addresses_elem'
op|','
nl|'\n'
name|'addresses_dict'
op|')'
newline|'\n'
name|'return'
name|'addresses_elem'
newline|'\n'
nl|'\n'
DECL|member|_populate_server
dedent|''
name|'def'
name|'_populate_server'
op|'('
name|'self'
op|','
name|'server_elem'
op|','
name|'server_dict'
op|','
name|'detailed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Populate a server xml element from a dict."""'
newline|'\n'
nl|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'name'"
op|','
name|'server_dict'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'id'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'detailed'
op|':'
newline|'\n'
indent|'            '
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'uuid'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'userId'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'user_id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'tenantId'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'tenant_id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'updated'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'updated'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'created'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'created'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'hostId'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'hostId'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'accessIPv4'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'accessIPv4'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'accessIPv6'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'accessIPv6'"
op|']'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'status'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'status'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
string|"'progress'"
name|'in'
name|'server_dict'
op|':'
newline|'\n'
indent|'                '
name|'server_elem'
op|'.'
name|'set'
op|'('
string|"'progress'"
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
string|"'progress'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'image_elem'
op|'='
name|'self'
op|'.'
name|'_create_image_node'
op|'('
name|'server_dict'
op|'['
string|"'image'"
op|']'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'append'
op|'('
name|'image_elem'
op|')'
newline|'\n'
nl|'\n'
name|'flavor_elem'
op|'='
name|'self'
op|'.'
name|'_create_flavor_node'
op|'('
name|'server_dict'
op|'['
string|"'flavor'"
op|']'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'append'
op|'('
name|'flavor_elem'
op|')'
newline|'\n'
nl|'\n'
name|'meta_elem'
op|'='
name|'self'
op|'.'
name|'_create_metadata_node'
op|'('
nl|'\n'
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'append'
op|'('
name|'meta_elem'
op|')'
newline|'\n'
nl|'\n'
name|'addresses_elem'
op|'='
name|'self'
op|'.'
name|'_create_addresses_node'
op|'('
nl|'\n'
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'addresses'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'server_elem'
op|'.'
name|'append'
op|'('
name|'addresses_elem'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
name|'if'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'groups_elem'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'server_elem'
op|','
string|"'security_groups'"
op|')'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                    '
name|'group_elem'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'groups_elem'
op|','
nl|'\n'
string|"'security_group'"
op|')'
newline|'\n'
name|'group_elem'
op|'.'
name|'set'
op|'('
string|"'name'"
op|','
name|'group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'_populate_links'
op|'('
name|'server_elem'
op|','
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'links'"
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_populate_links
dedent|''
name|'def'
name|'_populate_links'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'links'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'link'
name|'in'
name|'links'
op|':'
newline|'\n'
indent|'            '
name|'elem'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'parent'
op|','
nl|'\n'
string|"'{%s}link'"
op|'%'
name|'xmlutil'
op|'.'
name|'XMLNS_ATOM'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'rel'"
op|','
name|'link'
op|'['
string|"'rel'"
op|']'
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'href'"
op|','
name|'link'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|index
dedent|''
dedent|''
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'servers_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'servers'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'servers'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'for'
name|'server_dict'
name|'in'
name|'servers_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'servers'
op|','
string|"'server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_server'
op|'('
name|'server'
op|','
name|'server_dict'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_populate_links'
op|'('
name|'servers'
op|','
name|'servers_dict'
op|'.'
name|'get'
op|'('
string|"'servers_links'"
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_to_xml'
op|'('
name|'servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detail
dedent|''
name|'def'
name|'detail'
op|'('
name|'self'
op|','
name|'servers_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'servers'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'servers'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'for'
name|'server_dict'
name|'in'
name|'servers_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'etree'
op|'.'
name|'SubElement'
op|'('
name|'servers'
op|','
string|"'server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_server'
op|'('
name|'server'
op|','
name|'server_dict'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_to_xml'
op|'('
name|'servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|show
dedent|''
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'server'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_server'
op|'('
name|'server'
op|','
name|'server_dict'
op|'['
string|"'server'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_to_xml'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'server'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_server'
op|'('
name|'server'
op|','
name|'server_dict'
op|'['
string|"'server'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'set'
op|'('
string|"'adminPass'"
op|','
name|'server_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_to_xml'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|action
dedent|''
name|'def'
name|'action'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
comment|'#NOTE(bcwaldon): We need a way to serialize actions individually. This'
nl|'\n'
comment|'# assumes all actions return a server entity'
nl|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'create'
op|'('
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'etree'
op|'.'
name|'Element'
op|'('
string|"'server'"
op|','
name|'nsmap'
op|'='
name|'self'
op|'.'
name|'NSMAP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_populate_server'
op|'('
name|'server'
op|','
name|'server_dict'
op|'['
string|"'server'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_to_xml'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'ServerXMLDeserializer'
op|'('
name|'wsgi'
op|'.'
name|'MetadataXMLDeserializer'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Deserializer to handle xml-formatted server create requests.\n\n    Handles standard server attributes as well as optional metadata\n    and personality attributes\n    """'
newline|'\n'
nl|'\n'
DECL|variable|metadata_deserializer
name|'metadata_deserializer'
op|'='
name|'common'
op|'.'
name|'MetadataXMLDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|action
name|'def'
name|'action'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'string'
op|')'
newline|'\n'
name|'action_node'
op|'='
name|'dom'
op|'.'
name|'childNodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'action_name'
op|'='
name|'action_node'
op|'.'
name|'tagName'
newline|'\n'
nl|'\n'
name|'action_deserializer'
op|'='
op|'{'
nl|'\n'
string|"'createImage'"
op|':'
name|'self'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
string|"'createBackup'"
op|':'
name|'self'
op|'.'
name|'_action_create_backup'
op|','
nl|'\n'
string|"'changePassword'"
op|':'
name|'self'
op|'.'
name|'_action_change_password'
op|','
nl|'\n'
string|"'reboot'"
op|':'
name|'self'
op|'.'
name|'_action_reboot'
op|','
nl|'\n'
string|"'rebuild'"
op|':'
name|'self'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
string|"'resize'"
op|':'
name|'self'
op|'.'
name|'_action_resize'
op|','
nl|'\n'
string|"'confirmResize'"
op|':'
name|'self'
op|'.'
name|'_action_confirm_resize'
op|','
nl|'\n'
string|"'revertResize'"
op|':'
name|'self'
op|'.'
name|'_action_revert_resize'
op|','
nl|'\n'
op|'}'
op|'.'
name|'get'
op|'('
name|'action_name'
op|','
name|'self'
op|'.'
name|'default'
op|')'
newline|'\n'
nl|'\n'
name|'action_data'
op|'='
name|'action_deserializer'
op|'('
name|'action_node'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'body'"
op|':'
op|'{'
name|'action_name'
op|':'
name|'action_data'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_create_image
dedent|''
name|'def'
name|'_action_create_image'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_deserialize_image_action'
op|'('
name|'node'
op|','
op|'('
string|"'name'"
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_create_backup
dedent|''
name|'def'
name|'_action_create_backup'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'attributes'
op|'='
op|'('
string|"'name'"
op|','
string|"'backup_type'"
op|','
string|"'rotation'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_deserialize_image_action'
op|'('
name|'node'
op|','
name|'attributes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_change_password
dedent|''
name|'def'
name|'_action_change_password'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"adminPass"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No adminPass was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"adminPass"'
op|':'
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"adminPass"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_reboot
dedent|''
name|'def'
name|'_action_reboot'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"type"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No reboot type was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"type"'
op|':'
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"type"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_rebuild
dedent|''
name|'def'
name|'_action_rebuild'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rebuild'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"name"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|"'name'"
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"name"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|'"metadata"'
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"metadata"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_metadata'
op|'('
name|'metadata_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personality'
op|'='
name|'self'
op|'.'
name|'_extract_personality'
op|'('
name|'node'
op|')'
newline|'\n'
name|'if'
name|'personality'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"personality"'
op|']'
op|'='
name|'personality'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"imageRef"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No imageRef was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'rebuild'
op|'['
string|'"imageRef"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"imageRef"'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'rebuild'
newline|'\n'
nl|'\n'
DECL|member|_action_resize
dedent|''
name|'def'
name|'_action_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"flavorRef"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No flavorRef was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"flavorRef"'
op|':'
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"flavorRef"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_confirm_resize
dedent|''
name|'def'
name|'_action_confirm_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_action_revert_resize
dedent|''
name|'def'
name|'_action_revert_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_deserialize_image_action
dedent|''
name|'def'
name|'_deserialize_image_action'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'allowed_attributes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'attribute'
name|'in'
name|'allowed_attributes'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
name|'attribute'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'['
name|'attribute'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|"'metadata'"
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'self'
op|'.'
name|'metadata_deserializer'
op|'.'
name|'extract_metadata'
op|'('
nl|'\n'
name|'metadata_node'
op|')'
newline|'\n'
name|'data'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deserialize an xml-formatted server create request"""'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'string'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_extract_server'
op|'('
name|'dom'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'body'"
op|':'
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_extract_server
dedent|''
name|'def'
name|'_extract_server'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the server attribute of a parsed request"""'
newline|'\n'
name|'server'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'server_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'attributes'
op|'='
op|'['
string|'"name"'
op|','
string|'"imageRef"'
op|','
string|'"flavorRef"'
op|','
string|'"adminPass"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|','
string|'"accessIPv6"'
op|']'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'['
name|'attr'
op|']'
op|'='
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"metadata"'
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"metadata"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_metadata'
op|'('
name|'metadata_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personality'
op|'='
name|'self'
op|'.'
name|'_extract_personality'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'personality'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"personality"'
op|']'
op|'='
name|'personality'
newline|'\n'
nl|'\n'
dedent|''
name|'networks'
op|'='
name|'self'
op|'.'
name|'_extract_networks'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'networks'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"networks"'
op|']'
op|'='
name|'networks'
newline|'\n'
nl|'\n'
dedent|''
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'_extract_security_groups'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'security_groups'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"security_groups"'
op|']'
op|'='
name|'security_groups'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'server'
newline|'\n'
nl|'\n'
DECL|member|_extract_personality
dedent|''
name|'def'
name|'_extract_personality'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the personality attribute of a parsed request"""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"personality"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'personality'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'file_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
string|'"file"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'file_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"path"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"path"'
op|']'
op|'='
name|'file_node'
op|'.'
name|'getAttribute'
op|'('
string|'"path"'
op|')'
newline|'\n'
dedent|''
name|'item'
op|'['
string|'"contents"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'file_node'
op|')'
newline|'\n'
name|'personality'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'personality'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_networks
dedent|''
dedent|''
name|'def'
name|'_extract_networks'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the networks attribute of a parsed request"""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"networks"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
nl|'\n'
string|'"network"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'network_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"uuid"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"uuid"'
op|']'
op|'='
name|'network_node'
op|'.'
name|'getAttribute'
op|'('
string|'"uuid"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'network_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"fixed_ip"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"fixed_ip"'
op|']'
op|'='
name|'network_node'
op|'.'
name|'getAttribute'
op|'('
string|'"fixed_ip"'
op|')'
newline|'\n'
dedent|''
name|'networks'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'networks'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_security_groups
dedent|''
dedent|''
name|'def'
name|'_extract_security_groups'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the security_groups attribute of a parsed request"""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"security_groups"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'sg_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
string|'"security_group"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'name_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'sg_node'
op|','
string|'"name"'
op|')'
newline|'\n'
name|'if'
name|'name_node'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"name"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'name_node'
op|')'
newline|'\n'
name|'security_groups'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'security_groups'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_resource
dedent|''
dedent|''
dedent|''
name|'def'
name|'create_resource'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'headers_serializer'
op|'='
name|'HeadersSerializer'
op|'('
op|')'
newline|'\n'
name|'body_serializers'
op|'='
op|'{'
string|"'application/xml'"
op|':'
name|'ServerXMLSerializer'
op|'('
op|')'
op|'}'
newline|'\n'
name|'serializer'
op|'='
name|'wsgi'
op|'.'
name|'ResponseSerializer'
op|'('
name|'body_serializers'
op|','
name|'headers_serializer'
op|')'
newline|'\n'
name|'body_deserializers'
op|'='
op|'{'
string|"'application/xml'"
op|':'
name|'ServerXMLDeserializer'
op|'('
op|')'
op|'}'
newline|'\n'
name|'deserializer'
op|'='
name|'wsgi'
op|'.'
name|'RequestDeserializer'
op|'('
name|'body_deserializers'
op|')'
newline|'\n'
name|'return'
name|'wsgi'
op|'.'
name|'Resource'
op|'('
name|'Controller'
op|'('
op|')'
op|','
name|'deserializer'
op|','
name|'serializer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|remove_invalid_options
dedent|''
name|'def'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_options'
op|','
name|'allowed_search_options'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove search options that are not valid for non-admin API/context"""'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'allow_admin_api'
name|'and'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|'# Allow all options'
nl|'\n'
indent|'        '
name|'return'
newline|'\n'
comment|'# Otherwise, strip out all unknown options'
nl|'\n'
dedent|''
name|'unknown_options'
op|'='
op|'['
name|'opt'
name|'for'
name|'opt'
name|'in'
name|'search_options'
nl|'\n'
name|'if'
name|'opt'
name|'not'
name|'in'
name|'allowed_search_options'
op|']'
newline|'\n'
name|'unk_opt_str'
op|'='
string|'", "'
op|'.'
name|'join'
op|'('
name|'unknown_options'
op|')'
newline|'\n'
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"Removing options \'%(unk_opt_str)s\' from query"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'log_msg'
op|')'
newline|'\n'
name|'for'
name|'opt'
name|'in'
name|'unknown_options'
op|':'
newline|'\n'
indent|'        '
name|'search_options'
op|'.'
name|'pop'
op|'('
name|'opt'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
