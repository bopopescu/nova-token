begin_unit
comment|'# Copyright 2014 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|APIVersionRequest
name|'class'
name|'APIVersionRequest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This class represents an API Version Request with convenience\n    methods for manipulation and comparison of version\n    numbers that we need to do to implement microversions.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'version_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an API version request object."""'
newline|'\n'
name|'self'
op|'.'
name|'ver_major'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'ver_minor'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'version_string'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'match'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|'r"^([1-9]\\d*)\\.([1-9]\\d*|0)$"'
op|','
nl|'\n'
name|'version_string'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'ver_major'
op|'='
name|'int'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ver_minor'
op|'='
name|'int'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InvalidAPIVersionString'
op|'('
name|'version'
op|'='
name|'version_string'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
string|'"API Version Request Major: %s, Minor: %s"'
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'ver_major'
op|','
name|'self'
op|'.'
name|'ver_minor'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_null
dedent|''
name|'def'
name|'is_null'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'ver_major'
name|'is'
name|'None'
name|'and'
name|'self'
op|'.'
name|'ver_minor'
name|'is'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__cmp__
dedent|''
name|'def'
name|'__cmp__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'other'
op|','
name|'APIVersionRequest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
newline|'\n'
dedent|''
name|'return'
name|'cmp'
op|'('
op|'('
name|'self'
op|'.'
name|'ver_major'
op|','
name|'self'
op|'.'
name|'ver_minor'
op|')'
op|','
nl|'\n'
op|'('
name|'other'
op|'.'
name|'ver_major'
op|','
name|'other'
op|'.'
name|'ver_minor'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|matches
dedent|''
name|'def'
name|'matches'
op|'('
name|'self'
op|','
name|'min_version'
op|','
name|'max_version'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns whether the version object represents a version\n        greater than or equal to the minimum version and less than\n        or equal to the maximum version.\n\n        @param min_version: Minimum acceptable version.\n        @param max_version: Maximum acceptable version.\n        @returns: boolean\n\n        If min_version is null then there is no minimum limit.\n        If max_version is null then there is no maximum limit.\n        If self is null then raise ValueError\n        """'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'is_null'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
newline|'\n'
dedent|''
name|'if'
name|'max_version'
op|'.'
name|'is_null'
op|'('
op|')'
name|'and'
name|'min_version'
op|'.'
name|'is_null'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'max_version'
op|'.'
name|'is_null'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'min_version'
op|'<='
name|'self'
newline|'\n'
dedent|''
name|'elif'
name|'min_version'
op|'.'
name|'is_null'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'<='
name|'max_version'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'min_version'
op|'<='
name|'self'
op|'<='
name|'max_version'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
