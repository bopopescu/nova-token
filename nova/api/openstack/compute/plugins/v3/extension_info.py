begin_unit
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'webob'
op|'.'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
comment|'# V2.1 does not support XML but we need to keep an entry in the'
nl|'\n'
comment|'# /extensions information returned to the user for backwards'
nl|'\n'
comment|'# compatibility'
nl|'\n'
DECL|variable|FAKE_XML_URL
name|'FAKE_XML_URL'
op|'='
string|'"http://docs.openstack.org/compute/ext/fake_xml"'
newline|'\n'
DECL|variable|FAKE_UPDATED_DATE
name|'FAKE_UPDATED_DATE'
op|'='
string|'"2014-12-03T00:00:00Z"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeExtension
name|'class'
name|'FakeExtension'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'alias'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'alias'
op|'='
name|'alias'
newline|'\n'
name|'self'
op|'.'
name|'__doc__'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
op|'-'
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionInfoController
dedent|''
dedent|''
name|'class'
name|'ExtensionInfoController'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'extension_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'extension_info'
op|'='
name|'extension_info'
newline|'\n'
nl|'\n'
DECL|member|_translate
dedent|''
name|'def'
name|'_translate'
op|'('
name|'self'
op|','
name|'ext'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ext_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'ext_data'
op|'['
string|"'name'"
op|']'
op|'='
name|'ext'
op|'.'
name|'name'
newline|'\n'
name|'ext_data'
op|'['
string|"'alias'"
op|']'
op|'='
name|'ext'
op|'.'
name|'alias'
newline|'\n'
name|'ext_data'
op|'['
string|"'description'"
op|']'
op|'='
name|'ext'
op|'.'
name|'__doc__'
newline|'\n'
name|'ext_data'
op|'['
string|"'namespace'"
op|']'
op|'='
name|'FAKE_XML_URL'
newline|'\n'
name|'ext_data'
op|'['
string|"'updated'"
op|']'
op|'='
name|'FAKE_UPDATED_DATE'
newline|'\n'
name|'ext_data'
op|'['
string|"'links'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'return'
name|'ext_data'
newline|'\n'
nl|'\n'
DECL|member|_get_extensions
dedent|''
name|'def'
name|'_get_extensions'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Filter extensions list based on policy."""'
newline|'\n'
nl|'\n'
name|'discoverable_extensions'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'for'
name|'alias'
op|','
name|'ext'
name|'in'
name|'self'
op|'.'
name|'extension_info'
op|'.'
name|'get_extensions'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'authorize'
op|'='
name|'extensions'
op|'.'
name|'soft_extension_authorizer'
op|'('
nl|'\n'
string|"'compute'"
op|','
string|"'v3:'"
op|'+'
name|'alias'
op|')'
newline|'\n'
name|'if'
name|'authorize'
op|'('
name|'context'
op|','
name|'action'
op|'='
string|"'discoverable'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'discoverable_extensions'
op|'['
name|'alias'
op|']'
op|'='
name|'ext'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Filter out extension %s from discover list"'
op|','
nl|'\n'
name|'alias'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'discoverable_extensions'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
op|')'
op|')'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
nl|'\n'
name|'sorted_ext_list'
op|'='
name|'sorted'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_get_extensions'
op|'('
name|'context'
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'extensions'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'_alias'
op|','
name|'ext'
name|'in'
name|'sorted_ext_list'
op|':'
newline|'\n'
indent|'            '
name|'extensions'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_translate'
op|'('
name|'ext'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'extensions'
op|'='
name|'extensions'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
number|'404'
op|')'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|"# NOTE(dprince): the extensions alias is used as the 'id' for show"
nl|'\n'
indent|'            '
name|'ext'
op|'='
name|'self'
op|'.'
name|'_get_extensions'
op|'('
name|'context'
op|')'
op|'['
name|'id'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'extension'
op|'='
name|'self'
op|'.'
name|'_translate'
op|'('
name|'ext'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionInfo
dedent|''
dedent|''
name|'class'
name|'ExtensionInfo'
op|'('
name|'extensions'
op|'.'
name|'V3APIExtensionBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Extension information."""'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
string|'"Extensions"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|'"extensions"'
newline|'\n'
DECL|variable|version
name|'version'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|get_resources
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
op|'['
nl|'\n'
name|'extensions'
op|'.'
name|'ResourceExtension'
op|'('
nl|'\n'
string|"'extensions'"
op|','
name|'ExtensionInfoController'
op|'('
name|'self'
op|'.'
name|'extension_info'
op|')'
op|','
nl|'\n'
name|'member_name'
op|'='
string|"'extension'"
op|')'
op|']'
newline|'\n'
name|'return'
name|'resources'
newline|'\n'
nl|'\n'
DECL|member|get_controller_extensions
dedent|''
name|'def'
name|'get_controller_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
