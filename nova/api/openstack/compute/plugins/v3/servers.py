begin_unit
comment|'# Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo'
name|'import'
name|'messaging'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'import'
name|'stevedore'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'schemas'
op|'.'
name|'v3'
name|'import'
name|'servers'
name|'as'
name|'schema_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'views'
name|'import'
name|'servers'
name|'as'
name|'views_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'validation'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'strutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'enable_instance_password'"
op|','
nl|'\n'
string|"'nova.api.openstack.compute.servers'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'network_api_class'"
op|','
string|"'nova.network'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'reclaim_instance_interval'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'extensions_blacklist'"
op|','
string|"'nova.api.openstack'"
op|','
name|'group'
op|'='
string|"'osapi_v3'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'extensions_whitelist'"
op|','
string|"'nova.api.openstack'"
op|','
name|'group'
op|'='
string|"'osapi_v3'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|authorizer
name|'authorizer'
op|'='
name|'extensions'
op|'.'
name|'core_authorizer'
op|'('
string|"'compute:v3'"
op|','
string|"'servers'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersController
name|'class'
name|'ServersController'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The Server API base controller class for the OpenStack API."""'
newline|'\n'
nl|'\n'
DECL|variable|EXTENSION_CREATE_NAMESPACE
name|'EXTENSION_CREATE_NAMESPACE'
op|'='
string|"'nova.api.v3.extensions.server.create'"
newline|'\n'
DECL|variable|EXTENSION_DESERIALIZE_EXTRACT_SERVER_NAMESPACE
name|'EXTENSION_DESERIALIZE_EXTRACT_SERVER_NAMESPACE'
op|'='
op|'('
nl|'\n'
string|"'nova.api.v3.extensions.server.create.deserialize'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|EXTENSION_REBUILD_NAMESPACE
name|'EXTENSION_REBUILD_NAMESPACE'
op|'='
string|"'nova.api.v3.extensions.server.rebuild'"
newline|'\n'
DECL|variable|EXTENSION_DESERIALIZE_EXTRACT_REBUILD_NAMESPACE
name|'EXTENSION_DESERIALIZE_EXTRACT_REBUILD_NAMESPACE'
op|'='
op|'('
nl|'\n'
string|"'nova.api.v3.extensions.server.rebuild.deserialize'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|EXTENSION_UPDATE_NAMESPACE
name|'EXTENSION_UPDATE_NAMESPACE'
op|'='
string|"'nova.api.v3.extensions.server.update'"
newline|'\n'
nl|'\n'
DECL|variable|_view_builder_class
name|'_view_builder_class'
op|'='
name|'views_servers'
op|'.'
name|'ViewBuilderV3'
newline|'\n'
nl|'\n'
DECL|variable|schema_server_create
name|'schema_server_create'
op|'='
name|'schema_servers'
op|'.'
name|'base_create'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_add_location
name|'def'
name|'_add_location'
op|'('
name|'robj'
op|')'
op|':'
newline|'\n'
comment|'# Just in case...'
nl|'\n'
indent|'        '
name|'if'
string|"'server'"
name|'not'
name|'in'
name|'robj'
op|'.'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'robj'
newline|'\n'
nl|'\n'
dedent|''
name|'link'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'l'
op|':'
name|'l'
op|'['
string|"'rel'"
op|']'
op|'=='
string|"'self'"
op|','
nl|'\n'
name|'robj'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
op|'['
string|"'links'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'link'
op|':'
newline|'\n'
indent|'            '
name|'robj'
op|'['
string|"'Location'"
op|']'
op|'='
name|'utils'
op|'.'
name|'utf8'
op|'('
name|'link'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Convenience return'
nl|'\n'
dedent|''
name|'return'
name|'robj'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|_check_load_extension
indent|'        '
name|'def'
name|'_check_load_extension'
op|'('
name|'required_function'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|check_whiteblack_lists
indent|'            '
name|'def'
name|'check_whiteblack_lists'
op|'('
name|'ext'
op|')'
op|':'
newline|'\n'
comment|'# Check whitelist is either empty or if not then the extension'
nl|'\n'
comment|'# is in the whitelist'
nl|'\n'
indent|'                '
name|'if'
op|'('
name|'not'
name|'CONF'
op|'.'
name|'osapi_v3'
op|'.'
name|'extensions_whitelist'
name|'or'
nl|'\n'
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
name|'in'
name|'CONF'
op|'.'
name|'osapi_v3'
op|'.'
name|'extensions_whitelist'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Check the extension is not in the blacklist'
nl|'\n'
indent|'                    '
name|'if'
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
name|'not'
name|'in'
name|'CONF'
op|'.'
name|'osapi_v3'
op|'.'
name|'extensions_blacklist'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_LW'
op|'('
string|'"Not loading %s because it is "'
nl|'\n'
string|'"in the blacklist"'
op|')'
op|','
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'LOG'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_LW'
op|'('
string|'"Not loading %s because it is not in the "'
nl|'\n'
string|'"whitelist"'
op|')'
op|','
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|check_load_extension
dedent|''
dedent|''
name|'def'
name|'check_load_extension'
op|'('
name|'ext'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'isinstance'
op|'('
name|'ext'
op|'.'
name|'obj'
op|','
name|'extensions'
op|'.'
name|'V3APIExtensionBase'
op|')'
op|':'
newline|'\n'
comment|'# Filter out for the existence of the required'
nl|'\n'
comment|'# function here rather than on every request. We'
nl|'\n'
comment|"# don't have a new abstract base class to reduce"
nl|'\n'
comment|'# duplication in the extensions as they may want'
nl|'\n'
comment|'# to implement multiple server (and other) entry'
nl|'\n'
comment|"# points if hasattr(ext.obj, 'server_create'):"
nl|'\n'
indent|'                    '
name|'if'
name|'hasattr'
op|'('
name|'ext'
op|'.'
name|'obj'
op|','
name|'required_function'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'extension %(ext_alias)s detected by '"
nl|'\n'
string|"'servers extension for function %(func)s'"
op|','
nl|'\n'
op|'{'
string|"'ext_alias'"
op|':'
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
op|','
nl|'\n'
string|"'func'"
op|':'
name|'required_function'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'check_whiteblack_lists'
op|'('
name|'ext'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'LOG'
op|'.'
name|'debug'
op|'('
nl|'\n'
string|"'extension %(ext_alias)s is missing %(func)s'"
op|','
nl|'\n'
op|'{'
string|"'ext_alias'"
op|':'
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'alias'
op|','
nl|'\n'
string|"'func'"
op|':'
name|'required_function'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'check_load_extension'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'extension_info'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'extension_info'"
op|')'
newline|'\n'
name|'super'
op|'('
name|'ServersController'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Look for implementation of extension point of server creation'
nl|'\n'
name|'self'
op|'.'
name|'create_extension_manager'
op|'='
name|'stevedore'
op|'.'
name|'enabled'
op|'.'
name|'EnabledExtensionManager'
op|'('
nl|'\n'
name|'namespace'
op|'='
name|'self'
op|'.'
name|'EXTENSION_CREATE_NAMESPACE'
op|','
nl|'\n'
name|'check_func'
op|'='
name|'_check_load_extension'
op|'('
string|"'server_create'"
op|')'
op|','
nl|'\n'
name|'invoke_on_load'
op|'='
name|'True'
op|','
nl|'\n'
name|'invoke_kwds'
op|'='
op|'{'
string|'"extension_info"'
op|':'
name|'self'
op|'.'
name|'extension_info'
op|'}'
op|','
nl|'\n'
name|'propagate_map_exceptions'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'list'
op|'('
name|'self'
op|'.'
name|'create_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Did not find any server create extensions"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Look for implementation of extension point of server rebuild'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'rebuild_extension_manager'
op|'='
name|'stevedore'
op|'.'
name|'enabled'
op|'.'
name|'EnabledExtensionManager'
op|'('
nl|'\n'
name|'namespace'
op|'='
name|'self'
op|'.'
name|'EXTENSION_REBUILD_NAMESPACE'
op|','
nl|'\n'
name|'check_func'
op|'='
name|'_check_load_extension'
op|'('
string|"'server_rebuild'"
op|')'
op|','
nl|'\n'
name|'invoke_on_load'
op|'='
name|'True'
op|','
nl|'\n'
name|'invoke_kwds'
op|'='
op|'{'
string|'"extension_info"'
op|':'
name|'self'
op|'.'
name|'extension_info'
op|'}'
op|','
nl|'\n'
name|'propagate_map_exceptions'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'list'
op|'('
name|'self'
op|'.'
name|'rebuild_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Did not find any server rebuild extensions"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Look for implementation of extension point of server update'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'update_extension_manager'
op|'='
name|'stevedore'
op|'.'
name|'enabled'
op|'.'
name|'EnabledExtensionManager'
op|'('
nl|'\n'
name|'namespace'
op|'='
name|'self'
op|'.'
name|'EXTENSION_UPDATE_NAMESPACE'
op|','
nl|'\n'
name|'check_func'
op|'='
name|'_check_load_extension'
op|'('
string|"'server_update'"
op|')'
op|','
nl|'\n'
name|'invoke_on_load'
op|'='
name|'True'
op|','
nl|'\n'
name|'invoke_kwds'
op|'='
op|'{'
string|'"extension_info"'
op|':'
name|'self'
op|'.'
name|'extension_info'
op|'}'
op|','
nl|'\n'
name|'propagate_map_exceptions'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'list'
op|'('
name|'self'
op|'.'
name|'update_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Did not find any server update extensions"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Look for API schema of server create extension'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_schema_manager'
op|'='
name|'stevedore'
op|'.'
name|'enabled'
op|'.'
name|'EnabledExtensionManager'
op|'('
nl|'\n'
name|'namespace'
op|'='
name|'self'
op|'.'
name|'EXTENSION_CREATE_NAMESPACE'
op|','
nl|'\n'
name|'check_func'
op|'='
name|'_check_load_extension'
op|'('
string|"'get_server_create_schema'"
op|')'
op|','
nl|'\n'
name|'invoke_on_load'
op|'='
name|'True'
op|','
nl|'\n'
name|'invoke_kwds'
op|'='
op|'{'
string|'"extension_info"'
op|':'
name|'self'
op|'.'
name|'extension_info'
op|'}'
op|','
nl|'\n'
name|'propagate_map_exceptions'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'list'
op|'('
name|'self'
op|'.'
name|'create_schema_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'create_schema_manager'
op|'.'
name|'map'
op|'('
name|'self'
op|'.'
name|'_create_extension_schema'
op|','
nl|'\n'
name|'self'
op|'.'
name|'schema_server_create'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Did not find any server create schemas"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'403'
op|')'
op|')'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of server names and ids for a given user."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'err'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'403'
op|')'
op|')'
newline|'\n'
DECL|member|detail
name|'def'
name|'detail'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of server details for a given user."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'err'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'is_detail'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of servers, based on any search options specified."""'
newline|'\n'
nl|'\n'
name|'search_opts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'search_opts'
op|'.'
name|'update'
op|'('
name|'req'
op|'.'
name|'GET'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_opts'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_server_search_options'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Verify search by 'status' contains a valid status."
nl|'\n'
comment|'# Convert it to filter by vm_state or task_state for compute_api.'
nl|'\n'
name|'search_opts'
op|'.'
name|'pop'
op|'('
string|"'status'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
string|"'status'"
name|'in'
name|'req'
op|'.'
name|'GET'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'='
name|'req'
op|'.'
name|'GET'
op|'.'
name|'getall'
op|'('
string|"'status'"
op|')'
newline|'\n'
name|'states'
op|'='
name|'common'
op|'.'
name|'task_and_vm_state_from_status'
op|'('
name|'statuses'
op|')'
newline|'\n'
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'states'
newline|'\n'
name|'if'
name|'not'
name|'vm_state'
name|'and'
name|'not'
name|'task_state'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'servers'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_state'
newline|'\n'
comment|"# When we search by vm state, task state will return 'default'."
nl|'\n'
comment|"# So we don't need task_state search_opt."
nl|'\n'
name|'if'
string|"'default'"
name|'not'
name|'in'
name|'task_state'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'task_state'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'changes_since'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'parsed'
op|'='
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'search_opts'
op|'['
string|"'changes_since'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Invalid changes_since value'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'changes_since'"
op|']'
op|'='
name|'parsed'
newline|'\n'
nl|'\n'
comment|"# By default, compute's get_all() will return deleted instances."
nl|'\n'
comment|"# If an admin hasn't specified a 'deleted' search option, we need"
nl|'\n'
comment|'# to filter out deleted instances by setting the filter ourselves.'
nl|'\n'
comment|"# ... Unless 'changes_since' is specified, because 'changes_since'"
nl|'\n'
comment|'# should return recently deleted images according to the API spec.'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'deleted'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'changes_since'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
comment|"# No 'changes_since', so we only want non-deleted servers"
nl|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'changes_since'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|'='
name|'search_opts'
op|'.'
name|'pop'
op|'('
string|"'changes_since'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'search_opts'
op|'.'
name|'get'
op|'('
string|'"vm_state"'
op|')'
op|'=='
op|'['
string|"'deleted'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Only administrators may list deleted instances"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# If tenant_id is passed as a search parameter this should'
nl|'\n'
comment|'# imply that all_tenants is also enabled unless explicitly'
nl|'\n'
comment|'# disabled. Note that the tenant_id parameter is filtered out'
nl|'\n'
comment|'# by remove_invalid_options above unless the requestor is an'
nl|'\n'
comment|'# admin.'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'tenant_id'"
name|'in'
name|'search_opts'
name|'and'
string|"'all_tenants'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
comment|'# We do not need to add the all_tenants flag if the tenant'
nl|'\n'
comment|'# id associated with the token is the tenant id'
nl|'\n'
comment|'# specified. This is done so a request that does not need'
nl|'\n'
comment|'# the all_tenants flag does not fail because of lack of'
nl|'\n'
comment|'# policy permission for compute:get_all_tenants when it'
nl|'\n'
comment|"# doesn't actually need it."
nl|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|'!='
name|'search_opts'
op|'.'
name|'get'
op|'('
string|"'tenant_id'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'all_tenants'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# If all tenants is passed with 0 or false as the value'
nl|'\n'
comment|'# then remove it from the search options. Nothing passed as'
nl|'\n'
comment|'# the value for all_tenants is considered to enable the feature'
nl|'\n'
dedent|''
dedent|''
name|'all_tenants'
op|'='
name|'search_opts'
op|'.'
name|'get'
op|'('
string|"'all_tenants'"
op|')'
newline|'\n'
name|'if'
name|'all_tenants'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'strutils'
op|'.'
name|'bool_from_string'
op|'('
name|'all_tenants'
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'search_opts'
op|'['
string|"'all_tenants'"
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'all_tenants'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'context'
op|','
string|"'compute:get_all_tenants'"
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|'}'
op|')'
newline|'\n'
name|'del'
name|'search_opts'
op|'['
string|"'all_tenants'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'limit'
op|','
name|'marker'
op|'='
name|'common'
op|'.'
name|'get_limit_and_marker'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance_list'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|','
name|'limit'
op|'='
name|'limit'
op|','
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'want_objects'
op|'='
name|'True'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MarkerNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'marker [%s] not found'"
op|')'
op|'%'
name|'marker'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|':'
newline|'\n'
indent|'            '
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"Flavor \'%s\' could not be found "'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'log_msg'
op|','
name|'search_opts'
op|'['
string|"'flavor'"
op|']'
op|')'
newline|'\n'
comment|'# TODO(mriedem): Move to ObjectListBase.__init__ for empty lists.'
nl|'\n'
name|'instance_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
name|'objects'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'is_detail'
op|':'
newline|'\n'
indent|'            '
name|'instance_list'
op|'.'
name|'fill_faults'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'detail'
op|'('
name|'req'
op|','
name|'instance_list'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'index'
op|'('
name|'req'
op|','
name|'instance_list'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'cache_db_instances'
op|'('
name|'instance_list'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function for looking up an instance by uuid."""'
newline|'\n'
name|'instance'
op|'='
name|'common'
op|'.'
name|'get_instance'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'want_objects'
op|'='
name|'True'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_check_string_length
dedent|''
name|'def'
name|'_check_string_length'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'name'
op|','
name|'max_length'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'value'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'utils'
op|'.'
name|'check_string_length'
op|'('
name|'value'
op|','
name|'name'
op|','
name|'min_length'
op|'='
number|'1'
op|','
nl|'\n'
name|'max_length'
op|'='
name|'max_length'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidInput'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_server_name
dedent|''
dedent|''
name|'def'
name|'_validate_server_name'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_string_length'
op|'('
name|'value'
op|','
string|"'Server name'"
op|','
name|'max_length'
op|'='
number|'255'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_requested_networks
dedent|''
name|'def'
name|'_get_requested_networks'
op|'('
name|'self'
op|','
name|'requested_networks'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a list of requested networks from the networks attribute."""'
newline|'\n'
name|'networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'requested_networks'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
comment|'# fixed IP address is optional'
nl|'\n'
comment|'# if the fixed IP address is not provided then'
nl|'\n'
comment|'# it will use one of the available IP address from the network'
nl|'\n'
indent|'                '
name|'address'
op|'='
name|'network'
op|'.'
name|'get'
op|'('
string|"'fixed_ip'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'address'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'utils'
op|'.'
name|'is_valid_ip_address'
op|'('
nl|'\n'
name|'address'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid fixed IP address (%s)"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'port_id'
op|'='
name|'network'
op|'.'
name|'get'
op|'('
string|"'port'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'port_id'
op|':'
newline|'\n'
indent|'                    '
name|'network_uuid'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'not'
name|'utils'
op|'.'
name|'is_neutron'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# port parameter is only for neutron v2.0'
nl|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unknown argument: port"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'port_id'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Bad port format: port uuid is "'
nl|'\n'
string|'"not in proper format "'
nl|'\n'
string|'"(%s)"'
op|')'
op|'%'
name|'port_id'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'address'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Specified Fixed IP \'%(addr)s\' cannot be used "'
nl|'\n'
string|'"with port \'%(port)s\': port already has "'
nl|'\n'
string|'"a Fixed IP allocated."'
op|')'
op|'%'
op|'{'
string|'"addr"'
op|':'
name|'address'
op|','
nl|'\n'
string|'"port"'
op|':'
name|'port_id'
op|'}'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'network_uuid'
op|'='
name|'network'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'port_id'
name|'and'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'network_uuid'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'br_uuid'
op|'='
name|'network_uuid'
op|'.'
name|'split'
op|'('
string|"'-'"
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'br_uuid'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Bad networks format: network uuid is "'
nl|'\n'
string|'"not in proper format "'
nl|'\n'
string|'"(%s)"'
op|')'
op|'%'
name|'network_uuid'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# For neutronv2, requested_networks'
nl|'\n'
comment|'# should be tuple of (network_uuid, fixed_ip, port_id)'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'utils'
op|'.'
name|'is_neutron'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'networks'
op|'.'
name|'append'
op|'('
op|'('
name|'network_uuid'
op|','
name|'address'
op|','
name|'port_id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# check if the network id is already present in the list,'
nl|'\n'
comment|"# we don't want duplicate networks to be passed"
nl|'\n'
comment|'# at the boot time'
nl|'\n'
indent|'                    '
name|'for'
name|'id'
op|','
name|'ip'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'id'
op|'=='
name|'network_uuid'
op|':'
newline|'\n'
indent|'                            '
name|'expl'
op|'='
op|'('
name|'_'
op|'('
string|'"Duplicate networks"'
nl|'\n'
string|'" (%s) are not allowed"'
op|')'
op|'%'
nl|'\n'
name|'network_uuid'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'networks'
op|'.'
name|'append'
op|'('
op|'('
name|'network_uuid'
op|','
name|'address'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad network format: missing %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad networks format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'networks'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): Without this regex, b64decode will happily'
nl|'\n'
comment|'#             ignore illegal bytes in the base64 encoded'
nl|'\n'
comment|'#             data.'
nl|'\n'
DECL|variable|B64_REGEX
dedent|''
name|'B64_REGEX'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^(?:[A-Za-z0-9+\\/]{4})*'"
nl|'\n'
string|"'(?:[A-Za-z0-9+\\/]{2}=='"
nl|'\n'
string|"'|[A-Za-z0-9+\\/]{3}=)?$'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_decode_base64
name|'def'
name|'_decode_base64'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s'"
op|','
string|"''"
op|','
name|'data'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'B64_REGEX'
op|'.'
name|'match'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
number|'404'
op|')'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns server details by server id."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'common'
op|'.'
name|'get_instance'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
name|'context'
op|','
name|'id'
op|','
nl|'\n'
name|'want_objects'
op|'='
name|'True'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'403'
op|','
number|'409'
op|','
number|'413'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'schema_server_create'
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new server for a given user."""'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'server_dict'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'_get_server_admin_password'
op|'('
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'name'"
name|'not'
name|'in'
name|'server_dict'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is not defined"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'name'
op|'='
name|'server_dict'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Arguments to be passed to instance create function'
nl|'\n'
name|'create_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Query extensions which want to manipulate the keyword'
nl|'\n'
comment|'# arguments.'
nl|'\n'
comment|'# NOTE(cyeoh): This is the hook that extensions use'
nl|'\n'
comment|'# to replace the extension specific code below.'
nl|'\n'
comment|'# When the extensions are ported this will also result'
nl|'\n'
comment|'# in some convenience function from this class being'
nl|'\n'
comment|'# moved to the extension'
nl|'\n'
name|'if'
name|'list'
op|'('
name|'self'
op|'.'
name|'create_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'create_extension_manager'
op|'.'
name|'map'
op|'('
name|'self'
op|'.'
name|'_create_extension_point'
op|','
nl|'\n'
name|'server_dict'
op|','
name|'create_kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_uuid'
op|'='
name|'self'
op|'.'
name|'_image_from_req_data'
op|'('
name|'server_dict'
op|','
name|'create_kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(cyeoh): Although an extension can set'
nl|'\n'
comment|'# return_reservation_id in order to request that a reservation'
nl|'\n'
comment|'# id be returned to the client instead of the newly created'
nl|'\n'
comment|'# instance information we do not want to pass this parameter'
nl|'\n'
comment|'# to the compute create call which always returns both. We use'
nl|'\n'
comment|'# this flag after the instance create call to determine what'
nl|'\n'
comment|'# to return to the client'
nl|'\n'
name|'return_reservation_id'
op|'='
name|'create_kwargs'
op|'.'
name|'pop'
op|'('
string|"'return_reservation_id'"
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
name|'None'
newline|'\n'
comment|'# TODO(cyeoh): bp v3-api-core-as-extensions'
nl|'\n'
comment|'# Replace with an extension point when the os-networks'
nl|'\n'
comment|'# extension is ported. Currently reworked'
nl|'\n'
comment|'# to take into account is_neutron'
nl|'\n'
comment|"# if (self.ext_mgr.is_loaded('os-networks')"
nl|'\n'
comment|'#        or utils.is_neutron()):'
nl|'\n'
comment|"#    requested_networks = server_dict.get('networks')"
nl|'\n'
nl|'\n'
name|'if'
name|'utils'
op|'.'
name|'is_neutron'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'networks'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'requested_networks'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'_get_requested_networks'
op|'('
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_id'
op|'='
name|'self'
op|'.'
name|'_flavor_id_from_req_data'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'inst_type'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
nl|'\n'
name|'flavor_id'
op|','
name|'ctxt'
op|'='
name|'context'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'instances'
op|','
name|'resv_id'
op|')'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_type'
op|','
nl|'\n'
name|'image_uuid'
op|','
nl|'\n'
name|'display_name'
op|'='
name|'name'
op|','
nl|'\n'
name|'display_description'
op|'='
name|'name'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'password'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|','
nl|'\n'
op|'**'
name|'create_kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'QuotaError'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'PortLimitExceeded'
op|')'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
nl|'\n'
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Retry-After'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadataSize'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
nl|'\n'
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Can not find requested image"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'KeypairNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid key_name provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ConfigDriveInvalidValue'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid config_drive provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'messaging'
op|'.'
name|'RemoteError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"%(err_type)s: %(err_msg)s"'
op|'%'
op|'{'
string|"'err_type'"
op|':'
name|'err'
op|'.'
name|'exc_type'
op|','
nl|'\n'
string|"'err_msg'"
op|':'
name|'err'
op|'.'
name|'value'
op|'}'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"UnicodeError: %s"'
op|'%'
name|'unicode'
op|'('
name|'error'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'ImageNotActive'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FlavorMemoryTooSmall'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidMetadata'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidRequest'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'MultiplePortsNotApplicable'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidFixedIpAndMaxCountRequest'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceUserDataMalformed'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceUserDataTooLarge'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'PortNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'PortRequiresFixedIP'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NetworkRequiresSubnet'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|')'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'PortInUse'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NetworkAmbiguous'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NoUniqueMatch'
op|')'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# If the caller wanted a reservation_id, return it'
nl|'\n'
dedent|''
name|'if'
name|'return_reservation_id'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'wsgi'
op|'.'
name|'ResponseObject'
op|'('
nl|'\n'
op|'{'
string|"'servers_reservation'"
op|':'
op|'{'
string|"'reservation_id'"
op|':'
name|'resv_id'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'.'
name|'cache_db_instances'
op|'('
name|'instances'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'create'
op|'('
name|'req'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'enable_instance_password'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
dedent|''
name|'robj'
op|'='
name|'wsgi'
op|'.'
name|'ResponseObject'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_add_location'
op|'('
name|'robj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_extension_point
dedent|''
name|'def'
name|'_create_extension_point'
op|'('
name|'self'
op|','
name|'ext'
op|','
name|'server_dict'
op|','
name|'create_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'ext'
op|'.'
name|'obj'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Running _create_extension_point for %s"'
op|','
name|'ext'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'handler'
op|'.'
name|'server_create'
op|'('
name|'server_dict'
op|','
name|'create_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_rebuild_extension_point
dedent|''
name|'def'
name|'_rebuild_extension_point'
op|'('
name|'self'
op|','
name|'ext'
op|','
name|'rebuild_dict'
op|','
name|'rebuild_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'ext'
op|'.'
name|'obj'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Running _rebuild_extension_point for %s"'
op|','
name|'ext'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'handler'
op|'.'
name|'server_rebuild'
op|'('
name|'rebuild_dict'
op|','
name|'rebuild_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_resize_extension_point
dedent|''
name|'def'
name|'_resize_extension_point'
op|'('
name|'self'
op|','
name|'ext'
op|','
name|'resize_dict'
op|','
name|'resize_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'ext'
op|'.'
name|'obj'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Running _resize_extension_point for %s"'
op|','
name|'ext'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'handler'
op|'.'
name|'server_resize'
op|'('
name|'resize_dict'
op|','
name|'resize_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_extension_point
dedent|''
name|'def'
name|'_update_extension_point'
op|'('
name|'self'
op|','
name|'ext'
op|','
name|'update_dict'
op|','
name|'update_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'ext'
op|'.'
name|'obj'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Running _update_extension_point for %s"'
op|','
name|'ext'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'handler'
op|'.'
name|'server_update'
op|'('
name|'update_dict'
op|','
name|'update_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_extension_schema
dedent|''
name|'def'
name|'_create_extension_schema'
op|'('
name|'self'
op|','
name|'ext'
op|','
name|'create_schema'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'ext'
op|'.'
name|'obj'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Running _create_extension_schema for %s"'
op|','
name|'ext'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'schema'
op|'='
name|'handler'
op|'.'
name|'get_server_create_schema'
op|'('
op|')'
newline|'\n'
name|'create_schema'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'server'"
op|']'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'update'
op|'('
name|'schema'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_delete
dedent|''
name|'def'
name|'_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'reclaim_instance_interval'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|':'
newline|'\n'
comment|'# Note(yufang521247): instance which has never been active'
nl|'\n'
comment|'# is not allowed to be soft_deleted. Thus we have to call'
nl|'\n'
comment|'# delete() to clean up the instance.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'404'
op|')'
op|')'
newline|'\n'
DECL|member|update
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update server then pass on to version-specific controller."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_valid_body'
op|'('
name|'body'
op|','
string|"'server'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|'"The request body is invalid"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'update_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'name'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'update_dict'
op|'['
string|"'display_name'"
op|']'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'host_id'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"host_id cannot be updated."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'list'
op|'('
name|'self'
op|'.'
name|'update_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'update_extension_manager'
op|'.'
name|'map'
op|'('
name|'self'
op|'.'
name|'_update_extension_point'
op|','
nl|'\n'
name|'body'
op|'['
string|"'server'"
op|']'
op|','
name|'update_dict'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'common'
op|'.'
name|'get_instance'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
name|'ctxt'
op|','
name|'id'
op|','
nl|'\n'
name|'want_objects'
op|'='
name|'True'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# NOTE(mikal): this try block needs to stay because save() still'
nl|'\n'
comment|'# might throw an exception.'
nl|'\n'
indent|'            '
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'ctxt'
op|','
string|"'compute:update'"
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'update_dict'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'confirm_resize'"
op|')'
newline|'\n'
DECL|member|_action_confirm_resize
name|'def'
name|'_action_confirm_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'confirm_resize'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'revert_resize'"
op|')'
newline|'\n'
DECL|member|_action_revert_resize
name|'def'
name|'_action_revert_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'revert_resize'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Flavor used by the instance could not be found."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'revert_resize'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'reboot'"
op|')'
newline|'\n'
DECL|member|_action_reboot
name|'def'
name|'_action_reboot'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'reboot'"
name|'in'
name|'body'
name|'and'
string|"'type'"
name|'in'
name|'body'
op|'['
string|"'reboot'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'body'
op|'['
string|"'reboot'"
op|']'
op|'['
string|"'type'"
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Argument \'type\' for reboot must be a string"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'valid_reboot_types'
op|'='
op|'['
string|"'HARD'"
op|','
string|"'SOFT'"
op|']'
newline|'\n'
name|'reboot_type'
op|'='
name|'body'
op|'['
string|"'reboot'"
op|']'
op|'['
string|"'type'"
op|']'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'valid_reboot_types'
op|'.'
name|'count'
op|'('
name|'reboot_type'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Argument \'type\' for reboot is not HARD or SOFT"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing argument \'type\' for reboot"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'reboot_type'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'reboot'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_resize
dedent|''
name|'def'
name|'_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'instance_id'
op|','
name|'flavor_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Begin the resize process with given instance/flavor."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'flavor_id'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'QuotaError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
nl|'\n'
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Retry-After'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to locate requested flavor."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'CannotResizeToSameFlavor'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requires a flavor change."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'CannotResizeDisk'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'resize'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotAuthorized'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"You are not authorized to access the image "'
nl|'\n'
string|'"the instance was started with."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnauthorized'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Image that the instance was started "'
nl|'\n'
string|'"with could not be found."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid instance image."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'204'
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroys a server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_uuid_from_href
dedent|''
dedent|''
name|'def'
name|'_image_uuid_from_href'
op|'('
name|'self'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
comment|'# If the image href was generated by nova api, strip image_href'
nl|'\n'
comment|'# down to an id and use the default glance connection params'
nl|'\n'
indent|'        '
name|'image_uuid'
op|'='
name|'image_href'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid imageRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'image_uuid'
newline|'\n'
nl|'\n'
DECL|member|_image_from_req_data
dedent|''
name|'def'
name|'_image_from_req_data'
op|'('
name|'self'
op|','
name|'server_dict'
op|','
name|'create_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get image data from the request or raise appropriate\n        exceptions.\n\n        The field imageRef is mandatory when no block devices have been\n        defined and must be a proper uuid when present.\n        """'
newline|'\n'
name|'image_href'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'imageRef'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'image_href'
name|'and'
name|'create_kwargs'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'elif'
name|'image_href'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_image_uuid_from_href'
op|'('
name|'unicode'
op|'('
name|'image_href'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing imageRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_flavor_id_from_req_data
dedent|''
dedent|''
name|'def'
name|'_flavor_id_from_req_data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'data'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing flavorRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'common'
op|'.'
name|'get_id_from_href'
op|'('
name|'flavor_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'401'
op|','
number|'403'
op|','
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'resize'"
op|')'
newline|'\n'
DECL|member|_action_resize
name|'def'
name|'_action_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resizes a given instance to the flavor size requested."""'
newline|'\n'
name|'resize_dict'
op|'='
name|'body'
op|'['
string|"'resize'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'str'
op|'('
name|'resize_dict'
op|'['
string|'"flavorRef"'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'flavor_ref'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize request has invalid \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requests require \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'resize_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_resize'
op|'('
name|'req'
op|','
name|'id'
op|','
name|'flavor_ref'
op|','
op|'**'
name|'resize_kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'403'
op|','
number|'404'
op|','
number|'409'
op|','
number|'413'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'rebuild'"
op|')'
newline|'\n'
DECL|member|_action_rebuild
name|'def'
name|'_action_rebuild'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rebuild an instance with the given attributes."""'
newline|'\n'
name|'rebuild_dict'
op|'='
name|'body'
op|'['
string|"'rebuild'"
op|']'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'rebuild_dict'
op|'['
string|'"imageRef"'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Could not parse imageRef from request."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_image_uuid_from_href'
op|'('
name|'image_href'
op|')'
newline|'\n'
nl|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'_get_server_admin_password'
op|'('
name|'rebuild_dict'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'attr_map'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'display_name'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
string|"'metadata'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'rebuild_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'name'"
name|'in'
name|'rebuild_dict'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'rebuild_dict'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'preserve_ephemeral'"
name|'in'
name|'rebuild_dict'
op|':'
newline|'\n'
indent|'            '
name|'rebuild_kwargs'
op|'['
string|"'preserve_ephemeral'"
op|']'
op|'='
name|'strutils'
op|'.'
name|'bool_from_string'
op|'('
nl|'\n'
name|'rebuild_dict'
op|'['
string|"'preserve_ephemeral'"
op|']'
op|','
name|'strict'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'list'
op|'('
name|'self'
op|'.'
name|'rebuild_extension_manager'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'rebuild_extension_manager'
op|'.'
name|'map'
op|'('
name|'self'
op|'.'
name|'_rebuild_extension_point'
op|','
nl|'\n'
name|'rebuild_dict'
op|','
name|'rebuild_kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'request_attribute'
op|','
name|'instance_attribute'
name|'in'
name|'attr_map'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'rebuild_kwargs'
op|'['
name|'instance_attribute'
op|']'
op|'='
name|'rebuild_dict'
op|'['
nl|'\n'
name|'request_attribute'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_href'
op|','
nl|'\n'
name|'password'
op|','
nl|'\n'
op|'**'
name|'rebuild_kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceIsLocked'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'rebuild'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadataSize'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
nl|'\n'
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot find image for rebuild"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'QuotaError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|'('
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'ImageNotActive'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'FlavorMemoryTooSmall'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidMetadata'
op|')'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'error'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'view'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|"# Add on the admin_password attribute since the view doesn't do it"
nl|'\n'
comment|'# unless instance passwords are disabled'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'enable_instance_password'
op|':'
newline|'\n'
indent|'            '
name|'view'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
dedent|''
name|'robj'
op|'='
name|'wsgi'
op|'.'
name|'ResponseObject'
op|'('
name|'view'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_add_location'
op|'('
name|'robj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'400'
op|','
number|'403'
op|','
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'create_image'"
op|')'
newline|'\n'
op|'@'
name|'common'
op|'.'
name|'check_snapshots_enabled'
newline|'\n'
DECL|member|_action_create_image
name|'def'
name|'_action_create_image'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Snapshot a server instance."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'entity'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|'"create_image"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'image_name'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'image_name'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"create_image entity requires name attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'props'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'metadata'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'common'
op|'.'
name|'check_img_metadata_properties_quota'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'props'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid metadata"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'is_volume_backed_instance'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'bdms'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'img'
op|'='
name|'instance'
op|'['
string|"'image_ref'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'img'
op|':'
newline|'\n'
indent|'                    '
name|'properties'
op|'='
name|'bdms'
op|'.'
name|'root_metadata'
op|'('
nl|'\n'
name|'context'
op|','
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'image_meta'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'img'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot_volume_backed'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'create_image'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'err'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# build location of newly-created image entity'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'str'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'image_ref'
op|'='
name|'glance'
op|'.'
name|'generate_image_url'
op|'('
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Location'"
op|']'
op|'='
name|'image_ref'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|_get_server_admin_password
dedent|''
name|'def'
name|'_get_server_admin_password'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Determine the admin password for a server on creation."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'server'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_admin_password'
op|'('
name|'password'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'utils'
op|'.'
name|'generate_password'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'_'
op|'('
string|'"Invalid adminPass"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'password'
newline|'\n'
nl|'\n'
DECL|member|_validate_admin_password
dedent|''
name|'def'
name|'_validate_admin_password'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'password'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_search_options
dedent|''
dedent|''
name|'def'
name|'_get_server_search_options'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return server search options allowed by non-admin."""'
newline|'\n'
name|'return'
op|'('
string|"'reservation_id'"
op|','
string|"'name'"
op|','
string|"'status'"
op|','
string|"'image'"
op|','
string|"'flavor'"
op|','
nl|'\n'
string|"'ip'"
op|','
string|"'changes_since'"
op|','
string|"'all_tenants'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_instance
dedent|''
name|'def'
name|'_get_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'='
op|'['
string|"'system_metadata'"
op|','
string|"'metadata'"
op|']'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'attrs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'start'"
op|')'
newline|'\n'
DECL|member|_start_server
name|'def'
name|'_start_server'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start an instance."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'authorizer'
op|'('
name|'context'
op|','
name|'instance'
op|','
string|"'start'"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'start instance'"
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
name|'exception'
op|'.'
name|'InstanceIsLocked'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'extensions'
op|'.'
name|'expected_errors'
op|'('
op|'('
number|'404'
op|','
number|'409'
op|')'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'stop'"
op|')'
newline|'\n'
DECL|member|_stop_server
name|'def'
name|'_stop_server'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stop an instance."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'authorizer'
op|'('
name|'context'
op|','
name|'instance'
op|','
string|"'stop'"
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'stop instance'"
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
name|'exception'
op|'.'
name|'InstanceIsLocked'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|'('
name|'explanation'
op|'='
name|'e'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|remove_invalid_options
dedent|''
dedent|''
name|'def'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_options'
op|','
name|'allowed_search_options'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove search options that are not valid for non-admin API/context."""'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|'# Allow all options'
nl|'\n'
indent|'        '
name|'return'
newline|'\n'
comment|'# Otherwise, strip out all unknown options'
nl|'\n'
dedent|''
name|'unknown_options'
op|'='
op|'['
name|'opt'
name|'for'
name|'opt'
name|'in'
name|'search_options'
nl|'\n'
name|'if'
name|'opt'
name|'not'
name|'in'
name|'allowed_search_options'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Removing options \'%s\' from query"'
op|','
nl|'\n'
string|'", "'
op|'.'
name|'join'
op|'('
name|'unknown_options'
op|')'
op|')'
newline|'\n'
name|'for'
name|'opt'
name|'in'
name|'unknown_options'
op|':'
newline|'\n'
indent|'        '
name|'search_options'
op|'.'
name|'pop'
op|'('
name|'opt'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Servers
dedent|''
dedent|''
name|'class'
name|'Servers'
op|'('
name|'extensions'
op|'.'
name|'V3APIExtensionBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Servers."""'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
string|'"Servers"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|'"servers"'
newline|'\n'
DECL|variable|version
name|'version'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|get_resources
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'member_actions'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'POST'"
op|'}'
newline|'\n'
name|'collection_actions'
op|'='
op|'{'
string|"'detail'"
op|':'
string|"'GET'"
op|'}'
newline|'\n'
name|'resources'
op|'='
op|'['
nl|'\n'
name|'extensions'
op|'.'
name|'ResourceExtension'
op|'('
nl|'\n'
string|"'servers'"
op|','
nl|'\n'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'self'
op|'.'
name|'extension_info'
op|')'
op|','
nl|'\n'
name|'member_name'
op|'='
string|"'server'"
op|','
name|'collection_actions'
op|'='
name|'collection_actions'
op|','
nl|'\n'
name|'member_actions'
op|'='
name|'member_actions'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'resources'
newline|'\n'
nl|'\n'
DECL|member|get_controller_extensions
dedent|''
name|'def'
name|'get_controller_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
