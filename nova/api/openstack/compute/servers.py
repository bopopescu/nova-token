begin_unit
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'ips'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'views'
name|'import'
name|'servers'
name|'as'
name|'views_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'config'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'rpc'
name|'import'
name|'common'
name|'as'
name|'rpc_common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'config'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|make_fault
name|'def'
name|'make_fault'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fault'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'fault'"
op|','
name|'selector'
op|'='
string|"'fault'"
op|')'
newline|'\n'
name|'fault'
op|'.'
name|'set'
op|'('
string|"'code'"
op|')'
newline|'\n'
name|'fault'
op|'.'
name|'set'
op|'('
string|"'created'"
op|')'
newline|'\n'
name|'msg'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'fault'
op|','
string|"'message'"
op|')'
newline|'\n'
name|'msg'
op|'.'
name|'text'
op|'='
string|"'message'"
newline|'\n'
name|'det'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'fault'
op|','
string|"'details'"
op|')'
newline|'\n'
name|'det'
op|'.'
name|'text'
op|'='
string|"'details'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|make_server
dedent|''
name|'def'
name|'make_server'
op|'('
name|'elem'
op|','
name|'detailed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'elem'
op|'.'
name|'set'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'detailed'
op|':'
newline|'\n'
indent|'        '
name|'elem'
op|'.'
name|'set'
op|'('
string|"'userId'"
op|','
string|"'user_id'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'tenantId'"
op|','
string|"'tenant_id'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'updated'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'created'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'hostId'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'accessIPv4'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'accessIPv6'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'status'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'progress'"
op|')'
newline|'\n'
name|'elem'
op|'.'
name|'set'
op|'('
string|"'reservation_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach image node'
nl|'\n'
name|'image'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'image'"
op|','
name|'selector'
op|'='
string|"'image'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'make_links'
op|'('
name|'image'
op|','
string|"'links'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach flavor node'
nl|'\n'
name|'flavor'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'flavor'"
op|','
name|'selector'
op|'='
string|"'flavor'"
op|')'
newline|'\n'
name|'flavor'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'make_links'
op|'('
name|'flavor'
op|','
string|"'links'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach fault node'
nl|'\n'
name|'make_fault'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach metadata node'
nl|'\n'
name|'elem'
op|'.'
name|'append'
op|'('
name|'common'
op|'.'
name|'MetadataTemplate'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Attach addresses node'
nl|'\n'
name|'elem'
op|'.'
name|'append'
op|'('
name|'ips'
op|'.'
name|'AddressesTemplate'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'xmlutil'
op|'.'
name|'make_links'
op|'('
name|'elem'
op|','
string|"'links'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|server_nsmap
dedent|''
name|'server_nsmap'
op|'='
op|'{'
name|'None'
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_V11'
op|','
string|"'atom'"
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_ATOM'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerTemplate
name|'class'
name|'ServerTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'server'"
op|','
name|'selector'
op|'='
string|"'server'"
op|')'
newline|'\n'
name|'make_server'
op|'('
name|'root'
op|','
name|'detailed'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'server_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MinimalServersTemplate
dedent|''
dedent|''
name|'class'
name|'MinimalServersTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'servers'"
op|')'
newline|'\n'
name|'elem'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'root'
op|','
string|"'server'"
op|','
name|'selector'
op|'='
string|"'servers'"
op|')'
newline|'\n'
name|'make_server'
op|'('
name|'elem'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'make_links'
op|'('
name|'root'
op|','
string|"'servers_links'"
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'server_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersTemplate
dedent|''
dedent|''
name|'class'
name|'ServersTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'servers'"
op|')'
newline|'\n'
name|'elem'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'root'
op|','
string|"'server'"
op|','
name|'selector'
op|'='
string|"'servers'"
op|')'
newline|'\n'
name|'make_server'
op|'('
name|'elem'
op|','
name|'detailed'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'server_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerAdminPassTemplate
dedent|''
dedent|''
name|'class'
name|'ServerAdminPassTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'server'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'adminPass'"
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'SlaveTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'server_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|FullServerTemplate
dedent|''
dedent|''
name|'def'
name|'FullServerTemplate'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'master'
op|'='
name|'ServerTemplate'
op|'('
op|')'
newline|'\n'
name|'master'
op|'.'
name|'attach'
op|'('
name|'ServerAdminPassTemplate'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'master'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CommonDeserializer
dedent|''
name|'class'
name|'CommonDeserializer'
op|'('
name|'wsgi'
op|'.'
name|'MetadataXMLDeserializer'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Common deserializer to handle xml-formatted server create requests.\n\n    Handles standard server attributes as well as optional metadata\n    and personality attributes\n    """'
newline|'\n'
nl|'\n'
DECL|variable|metadata_deserializer
name|'metadata_deserializer'
op|'='
name|'common'
op|'.'
name|'MetadataXMLDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_extract_personality
name|'def'
name|'_extract_personality'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the personality attribute of a parsed request."""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"personality"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'personality'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'file_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
string|'"file"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'file_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"path"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"path"'
op|']'
op|'='
name|'file_node'
op|'.'
name|'getAttribute'
op|'('
string|'"path"'
op|')'
newline|'\n'
dedent|''
name|'item'
op|'['
string|'"contents"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'file_node'
op|')'
newline|'\n'
name|'personality'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'personality'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_server
dedent|''
dedent|''
name|'def'
name|'_extract_server'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the server attribute of a parsed request."""'
newline|'\n'
name|'server'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'server_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'attributes'
op|'='
op|'['
string|'"name"'
op|','
string|'"imageRef"'
op|','
string|'"flavorRef"'
op|','
string|'"adminPass"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|','
string|'"accessIPv6"'
op|','
string|'"key_name"'
op|','
nl|'\n'
string|'"availability_zone"'
op|','
string|'"min_count"'
op|','
string|'"max_count"'
op|']'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'['
name|'attr'
op|']'
op|'='
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'res_id'
op|'='
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
string|"'return_reservation_id'"
op|')'
newline|'\n'
name|'if'
name|'res_id'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'return_reservation_id'"
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
name|'res_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'scheduler_hints'
op|'='
name|'self'
op|'.'
name|'_extract_scheduler_hints'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'scheduler_hints'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'OS-SCH-HNT:scheduler_hints'"
op|']'
op|'='
name|'scheduler_hints'
newline|'\n'
nl|'\n'
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"metadata"'
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"metadata"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_metadata'
op|'('
name|'metadata_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'user_data_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"user_data"'
op|')'
newline|'\n'
name|'if'
name|'user_data_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"user_data"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'user_data_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personality'
op|'='
name|'self'
op|'.'
name|'_extract_personality'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'personality'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"personality"'
op|']'
op|'='
name|'personality'
newline|'\n'
nl|'\n'
dedent|''
name|'networks'
op|'='
name|'self'
op|'.'
name|'_extract_networks'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'networks'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"networks"'
op|']'
op|'='
name|'networks'
newline|'\n'
nl|'\n'
dedent|''
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'_extract_security_groups'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'security_groups'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"security_groups"'
op|']'
op|'='
name|'security_groups'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): this is not namespaced in json, so leave it without a'
nl|'\n'
comment|'#             namespace for now'
nl|'\n'
dedent|''
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'_extract_block_device_mapping'
op|'('
name|'server_node'
op|')'
newline|'\n'
name|'if'
name|'block_device_mapping'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|'"block_device_mapping"'
op|']'
op|'='
name|'block_device_mapping'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): Support this incorrect version because it was in the code'
nl|'\n'
comment|"#             base for a while and we don't want to accidentally break"
nl|'\n'
comment|'#             anyone that might be using it.'
nl|'\n'
dedent|''
name|'auto_disk_config'
op|'='
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
string|"'auto_disk_config'"
op|')'
newline|'\n'
name|'if'
name|'auto_disk_config'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'OS-DCF:diskConfig'"
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
name|'auto_disk_config'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'auto_disk_config'
op|'='
name|'server_node'
op|'.'
name|'getAttribute'
op|'('
string|"'OS-DCF:diskConfig'"
op|')'
newline|'\n'
name|'if'
name|'auto_disk_config'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
string|"'OS-DCF:diskConfig'"
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
name|'auto_disk_config'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'server'
newline|'\n'
nl|'\n'
DECL|member|_extract_block_device_mapping
dedent|''
name|'def'
name|'_extract_block_device_mapping'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the block_device_mapping node of a parsed request"""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"block_device_mapping"'
op|')'
newline|'\n'
name|'if'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'block_device_mapping'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'self'
op|'.'
name|'extract_elements'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'child'
op|'.'
name|'nodeName'
op|'!='
string|'"mapping"'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'mapping'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'attributes'
op|'='
op|'['
string|'"volume_id"'
op|','
string|'"snapshot_id"'
op|','
string|'"device_name"'
op|','
nl|'\n'
string|'"virtual_name"'
op|','
string|'"volume_size"'
op|']'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'                    '
name|'value'
op|'='
name|'child'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                        '
name|'mapping'
op|'['
name|'attr'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'attributes'
op|'='
op|'['
string|'"delete_on_termination"'
op|','
string|'"no_device"'
op|']'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'                    '
name|'value'
op|'='
name|'child'
op|'.'
name|'getAttribute'
op|'('
name|'attr'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                        '
name|'mapping'
op|'['
name|'attr'
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'block_device_mapping'
op|'.'
name|'append'
op|'('
name|'mapping'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'block_device_mapping'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_scheduler_hints
dedent|''
dedent|''
name|'def'
name|'_extract_scheduler_hints'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the scheduler hints attribute of a parsed request"""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named_in_namespace'
op|'('
name|'server_node'
op|','
nl|'\n'
string|'"http://docs.openstack.org/compute/ext/scheduler-hints/api/v2"'
op|','
nl|'\n'
string|'"scheduler_hints"'
op|')'
newline|'\n'
name|'if'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_hints'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'self'
op|'.'
name|'extract_elements'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'scheduler_hints'
op|'.'
name|'setdefault'
op|'('
name|'child'
op|'.'
name|'nodeName'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'child'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'scheduler_hints'
op|'['
name|'child'
op|'.'
name|'nodeName'
op|']'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'scheduler_hints'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_networks
dedent|''
dedent|''
name|'def'
name|'_extract_networks'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the networks attribute of a parsed request."""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"networks"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
nl|'\n'
string|'"network"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'network_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"uuid"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"uuid"'
op|']'
op|'='
name|'network_node'
op|'.'
name|'getAttribute'
op|'('
string|'"uuid"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'network_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"fixed_ip"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"fixed_ip"'
op|']'
op|'='
name|'network_node'
op|'.'
name|'getAttribute'
op|'('
string|'"fixed_ip"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'network_node'
op|'.'
name|'hasAttribute'
op|'('
string|'"port"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"port"'
op|']'
op|'='
name|'network_node'
op|'.'
name|'getAttribute'
op|'('
string|'"port"'
op|')'
newline|'\n'
dedent|''
name|'networks'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'networks'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_extract_security_groups
dedent|''
dedent|''
name|'def'
name|'_extract_security_groups'
op|'('
name|'self'
op|','
name|'server_node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marshal the security_groups attribute of a parsed request."""'
newline|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'server_node'
op|','
string|'"security_groups"'
op|')'
newline|'\n'
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'sg_node'
name|'in'
name|'self'
op|'.'
name|'find_children_named'
op|'('
name|'node'
op|','
string|'"security_group"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'name'
op|'='
name|'self'
op|'.'
name|'find_attribute_or_element'
op|'('
name|'sg_node'
op|','
string|"'name'"
op|')'
newline|'\n'
name|'if'
name|'name'
op|':'
newline|'\n'
indent|'                    '
name|'item'
op|'['
string|'"name"'
op|']'
op|'='
name|'name'
newline|'\n'
name|'security_groups'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'security_groups'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ActionDeserializer
dedent|''
dedent|''
dedent|''
name|'class'
name|'ActionDeserializer'
op|'('
name|'CommonDeserializer'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deserializer to handle xml-formatted server action requests.\n\n    Handles standard server attributes as well as optional metadata\n    and personality attributes\n    """'
newline|'\n'
nl|'\n'
DECL|member|default
name|'def'
name|'default'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'string'
op|')'
newline|'\n'
name|'action_node'
op|'='
name|'dom'
op|'.'
name|'childNodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'action_name'
op|'='
name|'action_node'
op|'.'
name|'tagName'
newline|'\n'
nl|'\n'
name|'action_deserializer'
op|'='
op|'{'
nl|'\n'
string|"'createImage'"
op|':'
name|'self'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
string|"'changePassword'"
op|':'
name|'self'
op|'.'
name|'_action_change_password'
op|','
nl|'\n'
string|"'reboot'"
op|':'
name|'self'
op|'.'
name|'_action_reboot'
op|','
nl|'\n'
string|"'rebuild'"
op|':'
name|'self'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
string|"'resize'"
op|':'
name|'self'
op|'.'
name|'_action_resize'
op|','
nl|'\n'
string|"'confirmResize'"
op|':'
name|'self'
op|'.'
name|'_action_confirm_resize'
op|','
nl|'\n'
string|"'revertResize'"
op|':'
name|'self'
op|'.'
name|'_action_revert_resize'
op|','
nl|'\n'
op|'}'
op|'.'
name|'get'
op|'('
name|'action_name'
op|','
name|'super'
op|'('
name|'ActionDeserializer'
op|','
name|'self'
op|')'
op|'.'
name|'default'
op|')'
newline|'\n'
nl|'\n'
name|'action_data'
op|'='
name|'action_deserializer'
op|'('
name|'action_node'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'body'"
op|':'
op|'{'
name|'action_name'
op|':'
name|'action_data'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_create_image
dedent|''
name|'def'
name|'_action_create_image'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_deserialize_image_action'
op|'('
name|'node'
op|','
op|'('
string|"'name'"
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_action_change_password
dedent|''
name|'def'
name|'_action_change_password'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"adminPass"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No adminPass was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"adminPass"'
op|':'
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"adminPass"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_reboot
dedent|''
name|'def'
name|'_action_reboot'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"type"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No reboot type was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"type"'
op|':'
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"type"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_action_rebuild
dedent|''
name|'def'
name|'_action_rebuild'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rebuild'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"name"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"name"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'name'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'AttributeError'
op|'('
string|'"Name cannot be blank"'
op|')'
newline|'\n'
dedent|''
name|'rebuild'
op|'['
string|"'name'"
op|']'
op|'='
name|'name'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"auto_disk_config"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"auto_disk_config"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|'"metadata"'
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"metadata"'
op|']'
op|'='
name|'self'
op|'.'
name|'extract_metadata'
op|'('
name|'metadata_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'personality'
op|'='
name|'self'
op|'.'
name|'_extract_personality'
op|'('
name|'node'
op|')'
newline|'\n'
name|'if'
name|'personality'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"personality"'
op|']'
op|'='
name|'personality'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"imageRef"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No imageRef was specified in request"'
op|')'
newline|'\n'
dedent|''
name|'rebuild'
op|'['
string|'"imageRef"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"imageRef"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"adminPass"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"adminPass"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"adminPass"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"accessIPv4"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"accessIPv4"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"accessIPv4"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"accessIPv6"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rebuild'
op|'['
string|'"accessIPv6"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"accessIPv6"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'rebuild'
newline|'\n'
nl|'\n'
DECL|member|_action_resize
dedent|''
name|'def'
name|'_action_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resize'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"flavorRef"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resize'
op|'['
string|'"flavorRef"'
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"flavorRef"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
string|'"No flavorRef was specified in request"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'node'
op|'.'
name|'hasAttribute'
op|'('
string|'"auto_disk_config"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resize'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
string|'"auto_disk_config"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'resize'
newline|'\n'
nl|'\n'
DECL|member|_action_confirm_resize
dedent|''
name|'def'
name|'_action_confirm_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_action_revert_resize
dedent|''
name|'def'
name|'_action_revert_resize'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_deserialize_image_action
dedent|''
name|'def'
name|'_deserialize_image_action'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'allowed_attributes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'attribute'
name|'in'
name|'allowed_attributes'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'node'
op|'.'
name|'getAttribute'
op|'('
name|'attribute'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'['
name|'attribute'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'metadata_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
string|"'metadata'"
op|')'
newline|'\n'
name|'if'
name|'metadata_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'self'
op|'.'
name|'metadata_deserializer'
op|'.'
name|'extract_metadata'
op|'('
nl|'\n'
name|'metadata_node'
op|')'
newline|'\n'
name|'data'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CreateDeserializer
dedent|''
dedent|''
name|'class'
name|'CreateDeserializer'
op|'('
name|'CommonDeserializer'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deserializer to handle xml-formatted server create requests.\n\n    Handles standard server attributes as well as optional metadata\n    and personality attributes\n    """'
newline|'\n'
nl|'\n'
DECL|member|default
name|'def'
name|'default'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deserialize an xml-formatted server create request."""'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'string'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_extract_server'
op|'('
name|'dom'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'body'"
op|':'
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Controller
dedent|''
dedent|''
name|'class'
name|'Controller'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The Server API base controller class for the OpenStack API."""'
newline|'\n'
nl|'\n'
DECL|variable|_view_builder_class
name|'_view_builder_class'
op|'='
name|'views_servers'
op|'.'
name|'ViewBuilder'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_add_location
name|'def'
name|'_add_location'
op|'('
name|'robj'
op|')'
op|':'
newline|'\n'
comment|'# Just in case...'
nl|'\n'
indent|'        '
name|'if'
string|"'server'"
name|'not'
name|'in'
name|'robj'
op|'.'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'robj'
newline|'\n'
nl|'\n'
dedent|''
name|'link'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'l'
op|':'
name|'l'
op|'['
string|"'rel'"
op|']'
op|'=='
string|"'self'"
op|','
nl|'\n'
name|'robj'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
op|'['
string|"'links'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'link'
op|':'
newline|'\n'
indent|'            '
name|'robj'
op|'['
string|"'Location'"
op|']'
op|'='
name|'link'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Convenience return'
nl|'\n'
dedent|''
name|'return'
name|'robj'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'ext_mgr'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Controller'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'ext_mgr'
newline|'\n'
name|'self'
op|'.'
name|'quantum_attempted'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'MinimalServersTemplate'
op|')'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of server names and ids for a given user."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'ServersTemplate'
op|')'
newline|'\n'
DECL|member|detail
name|'def'
name|'detail'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of server details for a given user."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'servers'
op|'='
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'req'
op|','
name|'is_detail'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
DECL|member|_add_instance_faults
dedent|''
name|'def'
name|'_add_instance_faults'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'faults'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_instance_faults'
op|'('
name|'ctxt'
op|','
name|'instances'
op|')'
newline|'\n'
name|'if'
name|'faults'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'                '
name|'faults_list'
op|'='
name|'faults'
op|'.'
name|'get'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'faults_list'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'instances'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'is_detail'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a list of servers, based on any search options specified."""'
newline|'\n'
nl|'\n'
name|'search_opts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'search_opts'
op|'.'
name|'update'
op|'('
name|'req'
op|'.'
name|'GET'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_opts'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_server_search_options'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Verify search by 'status' contains a valid status."
nl|'\n'
comment|'# Convert it to filter by vm_state for compute_api.'
nl|'\n'
name|'status'
op|'='
name|'search_opts'
op|'.'
name|'pop'
op|'('
string|"'status'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'status'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'state'
op|'='
name|'common'
op|'.'
name|'vm_state_from_status'
op|'('
name|'status'
op|')'
newline|'\n'
name|'if'
name|'state'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'servers'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'state'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'changes-since'"
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'parsed'
op|'='
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Invalid changes-since value'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|'='
name|'parsed'
newline|'\n'
nl|'\n'
comment|"# By default, compute's get_all() will return deleted instances."
nl|'\n'
comment|"# If an admin hasn't specified a 'deleted' search option, we need"
nl|'\n'
comment|'# to filter out deleted instances by setting the filter ourselves.'
nl|'\n'
comment|"# ... Unless 'changes-since' is specified, because 'changes-since'"
nl|'\n'
comment|'# should return recently deleted images according to the API spec.'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'deleted'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'changes-since'"
name|'not'
name|'in'
name|'search_opts'
op|':'
newline|'\n'
comment|"# No 'changes-since', so we only want non-deleted servers"
nl|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'search_opts'
op|'.'
name|'get'
op|'('
string|'"vm_state"'
op|')'
op|'=='
string|'"deleted"'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Only administrators may list deleted instances"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(dprince) This prevents computes' get_all() from returning"
nl|'\n'
comment|'# instances from multiple tenants when an admin accounts is used.'
nl|'\n'
comment|'# By default non-admin accounts are always limited to project/user'
nl|'\n'
comment|'# both here and in the compute API.'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
name|'or'
op|'('
name|'context'
op|'.'
name|'is_admin'
name|'and'
string|"'all_tenants'"
nl|'\n'
name|'not'
name|'in'
name|'search_opts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'search_opts'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'limit'
op|','
name|'marker'
op|'='
name|'common'
op|'.'
name|'get_limit_and_marker'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance_list'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'context'
op|','
nl|'\n'
name|'search_opts'
op|'='
name|'search_opts'
op|','
nl|'\n'
name|'limit'
op|'='
name|'limit'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MarkerNotFound'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'marker [%s] not found'"
op|')'
op|'%'
name|'marker'
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'is_detail'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_add_instance_faults'
op|'('
name|'context'
op|','
name|'instance_list'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'detail'
op|'('
name|'req'
op|','
name|'instance_list'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'index'
op|'('
name|'req'
op|','
name|'instance_list'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'cache_db_instances'
op|'('
name|'instance_list'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function for looking up an instance by uuid."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_validate_server_name
dedent|''
name|'def'
name|'_validate_server_name'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is not a string or unicode"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'value'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is an empty string"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'len'
op|'('
name|'value'
op|')'
op|'<'
number|'256'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name must be less than 256 characters."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_injected_files
dedent|''
dedent|''
name|'def'
name|'_get_injected_files'
op|'('
name|'self'
op|','
name|'personality'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a list of injected files from the personality attribute.\n\n        At this time, injected_files must be formatted as a list of\n        (file_path, file_content) pairs for compatibility with the\n        underlying compute service.\n        """'
newline|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'personality'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'item'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'contents'
op|'='
name|'item'
op|'['
string|"'contents'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad personality format: missing %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad personality format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'contents'
op|'='
name|'self'
op|'.'
name|'_decode_base64'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'if'
name|'contents'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Personality content for %s cannot be decoded'"
op|')'
op|'%'
name|'path'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'injected_files'
op|'.'
name|'append'
op|'('
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'injected_files'
newline|'\n'
nl|'\n'
DECL|member|_is_quantum_v2
dedent|''
name|'def'
name|'_is_quantum_v2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(dprince): quantumclient is not a requirement'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'quantum_attempted'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'have_quantum'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'quantum_attempted'
op|'='
name|'True'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'quantumv2'
name|'import'
name|'api'
name|'as'
name|'quantum_api'
newline|'\n'
name|'self'
op|'.'
name|'have_quantum'
op|'='
name|'issubclass'
op|'('
nl|'\n'
name|'importutils'
op|'.'
name|'import_class'
op|'('
name|'CONF'
op|'.'
name|'network_api_class'
op|')'
op|','
nl|'\n'
name|'quantum_api'
op|'.'
name|'API'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'have_quantum'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'have_quantum'
newline|'\n'
nl|'\n'
DECL|member|_get_requested_networks
dedent|''
name|'def'
name|'_get_requested_networks'
op|'('
name|'self'
op|','
name|'requested_networks'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a list of requested networks from the networks attribute."""'
newline|'\n'
name|'networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'requested_networks'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'port_id'
op|'='
name|'network'
op|'.'
name|'get'
op|'('
string|"'port'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'port_id'
op|':'
newline|'\n'
indent|'                    '
name|'network_uuid'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_is_quantum_v2'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# port parameter is only for qunatum v2.0'
nl|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unknown argment : port"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'port_id'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Bad port format: port uuid is "'
nl|'\n'
string|'"not in proper format "'
nl|'\n'
string|'"(%s)"'
op|')'
op|'%'
name|'port_id'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'network_uuid'
op|'='
name|'network'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'port_id'
name|'and'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'network_uuid'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'br_uuid'
op|'='
name|'network_uuid'
op|'.'
name|'split'
op|'('
string|"'-'"
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'br_uuid'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Bad networks format: network uuid is "'
nl|'\n'
string|'"not in proper format "'
nl|'\n'
string|'"(%s)"'
op|')'
op|'%'
name|'network_uuid'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'#fixed IP address is optional'
nl|'\n'
comment|'#if the fixed IP address is not provided then'
nl|'\n'
comment|'#it will use one of the available IP address from the network'
nl|'\n'
dedent|''
dedent|''
name|'address'
op|'='
name|'network'
op|'.'
name|'get'
op|'('
string|"'fixed_ip'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'address'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'utils'
op|'.'
name|'is_valid_ipv4'
op|'('
name|'address'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid fixed IP address (%s)"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# For quantumv2, requestd_networks'
nl|'\n'
comment|'# should be tuple of (network_uuid, fixed_ip, port_id)'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'_is_quantum_v2'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'networks'
op|'.'
name|'append'
op|'('
op|'('
name|'network_uuid'
op|','
name|'address'
op|','
name|'port_id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# check if the network id is already present in the list,'
nl|'\n'
comment|"# we don't want duplicate networks to be passed"
nl|'\n'
comment|'# at the boot time'
nl|'\n'
indent|'                    '
name|'for'
name|'id'
op|','
name|'ip'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'id'
op|'=='
name|'network_uuid'
op|':'
newline|'\n'
indent|'                            '
name|'expl'
op|'='
op|'('
name|'_'
op|'('
string|'"Duplicate networks"'
nl|'\n'
string|'" (%s) are not allowed"'
op|')'
op|'%'
nl|'\n'
name|'network_uuid'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'networks'
op|'.'
name|'append'
op|'('
op|'('
name|'network_uuid'
op|','
name|'address'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad network format: missing %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Bad networks format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'networks'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): Without this regex, b64decode will happily'
nl|'\n'
comment|'#             ignore illegal bytes in the base64 encoded'
nl|'\n'
comment|'#             data.'
nl|'\n'
DECL|variable|B64_REGEX
dedent|''
name|'B64_REGEX'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^(?:[A-Za-z0-9+\\/]{4})*'"
nl|'\n'
string|"'(?:[A-Za-z0-9+\\/]{2}=='"
nl|'\n'
string|"'|[A-Za-z0-9+\\/]{3}=)?$'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_decode_base64
name|'def'
name|'_decode_base64'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s'"
op|','
string|"''"
op|','
name|'data'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'B64_REGEX'
op|'.'
name|'match'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_validate_user_data
dedent|''
dedent|''
name|'def'
name|'_validate_user_data'
op|'('
name|'self'
op|','
name|'user_data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the user_data is encoded properly."""'
newline|'\n'
name|'if'
name|'not'
name|'user_data'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'_decode_base64'
op|'('
name|'user_data'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'expl'
op|'='
name|'_'
op|'('
string|"'Userdata content cannot be decoded'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_access_ipv4
dedent|''
dedent|''
name|'def'
name|'_validate_access_ipv4'
op|'('
name|'self'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'socket'
op|'.'
name|'inet_aton'
op|'('
name|'address'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'expl'
op|'='
name|'_'
op|'('
string|"'accessIPv4 is not proper IPv4 format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_access_ipv6
dedent|''
dedent|''
name|'def'
name|'_validate_access_ipv6'
op|'('
name|'self'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'socket'
op|'.'
name|'inet_pton'
op|'('
name|'socket'
op|'.'
name|'AF_INET6'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'expl'
op|'='
name|'_'
op|'('
string|"'accessIPv6 is not proper IPv6 format'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'expl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'ServerTemplate'
op|')'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns server details by server id."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_instance_faults'
op|'('
name|'context'
op|','
op|'['
name|'instance'
op|']'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'CreateDeserializer'
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new server for a given user."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_valid_body'
op|'('
name|'body'
op|','
string|"'server'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'server_dict'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'_get_server_admin_password'
op|'('
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
string|"'name'"
name|'in'
name|'server_dict'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Server name is not defined"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'name'
op|'='
name|'server_dict'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_image_ref_from_req_data'
op|'('
name|'body'
op|')'
newline|'\n'
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_image_uuid_from_href'
op|'('
name|'image_href'
op|')'
newline|'\n'
nl|'\n'
name|'personality'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'personality'"
op|')'
newline|'\n'
name|'config_drive'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-config-drive'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'config_drive'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'config_drive'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'personality'
op|':'
newline|'\n'
indent|'            '
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_get_injected_files'
op|'('
name|'personality'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sg_names'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-security-groups'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'security_groups'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
name|'if'
name|'security_groups'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'sg_names'
op|'='
op|'['
name|'sg'
op|'['
string|"'name'"
op|']'
name|'for'
name|'sg'
name|'in'
name|'security_groups'
nl|'\n'
name|'if'
name|'sg'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'sg_names'
op|':'
newline|'\n'
indent|'            '
name|'sg_names'
op|'.'
name|'append'
op|'('
string|"'default'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sg_names'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'sg_names'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-networks'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'networks'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'requested_networks'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'_get_requested_networks'
op|'('
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'('
name|'access_ip_v4'
op|','
op|')'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'accessIPv4'"
op|')'
op|','
newline|'\n'
name|'if'
name|'access_ip_v4'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_access_ipv4'
op|'('
name|'access_ip_v4'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'('
name|'access_ip_v6'
op|','
op|')'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'accessIPv6'"
op|')'
op|','
newline|'\n'
name|'if'
name|'access_ip_v6'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_access_ipv6'
op|'('
name|'access_ip_v6'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_id'
op|'='
name|'self'
op|'.'
name|'_flavor_id_from_req_data'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# optional openstack extensions:'
nl|'\n'
dedent|''
name|'key_name'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-keypairs'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key_name'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'key_name'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'user_data'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-user-data'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user_data'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'user_data'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_validate_user_data'
op|'('
name|'user_data'
op|')'
newline|'\n'
nl|'\n'
name|'availability_zone'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-availability-zone'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'availability_zone'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'block_device_mapping'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-volumes'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'block_device_mapping'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'block_device_mapping'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'block_device_mapping'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'delete_on_termination'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'bdm'
op|'['
string|"'delete_on_termination'"
op|']'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
nl|'\n'
name|'bdm'
op|'['
string|"'delete_on_termination'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'ret_resv_id'
op|'='
name|'False'
newline|'\n'
comment|'# min_count and max_count are optional.  If they exist, they may come'
nl|'\n'
comment|'# in as strings.  Verify that they are valid integers and > 0.'
nl|'\n'
comment|"# Also, we want to default 'min_count' to 1, and default"
nl|'\n'
comment|"# 'max_count' to be 'min_count'."
nl|'\n'
name|'min_count'
op|'='
number|'1'
newline|'\n'
name|'max_count'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-multiple-create'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ret_resv_id'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'return_reservation_id'"
op|','
name|'False'
op|')'
newline|'\n'
name|'min_count'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'min_count'"
op|','
number|'1'
op|')'
newline|'\n'
name|'max_count'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'max_count'"
op|','
name|'min_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'min_count'
op|'='
name|'int'
op|'('
name|'min_count'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|"'min_count must be an '"
nl|'\n'
string|"'integer value'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'min_count'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|"'min_count must be > 0'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'max_count'
op|'='
name|'int'
op|'('
name|'max_count'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|"'max_count must be an '"
nl|'\n'
string|"'integer value'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'max_count'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|"'max_count must be > 0'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'min_count'
op|'>'
name|'max_count'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|"'min_count must be <= max_count'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'auto_disk_config'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'OS-DCF'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auto_disk_config'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'auto_disk_config'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'scheduler_hints'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'OS-SCH-HNT'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_hints'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'scheduler_hints'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_get_inst_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_flavor_id'
newline|'\n'
name|'inst_type'
op|'='
name|'_get_inst_type'
op|'('
name|'flavor_id'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'instances'
op|','
name|'resv_id'
op|')'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_type'
op|','
nl|'\n'
name|'image_href'
op|','
nl|'\n'
name|'display_name'
op|'='
name|'name'
op|','
nl|'\n'
name|'display_description'
op|'='
name|'name'
op|','
nl|'\n'
name|'key_name'
op|'='
name|'key_name'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'server_dict'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'access_ip_v4'
op|'='
name|'access_ip_v4'
op|','
nl|'\n'
name|'access_ip_v6'
op|'='
name|'access_ip_v6'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'password'
op|','
nl|'\n'
name|'min_count'
op|'='
name|'min_count'
op|','
nl|'\n'
name|'max_count'
op|'='
name|'max_count'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|','
nl|'\n'
name|'security_group'
op|'='
name|'sg_names'
op|','
nl|'\n'
name|'user_data'
op|'='
name|'user_data'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'config_drive'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'block_device_mapping'
op|','
nl|'\n'
name|'auto_disk_config'
op|'='
name|'auto_disk_config'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'scheduler_hints'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'QuotaError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Retry-After'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeMemoryTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeDiskTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadata'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadataSize'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Can not find requested image"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid flavorRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'KeypairNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid key_name provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rpc_common'
op|'.'
name|'RemoteError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"%(err_type)s: %(err_msg)s"'
op|'%'
op|'{'
string|"'err_type'"
op|':'
name|'err'
op|'.'
name|'exc_type'
op|','
nl|'\n'
string|"'err_msg'"
op|':'
name|'err'
op|'.'
name|'value'
op|'}'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"UnicodeError: %s"'
op|'%'
name|'unicode'
op|'('
name|'error'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
comment|'# Let the caller deal with unhandled exceptions.'
nl|'\n'
nl|'\n'
comment|'# If the caller wanted a reservation_id, return it'
nl|'\n'
nl|'\n'
comment|'# NOTE(treinish): XML serialization will not work without a root'
nl|'\n'
comment|"# selector of 'server' however JSON return is not expecting a server"
nl|'\n'
comment|'# field/object'
nl|'\n'
dedent|''
name|'if'
name|'ret_resv_id'
name|'and'
op|'('
name|'req'
op|'.'
name|'get_content_type'
op|'('
op|')'
op|'=='
string|"'application/xml'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'reservation_id'"
op|':'
name|'resv_id'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'ret_resv_id'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'reservation_id'"
op|':'
name|'resv_id'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'.'
name|'cache_db_instances'
op|'('
name|'instances'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'create'
op|'('
name|'req'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'_is_precooked'"
name|'in'
name|'server'
op|'['
string|"'server'"
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'_is_precooked'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'CONF'
op|'.'
name|'enable_instance_password'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'robj'
op|'='
name|'wsgi'
op|'.'
name|'ResponseObject'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_add_location'
op|'('
name|'robj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_delete
dedent|''
name|'def'
name|'_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'reclaim_instance_interval'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'ServerTemplate'
op|')'
newline|'\n'
DECL|member|update
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update server then pass on to version-specific controller."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_valid_body'
op|'('
name|'body'
op|','
string|"'server'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'update_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'name'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'name'
op|')'
newline|'\n'
name|'update_dict'
op|'['
string|"'display_name'"
op|']'
op|'='
name|'name'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'accessIPv4'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'access_ipv4'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
newline|'\n'
name|'if'
name|'access_ipv4'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'access_ipv4'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'access_ipv4'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_validate_access_ipv4'
op|'('
name|'access_ipv4'
op|')'
newline|'\n'
dedent|''
name|'update_dict'
op|'['
string|"'access_ip_v4'"
op|']'
op|'='
name|'access_ipv4'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'accessIPv6'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'access_ipv6'
op|'='
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
newline|'\n'
name|'if'
name|'access_ipv6'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'access_ipv6'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'access_ipv6'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_validate_access_ipv6'
op|'('
name|'access_ipv6'
op|')'
newline|'\n'
dedent|''
name|'update_dict'
op|'['
string|"'access_ip_v6'"
op|']'
op|'='
name|'access_ipv6'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'auto_disk_config'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'auto_disk_config'
op|'='
name|'utils'
op|'.'
name|'bool_from_str'
op|'('
nl|'\n'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'auto_disk_config'"
op|']'
op|')'
newline|'\n'
name|'update_dict'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'auto_disk_config'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'hostId'"
name|'in'
name|'body'
op|'['
string|"'server'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"HostId cannot be updated."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'cache_db_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|','
op|'**'
name|'update_dict'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'.'
name|'update'
op|'('
name|'update_dict'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_add_instance_faults'
op|'('
name|'ctxt'
op|','
op|'['
name|'instance'
op|']'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'confirmResize'"
op|')'
newline|'\n'
DECL|member|_action_confirm_resize
name|'def'
name|'_action_confirm_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'confirmResize'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in confirm-resize %s"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'exc'
op|'.'
name|'HTTPNoContent'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'revertResize'"
op|')'
newline|'\n'
DECL|member|_action_revert_resize
name|'def'
name|'_action_revert_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'revert_resize'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance has not been resized."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'revertResize'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in revert-resize %s"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'reboot'"
op|')'
newline|'\n'
DECL|member|_action_reboot
name|'def'
name|'_action_reboot'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'reboot'"
name|'in'
name|'body'
name|'and'
string|"'type'"
name|'in'
name|'body'
op|'['
string|"'reboot'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'valid_reboot_types'
op|'='
op|'['
string|"'HARD'"
op|','
string|"'SOFT'"
op|']'
newline|'\n'
name|'reboot_type'
op|'='
name|'body'
op|'['
string|"'reboot'"
op|']'
op|'['
string|"'type'"
op|']'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'valid_reboot_types'
op|'.'
name|'count'
op|'('
name|'reboot_type'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Argument \'type\' for reboot is not HARD or SOFT"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing argument \'type\' for reboot"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'reboot_type'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'reboot'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error in reboot %s"'
op|')'
op|','
name|'e'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_resize
dedent|''
name|'def'
name|'_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'instance_id'
op|','
name|'flavor_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Begin the resize process with given instance/flavor."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'flavor_id'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to locate requested flavor."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'CannotResizeToSameFlavor'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requires a flavor change."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'resize'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'204'
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroys a server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_ref_from_req_data
dedent|''
dedent|''
name|'def'
name|'_image_ref_from_req_data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'unicode'
op|'('
name|'data'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing imageRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_uuid_from_href
dedent|''
dedent|''
name|'def'
name|'_image_uuid_from_href'
op|'('
name|'self'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
comment|'# If the image href was generated by nova api, strip image_href'
nl|'\n'
comment|'# down to an id and use the default glance connection params'
nl|'\n'
indent|'        '
name|'image_uuid'
op|'='
name|'image_href'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid imageRef provided."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'image_uuid'
newline|'\n'
nl|'\n'
DECL|member|_flavor_id_from_req_data
dedent|''
name|'def'
name|'_flavor_id_from_req_data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'data'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Missing flavorRef attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'common'
op|'.'
name|'get_id_from_href'
op|'('
name|'flavor_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'changePassword'"
op|')'
newline|'\n'
DECL|member|_action_change_password
name|'def'
name|'_action_change_password'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'if'
op|'('
name|'not'
string|"'changePassword'"
name|'in'
name|'body'
nl|'\n'
name|'or'
name|'not'
string|"'adminPass'"
name|'in'
name|'body'
op|'['
string|"'changePassword'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"No adminPass was specified"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'password'
op|'='
name|'body'
op|'['
string|"'changePassword'"
op|']'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'password'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid adminPass"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'set_admin_password'
op|'('
name|'context'
op|','
name|'server'
op|','
name|'password'
op|')'
newline|'\n'
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_metadata
dedent|''
name|'def'
name|'_validate_metadata'
op|'('
name|'self'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that we can work with the metadata given."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to parse metadata key/value pairs."'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'resize'"
op|')'
newline|'\n'
DECL|member|_action_resize
name|'def'
name|'_action_resize'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resizes a given instance to the flavor size requested."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavor_ref'
op|'='
name|'body'
op|'['
string|'"resize"'
op|']'
op|'['
string|'"flavorRef"'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'flavor_ref'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize request has invalid \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Resize requests require \'flavorRef\' attribute."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'auto_disk_config'"
name|'in'
name|'body'
op|'['
string|"'resize'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'body'
op|'['
string|"'resize'"
op|']'
op|'['
string|"'auto_disk_config'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_resize'
op|'('
name|'req'
op|','
name|'id'
op|','
name|'flavor_ref'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'rebuild'"
op|')'
newline|'\n'
DECL|member|_action_rebuild
name|'def'
name|'_action_rebuild'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rebuild an instance with the given attributes."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'='
name|'body'
op|'['
string|"'rebuild'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'_'
op|'('
string|'"Invalid request body"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'body'
op|'['
string|'"imageRef"'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Could not parse imageRef from request."'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_href'
op|'='
name|'self'
op|'.'
name|'_image_uuid_from_href'
op|'('
name|'image_href'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'body'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'utils'
op|'.'
name|'generate_password'
op|'('
name|'CONF'
op|'.'
name|'password_length'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'attr_map'
op|'='
op|'{'
nl|'\n'
string|"'personality'"
op|':'
string|"'files_to_inject'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'display_name'"
op|','
nl|'\n'
string|"'accessIPv4'"
op|':'
string|"'access_ip_v4'"
op|','
nl|'\n'
string|"'accessIPv6'"
op|':'
string|"'access_ip_v6'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
string|"'metadata'"
op|','
nl|'\n'
string|"'auto_disk_config'"
op|':'
string|"'auto_disk_config'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|"'accessIPv4'"
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_access_ipv4'
op|'('
name|'body'
op|'['
string|"'accessIPv4'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'accessIPv6'"
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_access_ipv6'
op|'('
name|'body'
op|'['
string|"'accessIPv6'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'name'"
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_validate_server_name'
op|'('
name|'body'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'request_attribute'
op|','
name|'instance_attribute'
name|'in'
name|'attr_map'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'kwargs'
op|'['
name|'instance_attribute'
op|']'
op|'='
name|'body'
op|'['
name|'request_attribute'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyError'
op|','
name|'TypeError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_validate_metadata'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'files_to_inject'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'personality'
op|'='
name|'kwargs'
op|'['
string|"'files_to_inject'"
op|']'
newline|'\n'
name|'kwargs'
op|'['
string|"'files_to_inject'"
op|']'
op|'='
name|'self'
op|'.'
name|'_get_injected_files'
op|'('
name|'personality'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_href'
op|','
nl|'\n'
name|'password'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'rebuild'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Instance could not be found"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadata'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidMetadataSize'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot find image for rebuild"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeMemoryTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeDiskTooSmall'
name|'as'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'error'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_add_instance_faults'
op|'('
name|'context'
op|','
op|'['
name|'instance'
op|']'
op|')'
newline|'\n'
name|'view'
op|'='
name|'self'
op|'.'
name|'_view_builder'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|"# Add on the adminPass attribute since the view doesn't do it"
nl|'\n'
comment|'# unless instance passwords are disabled'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'enable_instance_password'
op|':'
newline|'\n'
indent|'            '
name|'view'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
dedent|''
name|'robj'
op|'='
name|'wsgi'
op|'.'
name|'ResponseObject'
op|'('
name|'view'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_add_location'
op|'('
name|'robj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'response'
op|'('
number|'202'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'FullServerTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'ActionDeserializer'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'createImage'"
op|')'
newline|'\n'
op|'@'
name|'common'
op|'.'
name|'check_snapshots_enabled'
newline|'\n'
DECL|member|_action_create_image
name|'def'
name|'_action_create_image'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Snapshot a server instance."""'
newline|'\n'
name|'context'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'entity'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|'"createImage"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'image_name'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'image_name'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"createImage entity requires name attribute"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'props'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'metadata'
op|'='
name|'entity'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'common'
op|'.'
name|'check_img_metadata_properties_quota'
op|'('
name|'context'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'props'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid metadata"'
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_instance_bdms'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'is_volume_backed_instance'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'bdms'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'img'
op|'='
name|'instance'
op|'['
string|"'image_ref'"
op|']'
newline|'\n'
name|'src_image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'img'
op|')'
newline|'\n'
name|'image_meta'
op|'='
name|'dict'
op|'('
name|'src_image'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot_volume_backed'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'image'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_name'
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'props'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceInvalidState'
name|'as'
name|'state_error'
op|':'
newline|'\n'
indent|'            '
name|'common'
op|'.'
name|'raise_http_conflict_for_instance_invalid_state'
op|'('
name|'state_error'
op|','
nl|'\n'
string|"'createImage'"
op|')'
newline|'\n'
nl|'\n'
comment|'# build location of newly-created image entity'
nl|'\n'
dedent|''
name|'image_id'
op|'='
name|'str'
op|'('
name|'image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'image_ref'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'req'
op|'.'
name|'application_url'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'images'"
op|','
nl|'\n'
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'202'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Location'"
op|']'
op|'='
name|'image_ref'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|_get_server_admin_password
dedent|''
name|'def'
name|'_get_server_admin_password'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Determine the admin password for a server on creation."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'server'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_admin_password'
op|'('
name|'password'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'utils'
op|'.'
name|'generate_password'
op|'('
name|'CONF'
op|'.'
name|'password_length'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'_'
op|'('
string|'"Invalid adminPass"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'password'
newline|'\n'
nl|'\n'
DECL|member|_validate_admin_password
dedent|''
name|'def'
name|'_validate_admin_password'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'password'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_search_options
dedent|''
dedent|''
name|'def'
name|'_get_server_search_options'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return server search options allowed by non-admin."""'
newline|'\n'
name|'return'
op|'('
string|"'reservation_id'"
op|','
string|"'name'"
op|','
string|"'status'"
op|','
string|"'image'"
op|','
string|"'flavor'"
op|','
nl|'\n'
string|"'changes-since'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_resource
dedent|''
dedent|''
name|'def'
name|'create_resource'
op|'('
name|'ext_mgr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'wsgi'
op|'.'
name|'Resource'
op|'('
name|'Controller'
op|'('
name|'ext_mgr'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|remove_invalid_options
dedent|''
name|'def'
name|'remove_invalid_options'
op|'('
name|'context'
op|','
name|'search_options'
op|','
name|'allowed_search_options'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove search options that are not valid for non-admin API/context."""'
newline|'\n'
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|'# Allow all options'
nl|'\n'
indent|'        '
name|'return'
newline|'\n'
comment|'# Otherwise, strip out all unknown options'
nl|'\n'
dedent|''
name|'unknown_options'
op|'='
op|'['
name|'opt'
name|'for'
name|'opt'
name|'in'
name|'search_options'
nl|'\n'
name|'if'
name|'opt'
name|'not'
name|'in'
name|'allowed_search_options'
op|']'
newline|'\n'
name|'unk_opt_str'
op|'='
string|'", "'
op|'.'
name|'join'
op|'('
name|'unknown_options'
op|')'
newline|'\n'
name|'log_msg'
op|'='
name|'_'
op|'('
string|'"Removing options \'%(unk_opt_str)s\' from query"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'log_msg'
op|')'
newline|'\n'
name|'for'
name|'opt'
name|'in'
name|'unknown_options'
op|':'
newline|'\n'
indent|'        '
name|'search_options'
op|'.'
name|'pop'
op|'('
name|'opt'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
