begin_unit
comment|'# Copyright 2013 Metacloud Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'security_groups'
name|'as'
name|'sg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'security_group'
name|'import'
name|'openstack_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'xmlutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|authorize
name|'authorize'
op|'='
name|'extensions'
op|'.'
name|'extension_authorizer'
op|'('
string|"'compute'"
op|','
nl|'\n'
string|"'security_group_default_rules'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|sg_nsmap
name|'sg_nsmap'
op|'='
op|'{'
name|'None'
op|':'
name|'wsgi'
op|'.'
name|'XMLNS_V11'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|make_default_rule
name|'def'
name|'make_default_rule'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'elem'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'proto'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'ip_protocol'"
op|')'
newline|'\n'
name|'proto'
op|'.'
name|'text'
op|'='
string|"'ip_protocol'"
newline|'\n'
nl|'\n'
name|'from_port'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'from_port'"
op|')'
newline|'\n'
name|'from_port'
op|'.'
name|'text'
op|'='
string|"'from_port'"
newline|'\n'
nl|'\n'
name|'to_port'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'to_port'"
op|')'
newline|'\n'
name|'to_port'
op|'.'
name|'text'
op|'='
string|"'to_port'"
newline|'\n'
nl|'\n'
name|'ip_range'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'ip_range'"
op|','
nl|'\n'
name|'selector'
op|'='
string|"'ip_range'"
op|')'
newline|'\n'
name|'cidr'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'ip_range'
op|','
string|"'cidr'"
op|')'
newline|'\n'
name|'cidr'
op|'.'
name|'text'
op|'='
string|"'cidr'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupDefaultRulesTemplate
dedent|''
name|'class'
name|'SecurityGroupDefaultRulesTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'security_group_default_rules'"
op|')'
newline|'\n'
name|'elem'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'root'
op|','
string|"'security_group_default_rule'"
op|','
nl|'\n'
name|'selector'
op|'='
string|"'security_group_default_rules'"
op|')'
newline|'\n'
nl|'\n'
name|'make_default_rule'
op|'('
name|'elem'
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'sg_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupDefaultRuleTemplate
dedent|''
dedent|''
name|'class'
name|'SecurityGroupDefaultRuleTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'    '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'security_group_default_rule'"
op|','
nl|'\n'
name|'selector'
op|'='
string|"'security_group_default_rule'"
op|')'
newline|'\n'
name|'make_default_rule'
op|'('
name|'root'
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
name|'nsmap'
op|'='
name|'sg_nsmap'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupDefaultRulesXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'SecurityGroupDefaultRulesXMLDeserializer'
op|'('
name|'wsgi'
op|'.'
name|'MetadataXMLDeserializer'
op|')'
op|':'
newline|'\n'
DECL|member|default
indent|'    '
name|'def'
name|'default'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'xmlutils'
op|'.'
name|'safe_minidom_parse_string'
op|'('
name|'string'
op|')'
newline|'\n'
name|'security_group_rule'
op|'='
name|'self'
op|'.'
name|'_extract_security_group_default_rule'
op|'('
name|'dom'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'body'"
op|':'
op|'{'
string|"'security_group_default_rule'"
op|':'
name|'security_group_rule'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_extract_security_group_default_rule
dedent|''
name|'def'
name|'_extract_security_group_default_rule'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg_rule'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'sg_rule_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'node'
op|','
nl|'\n'
string|"'security_group_default_rule'"
op|')'
newline|'\n'
name|'if'
name|'sg_rule_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ip_protocol_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'sg_rule_node'
op|','
nl|'\n'
string|'"ip_protocol"'
op|')'
newline|'\n'
name|'if'
name|'ip_protocol_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'sg_rule'
op|'['
string|"'ip_protocol'"
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'ip_protocol_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'from_port_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'sg_rule_node'
op|','
nl|'\n'
string|'"from_port"'
op|')'
newline|'\n'
name|'if'
name|'from_port_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'sg_rule'
op|'['
string|"'from_port'"
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'from_port_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'to_port_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'sg_rule_node'
op|','
string|'"to_port"'
op|')'
newline|'\n'
name|'if'
name|'to_port_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'sg_rule'
op|'['
string|"'to_port'"
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'to_port_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cidr_node'
op|'='
name|'self'
op|'.'
name|'find_first_child_named'
op|'('
name|'sg_rule_node'
op|','
string|'"cidr"'
op|')'
newline|'\n'
name|'if'
name|'cidr_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'sg_rule'
op|'['
string|"'cidr'"
op|']'
op|'='
name|'self'
op|'.'
name|'extract_text'
op|'('
name|'cidr_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'sg_rule'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupDefaultRulesController
dedent|''
dedent|''
name|'class'
name|'SecurityGroupDefaultRulesController'
op|'('
name|'sg'
op|'.'
name|'SecurityGroupControllerBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'security_group_api'
op|'='
op|'('
nl|'\n'
name|'openstack_driver'
op|'.'
name|'get_openstack_security_group_driver'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'SecurityGroupDefaultRuleTemplate'
op|')'
newline|'\n'
op|'@'
name|'wsgi'
op|'.'
name|'deserializers'
op|'('
name|'xml'
op|'='
name|'SecurityGroupDefaultRulesXMLDeserializer'
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'sg'
op|'.'
name|'_authorize_context'
op|'('
name|'req'
op|')'
newline|'\n'
name|'authorize'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'sg_rule'
op|'='
name|'self'
op|'.'
name|'_from_body'
op|'('
name|'body'
op|','
string|"'security_group_default_rule'"
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
name|'self'
op|'.'
name|'_rule_args_to_dict'
op|'('
name|'to_port'
op|'='
name|'sg_rule'
op|'.'
name|'get'
op|'('
string|"'to_port'"
op|')'
op|','
nl|'\n'
name|'from_port'
op|'='
name|'sg_rule'
op|'.'
name|'get'
op|'('
string|"'from_port'"
op|')'
op|','
nl|'\n'
name|'ip_protocol'
op|'='
name|'sg_rule'
op|'.'
name|'get'
op|'('
string|"'ip_protocol'"
op|')'
op|','
nl|'\n'
name|'cidr'
op|'='
name|'sg_rule'
op|'.'
name|'get'
op|'('
string|"'cidr'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exp'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'unicode'
op|'('
name|'exp'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'values'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Not enough parameters to build a valid rule.'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'default_rule_exists'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'This default rule already exists.'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'security_group_rule'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'add_default_rules'
op|'('
nl|'\n'
name|'context'
op|','
op|'['
name|'values'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'fmt_rule'
op|'='
name|'self'
op|'.'
name|'_format_security_group_default_rule'
op|'('
nl|'\n'
name|'security_group_rule'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'security_group_default_rule'"
op|':'
name|'fmt_rule'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_rule_args_to_dict
dedent|''
name|'def'
name|'_rule_args_to_dict'
op|'('
name|'self'
op|','
name|'to_port'
op|'='
name|'None'
op|','
name|'from_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'ip_protocol'
op|'='
name|'None'
op|','
name|'cidr'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'parse_cidr'
op|'('
name|'cidr'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'new_cidr_ingress_rule'
op|'('
nl|'\n'
name|'cidr'
op|','
name|'ip_protocol'
op|','
name|'from_port'
op|','
name|'to_port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'SecurityGroupDefaultRuleTemplate'
op|')'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'sg'
op|'.'
name|'_authorize_context'
op|'('
name|'req'
op|')'
newline|'\n'
name|'authorize'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'id'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'validate_id'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Showing security_group_default_rule with id %s"'
op|')'
op|'%'
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'rule'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'get_default_rule'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SecurityGroupDefaultRuleNotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'_'
op|'('
string|'"security group default rule not found"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fmt_rule'
op|'='
name|'self'
op|'.'
name|'_format_security_group_default_rule'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'return'
op|'{'
string|'"security_group_default_rule"'
op|':'
name|'fmt_rule'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'sg'
op|'.'
name|'_authorize_context'
op|'('
name|'req'
op|')'
newline|'\n'
name|'authorize'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'id'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'validate_id'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'rule'
op|'='
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'get_default_rule'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'remove_default_rules'
op|'('
name|'context'
op|','
op|'['
name|'rule'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'webob'
op|'.'
name|'Response'
op|'('
name|'status_int'
op|'='
number|'204'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'serializers'
op|'('
name|'xml'
op|'='
name|'SecurityGroupDefaultRulesTemplate'
op|')'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'context'
op|'='
name|'sg'
op|'.'
name|'_authorize_context'
op|'('
name|'req'
op|')'
newline|'\n'
name|'authorize'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
op|'{'
string|"'security_group_default_rules'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'get_all_default_rules'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rule_fmt'
op|'='
name|'self'
op|'.'
name|'_format_security_group_default_rule'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'ret'
op|'['
string|"'security_group_default_rules'"
op|']'
op|'.'
name|'append'
op|'('
name|'rule_fmt'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_format_security_group_default_rule
dedent|''
name|'def'
name|'_format_security_group_default_rule'
op|'('
name|'self'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg_rule'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'sg_rule'
op|'['
string|"'id'"
op|']'
op|'='
name|'rule'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'sg_rule'
op|'['
string|"'ip_protocol'"
op|']'
op|'='
name|'rule'
op|'['
string|"'protocol'"
op|']'
newline|'\n'
name|'sg_rule'
op|'['
string|"'from_port'"
op|']'
op|'='
name|'rule'
op|'['
string|"'from_port'"
op|']'
newline|'\n'
name|'sg_rule'
op|'['
string|"'to_port'"
op|']'
op|'='
name|'rule'
op|'['
string|"'to_port'"
op|']'
newline|'\n'
name|'sg_rule'
op|'['
string|"'ip_range'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'sg_rule'
op|'['
string|"'ip_range'"
op|']'
op|'='
op|'{'
string|"'cidr'"
op|':'
name|'rule'
op|'['
string|"'cidr'"
op|']'
op|'}'
newline|'\n'
name|'return'
name|'sg_rule'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Security_group_default_rules
dedent|''
dedent|''
name|'class'
name|'Security_group_default_rules'
op|'('
name|'extensions'
op|'.'
name|'ExtensionDescriptor'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Default rules for security group support."""'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
string|'"SecurityGroupDefaultRules"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|'"os-security-group-default-rules"'
newline|'\n'
DECL|variable|namespace
name|'namespace'
op|'='
op|'('
string|'"http://docs.openstack.org/compute/ext/"'
nl|'\n'
string|'"securitygroupdefaultrules/api/v1.1"'
op|')'
newline|'\n'
DECL|variable|updated
name|'updated'
op|'='
string|'"2013-02-05T00:00:00+00:00"'
newline|'\n'
nl|'\n'
DECL|member|get_resources
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
op|'['
nl|'\n'
name|'extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'os-security-group-default-rules'"
op|','
nl|'\n'
name|'SecurityGroupDefaultRulesController'
op|'('
op|')'
op|','
nl|'\n'
name|'collection_actions'
op|'='
op|'{'
string|"'create'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'delete'"
op|':'
string|"'DELETE'"
op|','
nl|'\n'
string|"'index'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'member_actions'
op|'='
op|'{'
string|"'show'"
op|':'
string|"'GET'"
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'resources'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
