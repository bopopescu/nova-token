begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.import datetime'
nl|'\n'
nl|'\n'
string|'"""Reroutes calls to child zones on ZoneRouteException\'s."""'
newline|'\n'
nl|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'import'
name|'webob'
op|'.'
name|'dec'
newline|'\n'
name|'import'
name|'webob'
op|'.'
name|'exc'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'wsgi'
newline|'\n'
nl|'\n'
name|'import'
name|'novaclient'
op|'.'
name|'client'
name|'as'
name|'client'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'json'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'simplejson'
name|'as'
name|'json'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
dedent|''
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneRedirectMiddleware
name|'class'
name|'ZoneRedirectMiddleware'
op|'('
name|'wsgi'
op|'.'
name|'Middleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Catches Zone Routing exceptions and delegates the call\n       to child zones."""'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'application'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ZoneRouteException'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'e'
op|'.'
name|'zones'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'exc'
op|'='
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPInternalServerError'
op|'('
name|'explanation'
op|'='
nl|'\n'
name|'_'
op|'('
string|'"No zones to reroute to."'
op|')'
op|')'
newline|'\n'
name|'return'
name|'faults'
op|'.'
name|'Fault'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'zone'
op|'='
name|'e'
op|'.'
name|'zones'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# Todo(sandy): This only works for OpenStack API currently.'
nl|'\n'
comment|'# Needs to be broken out into a driver. '
nl|'\n'
name|'url'
op|'='
name|'zone'
op|'.'
name|'api_url'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Zone redirect to:[url:%(api_url)s, username:%(username)s]"'
nl|'\n'
op|'%'
name|'dict'
op|'('
name|'api_url'
op|'='
name|'zone'
op|'.'
name|'api_url'
op|','
name|'username'
op|'='
name|'zone'
op|'.'
name|'username'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Zone Initial Req: %s"'
op|')'
op|','
name|'req'
op|')'
newline|'\n'
name|'nova'
op|'='
name|'client'
op|'.'
name|'OpenStackClient'
op|'('
name|'zone'
op|'.'
name|'username'
op|','
name|'zone'
op|'.'
name|'password'
op|','
nl|'\n'
name|'zone'
op|'.'
name|'api_url'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'new_req'
op|'='
name|'req'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
comment|"#m = re.search('(https?://.+)/(v\\d+\\.\\d+)/', url)"
nl|'\n'
nl|'\n'
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'new_req'
op|'.'
name|'path_qs'
op|')'
newline|'\n'
name|'query'
op|'='
name|'urlparse'
op|'.'
name|'parse_qsl'
op|'('
name|'query'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"**** QUERY=%s^%s^%s"'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|')'
newline|'\n'
name|'query'
op|'='
op|'['
op|'('
name|'key'
op|','
name|'value'
op|')'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'query'
name|'if'
name|'key'
op|'!='
string|"'fresh'"
op|']'
newline|'\n'
name|'query'
op|'='
name|'urllib'
op|'.'
name|'urlencode'
op|'('
name|'query'
op|')'
newline|'\n'
name|'url'
op|'='
name|'urlparse'
op|'.'
name|'urlunsplit'
op|'('
op|'('
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|"'/(v\\d+\\.\\d+)/(.+)'"
op|','
name|'url'
op|')'
newline|'\n'
name|'version'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
name|'resource'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"New Request Data: %s"'
op|')'
op|','
name|'new_req'
op|'.'
name|'body'
op|')'
newline|'\n'
comment|'#LOG.info(_("New Request Headers: %s"), new_req.headers)'
nl|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"New Request Path: %s"'
op|')'
op|','
name|'resource'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
op|':'
newline|'\n'
indent|'                '
name|'response'
op|','
name|'body'
op|'='
name|'nova'
op|'.'
name|'get'
op|'('
name|'resource'
op|','
name|'body'
op|'='
name|'new_req'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'POST'"
op|':'
newline|'\n'
indent|'                '
name|'response'
op|','
name|'body'
op|'='
name|'nova'
op|'.'
name|'post'
op|'('
name|'resource'
op|','
name|'body'
op|'='
name|'new_req'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'response'
op|','
name|'body'
op|'='
name|'nova'
op|'.'
name|'put'
op|'('
name|'resource'
op|','
name|'body'
op|'='
name|'new_req'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'                '
name|'response'
op|','
name|'body'
op|'='
name|'nova'
op|'.'
name|'delete'
op|'('
name|'resource'
op|','
name|'body'
op|'='
name|'new_req'
op|'.'
name|'body'
op|')'
newline|'\n'
comment|'#response, body = nova.request(req.path_qs, headers=new_req.headers, body=new_req.body)'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Zone Response: %s / %s"'
op|')'
op|','
name|'response'
op|','
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'res'
op|'.'
name|'status'
op|'='
name|'response'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'res'
op|'.'
name|'content_type'
op|'='
name|'response'
op|'['
string|"'content-type'"
op|']'
newline|'\n'
name|'res'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Zone WebOb Response: %s"'
op|')'
op|','
name|'res'
op|')'
newline|'\n'
name|'return'
name|'res'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
