begin_unit
comment|'# Copyright 2013 Intel Corporation.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nCPU monitor based on virt driver to retrieve CPU information\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'monitors'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LE'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_driver'"
op|','
string|"'nova.virt.driver'"
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Monitor
name|'class'
name|'Monitor'
op|'('
name|'base'
op|'.'
name|'CPUMonitorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""CPU monitor that uses the virt driver\'s get_host_cpu_stats() call."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'compute_manager'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Monitor'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'source'
op|'='
name|'CONF'
op|'.'
name|'compute_driver'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'self'
op|'.'
name|'compute_manager'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_cpu_stats'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_metric
dedent|''
name|'def'
name|'get_metric'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_update_data'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_data'
op|'['
name|'name'
op|']'
op|','
name|'self'
op|'.'
name|'_data'
op|'['
string|'"timestamp"'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_update_data
dedent|''
name|'def'
name|'_update_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Don't allow to call this function so frequently (<= 1 sec)"
nl|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_data'
op|'.'
name|'get'
op|'('
string|'"timestamp"'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'delta'
op|'='
name|'now'
op|'-'
name|'self'
op|'.'
name|'_data'
op|'.'
name|'get'
op|'('
string|'"timestamp"'
op|')'
newline|'\n'
name|'if'
name|'delta'
op|'.'
name|'seconds'
op|'<='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"timestamp"'
op|']'
op|'='
name|'now'
newline|'\n'
nl|'\n'
comment|"# Extract node's CPU statistics."
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_host_cpu_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.user.time"'
op|']'
op|'='
name|'stats'
op|'['
string|'"user"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.kernel.time"'
op|']'
op|'='
name|'stats'
op|'['
string|'"kernel"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.idle.time"'
op|']'
op|'='
name|'stats'
op|'['
string|'"idle"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.iowait.time"'
op|']'
op|'='
name|'stats'
op|'['
string|'"iowait"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.frequency"'
op|']'
op|'='
name|'stats'
op|'['
string|'"frequency"'
op|']'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'NotImplementedError'
op|','
name|'TypeError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_LE'
op|'('
string|'"Not all properties needed are implemented "'
nl|'\n'
string|'"in the compute driver"'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ResourceMonitorError'
op|'('
nl|'\n'
name|'monitor'
op|'='
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
comment|'# The compute driver API returns the absolute values for CPU times.'
nl|'\n'
comment|'# We compute the utilization percentages for each specific CPU time'
nl|'\n'
comment|'# after calculating the delta between the current reading and the'
nl|'\n'
comment|'# previous reading.'
nl|'\n'
dedent|''
name|'stats'
op|'['
string|'"total"'
op|']'
op|'='
op|'('
name|'stats'
op|'['
string|'"user"'
op|']'
op|'+'
name|'stats'
op|'['
string|'"kernel"'
op|']'
nl|'\n'
op|'+'
name|'stats'
op|'['
string|'"idle"'
op|']'
op|'+'
name|'stats'
op|'['
string|'"iowait"'
op|']'
op|')'
newline|'\n'
name|'cputime'
op|'='
name|'float'
op|'('
name|'stats'
op|'['
string|'"total"'
op|']'
op|'-'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"total"'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'perc'
op|'='
op|'('
name|'stats'
op|'['
string|'"user"'
op|']'
op|'-'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"user"'
op|','
number|'0'
op|')'
op|')'
op|'/'
name|'cputime'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.user.percent"'
op|']'
op|'='
name|'perc'
newline|'\n'
nl|'\n'
name|'perc'
op|'='
op|'('
name|'stats'
op|'['
string|'"kernel"'
op|']'
op|'-'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"kernel"'
op|','
number|'0'
op|')'
op|')'
op|'/'
name|'cputime'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.kernel.percent"'
op|']'
op|'='
name|'perc'
newline|'\n'
nl|'\n'
name|'perc'
op|'='
op|'('
name|'stats'
op|'['
string|'"idle"'
op|']'
op|'-'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"idle"'
op|','
number|'0'
op|')'
op|')'
op|'/'
name|'cputime'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.idle.percent"'
op|']'
op|'='
name|'perc'
newline|'\n'
nl|'\n'
name|'perc'
op|'='
op|'('
name|'stats'
op|'['
string|'"iowait"'
op|']'
op|'-'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"iowait"'
op|','
number|'0'
op|')'
op|')'
op|'/'
name|'cputime'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.iowait.percent"'
op|']'
op|'='
name|'perc'
newline|'\n'
nl|'\n'
comment|'# Compute the current system-wide CPU utilization as a percentage.'
nl|'\n'
name|'used'
op|'='
name|'stats'
op|'['
string|'"user"'
op|']'
op|'+'
name|'stats'
op|'['
string|'"kernel"'
op|']'
op|'+'
name|'stats'
op|'['
string|'"iowait"'
op|']'
newline|'\n'
name|'prev_used'
op|'='
op|'('
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"user"'
op|','
number|'0'
op|')'
nl|'\n'
op|'+'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"kernel"'
op|','
number|'0'
op|')'
nl|'\n'
op|'+'
name|'self'
op|'.'
name|'_cpu_stats'
op|'.'
name|'get'
op|'('
string|'"iowait"'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'perc'
op|'='
op|'('
name|'used'
op|'-'
name|'prev_used'
op|')'
op|'/'
name|'cputime'
newline|'\n'
name|'self'
op|'.'
name|'_data'
op|'['
string|'"cpu.percent"'
op|']'
op|'='
name|'perc'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_cpu_stats'
op|'='
name|'stats'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
