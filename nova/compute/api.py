begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nHandles all requests relating to instances (guest vms).\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'volume'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'api'
name|'as'
name|'scheduler'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'base'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.compute.api'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|generate_default_hostname
name|'def'
name|'generate_default_hostname'
op|'('
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Default function to generate a hostname given an instance reference."""'
newline|'\n'
name|'return'
name|'str'
op|'('
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|API
dedent|''
name|'class'
name|'API'
op|'('
name|'base'
op|'.'
name|'Base'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""API for interacting with the compute manager."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'image_service'
op|'='
name|'None'
op|','
name|'network_api'
op|'='
name|'None'
op|','
nl|'\n'
name|'volume_api'
op|'='
name|'None'
op|','
name|'hostname_factory'
op|'='
name|'generate_default_hostname'
op|','
nl|'\n'
name|'scheduler_api'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'image_service'
op|':'
newline|'\n'
indent|'            '
name|'image_service'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'image_service'
op|'='
name|'image_service'
newline|'\n'
name|'if'
name|'not'
name|'network_api'
op|':'
newline|'\n'
indent|'            '
name|'network_api'
op|'='
name|'network'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'network_api'
op|'='
name|'network_api'
newline|'\n'
name|'if'
name|'not'
name|'volume_api'
op|':'
newline|'\n'
indent|'            '
name|'volume_api'
op|'='
name|'volume'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'volume_api'
op|'='
name|'volume_api'
newline|'\n'
name|'if'
name|'not'
name|'scheduler_api'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_api'
op|'='
name|'scheduler'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'scheduler_api'
op|'='
name|'scheduler_api'
newline|'\n'
name|'self'
op|'.'
name|'hostname_factory'
op|'='
name|'hostname_factory'
newline|'\n'
name|'super'
op|'('
name|'API'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_network_topic
dedent|''
name|'def'
name|'get_network_topic'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the network topic for an instance."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Instance %d was not found in get_network_topic"'
op|')'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"Instance %d has no host"'
op|')'
op|'%'
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'topic'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'context'
op|','
nl|'\n'
name|'topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"get_network_topic"'
op|','
string|'"args"'
op|':'
op|'{'
string|"'fake'"
op|':'
number|'1'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_type'
op|','
nl|'\n'
name|'image_id'
op|','
name|'kernel_id'
op|'='
name|'None'
op|','
name|'ramdisk_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'min_count'
op|'='
number|'1'
op|','
name|'max_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'display_name'
op|'='
string|"''"
op|','
name|'display_description'
op|'='
string|"''"
op|','
nl|'\n'
name|'key_name'
op|'='
name|'None'
op|','
name|'key_data'
op|'='
name|'None'
op|','
name|'security_group'
op|'='
string|"'default'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'None'
op|','
name|'user_data'
op|'='
name|'None'
op|','
name|'metadata'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'onset_files'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create the number of instances requested if quota and\n        other arguments check out ok."""'
newline|'\n'
nl|'\n'
name|'type_data'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type'
op|'('
name|'instance_type'
op|')'
newline|'\n'
name|'num_instances'
op|'='
name|'quota'
op|'.'
name|'allowed_instances'
op|'('
name|'context'
op|','
name|'max_count'
op|','
name|'type_data'
op|')'
newline|'\n'
name|'if'
name|'num_instances'
op|'<'
name|'min_count'
op|':'
newline|'\n'
indent|'            '
name|'pid'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Quota exceeeded for %(pid)s,"'
nl|'\n'
string|'" tried to run %(min_count)s instances"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
name|'quota'
op|'.'
name|'QuotaError'
op|'('
name|'_'
op|'('
string|'"Instance quota exceeded. You can only "'
nl|'\n'
string|'"run %s more instances of this type."'
op|')'
op|'%'
nl|'\n'
name|'num_instances'
op|','
string|'"InstanceLimitExceeded"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'num_metadata'
op|'='
name|'len'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'quota_metadata'
op|'='
name|'quota'
op|'.'
name|'allowed_metadata_items'
op|'('
name|'context'
op|','
name|'num_metadata'
op|')'
newline|'\n'
name|'if'
name|'quota_metadata'
op|'<'
name|'num_metadata'
op|':'
newline|'\n'
indent|'            '
name|'pid'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'msg'
op|'='
op|'('
name|'_'
op|'('
string|'"Quota exceeeded for %(pid)s,"'
nl|'\n'
string|'" tried to set %(num_metadata)s metadata properties"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'quota'
op|'.'
name|'QuotaError'
op|'('
name|'msg'
op|','
string|'"MetadataLimitExceeded"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Because metadata is stored in the DB, we hard-code the size limits'
nl|'\n'
comment|'# In future, we may support more variable length strings, so we act'
nl|'\n'
comment|'#  as if this is quota-controlled for forwards compatibility'
nl|'\n'
dedent|''
name|'for'
name|'metadata_item'
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'k'
op|'='
name|'metadata_item'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'v'
op|'='
name|'metadata_item'
op|'['
string|"'value'"
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'k'
op|')'
op|'>'
number|'255'
name|'or'
name|'len'
op|'('
name|'v'
op|')'
op|'>'
number|'255'
op|':'
newline|'\n'
indent|'                '
name|'pid'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'msg'
op|'='
op|'('
name|'_'
op|'('
string|'"Quota exceeeded for %(pid)s,"'
nl|'\n'
string|'" metadata property key or value too long"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'quota'
op|'.'
name|'QuotaError'
op|'('
name|'msg'
op|','
string|'"MetadataLimitExceeded"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'image'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'if'
name|'kernel_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'kernel_id'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'kernel_id'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ramdisk_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ramdisk_id'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'ramdisk_id'"
op|','
name|'None'
op|')'
newline|'\n'
comment|'# FIXME(sirp): is there a way we can remove null_kernel?'
nl|'\n'
comment|'# No kernel and ramdisk for raw images'
nl|'\n'
dedent|''
name|'if'
name|'kernel_id'
op|'=='
name|'str'
op|'('
name|'FLAGS'
op|'.'
name|'null_kernel'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kernel_id'
op|'='
name|'None'
newline|'\n'
name|'ramdisk_id'
op|'='
name|'None'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Creating a raw instance"'
op|')'
op|')'
newline|'\n'
comment|'# Make sure we have access to kernel and ramdisk (if not raw)'
nl|'\n'
dedent|''
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Using Kernel=%s, Ramdisk=%s"'
op|'%'
nl|'\n'
op|'('
name|'kernel_id'
op|','
name|'ramdisk_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'kernel_id'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'kernel_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ramdisk_id'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'ramdisk_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'security_group'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
op|'['
string|"'default'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'type'
op|'('
name|'security_group'
op|')'
name|'is'
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
op|'['
name|'security_group'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ensure_default_security_group'
op|'('
name|'context'
op|')'
newline|'\n'
name|'for'
name|'security_group_name'
name|'in'
name|'security_group'
op|':'
newline|'\n'
indent|'            '
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'security_group_name'
op|')'
newline|'\n'
name|'security_groups'
op|'.'
name|'append'
op|'('
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'key_data'
name|'is'
name|'None'
name|'and'
name|'key_name'
op|':'
newline|'\n'
indent|'            '
name|'key_pair'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'user_id'
op|','
name|'key_name'
op|')'
newline|'\n'
name|'key_data'
op|'='
name|'key_pair'
op|'['
string|"'public_key'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'base_options'
op|'='
op|'{'
nl|'\n'
string|"'reservation_id'"
op|':'
name|'utils'
op|'.'
name|'generate_uid'
op|'('
string|"'r'"
op|')'
op|','
nl|'\n'
string|"'image_id'"
op|':'
name|'image_id'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'kernel_id'
name|'or'
string|"''"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'ramdisk_id'
name|'or'
string|"''"
op|','
nl|'\n'
string|"'state_description'"
op|':'
string|"'scheduling'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'launch_time'"
op|':'
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%Y-%m-%dT%H:%M:%SZ'"
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'instance_type'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'type_data'
op|'['
string|"'local_gb'"
op|']'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'display_name'
op|','
nl|'\n'
string|"'display_description'"
op|':'
name|'display_description'
op|','
nl|'\n'
string|"'user_data'"
op|':'
name|'user_data'
name|'or'
string|"''"
op|','
nl|'\n'
string|"'key_name'"
op|':'
name|'key_name'
op|','
nl|'\n'
string|"'key_data'"
op|':'
name|'key_data'
op|','
nl|'\n'
string|"'locked'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'metadata'"
op|':'
name|'metadata'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Going to run %s instances..."'
op|')'
op|','
name|'num_instances'
op|')'
newline|'\n'
name|'for'
name|'num'
name|'in'
name|'range'
op|'('
name|'num_instances'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'dict'
op|'('
name|'mac_address'
op|'='
name|'utils'
op|'.'
name|'generate_mac'
op|'('
op|')'
op|','
nl|'\n'
name|'launch_index'
op|'='
name|'num'
op|','
nl|'\n'
op|'**'
name|'base_options'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'security_groups'
op|':'
newline|'\n'
indent|'                '
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'for'
name|'security_group_id'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'elevated'
op|','
nl|'\n'
name|'instance_id'
op|','
nl|'\n'
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Set sane defaults if not specified'
nl|'\n'
dedent|''
name|'updates'
op|'='
name|'dict'
op|'('
name|'hostname'
op|'='
name|'self'
op|'.'
name|'hostname_factory'
op|'('
name|'instance_id'
op|')'
op|')'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'hasattr'
op|'('
name|'instance'
op|','
string|"'display_name'"
op|')'
name|'or'
nl|'\n'
name|'instance'
op|'.'
name|'display_name'
op|'=='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'['
string|"'display_name'"
op|']'
op|'='
string|'"Server %s"'
op|'%'
name|'instance_id'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'updates'
op|')'
newline|'\n'
name|'instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'pid'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'uid'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Casting to scheduler for %(pid)s/%(uid)s\'s"'
nl|'\n'
string|'" instance %(instance_id)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'scheduler_topic'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"run_instance"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"topic"'
op|':'
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
string|'"instance_id"'
op|':'
name|'instance_id'
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
name|'availability_zone'
op|','
nl|'\n'
string|'"onset_files"'
op|':'
name|'onset_files'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'group_id'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'trigger_security_group_members_refresh'
op|'('
name|'elevated'
op|','
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'dict'
op|'('
name|'x'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
name|'for'
name|'x'
name|'in'
name|'instances'
op|']'
newline|'\n'
nl|'\n'
DECL|member|ensure_default_security_group
dedent|''
name|'def'
name|'ensure_default_security_group'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Create security group for the security context if it\n        does not already exist\n\n        :param context: the security context\n\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|trigger_security_group_rules_refresh
dedent|''
dedent|''
name|'def'
name|'trigger_security_group_rules_refresh'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when a rule is added to or removed from a security_group"""'
newline|'\n'
nl|'\n'
name|'security_group'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
name|'hosts'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'security_group'
op|'['
string|"'instances'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'host'"
op|']'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'hosts'
op|'.'
name|'add'
op|'('
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"refresh_security_group_rules"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"security_group_id"'
op|':'
name|'security_group'
op|'.'
name|'id'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|trigger_security_group_members_refresh
dedent|''
dedent|''
name|'def'
name|'trigger_security_group_members_refresh'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when a security group gains a new or loses a member\n\n        Sends an update request to each compute node for whom this is\n        relevant."""'
newline|'\n'
nl|'\n'
comment|'# First, we get the security group rules that reference this group as'
nl|'\n'
comment|'# the grantee..'
nl|'\n'
name|'security_group_rules'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'security_group_rule_get_by_security_group_grantee'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# ..then we distill the security groups to which they belong..'
nl|'\n'
name|'security_groups'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'security_group_rules'
op|':'
newline|'\n'
indent|'            '
name|'security_group'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'security_group_get'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'rule'
op|'['
string|"'parent_group_id'"
op|']'
op|')'
newline|'\n'
name|'security_groups'
op|'.'
name|'add'
op|'('
name|'security_group'
op|')'
newline|'\n'
nl|'\n'
comment|'# ..then we find the instances that are members of these groups..'
nl|'\n'
dedent|''
name|'instances'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'security_group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'instance'
name|'in'
name|'security_group'
op|'['
string|"'instances'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'instances'
op|'.'
name|'add'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...then we find the hosts where they live...'
nl|'\n'
dedent|''
dedent|''
name|'hosts'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'hosts'
op|'.'
name|'add'
op|'('
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...and finally we tell these nodes to refresh their view of this'
nl|'\n'
comment|'# particular security group.'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"refresh_security_group_members"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"security_group_id"'
op|':'
name|'group_id'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates the instance in the datastore.\n\n        :param context: The security context\n        :param instance_id: ID of the instance to update\n        :param kwargs: All additional keyword args are treated\n                       as data fields of the instance to be\n                       updated\n\n        :retval None\n\n        """'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'rv'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Going to try to terminate %s"'
op|')'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Instance %s was not found during terminate"'
op|')'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'instance'
op|'['
string|"'state_description'"
op|']'
op|'=='
string|"'terminating'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Instance %s is already being terminated"'
op|')'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'update'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'state_description'
op|'='
string|"'terminating'"
op|','
nl|'\n'
name|'state'
op|'='
number|'0'
op|','
nl|'\n'
name|'terminated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'terminate_instance'"
op|','
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get a single instance with the given ID."""'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'scheduler_api'
op|'.'
name|'get_instance_or_reroute'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
comment|'#rv = self.db.instance_get(context, instance_id)'
nl|'\n'
name|'return'
name|'dict'
op|'('
name|'rv'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all
dedent|''
name|'def'
name|'get_all'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'project_id'
op|'='
name|'None'
op|','
name|'reservation_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'fixed_ip'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get all instances, possibly filtered by one of the\n        given parameters. If there is no filter and the context is\n        an admin, it will retreive all instances in the system."""'
newline|'\n'
name|'if'
name|'reservation_id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_reservation'
op|'('
name|'context'
op|','
nl|'\n'
name|'reservation_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'fixed_ip'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'fixed_ip_get_instance'
op|'('
name|'context'
op|','
name|'fixed_ip'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project_id'
name|'or'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'context'
op|'.'
name|'project'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_user'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_project'
op|'('
name|'context'
op|','
nl|'\n'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cast_compute_message
dedent|''
name|'def'
name|'_cast_compute_message'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generic handler for RPC casts to compute.\n\n        :param params: Optional dictionary of arguments to be passed to the\n                       compute worker\n\n        :retval None\n        """'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
dedent|''
name|'queue'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
newline|'\n'
name|'params'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'instance_id'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'method'"
op|':'
name|'method'
op|','
string|"'args'"
op|':'
name|'params'
op|'}'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
name|'queue'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_call_compute_message
dedent|''
name|'def'
name|'_call_compute_message'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generic handler for RPC calls to compute.\n\n        :param params: Optional dictionary of arguments to be passed to the\n                       compute worker\n\n        :retval: Result returned by compute worker\n        """'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|'"host"'
op|']'
newline|'\n'
dedent|''
name|'queue'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
newline|'\n'
name|'params'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'instance_id'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'method'"
op|':'
name|'method'
op|','
string|"'args'"
op|':'
name|'params'
op|'}'
newline|'\n'
name|'return'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'context'
op|','
name|'queue'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cast_scheduler_message
dedent|''
name|'def'
name|'_cast_scheduler_message'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generic handler for RPC calls to the scheduler"""'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'scheduler_topic'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Snapshot the given instance.\n\n        :retval: A dict containing image metadata\n        """'
newline|'\n'
name|'data'
op|'='
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'data'
op|')'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'image_meta'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'snapshot_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'return'
name|'image_meta'
newline|'\n'
nl|'\n'
DECL|member|reboot
dedent|''
name|'def'
name|'reboot'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reboot the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'reboot_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|revert_resize
dedent|''
name|'def'
name|'revert_resize'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reverts a resize, deleting the \'new\' instance in the process"""'
newline|'\n'
name|'context'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'migration_ref'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
string|"'finished'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'migration_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
name|'_'
op|'('
string|'"No finished migrations found for "'
nl|'\n'
string|'"instance"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'params'
op|'='
op|'{'
string|"'migration_id'"
op|':'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'revert_resize'"
op|','
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'dest_compute'"
op|']'
op|','
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|confirm_resize
dedent|''
name|'def'
name|'confirm_resize'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms a migration/resize, deleting the \'old\' instance in the\n        process."""'
newline|'\n'
name|'context'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'migration_ref'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
string|"'finished'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'migration_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
name|'_'
op|'('
string|'"No finished migrations found for "'
nl|'\n'
string|'"instance"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'migration_id'"
op|':'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'confirm_resize'"
op|','
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'source_compute'"
op|']'
op|','
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'context'
op|','
name|'migration_id'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
name|'migration_ref'
op|'['
string|"'dest_compute'"
op|']'
op|','
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resize
dedent|''
name|'def'
name|'resize'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'flavor'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resize a running instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_scheduler_message'
op|'('
name|'context'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"prep_resize"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"topic"'
op|':'
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
string|'"instance_id"'
op|':'
name|'instance_id'
op|','
op|'}'
op|'}'
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|member|pause
dedent|''
name|'def'
name|'pause'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pause the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'pause_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unpause
dedent|''
name|'def'
name|'unpause'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unpause the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'unpause_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_diagnostics
dedent|''
name|'def'
name|'get_diagnostics'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve diagnostics for the given instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_call_compute_message'
op|'('
nl|'\n'
string|'"get_diagnostics"'
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_actions
dedent|''
name|'def'
name|'get_actions'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve actions for the given instance."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_actions'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|suspend
dedent|''
name|'def'
name|'suspend'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""suspend the instance with instance_id"""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'suspend_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""resume the instance with instance_id"""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'resume_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rescue
dedent|''
name|'def'
name|'rescue'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rescue the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'rescue_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unrescue
dedent|''
name|'def'
name|'unrescue'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unrescue the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'unrescue_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_admin_password
dedent|''
name|'def'
name|'set_admin_password'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the root/admin password for the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'set_admin_password'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_file
dedent|''
name|'def'
name|'inject_file'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write a file to the given instance."""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'inject_file'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_ajax_console
dedent|''
name|'def'
name|'get_ajax_console'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get a url to an AJAX Console"""'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'_call_compute_message'
op|'('
string|"'get_ajax_console'"
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
string|"'%s'"
op|'%'
name|'FLAGS'
op|'.'
name|'ajax_console_proxy_topic'
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'authorize_ajax_console'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'token'"
op|':'
name|'output'
op|'['
string|"'token'"
op|']'
op|','
string|"'host'"
op|':'
name|'output'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'output'
op|'['
string|"'port'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'url'"
op|':'
string|"'%s/?token=%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'ajax_console_proxy_url'
op|','
nl|'\n'
name|'output'
op|'['
string|"'token'"
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_console_output
dedent|''
name|'def'
name|'get_console_output'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get console output for an an instance"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_call_compute_message'
op|'('
string|"'get_console_output'"
op|','
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lock
dedent|''
name|'def'
name|'lock'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""lock the instance with instance_id"""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'lock_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unlock
dedent|''
name|'def'
name|'unlock'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""unlock the instance with instance_id"""'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'unlock_instance'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_lock
dedent|''
name|'def'
name|'get_lock'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""return the boolean state of (instance with instance_id)\'s lock"""'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'return'
name|'instance'
op|'['
string|"'locked'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|reset_network
dedent|''
name|'def'
name|'reset_network'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reset networking on the instance.\n\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'reset_network'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|inject_network_info
dedent|''
name|'def'
name|'inject_network_info'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Inject network info for the instance.\n\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_cast_compute_message'
op|'('
string|"'inject_network_info'"
op|','
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'volume_id'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'re'
op|'.'
name|'match'
op|'('
string|'"^/dev/[a-z]d[a-z]+$"'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|'"Invalid device specified: %s. "'
nl|'\n'
string|'"Example device: /dev/vdb"'
op|')'
op|'%'
name|'device'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'check_attach'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"attach_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"volume_id"'
op|':'
name|'volume_id'
op|','
nl|'\n'
string|'"instance_id"'
op|':'
name|'instance_id'
op|','
nl|'\n'
string|'"mountpoint"'
op|':'
name|'device'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_instance'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'instance'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ApiError'
op|'('
name|'_'
op|'('
string|'"Volume isn\'t attached to anything!"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'check_detach'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'host'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"detach_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|'"instance_id"'
op|':'
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|'"volume_id"'
op|':'
name|'volume_id'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|associate_floating_ip
dedent|''
name|'def'
name|'associate_floating_ip'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'associate_floating_ip'
op|'('
name|'context'
op|','
name|'address'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'fixed_ip'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
