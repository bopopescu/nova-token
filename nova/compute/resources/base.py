begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'abc'
newline|'\n'
nl|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'six'
op|'.'
name|'add_metaclass'
op|'('
name|'abc'
op|'.'
name|'ABCMeta'
op|')'
newline|'\n'
DECL|class|Resource
name|'class'
name|'Resource'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This base class defines the interface used for compute resource\n    plugins. It is not necessary to use this base class, but all compute\n    resource plugins must implement the abstract methods found here.\n    An instance of the plugin object is instantiated when it is loaded\n    by calling __init__() with no parameters.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|reset
name|'def'
name|'reset'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the resource to an initial state based on the resource\n        view discovered from the hypervisor.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|test
name|'def'
name|'test'
op|'('
name|'self'
op|','
name|'usage'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test to see if we have sufficient resources to allocate for\n        an instance with the given resource usage.\n\n        :param usage: the resource usage of the instances\n        :param limits: limits to apply\n\n        :returns: None if the test passes or a string describing the reason\n        why the test failed\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|add_instance
name|'def'
name|'add_instance'
op|'('
name|'self'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update resource information adding allocation according to the\n        given resource usage.\n\n        :param usage: the resource usage of the instance being added\n\n        :returns: None\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|remove_instance
name|'def'
name|'remove_instance'
op|'('
name|'self'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update resource information removing allocation according to the\n        given resource usage.\n\n        :param usage: the resource usage of the instance being removed\n\n        :returns: None\n\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|write
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write resource data to populate resources.\n\n        :param resources: the resources data to be populated\n\n        :returns: None\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'abc'
op|'.'
name|'abstractmethod'
newline|'\n'
DECL|member|report_free
name|'def'
name|'report_free'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Log free resources.\n\n        This method logs how much free resource is held by\n        the resource plugin.\n\n        :returns: None\n        """'
newline|'\n'
name|'pass'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
