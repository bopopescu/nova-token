begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'import'
name|'stevedore'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|RESOURCE_NAMESPACE
name|'RESOURCE_NAMESPACE'
op|'='
string|"'nova.compute.resources'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceHandler
name|'class'
name|'ResourceHandler'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_log_missing_plugins
indent|'    '
name|'def'
name|'_log_missing_plugins'
op|'('
name|'self'
op|','
name|'names'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'names'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|"'Compute resource plugin %s was not loaded'"
op|')'
op|','
nl|'\n'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'names'
op|','
name|'propagate_map_exceptions'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialise the resource handler by loading the plugins.\n\n        The ResourceHandler uses stevedore to load the resource plugins.\n        The handler can handle and report exceptions raised in the plugins\n        depending on the value of the propagate_map_exceptions parameter.\n        It is useful in testing to propagate exceptions so they are exposed\n        as part of the test. If exceptions are not propagated they are\n        logged at error level.\n\n        Any named plugins that are not located are logged.\n\n        :param names: the list of plugins to load by name\n        :param propagate_map_exceptions: True indicates exceptions in the\n        plugins should be raised, False indicates they should be handled and\n        logged.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_mgr'
op|'='
name|'stevedore'
op|'.'
name|'NamedExtensionManager'
op|'('
nl|'\n'
name|'namespace'
op|'='
name|'RESOURCE_NAMESPACE'
op|','
nl|'\n'
name|'names'
op|'='
name|'names'
op|','
nl|'\n'
name|'propagate_map_exceptions'
op|'='
name|'propagate_map_exceptions'
op|','
nl|'\n'
name|'invoke_on_load'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'names'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
nl|'\n'
string|"'The Extensible Resource Tracker is deprecated and will '"
nl|'\n'
string|"'be removed in the 14.0.0 release. If you '"
nl|'\n'
string|"'use this functionality and have custom resources that '"
nl|'\n'
string|"'are managed by the Extensible Resource Tracker, please '"
nl|'\n'
string|"'contact the Nova development team by posting to the '"
nl|'\n'
string|"'openstack-dev mailing list. There is no future planned '"
nl|'\n'
string|"'support for the tracking of custom resources.'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_log_missing_plugins'
op|'('
name|'names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_resources
dedent|''
name|'def'
name|'reset_resources'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reset the resources to their initial state.\n\n        Each plugin is called to reset its state. The resources data provided\n        is initial state gathered from the hypervisor. The driver is also\n        provided in case the plugin needs to obtain additional information\n        from the driver, for example, the memory calculation obtains\n        the memory overhead from the driver.\n\n        :param resources: the resources reported by the hypervisor\n        :param driver: the driver for the hypervisor\n\n        :returns: None\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'reset'"
op|','
name|'resources'
op|','
name|'driver'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resources
dedent|''
dedent|''
name|'def'
name|'test_resources'
op|'('
name|'self'
op|','
name|'usage'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the ability to support the given instance.\n\n        Each resource plugin is called to determine if it\'s resource is able\n        to support the additional requirements of a new instance. The\n        plugins either return None to indicate they have sufficient resource\n        available or a human readable string to indicate why they can not.\n\n        :param usage: the additional resource usage\n        :param limits: limits used for the calculation\n\n        :returns: a list or return values from the plugins\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'reasons'
op|'='
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'test'"
op|','
name|'usage'
op|','
name|'limits'
op|')'
newline|'\n'
name|'return'
name|'reasons'
newline|'\n'
nl|'\n'
DECL|member|update_from_instance
dedent|''
name|'def'
name|'update_from_instance'
op|'('
name|'self'
op|','
name|'usage'
op|','
name|'sign'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update the resource information to reflect the allocation for\n        an instance with the given resource usage.\n\n        :param usage: the resource usage of the instance\n        :param sign: has value 1 or -1. 1 indicates the instance is being\n        added to the current usage, -1 indicates the instance is being removed.\n\n        :returns: None\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'sign'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'add_instance'"
op|','
name|'usage'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'remove_instance'"
op|','
name|'usage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|write_resources
dedent|''
dedent|''
name|'def'
name|'write_resources'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write the resource data to populate the resources.\n\n        Each resource plugin is called to write its resource data to\n        resources.\n\n        :param resources: the compute node resources\n\n        :returns: None\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'write'"
op|','
name|'resources'
op|')'
newline|'\n'
nl|'\n'
DECL|member|report_free_resources
dedent|''
dedent|''
name|'def'
name|'report_free_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Each resource plugin is called to log free resource information.\n\n        :returns: None\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_mgr'
op|'.'
name|'map_method'
op|'('
string|"'report_free'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
