begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Compute-related Utilities and helpers."""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'notifier'
name|'import'
name|'api'
name|'as'
name|'notifier_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'log'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|notify_usage_exists
name|'def'
name|'notify_usage_exists'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
name|'current_period'
op|'='
name|'False'
op|','
nl|'\n'
name|'ignore_missing_network_data'
op|'='
name|'True'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'None'
op|','
name|'extra_usage_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Generates \'exists\' notification for an instance for usage auditing\n    purposes.\n\n    :param current_period: if True, this will generate a usage for the\n        current usage period; if False, this will generate a usage for the\n        previous audit period.\n\n    :param ignore_missing_network_data: if True, log any exceptions generated\n        while getting network info; if False, raise the exception.\n    :param system_metadata: system_metadata DB entries for the instance,\n        if not None.  *NOTE*: Currently unused here in trunk, but needed for\n        potential custom modifications.\n    :param extra_usage_info: Dictionary containing extra values to add or\n        override in the notification if not None.\n    """'
newline|'\n'
nl|'\n'
name|'audit_start'
op|','
name|'audit_end'
op|'='
name|'notifications'
op|'.'
name|'audit_period_bounds'
op|'('
name|'current_period'
op|')'
newline|'\n'
nl|'\n'
name|'bw'
op|'='
name|'notifications'
op|'.'
name|'bandwidth_usage'
op|'('
name|'instance_ref'
op|','
name|'audit_start'
op|','
nl|'\n'
name|'ignore_missing_network_data'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'system_metadata'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'system_metadata'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_ref'
op|'.'
name|'uuid'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# add image metadata to the notification:'
nl|'\n'
dedent|''
dedent|''
name|'image_meta'
op|'='
name|'notifications'
op|'.'
name|'image_meta'
op|'('
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
name|'extra_info'
op|'='
name|'dict'
op|'('
name|'audit_period_beginning'
op|'='
name|'str'
op|'('
name|'audit_start'
op|')'
op|','
nl|'\n'
name|'audit_period_ending'
op|'='
name|'str'
op|'('
name|'audit_end'
op|')'
op|','
nl|'\n'
name|'bandwidth'
op|'='
name|'bw'
op|','
name|'image_meta'
op|'='
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'extra_usage_info'
op|':'
newline|'\n'
indent|'        '
name|'extra_info'
op|'.'
name|'update'
op|'('
name|'extra_usage_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'notify_about_instance_usage'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
string|"'exists'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'system_metadata'
op|','
name|'extra_usage_info'
op|'='
name|'extra_info'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|notify_about_instance_usage
dedent|''
name|'def'
name|'notify_about_instance_usage'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'event_suffix'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
name|'system_metadata'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Send a notification about an instance.\n\n    :param event_suffix: Event type like "delete.start" or "exists"\n    :param network_info: Networking information, if provided.\n    :param system_metadata: system_metadata DB entries for the instance,\n        if provided.\n    :param extra_usage_info: Dictionary containing extra values to add or\n        override in the notification.\n    :param host: Compute host for the instance, if specified.  Default is\n        FLAGS.host\n    """'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'FLAGS'
op|'.'
name|'host'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'extra_usage_info'
op|':'
newline|'\n'
indent|'        '
name|'extra_usage_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'usage_info'
op|'='
name|'notifications'
op|'.'
name|'info_from_instance'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'system_metadata'
op|','
op|'**'
name|'extra_usage_info'
op|')'
newline|'\n'
nl|'\n'
name|'notifier_api'
op|'.'
name|'notify'
op|'('
name|'context'
op|','
string|"'compute.%s'"
op|'%'
name|'host'
op|','
nl|'\n'
string|"'compute.instance.%s'"
op|'%'
name|'event_suffix'
op|','
nl|'\n'
name|'notifier_api'
op|'.'
name|'INFO'
op|','
name|'usage_info'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_nw_info_for_instance
dedent|''
name|'def'
name|'get_nw_info_for_instance'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'info_cache'
op|'='
name|'instance'
op|'['
string|"'info_cache'"
op|']'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'cached_nwinfo'
op|'='
name|'info_cache'
op|'.'
name|'get'
op|'('
string|"'network_info'"
op|')'
name|'or'
op|'['
op|']'
newline|'\n'
name|'return'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'.'
name|'hydrate'
op|'('
name|'cached_nwinfo'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|has_audit_been_run
dedent|''
name|'def'
name|'has_audit_been_run'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'timestamp'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'begin'
op|','
name|'end'
op|'='
name|'utils'
op|'.'
name|'last_completed_audit_period'
op|'('
name|'before'
op|'='
name|'timestamp'
op|')'
newline|'\n'
name|'task_log'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'context'
op|','
string|'"instance_usage_audit"'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|')'
newline|'\n'
name|'if'
name|'task_log'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|start_instance_usage_audit
dedent|''
dedent|''
name|'def'
name|'start_instance_usage_audit'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
name|'num_instances'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'context'
op|','
string|'"instance_usage_audit"'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
nl|'\n'
name|'num_instances'
op|','
string|'"Instance usage audit started..."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|finish_instance_usage_audit
dedent|''
name|'def'
name|'finish_instance_usage_audit'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'db'
op|'.'
name|'task_log_end_task'
op|'('
name|'context'
op|','
string|'"instance_usage_audit"'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
nl|'\n'
name|'errors'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_audit_task_logs
dedent|''
name|'def'
name|'get_audit_task_logs'
op|'('
name|'context'
op|','
name|'begin'
op|'='
name|'None'
op|','
name|'end'
op|'='
name|'None'
op|','
name|'before'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a full log for all instance usage audit tasks on all computes.\n\n    :param begin: datetime beginning of audit period to get logs for,\n        Defaults to the beginning of the most recently completed\n        audit period prior to the \'before\' date.\n    :param end: datetime ending of audit period to get logs for,\n        Defaults to the ending of the most recently completed\n        audit period prior to the \'before\' date.\n    :param before: By default we look for the audit period most recently\n        completed before this datetime. Has no effect if both begin and end\n        are specified.\n    """'
newline|'\n'
name|'defbegin'
op|','
name|'defend'
op|'='
name|'utils'
op|'.'
name|'last_completed_audit_period'
op|'('
name|'before'
op|'='
name|'before'
op|')'
newline|'\n'
name|'if'
name|'begin'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'begin'
op|'='
name|'defbegin'
newline|'\n'
dedent|''
name|'if'
name|'end'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'end'
op|'='
name|'defend'
newline|'\n'
dedent|''
name|'task_logs'
op|'='
name|'db'
op|'.'
name|'task_log_get_all'
op|'('
name|'context'
op|','
string|'"instance_usage_audit"'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|')'
newline|'\n'
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
string|'"compute"'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'set'
op|'('
name|'serv'
op|'['
string|"'host'"
op|']'
name|'for'
name|'serv'
name|'in'
name|'services'
op|')'
newline|'\n'
name|'seen_hosts'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'done_hosts'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'running_hosts'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'total_errors'
op|'='
number|'0'
newline|'\n'
name|'total_items'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'tlog'
name|'in'
name|'task_logs'
op|':'
newline|'\n'
indent|'        '
name|'seen_hosts'
op|'.'
name|'add'
op|'('
name|'tlog'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'tlog'
op|'['
string|"'state'"
op|']'
op|'=='
string|'"DONE"'
op|':'
newline|'\n'
indent|'            '
name|'done_hosts'
op|'.'
name|'add'
op|'('
name|'tlog'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'tlog'
op|'['
string|"'state'"
op|']'
op|'=='
string|'"RUNNING"'
op|':'
newline|'\n'
indent|'            '
name|'running_hosts'
op|'.'
name|'add'
op|'('
name|'tlog'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'total_errors'
op|'+='
name|'tlog'
op|'['
string|"'errors'"
op|']'
newline|'\n'
name|'total_items'
op|'+='
name|'tlog'
op|'['
string|"'task_items'"
op|']'
newline|'\n'
dedent|''
name|'log'
op|'='
name|'dict'
op|'('
op|'('
name|'tl'
op|'['
string|"'host'"
op|']'
op|','
name|'dict'
op|'('
name|'state'
op|'='
name|'tl'
op|'['
string|"'state'"
op|']'
op|','
nl|'\n'
name|'instances'
op|'='
name|'tl'
op|'['
string|"'task_items'"
op|']'
op|','
nl|'\n'
name|'errors'
op|'='
name|'tl'
op|'['
string|"'errors'"
op|']'
op|','
nl|'\n'
name|'message'
op|'='
name|'tl'
op|'['
string|"'message'"
op|']'
op|')'
op|')'
nl|'\n'
name|'for'
name|'tl'
name|'in'
name|'task_logs'
op|')'
newline|'\n'
name|'missing_hosts'
op|'='
name|'hosts'
op|'-'
name|'seen_hosts'
newline|'\n'
name|'overall_status'
op|'='
string|'"%s hosts done. %s errors."'
op|'%'
op|'('
nl|'\n'
string|"'ALL'"
name|'if'
name|'len'
op|'('
name|'done_hosts'
op|')'
op|'=='
name|'len'
op|'('
name|'hosts'
op|')'
nl|'\n'
name|'else'
string|'"%s of %s"'
op|'%'
op|'('
name|'len'
op|'('
name|'done_hosts'
op|')'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
op|','
nl|'\n'
name|'total_errors'
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'period_beginning'
op|'='
name|'str'
op|'('
name|'begin'
op|')'
op|','
nl|'\n'
name|'period_ending'
op|'='
name|'str'
op|'('
name|'end'
op|')'
op|','
nl|'\n'
name|'num_hosts'
op|'='
name|'len'
op|'('
name|'hosts'
op|')'
op|','
nl|'\n'
name|'num_hosts_done'
op|'='
name|'len'
op|'('
name|'done_hosts'
op|')'
op|','
nl|'\n'
name|'num_hosts_running'
op|'='
name|'len'
op|'('
name|'running_hosts'
op|')'
op|','
nl|'\n'
name|'num_hosts_not_run'
op|'='
name|'len'
op|'('
name|'missing_hosts'
op|')'
op|','
nl|'\n'
name|'hosts_not_run'
op|'='
name|'list'
op|'('
name|'missing_hosts'
op|')'
op|','
nl|'\n'
name|'total_instances'
op|'='
name|'total_items'
op|','
nl|'\n'
name|'total_errors'
op|'='
name|'total_errors'
op|','
nl|'\n'
name|'overall_status'
op|'='
name|'overall_status'
op|','
nl|'\n'
name|'log'
op|'='
name|'log'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
