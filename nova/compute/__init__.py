begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
newline|'\n'
nl|'\n'
comment|'# Importing full names to not pollute the namespace and cause possible'
nl|'\n'
comment|"# collisions with use of 'from nova.compute import <foo>' elsewhere."
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'exception'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_compute_opts
name|'_compute_opts'
op|'='
op|'['
nl|'\n'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'compute_api_class'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'nova.compute.api.API'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The full class name of the '"
nl|'\n'
string|"'compute API class to use (deprecated)'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'_compute_opts'
op|')'
newline|'\n'
nl|'\n'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'enable'"
op|','
nl|'\n'
string|"'nova.cells.opts'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'cell_type'"
op|','
nl|'\n'
string|"'nova.cells.opts'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|COMPUTE_API
name|'COMPUTE_API'
op|'='
string|"'nova.compute.api.API'"
newline|'\n'
DECL|variable|COMPUTE_CELL_API
name|'COMPUTE_CELL_API'
op|'='
string|"'nova.compute.cells_api.ComputeCellsAPI'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_compute_api_class_name
name|'def'
name|'get_compute_api_class_name'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns the name of compute API class.\n    """'
newline|'\n'
name|'if'
name|'not'
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'enable'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'COMPUTE_API'
newline|'\n'
nl|'\n'
dedent|''
name|'cell_type'
op|'='
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'cell_type'
newline|'\n'
comment|'# If cell is enabled and cell_type option is not set (and thus get the'
nl|'\n'
comment|'# default value None), use the deprecated compute_api_class option.'
nl|'\n'
name|'if'
name|'cell_type'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'compute_api_class_name'
op|'='
name|'oslo'
op|'.'
name|'config'
op|'.'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'compute_api_class'
newline|'\n'
name|'LOG'
op|'.'
name|'deprecated'
op|'('
name|'_'
op|'('
string|'"The compute_api_class is now deprecated and "'
nl|'\n'
string|'"will be removed in next release. Please set the"'
nl|'\n'
string|'" cell_type option to api or compute"'
op|')'
op|')'
newline|'\n'
comment|'# If cell is enabled and this cell is an API-cell, use cell specific'
nl|'\n'
comment|'# computeAPI.'
nl|'\n'
dedent|''
name|'elif'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'        '
name|'compute_api_class_name'
op|'='
name|'COMPUTE_CELL_API'
newline|'\n'
comment|'# If cell is enabled and this cell is a COMPUTE-cell, use normal'
nl|'\n'
comment|'# computeAPI.'
nl|'\n'
dedent|''
name|'elif'
name|'cell_type'
op|'=='
string|"'compute'"
op|':'
newline|'\n'
indent|'        '
name|'compute_api_class_name'
op|'='
name|'COMPUTE_API'
newline|'\n'
comment|'# Otherwise, raise exception for invalid cell_type'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"cell_type must be configured as \'api\' or \'compute\'"'
op|')'
newline|'\n'
name|'raise'
name|'nova'
op|'.'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'compute_api_class_name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|API
dedent|''
name|'def'
name|'API'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'importutils'
op|'='
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'importutils'
newline|'\n'
name|'class_name'
op|'='
name|'get_compute_api_class_name'
op|'('
op|')'
newline|'\n'
name|'return'
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'class_name'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|HostAPI
dedent|''
name|'def'
name|'HostAPI'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns the \'HostAPI\' class from the same module as the configured compute\n    api\n    """'
newline|'\n'
name|'importutils'
op|'='
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'importutils'
newline|'\n'
name|'compute_api_class_name'
op|'='
name|'get_compute_api_class_name'
op|'('
op|')'
newline|'\n'
name|'compute_api_class'
op|'='
name|'importutils'
op|'.'
name|'import_class'
op|'('
name|'compute_api_class_name'
op|')'
newline|'\n'
name|'class_name'
op|'='
name|'compute_api_class'
op|'.'
name|'__module__'
op|'+'
string|'".HostAPI"'
newline|'\n'
name|'return'
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'class_name'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|InstanceActionAPI
dedent|''
name|'def'
name|'InstanceActionAPI'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns the \'InstanceActionAPI\' class from the same module as the\n    configured compute api.\n    """'
newline|'\n'
name|'importutils'
op|'='
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'importutils'
newline|'\n'
name|'compute_api_class_name'
op|'='
name|'get_compute_api_class_name'
op|'('
op|')'
newline|'\n'
name|'compute_api_class'
op|'='
name|'importutils'
op|'.'
name|'import_class'
op|'('
name|'compute_api_class_name'
op|')'
newline|'\n'
name|'class_name'
op|'='
name|'compute_api_class'
op|'.'
name|'__module__'
op|'+'
string|'".InstanceActionAPI"'
newline|'\n'
name|'return'
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'class_name'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
