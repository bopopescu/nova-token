begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# Copyright 2011 Justin Santa Barbara'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
name|'as'
name|'ts'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
name|'as'
name|'vm'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
name|'as'
name|'ctxt'
newline|'\n'
nl|'\n'
comment|'# Function names that run the state check before their execution:'
nl|'\n'
DECL|variable|REBOOT
name|'REBOOT'
op|'='
string|"'reboot'"
newline|'\n'
DECL|variable|START
name|'START'
op|'='
string|"'start'"
newline|'\n'
DECL|variable|REBUILD
name|'REBUILD'
op|'='
string|"'rebuild'"
newline|'\n'
DECL|variable|STOP
name|'STOP'
op|'='
string|"'stop'"
newline|'\n'
DECL|variable|PAUSE
name|'PAUSE'
op|'='
string|"'pause'"
newline|'\n'
DECL|variable|BACKUP
name|'BACKUP'
op|'='
string|"'backup'"
newline|'\n'
DECL|variable|UNPAUSE
name|'UNPAUSE'
op|'='
string|"'unpause'"
newline|'\n'
DECL|variable|SUSPEND
name|'SUSPEND'
op|'='
string|"'suspend'"
newline|'\n'
DECL|variable|RESUME
name|'RESUME'
op|'='
string|"'resume'"
newline|'\n'
DECL|variable|RESCUE
name|'RESCUE'
op|'='
string|"'rescue'"
newline|'\n'
DECL|variable|UNRESCUE
name|'UNRESCUE'
op|'='
string|"'unrescue'"
newline|'\n'
DECL|variable|SNAPSHOT
name|'SNAPSHOT'
op|'='
string|"'snapshot'"
newline|'\n'
DECL|variable|RESIZE
name|'RESIZE'
op|'='
string|"'resize'"
newline|'\n'
DECL|variable|CONFIRM_RESIZE
name|'CONFIRM_RESIZE'
op|'='
string|"'confirm_resize'"
newline|'\n'
DECL|variable|REVERT_RESIZE
name|'REVERT_RESIZE'
op|'='
string|"'revert_resize'"
newline|'\n'
DECL|variable|DELETE
name|'DELETE'
op|'='
string|"'delete'"
newline|'\n'
DECL|variable|SOFT_DELETE
name|'SOFT_DELETE'
op|'='
string|"'soft_delete'"
newline|'\n'
DECL|variable|FORCE_DELETE
name|'FORCE_DELETE'
op|'='
string|"'force_delete'"
newline|'\n'
DECL|variable|RESTORE
name|'RESTORE'
op|'='
string|"'restore'"
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Aux variables to save cpu time, used by blocker dictionaries'
nl|'\n'
DECL|variable|all_ts_but_resize_verify
name|'all_ts_but_resize_verify'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'ts'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'ts'
op|'.'
name|'RESIZE_VERIFY'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|all_vm_but_act_resc
name|'all_vm_but_act_resc'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'ACTIVE'
op|','
name|'vm'
op|'.'
name|'RESCUED'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|all_vm_but_active
name|'all_vm_but_active'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'ACTIVE'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Call blocked if the vm task_state is found in the corresponding list'
nl|'\n'
DECL|variable|block_for_task_state
name|'block_for_task_state'
op|'='
op|'{'
nl|'\n'
name|'REBOOT'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'START'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'REBUILD'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'PAUSE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'STOP'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'UNPAUSE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'SUSPEND'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'RESUME'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'RESCUE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'UNRESCUE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'SNAPSHOT'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'BACKUP'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'RESIZE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'CONFIRM_RESIZE'
op|':'
name|'all_ts_but_resize_verify'
op|','
nl|'\n'
name|'REVERT_RESIZE'
op|':'
name|'all_ts_but_resize_verify'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Call blocked if the vm vm_state is found in the corresponding list'
nl|'\n'
DECL|variable|block_for_vm_state
name|'block_for_vm_state'
op|'='
op|'{'
nl|'\n'
name|'REBOOT'
op|':'
name|'all_vm_but_act_resc'
op|','
nl|'\n'
name|'START'
op|':'
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'STOPPED'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'REBUILD'
op|':'
name|'all_vm_but_active'
op|','
nl|'\n'
name|'PAUSE'
op|':'
name|'all_vm_but_act_resc'
op|','
nl|'\n'
name|'STOP'
op|':'
name|'all_vm_but_act_resc'
op|','
nl|'\n'
name|'UNPAUSE'
op|':'
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'PAUSED'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'SUSPEND'
op|':'
name|'all_vm_but_act_resc'
op|','
nl|'\n'
name|'RESUME'
op|':'
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'SUSPENDED'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'RESCUE'
op|':'
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'ACTIVE'
op|','
name|'vm'
op|'.'
name|'STOPPED'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'UNRESCUE'
op|':'
name|'list'
op|'('
name|'set'
op|'('
name|'vm'
op|'.'
name|'get_list'
op|'('
op|')'
op|')'
op|'-'
name|'set'
op|'('
op|'['
name|'vm'
op|'.'
name|'ACTIVE'
op|','
name|'vm'
op|'.'
name|'RESCUED'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'SNAPSHOT'
op|':'
name|'all_vm_but_active'
op|','
nl|'\n'
name|'BACKUP'
op|':'
name|'all_vm_but_active'
op|','
nl|'\n'
name|'RESIZE'
op|':'
name|'all_vm_but_active'
op|','
nl|'\n'
name|'CONFIRM_RESIZE'
op|':'
name|'all_vm_but_active'
op|','
nl|'\n'
name|'REVERT_RESIZE'
op|':'
name|'all_vm_but_active'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Call blocked if the combination of vm_state, power_state and task_state is'
nl|'\n'
comment|'# found in the corresponding list'
nl|'\n'
DECL|variable|block_for_combination
name|'block_for_combination'
op|'='
op|'{'
nl|'\n'
name|'CONFIRM_RESIZE'
op|':'
op|'['
op|'{'
string|"'vm_state'"
op|':'
name|'vm'
op|'.'
name|'ACTIVE'
op|','
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|']'
op|','
nl|'\n'
name|'REVERT_RESIZE'
op|':'
op|'['
op|'{'
string|"'vm_state'"
op|':'
name|'vm'
op|'.'
name|'ACTIVE'
op|','
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|is_blocked
name|'def'
name|'is_blocked'
op|'('
name|'method_name'
op|','
name|'context'
op|','
name|'instance_ref'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Is the method blocked for the VM state?\n\n    This method returns False if the state of the vm is found\n    in the blocked dictionaries for the method.\n    """'
newline|'\n'
name|'if'
name|'instance_ref'
op|'['
string|"'task_state'"
op|']'
name|'in'
name|'block_for_task_state'
op|'.'
name|'get'
op|'('
name|'method_name'
op|','
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'instance_ref'
op|'['
string|"'vm_state'"
op|']'
name|'in'
name|'block_for_vm_state'
op|'.'
name|'get'
op|'('
name|'method_name'
op|','
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'method_name'
name|'in'
name|'block_for_combination'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_is_combination_blocked'
op|'('
name|'method_name'
op|','
name|'instance_ref'
op|')'
newline|'\n'
comment|'# Allow the method if not found in any list'
nl|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_combination_blocked
dedent|''
name|'def'
name|'_is_combination_blocked'
op|'('
name|'method_name'
op|','
name|'instance_ref'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Is the method blocked according to the blocked_combination dictionary?\n\n    To be blocked, all the elements\n    in a dictionary need to match the vm states.\n    If a value is not present in a dictionary we assume that the dictionary\n    applies for any value of that particular element\n    """'
newline|'\n'
name|'for'
name|'blocked_element'
name|'in'
name|'block_for_combination'
op|'['
name|'method_name'
op|']'
op|':'
newline|'\n'
comment|'# Check power state'
nl|'\n'
indent|'        '
name|'if'
string|"'power_state'"
name|'in'
name|'blocked_element'
name|'and'
name|'instance_ref'
op|'['
string|"'power_state'"
op|']'
op|'!='
name|'blocked_element'
op|'['
string|"'power_state'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
comment|'# Check vm state'
nl|'\n'
dedent|''
name|'if'
string|"'vm_state'"
name|'in'
name|'blocked_element'
name|'and'
name|'instance_ref'
op|'['
string|"'vm_state'"
op|']'
op|'!='
name|'blocked_element'
op|'['
string|"'vm_state'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
comment|'# Check task state'
nl|'\n'
dedent|''
name|'if'
string|"'task_state'"
name|'in'
name|'blocked_element'
name|'and'
name|'instance_ref'
op|'['
string|"'task_state'"
op|']'
op|'!='
name|'blocked_element'
op|'['
string|"'task_state'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
comment|'# After analyzing all the dictionaries for the method, none tells us to'
nl|'\n'
comment|'# block the function'
nl|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
endmarker|''
end_unit
