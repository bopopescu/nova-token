begin_unit
comment|'# Copyright (c) 2012 OpenStack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTrack resources like memory and disk for a compute host.  Provides the\nscheduler with useful information about availability through the ComputeNode\nmodel.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'claims'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'conductor'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'lockutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
DECL|variable|resource_tracker_opts
name|'resource_tracker_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'reserved_host_disk_mb'"
op|','
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Amount of disk in MB to reserve for the host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'reserved_host_memory_mb'"
op|','
name|'default'
op|'='
number|'512'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Amount of memory in MB to reserve for the host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'compute_stats_class'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'nova.compute.stats.Stats'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Class that will manage stats for the local compute host'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'resource_tracker_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|COMPUTE_RESOURCE_SEMAPHORE
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|'='
name|'claims'
op|'.'
name|'COMPUTE_RESOURCE_SEMAPHORE'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceTracker
name|'class'
name|'ResourceTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute helper class for keeping track of resource usage as instances\n    are built and destroyed.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'driver'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'nodename'
op|'='
name|'nodename'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_stats_class'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracked_instances'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tracked_migrations'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conductor_api'
op|'='
name|'conductor'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'lockutils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|','
string|"'nova-'"
op|')'
newline|'\n'
DECL|member|instance_claim
name|'def'
name|'instance_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'limits'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate that some resources are needed for an upcoming compute\n        instance build operation.\n\n        This should be called before the compute node is about to perform\n        an instance build operation that will consume additional resources.\n\n        :param context: security context\n        :param instance_ref: instance to reserve resources for\n        :param limits: Dict of oversubscription limits for memory, disk,\n                       and CPUs.\n        :returns: A Claim ticket representing the reserved resources.  It can\n                  be used to revert the resource usage if an error occurs\n                  during the instance build.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
comment|"# compute_driver doesn't support resource tracking, just"
nl|'\n'
comment|"# set the 'host' and node fields and continue the build:"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_set_instance_host_and_node'
op|'('
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
name|'return'
name|'claims'
op|'.'
name|'NopClaim'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity checks:'
nl|'\n'
dedent|''
name|'if'
name|'instance_ref'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Host field should not be set on the instance until "'
nl|'\n'
string|'"resources have been claimed."'
op|')'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance_ref'
op|'['
string|"'node'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Node field should be not be set on the instance "'
nl|'\n'
string|'"until resources have been claimed."'
op|')'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'claim'
op|'='
name|'claims'
op|'.'
name|'Claim'
op|'('
name|'instance_ref'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'claim'
op|'.'
name|'test'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_set_instance_host_and_node'
op|'('
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# Mark resources in-use and update stats'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# persist changes to the compute node:'
nl|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'claim'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'lockutils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|','
string|"'nova-'"
op|')'
newline|'\n'
DECL|member|resize_claim
name|'def'
name|'resize_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'instance_type'
op|','
name|'limits'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate that resources are needed for a resize operation to this\n        compute host.\n        :param context: security context\n        :param instance_ref: instance to reserve resources for\n        :param instance_type: new instance_type being resized to\n        :param limits: Dict of oversubscription limits for memory, disk,\n                       and CPUs.\n        :returns: A Claim ticket representing the reserved resources.  This\n                  should be turned into finalize  a resource claim or free\n                  resources after the compute operation is finished.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
comment|"# compute_driver doesn't support resource tracking, just"
nl|'\n'
comment|'# generate the migration record and continue the resize:'
nl|'\n'
indent|'            '
name|'migration_ref'
op|'='
name|'self'
op|'.'
name|'_create_migration'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'instance_type'
op|')'
newline|'\n'
name|'return'
name|'claims'
op|'.'
name|'NopClaim'
op|'('
name|'migration'
op|'='
name|'migration_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'claim'
op|'='
name|'claims'
op|'.'
name|'ResizeClaim'
op|'('
name|'instance_ref'
op|','
name|'instance_type'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'claim'
op|'.'
name|'test'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'migration_ref'
op|'='
name|'self'
op|'.'
name|'_create_migration'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'instance_type'
op|')'
newline|'\n'
name|'claim'
op|'.'
name|'migration'
op|'='
name|'migration_ref'
newline|'\n'
nl|'\n'
comment|'# Mark the resources in-use for the resize landing on this'
nl|'\n'
comment|'# compute host:'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_migration'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'migration_ref'
op|')'
newline|'\n'
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'elevated'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'claim'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_migration
dedent|''
dedent|''
name|'def'
name|'_create_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'instance_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a migration record for the upcoming resize.  This should\n        be done while the COMPUTE_RESOURCES_SEMAPHORE is held so the resource\n        claim will not be lost if the audit process starts.\n        """'
newline|'\n'
comment|'# TODO(russellb): no-db-compute: Send the old instance type'
nl|'\n'
comment|"# info that is needed via rpc so db access isn't required"
nl|'\n'
comment|'# here.'
nl|'\n'
name|'old_instance_type_id'
op|'='
name|'instance'
op|'['
string|"'instance_type_id'"
op|']'
newline|'\n'
name|'old_instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type'
op|'('
nl|'\n'
name|'old_instance_type_id'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'source_compute'"
op|':'
name|'instance'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
string|"'source_node'"
op|':'
name|'instance'
op|'['
string|"'node'"
op|']'
op|','
nl|'\n'
string|"'dest_compute'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'dest_node'"
op|':'
name|'self'
op|'.'
name|'nodename'
op|','
nl|'\n'
string|"'dest_host'"
op|':'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|','
nl|'\n'
string|"'old_instance_type_id'"
op|':'
name|'old_instance_type'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'new_instance_type_id'"
op|':'
name|'instance_type'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'pre-migrating'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_instance_host_and_node
dedent|''
name|'def'
name|'_set_instance_host_and_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tag the instance as belonging to this host.  This should be done\n        while the COMPUTE_RESOURCES_SEMPAHORE is held so the resource claim\n        will not be lost if the audit process starts.\n        """'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
string|"'node'"
op|':'
name|'self'
op|'.'
name|'nodename'
op|','
nl|'\n'
string|"'launched_on'"
op|':'
name|'self'
op|'.'
name|'host'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conductor_api'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'**'
name|'values'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'host'"
op|']'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
name|'instance_ref'
op|'['
string|"'launched_on'"
op|']'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
name|'instance_ref'
op|'['
string|"'node'"
op|']'
op|'='
name|'self'
op|'.'
name|'nodename'
newline|'\n'
nl|'\n'
DECL|member|abort_instance_claim
dedent|''
name|'def'
name|'abort_instance_claim'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove usage from the given instance"""'
newline|'\n'
comment|'# flag the instance as deleted to revert the resource usage'
nl|'\n'
comment|'# and associated stats:'
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|abort_resize_claim
dedent|''
name|'def'
name|'abort_resize_claim'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
name|'instance_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove usage for an incoming migration"""'
newline|'\n'
name|'if'
name|'instance_uuid'
name|'in'
name|'self'
op|'.'
name|'tracked_migrations'
op|':'
newline|'\n'
indent|'            '
name|'migration'
op|','
name|'itype'
op|'='
name|'self'
op|'.'
name|'tracked_migrations'
op|'.'
name|'pop'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'instance_type'
op|'['
string|"'id'"
op|']'
op|'=='
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats'
op|'.'
name|'update_stats_for_migration'
op|'('
name|'itype'
op|','
name|'sign'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update_usage'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'itype'
op|','
name|'sign'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'lockutils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|','
string|"'nova-'"
op|')'
newline|'\n'
DECL|member|update_usage
name|'def'
name|'update_usage'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update the resource usage and stats after a change in an\n        instance\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
comment|"# don't update usage for this instance unless it submitted a resource"
nl|'\n'
comment|'# claim first:'
nl|'\n'
name|'if'
name|'uuid'
name|'in'
name|'self'
op|'.'
name|'tracked_instances'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|disabled
name|'def'
name|'disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'compute_node'
name|'is'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'lockutils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|','
string|"'nova-'"
op|')'
newline|'\n'
DECL|member|update_available_resource
name|'def'
name|'update_available_resource'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Override in-memory calculations of compute node resource usage based\n        on data audited from the hypervisor layer.\n\n        Add in resource claims in progress to account for operations that have\n        declared a need for resources, but not necessarily retrieved them from\n        the hypervisor layer yet.\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Auditing locally available compute resources"'
op|')'
op|')'
newline|'\n'
name|'resources'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_available_resource'
op|'('
name|'self'
op|'.'
name|'nodename'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resources'
op|':'
newline|'\n'
comment|'# The virt driver does not support this function'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Virt driver does not support "'
nl|'\n'
string|'"\'get_available_resource\'  Compute tracking is disabled."'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'None'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_verify_resources'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_report_hypervisor_resource_view'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
comment|'# Grab all instances assigned to this node:'
nl|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'nodename'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now calculate usage based on instance utilization:'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instances'
op|'('
name|'resources'
op|','
name|'instances'
op|')'
newline|'\n'
nl|'\n'
comment|'# Grab all in-progress migrations:'
nl|'\n'
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'nodename'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'resources'
op|','
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_report_final_resource_view'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_sync_compute_node'
op|'('
name|'context'
op|','
name|'resources'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sync_compute_node
dedent|''
name|'def'
name|'_sync_compute_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create or update the compute node DB record"""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
comment|'# we need a copy of the ComputeNode record:'
nl|'\n'
indent|'            '
name|'service'
op|'='
name|'self'
op|'.'
name|'_get_service'
op|'('
name|'context'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'service'
op|':'
newline|'\n'
comment|'# no service record, disable resource'
nl|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'compute_node_refs'
op|'='
name|'service'
op|'['
string|"'compute_node'"
op|']'
newline|'\n'
name|'if'
name|'compute_node_refs'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'cn'
name|'in'
name|'compute_node_refs'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'cn'
op|'.'
name|'get'
op|'('
string|"'hypervisor_hostname'"
op|')'
op|'=='
name|'self'
op|'.'
name|'nodename'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'cn'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
comment|'# Need to create the ComputeNode record:'
nl|'\n'
indent|'            '
name|'resources'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'context'
op|','
name|'resources'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record created for %s '"
op|')'
op|'%'
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# just update the record:'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'prune_stats'
op|'='
name|'True'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record updated for %s '"
op|')'
op|'%'
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create
dedent|''
dedent|''
name|'def'
name|'_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create the compute node in the DB"""'
newline|'\n'
comment|'# initialize load stats from existing instances:'
nl|'\n'
name|'compute_node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'dict'
op|'('
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_service
dedent|''
name|'def'
name|'_get_service'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'db'
op|'.'
name|'service_get_all_compute_by_host'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"No service record for host %s"'
op|')'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_report_hypervisor_resource_view
dedent|''
dedent|''
name|'def'
name|'_report_hypervisor_resource_view'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Log the hypervisor\'s view of free memory in and free disk.\n        This is just a snapshot of resource usage recorded by the\n        virt driver.\n        """'
newline|'\n'
name|'free_ram_mb'
op|'='
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
newline|'\n'
name|'free_disk_gb'
op|'='
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free ram (MB): %s"'
op|')'
op|'%'
name|'free_ram_mb'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free disk (GB): %s"'
op|')'
op|'%'
name|'free_disk_gb'
op|')'
newline|'\n'
nl|'\n'
name|'vcpus'
op|'='
name|'resources'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'if'
name|'vcpus'
op|':'
newline|'\n'
indent|'            '
name|'free_vcpus'
op|'='
name|'vcpus'
op|'-'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free VCPUs: %s"'
op|')'
op|'%'
name|'free_vcpus'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: VCPU information unavailable"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_report_final_resource_view
dedent|''
dedent|''
name|'def'
name|'_report_final_resource_view'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Report final calculate of free memory and free disk including\n        instance calculations and in-progress resource claims.  These\n        values will be exposed via the compute node table to the scheduler.\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free ram (MB): %s"'
op|')'
op|'%'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free disk (GB): %s"'
op|')'
op|'%'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'vcpus'
op|'='
name|'resources'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'if'
name|'vcpus'
op|':'
newline|'\n'
indent|'            '
name|'free_vcpus'
op|'='
name|'vcpus'
op|'-'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free VCPUS: %s"'
op|')'
op|'%'
name|'free_vcpus'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free VCPU information unavailable"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update
dedent|''
dedent|''
name|'def'
name|'_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|','
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Persist the compute node updates to the DB"""'
newline|'\n'
name|'compute_node'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|','
name|'prune_stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'dict'
op|'('
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|confirm_resize
dedent|''
name|'def'
name|'confirm_resize'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'migration'
op|','
name|'status'
op|'='
string|"'confirmed'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Cleanup usage for a confirmed resize"""'
newline|'\n'
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'elevated'
op|','
name|'migration'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'status'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'update_available_resource'
op|'('
name|'elevated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|revert_resize
dedent|''
name|'def'
name|'revert_resize'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'migration'
op|','
name|'status'
op|'='
string|"'reverted'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Cleanup usage for a reverted resize"""'
newline|'\n'
name|'self'
op|'.'
name|'confirm_resize'
op|'('
name|'context'
op|','
name|'migration'
op|','
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_usage
dedent|''
name|'def'
name|'_update_usage'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'usage'
op|','
name|'sign'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'usage'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'usage'
op|'['
string|"'root_gb'"
op|']'
newline|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'usage'
op|'['
string|"'ephemeral_gb'"
op|']'
newline|'\n'
nl|'\n'
comment|'# free ram and disk may be negative, depending on policy:'
nl|'\n'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'resources'
op|'['
string|"'running_vms'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'num_instances'
newline|'\n'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'num_vcpus_used'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_migration
dedent|''
name|'def'
name|'_update_usage_from_migration'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'migration'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update usage for a single migration.  The record may\n        represent an incoming or outbound migration.\n        """'
newline|'\n'
name|'uuid'
op|'='
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Updating from migration %s"'
op|')'
op|'%'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'incoming'
op|'='
op|'('
name|'migration'
op|'['
string|"'dest_compute'"
op|']'
op|'=='
name|'self'
op|'.'
name|'host'
name|'and'
nl|'\n'
name|'migration'
op|'['
string|"'dest_node'"
op|']'
op|'=='
name|'self'
op|'.'
name|'nodename'
op|')'
newline|'\n'
name|'outbound'
op|'='
op|'('
name|'migration'
op|'['
string|"'source_compute'"
op|']'
op|'=='
name|'self'
op|'.'
name|'host'
name|'and'
nl|'\n'
name|'migration'
op|'['
string|"'source_node'"
op|']'
op|'=='
name|'self'
op|'.'
name|'nodename'
op|')'
newline|'\n'
name|'same_node'
op|'='
op|'('
name|'incoming'
name|'and'
name|'outbound'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'tracked_instances'
op|'.'
name|'get'
op|'('
name|'uuid'
op|','
name|'None'
op|')'
newline|'\n'
name|'itype'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'same_node'
op|':'
newline|'\n'
comment|'# same node resize. record usage for whichever instance type the'
nl|'\n'
comment|'# instance is *not* in:'
nl|'\n'
indent|'            '
name|'if'
op|'('
name|'instance'
op|'['
string|"'instance_type_id'"
op|']'
op|'=='
nl|'\n'
name|'migration'
op|'['
string|"'old_instance_type_id'"
op|']'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'itype'
op|'='
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# instance record already has new flavor, hold space for a'
nl|'\n'
comment|'# possible revert to the old instance type:'
nl|'\n'
indent|'                '
name|'itype'
op|'='
name|'migration'
op|'['
string|"'old_instance_type_id'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
name|'incoming'
name|'and'
name|'not'
name|'instance'
op|':'
newline|'\n'
comment|'# instance has not yet migrated here:'
nl|'\n'
indent|'            '
name|'itype'
op|'='
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'outbound'
name|'and'
name|'not'
name|'instance'
op|':'
newline|'\n'
comment|'# instance migrated, but record usage for a possible revert:'
nl|'\n'
indent|'            '
name|'itype'
op|'='
name|'migration'
op|'['
string|"'old_instance_type_id'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'itype'
op|':'
newline|'\n'
indent|'            '
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type'
op|'('
name|'itype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'.'
name|'update_stats_for_migration'
op|'('
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update_usage'
op|'('
name|'resources'
op|','
name|'instance_type'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'stats'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
newline|'\n'
name|'self'
op|'.'
name|'tracked_migrations'
op|'['
name|'uuid'
op|']'
op|'='
op|'('
name|'migration'
op|','
name|'instance_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_migrations
dedent|''
dedent|''
name|'def'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'migrations'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracked_migrations'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'filtered'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# do some defensive filtering against bad migrations records in the'
nl|'\n'
comment|'# database:'
nl|'\n'
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'instance'
op|'='
name|'migration'
op|'['
string|"'instance'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'instance'
op|':'
newline|'\n'
comment|'# migration referencing deleted instance'
nl|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
comment|"# skip migration if instance isn't in a resize state:"
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_instance_in_resize_state'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Instance not resizing, skipping migration."'
op|')'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
comment|'# filter to most recently updated migration for each instance:'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'filtered'
op|'.'
name|'get'
op|'('
name|'uuid'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'m'
name|'or'
name|'migration'
op|'['
string|"'updated_at'"
op|']'
op|'>='
name|'m'
op|'['
string|"'updated_at'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'filtered'
op|'['
name|'uuid'
op|']'
op|'='
name|'migration'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'migration'
name|'in'
name|'filtered'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage_from_migration'
op|'('
name|'resources'
op|','
name|'migration'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_instance
dedent|''
dedent|''
name|'def'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update usage for a single instance."""'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'is_new_instance'
op|'='
name|'uuid'
name|'not'
name|'in'
name|'self'
op|'.'
name|'tracked_instances'
newline|'\n'
name|'is_deleted_instance'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'=='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
nl|'\n'
name|'if'
name|'is_new_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracked_instances'
op|'['
name|'uuid'
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'sign'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'is_deleted_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracked_instances'
op|'.'
name|'pop'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'sign'
op|'='
op|'-'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats'
op|'.'
name|'update_stats_for_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|"# if it's a new or deleted instance:"
nl|'\n'
name|'if'
name|'is_new_instance'
name|'or'
name|'is_deleted_instance'
op|':'
newline|'\n'
comment|'# new instance, update compute node resource usage:'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage'
op|'('
name|'resources'
op|','
name|'instance'
op|','
name|'sign'
op|'='
name|'sign'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'resources'
op|'['
string|"'current_workload'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'calculate_workload'
op|'('
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'stats'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_instances
dedent|''
name|'def'
name|'_update_usage_from_instances'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calculate resource usage based on instance utilization.  This is\n        different than the hypervisor\'s view as it will account for all\n        instances assigned to the local compute host, even if they are not\n        currently powered on.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'tracked_instances'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# purge old stats'
nl|'\n'
name|'self'
op|'.'
name|'stats'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# set some intiial values, reserve room for host/hypervisor:'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'reserved_host_disk_mb'
op|'/'
number|'1024'
newline|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'reserved_host_memory_mb'
newline|'\n'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'current_workload'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'resources'
op|'['
string|"'running_vms'"
op|']'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'resources'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_resources
dedent|''
dedent|''
name|'def'
name|'_verify_resources'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource_keys'
op|'='
op|'['
string|'"vcpus"'
op|','
string|'"memory_mb"'
op|','
string|'"local_gb"'
op|','
string|'"cpu_info"'
op|','
nl|'\n'
string|'"vcpus_used"'
op|','
string|'"memory_mb_used"'
op|','
string|'"local_gb_used"'
op|']'
newline|'\n'
nl|'\n'
name|'missing_keys'
op|'='
op|'['
name|'k'
name|'for'
name|'k'
name|'in'
name|'resource_keys'
name|'if'
name|'k'
name|'not'
name|'in'
name|'resources'
op|']'
newline|'\n'
name|'if'
name|'missing_keys'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'_'
op|'('
string|'"Missing keys: %s"'
op|')'
op|'%'
name|'missing_keys'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_instance_in_resize_state
dedent|''
dedent|''
name|'def'
name|'_instance_in_resize_state'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
newline|'\n'
name|'task'
op|'='
name|'instance'
op|'['
string|"'task_state'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'vm'
op|'=='
name|'vm_states'
op|'.'
name|'RESIZED'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'vm'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
name|'and'
name|'task'
name|'in'
op|'['
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
name|'task_states'
op|'.'
name|'RESIZE_MIGRATED'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_FINISH'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
