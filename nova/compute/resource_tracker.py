begin_unit
comment|'# Copyright (c) 2012 OpenStack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTrack resources like memory and disk for a compute host.  Provides the\nscheduler with useful information about availability through the ComputeNode\nmodel.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|resource_tracker_opts
name|'resource_tracker_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'reserved_host_disk_mb'"
op|','
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Amount of disk in MB to reserve for the host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'reserved_host_memory_mb'"
op|','
name|'default'
op|'='
number|'512'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Amount of memory in MB to reserve for the host'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'claim_timeout_seconds'"
op|','
name|'default'
op|'='
number|'600'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'How long, in seconds, before a resource claim times out'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'compute_stats_class'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'nova.compute.stats.Stats'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Class that will manage stats for the local compute host'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'resource_tracker_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|COMPUTE_RESOURCE_SEMAPHORE
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|'='
string|'"compute_resources"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Claim
name|'class'
name|'Claim'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A declaration that a compute host operation will require free resources.\n\n    This information will be used to help keep the local compute hosts\'s\n    ComputeNode model in sync to aid the scheduler in making efficient / more\n    correct decisions with respect to host selection.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'timeout'
op|'='
name|'timeout'
newline|'\n'
name|'self'
op|'.'
name|'expire_ts'
op|'='
name|'timeutils'
op|'.'
name|'utcnow_ts'
op|'('
op|')'
op|'+'
name|'timeout'
newline|'\n'
nl|'\n'
DECL|member|is_expired
dedent|''
name|'def'
name|'is_expired'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Determine if this adjustment is old enough that we can assume it\'s\n        no longer needed.\n        """'
newline|'\n'
name|'return'
name|'timeutils'
op|'.'
name|'utcnow_ts'
op|'('
op|')'
op|'>'
name|'self'
op|'.'
name|'expire_ts'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|claim_id
name|'def'
name|'claim_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|disk_gb
name|'def'
name|'disk_gb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'root_gb'"
op|']'
op|'+'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'ephemeral_gb'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|memory_mb
name|'def'
name|'memory_mb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|vcpus
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"[Claim %s: %d MB memory, %d GB disk, %d VCPUS]"'
op|'%'
op|'('
name|'self'
op|'.'
name|'claim_id'
op|','
name|'self'
op|'.'
name|'memory_mb'
op|','
name|'self'
op|'.'
name|'disk_gb'
op|','
name|'self'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceContextManager
dedent|''
dedent|''
name|'class'
name|'ResourceContextManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'claim'
op|','
name|'tracker'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
newline|'\n'
name|'self'
op|'.'
name|'claim'
op|'='
name|'claim'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'tracker'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'claim'
name|'and'
name|'not'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|':'
newline|'\n'
comment|'# insufficient resources to complete request'
nl|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
name|'exc_type'
op|','
name|'exc_val'
op|','
name|'exc_tb'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'claim'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'exc_type'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'finish_resource_claim'
op|'('
name|'self'
op|'.'
name|'claim'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'abort_resource_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'claim'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceTracker
dedent|''
dedent|''
dedent|''
name|'class'
name|'ResourceTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute helper class for keeping track of resource usage as instances\n    are built and destroyed.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'next_claim_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'claims'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'compute_stats_class'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracked_instances'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|resource_claim
dedent|''
name|'def'
name|'resource_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'limits'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim'
op|'='
name|'self'
op|'.'
name|'begin_resource_claim'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
name|'limits'
op|')'
newline|'\n'
name|'return'
name|'ResourceContextManager'
op|'('
name|'context'
op|','
name|'claim'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|')'
newline|'\n'
DECL|member|begin_resource_claim
name|'def'
name|'begin_resource_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_ref'
op|','
name|'limits'
op|'='
name|'None'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate that some resources are needed for an upcoming compute\n        instance build operation.\n\n        This should be called before the compute node is about to perform\n        an instance build operation that will consume additional resources.\n\n        :param context: security context\n        :param instance_ref: instance to reserve resources for\n        :param limits: Dict of oversubscription limits for memory, disk,\n                       and CPUs.\n        :param timeout: How long, in seconds, the operation that requires\n                        these resources should take to actually allocate what\n                        it needs from the hypervisor.  If the timeout is\n                        exceeded, the new resource claim will assume caller\n                        before releasing the resources.\n        :returns: An integer \'claim ticket\'.  This should be turned into\n                  finalize  a resource claim or free resources after the\n                  compute operation is finished. Returns None if the claim\n                  failed.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'limits'
op|':'
newline|'\n'
indent|'            '
name|'limits'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'timeout'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'FLAGS'
op|'.'
name|'claim_timeout_seconds'
newline|'\n'
nl|'\n'
comment|'# If an individual limit is None, the resource will be considered'
nl|'\n'
comment|'# unlimited:'
nl|'\n'
dedent|''
name|'memory_mb_limit'
op|'='
name|'limits'
op|'.'
name|'get'
op|'('
string|"'memory_mb'"
op|')'
newline|'\n'
name|'disk_gb_limit'
op|'='
name|'limits'
op|'.'
name|'get'
op|'('
string|"'disk_gb'"
op|')'
newline|'\n'
name|'vcpu_limit'
op|'='
name|'limits'
op|'.'
name|'get'
op|'('
string|"'vcpu'"
op|')'
newline|'\n'
nl|'\n'
name|'memory_mb'
op|'='
name|'instance_ref'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'disk_gb'
op|'='
name|'instance_ref'
op|'['
string|"'root_gb'"
op|']'
op|'+'
name|'instance_ref'
op|'['
string|"'ephemeral_gb'"
op|']'
newline|'\n'
name|'vcpus'
op|'='
name|'instance_ref'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Attempting claim: memory %(memory_mb)d MB, disk %(disk_gb)d "'
nl|'\n'
string|'"GB, VCPUs %(vcpus)d"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test for resources:'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_can_claim_memory'
op|'('
name|'memory_mb'
op|','
name|'memory_mb_limit'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'_can_claim_disk'
op|'('
name|'disk_gb'
op|','
name|'disk_gb_limit'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'_can_claim_cpu'
op|'('
name|'vcpus'
op|','
name|'vcpu_limit'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
comment|'# keep track of this claim until we know whether the compute operation'
nl|'\n'
comment|'# was successful/completed:'
nl|'\n'
dedent|''
name|'claim'
op|'='
name|'Claim'
op|'('
name|'instance_ref'
op|','
name|'timeout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claims'
op|'['
name|'claim'
op|'.'
name|'claim_id'
op|']'
op|'='
name|'claim'
newline|'\n'
nl|'\n'
comment|'# Mark resources in-use and update stats'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# persist changes to the compute node:'
nl|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
name|'return'
name|'claim'
newline|'\n'
nl|'\n'
DECL|member|_can_claim_memory
dedent|''
name|'def'
name|'_can_claim_memory'
op|'('
name|'self'
op|','
name|'memory_mb'
op|','
name|'memory_mb_limit'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test if memory needed for a claim can be safely allocated"""'
newline|'\n'
comment|'# Installed memory and usage info:'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Total memory: %(total_mem)d MB, used: %(used_mem)d MB, free: "'
nl|'\n'
string|'"%(free_mem)d MB"'
op|')'
op|'%'
name|'dict'
op|'('
nl|'\n'
name|'total_mem'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
name|'used_mem'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
nl|'\n'
name|'free_mem'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'memory_mb_limit'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# treat memory as unlimited:'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Memory limit not specified, defaulting to unlimited"'
op|')'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'free_ram_mb'
op|'='
name|'memory_mb_limit'
op|'-'
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Oversubscribed memory policy info:'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Memory limit: %(memory_mb_limit)d MB, free: "'
nl|'\n'
string|'"%(free_ram_mb)d MB"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'can_claim_mem'
op|'='
name|'memory_mb'
op|'<='
name|'free_ram_mb'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'can_claim_mem'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to claim resources.  Free memory %(free_ram_mb)d "'
nl|'\n'
string|'"MB < requested memory %(memory_mb)d MB"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'can_claim_mem'
newline|'\n'
nl|'\n'
DECL|member|_can_claim_disk
dedent|''
name|'def'
name|'_can_claim_disk'
op|'('
name|'self'
op|','
name|'disk_gb'
op|','
name|'disk_gb_limit'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test if disk space needed can be safely allocated"""'
newline|'\n'
comment|'# Installed disk and usage info:'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Total disk: %(total_disk)d GB, used: %(used_disk)d GB, free: "'
nl|'\n'
string|'"%(free_disk)d GB"'
op|')'
op|'%'
name|'dict'
op|'('
nl|'\n'
name|'total_disk'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb'"
op|']'
op|','
nl|'\n'
name|'used_disk'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|','
nl|'\n'
name|'free_disk'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'free_disk_gb'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'disk_gb_limit'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# treat disk as unlimited:'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Disk limit not specified, defaulting to unlimited"'
op|')'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'free_disk_gb'
op|'='
name|'disk_gb_limit'
op|'-'
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Oversubscribed disk policy info:'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Disk limit: %(disk_gb_limit)d GB, free: "'
nl|'\n'
string|'"%(free_disk_gb)d GB"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'can_claim_disk'
op|'='
name|'disk_gb'
op|'<='
name|'free_disk_gb'
newline|'\n'
name|'if'
name|'not'
name|'can_claim_disk'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to claim resources.  Free disk %(free_disk_gb)d GB"'
nl|'\n'
string|'" < requested disk %(disk_gb)d GB"'
op|')'
op|'%'
name|'dict'
op|'('
nl|'\n'
name|'free_disk_gb'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'free_disk_gb'"
op|']'
op|','
nl|'\n'
name|'disk_gb'
op|'='
name|'disk_gb'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'can_claim_disk'
newline|'\n'
nl|'\n'
DECL|member|_can_claim_cpu
dedent|''
name|'def'
name|'_can_claim_cpu'
op|'('
name|'self'
op|','
name|'vcpus'
op|','
name|'vcpu_limit'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test if CPUs can be safely allocated according to given policy."""'
newline|'\n'
nl|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Total VCPUs: %(total_vcpus)d, used: %(used_vcpus)d"'
op|')'
op|'%'
name|'dict'
op|'('
name|'total_vcpus'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
name|'used_vcpus'
op|'='
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'vcpu_limit'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# treat cpu as unlimited:'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"VCPU limit not specified, defaulting to unlimited"'
op|')'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# Oversubscribed disk policy info:'
nl|'\n'
dedent|''
name|'msg'
op|'='
name|'_'
op|'('
string|'"CPU limit: %(vcpu_limit)d"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'free_vcpus'
op|'='
name|'vcpu_limit'
op|'-'
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
name|'can_claim_cpu'
op|'='
name|'vcpus'
op|'<='
name|'free_vcpus'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'can_claim_cpu'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to claim resources.  Free CPU %(free_vcpus)d < "'
nl|'\n'
string|'"requested CPU %(vcpus)d"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'can_claim_cpu'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|')'
newline|'\n'
DECL|member|finish_resource_claim
name|'def'
name|'finish_resource_claim'
op|'('
name|'self'
op|','
name|'claim'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate that the compute operation that previously claimed the\n        resources identified by \'claim\' has now completed and the resources\n        have been allocated at the virt layer.\n\n        Calling this keeps the available resource data more accurate and\n        timely than letting the claim timeout elapse and waiting for\n        update_available_resource to reflect the changed usage data.\n\n        :param claim: A claim indicating a set of resources that were\n                      previously claimed.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'claims'
op|'.'
name|'pop'
op|'('
name|'claim'
op|'.'
name|'claim_id'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Finishing claim: %s"'
op|')'
op|'%'
name|'claim'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Can\'t find claim %s.  It may have been \'finished\' "'
nl|'\n'
string|'"twice, or it has already timed out."'
op|')'
op|','
name|'claim'
op|'.'
name|'claim_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|')'
newline|'\n'
DECL|member|abort_resource_claim
name|'def'
name|'abort_resource_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'claim'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate that the operation that claimed the resources identified by\n        \'claim_id\' has either failed or been aborted and the resources are no\n        longer needed.\n\n        :param claim: A claim ticket indicating a set of resources that were\n                      previously claimed.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
comment|'# un-claim the resources:'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'claims'
op|'.'
name|'pop'
op|'('
name|'claim'
op|'.'
name|'claim_id'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Aborting claim: %s"'
op|')'
op|'%'
name|'claim'
op|')'
newline|'\n'
comment|'# flag the instance as deleted to revert the resource usage'
nl|'\n'
comment|'# and associated stats:'
nl|'\n'
name|'claim'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'claim'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# can't find the claim.  this may mean the claim already timed"
nl|'\n'
comment|'# out or it was already explicitly finished/aborted.'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Claim %s not found.  It either timed out or was "'
nl|'\n'
string|'"already explicitly finished/aborted"'
op|')'
op|','
name|'claim'
op|'.'
name|'claim_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|')'
newline|'\n'
DECL|member|update_usage
name|'def'
name|'update_usage'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update the resource usage and stats after a change in an\n        instance\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disabled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
comment|"# don't update usage for this instance unless it submitted a resource"
nl|'\n'
comment|'# claim first:'
nl|'\n'
dedent|''
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'if'
name|'uuid'
name|'in'
name|'self'
op|'.'
name|'tracked_instances'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|'.'
name|'compute_node'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|disabled
name|'def'
name|'disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'compute_node'
name|'is'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
name|'COMPUTE_RESOURCE_SEMAPHORE'
op|')'
newline|'\n'
DECL|member|update_available_resource
name|'def'
name|'update_available_resource'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Override in-memory calculations of compute node resource usage based\n        on data audited from the hypervisor layer.\n\n        Add in resource claims in progress to account for operations that have\n        declared a need for resources, but not necessarily retrieved them from\n        the hypervisor layer yet.\n        """'
newline|'\n'
name|'resources'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_available_resource'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resources'
op|':'
newline|'\n'
comment|'# The virt driver does not support this function'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Virt driver does not support "'
nl|'\n'
string|'"\'get_available_resource\'  Compute tracking is disabled."'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'claims'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_verify_resources'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_report_hypervisor_resource_view'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_purge_expired_claims'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Grab all instances assigned to this host:'
nl|'\n'
name|'filters'
op|'='
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
string|"'deleted'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now calculate usage based on instance utilization:'
nl|'\n'
name|'self'
op|'.'
name|'_update_usage_from_instances'
op|'('
name|'resources'
op|','
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_report_final_resource_view'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_sync_compute_node'
op|'('
name|'context'
op|','
name|'resources'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sync_compute_node
dedent|''
name|'def'
name|'_sync_compute_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create or update the compute node DB record"""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
comment|'# we need a copy of the ComputeNode record:'
nl|'\n'
indent|'            '
name|'service'
op|'='
name|'self'
op|'.'
name|'_get_service'
op|'('
name|'context'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'service'
op|':'
newline|'\n'
comment|'# no service record, disable resource'
nl|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'compute_node_ref'
op|'='
name|'service'
op|'['
string|"'compute_node'"
op|']'
newline|'\n'
name|'if'
name|'compute_node_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'compute_node_ref'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
comment|'# Need to create the ComputeNode record:'
nl|'\n'
indent|'            '
name|'resources'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'context'
op|','
name|'resources'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record created for %s '"
op|')'
op|'%'
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# just update the record:'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'prune_stats'
op|'='
name|'True'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Compute_service record updated for %s '"
op|')'
op|'%'
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_purge_expired_claims
dedent|''
dedent|''
name|'def'
name|'_purge_expired_claims'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Purge expired resource claims"""'
newline|'\n'
name|'for'
name|'claim_id'
name|'in'
name|'self'
op|'.'
name|'claims'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
name|'self'
op|'.'
name|'claims'
op|'['
name|'claim_id'
op|']'
newline|'\n'
name|'if'
name|'c'
op|'.'
name|'is_expired'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# if this claim is expired, just expunge it.'
nl|'\n'
comment|'# it is assumed that the instance will eventually get built'
nl|'\n'
comment|'# successfully.'
nl|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Expiring resource claim %s"'
op|')'
op|','
name|'claim_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claims'
op|'.'
name|'pop'
op|'('
name|'claim_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create
dedent|''
dedent|''
dedent|''
name|'def'
name|'_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create the compute node in the DB"""'
newline|'\n'
comment|'# initialize load stats from existing instances:'
nl|'\n'
name|'compute_node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'dict'
op|'('
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_service
dedent|''
name|'def'
name|'_get_service'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'db'
op|'.'
name|'service_get_all_compute_by_host'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"No service record for host %s"'
op|')'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_report_hypervisor_resource_view
dedent|''
dedent|''
name|'def'
name|'_report_hypervisor_resource_view'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Log the hypervisor\'s view of free memory in and free disk.\n        This is just a snapshot of resource usage recorded by the\n        virt driver.\n        """'
newline|'\n'
name|'free_ram_mb'
op|'='
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
newline|'\n'
name|'free_disk_gb'
op|'='
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free ram (MB): %s"'
op|')'
op|'%'
name|'free_ram_mb'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free disk (GB): %s"'
op|')'
op|'%'
name|'free_disk_gb'
op|')'
newline|'\n'
nl|'\n'
name|'vcpus'
op|'='
name|'resources'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'if'
name|'vcpus'
op|':'
newline|'\n'
indent|'            '
name|'free_vcpus'
op|'='
name|'vcpus'
op|'-'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: free VCPUs: %s"'
op|')'
op|'%'
name|'free_vcpus'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Hypervisor: VCPU information unavailable"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_report_final_resource_view
dedent|''
dedent|''
name|'def'
name|'_report_final_resource_view'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Report final calculate of free memory and free disk including\n        instance calculations and in-progress resource claims.  These\n        values will be exposed via the compute node table to the scheduler.\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free ram (MB): %s"'
op|')'
op|'%'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free disk (GB): %s"'
op|')'
op|'%'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'vcpus'
op|'='
name|'resources'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'if'
name|'vcpus'
op|':'
newline|'\n'
indent|'            '
name|'free_vcpus'
op|'='
name|'vcpus'
op|'-'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free VCPUS: %s"'
op|')'
op|'%'
name|'free_vcpus'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Free VCPU information unavailable"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update
dedent|''
dedent|''
name|'def'
name|'_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|','
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Persist the compute node updates to the DB"""'
newline|'\n'
name|'compute_node'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|','
name|'prune_stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node'
op|'='
name|'dict'
op|'('
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_instance
dedent|''
name|'def'
name|'_update_usage_from_instance'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update usage for a single instance."""'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'is_new_instance'
op|'='
name|'uuid'
name|'not'
name|'in'
name|'self'
op|'.'
name|'tracked_instances'
newline|'\n'
name|'is_deleted_instance'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'=='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
nl|'\n'
name|'if'
name|'is_new_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracked_instances'
op|'['
name|'uuid'
op|']'
op|'='
number|'1'
newline|'\n'
name|'sign'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'=='
name|'vm_states'
op|'.'
name|'DELETED'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracked_instances'
op|'.'
name|'pop'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'sign'
op|'='
op|'-'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats'
op|'.'
name|'update_stats_for_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|"# if it's a new or deleted instance:"
nl|'\n'
name|'if'
name|'is_new_instance'
name|'or'
name|'is_deleted_instance'
op|':'
newline|'\n'
comment|'# new instance, update compute node resource usage:'
nl|'\n'
indent|'            '
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'instance'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'instance'
op|'['
string|"'root_gb'"
op|']'
newline|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'+='
name|'sign'
op|'*'
name|'instance'
op|'['
string|"'ephemeral_gb'"
op|']'
newline|'\n'
nl|'\n'
comment|'# free ram and disk may be negative, depending on policy:'
nl|'\n'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'resources'
op|'['
string|"'running_vms'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'num_instances'
newline|'\n'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'num_vcpus_used'
newline|'\n'
nl|'\n'
dedent|''
name|'resources'
op|'['
string|"'current_workload'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
op|'.'
name|'calculate_workload'
op|'('
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'stats'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
newline|'\n'
nl|'\n'
DECL|member|_update_usage_from_instances
dedent|''
name|'def'
name|'_update_usage_from_instances'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calculate resource usage based on instance utilization.  This is\n        different than the hypervisor\'s view as it will account for all\n        instances assigned to the local compute host, even if they are not\n        currently powered on.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'tracked_instances'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# purge old stats'
nl|'\n'
name|'self'
op|'.'
name|'stats'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# set some intiial values, reserve room for host/hypervisor:'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|'='
name|'FLAGS'
op|'.'
name|'reserved_host_disk_mb'
op|'/'
number|'1024'
newline|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|'='
name|'FLAGS'
op|'.'
name|'reserved_host_memory_mb'
newline|'\n'
name|'resources'
op|'['
string|"'vcpus_used'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'resources'
op|'['
string|"'free_ram_mb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'memory_mb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'free_disk_gb'"
op|']'
op|'='
op|'('
name|'resources'
op|'['
string|"'local_gb'"
op|']'
op|'-'
nl|'\n'
name|'resources'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'resources'
op|'['
string|"'current_workload'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'resources'
op|'['
string|"'running_vms'"
op|']'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_update_usage_from_instance'
op|'('
name|'resources'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_resources
dedent|''
dedent|''
name|'def'
name|'_verify_resources'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource_keys'
op|'='
op|'['
string|'"vcpus"'
op|','
string|'"memory_mb"'
op|','
string|'"local_gb"'
op|','
string|'"cpu_info"'
op|','
nl|'\n'
string|'"vcpus_used"'
op|','
string|'"memory_mb_used"'
op|','
string|'"local_gb_used"'
op|']'
newline|'\n'
nl|'\n'
name|'missing_keys'
op|'='
op|'['
name|'k'
name|'for'
name|'k'
name|'in'
name|'resource_keys'
name|'if'
name|'k'
name|'not'
name|'in'
name|'resources'
op|']'
newline|'\n'
name|'if'
name|'missing_keys'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'_'
op|'('
string|'"Missing keys: %s"'
op|')'
op|'%'
name|'missing_keys'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
