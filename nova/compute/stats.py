begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'resource_tracker'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Stats
name|'class'
name|'Stats'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Handler for updates to compute node workload stats."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Stats'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Track instance states for compute node workload calculations:'
nl|'\n'
name|'self'
op|'.'
name|'states'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|clear
dedent|''
name|'def'
name|'clear'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Stats'
op|','
name|'self'
op|')'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'states'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|digest_stats
dedent|''
name|'def'
name|'digest_stats'
op|'('
name|'self'
op|','
name|'stats'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Apply stats provided as a dict or a json encoded string."""'
newline|'\n'
name|'if'
name|'stats'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'stats'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'update'
op|'('
name|'stats'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'raise'
name|'ValueError'
op|'('
name|'_'
op|'('
string|"'Unexpected type adding stats'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|io_workload
name|'def'
name|'io_workload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calculate an I/O based load by counting I/O heavy operations."""'
newline|'\n'
nl|'\n'
DECL|function|_get
name|'def'
name|'_get'
op|'('
name|'state'
op|','
name|'state_type'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
string|'"num_%s_%s"'
op|'%'
op|'('
name|'state_type'
op|','
name|'state'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get'
op|'('
name|'key'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'num_builds'
op|'='
name|'_get'
op|'('
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
string|'"vm"'
op|')'
newline|'\n'
name|'num_migrations'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_rebuilds'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'REBUILDING'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_resizes'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_snapshots'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_backups'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'IMAGE_BACKUP'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_rescues'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'RESCUING'
op|','
string|'"task"'
op|')'
newline|'\n'
name|'num_unshelves'
op|'='
name|'_get'
op|'('
name|'task_states'
op|'.'
name|'UNSHELVING'
op|','
string|'"task"'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'num_builds'
op|'+'
name|'num_rebuilds'
op|'+'
name|'num_resizes'
op|'+'
name|'num_migrations'
op|'+'
nl|'\n'
name|'num_snapshots'
op|'+'
name|'num_backups'
op|'+'
name|'num_rescues'
op|'+'
name|'num_unshelves'
op|')'
newline|'\n'
nl|'\n'
DECL|member|calculate_workload
dedent|''
name|'def'
name|'calculate_workload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calculate current load of the compute host based on\n        task states.\n        """'
newline|'\n'
name|'current_workload'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|'"num_task"'
op|')'
name|'and'
name|'not'
name|'k'
op|'.'
name|'endswith'
op|'('
string|'"None"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'current_workload'
op|'+='
name|'self'
op|'['
name|'k'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'current_workload'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|num_instances
name|'def'
name|'num_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'get'
op|'('
string|'"num_instances"'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|num_instances_for_project
dedent|''
name|'def'
name|'num_instances_for_project'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
string|'"num_proj_%s"'
op|'%'
name|'project_id'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get'
op|'('
name|'key'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|num_os_type
dedent|''
name|'def'
name|'num_os_type'
op|'('
name|'self'
op|','
name|'os_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
string|'"num_os_type_%s"'
op|'%'
name|'os_type'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get'
op|'('
name|'key'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update_stats_for_instance
dedent|''
name|'def'
name|'update_stats_for_instance'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update stats after an instance is changed."""'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
comment|'# First, remove stats from the previous instance'
nl|'\n'
comment|'# state:'
nl|'\n'
name|'if'
name|'uuid'
name|'in'
name|'self'
op|'.'
name|'states'
op|':'
newline|'\n'
indent|'            '
name|'old_state'
op|'='
name|'self'
op|'.'
name|'states'
op|'['
name|'uuid'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_decrement'
op|'('
string|'"num_vm_%s"'
op|'%'
name|'old_state'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_decrement'
op|'('
string|'"num_task_%s"'
op|'%'
name|'old_state'
op|'['
string|"'task_state'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_decrement'
op|'('
string|'"num_os_type_%s"'
op|'%'
name|'old_state'
op|'['
string|"'os_type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_decrement'
op|'('
string|'"num_proj_%s"'
op|'%'
name|'old_state'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# new instance'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_increment'
op|'('
string|'"num_instances"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now update stats from the new instance state:'
nl|'\n'
dedent|''
op|'('
name|'vm_state'
op|','
name|'task_state'
op|','
name|'os_type'
op|','
name|'project_id'
op|')'
op|'='
name|'self'
op|'.'
name|'_extract_state_from_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'vm_state'
name|'in'
name|'resource_tracker'
op|'.'
name|'_REMOVED_STATES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_decrement'
op|'('
string|'"num_instances"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'states'
op|'.'
name|'pop'
op|'('
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_increment'
op|'('
string|'"num_vm_%s"'
op|'%'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_increment'
op|'('
string|'"num_task_%s"'
op|'%'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_increment'
op|'('
string|'"num_os_type_%s"'
op|'%'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_increment'
op|'('
string|'"num_proj_%s"'
op|'%'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# save updated I/O workload in stats:'
nl|'\n'
dedent|''
name|'self'
op|'['
string|'"io_workload"'
op|']'
op|'='
name|'self'
op|'.'
name|'io_workload'
newline|'\n'
nl|'\n'
DECL|member|_decrement
dedent|''
name|'def'
name|'_decrement'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'x'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'key'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'['
name|'key'
op|']'
op|'='
name|'x'
op|'-'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_increment
dedent|''
name|'def'
name|'_increment'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'x'
op|'='
name|'self'
op|'.'
name|'get'
op|'('
name|'key'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'['
name|'key'
op|']'
op|'='
name|'x'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_extract_state_from_instance
dedent|''
name|'def'
name|'_extract_state_from_instance'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save the useful bits of instance state for tracking purposes."""'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'vm_state'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
newline|'\n'
name|'task_state'
op|'='
name|'instance'
op|'['
string|"'task_state'"
op|']'
newline|'\n'
name|'os_type'
op|'='
name|'instance'
op|'['
string|"'os_type'"
op|']'
newline|'\n'
name|'project_id'
op|'='
name|'instance'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'states'
op|'['
name|'uuid'
op|']'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'task_state'
op|','
nl|'\n'
name|'os_type'
op|'='
name|'os_type'
op|','
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'vm_state'
op|','
name|'task_state'
op|','
name|'os_type'
op|','
name|'project_id'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
