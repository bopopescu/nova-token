begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Session Handling for SQLAlchemy backend."""'
newline|'\n'
nl|'\n'
name|'import'
name|'sqlalchemy'
op|'.'
name|'exc'
newline|'\n'
name|'import'
name|'sqlalchemy'
op|'.'
name|'interfaces'
newline|'\n'
name|'import'
name|'sqlalchemy'
op|'.'
name|'orm'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'exception'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'flags'
name|'as'
name|'flags'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_ENGINE
name|'_ENGINE'
op|'='
name|'None'
newline|'\n'
DECL|variable|_MAKER
name|'_MAKER'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_session
name|'def'
name|'get_session'
op|'('
name|'autocommit'
op|'='
name|'True'
op|','
name|'expire_on_commit'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a SQLAlchemy session."""'
newline|'\n'
name|'global'
name|'_ENGINE'
op|','
name|'_MAKER'
newline|'\n'
nl|'\n'
name|'if'
name|'_MAKER'
name|'is'
name|'None'
name|'or'
name|'_ENGINE'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'_ENGINE'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'_MAKER'
op|'='
name|'get_maker'
op|'('
name|'_ENGINE'
op|','
name|'autocommit'
op|','
name|'expire_on_commit'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'_MAKER'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'='
name|'nova'
op|'.'
name|'exception'
op|'.'
name|'wrap_db_error'
op|'('
name|'session'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'flush'
op|'='
name|'nova'
op|'.'
name|'exception'
op|'.'
name|'wrap_db_error'
op|'('
name|'session'
op|'.'
name|'flush'
op|')'
newline|'\n'
name|'return'
name|'session'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SynchronousSwitchListener
dedent|''
name|'class'
name|'SynchronousSwitchListener'
op|'('
name|'sqlalchemy'
op|'.'
name|'interfaces'
op|'.'
name|'PoolListener'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Switch sqlite connections to non-synchronous mode"""'
newline|'\n'
nl|'\n'
DECL|member|connect
name|'def'
name|'connect'
op|'('
name|'self'
op|','
name|'dbapi_con'
op|','
name|'con_record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbapi_con'
op|'.'
name|'execute'
op|'('
string|'"PRAGMA synchronous = OFF"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_engine
dedent|''
dedent|''
name|'def'
name|'get_engine'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a SQLAlchemy engine."""'
newline|'\n'
name|'connection_dict'
op|'='
name|'sqlalchemy'
op|'.'
name|'engine'
op|'.'
name|'url'
op|'.'
name|'make_url'
op|'('
name|'FLAGS'
op|'.'
name|'sql_connection'
op|')'
newline|'\n'
nl|'\n'
name|'engine_args'
op|'='
op|'{'
nl|'\n'
string|'"pool_recycle"'
op|':'
name|'FLAGS'
op|'.'
name|'sql_idle_timeout'
op|','
nl|'\n'
string|'"echo"'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
string|'"sqlite"'
name|'in'
name|'connection_dict'
op|'.'
name|'drivername'
op|':'
newline|'\n'
indent|'        '
name|'engine_args'
op|'['
string|'"poolclass"'
op|']'
op|'='
name|'sqlalchemy'
op|'.'
name|'pool'
op|'.'
name|'NullPool'
newline|'\n'
name|'if'
name|'not'
name|'FLAGS'
op|'.'
name|'sqlite_synchronous'
op|':'
newline|'\n'
indent|'            '
name|'engine_args'
op|'['
string|'"listeners"'
op|']'
op|'='
op|'['
name|'SynchronousSwitchListener'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'engine'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'FLAGS'
op|'.'
name|'sql_connection'
op|','
op|'**'
name|'engine_args'
op|')'
newline|'\n'
name|'ensure_connection'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'return'
name|'engine'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ensure_connection
dedent|''
name|'def'
name|'ensure_connection'
op|'('
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'remaining_attempts'
op|'='
name|'FLAGS'
op|'.'
name|'sql_max_retries'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'except'
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'OperationalError'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'remaining_attempts'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|"'SQL connection failed (%(connstring)s). '"
nl|'\n'
string|"'%(attempts)d attempts left.'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'connstring'"
op|':'
name|'FLAGS'
op|'.'
name|'sql_connection'
op|','
nl|'\n'
string|"'attempts'"
op|':'
name|'remaining_attempts'
op|'}'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'FLAGS'
op|'.'
name|'sql_retry_interval'
op|')'
newline|'\n'
name|'remaining_attempts'
op|'-='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_maker
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_maker'
op|'('
name|'engine'
op|','
name|'autocommit'
op|'='
name|'True'
op|','
name|'expire_on_commit'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a SQLAlchemy sessionmaker using the given engine."""'
newline|'\n'
name|'return'
name|'sqlalchemy'
op|'.'
name|'orm'
op|'.'
name|'sessionmaker'
op|'('
name|'bind'
op|'='
name|'engine'
op|','
nl|'\n'
name|'autocommit'
op|'='
name|'autocommit'
op|','
nl|'\n'
name|'expire_on_commit'
op|'='
name|'expire_on_commit'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
