begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'migrate'
op|'.'
name|'changeset'
op|'.'
name|'constraint'
name|'import'
name|'ForeignKeyConstraint'
newline|'\n'
name|'from'
name|'migrate'
name|'import'
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'DateTime'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Index'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Integer'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'String'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Table'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade
name|'def'
name|'upgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'migrate_engine'
newline|'\n'
nl|'\n'
name|'cell_mappings'
op|'='
name|'Table'
op|'('
string|"'cell_mappings'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance_mappings'
op|'='
name|'Table'
op|'('
string|"'instance_mappings'"
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'created_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'updated_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'instance_uuid'"
op|','
name|'String'
op|'('
name|'length'
op|'='
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'cell_id'"
op|','
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'project_id'"
op|','
name|'String'
op|'('
name|'length'
op|'='
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'instance_uuid'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'uniq_instance_mappings0instance_uuid'"
op|')'
op|','
nl|'\n'
name|'Index'
op|'('
string|"'project_id_idx'"
op|','
string|"'project_id'"
op|')'
op|','
nl|'\n'
name|'ForeignKeyConstraint'
op|'('
name|'columns'
op|'='
op|'['
string|"'cell_id'"
op|']'
op|','
nl|'\n'
name|'refcolumns'
op|'='
op|'['
name|'cell_mappings'
op|'.'
name|'c'
op|'.'
name|'id'
op|']'
op|')'
op|','
nl|'\n'
name|'mysql_engine'
op|'='
string|"'InnoDB'"
op|','
nl|'\n'
name|'mysql_charset'
op|'='
string|"'utf8'"
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(mriedem): DB2 creates an index when a unique constraint is created'
nl|'\n'
comment|'# so trying to add a second index on the instance_uuid column will fail'
nl|'\n'
comment|'# with error SQL0605W, so omit the index in the case of DB2.'
nl|'\n'
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'!='
string|"'ibm_db_sa'"
op|':'
newline|'\n'
indent|'        '
name|'Index'
op|'('
string|"'instance_uuid_idx'"
op|','
name|'instance_mappings'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_mappings'
op|'.'
name|'create'
op|'('
name|'checkfirst'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
