begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade
name|'def'
name|'upgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
comment|"# Upgrade operations go here. Don't create your own engine;"
nl|'\n'
comment|'# bind migrate_engine to your metadata'
nl|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'migrate_engine'
newline|'\n'
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'=='
string|'"mysql"'
op|':'
newline|'\n'
indent|'        '
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE agent_builds Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE aggregate_hosts Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE aggregate_metadata Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE aggregates Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"ALTER TABLE block_device_mapping Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE bw_usage_cache Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE dns_domains Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE instance_faults Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"ALTER TABLE instance_type_extra_specs Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE provider_fw_rules Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE quota_classes Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE s3_images Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE sm_backend_config Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE sm_flavors Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE sm_volume Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"ALTER TABLE virtual_storage_arrays Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE volume_metadata Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"ALTER TABLE volume_type_extra_specs Engine=InnoDB"'
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
string|'"ALTER TABLE volume_types Engine=InnoDB"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|downgrade
dedent|''
dedent|''
name|'def'
name|'downgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
