begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'migrate'
name|'import'
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'DDL'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Index'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Integer'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Unicode'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade
name|'def'
name|'upgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'migrate_engine'
op|')'
newline|'\n'
nl|'\n'
name|'resource_providers'
op|'='
name|'Table'
op|'('
string|"'resource_providers'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'name'
op|'='
name|'Column'
op|'('
string|"'name'"
op|','
name|'Unicode'
op|'('
number|'200'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
name|'generation'
op|'='
name|'Column'
op|'('
string|"'generation'"
op|','
name|'Integer'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
name|'can_host'
op|'='
name|'Column'
op|'('
string|"'can_host'"
op|','
name|'Integer'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'resource_providers'
op|'.'
name|'c'
op|','
string|"'name'"
op|')'
op|':'
newline|'\n'
comment|'# NOTE(cdent): The resource_providers table is defined as'
nl|'\n'
comment|'# latin1 to be more efficient. Now we need the name column'
nl|'\n'
comment|'# to be UTF8. First create the column, then modify it,'
nl|'\n'
comment|'# otherwise the declarative handling in sqlalchemy gets'
nl|'\n'
comment|'# confused.'
nl|'\n'
indent|'        '
name|'resource_providers'
op|'.'
name|'create_column'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
op|':'
newline|'\n'
indent|'            '
name|'name_col_ddl'
op|'='
name|'DDL'
op|'('
nl|'\n'
string|'"ALTER TABLE resource_providers MODIFY name "'
nl|'\n'
string|'"VARCHAR(200) CHARACTER SET utf8"'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'migrate_engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'name_col_ddl'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'uc'
op|'='
name|'UniqueConstraint'
op|'('
string|"'name'"
op|','
name|'table'
op|'='
name|'resource_providers'
op|','
nl|'\n'
name|'name'
op|'='
string|"'uniq_resource_providers0name'"
op|')'
newline|'\n'
name|'uc'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# DB2 automatically creates an index for the unique'
nl|'\n'
comment|'# constraint above, so skip adding the index on DB2.'
nl|'\n'
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'!='
string|"'ibm_db_sa'"
op|':'
newline|'\n'
indent|'            '
name|'utils'
op|'.'
name|'add_index'
op|'('
name|'migrate_engine'
op|','
string|"'resource_providers'"
op|','
nl|'\n'
string|"'resource_providers_name_idx'"
op|','
nl|'\n'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'resource_providers'
op|'.'
name|'c'
op|','
string|"'generation'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource_providers'
op|'.'
name|'create_column'
op|'('
name|'generation'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'resource_providers'
op|'.'
name|'c'
op|','
string|"'can_host'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource_providers'
op|'.'
name|'create_column'
op|'('
name|'can_host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'resource_provider_aggregates'
op|'='
name|'Table'
op|'('
nl|'\n'
string|"'resource_provider_aggregates'"
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'resource_provider_id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'aggregate_id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mysql_engine'
op|'='
string|"'InnoDB'"
op|','
nl|'\n'
name|'mysql_charset'
op|'='
string|"'latin1'"
nl|'\n'
op|')'
newline|'\n'
name|'Index'
op|'('
string|"'resource_provider_aggregates_aggregate_id_idx'"
op|','
nl|'\n'
name|'resource_provider_aggregates'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|')'
newline|'\n'
name|'resource_provider_aggregates'
op|'.'
name|'create'
op|'('
name|'checkfirst'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'utils'
op|'.'
name|'add_index'
op|'('
name|'migrate_engine'
op|','
string|"'allocations'"
op|','
nl|'\n'
string|"'allocations_resource_provider_class_used_idx'"
op|','
nl|'\n'
op|'['
string|"'resource_provider_id'"
op|','
string|"'resource_class_id'"
op|','
nl|'\n'
string|"'used'"
op|']'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'drop_index'
op|'('
name|'migrate_engine'
op|','
string|"'allocations'"
op|','
nl|'\n'
string|"'allocations_resource_provider_class_id_idx'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Add a unique constraint so that any resource provider can have'
nl|'\n'
comment|'# only one inventory for any given resource class.'
nl|'\n'
name|'inventories'
op|'='
name|'Table'
op|'('
string|"'inventories'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'inventories_uc'
op|'='
name|'UniqueConstraint'
op|'('
nl|'\n'
string|"'resource_provider_id'"
op|','
string|"'resource_class_id'"
op|','
name|'table'
op|'='
name|'inventories'
op|','
nl|'\n'
name|'name'
op|'='
string|"'uniq_inventories0resource_provider_resource_class'"
op|')'
newline|'\n'
name|'inventories_uc'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'!='
string|"'ibm_db_sa'"
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'add_index'
op|'('
name|'migrate_engine'
op|','
string|"'inventories'"
op|','
nl|'\n'
string|"'inventories_resource_provider_resource_class_idx'"
op|','
nl|'\n'
op|'['
string|"'resource_provider_id'"
op|','
string|"'resource_class_id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
