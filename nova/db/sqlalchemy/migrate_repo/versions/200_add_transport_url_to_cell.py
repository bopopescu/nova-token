begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'migrate'
op|'.'
name|'changeset'
name|'import'
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
op|','
name|'Integer'
op|','
name|'MetaData'
op|','
name|'String'
op|','
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'select'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'rpc_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_tables
name|'def'
name|'get_tables'
op|'('
name|'engine'
op|','
op|'*'
name|'names'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'engine'
op|')'
newline|'\n'
name|'return'
op|'['
name|'Table'
op|'('
name|'name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
name|'for'
name|'name'
name|'in'
name|'names'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_column
dedent|''
name|'def'
name|'create_column'
op|'('
name|'table'
op|','
name|'name'
op|','
name|'type_'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'column'
op|'='
name|'Column'
op|'('
name|'name'
op|','
name|'type_'
op|')'
newline|'\n'
name|'column'
op|'.'
name|'create'
op|'('
name|'table'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_column
dedent|''
name|'def'
name|'get_column'
op|'('
name|'table'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'getattr'
op|'('
name|'table'
op|'.'
name|'c'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|drop_column
dedent|''
name|'def'
name|'drop_column'
op|'('
name|'table'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'column'
op|'='
name|'get_column'
op|'('
name|'table'
op|','
name|'name'
op|')'
newline|'\n'
name|'column'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|restore_unique_constraint
dedent|''
name|'def'
name|'restore_unique_constraint'
op|'('
name|'table'
op|')'
op|':'
newline|'\n'
comment|"# NOTE(Vek): So, sqlite doesn't really support dropping columns,"
nl|'\n'
comment|'#            and so it gets implemented by dropping and recreating'
nl|'\n'
comment|'#            the table...which of course means we completely lose'
nl|'\n'
comment|'#            the unique constraint.  We re-create it here to work'
nl|'\n'
comment|'#            around this issue.'
nl|'\n'
indent|'    '
name|'uc_name'
op|'='
string|"'uniq_cell_name0deleted'"
newline|'\n'
name|'columns'
op|'='
op|'('
string|"'name'"
op|','
string|"'deleted'"
op|')'
newline|'\n'
name|'uc'
op|'='
name|'UniqueConstraint'
op|'('
op|'*'
name|'columns'
op|','
name|'table'
op|'='
name|'table'
op|','
name|'name'
op|'='
name|'uc_name'
op|')'
newline|'\n'
name|'uc'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade
dedent|''
name|'def'
name|'upgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'tables'
op|'='
name|'get_tables'
op|'('
name|'migrate_engine'
op|','
string|"'cells'"
op|','
string|"'shadow_cells'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'        '
name|'create_column'
op|'('
name|'table'
op|','
string|"'transport_url'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'upgrade_cell_data'
op|'('
name|'table'
op|')'
newline|'\n'
nl|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'username'"
op|')'
newline|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'password'"
op|')'
newline|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'rpc_host'"
op|')'
newline|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'rpc_port'"
op|')'
newline|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'rpc_virtual_host'"
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'.'
name|'c'
op|'.'
name|'transport_url'
op|'.'
name|'alter'
op|'('
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'=='
string|'"sqlite"'
op|':'
newline|'\n'
indent|'        '
name|'restore_unique_constraint'
op|'('
name|'tables'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|downgrade
dedent|''
dedent|''
name|'def'
name|'downgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'tables'
op|'='
name|'get_tables'
op|'('
name|'migrate_engine'
op|','
string|"'cells'"
op|','
string|"'shadow_cells'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'        '
name|'create_column'
op|'('
name|'table'
op|','
string|"'username'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'create_column'
op|'('
name|'table'
op|','
string|"'password'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'create_column'
op|'('
name|'table'
op|','
string|"'rpc_host'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'create_column'
op|'('
name|'table'
op|','
string|"'rpc_port'"
op|','
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
name|'create_column'
op|'('
name|'table'
op|','
string|"'rpc_virtual_host'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'downgrade_cell_data'
op|'('
name|'table'
op|')'
newline|'\n'
nl|'\n'
name|'drop_column'
op|'('
name|'table'
op|','
string|"'transport_url'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'migrate_engine'
op|'.'
name|'name'
op|'=='
string|'"sqlite"'
op|':'
newline|'\n'
indent|'        '
name|'restore_unique_constraint'
op|'('
name|'tables'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade_cell_data
dedent|''
dedent|''
name|'def'
name|'upgrade_cell_data'
op|'('
name|'table'
op|')'
op|':'
newline|'\n'
comment|'# List of database columns'
nl|'\n'
indent|'    '
name|'columns'
op|'='
op|'['
string|"'id'"
op|','
string|"'username'"
op|','
string|"'password'"
op|','
string|"'rpc_host'"
op|','
string|"'rpc_port'"
op|','
nl|'\n'
string|"'rpc_virtual_host'"
op|']'
newline|'\n'
nl|'\n'
comment|'# List of names to give the data from those columns; the fields'
nl|'\n'
comment|'# are chosen so that the dictionary matches that expected by'
nl|'\n'
comment|'# unparse_transport_url()'
nl|'\n'
name|'fields'
op|'='
op|'['
string|"'id'"
op|','
string|"'username'"
op|','
string|"'password'"
op|','
string|"'hostname'"
op|','
string|"'port'"
op|','
string|"'virtual_host'"
op|']'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'select'
op|'('
op|'['
name|'get_column'
op|'('
name|'table'
op|','
name|'c'
op|')'
name|'for'
name|'c'
name|'in'
name|'columns'
op|']'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
op|'['
name|'dict'
op|'('
name|'zip'
op|'('
name|'fields'
op|','
name|'result'
op|')'
op|')'
name|'for'
name|'result'
name|'in'
name|'query'
op|'.'
name|'execute'
op|'('
op|')'
op|']'
op|':'
newline|'\n'
comment|'# Compute the transport URL'
nl|'\n'
indent|'        '
name|'url'
op|'='
name|'rpc_driver'
op|'.'
name|'unparse_transport_url'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
comment|'# Store the transport URL in the database'
nl|'\n'
name|'table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'row'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'values'
op|'('
name|'transport_url'
op|'='
name|'url'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|field_map
dedent|''
dedent|''
name|'field_map'
op|'='
op|'{'
nl|'\n'
string|"'hostname'"
op|':'
string|"'rpc_host'"
op|','
nl|'\n'
string|"'port'"
op|':'
string|"'rpc_port'"
op|','
nl|'\n'
string|"'virtual_host'"
op|':'
string|"'rpc_virtual_host'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|downgrade_cell_data
name|'def'
name|'downgrade_cell_data'
op|'('
name|'table'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'columns'
op|'='
op|'['
string|"'id'"
op|','
string|"'name'"
op|','
string|"'transport_url'"
op|']'
newline|'\n'
name|'query'
op|'='
name|'select'
op|'('
op|'['
name|'get_column'
op|'('
name|'table'
op|','
name|'c'
op|')'
name|'for'
name|'c'
name|'in'
name|'columns'
op|']'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
op|'['
name|'dict'
op|'('
name|'zip'
op|'('
name|'columns'
op|','
name|'result'
op|')'
op|')'
name|'for'
name|'result'
name|'in'
name|'query'
op|'.'
name|'execute'
op|'('
op|')'
op|']'
op|':'
newline|'\n'
comment|'# Disassemble the transport URL'
nl|'\n'
indent|'        '
name|'transport_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'transport'
op|'='
name|'rpc_driver'
op|'.'
name|'parse_transport_url'
op|'('
name|'row'
op|'['
string|"'transport_url'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'transport'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'value'
op|':'
newline|'\n'
comment|'# Ignore empty values'
nl|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'transport_data'
op|'['
name|'field_map'
op|'.'
name|'get'
op|'('
name|'key'
op|','
name|'key'
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'exc'
op|':'
newline|'\n'
comment|"# We failed to parse the transport URL, so don't set up"
nl|'\n'
comment|'# any transport data'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|"'Failed to downgrade cell %(name)s: %(error)s'"
op|')'
op|'%'
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
name|'row'
op|'['
string|"'name'"
op|']'
op|','
name|'error'
op|'='
name|'str'
op|'('
name|'exc'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'transport_data'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'row'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'values'
op|'('
op|'**'
name|'transport_data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
