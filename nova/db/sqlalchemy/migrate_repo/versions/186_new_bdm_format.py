begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 OpenStack LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
op|','
name|'Integer'
op|','
name|'MetaData'
op|','
name|'String'
op|','
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'select'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'default_ephemeral_format'"
op|','
string|"'nova.virt.driver'"
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_ephemeral
name|'_ephemeral'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^ephemeral(\\d|[1-9]\\d+)$'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_ephemeral
name|'def'
name|'_is_ephemeral'
op|'('
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'bool'
op|'('
name|'_ephemeral'
op|'.'
name|'match'
op|'('
name|'device_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_swap_or_ephemeral
dedent|''
name|'def'
name|'_is_swap_or_ephemeral'
op|'('
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'('
name|'device_name'
name|'and'
nl|'\n'
op|'('
name|'device_name'
op|'=='
string|"'swap'"
name|'or'
name|'_is_ephemeral'
op|'('
name|'device_name'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_dev
dedent|''
name|'_dev'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^/dev/'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|strip_dev
name|'def'
name|'strip_dev'
op|'('
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""remove leading \'/dev/\'."""'
newline|'\n'
name|'return'
name|'_dev'
op|'.'
name|'sub'
op|'('
string|"''"
op|','
name|'device_name'
op|')'
name|'if'
name|'device_name'
name|'else'
name|'device_name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|upgrade
dedent|''
name|'def'
name|'upgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'migrate_engine'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table'
name|'in'
op|'('
string|"'block_device_mapping'"
op|','
string|"'shadow_block_device_mapping'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_mapping'
op|'='
name|'Table'
op|'('
name|'table'
op|','
nl|'\n'
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'source_type'
op|'='
name|'Column'
op|'('
string|"'source_type'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'destination_type'
op|'='
name|'Column'
op|'('
string|"'destination_type'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'guest_format'
op|'='
name|'Column'
op|'('
string|"'guest_format'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'device_type'
op|'='
name|'Column'
op|'('
string|"'device_type'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'disk_bus'
op|'='
name|'Column'
op|'('
string|"'disk_bus'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
name|'boot_index'
op|'='
name|'Column'
op|'('
string|"'boot_index'"
op|','
name|'Integer'
op|')'
newline|'\n'
name|'image_id'
op|'='
name|'Column'
op|'('
string|"'image_id'"
op|','
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'source_type'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'destination_type'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'guest_format'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'device_type'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'disk_bus'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'boot_index'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'image_id'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
name|'device_name'
op|'='
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'device_name'
newline|'\n'
name|'device_name'
op|'.'
name|'alter'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'_upgrade_bdm_v2'
op|'('
name|'meta'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
name|'virtual_name'
op|'='
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'virtual_name'
newline|'\n'
name|'virtual_name'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|downgrade
dedent|''
dedent|''
name|'def'
name|'downgrade'
op|'('
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'migrate_engine'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table'
name|'in'
op|'('
string|"'block_device_mapping'"
op|','
string|"'shadow_block_device_mapping'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_mapping'
op|'='
name|'Table'
op|'('
name|'table'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'virtual_name'
op|'='
name|'Column'
op|'('
string|"'virtual_name'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
name|'virtual_name'
op|'.'
name|'create'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
name|'_downgrade_bdm_v2'
op|'('
name|'meta'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
name|'device_name'
op|'='
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'device_name'
newline|'\n'
name|'device_name'
op|'.'
name|'alter'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'source_type'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'destination_type'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'guest_format'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'device_type'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'disk_bus'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'boot_index'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'block_device_mapping'
op|'.'
name|'c'
op|'.'
name|'image_id'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_upgrade_bdm_v2
dedent|''
dedent|''
name|'def'
name|'_upgrade_bdm_v2'
op|'('
name|'meta'
op|','
name|'bdm_table'
op|')'
op|':'
newline|'\n'
comment|'# Rows needed to do the upgrade'
nl|'\n'
indent|'    '
name|'_bdm_rows_v1'
op|'='
op|'('
string|"'id'"
op|','
string|"'device_name'"
op|','
string|"'virtual_name'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|','
string|"'volume_id'"
op|','
string|"'instance_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'_bdm_rows_v2'
op|'='
op|'('
string|"'id'"
op|','
string|"'source_type'"
op|','
string|"'destination_type'"
op|','
string|"'guest_format'"
op|','
nl|'\n'
string|"'device_type'"
op|','
string|"'disk_bus'"
op|','
string|"'boot_index'"
op|','
string|"'image_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_columns
name|'def'
name|'_get_columns'
op|'('
name|'table'
op|','
name|'names'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'getattr'
op|'('
name|'table'
op|'.'
name|'c'
op|','
name|'name'
op|')'
name|'for'
name|'name'
name|'in'
name|'names'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_default_bdm
dedent|''
name|'def'
name|'_default_bdm'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Set some common default values'
nl|'\n'
indent|'        '
name|'default'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'default'
op|'['
string|"'destination_type'"
op|']'
op|'='
string|"'local'"
newline|'\n'
name|'default'
op|'['
string|"'device_type'"
op|']'
op|'='
string|"'disk'"
newline|'\n'
name|'default'
op|'['
string|"'boot_index'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'return'
name|'default'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_table'
op|'='
name|'Table'
op|'('
string|"'instances'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance_shadow_table'
op|'='
name|'Table'
op|'('
string|"'shadow_instances'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'instance'
name|'in'
name|'itertools'
op|'.'
name|'chain'
op|'('
nl|'\n'
name|'instance_table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_shadow_table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
comment|'# Get all the bdms for an instance'
nl|'\n'
indent|'        '
name|'bdm_q'
op|'='
name|'select'
op|'('
name|'_get_columns'
op|'('
name|'bdm_table'
op|','
name|'_bdm_rows_v1'
op|')'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'bdms_v1'
op|'='
op|'['
name|'val'
name|'for'
name|'val'
name|'in'
name|'bdm_q'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|']'
newline|'\n'
name|'bdms_v2'
op|'='
op|'['
op|']'
newline|'\n'
name|'image_bdm'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bdms_v1'
op|':'
newline|'\n'
indent|'            '
name|'bdm_v2'
op|'='
name|'_default_bdm'
op|'('
op|')'
newline|'\n'
comment|"# Copy over some fields we'll need"
nl|'\n'
name|'bdm_v2'
op|'['
string|"'id'"
op|']'
op|'='
name|'bdm'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'bdm_v2'
op|'['
string|"'device_name'"
op|']'
op|'='
name|'bdm'
op|'['
string|"'device_name'"
op|']'
newline|'\n'
nl|'\n'
name|'virt_name'
op|'='
name|'bdm'
op|'.'
name|'virtual_name'
newline|'\n'
name|'if'
name|'_is_swap_or_ephemeral'
op|'('
name|'virt_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'bdm_v2'
op|'['
string|"'source_type'"
op|']'
op|'='
string|"'blank'"
newline|'\n'
nl|'\n'
name|'if'
name|'virt_name'
op|'=='
string|"'swap'"
op|':'
newline|'\n'
indent|'                    '
name|'bdm_v2'
op|'['
string|"'guest_format'"
op|']'
op|'='
string|"'swap'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'bdm_v2'
op|'['
string|"'guest_format'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'default_ephemeral_format'
newline|'\n'
nl|'\n'
dedent|''
name|'bdms_v2'
op|'.'
name|'append'
op|'('
name|'bdm_v2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'bdm'
op|'.'
name|'snapshot_id'
op|':'
newline|'\n'
indent|'                '
name|'bdm_v2'
op|'['
string|"'source_type'"
op|']'
op|'='
string|"'snapshot'"
newline|'\n'
name|'bdm_v2'
op|'['
string|"'destination_type'"
op|']'
op|'='
string|"'volume'"
newline|'\n'
nl|'\n'
name|'bdms_v2'
op|'.'
name|'append'
op|'('
name|'bdm_v2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'bdm'
op|'.'
name|'volume_id'
op|':'
newline|'\n'
indent|'                '
name|'bdm_v2'
op|'['
string|"'source_type'"
op|']'
op|'='
string|"'volume'"
newline|'\n'
name|'bdm_v2'
op|'['
string|"'destination_type'"
op|']'
op|'='
string|"'volume'"
newline|'\n'
nl|'\n'
name|'bdms_v2'
op|'.'
name|'append'
op|'('
name|'bdm_v2'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
comment|'# Log a warning that the bdm is not as expected'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
string|'"Got an unexpected block device %s"'
nl|'\n'
string|'"that cannot be converted to v2 format"'
op|'%'
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'instance'
op|'.'
name|'image_ref'
op|':'
newline|'\n'
indent|'            '
name|'image_bdm'
op|'='
name|'_default_bdm'
op|'('
op|')'
newline|'\n'
name|'image_bdm'
op|'['
string|"'source_type'"
op|']'
op|'='
string|"'image'"
newline|'\n'
name|'image_bdm'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'instance'
op|'.'
name|'uuid'
newline|'\n'
name|'image_bdm'
op|'['
string|"'image_id'"
op|']'
op|'='
name|'instance'
op|'.'
name|'image_ref'
newline|'\n'
nl|'\n'
comment|'# NOTE (ndipanov): Mark only the image or the bootable volume'
nl|'\n'
comment|"#                  with boot index, as we don't support it yet."
nl|'\n'
comment|'#                  Also, make sure that instances started with'
nl|'\n'
comment|'#                  the old syntax of specifying an image *and*'
nl|'\n'
comment|'#                  a bootable volume still have consistend data.'
nl|'\n'
dedent|''
name|'bootable'
op|'='
op|'['
name|'bdm'
name|'for'
name|'bdm'
name|'in'
name|'bdms_v2'
nl|'\n'
name|'if'
name|'strip_dev'
op|'('
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|')'
op|'=='
nl|'\n'
name|'strip_dev'
op|'('
name|'instance'
op|'.'
name|'root_device_name'
op|')'
nl|'\n'
name|'and'
name|'bdm'
op|'['
string|"'source_type'"
op|']'
op|'!='
string|"'blank'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'bootable'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
string|'"Found inconsistent block device data for "'
nl|'\n'
string|'"instance %s - non-unique bootable device."'
nl|'\n'
op|'%'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'bootable'
op|':'
newline|'\n'
indent|'            '
name|'bootable'
op|'['
number|'0'
op|']'
op|'['
string|"'boot_index'"
op|']'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'elif'
name|'instance'
op|'.'
name|'image_ref'
op|':'
newline|'\n'
indent|'            '
name|'image_bdm'
op|'['
string|"'boot_index'"
op|']'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
string|'"No bootable device found for instance %s."'
nl|'\n'
op|'%'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the DB'
nl|'\n'
dedent|''
name|'if'
name|'image_bdm'
op|':'
newline|'\n'
indent|'            '
name|'bdm_table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
op|'**'
name|'image_bdm'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'bdm'
name|'in'
name|'bdms_v2'
op|':'
newline|'\n'
indent|'            '
name|'bdm_table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'bdm'
op|'['
string|"'id'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'values'
op|'('
op|'**'
name|'bdm'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_downgrade_bdm_v2
dedent|''
dedent|''
dedent|''
name|'def'
name|'_downgrade_bdm_v2'
op|'('
name|'meta'
op|','
name|'bdm_table'
op|')'
op|':'
newline|'\n'
comment|'# First delete all the image bdms'
nl|'\n'
nl|'\n'
comment|'# NOTE (ndipanov): This will delete all the image bdms, even the ones'
nl|'\n'
comment|'#                   that were potentially created as part of th normal'
nl|'\n'
comment|'#                   operation, not only the upgrade. We have to do it,'
nl|'\n'
comment|'#                   as we have no way of handling them in the old code.'
nl|'\n'
indent|'    '
name|'bdm_table'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'source_type'
op|'=='
string|"'image'"
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE (ndipanov):  Set all NULL device_names (if any) to '' and let the"
nl|'\n'
comment|'#                   Nova code deal with that. This is needed so that the'
nl|'\n'
comment|'#                   return of nullable=True does not break, and should'
nl|'\n'
comment|'#                   happen only if there are instances that are just'
nl|'\n'
comment|'#                   starting up when we do the downgrade'
nl|'\n'
name|'bdm_table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'device_name'
op|'=='
name|'None'
nl|'\n'
op|')'
op|'.'
name|'values'
op|'('
name|'device_name'
op|'='
string|"''"
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'Table'
op|'('
string|"'instances'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance_shadow'
op|'='
name|'Table'
op|'('
string|"'shadow_instances'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance_q'
op|'='
name|'select'
op|'('
op|'['
name|'instance'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'instance_shadow_q'
op|'='
name|'select'
op|'('
op|'['
name|'instance_shadow'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'instance_uuid'
op|','
name|'in'
name|'itertools'
op|'.'
name|'chain'
op|'('
nl|'\n'
name|'instance_q'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_shadow_q'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
comment|'# Get all the bdms for an instance'
nl|'\n'
indent|'        '
name|'bdm_q'
op|'='
name|'select'
op|'('
nl|'\n'
op|'['
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|','
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'source_type'
op|','
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'guest_format'
op|']'
nl|'\n'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
op|'('
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
name|'instance_uuid'
op|')'
op|'&'
nl|'\n'
op|'('
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'source_type'
op|'=='
string|"'blank'"
op|')'
nl|'\n'
op|')'
op|'.'
name|'order_by'
op|'('
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'asc'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'blanks'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'zip'
op|'('
op|'('
string|"'id'"
op|','
string|"'source'"
op|','
string|"'format'"
op|')'
op|','
name|'row'
op|')'
op|')'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'bdm_q'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'swap'
op|'='
op|'['
name|'dev'
name|'for'
name|'dev'
name|'in'
name|'blanks'
name|'if'
name|'dev'
op|'['
string|"'format'"
op|']'
op|'=='
string|"'swap'"
op|']'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'swap'
op|')'
op|'<'
number|'2'
newline|'\n'
name|'ephemerals'
op|'='
op|'['
name|'dev'
name|'for'
name|'dev'
name|'in'
name|'blanks'
name|'if'
name|'dev'
name|'not'
name|'in'
name|'swap'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
op|','
name|'eph'
name|'in'
name|'enumerate'
op|'('
name|'ephemerals'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'eph'
op|'['
string|"'virtual_name'"
op|']'
op|'='
string|"'ephemeral'"
op|'+'
name|'str'
op|'('
name|'index'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'swap'
op|':'
newline|'\n'
indent|'            '
name|'swap'
op|'['
number|'0'
op|']'
op|'['
string|"'virtual_name'"
op|']'
op|'='
string|"'swap'"
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'bdm'
name|'in'
name|'swap'
op|'+'
name|'ephemerals'
op|':'
newline|'\n'
indent|'            '
name|'bdm_table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'bdm_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'bdm'
op|'['
string|"'id'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'values'
op|'('
op|'**'
name|'bdm'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
