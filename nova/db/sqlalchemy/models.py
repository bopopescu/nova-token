begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nSQLAlchemy models for nova data.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
op|','
name|'Integer'
op|','
name|'BigInteger'
op|','
name|'String'
op|','
name|'schema'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'IntegrityError'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'ext'
op|'.'
name|'declarative'
name|'import'
name|'declarative_base'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'ForeignKey'
op|','
name|'DateTime'
op|','
name|'Boolean'
op|','
name|'Text'
op|','
name|'Float'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'relationship'
op|','
name|'backref'
op|','
name|'object_mapper'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'session'
name|'import'
name|'get_session'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|BASE
name|'BASE'
op|'='
name|'declarative_base'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NovaBase
name|'class'
name|'NovaBase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for Nova Models."""'
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
newline|'\n'
DECL|variable|__table_initialized__
name|'__table_initialized__'
op|'='
name|'False'
newline|'\n'
DECL|variable|created_at
name|'created_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'default'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|updated_at
name|'updated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'onupdate'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|deleted_at
name|'deleted_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|deleted
name|'deleted'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|metadata
name|'metadata'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|save
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save this object."""'
newline|'\n'
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
dedent|''
name|'session'
op|'.'
name|'add'
op|'('
name|'self'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IntegrityError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'str'
op|'('
name|'e'
op|')'
op|'.'
name|'endswith'
op|'('
string|"'is not unique'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Duplicate'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
dedent|''
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete this object."""'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'deleted_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'columns'
op|'='
name|'dict'
op|'('
name|'object_mapper'
op|'('
name|'self'
op|')'
op|'.'
name|'columns'
op|')'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(russellb): Allow models to specify other keys that can be looked'
nl|'\n'
comment|"# up, beyond the actual db columns.  An example would be the 'name'"
nl|'\n'
comment|'# property for an Instance.'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'_extra_keys'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'columns'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'_extra_keys'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_i'
op|'='
name|'iter'
op|'('
name|'columns'
op|')'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
name|'self'
op|'.'
name|'_i'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'return'
name|'n'
op|','
name|'getattr'
op|'('
name|'self'
op|','
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make the model object behave like a dict"""'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iteritems
dedent|''
dedent|''
name|'def'
name|'iteritems'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make the model object behave like a dict.\n\n        Includes attributes from joins."""'
newline|'\n'
name|'local'
op|'='
name|'dict'
op|'('
name|'self'
op|')'
newline|'\n'
name|'joined'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'not'
name|'k'
op|'['
number|'0'
op|']'
op|'=='
string|"'_'"
op|']'
op|')'
newline|'\n'
name|'local'
op|'.'
name|'update'
op|'('
name|'joined'
op|')'
newline|'\n'
name|'return'
name|'local'
op|'.'
name|'iteritems'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Service
dedent|''
dedent|''
name|'class'
name|'Service'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running service on a host."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'services'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|binary
name|'binary'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|topic
name|'topic'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|report_count
name|'report_count'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|disabled
name|'disabled'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'default'
op|'='
string|"'nova'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeNode
dedent|''
name|'class'
name|'ComputeNode'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running compute service on a host."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'compute_nodes'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|service_id
name|'service_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'services.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|service
name|'service'
op|'='
name|'relationship'
op|'('
name|'Service'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'compute_node'"
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'service_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'ComputeNode.service_id == Service.id,'"
nl|'\n'
string|"'ComputeNode.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|local_gb
name|'local_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vcpus_used
name|'vcpus_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|memory_mb_used
name|'memory_mb_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|local_gb_used
name|'local_gb_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|hypervisor_type
name|'hypervisor_type'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
DECL|variable|hypervisor_version
name|'hypervisor_version'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|hypervisor_hostname
name|'hypervisor_hostname'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Free Ram, amount of activity (resize, migration, boot, etc) and'
nl|'\n'
comment|"# the number of running VM's are a good starting point for what's"
nl|'\n'
comment|'# important when making scheduling decisions.'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# NOTE(sandy): We'll need to make this extensible for other schedulers."
nl|'\n'
DECL|variable|free_ram_mb
name|'free_ram_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|free_disk_gb
name|'free_disk_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|current_workload
name|'current_workload'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|running_vms
name|'running_vms'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
comment|'# Note(masumotok): Expected Strings example:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# \'{"arch":"x86_64",'
nl|'\n'
comment|'#   "model":"Nehalem",'
nl|'\n'
comment|'#   "topology":{"sockets":1, "threads":2, "cores":3},'
nl|'\n'
comment|'#   "features":["tdtscp", "xtpr"]}\''
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Points are "json translatable" and it must have all dictionary keys'
nl|'\n'
comment|'# above, since it is copied from <cpu> tag of getCapabilities()'
nl|'\n'
comment|'# (See libvirt.virtConnection).'
nl|'\n'
DECL|variable|cpu_info
name|'cpu_info'
op|'='
name|'Column'
op|'('
name|'Text'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|disk_available_least
name|'disk_available_least'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Certificate
dedent|''
name|'class'
name|'Certificate'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a x509 certificate"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'certificates'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|file_name
name|'file_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Instance
dedent|''
name|'class'
name|'Instance'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a guest VM."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instances'"
newline|'\n'
DECL|variable|injected_files
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'base_name'
op|'='
name|'FLAGS'
op|'.'
name|'instance_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
comment|'# Support templates like "uuid-%(uuid)s", etc.'
nl|'\n'
indent|'            '
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|"# NOTE(russellb): Don't use self.iteritems() here, as it will"
nl|'\n'
comment|'# result in infinite recursion on the name property.'
nl|'\n'
name|'for'
name|'column'
name|'in'
name|'iter'
op|'('
name|'object_mapper'
op|'('
name|'self'
op|')'
op|'.'
name|'columns'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'='
name|'column'
op|'.'
name|'name'
newline|'\n'
comment|'# prevent recursion if someone specifies %(name)s'
nl|'\n'
comment|'# %(name)s will not be valid.'
nl|'\n'
name|'if'
name|'key'
op|'=='
string|"'name'"
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'info'
op|'['
name|'key'
op|']'
op|'='
name|'self'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'base_name'
op|'='
name|'FLAGS'
op|'.'
name|'instance_name_template'
op|'%'
name|'info'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'base_name'
op|'='
name|'self'
op|'.'
name|'uuid'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'base_name'
newline|'\n'
nl|'\n'
DECL|member|_extra_keys
dedent|''
name|'def'
name|'_extra_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|variable|user_id
dedent|''
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|image_ref
name|'image_ref'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|kernel_id
name|'kernel_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|ramdisk_id
name|'ramdisk_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|server_name
name|'server_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"#    image_ref = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    kernel_id = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    ramdisk_id = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    ramdisk = relationship(Ramdisk, backref=backref('instances', order_by=id))"
nl|'\n'
comment|"#    kernel = relationship(Kernel, backref=backref('instances', order_by=id))"
nl|'\n'
nl|'\n'
DECL|variable|launch_index
name|'launch_index'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|key_name
name|'key_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|key_data
name|'key_data'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|power_state
name|'power_state'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vm_state
name|'vm_state'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|task_state
name|'task_state'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|root_gb
name|'root_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|ephemeral_gb
name|'ephemeral_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|hostname
name|'hostname'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
nl|'\n'
comment|'# *not* flavor_id'
nl|'\n'
DECL|variable|instance_type_id
name|'instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_data
name|'user_data'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|reservation_id
name|'reservation_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|scheduled_at
name|'scheduled_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|launched_at
name|'launched_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|terminated_at
name|'terminated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# User editable field for display in user-facing UIs'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# To remember on which host an instance booted.'
nl|'\n'
comment|'# An instance may have moved to another host by live migration.'
nl|'\n'
DECL|variable|launched_on
name|'launched_on'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
DECL|variable|locked
name|'locked'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|os_type
name|'os_type'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|architecture
name|'architecture'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|vm_mode
name|'vm_mode'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|root_device_name
name|'root_device_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|default_ephemeral_device
name|'default_ephemeral_device'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|default_swap_device
name|'default_swap_device'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|config_drive
name|'config_drive'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# User editable field meant to represent what ip should be used'
nl|'\n'
comment|'# to connect to the instance'
nl|'\n'
DECL|variable|access_ip_v4
name|'access_ip_v4'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|access_ip_v6
name|'access_ip_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|auto_disk_config
name|'auto_disk_config'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|progress
name|'progress'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
comment|'# EC2 instance_initiated_shutdown_terminate'
nl|'\n'
comment|"# True: -> 'terminate'"
nl|'\n'
comment|"# False: -> 'stop'"
nl|'\n'
comment|'# Note(maoy): currently Nova will always stop instead of terminate'
nl|'\n'
comment|'# no matter what the flag says. So we set the default to False.'
nl|'\n'
DECL|variable|shutdown_terminate
name|'shutdown_terminate'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|'('
op|')'
op|','
name|'default'
op|'='
name|'False'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# EC2 disable_api_termination'
nl|'\n'
DECL|variable|disable_terminate
name|'disable_terminate'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|'('
op|')'
op|','
name|'default'
op|'='
name|'False'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceInfoCache
dedent|''
name|'class'
name|'InstanceInfoCache'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Represents a cache of information about an instance\n    """'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_info_caches'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# text column used for storing a json object of network data for api'
nl|'\n'
DECL|variable|network_info
name|'network_info'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'info_cache'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
name|'primaryjoin'
op|'='
name|'instance_uuid'
op|'=='
name|'Instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypes
dedent|''
name|'class'
name|'InstanceTypes'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represent possible instance_types or flavor of VM offered"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"instance_types"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|root_gb
name|'root_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|ephemeral_gb
name|'ephemeral_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|flavorid
name|'flavorid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|swap
name|'swap'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|rxtx_factor
name|'rxtx_factor'
op|'='
name|'Column'
op|'('
name|'Float'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'1'
op|')'
newline|'\n'
DECL|variable|vcpu_weight
name|'vcpu_weight'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|disabled
name|'disabled'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'instance_type'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'Instance.instance_type_id == '"
nl|'\n'
string|"'InstanceTypes.id)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Volume
dedent|''
name|'class'
name|'Volume'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a block storage device that can be attached to a VM."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'volumes'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'volume_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
DECL|variable|ec2_id
dedent|''
name|'ec2_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|snapshot_id
name|'snapshot_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|size
name|'size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): foreign key?'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
DECL|variable|mountpoint
name|'mountpoint'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|attach_time
name|'attach_time'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): enum?'
newline|'\n'
DECL|variable|attach_status
name|'attach_status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): enum'
newline|'\n'
nl|'\n'
DECL|variable|scheduled_at
name|'scheduled_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|launched_at
name|'launched_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|terminated_at
name|'terminated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|provider_location
name|'provider_location'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|provider_auth
name|'provider_auth'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_type_id
name|'volume_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeMetadata
dedent|''
name|'class'
name|'VolumeMetadata'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a metadata key/value pair for a volume"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'volume_metadata'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'volumes.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|volume
name|'volume'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
name|'backref'
op|'='
string|'"volume_metadata"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'VolumeMetadata.volume_id == Volume.id,'"
nl|'\n'
string|"'VolumeMetadata.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeTypes
dedent|''
name|'class'
name|'VolumeTypes'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represent possible volume_types of volumes offered"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"volume_types"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volumes
name|'volumes'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'volume_type'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'Volume.volume_type_id == VolumeTypes.id, '"
nl|'\n'
string|"'VolumeTypes.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeTypeExtraSpecs
dedent|''
name|'class'
name|'VolumeTypeExtraSpecs'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents additional specs as key/value pairs for a volume_type"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'volume_type_extra_specs'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_type_id
name|'volume_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'volume_types.id'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|volume_type
name|'volume_type'
op|'='
name|'relationship'
op|'('
name|'VolumeTypes'
op|','
name|'backref'
op|'='
string|'"extra_specs"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_type_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'VolumeTypeExtraSpecs.volume_type_id == VolumeTypes.id,'"
nl|'\n'
string|"'VolumeTypeExtraSpecs.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Quota
dedent|''
name|'class'
name|'Quota'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a single quota override for a project.\n\n    If there is no row for a given project id and resource, then the\n    default for the quota class is used.  If there is no row for a\n    given quota class and resource, then the default for the\n    deployment is used. If the row is present but the hard limit is\n    Null, then the resource is unlimited.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'quotas'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'index'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|resource
name|'resource'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|hard_limit
name|'hard_limit'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QuotaClass
dedent|''
name|'class'
name|'QuotaClass'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a single quota override for a quota class.\n\n    If there is no row for a given quota class and resource, then the\n    default for the deployment is used.  If the row is present but the\n    hard limit is Null, then the resource is unlimited.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'quota_classes'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|class_name
name|'class_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'index'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|resource
name|'resource'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|hard_limit
name|'hard_limit'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QuotaUsage
dedent|''
name|'class'
name|'QuotaUsage'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents the current usage for a given resource."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'quota_usages'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'index'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|resource
name|'resource'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|in_use
name|'in_use'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|reserved
name|'reserved'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|total
name|'def'
name|'total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'in_use'
op|'+'
name|'self'
op|'.'
name|'reserved'
newline|'\n'
nl|'\n'
DECL|variable|until_refresh
dedent|''
name|'until_refresh'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Reservation
dedent|''
name|'class'
name|'Reservation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a resource reservation for quotas."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'reservations'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|usage_id
name|'usage_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'quota_usages.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'index'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|resource
name|'resource'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|delta
name|'delta'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|expire
name|'expire'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Snapshot
dedent|''
name|'class'
name|'Snapshot'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a block storage device that can be attached to a VM."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'snapshots'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'snapshot_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|volume_name
name|'def'
name|'volume_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'volume_name_template'
op|'%'
name|'self'
op|'.'
name|'volume_id'
newline|'\n'
nl|'\n'
DECL|variable|user_id
dedent|''
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|progress
name|'progress'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_size
name|'volume_size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BlockDeviceMapping
dedent|''
name|'class'
name|'BlockDeviceMapping'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents block device mapping that is defined by EC2"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"block_device_mapping"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'block_device_mapping'"
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(BlockDeviceMapping.'"
nl|'\n'
string|"'instance_uuid=='"
nl|'\n'
string|"'Instance.uuid,'"
nl|'\n'
string|"'BlockDeviceMapping.deleted=='"
nl|'\n'
string|"'False)'"
op|')'
newline|'\n'
DECL|variable|device_name
name|'device_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# default=False for compatibility of the existing code.'
nl|'\n'
comment|'# With EC2 API,'
nl|'\n'
comment|'# default True for ami specified device.'
nl|'\n'
comment|'# default False for created with other timing.'
nl|'\n'
DECL|variable|delete_on_termination
name|'delete_on_termination'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# for ephemeral device'
nl|'\n'
DECL|variable|virtual_name
name|'virtual_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|snapshot_id
name|'snapshot_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|volume_size
name|'volume_size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# for no device to suppress devices.'
nl|'\n'
DECL|variable|no_device
name|'no_device'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|connection_info
name|'connection_info'
op|'='
name|'Column'
op|'('
name|'Text'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IscsiTarget
dedent|''
name|'class'
name|'IscsiTarget'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents an iscsi target for a given host"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'iscsi_targets'"
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'('
name|'schema'
op|'.'
name|'UniqueConstraint'
op|'('
string|'"target_num"'
op|','
string|'"host"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
op|')'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|target_num
name|'target_num'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'volumes.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|volume
name|'volume'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'iscsi_target'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(IscsiTarget.volume_id==Volume.id,'"
nl|'\n'
string|"'IscsiTarget.deleted==False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupInstanceAssociation
dedent|''
name|'class'
name|'SecurityGroupInstanceAssociation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'security_group_instance_association'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|security_group_id
name|'security_group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroup
dedent|''
name|'class'
name|'SecurityGroup'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a security group."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'security_groups'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|description
name|'description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|secondary
name|'secondary'
op|'='
string|'"security_group_instance_association"'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroup.id == '"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.security_group_id,'"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.deleted == False,'"
nl|'\n'
string|"'SecurityGroup.deleted == False)'"
op|','
nl|'\n'
DECL|variable|secondaryjoin
name|'secondaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.instance_uuid == Instance.uuid,'"
nl|'\n'
comment|"# (anthony) the condition below shouldn't be necessary now that the"
nl|'\n'
comment|'# association is being marked as deleted.  However, removing this'
nl|'\n'
comment|"# may cause existing deployments to choke, so I'm leaving it"
nl|'\n'
string|"'Instance.deleted == False)'"
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
string|"'security_groups'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupIngressRule
dedent|''
name|'class'
name|'SecurityGroupIngressRule'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a rule in a security group."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'security_group_rules'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|parent_group_id
name|'parent_group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|parent_group
name|'parent_group'
op|'='
name|'relationship'
op|'('
string|'"SecurityGroup"'
op|','
name|'backref'
op|'='
string|'"rules"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'parent_group_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroupIngressRule.parent_group_id == SecurityGroup.id,'"
nl|'\n'
string|"'SecurityGroupIngressRule.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'5'
op|')'
op|')'
comment|'# "tcp", "udp", or "icmp"'
newline|'\n'
DECL|variable|from_port
name|'from_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|to_port
name|'to_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|cidr
name|'cidr'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Note: This is not the parent SecurityGroup. It's SecurityGroup we're"
nl|'\n'
comment|'# granting access for.'
nl|'\n'
DECL|variable|group_id
name|'group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|grantee_group
name|'grantee_group'
op|'='
name|'relationship'
op|'('
string|'"SecurityGroup"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'group_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroupIngressRule.group_id == SecurityGroup.id,'"
nl|'\n'
string|"'SecurityGroupIngressRule.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProviderFirewallRule
dedent|''
name|'class'
name|'ProviderFirewallRule'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a rule in a security group."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'provider_fw_rules'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'5'
op|')'
op|')'
comment|'# "tcp", "udp", or "icmp"'
newline|'\n'
DECL|variable|from_port
name|'from_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|to_port
name|'to_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|cidr
name|'cidr'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|KeyPair
dedent|''
name|'class'
name|'KeyPair'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a public key pair for ssh."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'key_pairs'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|fingerprint
name|'fingerprint'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|public_key
name|'public_key'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Migration
dedent|''
name|'class'
name|'Migration'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running host-to-host migration."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'migrations'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
comment|"# NOTE(tr3buchet): the ____compute variables are instance['host']"
nl|'\n'
DECL|variable|source_compute
name|'source_compute'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dest_compute
name|'dest_compute'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
comment|'# NOTE(tr3buchet): dest_host, btw, is an ip address'
nl|'\n'
DECL|variable|dest_host
name|'dest_host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|old_instance_type_id
name|'old_instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|new_instance_type_id
name|'new_instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'#TODO(_cerberus_): enum'
nl|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Network
dedent|''
name|'class'
name|'Network'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a network."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'networks'"
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'('
name|'schema'
op|'.'
name|'UniqueConstraint'
op|'('
string|'"vpn_public_address"'
op|','
nl|'\n'
string|'"vpn_public_port"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
op|')'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|label
name|'label'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|injected
name|'injected'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|cidr
name|'cidr'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|cidr_v6
name|'cidr_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|multi_host
name|'multi_host'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|gateway_v6
name|'gateway_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|netmask_v6
name|'netmask_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|netmask
name|'netmask'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|bridge
name|'bridge'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|bridge_interface
name|'bridge_interface'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|gateway
name|'gateway'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|broadcast
name|'broadcast'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dns1
name|'dns1'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dns2
name|'dns2'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|vlan
name|'vlan'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vpn_public_address
name|'vpn_public_address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|vpn_public_port
name|'vpn_public_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vpn_private_address
name|'vpn_private_address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dhcp_start
name|'dhcp_start'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rxtx_base
name|'rxtx_base'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|priority
name|'priority'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterface
dedent|''
name|'class'
name|'VirtualInterface'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a virtual interface on an instance."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'virtual_interfaces'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|network_id
name|'network_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(vish): can these both come from the same baseclass?'
nl|'\n'
DECL|class|FixedIp
dedent|''
name|'class'
name|'FixedIp'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a fixed ip for an instance."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'fixed_ips'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|network_id
name|'network_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|virtual_interface_id
name|'virtual_interface_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# associated means that a fixed_ip has its instance_id column set'
nl|'\n'
comment|'# allocated means that a fixed_ip has its virtual_interface_id column set'
nl|'\n'
DECL|variable|allocated
name|'allocated'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
comment|'# leased means dhcp bridge has leased the ip'
nl|'\n'
DECL|variable|leased
name|'leased'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|reserved
name|'reserved'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIp
dedent|''
name|'class'
name|'FloatingIp'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a floating ip that dynamically forwards to a fixed ip."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'floating_ips'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|fixed_ip_id
name|'fixed_ip_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|auto_assigned
name|'auto_assigned'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|pool
name|'pool'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|interface
name|'interface'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DNSDomain
dedent|''
name|'class'
name|'DNSDomain'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a DNS domain with availability zone or project info."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'dns_domains'"
newline|'\n'
DECL|variable|domain
name|'domain'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'512'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|scope
name|'scope'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsolePool
dedent|''
name|'class'
name|'ConsolePool'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents pool of consoles on the same physical node."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'console_pools'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|username
name|'username'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|console_type
name|'console_type'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|public_hostname
name|'public_hostname'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|compute_host
name|'compute_host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Console
dedent|''
name|'class'
name|'Console'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a console session for an instance."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'consoles'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance_name
name|'instance_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|port
name|'port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|pool_id
name|'pool_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'console_pools.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|pool
name|'pool'
op|'='
name|'relationship'
op|'('
name|'ConsolePool'
op|','
name|'backref'
op|'='
name|'backref'
op|'('
string|"'consoles'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceMetadata
dedent|''
name|'class'
name|'InstanceMetadata'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a user-provided metadata key/value pair for an instance"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_metadata'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
name|'backref'
op|'='
string|'"metadata"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'InstanceMetadata.instance_uuid == '"
nl|'\n'
string|"'Instance.uuid,'"
nl|'\n'
string|"'InstanceMetadata.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceSystemMetadata
dedent|''
name|'class'
name|'InstanceSystemMetadata'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a system-owned metadata key/value pair for an instance"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_system_metadata'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
nl|'\n'
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|primary_join
name|'primary_join'
op|'='
op|'('
string|"'and_(InstanceSystemMetadata.instance_uuid == '"
nl|'\n'
string|"'Instance.uuid, InstanceSystemMetadata.deleted == False)'"
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
name|'backref'
op|'='
string|'"system_metadata"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
name|'primary_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeExtraSpecs
dedent|''
name|'class'
name|'InstanceTypeExtraSpecs'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents additional specs as key/value pairs for an instance_type"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_type_extra_specs'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_type_id
name|'instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instance_types.id'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance_type
name|'instance_type'
op|'='
name|'relationship'
op|'('
name|'InstanceTypes'
op|','
name|'backref'
op|'='
string|'"extra_specs"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_type_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'InstanceTypeExtraSpecs.instance_type_id == InstanceTypes.id,'"
nl|'\n'
string|"'InstanceTypeExtraSpecs.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateHost
dedent|''
name|'class'
name|'AggregateHost'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a host that is member of an aggregate."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'aggregate_hosts'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|aggregate_id
name|'aggregate_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'aggregates.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateMetadata
dedent|''
name|'class'
name|'AggregateMetadata'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a metadata key/value pair for an aggregate."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'aggregate_metadata'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|aggregate_id
name|'aggregate_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'aggregates.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Aggregate
dedent|''
name|'class'
name|'Aggregate'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a cluster of hosts that exists in this zone."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'aggregates'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|_hosts
name|'_hosts'
op|'='
name|'relationship'
op|'('
name|'AggregateHost'
op|','
nl|'\n'
DECL|variable|lazy
name|'lazy'
op|'='
string|'"joined"'
op|','
nl|'\n'
DECL|variable|secondary
name|'secondary'
op|'='
string|'"aggregate_hosts"'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'Aggregate.id == AggregateHost.aggregate_id,'"
nl|'\n'
string|"'AggregateHost.deleted == False,'"
nl|'\n'
string|"'Aggregate.deleted == False)'"
op|','
nl|'\n'
DECL|variable|secondaryjoin
name|'secondaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'AggregateHost.aggregate_id == Aggregate.id, '"
nl|'\n'
string|"'AggregateHost.deleted == False,'"
nl|'\n'
string|"'Aggregate.deleted == False)'"
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
string|"'aggregates'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_metadata
name|'_metadata'
op|'='
name|'relationship'
op|'('
name|'AggregateMetadata'
op|','
nl|'\n'
DECL|variable|secondary
name|'secondary'
op|'='
string|'"aggregate_metadata"'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'Aggregate.id == AggregateMetadata.aggregate_id,'"
nl|'\n'
string|"'AggregateMetadata.deleted == False,'"
nl|'\n'
string|"'Aggregate.deleted == False)'"
op|','
nl|'\n'
DECL|variable|secondaryjoin
name|'secondaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'AggregateMetadata.aggregate_id == Aggregate.id, '"
nl|'\n'
string|"'AggregateMetadata.deleted == False,'"
nl|'\n'
string|"'Aggregate.deleted == False)'"
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
string|"'aggregates'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|hosts
name|'def'
name|'hosts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'h'
op|'.'
name|'host'
name|'for'
name|'h'
name|'in'
name|'self'
op|'.'
name|'_hosts'
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|metadetails
name|'def'
name|'metadetails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'('
op|'['
op|'('
name|'m'
op|'.'
name|'key'
op|','
name|'m'
op|'.'
name|'value'
op|')'
name|'for'
name|'m'
name|'in'
name|'self'
op|'.'
name|'_metadata'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AgentBuild
dedent|''
dedent|''
name|'class'
name|'AgentBuild'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents an agent build."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'agent_builds'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|hypervisor
name|'hypervisor'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|os
name|'os'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|architecture
name|'architecture'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|version
name|'version'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|url
name|'url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|md5hash
name|'md5hash'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BandwidthUsage
dedent|''
name|'class'
name|'BandwidthUsage'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Cache for instance bandwidth usage data pulled from the hypervisor"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'bw_usage_cache'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|mac
name|'mac'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|start_period
name|'start_period'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|last_refreshed
name|'last_refreshed'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|bw_in
name|'bw_in'
op|'='
name|'Column'
op|'('
name|'BigInteger'
op|')'
newline|'\n'
DECL|variable|bw_out
name|'bw_out'
op|'='
name|'Column'
op|'('
name|'BigInteger'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|S3Image
dedent|''
name|'class'
name|'S3Image'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compatibility layer for the S3 image service talking to Glance"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'s3_images'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeIdMapping
dedent|''
name|'class'
name|'VolumeIdMapping'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compatibility layer for the EC2 volume service"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'volume_id_mappings'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SnapshotIdMapping
dedent|''
name|'class'
name|'SnapshotIdMapping'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compatibility layer for the EC2 snapshot service"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'snapshot_id_mappings'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SMFlavors
dedent|''
name|'class'
name|'SMFlavors'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a flavor for SM volumes."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'sm_flavors'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|label
name|'label'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|description
name|'description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SMBackendConf
dedent|''
name|'class'
name|'SMBackendConf'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents the connection to the backend for SM."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'sm_backend_config'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|flavor_id
name|'flavor_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'sm_flavors.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|sr_uuid
name|'sr_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|sr_type
name|'sr_type'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|config_params
name|'config_params'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'2047'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SMVolume
dedent|''
name|'class'
name|'SMVolume'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'sm_volume'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'ForeignKey'
op|'('
name|'Volume'
op|'.'
name|'id'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|backend_id
name|'backend_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'sm_backend_config.id'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|vdi_uuid
name|'vdi_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceFault
dedent|''
name|'class'
name|'InstanceFault'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'instance_faults'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance_uuid
name|'instance_uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
nl|'\n'
name|'ForeignKey'
op|'('
string|"'instances.uuid'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|code
name|'code'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|message
name|'message'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|details
name|'details'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceIdMapping
dedent|''
name|'class'
name|'InstanceIdMapping'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compatability layer for the EC2 instance service"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_id_mappings'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TaskLog
dedent|''
name|'class'
name|'TaskLog'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Audit log for background periodic tasks"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'task_log'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|task_name
name|'task_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|state
name|'state'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|period_beginning
name|'period_beginning'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'default'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|period_ending
name|'period_ending'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'default'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|message
name|'message'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|task_items
name|'task_items'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|errors
name|'errors'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
