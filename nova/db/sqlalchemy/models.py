begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nSQLAlchemy models for nova data.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'relationship'
op|','
name|'backref'
op|','
name|'object_mapper'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
op|','
name|'Integer'
op|','
name|'String'
op|','
name|'schema'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'ForeignKey'
op|','
name|'DateTime'
op|','
name|'Boolean'
op|','
name|'Text'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'IntegrityError'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'ext'
op|'.'
name|'declarative'
name|'import'
name|'declarative_base'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'schema'
name|'import'
name|'ForeignKeyConstraint'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'session'
name|'import'
name|'get_session'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'auth'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|BASE
name|'BASE'
op|'='
name|'declarative_base'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NovaBase
name|'class'
name|'NovaBase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for Nova Models."""'
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
newline|'\n'
DECL|variable|__table_initialized__
name|'__table_initialized__'
op|'='
name|'False'
newline|'\n'
DECL|variable|created_at
name|'created_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'default'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|updated_at
name|'updated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|','
name|'onupdate'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|')'
newline|'\n'
DECL|variable|deleted_at
name|'deleted_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|deleted
name|'deleted'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|metadata
name|'metadata'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|save
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save this object."""'
newline|'\n'
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
dedent|''
name|'session'
op|'.'
name|'add'
op|'('
name|'self'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IntegrityError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'str'
op|'('
name|'e'
op|')'
op|'.'
name|'endswith'
op|'('
string|"'is not unique'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Duplicate'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
dedent|''
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete this object."""'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'deleted_at'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_i'
op|'='
name|'iter'
op|'('
name|'object_mapper'
op|'('
name|'self'
op|')'
op|'.'
name|'columns'
op|')'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
name|'self'
op|'.'
name|'_i'
op|'.'
name|'next'
op|'('
op|')'
op|'.'
name|'name'
newline|'\n'
name|'return'
name|'n'
op|','
name|'getattr'
op|'('
name|'self'
op|','
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make the model object behave like a dict"""'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iteritems
dedent|''
dedent|''
name|'def'
name|'iteritems'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make the model object behave like a dict.\n\n        Includes attributes from joins."""'
newline|'\n'
name|'local'
op|'='
name|'dict'
op|'('
name|'self'
op|')'
newline|'\n'
name|'joined'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'not'
name|'k'
op|'['
number|'0'
op|']'
op|'=='
string|"'_'"
op|']'
op|')'
newline|'\n'
name|'local'
op|'.'
name|'update'
op|'('
name|'joined'
op|')'
newline|'\n'
name|'return'
name|'local'
op|'.'
name|'iteritems'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Service
dedent|''
dedent|''
name|'class'
name|'Service'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running service on a host."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'services'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|binary
name|'binary'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|topic
name|'topic'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|report_count
name|'report_count'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|disabled
name|'disabled'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'default'
op|'='
string|"'nova'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeNode
dedent|''
name|'class'
name|'ComputeNode'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running compute service on a host."""'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'compute_nodes'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|service_id
name|'service_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'services.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|service
name|'service'
op|'='
name|'relationship'
op|'('
name|'Service'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'compute_node'"
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'service_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'ComputeNode.service_id == Service.id,'"
nl|'\n'
string|"'ComputeNode.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|local_gb
name|'local_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|vcpus_used
name|'vcpus_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|memory_mb_used
name|'memory_mb_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|local_gb_used
name|'local_gb_used'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|hypervisor_type
name|'hypervisor_type'
op|'='
name|'Column'
op|'('
name|'Text'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|hypervisor_version
name|'hypervisor_version'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Note(masumotok): Expected Strings example:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# \'{"arch":"x86_64",'
nl|'\n'
comment|'#   "model":"Nehalem",'
nl|'\n'
comment|'#   "topology":{"sockets":1, "threads":2, "cores":3},'
nl|'\n'
comment|'#   "features":["tdtscp", "xtpr"]}\''
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Points are "json translatable" and it must have all dictionary keys'
nl|'\n'
comment|'# above, since it is copied from <cpu> tag of getCapabilities()'
nl|'\n'
comment|'# (See libvirt.virtConnection).'
nl|'\n'
DECL|variable|cpu_info
name|'cpu_info'
op|'='
name|'Column'
op|'('
name|'Text'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Certificate
dedent|''
name|'class'
name|'Certificate'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a an x509 certificate"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'certificates'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|file_name
name|'file_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Instance
dedent|''
name|'class'
name|'Instance'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a guest vm."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instances'"
newline|'\n'
DECL|variable|injected_files
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_name'
op|'='
name|'FLAGS'
op|'.'
name|'instance_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|','
string|"'_rescue'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'base_name'
op|'+='
string|'"-rescue"'
newline|'\n'
dedent|''
name|'return'
name|'base_name'
newline|'\n'
nl|'\n'
DECL|variable|admin_pass
dedent|''
name|'admin_pass'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|user
name|'def'
name|'user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'auth'
op|'.'
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_user'
op|'('
name|'self'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|project
name|'def'
name|'project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'auth'
op|'.'
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_project'
op|'('
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|image_ref
dedent|''
name|'image_ref'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|kernel_id
name|'kernel_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|ramdisk_id
name|'ramdisk_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"#    image_ref = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    kernel_id = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    ramdisk_id = Column(Integer, ForeignKey('images.id'), nullable=True)"
nl|'\n'
comment|"#    ramdisk = relationship(Ramdisk, backref=backref('instances', order_by=id))"
nl|'\n'
comment|"#    kernel = relationship(Kernel, backref=backref('instances', order_by=id))"
nl|'\n'
comment|"#    project = relationship(Project, backref=backref('instances', order_by=id))"
nl|'\n'
nl|'\n'
DECL|variable|launch_index
name|'launch_index'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|key_name
name|'key_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|key_data
name|'key_data'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|state
name|'state'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|state_description
name|'state_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|local_gb
name|'local_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|hostname
name|'hostname'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
nl|'\n'
DECL|variable|instance_type_id
name|'instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_data
name|'user_data'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|reservation_id
name|'reservation_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|mac_address
name|'mac_address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|scheduled_at
name|'scheduled_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|launched_at
name|'launched_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|terminated_at
name|'terminated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# User editable field for display in user-facing UIs'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# To remember on which host a instance booted.'
nl|'\n'
comment|'# An instance may have moved to another host by live migraiton.'
nl|'\n'
DECL|variable|launched_on
name|'launched_on'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
DECL|variable|locked
name|'locked'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|os_type
name|'os_type'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|architecture
name|'architecture'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|vm_mode
name|'vm_mode'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|uuid
name|'uuid'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'36'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# TODO(vish): see Ewan's email about state improvements, probably"
nl|'\n'
comment|'#             should be in a driver base class or some such'
nl|'\n'
comment|'# vmstate_state = running, halted, suspended, paused'
nl|'\n'
comment|'# power_state = what we have'
nl|'\n'
comment|'# task_state = transitory and may trigger power state transition'
nl|'\n'
nl|'\n'
comment|"#@validates('state')"
nl|'\n'
comment|'#def validate_state(self, key, state):'
nl|'\n'
comment|"#    assert(state in ['nostate', 'running', 'blocked', 'paused',"
nl|'\n'
comment|"#                     'shutdown', 'shutoff', 'crashed'])"
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceActions
dedent|''
name|'class'
name|'InstanceActions'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a guest VM\'s actions and results"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"instance_actions"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|action
name|'action'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|error
name|'error'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypes
dedent|''
name|'class'
name|'InstanceTypes'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represent possible instance_types or flavor of VM offered"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"instance_types"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|memory_mb
name|'memory_mb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vcpus
name|'vcpus'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|local_gb
name|'local_gb'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|flavorid
name|'flavorid'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|swap
name|'swap'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|rxtx_quota
name|'rxtx_quota'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|rxtx_cap
name|'rxtx_cap'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'instance_type'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(Instance.instance_type_id == '"
nl|'\n'
string|"'InstanceTypes.id)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Volume
dedent|''
name|'class'
name|'Volume'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a block storage device that can be attached to a vm."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'volumes'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'volume_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
DECL|variable|user_id
dedent|''
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|snapshot_id
name|'snapshot_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|size
name|'size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|availability_zone
name|'availability_zone'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): foreign key?'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
name|'backref'
op|'='
name|'backref'
op|'('
string|"'volumes'"
op|')'
op|','
nl|'\n'
name|'foreign_keys'
op|'='
name|'instance_id'
op|','
nl|'\n'
name|'primaryjoin'
op|'='
string|"'and_(Volume.instance_id==Instance.id,'"
nl|'\n'
string|"'Volume.deleted==False)'"
op|')'
newline|'\n'
DECL|variable|mountpoint
name|'mountpoint'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|attach_time
name|'attach_time'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): datetime'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): enum?'
newline|'\n'
DECL|variable|attach_status
name|'attach_status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|'# TODO(vish): enum'
newline|'\n'
nl|'\n'
DECL|variable|scheduled_at
name|'scheduled_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|launched_at
name|'launched_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
DECL|variable|terminated_at
name|'terminated_at'
op|'='
name|'Column'
op|'('
name|'DateTime'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|provider_location
name|'provider_location'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|provider_auth
name|'provider_auth'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Quota
dedent|''
name|'class'
name|'Quota'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a single quota override for a project.\n\n    If there is no row for a given project id and resource, then\n    the default for the deployment is used. If the row is present\n    but the hard limit is Null, then the resource is unlimited.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'quotas'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'index'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|resource
name|'resource'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|hard_limit
name|'hard_limit'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Snapshot
dedent|''
name|'class'
name|'Snapshot'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a block storage device that can be attached to a vm."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'snapshots'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|name
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'snapshot_name_template'
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|volume_name
name|'def'
name|'volume_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FLAGS'
op|'.'
name|'volume_name_template'
op|'%'
name|'self'
op|'.'
name|'volume_id'
newline|'\n'
nl|'\n'
DECL|variable|user_id
dedent|''
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|progress
name|'progress'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_size
name|'volume_size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|display_name
name|'display_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|display_description
name|'display_description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BlockDeviceMapping
dedent|''
name|'class'
name|'BlockDeviceMapping'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents block device mapping that is defined by EC2"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|'"block_device_mapping"'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'balock_device_mapping'"
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(BlockDeviceMapping.instance_id=='"
nl|'\n'
string|"'Instance.id,'"
nl|'\n'
string|"'BlockDeviceMapping.deleted=='"
nl|'\n'
string|"'False)'"
op|')'
newline|'\n'
DECL|variable|device_name
name|'device_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# default=False for compatibility of the existing code.'
nl|'\n'
comment|'# With EC2 API,'
nl|'\n'
comment|'# default True for ami specified device.'
nl|'\n'
comment|'# default False for created with other timing.'
nl|'\n'
DECL|variable|delete_on_termination
name|'delete_on_termination'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# for ephemeral device'
nl|'\n'
DECL|variable|virtual_name
name|'virtual_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# for snapshot or volume'
nl|'\n'
DECL|variable|snapshot_id
name|'snapshot_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'snapshots.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# outer join'
nl|'\n'
DECL|variable|snapshot
name|'snapshot'
op|'='
name|'relationship'
op|'('
name|'Snapshot'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'volumes.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|volume
name|'volume'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_id'
op|')'
newline|'\n'
DECL|variable|volume_size
name|'volume_size'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# for no device to suppress devices.'
nl|'\n'
DECL|variable|no_device
name|'no_device'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExportDevice
dedent|''
name|'class'
name|'ExportDevice'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represates a shelf and blade that a volume can be exported on."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'export_devices'"
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'('
name|'schema'
op|'.'
name|'UniqueConstraint'
op|'('
string|'"shelf_id"'
op|','
string|'"blade_id"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
op|')'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|shelf_id
name|'shelf_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|blade_id
name|'blade_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'volumes.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|volume
name|'volume'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'export_device'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(ExportDevice.volume_id==Volume.id,'"
nl|'\n'
string|"'ExportDevice.deleted==False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IscsiTarget
dedent|''
name|'class'
name|'IscsiTarget'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represates an iscsi target for a given host"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'iscsi_targets'"
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'('
name|'schema'
op|'.'
name|'UniqueConstraint'
op|'('
string|'"target_num"'
op|','
string|'"host"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
op|')'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|target_num
name|'target_num'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|volume_id
name|'volume_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'volumes.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|volume
name|'volume'
op|'='
name|'relationship'
op|'('
name|'Volume'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'iscsi_target'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'volume_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_(IscsiTarget.volume_id==Volume.id,'"
nl|'\n'
string|"'IscsiTarget.deleted==False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupInstanceAssociation
dedent|''
name|'class'
name|'SecurityGroupInstanceAssociation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'security_group_instance_association'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|security_group_id
name|'security_group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroup
dedent|''
name|'class'
name|'SecurityGroup'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a security group."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'security_groups'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|description
name|'description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|secondary
name|'secondary'
op|'='
string|'"security_group_instance_association"'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroup.id == '"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.security_group_id,'"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.deleted == False,'"
nl|'\n'
string|"'SecurityGroup.deleted == False)'"
op|','
nl|'\n'
DECL|variable|secondaryjoin
name|'secondaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroupInstanceAssociation.instance_id == Instance.id,'"
nl|'\n'
comment|"# (anthony) the condition below shouldn't be necessary now that the"
nl|'\n'
comment|'# association is being marked as deleted.  However, removing this'
nl|'\n'
comment|"# may cause existing deployments to choke, so I'm leaving it"
nl|'\n'
string|"'Instance.deleted == False)'"
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
string|"'security_groups'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|user
name|'def'
name|'user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'auth'
op|'.'
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_user'
op|'('
name|'self'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|project
name|'def'
name|'project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'auth'
op|'.'
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_project'
op|'('
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupIngressRule
dedent|''
dedent|''
name|'class'
name|'SecurityGroupIngressRule'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a rule in a security group."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'security_group_rules'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|parent_group_id
name|'parent_group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|parent_group
name|'parent_group'
op|'='
name|'relationship'
op|'('
string|'"SecurityGroup"'
op|','
name|'backref'
op|'='
string|'"rules"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'parent_group_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'SecurityGroupIngressRule.parent_group_id == SecurityGroup.id,'"
nl|'\n'
string|"'SecurityGroupIngressRule.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'5'
op|')'
op|')'
comment|'# "tcp", "udp", or "icmp"'
newline|'\n'
DECL|variable|from_port
name|'from_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|to_port
name|'to_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|cidr
name|'cidr'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Note: This is not the parent SecurityGroup. It's SecurityGroup we're"
nl|'\n'
comment|'# granting access for.'
nl|'\n'
DECL|variable|group_id
name|'group_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'security_groups.id'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|KeyPair
dedent|''
name|'class'
name|'KeyPair'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a public key pair for ssh."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'key_pairs'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|fingerprint
name|'fingerprint'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|public_key
name|'public_key'
op|'='
name|'Column'
op|'('
name|'Text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Migration
dedent|''
name|'class'
name|'Migration'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a running host-to-host migration."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'migrations'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|source_compute
name|'source_compute'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dest_compute
name|'dest_compute'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dest_host
name|'dest_host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|old_flavor_id
name|'old_flavor_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|new_flavor_id
name|'new_flavor_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'#TODO(_cerberus_): enum'
nl|'\n'
DECL|variable|status
name|'status'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Network
dedent|''
name|'class'
name|'Network'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a network."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'networks'"
newline|'\n'
DECL|variable|__table_args__
name|'__table_args__'
op|'='
op|'('
name|'schema'
op|'.'
name|'UniqueConstraint'
op|'('
string|'"vpn_public_address"'
op|','
nl|'\n'
string|'"vpn_public_port"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mysql_engine'"
op|':'
string|"'InnoDB'"
op|'}'
op|')'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|label
name|'label'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|injected
name|'injected'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|cidr
name|'cidr'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|cidr_v6
name|'cidr_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|gateway_v6
name|'gateway_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|netmask_v6
name|'netmask_v6'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|netmask
name|'netmask'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|bridge
name|'bridge'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|gateway
name|'gateway'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|broadcast
name|'broadcast'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dns
name|'dns'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|vlan
name|'vlan'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vpn_public_address
name|'vpn_public_address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|vpn_public_port
name|'vpn_public_port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|vpn_private_address
name|'vpn_private_address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|dhcp_start
name|'dhcp_start'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): The unique constraint below helps avoid a race condition'
nl|'\n'
comment|'#             when associating a network, but it also means that we'
nl|'\n'
comment|"#             can't associate two networks with one project."
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'unique'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AuthToken
dedent|''
name|'class'
name|'AuthToken'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents an authorization token for all API transactions.\n\n    Fields are a string representing the actual token and a user id for\n    mapping to the actual user\n\n    """'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'auth_tokens'"
newline|'\n'
DECL|variable|token_hash
name|'token_hash'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|server_management_url
name|'server_management_url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|storage_url
name|'storage_url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|cdn_management_url
name|'cdn_management_url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(vish): can these both come from the same baseclass?'
nl|'\n'
DECL|class|FixedIp
dedent|''
name|'class'
name|'FixedIp'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a fixed ip for an instance."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'fixed_ips'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|network_id
name|'network_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'networks.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|network
name|'network'
op|'='
name|'relationship'
op|'('
name|'Network'
op|','
name|'backref'
op|'='
name|'backref'
op|'('
string|"'fixed_ips'"
op|')'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'fixed_ip'"
op|','
name|'uselist'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'FixedIp.instance_id == Instance.id,'"
nl|'\n'
string|"'FixedIp.deleted == False)'"
op|')'
newline|'\n'
DECL|variable|allocated
name|'allocated'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|leased
name|'leased'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|reserved
name|'reserved'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|User
dedent|''
name|'class'
name|'User'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a user."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'users'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|access_key
name|'access_key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|secret_key
name|'secret_key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|is_admin
name|'is_admin'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Project
dedent|''
name|'class'
name|'Project'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a project."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'projects'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|description
name|'description'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_manager
name|'project_manager'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'ForeignKey'
op|'('
name|'User'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|members
name|'members'
op|'='
name|'relationship'
op|'('
name|'User'
op|','
nl|'\n'
DECL|variable|secondary
name|'secondary'
op|'='
string|"'user_project_association'"
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
string|"'projects'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserProjectRoleAssociation
dedent|''
name|'class'
name|'UserProjectRoleAssociation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'user_project_role_association'"
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|user
name|'user'
op|'='
name|'relationship'
op|'('
name|'User'
op|','
nl|'\n'
name|'primaryjoin'
op|'='
name|'user_id'
op|'=='
name|'User'
op|'.'
name|'id'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
op|'['
name|'User'
op|'.'
name|'id'
op|']'
op|','
nl|'\n'
DECL|variable|uselist
name|'uselist'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|project
name|'project'
op|'='
name|'relationship'
op|'('
name|'Project'
op|','
nl|'\n'
name|'primaryjoin'
op|'='
name|'project_id'
op|'=='
name|'Project'
op|'.'
name|'id'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
op|'['
name|'Project'
op|'.'
name|'id'
op|']'
op|','
nl|'\n'
DECL|variable|uselist
name|'uselist'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|role
name|'role'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ForeignKeyConstraint'
op|'('
op|'['
string|"'user_id'"
op|','
nl|'\n'
string|"'project_id'"
op|']'
op|','
nl|'\n'
op|'['
string|"'user_project_association.user_id'"
op|','
nl|'\n'
string|"'user_project_association.project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserRoleAssociation
dedent|''
name|'class'
name|'UserRoleAssociation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'user_role_association'"
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'ForeignKey'
op|'('
string|"'users.id'"
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|user
name|'user'
op|'='
name|'relationship'
op|'('
name|'User'
op|','
name|'backref'
op|'='
string|"'roles'"
op|')'
newline|'\n'
DECL|variable|role
name|'role'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserProjectAssociation
dedent|''
name|'class'
name|'UserProjectAssociation'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
string|"'user_project_association'"
newline|'\n'
DECL|variable|user_id
name|'user_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'ForeignKey'
op|'('
name|'User'
op|'.'
name|'id'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'ForeignKey'
op|'('
name|'Project'
op|'.'
name|'id'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIp
dedent|''
name|'class'
name|'FloatingIp'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a floating ip that dynamically forwards to a fixed ip."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'floating_ips'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|fixed_ip_id
name|'fixed_ip_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'fixed_ips.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|fixed_ip
name|'fixed_ip'
op|'='
name|'relationship'
op|'('
name|'FixedIp'
op|','
nl|'\n'
DECL|variable|backref
name|'backref'
op|'='
name|'backref'
op|'('
string|"'floating_ips'"
op|')'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'fixed_ip_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'FloatingIp.fixed_ip_id == FixedIp.id,'"
nl|'\n'
string|"'FloatingIp.deleted == False)'"
op|')'
newline|'\n'
DECL|variable|project_id
name|'project_id'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
comment|"# , ForeignKey('hosts.id'))"
newline|'\n'
DECL|variable|auto_assigned
name|'auto_assigned'
op|'='
name|'Column'
op|'('
name|'Boolean'
op|','
name|'default'
op|'='
name|'False'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsolePool
dedent|''
name|'class'
name|'ConsolePool'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents pool of consoles on the same physical node."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'console_pools'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|address
name|'address'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|username
name|'username'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|console_type
name|'console_type'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|public_hostname
name|'public_hostname'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|compute_host
name|'compute_host'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Console
dedent|''
name|'class'
name|'Console'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a console session for an instance."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'consoles'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|instance_name
name|'instance_name'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|port
name|'port'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'nullable'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|pool_id
name|'pool_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'console_pools.id'"
op|')'
op|')'
newline|'\n'
DECL|variable|pool
name|'pool'
op|'='
name|'relationship'
op|'('
name|'ConsolePool'
op|','
name|'backref'
op|'='
name|'backref'
op|'('
string|"'consoles'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceMetadata
dedent|''
name|'class'
name|'InstanceMetadata'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a metadata key/value pair for an instance"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_metadata'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_id
name|'instance_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instances.id'"
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance
name|'instance'
op|'='
name|'relationship'
op|'('
name|'Instance'
op|','
name|'backref'
op|'='
string|'"metadata"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'InstanceMetadata.instance_id == Instance.id,'"
nl|'\n'
string|"'InstanceMetadata.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeExtraSpecs
dedent|''
name|'class'
name|'InstanceTypeExtraSpecs'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents additional specs as key/value pairs for an instance_type"""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'instance_type_extra_specs'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|key
name|'key'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|value
name|'value'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|instance_type_id
name|'instance_type_id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'ForeignKey'
op|'('
string|"'instance_types.id'"
op|')'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|variable|instance_type
name|'instance_type'
op|'='
name|'relationship'
op|'('
name|'InstanceTypes'
op|','
name|'backref'
op|'='
string|'"extra_specs"'
op|','
nl|'\n'
DECL|variable|foreign_keys
name|'foreign_keys'
op|'='
name|'instance_type_id'
op|','
nl|'\n'
DECL|variable|primaryjoin
name|'primaryjoin'
op|'='
string|"'and_('"
nl|'\n'
string|"'InstanceTypeExtraSpecs.instance_type_id == InstanceTypes.id,'"
nl|'\n'
string|"'InstanceTypeExtraSpecs.deleted == False)'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Zone
dedent|''
name|'class'
name|'Zone'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a child zone of this zone."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'zones'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|api_url
name|'api_url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|username
name|'username'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AgentBuild
dedent|''
name|'class'
name|'AgentBuild'
op|'('
name|'BASE'
op|','
name|'NovaBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents an agent build."""'
newline|'\n'
DECL|variable|__tablename__
name|'__tablename__'
op|'='
string|"'agent_builds'"
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|hypervisor
name|'hypervisor'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|os
name|'os'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|architecture
name|'architecture'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|version
name|'version'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|url
name|'url'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
DECL|variable|md5hash
name|'md5hash'
op|'='
name|'Column'
op|'('
name|'String'
op|'('
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_models
dedent|''
name|'def'
name|'register_models'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Register Models and create metadata.\n\n    Called from nova.db.sqlalchemy.__init__ as part of loading the driver,\n    it will never need to be called explicitly elsewhere unless the\n    connection is lost and needs to be reestablished.\n    """'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'create_engine'
newline|'\n'
name|'models'
op|'='
op|'('
name|'Service'
op|','
name|'Instance'
op|','
name|'InstanceActions'
op|','
name|'InstanceTypes'
op|','
nl|'\n'
name|'Volume'
op|','
name|'ExportDevice'
op|','
name|'IscsiTarget'
op|','
name|'FixedIp'
op|','
name|'FloatingIp'
op|','
nl|'\n'
name|'Network'
op|','
name|'SecurityGroup'
op|','
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'SecurityGroupInstanceAssociation'
op|','
name|'AuthToken'
op|','
name|'User'
op|','
nl|'\n'
name|'Project'
op|','
name|'Certificate'
op|','
name|'ConsolePool'
op|','
name|'Console'
op|','
name|'Zone'
op|','
nl|'\n'
name|'AgentBuild'
op|','
name|'InstanceMetadata'
op|','
name|'InstanceTypeExtraSpecs'
op|','
name|'Migration'
op|')'
newline|'\n'
name|'engine'
op|'='
name|'create_engine'
op|'('
name|'FLAGS'
op|'.'
name|'sql_connection'
op|','
name|'echo'
op|'='
name|'False'
op|')'
newline|'\n'
name|'for'
name|'model'
name|'in'
name|'models'
op|':'
newline|'\n'
indent|'        '
name|'model'
op|'.'
name|'metadata'
op|'.'
name|'create_all'
op|'('
name|'engine'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
