begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Implementation of SQLAlchemy backend."""'
newline|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'and_'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Boolean'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'DataError'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'IntegrityError'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'NoSuchTableError'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Integer'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'or_'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'joinedload'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'joinedload_all'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'noload'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'schema'
name|'import'
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'asc'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'desc'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'select'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'func'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'String'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
name|'import'
name|'exception'
name|'as'
name|'db_exc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'session'
name|'as'
name|'db_session'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'sqlalchemyutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
nl|'\n'
DECL|variable|db_opts
name|'db_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'osapi_compute_unique_server_name_scope'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"''"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'When set, compute API will consider duplicate hostnames '"
nl|'\n'
string|"'invalid within the specified scope, regardless of case. '"
nl|'\n'
string|'\'Should be empty, "project" or "global".\''
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'db_opts'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_topic'"
op|','
string|"'nova.compute.rpcapi'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'sql_connection'"
op|','
nl|'\n'
string|"'nova.openstack.common.db.sqlalchemy.session'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|get_engine
name|'get_engine'
op|'='
name|'db_session'
op|'.'
name|'get_engine'
newline|'\n'
DECL|variable|get_session
name|'get_session'
op|'='
name|'db_session'
op|'.'
name|'get_session'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_backend
name|'def'
name|'get_backend'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The backend is this module itself."""'
newline|'\n'
name|'return'
name|'sys'
op|'.'
name|'modules'
op|'['
name|'__name__'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_admin_context
dedent|''
name|'def'
name|'require_admin_context'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require admin request context.\n\n    The first argument to the wrapped function must be the context.\n\n    """'
newline|'\n'
nl|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'require_admin_context'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_context
dedent|''
name|'def'
name|'require_context'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require *any* user or admin context.\n\n    This does no authorization for user or project access matching, see\n    :py:func:`nova.context.authorize_project_context` and\n    :py:func:`nova.context.authorize_user_context`.\n\n    The first argument to the wrapped function must be the context.\n\n    """'
newline|'\n'
nl|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'require_context'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_instance_exists_using_uuid
dedent|''
name|'def'
name|'require_instance_exists_using_uuid'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require the specified instance to exist.\n\n    Requires the wrapped function to use context and instance_uuid as\n    their first two arguments.\n    """'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_aggregate_exists
dedent|''
name|'def'
name|'require_aggregate_exists'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require the specified aggregate to exist.\n\n    Requires the wrapped function to use context and aggregate_id as\n    their first two arguments.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_retry_on_deadlock
dedent|''
name|'def'
name|'_retry_on_deadlock'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to retry a DB API call if Deadlock was received."""'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapped
name|'def'
name|'wrapped'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDeadlock'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"Deadlock detected when running "'
nl|'\n'
string|'"\'%(func_name)s\': Retrying..."'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'func_name'
op|'='
name|'f'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
comment|'# Retry!'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.5'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'functools'
op|'.'
name|'update_wrapper'
op|'('
name|'wrapped'
op|','
name|'f'
op|')'
newline|'\n'
name|'return'
name|'wrapped'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|model_query
dedent|''
name|'def'
name|'model_query'
op|'('
name|'context'
op|','
name|'model'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Query helper that accounts for context\'s `read_deleted` field.\n\n    :param context: context to query under\n    :param session: if present, the session to use\n    :param read_deleted: if present, overrides context\'s read_deleted field.\n    :param project_only: if present and context is user-type, then restrict\n            query to match the context\'s project_id. If set to \'allow_none\',\n            restriction includes project_id = None.\n    :param base_model: Where model_query is passed a "model" parameter which is\n            not a subclass of NovaBase, we should pass an extra base_model\n            parameter that is a subclass of NovaBase and corresponds to the\n            model parameter.\n    """'
newline|'\n'
name|'session'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'session'"
op|')'
name|'or'
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'read_deleted'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'read_deleted'"
op|')'
name|'or'
name|'context'
op|'.'
name|'read_deleted'
newline|'\n'
name|'project_only'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'project_only'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|issubclassof_nova_base
name|'def'
name|'issubclassof_nova_base'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'type'
op|')'
name|'and'
name|'issubclass'
op|'('
name|'obj'
op|','
name|'models'
op|'.'
name|'NovaBase'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'base_model'
op|'='
name|'model'
newline|'\n'
name|'if'
name|'not'
name|'issubclassof_nova_base'
op|'('
name|'base_model'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_model'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'base_model'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'issubclassof_nova_base'
op|'('
name|'base_model'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"model or base_model parameter should be "'
nl|'\n'
string|'"subclass of NovaBase"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'model'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
name|'default_deleted_value'
op|'='
name|'base_model'
op|'.'
name|'__mapper__'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'default'
op|'.'
name|'arg'
newline|'\n'
name|'if'
name|'read_deleted'
op|'=='
string|"'no'"
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'base_model'
op|'.'
name|'deleted'
op|'=='
name|'default_deleted_value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'read_deleted'
op|'=='
string|"'yes'"
op|':'
newline|'\n'
indent|'        '
name|'pass'
comment|'# omit the filter to include deleted and active'
newline|'\n'
dedent|''
name|'elif'
name|'read_deleted'
op|'=='
string|"'only'"
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'base_model'
op|'.'
name|'deleted'
op|'!='
name|'default_deleted_value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Unrecognized read_deleted value \'%s\'"'
op|')'
nl|'\n'
op|'%'
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
name|'project_only'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'project_only'
op|'=='
string|"'allow_none'"
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'base_model'
op|'.'
name|'project_id'
op|'=='
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'base_model'
op|'.'
name|'project_id'
op|'=='
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|exact_filter
dedent|''
name|'def'
name|'exact_filter'
op|'('
name|'query'
op|','
name|'model'
op|','
name|'filters'
op|','
name|'legal_keys'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies exact match filtering to a query.\n\n    Returns the updated query.  Modifies filters argument to remove\n    filters consumed.\n\n    :param query: query to apply filters to\n    :param model: model object the query applies to, for IN-style\n                  filtering\n    :param filters: dictionary of filters; values that are lists,\n                    tuples, sets, or frozensets cause an \'IN\' test to\n                    be performed, while exact matching (\'==\' operator)\n                    is used for other values\n    :param legal_keys: list of keys to apply exact filtering to\n    """'
newline|'\n'
nl|'\n'
name|'filter_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Walk through all the keys'
nl|'\n'
name|'for'
name|'key'
name|'in'
name|'legal_keys'
op|':'
newline|'\n'
comment|"# Skip ones we're not filtering on"
nl|'\n'
indent|'        '
name|'if'
name|'key'
name|'not'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# OK, filtering on this key; what value do we search for?'
nl|'\n'
dedent|''
name|'value'
op|'='
name|'filters'
op|'.'
name|'pop'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|'=='
string|"'metadata'"
op|':'
newline|'\n'
indent|'            '
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'item'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'item'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'key'
op|'='
name|'k'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'value'
op|'='
name|'v'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'value'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'key'
op|'='
name|'k'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'value'
op|'='
name|'v'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
op|'('
name|'list'
op|','
name|'tuple'
op|','
name|'set'
op|','
name|'frozenset'
op|')'
op|')'
op|':'
newline|'\n'
comment|'# Looking for values in a list; apply to query directly'
nl|'\n'
indent|'            '
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'in_'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# OK, simple exact match; save for later'
nl|'\n'
indent|'            '
name|'filter_dict'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
comment|'# Apply simple exact matches'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'filter_dict'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
op|'**'
name|'filter_dict'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|convert_datetimes
dedent|''
name|'def'
name|'convert_datetimes'
op|'('
name|'values'
op|','
op|'*'
name|'datetime_keys'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'key'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'in'
name|'datetime_keys'
name|'and'
name|'isinstance'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'parse_strtime'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|constraint
dedent|''
name|'def'
name|'constraint'
op|'('
op|'**'
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'Constraint'
op|'('
name|'conditions'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|equal_any
dedent|''
name|'def'
name|'equal_any'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'EqualityCondition'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|not_equal
dedent|''
name|'def'
name|'not_equal'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'InequalityCondition'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Constraint
dedent|''
name|'class'
name|'Constraint'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conditions'
op|'='
name|'conditions'
newline|'\n'
nl|'\n'
DECL|member|apply
dedent|''
name|'def'
name|'apply'
op|'('
name|'self'
op|','
name|'model'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'condition'
name|'in'
name|'self'
op|'.'
name|'conditions'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'clause'
name|'in'
name|'condition'
op|'.'
name|'clauses'
op|'('
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'clause'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EqualityCondition
dedent|''
dedent|''
name|'class'
name|'EqualityCondition'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'values'
op|'='
name|'values'
newline|'\n'
nl|'\n'
DECL|member|clauses
dedent|''
name|'def'
name|'clauses'
op|'('
name|'self'
op|','
name|'field'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'or_'
op|'('
op|'['
name|'field'
op|'=='
name|'value'
name|'for'
name|'value'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InequalityCondition
dedent|''
dedent|''
name|'class'
name|'InequalityCondition'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'values'
op|'='
name|'values'
newline|'\n'
nl|'\n'
DECL|member|clauses
dedent|''
name|'def'
name|'clauses'
op|'('
name|'self'
op|','
name|'field'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'field'
op|'!='
name|'value'
name|'for'
name|'value'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_destroy
name|'def'
name|'service_destroy'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'service_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ServiceNotFound'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_service_get
name|'def'
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'with_compute_node'
op|'='
name|'True'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'with_compute_node'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'compute_node'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ServiceNotFound'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get
name|'def'
name|'service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_all
name|'def'
name|'service_get_all'
op|'('
name|'context'
op|','
name|'disabled'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'disabled'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_all_by_topic
name|'def'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'topic'
op|'='
name|'topic'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_by_host_and_topic
name|'def'
name|'service_get_by_host_and_topic'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'topic'
op|'='
name|'topic'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_all_by_host
name|'def'
name|'service_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_by_compute_host
name|'def'
name|'service_get_by_compute_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'compute_node'"
op|')'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'topic'
op|'='
name|'CONF'
op|'.'
name|'compute_topic'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_get_by_args
name|'def'
name|'service_get_by_args'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'binary'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'binary'
op|'='
name|'binary'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'HostBinaryNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|','
name|'binary'
op|'='
name|'binary'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_create
name|'def'
name|'service_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'enable_new_services'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'.'
name|'disabled'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'service_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'service_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|service_update
name|'def'
name|'service_update'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'='
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
nl|'\n'
name|'with_compute_node'
op|'='
name|'False'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'service_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get
dedent|''
name|'def'
name|'compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_compute_node_get
dedent|''
name|'def'
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'compute_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'service'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'stats'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|compute_node_get_all
name|'def'
name|'compute_node_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'service'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'stats'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|compute_node_search_by_hypervisor
name|'def'
name|'compute_node_search_by_hypervisor'
op|'('
name|'context'
op|','
name|'hypervisor_match'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'field'
op|'='
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'hypervisor_hostname'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'service'"
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'field'
op|'.'
name|'like'
op|'('
string|"'%%%s%%'"
op|'%'
name|'hypervisor_match'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_prep_stats_dict
dedent|''
name|'def'
name|'_prep_stats_dict'
op|'('
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make list of ComputeNodeStats."""'
newline|'\n'
name|'stats'
op|'='
op|'['
op|']'
newline|'\n'
name|'d'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'stats'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'d'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stat'
op|'='
name|'models'
op|'.'
name|'ComputeNodeStat'
op|'('
op|')'
newline|'\n'
name|'stat'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'stat'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'stats'
op|'.'
name|'append'
op|'('
name|'stat'
op|')'
newline|'\n'
dedent|''
name|'values'
op|'['
string|"'stats'"
op|']'
op|'='
name|'stats'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|compute_node_create
name|'def'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Creates a new ComputeNode and populates the capacity fields\n    with the most recent data."""'
newline|'\n'
name|'_prep_stats_dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_node_ref'
op|'='
name|'models'
op|'.'
name|'ComputeNode'
op|'('
op|')'
newline|'\n'
name|'compute_node_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'compute_node_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'compute_node_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_update_stats
dedent|''
name|'def'
name|'_update_stats'
op|'('
name|'context'
op|','
name|'new_stats'
op|','
name|'compute_id'
op|','
name|'session'
op|','
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'existing'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNodeStat'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_node_id'
op|'='
name|'compute_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'statmap'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'stat'
name|'in'
name|'existing'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
name|'stat'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'statmap'
op|'['
name|'key'
op|']'
op|'='
name|'stat'
newline|'\n'
nl|'\n'
dedent|''
name|'stats'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'new_stats'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old_stat'
op|'='
name|'statmap'
op|'.'
name|'pop'
op|'('
name|'k'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'old_stat'
op|':'
newline|'\n'
comment|'# update existing value:'
nl|'\n'
indent|'            '
name|'old_stat'
op|'.'
name|'update'
op|'('
op|'{'
string|"'value'"
op|':'
name|'v'
op|'}'
op|')'
newline|'\n'
name|'stats'
op|'.'
name|'append'
op|'('
name|'old_stat'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# add new stat:'
nl|'\n'
indent|'            '
name|'stat'
op|'='
name|'models'
op|'.'
name|'ComputeNodeStat'
op|'('
op|')'
newline|'\n'
name|'stat'
op|'['
string|"'compute_node_id'"
op|']'
op|'='
name|'compute_id'
newline|'\n'
name|'stat'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'stat'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'stats'
op|'.'
name|'append'
op|'('
name|'stat'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'prune_stats'
op|':'
newline|'\n'
comment|'# prune un-touched old stats:'
nl|'\n'
indent|'        '
name|'for'
name|'stat'
name|'in'
name|'statmap'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'add'
op|'('
name|'stat'
op|')'
newline|'\n'
name|'stat'
op|'.'
name|'soft_delete'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
comment|'# add new and updated stats'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'stat'
name|'in'
name|'stats'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'.'
name|'add'
op|'('
name|'stat'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|compute_node_update
name|'def'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'values'
op|','
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Updates the ComputeNode record with the most recent data."""'
newline|'\n'
name|'stats'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'stats'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_update_stats'
op|'('
name|'context'
op|','
name|'stats'
op|','
name|'compute_id'
op|','
name|'session'
op|','
name|'prune_stats'
op|')'
newline|'\n'
name|'compute_ref'
op|'='
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
comment|"# Always update this, even if there's going to be no other"
nl|'\n'
comment|'# changes in data.  This ensures that we invalidate the'
nl|'\n'
comment|'# scheduler cache of compute node data in case of races.'
nl|'\n'
name|'if'
string|"'updated_at'"
name|'not'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'updated_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
dedent|''
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|')'
newline|'\n'
name|'compute_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'compute_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|compute_node_delete
name|'def'
name|'compute_node_delete'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete a ComputeNode record."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'compute_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_statistics
dedent|''
dedent|''
name|'def'
name|'compute_node_statistics'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute statistics over all compute nodes."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'func'
op|'.'
name|'count'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'id'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'vcpus'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'memory_mb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'local_gb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'vcpus_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'memory_mb_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'local_gb_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'free_ram_mb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'free_disk_gb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'current_workload'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'running_vms'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'disk_available_least'
op|')'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'ComputeNode'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Build a dict of the info--making no assumptions about result'
nl|'\n'
name|'fields'
op|'='
op|'('
string|"'count'"
op|','
string|"'vcpus'"
op|','
string|"'memory_mb'"
op|','
string|"'local_gb'"
op|','
string|"'vcpus_used'"
op|','
nl|'\n'
string|"'memory_mb_used'"
op|','
string|"'local_gb_used'"
op|','
string|"'free_ram_mb'"
op|','
string|"'free_disk_gb'"
op|','
nl|'\n'
string|"'current_workload'"
op|','
string|"'running_vms'"
op|','
string|"'disk_available_least'"
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
op|'('
name|'field'
op|','
name|'int'
op|'('
name|'result'
op|'['
name|'idx'
op|']'
name|'or'
number|'0'
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
op|','
name|'field'
name|'in'
name|'enumerate'
op|'('
name|'fields'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|certificate_get
name|'def'
name|'certificate_get'
op|'('
name|'context'
op|','
name|'certificate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'certificate_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CertificateNotFound'
op|'('
name|'certificate_id'
op|'='
name|'certificate_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|certificate_create
name|'def'
name|'certificate_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'certificate_ref'
op|'='
name|'models'
op|'.'
name|'Certificate'
op|'('
op|')'
newline|'\n'
name|'for'
op|'('
name|'key'
op|','
name|'value'
op|')'
name|'in'
name|'values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'certificate_ref'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'certificate_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'certificate_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|certificate_get_all_by_project
name|'def'
name|'certificate_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|certificate_get_all_by_user
name|'def'
name|'certificate_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|certificate_get_all_by_user_and_project
name|'def'
name|'certificate_get_all_by_user_and_project'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get
name|'def'
name|'floating_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFound'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_pools
name|'def'
name|'floating_ip_get_pools'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pools'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'pool'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'distinct'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pools'
op|'.'
name|'append'
op|'('
op|'{'
string|"'name'"
op|':'
name|'result'
op|'['
number|'0'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pools'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_allocate_address
name|'def'
name|'floating_ip_allocate_address'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'pool'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'pool'
op|'='
name|'pool'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
name|'if'
name|'not'
name|'floating_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|'('
op|')'
newline|'\n'
dedent|''
name|'floating_ip_ref'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'project_id'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'floating_ip_ref'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_bulk_create
name|'def'
name|'floating_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ip'
name|'in'
name|'ips'
op|':'
newline|'\n'
indent|'            '
name|'model'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|'('
op|')'
newline|'\n'
name|'model'
op|'.'
name|'update'
op|'('
name|'ip'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): To get existing address we have to do each'
nl|'\n'
comment|'#                  time session.flush()..'
nl|'\n'
indent|'                '
name|'session'
op|'.'
name|'add'
op|'('
name|'model'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ip_range_splitter
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_ip_range_splitter'
op|'('
name|'ips'
op|','
name|'block_size'
op|'='
number|'256'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Yields blocks of IPs no more than block_size elements long."""'
newline|'\n'
name|'out'
op|'='
op|'['
op|']'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'ip'
name|'in'
name|'ips'
op|':'
newline|'\n'
indent|'        '
name|'out'
op|'.'
name|'append'
op|'('
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'count'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
name|'if'
name|'count'
op|'>'
name|'block_size'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'out'
newline|'\n'
name|'out'
op|'='
op|'['
op|']'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'out'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'out'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_bulk_destroy
name|'def'
name|'floating_ip_bulk_destroy'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ip_block'
name|'in'
name|'_ip_range_splitter'
op|'('
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'.'
name|'in_'
op|'('
name|'ip_block'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
string|"'fetch'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_create
name|'def'
name|'floating_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_ref'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|'('
op|')'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'values'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_count_by_project
name|'def'
name|'floating_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|'# TODO(tr3buchet): why leave auto_assigned floating IPs out?'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'auto_assigned'
op|'='
name|'False'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'_retry_on_deadlock'
newline|'\n'
DECL|function|floating_ip_fixed_ip_associate
name|'def'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'context'
op|','
name|'floating_address'
op|','
nl|'\n'
name|'fixed_address'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'='
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
nl|'\n'
name|'floating_address'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'fixed_address'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'floating_ip_ref'
op|'.'
name|'fixed_ip_id'
op|'=='
name|'fixed_ip_ref'
op|'['
string|'"id"'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'floating_ip_ref'
op|'.'
name|'fixed_ip_id'
op|'='
name|'fixed_ip_ref'
op|'['
string|'"id"'
op|']'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_deallocate
name|'def'
name|'floating_ip_deallocate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'project_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_destroy
name|'def'
name|'floating_ip_destroy'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_disassociate
name|'def'
name|'floating_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'floating_ip_ref'
op|'['
string|"'fixed_ip_id'"
op|']'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'fixed_ip_id'
op|'='
name|'None'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'host'
op|'='
name|'None'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_set_auto_assigned
name|'def'
name|'floating_ip_set_auto_assigned'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'auto_assigned'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_floating_ip_get_all
dedent|''
name|'def'
name|'_floating_ip_get_all'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|floating_ip_get_all
name|'def'
name|'floating_ip_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_refs'
op|'='
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_refs'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoFloatingIpsDefined'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|floating_ip_get_all_by_host
name|'def'
name|'floating_ip_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_refs'
op|'='
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_refs'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForHost'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_all_by_project
name|'def'
name|'floating_ip_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|'# TODO(tr3buchet): why do we not want auto_assigned floating IPs here?'
nl|'\n'
name|'return'
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'auto_assigned'
op|'='
name|'False'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_address
name|'def'
name|'floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_floating_ip_get_by_address
name|'def'
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# if address string is empty explicitly set it to None'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'address'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
comment|'# If the floating IP has a project ID set, check to make sure'
nl|'\n'
comment|'# the non-admin user has access.'
nl|'\n'
dedent|''
name|'if'
name|'result'
op|'.'
name|'project_id'
name|'and'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'result'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_fixed_address
name|'def'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'context'
op|','
name|'fixed_address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'outerjoin'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'address'
op|'=='
name|'fixed_address'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_fixed_ip_id
name|'def'
name|'floating_ip_get_by_fixed_ip_id'
op|'('
name|'context'
op|','
name|'fixed_ip_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'fixed_ip_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_update
name|'def'
name|'floating_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_ip_ref'
op|'='
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|')'
newline|'\n'
name|'float_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'float_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'values'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_dnsdomain_get
name|'def'
name|'_dnsdomain_get'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'domain'
op|'='
name|'fqdomain'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|dnsdomain_get
name|'def'
name|'dnsdomain_get'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_dnsdomain_get'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_dnsdomain_get_or_create
name|'def'
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'domain_ref'
op|'='
name|'_dnsdomain_get'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'domain_ref'
op|':'
newline|'\n'
indent|'        '
name|'dns_ref'
op|'='
name|'models'
op|'.'
name|'DNSDomain'
op|'('
op|')'
newline|'\n'
name|'dns_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'domain'"
op|':'
name|'fqdomain'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'dns_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'domain_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|dnsdomain_register_for_zone
name|'def'
name|'dnsdomain_register_for_zone'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'zone'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domain_ref'
op|'='
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'domain_ref'
op|'.'
name|'scope'
op|'='
string|"'private'"
newline|'\n'
name|'domain_ref'
op|'.'
name|'availability_zone'
op|'='
name|'zone'
newline|'\n'
name|'domain_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|dnsdomain_register_for_project
name|'def'
name|'dnsdomain_register_for_project'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domain_ref'
op|'='
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'domain_ref'
op|'.'
name|'scope'
op|'='
string|"'public'"
newline|'\n'
name|'domain_ref'
op|'.'
name|'project_id'
op|'='
name|'project'
newline|'\n'
name|'domain_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|dnsdomain_unregister
name|'def'
name|'dnsdomain_unregister'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'domain'
op|'='
name|'fqdomain'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|dnsdomain_list
name|'def'
name|'dnsdomain_list'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
name|'return'
op|'['
name|'row'
op|'.'
name|'domain'
name|'for'
name|'row'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_associate
name|'def'
name|'fixed_ip_associate'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'reserved'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Keyword arguments:\n    reserved -- should be a boolean value(True or False), exact value will be\n    used to filter on the fixed ip address\n    """'
newline|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_or_none'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'network_or_none'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'reserved'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
name|'if'
name|'fixed_ip_ref'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetwork'
op|'('
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'network_uuid'
op|'='
name|'network_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'fixed_ip_ref'
op|'.'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|'('
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'fixed_ip_ref'
op|'.'
name|'network_id'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip_ref'
op|'.'
name|'network_id'
op|'='
name|'network_id'
newline|'\n'
dedent|''
name|'fixed_ip_ref'
op|'.'
name|'instance_uuid'
op|'='
name|'instance_uuid'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'fixed_ip_ref'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_associate_pool
name|'def'
name|'fixed_ip_associate_pool'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'instance_uuid'
name|'and'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_or_none'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'network_or_none'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'None'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
name|'if'
name|'not'
name|'fixed_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreFixedIps'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'fixed_ip_ref'
op|'['
string|"'network_id'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip_ref'
op|'['
string|"'network'"
op|']'
op|'='
name|'network_id'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip_ref'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip_ref'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
dedent|''
name|'session'
op|'.'
name|'add'
op|'('
name|'fixed_ip_ref'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_create
name|'def'
name|'fixed_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fixed_ip_ref'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'fixed_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_bulk_create
name|'def'
name|'fixed_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ip'
name|'in'
name|'ips'
op|':'
newline|'\n'
indent|'            '
name|'model'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'model'
op|'.'
name|'update'
op|'('
name|'ip'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'model'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_disassociate
name|'def'
name|'fixed_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip_ref'
op|'='
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
nl|'\n'
name|'address'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_disassociate_all_by_timeout
name|'def'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'time'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): only update fixed ips that "belong" to this'
nl|'\n'
comment|'#             host; i.e. the network host or the instance'
nl|'\n'
comment|'#             host matches. Two queries necessary because'
nl|'\n'
comment|"#             join with update doesn't work."
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_filter'
op|'='
name|'or_'
op|'('
name|'and_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'multi_host'
op|'=='
name|'True'
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'allocated'
op|'=='
name|'False'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'updated_at'
op|'<'
name|'time'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Network'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'id'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|')'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'host_filter'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'fixed_ip_ids'
op|'='
op|'['
name|'fip'
op|'['
number|'0'
op|']'
name|'for'
name|'fip'
name|'in'
name|'result'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip_ids'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'fixed_ip_ids'
op|')'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'synchronize_session'
op|'='
string|"'fetch'"
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get
name|'def'
name|'fixed_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'get_network'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
name|'if'
name|'get_network'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFound'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
comment|"# FIXME(sirp): shouldn't we just use project_only here to restrict the"
nl|'\n'
comment|'# results?'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'instance_get_by_uuid'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_get_all
name|'def'
name|'fixed_ip_get_all'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoFixedIpsDefined'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_address
name|'def'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(sirp): shouldn't we just use project_only here to restrict the"
nl|'\n'
comment|'# results?'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'session'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_get_by_address_detailed
name|'def'
name|'fixed_ip_get_by_address_detailed'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    :returns: a tuple of (models.FixedIp, models.Network, models.Instance)\n    """'
newline|'\n'
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'models'
op|'.'
name|'Network'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'models'
op|'.'
name|'Network'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|')'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_floating_address
name|'def'
name|'fixed_ip_get_by_floating_address'
op|'('
name|'context'
op|','
name|'floating_address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'outerjoin'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'=='
name|'floating_address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(tr3buchet) please don't invent an exception here, empty list is fine"
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_instance
name|'def'
name|'fixed_ip_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForInstance'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|fixed_ip_get_by_host
name|'def'
name|'fixed_ip_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuids'
op|'='
name|'_instance_get_all_uuids_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_network_host
name|'def'
name|'fixed_ip_get_by_network_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetworkHost'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ips_by_virtual_interface
name|'def'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'virtual_interface_id'
op|'='
name|'vif_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_update
name|'def'
name|'fixed_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip_ref'
op|'='
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
nl|'\n'
name|'address'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_count_by_project
name|'def'
name|'fixed_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'project_id'
op|'=='
name|'project_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_create
name|'def'
name|'virtual_interface_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new virtual interface record in the database.\n\n    :param values: = dict containing column values\n    """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'vif_ref'
op|'='
name|'models'
op|'.'
name|'VirtualInterface'
op|'('
op|')'
newline|'\n'
name|'vif_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'vif_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_virtual_interface_query
name|'def'
name|'_virtual_interface_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VirtualInterface'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get
name|'def'
name|'virtual_interface_get'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param vif_id: = id of the virtual interface\n    """'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'vif_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_address
name|'def'
name|'virtual_interface_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param address: = the address of the interface you\'re looking to get\n    """'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_uuid
name|'def'
name|'virtual_interface_get_by_uuid'
op|'('
name|'context'
op|','
name|'vif_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param vif_uuid: the uuid of the interface you\'re looking to get\n    """'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'vif_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'require_instance_exists_using_uuid'
newline|'\n'
DECL|function|virtual_interface_get_by_instance
name|'def'
name|'virtual_interface_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets all virtual interfaces for instance.\n\n    :param instance_uuid: = uuid of the instance to retrieve vifs for\n    """'
newline|'\n'
name|'vif_refs'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_instance_and_network
name|'def'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets virtual interface for instance that\'s associated with network."""'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_delete_by_instance
name|'def'
name|'virtual_interface_delete_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete virtual interface records that are associated\n    with the instance given by instance_id.\n\n    :param instance_uuid: = uuid of instance\n    """'
newline|'\n'
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_all
name|'def'
name|'virtual_interface_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all vifs."""'
newline|'\n'
name|'vif_refs'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_refs'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_metadata_refs
dedent|''
name|'def'
name|'_metadata_refs'
op|'('
name|'metadata_dict'
op|','
name|'meta_class'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata_refs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'metadata_dict'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'metadata_dict'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'metadata_ref'
op|'='
name|'meta_class'
op|'('
op|')'
newline|'\n'
name|'metadata_ref'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'metadata_ref'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'metadata_refs'
op|'.'
name|'append'
op|'('
name|'metadata_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'metadata_refs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_validate_unique_server_name
dedent|''
name|'def'
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'lowername'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'base_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'False'
op|')'
op|'.'
name|'filter'
op|'('
name|'func'
op|'.'
name|'lower'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'hostname'
op|')'
op|'=='
name|'lowername'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|'=='
string|"'project'"
op|':'
newline|'\n'
indent|'        '
name|'instance_with_same_name'
op|'='
name|'base_query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|'=='
string|"'global'"
op|':'
newline|'\n'
indent|'        '
name|'instance_with_same_name'
op|'='
name|'base_query'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Unknown osapi_compute_unique_server_name_scope value: %s'"
nl|'\n'
string|'\' Flag must be empty, "global" or\''
nl|'\n'
string|'\' "project"\''
op|')'
op|'%'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance_with_same_name'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceExists'
op|'('
name|'name'
op|'='
name|'lowername'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_create
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new Instance record in the database.\n\n    context - request context object\n    values - dict containing column values.\n    """'
newline|'\n'
name|'values'
op|'='
name|'values'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_metadata_refs'
op|'('
nl|'\n'
name|'values'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|')'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'_metadata_refs'
op|'('
nl|'\n'
name|'values'
op|'.'
name|'get'
op|'('
string|"'system_metadata'"
op|')'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'models'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'values'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'instance_ref'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'models'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'info_cache'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'info_cache'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'info_cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'['
string|"'info_cache'"
op|']'
op|'.'
name|'update'
op|'('
name|'info_cache'
op|')'
newline|'\n'
dedent|''
name|'security_groups'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'security_groups'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_sec_group_models
name|'def'
name|'_get_sec_group_models'
op|'('
name|'session'
op|','
name|'security_groups'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'models'
op|'='
op|'['
op|']'
newline|'\n'
name|'default_group'
op|'='
name|'security_group_ensure_default'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
string|"'default'"
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'models'
op|'.'
name|'append'
op|'('
name|'default_group'
op|')'
newline|'\n'
comment|"# Generate a new list, so we don't modify the original"
nl|'\n'
name|'security_groups'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'security_groups'
name|'if'
name|'x'
op|'!='
string|"'default'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'models'
op|'.'
name|'extend'
op|'('
name|'_security_group_get_by_names'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|','
name|'context'
op|'.'
name|'project_id'
op|','
name|'security_groups'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'models'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'hostname'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'values'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'instance_ref'
op|'.'
name|'security_groups'
op|'='
name|'_get_sec_group_models'
op|'('
name|'session'
op|','
nl|'\n'
name|'security_groups'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
comment|'# create the instance uuid to ec2_id mapping entry for instance'
nl|'\n'
dedent|''
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_data_get_for_project
name|'def'
name|'instance_data_get_for_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'func'
op|'.'
name|'count'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'id'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vcpus'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'memory_mb'
op|')'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): convert None to 0'
nl|'\n'
name|'return'
op|'('
name|'result'
op|'['
number|'0'
op|']'
name|'or'
number|'0'
op|','
name|'result'
op|'['
number|'1'
op|']'
name|'or'
number|'0'
op|','
name|'result'
op|'['
number|'2'
op|']'
name|'or'
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_destroy
name|'def'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'constraint'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_ref'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Instance'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'constraint'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'constraint'
op|'.'
name|'apply'
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
name|'query'
op|')'
newline|'\n'
dedent|''
name|'count'
op|'='
name|'query'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|'('
op|')'
newline|'\n'
dedent|''
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'InstanceMetadata'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_by_uuid
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_instance_get_by_uuid
name|'def'
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_build_instance_get'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get
name|'def'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'_build_instance_get'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'except'
name|'DataError'
op|':'
newline|'\n'
comment|'# NOTE(sdague): catch all in case the db engine chokes on the'
nl|'\n'
comment|"# id because it's too long of an int to store."
nl|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid instance id %s in request"'
op|')'
op|'%'
name|'instance_id'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidID'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_build_instance_get
name|'def'
name|'_build_instance_get'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'security_groups.rules'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'info_cache'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
comment|'#NOTE(alaski) Stop lazy loading of columns not needed.'
nl|'\n'
dedent|''
name|'for'
name|'col'
name|'in'
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'col'
name|'not'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'noload'
op|'('
name|'col'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instances_fill_metadata
dedent|''
name|'def'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'instances'
op|','
name|'manual_joins'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Selectively fill instances with manually-joined metadata. Note that\n    instance will be converted to a dict.\n\n    :param context: security context\n    :param instances: list of instances to fill\n    :param manual_joins: list of tables to manually join (can be any\n                         combination of \'metadata\' and \'system_metadata\' or\n                         None to take the default of both)\n    """'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'instances'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'manual_joins'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'if'
string|"'metadata'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'row'
name|'in'
name|'_instance_metadata_get_multi'
op|'('
name|'context'
op|','
name|'uuids'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'sys_meta'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'if'
string|"'system_metadata'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'row'
name|'in'
name|'_instance_system_metadata_get_multi'
op|'('
name|'context'
op|','
name|'uuids'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sys_meta'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'filled_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'sys_meta'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'meta'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'filled_instances'
op|'.'
name|'append'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'filled_instances'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_manual_join_columns
dedent|''
name|'def'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'manual_joins'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'column'
name|'in'
op|'('
string|"'metadata'"
op|','
string|"'system_metadata'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'            '
name|'columns_to_join'
op|'.'
name|'remove'
op|'('
name|'column'
op|')'
newline|'\n'
name|'manual_joins'
op|'.'
name|'append'
op|'('
name|'column'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'manual_joins'
op|','
name|'columns_to_join'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_all
name|'def'
name|'instance_get_all'
op|'('
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|','
name|'columns_to_join'
op|'='
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
newline|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|"# If we're not admin context, add appropriate filter.."
nl|'\n'
indent|'        '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'instances'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'instances'
op|','
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_all_by_filters
name|'def'
name|'instance_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|','
name|'sort_dir'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return instances that match all filters.  Deleted instances\n    will be returned by default, unless there\'s a filter that says\n    otherwise"""'
newline|'\n'
nl|'\n'
name|'sort_fn'
op|'='
op|'{'
string|"'desc'"
op|':'
name|'desc'
op|','
string|"'asc'"
op|':'
name|'asc'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|','
name|'columns_to_join'
op|'='
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query_prefix'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'order_by'
op|'('
name|'sort_fn'
op|'['
name|'sort_dir'
op|']'
op|'('
nl|'\n'
name|'getattr'
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
name|'sort_key'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Make a copy of the filters dictionary to use going forward, as we'll"
nl|'\n'
comment|"# be modifying it and we shouldn't affect the caller's use of it."
nl|'\n'
name|'filters'
op|'='
name|'filters'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'changes-since'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'changes_since'
op|'='
name|'timeutils'
op|'.'
name|'normalize_time'
op|'('
name|'filters'
op|'['
string|"'changes-since'"
op|']'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|'>'
name|'changes_since'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'deleted'"
name|'in'
name|'filters'
op|':'
newline|'\n'
comment|'# Instances can be soft or hard deleted and the query needs to'
nl|'\n'
comment|'# include or exclude both'
nl|'\n'
indent|'        '
name|'if'
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'deleted'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'deleted'
op|'=='
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'deleted'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter_by'
op|'('
name|'deleted'
op|'='
number|'0'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vm_state'
op|'!='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|"# If we're not admin context, add appropriate filter.."
nl|'\n'
indent|'        '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'filters'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'filters'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
nl|'\n'
comment|'# Filters for exact matches that we can do along with the SQL query...'
nl|'\n'
comment|"# For other filters that don't match this, we will do regexp matching"
nl|'\n'
dedent|''
dedent|''
name|'exact_match_filter_names'
op|'='
op|'['
string|"'project_id'"
op|','
string|"'user_id'"
op|','
string|"'image_ref'"
op|','
nl|'\n'
string|"'vm_state'"
op|','
string|"'instance_type_id'"
op|','
string|"'uuid'"
op|','
nl|'\n'
string|"'metadata'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Filter the query'
nl|'\n'
name|'query_prefix'
op|'='
name|'exact_filter'
op|'('
name|'query_prefix'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'filters'
op|','
name|'exact_match_filter_names'
op|')'
newline|'\n'
nl|'\n'
name|'query_prefix'
op|'='
name|'regex_filter'
op|'('
name|'query_prefix'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'filters'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'tag_filter'
op|'('
name|'query_prefix'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'filters'
op|')'
newline|'\n'
nl|'\n'
comment|'# paginate query'
nl|'\n'
name|'if'
name|'marker'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'marker'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'MarkerNotFound'
op|'('
name|'marker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'query_prefix'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'paginate_query'
op|'('
name|'query_prefix'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|','
name|'limit'
op|','
nl|'\n'
op|'['
name|'sort_key'
op|','
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'sort_dir'
op|'='
name|'sort_dir'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'query_prefix'
op|'.'
name|'all'
op|'('
op|')'
op|','
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|tag_filter
dedent|''
name|'def'
name|'tag_filter'
op|'('
name|'query'
op|','
name|'model'
op|','
name|'tag_model'
op|','
name|'tag_model_col'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies tag filtering to a query.\n\n    Returns the updated query.  This method alters filters to remove\n    keys that are tags.  This filters on resources by tags - this\n    method assumes that the caller will take care of access control\n\n    :param query: query to apply filters to\n    :param model: model object the query applies to\n    :param filters: dictionary of filters\n    """'
newline|'\n'
nl|'\n'
name|'if'
name|'filters'
op|'.'
name|'get'
op|'('
string|"'filter'"
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'query'
newline|'\n'
nl|'\n'
dedent|''
name|'or_query'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|to_list
name|'def'
name|'to_list'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'val'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'val'
op|','
op|'('
name|'tuple'
op|','
name|'list'
op|','
name|'set'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
op|'('
name|'val'
op|','
op|')'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'filter_block'
name|'in'
name|'filters'
op|'['
string|"'filter'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'filter_block'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'filter_name'
op|'='
name|'filter_block'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'filter_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'filter_name'
op|'.'
name|'startswith'
op|'('
string|"'tag-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'filter_block'
op|'.'
name|'get'
op|'('
string|"'value'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'val'
op|'='
name|'to_list'
op|'('
name|'val'
op|')'
newline|'\n'
name|'filter_name'
op|'='
name|'filter_name'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'filter_name'
name|'not'
name|'in'
op|'['
string|"'key'"
op|','
string|"'value'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
string|'"Invalid field name: %s"'
op|'%'
name|'filter_name'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'err'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'filter_name'
op|'=='
string|"'key'"
op|':'
newline|'\n'
indent|'                '
name|'subq'
op|'='
name|'tag_model'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'subq'
op|'='
name|'tag_model'
op|'.'
name|'value'
op|'.'
name|'in_'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'or_query'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'or_query'
op|'='
name|'subq'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'or_query'
op|'='
name|'or_'
op|'('
name|'or_query'
op|','
name|'subq'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
name|'filter_name'
op|'.'
name|'startswith'
op|'('
string|"'tag:'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'filter_block'
op|'.'
name|'get'
op|'('
string|"'value'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'val'
op|'='
name|'to_list'
op|'('
name|'val'
op|')'
newline|'\n'
name|'filter_name'
op|'='
name|'filter_name'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'subq'
op|'='
name|'query'
op|'.'
name|'session'
op|'.'
name|'query'
op|'('
name|'tag_model_col'
op|')'
newline|'\n'
name|'subq'
op|'='
name|'subq'
op|'.'
name|'filter'
op|'('
name|'tag_model'
op|'.'
name|'key'
op|'=='
name|'filter_name'
op|')'
newline|'\n'
name|'subq'
op|'='
name|'subq'
op|'.'
name|'filter'
op|'('
name|'tag_model'
op|'.'
name|'value'
op|'.'
name|'in_'
op|'('
name|'val'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'model'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'subq'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'or_query'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'col_q'
op|'='
name|'query'
op|'.'
name|'session'
op|'.'
name|'query'
op|'('
name|'tag_model_col'
op|')'
newline|'\n'
name|'col_q'
op|'='
name|'col_q'
op|'.'
name|'filter'
op|'('
name|'or_query'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'model'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'col_q'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|regex_filter
dedent|''
name|'def'
name|'regex_filter'
op|'('
name|'query'
op|','
name|'model'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies regular expression filtering to a query.\n\n    Returns the updated query.\n\n    :param query: query to apply filters to\n    :param model: model object the query applies to\n    :param filters: dictionary of filters with regex values\n    """'
newline|'\n'
nl|'\n'
name|'regexp_op_map'
op|'='
op|'{'
nl|'\n'
string|"'postgresql'"
op|':'
string|"'~'"
op|','
nl|'\n'
string|"'mysql'"
op|':'
string|"'REGEXP'"
op|','
nl|'\n'
string|"'oracle'"
op|':'
string|"'REGEXP_LIKE'"
op|','
nl|'\n'
string|"'sqlite'"
op|':'
string|"'REGEXP'"
nl|'\n'
op|'}'
newline|'\n'
name|'db_string'
op|'='
name|'CONF'
op|'.'
name|'sql_connection'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"'+'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db_regexp_op'
op|'='
name|'regexp_op_map'
op|'.'
name|'get'
op|'('
name|'db_string'
op|','
string|"'LIKE'"
op|')'
newline|'\n'
name|'for'
name|'filter_name'
name|'in'
name|'filters'
op|'.'
name|'iterkeys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'filter_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'if'
string|"'property'"
op|'=='
name|'type'
op|'('
name|'column_attr'
op|')'
op|'.'
name|'__name__'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'op'
op|'('
name|'db_regexp_op'
op|')'
op|'('
nl|'\n'
name|'str'
op|'('
name|'filters'
op|'['
name|'filter_name'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_active_by_window_joined
name|'def'
name|'instance_get_active_by_window_joined'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return instances and joins that were active during window."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'info_cache'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'security_groups'"
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'terminated_at'
op|'=='
name|'None'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'terminated_at'
op|'>'
name|'begin'
op|')'
op|')'
newline|'\n'
name|'if'
name|'end'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'launched_at'
op|'<'
name|'end'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project_id'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_instance_get_all_query
name|'def'
name|'_instance_get_all_query'
op|'('
name|'context'
op|','
name|'project_only'
op|'='
name|'False'
op|','
name|'joins'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'joins'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'joins'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
name|'for'
name|'join'
name|'in'
name|'joins'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'join'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_get_all_by_host
name|'def'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
nl|'\n'
name|'manual_joins'
op|'='
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_instance_get_all_uuids_by_host
name|'def'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a list of the instance uuids on a given host.\n\n    Returns a list of UUIDs, not Instance model objects. This internal version\n    allows you to specify a session object as a kwarg.\n    """'
newline|'\n'
name|'uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'tuple'
name|'in'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuids'
op|'.'
name|'append'
op|'('
name|'tuple'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'uuids'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_get_all_by_host_and_node
name|'def'
name|'instance_get_all_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|','
name|'joins'
op|'='
op|'['
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'node'
op|'='
name|'node'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
name|'manual_joins'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_get_all_by_host_and_not_type
name|'def'
name|'instance_get_all_by_host_and_not_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'type_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'instance_type_id'
op|'!='
name|'type_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# NOTE(jkoelker) This is only being left here for compat with floating'
nl|'\n'
comment|"#                ips. Currently the network_api doesn't return floaters"
nl|'\n'
comment|'#                in network_info. Once it starts return the model. This'
nl|'\n'
comment|'#                function and its call in compute/manager.py on 1829 can'
nl|'\n'
comment|'#                go away'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_floating_address
name|'def'
name|'instance_get_floating_address'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'instance'
op|'='
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'fixed_ips'
op|'='
name|'fixed_ip_get_by_instance'
op|'('
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'fixed_ips'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'# NOTE(tr3buchet): this only gets the first fixed_ip'
nl|'\n'
comment|"# won't find floating ips associated with other fixed_ips"
nl|'\n'
dedent|''
name|'floating_ips'
op|'='
name|'floating_ip_get_by_fixed_address'
op|'('
name|'context'
op|','
nl|'\n'
name|'fixed_ips'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ips'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
comment|'# NOTE(vish): this just returns the first floating ip'
nl|'\n'
dedent|''
name|'return'
name|'floating_ips'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_floating_address_get_all
name|'def'
name|'instance_floating_address_get_all'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fixed_ip_ids'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip_ids'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForInstance'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fixed_ip_ids'
op|'='
op|'['
name|'fixed_ip_id'
op|'.'
name|'id'
name|'for'
name|'fixed_ip_id'
name|'in'
name|'fixed_ip_ids'
op|']'
newline|'\n'
nl|'\n'
name|'floating_ips'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'.'
name|'in_'
op|'('
name|'fixed_ip_ids'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
name|'floating_ip'
op|'.'
name|'address'
name|'for'
name|'floating_ip'
name|'in'
name|'floating_ips'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_get_all_hung_in_rebooting
name|'def'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'context'
op|','
name|'reboot_window'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reboot_window'
op|'='
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'reboot_window'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): this is only used in the _poll_rebooting_instances()'
nl|'\n'
comment|'# call in compute/manager, so we can avoid the metadata lookups'
nl|'\n'
comment|'# explicitly'
nl|'\n'
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|'<='
name|'reboot_window'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
nl|'\n'
name|'manual_joins'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_update
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'instance_ref'
op|'='
name|'_instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_update_and_get_original
name|'def'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on an instance and update it. Return\n    a shallow copy of the original instance reference, as well as the\n    updated one.\n\n    :param context: = request context object\n    :param instance_uuid: = instance uuid\n    :param values: = dict containing column values\n\n    If "expected_task_state" exists in values, the update can only happen\n    when the task state before update matches expected_task_state. Otherwise\n    a UnexpectedTaskStateError is thrown.\n\n    :returns: a tuple of the form (old_instance_ref, new_instance_ref)\n\n    Raises NotFound if instance does not exist.\n    """'
newline|'\n'
name|'return'
name|'_instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'copy_old_instance'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|"# NOTE(danms): This updates the instance's metadata list in-place and in"
nl|'\n'
comment|'# the database to avoid stale data and refresh issues. It assumes the'
nl|'\n'
comment|'# delete=True behavior of instance_metadata_update(...)'
nl|'\n'
DECL|function|_instance_metadata_update_in_place
dedent|''
name|'def'
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'metadata_type'
op|','
name|'model'
op|','
nl|'\n'
name|'metadata'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'to_delete'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'keyvalue'
name|'in'
name|'instance'
op|'['
name|'metadata_type'
op|']'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
name|'keyvalue'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'if'
name|'key'
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'keyvalue'
op|'['
string|"'value'"
op|']'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
name|'key'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'key'
name|'not'
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'to_delete'
op|'.'
name|'append'
op|'('
name|'keyvalue'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'condemned'
name|'in'
name|'to_delete'
op|':'
newline|'\n'
indent|'        '
name|'condemned'
op|'.'
name|'soft_delete'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'newitem'
op|'='
name|'model'
op|'('
op|')'
newline|'\n'
name|'newitem'
op|'.'
name|'update'
op|'('
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
string|"'value'"
op|':'
name|'value'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'newitem'
op|')'
newline|'\n'
name|'instance'
op|'['
name|'metadata_type'
op|']'
op|'.'
name|'append'
op|'('
name|'newitem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_update
dedent|''
dedent|''
name|'def'
name|'_instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
name|'copy_old_instance'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
string|'"expected_task_state"'
name|'in'
name|'values'
op|':'
newline|'\n'
comment|'# it is not a db column so always pop out'
nl|'\n'
indent|'            '
name|'expected'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|'"expected_task_state"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'expected'
op|','
op|'('
name|'tuple'
op|','
name|'list'
op|','
name|'set'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'='
op|'('
name|'expected'
op|','
op|')'
newline|'\n'
dedent|''
name|'actual_state'
op|'='
name|'instance_ref'
op|'['
string|'"task_state"'
op|']'
newline|'\n'
name|'if'
name|'actual_state'
name|'not'
name|'in'
name|'expected'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
op|'('
name|'actual'
op|'='
name|'actual_state'
op|','
nl|'\n'
name|'expected'
op|'='
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance_hostname'
op|'='
name|'instance_ref'
op|'['
string|"'hostname'"
op|']'
name|'or'
string|"''"
newline|'\n'
name|'if'
op|'('
string|'"hostname"'
name|'in'
name|'values'
name|'and'
nl|'\n'
name|'values'
op|'['
string|'"hostname"'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'!='
name|'instance_hostname'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|','
nl|'\n'
name|'values'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'copy_old_instance'
op|':'
newline|'\n'
indent|'            '
name|'old_instance_ref'
op|'='
name|'copy'
op|'.'
name|'copy'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'old_instance_ref'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'metadata'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'if'
name|'metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
string|"'metadata'"
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'metadata'"
op|')'
op|','
nl|'\n'
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'system_metadata'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'if'
name|'system_metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
string|"'system_metadata'"
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'system_metadata'"
op|')'
op|','
nl|'\n'
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'old_instance_ref'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_add_security_group
dedent|''
name|'def'
name|'instance_add_security_group'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate the given security group with the given instance."""'
newline|'\n'
name|'sec_group_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|'('
op|')'
newline|'\n'
name|'sec_group_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'security_group_id'"
op|':'
name|'security_group_id'
op|'}'
op|')'
newline|'\n'
name|'sec_group_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_remove_security_group
name|'def'
name|'instance_remove_security_group'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate the given security group from the given instance."""'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_info_cache_get
name|'def'
name|'instance_info_cache_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets an instance info cache from the table.\n\n    :param instance_uuid: = uuid of the info cache\'s instance\n    :param session: = optional session object\n    """'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_info_cache_update
name|'def'
name|'instance_info_cache_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update an instance info cache record in the table.\n\n    :param instance_uuid: = uuid of info cache\'s instance\n    :param values: = dict containing column values to update\n    :param session: = optional session object\n    """'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info_cache'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'info_cache'
name|'and'
name|'info_cache'
op|'['
string|"'deleted'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceInfoCacheNotFound'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'info_cache'
op|':'
newline|'\n'
comment|"# NOTE(tr3buchet): just in case someone blows away an instance's"
nl|'\n'
comment|'#                  cache entry, re-create it.'
nl|'\n'
indent|'            '
name|'info_cache'
op|'='
name|'models'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
dedent|''
name|'info_cache'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'info_cache'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_info_cache_delete
name|'def'
name|'instance_info_cache_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deletes an existing instance_info_cache record\n\n    :param instance_uuid: = uuid of the instance tied to the cache record\n    :param session: = optional session object\n    """'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|key_pair_create
name|'def'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'key_pair_ref'
op|'='
name|'models'
op|'.'
name|'KeyPair'
op|'('
op|')'
newline|'\n'
name|'key_pair_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'key_pair_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'key_pair_ref'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeyPairExists'
op|'('
name|'key_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|key_pair_destroy
name|'def'
name|'key_pair_destroy'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_user_context'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeypairNotFound'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|','
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|key_pair_get
name|'def'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_user_context'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeypairNotFound'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|','
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|key_pair_get_all_by_user
name|'def'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_user_context'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_count_by_user
dedent|''
name|'def'
name|'key_pair_count_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_user_context'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_associate
name|'def'
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'network_id'
op|'='
name|'None'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate a project with a network.\n\n    called by project_get_networks under certain conditions\n    and network manager add_network_to_project()\n\n    only associate if the project doesn\'t already have a network\n    or if force is True\n\n    force solves race condition where a fresh project has multiple instance\n    builds simultaneously picked up by multiple network hosts which attempt\n    to associate the project with multiple networks\n    force should only be used as a direct consequence of user request\n    all automated requests should not use force\n    """'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|network_query
indent|'        '
name|'def'
name|'network_query'
op|'('
name|'project_filter'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filter_kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_filter'
op|'}'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'filter_kwargs'
op|'['
string|"'id'"
op|']'
op|'='
name|'id'
newline|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
op|'**'
name|'filter_kwargs'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'force'
op|':'
newline|'\n'
comment|'# find out if project has a network'
nl|'\n'
indent|'            '
name|'network_ref'
op|'='
name|'network_query'
op|'('
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'force'
name|'or'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
comment|"# in force mode or project doesn't have a network so associate"
nl|'\n'
comment|'# with a new network'
nl|'\n'
nl|'\n'
comment|'# get new network'
nl|'\n'
indent|'            '
name|'network_ref'
op|'='
name|'network_query'
op|'('
name|'None'
op|','
name|'network_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'db'
op|'.'
name|'NoMoreNetworks'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# associate with network'
nl|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
dedent|''
name|'network_ref'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'project_id'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'network_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'network_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_network_ips_query
name|'def'
name|'_network_ips_query'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_count_reserved_ips
name|'def'
name|'network_count_reserved_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_network_ips_query'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'True'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_create_safe
name|'def'
name|'network_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'network_ref'
op|'='
name|'models'
op|'.'
name|'Network'
op|'('
op|')'
newline|'\n'
name|'network_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'network_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'network_ref'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'DuplicateVlan'
op|'('
name|'vlan'
op|'='
name|'values'
op|'['
string|"'vlan'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_delete_safe
name|'def'
name|'network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'allocated'
op|'='
name|'True'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
name|'if'
name|'result'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkInUse'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
dedent|''
name|'network_ref'
op|'='
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|'='
name|'network_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'session'
op|'.'
name|'delete'
op|'('
name|'network_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_disassociate
name|'def'
name|'network_disassociate'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'disassociate_host'
op|','
nl|'\n'
name|'disassociate_project'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'net_update'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'disassociate_project'
op|':'
newline|'\n'
indent|'        '
name|'net_update'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'disassociate_host'
op|':'
newline|'\n'
indent|'        '
name|'net_update'
op|'['
string|"'host'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'net_update'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get
name|'def'
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'project_only'
op|'='
string|"'allow_none'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get_all
name|'def'
name|'network_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get_all_by_uuids
name|'def'
name|'network_get_all_by_uuids'
op|'('
name|'context'
op|','
name|'network_uuids'
op|','
nl|'\n'
name|'project_only'
op|'='
string|'"allow_none"'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'network_uuids'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'#check if the result contains all the networks'
nl|'\n'
comment|'#we are looking for'
nl|'\n'
dedent|''
name|'for'
name|'network_uuid'
name|'in'
name|'network_uuids'
op|':'
newline|'\n'
indent|'        '
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'network'
op|'['
string|"'uuid'"
op|']'
op|'=='
name|'network_uuid'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'found'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'project_only'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForProject'
op|'('
nl|'\n'
name|'network_uuid'
op|'='
name|'network_uuid'
op|','
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): pylint complains because of the long method name, but'
nl|'\n'
comment|'#             it fits with the names of the rest of the methods'
nl|'\n'
comment|'# pylint: disable=C0103'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_get_associated_fixed_ips
name|'def'
name|'network_get_associated_fixed_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# FIXME(sirp): since this returns fixed_ips, this would be better named'
nl|'\n'
comment|'# fixed_ip_get_all_by_network.'
nl|'\n'
comment|'# NOTE(vish): The ugly joins here are to solve a performance issue and'
nl|'\n'
comment|'#             should be removed once we can add and remove leases'
nl|'\n'
comment|'#             without regenerating the whole list'
nl|'\n'
indent|'    '
name|'vif_and'
op|'='
name|'and_'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'inst_and'
op|'='
name|'and_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'address'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'address'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'hostname'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'created_at'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'allocated'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'leased'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'allocated'
op|'=='
name|'True'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|','
name|'vif_and'
op|')'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
name|'inst_and'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|'!='
name|'None'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|'!='
name|'None'
op|')'
newline|'\n'
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'datum'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'cleaned'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'cleaned'
op|'['
string|"'address'"
op|']'
op|'='
name|'datum'
op|'['
number|'0'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'datum'
op|'['
number|'1'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'datum'
op|'['
number|'2'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_id'"
op|']'
op|'='
name|'datum'
op|'['
number|'3'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_address'"
op|']'
op|'='
name|'datum'
op|'['
number|'4'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_hostname'"
op|']'
op|'='
name|'datum'
op|'['
number|'5'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_updated'"
op|']'
op|'='
name|'datum'
op|'['
number|'6'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_created'"
op|']'
op|'='
name|'datum'
op|'['
number|'7'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'allocated'"
op|']'
op|'='
name|'datum'
op|'['
number|'8'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'leased'"
op|']'
op|'='
name|'datum'
op|'['
number|'9'
op|']'
newline|'\n'
name|'data'
op|'.'
name|'append'
op|'('
name|'cleaned'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_in_use_on_host
dedent|''
name|'def'
name|'network_in_use_on_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fixed_ips'
op|'='
name|'network_get_associated_fixed_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'len'
op|'('
name|'fixed_ips'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_network_get_query
name|'def'
name|'_network_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_get_by_uuid
name|'def'
name|'network_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForUUID'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_get_by_cidr
name|'def'
name|'network_get_by_cidr'
op|'('
name|'context'
op|','
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'cidr'
op|'=='
name|'cidr'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'cidr_v6'
op|'=='
name|'cidr'
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForCidr'
op|'('
name|'cidr'
op|'='
name|'cidr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_get_all_by_instance
name|'def'
name|'network_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForInstance'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_get_all_by_host
name|'def'
name|'network_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'fixed_host_filter'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
name|'fixed_ip_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|','
nl|'\n'
name|'base_model'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|')'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'fixed_host_filter'
op|')'
newline|'\n'
comment|'# NOTE(vish): return networks that have host set'
nl|'\n'
comment|'#             or that have a fixed ip with host set'
nl|'\n'
comment|'#             or that have an instance with host set'
nl|'\n'
name|'host_filter'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'fixed_ip_query'
op|'.'
name|'subquery'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'_network_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'host_filter'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|network_set_host
name|'def'
name|'network_set_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'network_ref'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'network_ref'
op|'['
string|"'host'"
op|']'
op|'='
name|'host_id'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'network_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'network_ref'
op|'['
string|"'host'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_update
name|'def'
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'='
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'network_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'network_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'DuplicateVlan'
op|'('
name|'vlan'
op|'='
name|'values'
op|'['
string|"'vlan'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'network_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get
name|'def'
name|'quota_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get_all_by_project
name|'def'
name|'quota_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_create
name|'def'
name|'quota_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'quota_ref'
op|'='
name|'models'
op|'.'
name|'Quota'
op|'('
op|')'
newline|'\n'
name|'quota_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'quota_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_ref'
op|'.'
name|'hard_limit'
op|'='
name|'limit'
newline|'\n'
name|'quota_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'quota_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_update
name|'def'
name|'quota_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'hard_limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_class_get
name|'def'
name|'quota_class_get'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_class_get_all_by_name
name|'def'
name|'quota_class_get_all_by_name'
op|'('
name|'context'
op|','
name|'class_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_quota_class_context'
op|'('
name|'context'
op|','
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'class_name'"
op|':'
name|'class_name'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_class_create
name|'def'
name|'quota_class_create'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'quota_class_ref'
op|'='
name|'models'
op|'.'
name|'QuotaClass'
op|'('
op|')'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'class_name'
op|'='
name|'class_name'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'hard_limit'
op|'='
name|'limit'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'quota_class_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_class_update
name|'def'
name|'quota_class_update'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'hard_limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_usage_get
name|'def'
name|'quota_usage_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_usage_get_all_by_project
name|'def'
name|'quota_usage_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'dict'
op|'('
name|'in_use'
op|'='
name|'row'
op|'.'
name|'in_use'
op|','
name|'reserved'
op|'='
name|'row'
op|'.'
name|'reserved'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_quota_usage_create
name|'def'
name|'_quota_usage_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'in_use'
op|','
name|'reserved'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'quota_usage_ref'
op|'='
name|'models'
op|'.'
name|'QuotaUsage'
op|'('
op|')'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'in_use'
op|'='
name|'in_use'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'reserved'
op|'='
name|'reserved'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'until_refresh'
op|'='
name|'until_refresh'
newline|'\n'
nl|'\n'
name|'quota_usage_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'quota_usage_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_usage_update
name|'def'
name|'quota_usage_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'updates'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'in_use'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'        '
name|'updates'
op|'['
string|"'in_use'"
op|']'
op|'='
name|'kwargs'
op|'['
string|"'in_use'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'reserved'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'        '
name|'updates'
op|'['
string|"'reserved'"
op|']'
op|'='
name|'kwargs'
op|'['
string|"'reserved'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'until_refresh'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'        '
name|'updates'
op|'['
string|"'until_refresh'"
op|']'
op|'='
name|'kwargs'
op|'['
string|"'until_refresh'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|reservation_get
name|'def'
name|'reservation_get'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ReservationNotFound'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|reservation_create
name|'def'
name|'reservation_create'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'usage'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'delta'
op|','
nl|'\n'
name|'expire'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reservation_ref'
op|'='
name|'models'
op|'.'
name|'Reservation'
op|'('
op|')'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'usage_id'
op|'='
name|'usage'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'delta'
op|'='
name|'delta'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'expire'
op|'='
name|'expire'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'reservation_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
comment|"# NOTE(johannes): The quota code uses SQL locking to ensure races don't"
nl|'\n'
comment|'# cause under or over counting of resources. To avoid deadlocks, this'
nl|'\n'
comment|'# code always acquires the lock on quota_usages before acquiring the lock'
nl|'\n'
comment|'# on reservations.'
nl|'\n'
nl|'\n'
DECL|function|_get_quota_usages
dedent|''
name|'def'
name|'_get_quota_usages'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
comment|'# Broken out for testability'
nl|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
op|'('
name|'row'
op|'.'
name|'resource'
op|','
name|'row'
op|')'
name|'for'
name|'row'
name|'in'
name|'rows'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_reserve
name|'def'
name|'quota_reserve'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'quotas'
op|','
name|'deltas'
op|','
name|'expire'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'max_age'
op|','
name|'project_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'project_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
nl|'\n'
comment|'# Get the current usages'
nl|'\n'
dedent|''
name|'usages'
op|'='
name|'_get_quota_usages'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Handle usage refresh'
nl|'\n'
name|'work'
op|'='
name|'set'
op|'('
name|'deltas'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'while'
name|'work'
op|':'
newline|'\n'
indent|'            '
name|'resource'
op|'='
name|'work'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Do we need to refresh the usage?'
nl|'\n'
name|'refresh'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'resource'
name|'not'
name|'in'
name|'usages'
op|':'
newline|'\n'
indent|'                '
name|'usages'
op|'['
name|'resource'
op|']'
op|'='
name|'_quota_usage_create'
op|'('
name|'elevated'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'resource'
op|','
nl|'\n'
number|'0'
op|','
number|'0'
op|','
nl|'\n'
name|'until_refresh'
name|'or'
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'refresh'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'in_use'
op|'<'
number|'0'
op|':'
newline|'\n'
comment|'# Negative in_use count indicates a desync, so try to'
nl|'\n'
comment|'# heal from that...'
nl|'\n'
indent|'                '
name|'refresh'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'until_refresh'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'until_refresh'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'until_refresh'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'refresh'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'max_age'
name|'and'
op|'('
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'updated_at'
op|'-'
nl|'\n'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
op|'.'
name|'seconds'
op|'>='
name|'max_age'
op|':'
newline|'\n'
indent|'                '
name|'refresh'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# OK, refresh the usage'
nl|'\n'
dedent|''
name|'if'
name|'refresh'
op|':'
newline|'\n'
comment|'# Grab the sync routine'
nl|'\n'
indent|'                '
name|'sync'
op|'='
name|'resources'
op|'['
name|'resource'
op|']'
op|'.'
name|'sync'
newline|'\n'
nl|'\n'
name|'updates'
op|'='
name|'sync'
op|'('
name|'elevated'
op|','
name|'project_id'
op|','
name|'session'
op|')'
newline|'\n'
name|'for'
name|'res'
op|','
name|'in_use'
name|'in'
name|'updates'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Make sure we have a destination for the usage!'
nl|'\n'
indent|'                    '
name|'if'
name|'res'
name|'not'
name|'in'
name|'usages'
op|':'
newline|'\n'
indent|'                        '
name|'usages'
op|'['
name|'res'
op|']'
op|'='
name|'_quota_usage_create'
op|'('
name|'elevated'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'res'
op|','
nl|'\n'
number|'0'
op|','
number|'0'
op|','
nl|'\n'
name|'until_refresh'
name|'or'
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the usage'
nl|'\n'
dedent|''
name|'usages'
op|'['
name|'res'
op|']'
op|'.'
name|'in_use'
op|'='
name|'in_use'
newline|'\n'
name|'usages'
op|'['
name|'res'
op|']'
op|'.'
name|'until_refresh'
op|'='
name|'until_refresh'
name|'or'
name|'None'
newline|'\n'
nl|'\n'
comment|'# Because more than one resource may be refreshed'
nl|'\n'
comment|"# by the call to the sync routine, and we don't"
nl|'\n'
comment|'# want to double-sync, we make sure all refreshed'
nl|'\n'
comment|'# resources are dropped from the work set.'
nl|'\n'
name|'work'
op|'.'
name|'discard'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(Vek): We make the assumption that the sync'
nl|'\n'
comment|'#            routine actually refreshes the'
nl|'\n'
comment|'#            resources that it is the sync routine'
nl|'\n'
comment|"#            for.  We don't check, because this is"
nl|'\n'
comment|'#            a best-effort mechanism.'
nl|'\n'
nl|'\n'
comment|'# Check for deltas that would go negative'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'unders'
op|'='
op|'['
name|'resource'
name|'for'
name|'resource'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'delta'
op|'<'
number|'0'
name|'and'
nl|'\n'
name|'delta'
op|'+'
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'in_use'
op|'<'
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|"# Now, let's check the quotas"
nl|'\n'
comment|"# NOTE(Vek): We're only concerned about positive increments."
nl|'\n'
comment|'#            If a project has gone over quota, we want them to'
nl|'\n'
comment|'#            be able to reduce their usage without any'
nl|'\n'
comment|'#            problems.'
nl|'\n'
name|'overs'
op|'='
op|'['
name|'resource'
name|'for'
name|'resource'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'quotas'
op|'['
name|'resource'
op|']'
op|'>='
number|'0'
name|'and'
name|'delta'
op|'>='
number|'0'
name|'and'
nl|'\n'
name|'quotas'
op|'['
name|'resource'
op|']'
op|'<'
name|'delta'
op|'+'
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'total'
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(Vek): The quota check needs to be in the transaction,'
nl|'\n'
comment|"#            but the transaction doesn't fail just because"
nl|'\n'
comment|"#            we're over quota, so the OverQuota raise is"
nl|'\n'
comment|'#            outside the transaction.  If we did the raise'
nl|'\n'
comment|'#            here, our usage updates would be discarded, but'
nl|'\n'
comment|"#            they're not invalidated by being over-quota."
nl|'\n'
nl|'\n'
comment|'# Create the reservations'
nl|'\n'
name|'if'
name|'not'
name|'overs'
op|':'
newline|'\n'
indent|'            '
name|'reservations'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'resource'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'reservation'
op|'='
name|'reservation_create'
op|'('
name|'elevated'
op|','
nl|'\n'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'usages'
op|'['
name|'resource'
op|']'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'resource'
op|','
name|'delta'
op|','
name|'expire'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'reservations'
op|'.'
name|'append'
op|'('
name|'reservation'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Also update the reserved quantity'
nl|'\n'
comment|'# NOTE(Vek): Again, we are only concerned here about'
nl|'\n'
comment|"#            positive increments.  Here, though, we're"
nl|'\n'
comment|'#            worried about the following scenario:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#            1) User initiates resize down.'
nl|'\n'
comment|'#            2) User allocates a new instance.'
nl|'\n'
comment|'#            3) Resize down fails or is reverted.'
nl|'\n'
comment|'#            4) User is now over quota.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#            To prevent this, we only update the'
nl|'\n'
comment|'#            reserved value if the delta is positive.'
nl|'\n'
name|'if'
name|'delta'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'usages'
op|'['
name|'resource'
op|']'
op|'.'
name|'reserved'
op|'+='
name|'delta'
newline|'\n'
nl|'\n'
comment|'# Apply updates to the usages table'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'usage_ref'
name|'in'
name|'usages'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'unders'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Change will make usage less than 0 for the following "'
nl|'\n'
string|'"resources: %(unders)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'overs'
op|':'
newline|'\n'
indent|'        '
name|'usages'
op|'='
name|'dict'
op|'('
op|'('
name|'k'
op|','
name|'dict'
op|'('
name|'in_use'
op|'='
name|'v'
op|'['
string|"'in_use'"
op|']'
op|','
name|'reserved'
op|'='
name|'v'
op|'['
string|"'reserved'"
op|']'
op|')'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'usages'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
name|'sorted'
op|'('
name|'overs'
op|')'
op|','
name|'quotas'
op|'='
name|'quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'reservations'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_quota_reservations_query
dedent|''
name|'def'
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return the relevant reservations."""'
newline|'\n'
nl|'\n'
comment|'# Get the listed reservations'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Reservation'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'reservations'
op|')'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|reservation_commit
name|'def'
name|'reservation_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'usages'
op|'='
name|'_get_quota_usages'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
nl|'\n'
name|'reservations'
op|')'
newline|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'='
name|'usages'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
newline|'\n'
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
name|'usage'
op|'.'
name|'in_use'
op|'+='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|reservation_rollback
name|'def'
name|'reservation_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'usages'
op|'='
name|'_get_quota_usages'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
nl|'\n'
name|'reservations'
op|')'
newline|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'='
name|'usages'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
newline|'\n'
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|quota_destroy_all_by_project
name|'def'
name|'quota_destroy_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|reservation_expire
name|'def'
name|'reservation_expire'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'current_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Reservation'
op|'.'
name|'expire'
op|'<'
name|'current_time'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'QuotaUsage'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'reservation'
op|'.'
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
name|'reservation'
op|'.'
name|'usage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_ec2_volume_get_query
name|'def'
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeIdMapping'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_ec2_snapshot_get_query
name|'def'
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SnapshotIdMapping'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_volume_create
name|'def'
name|'ec2_volume_create'
op|'('
name|'context'
op|','
name|'volume_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible volume by provided uuid."""'
newline|'\n'
name|'ec2_volume_ref'
op|'='
name|'models'
op|'.'
name|'VolumeIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_volume_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'volume_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_volume_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_volume_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_volume_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_ec2_volume_id_by_uuid
name|'def'
name|'get_ec2_volume_id_by_uuid'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'volume_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_volume_uuid_by_ec2_id
name|'def'
name|'get_volume_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'ec2_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
name|'volume_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_snapshot_create
name|'def'
name|'ec2_snapshot_create'
op|'('
name|'context'
op|','
name|'snapshot_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible snapshot by provided uuid."""'
newline|'\n'
name|'ec2_snapshot_ref'
op|'='
name|'models'
op|'.'
name|'SnapshotIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_snapshot_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'snapshot_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_snapshot_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_snapshot_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_snapshot_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_ec2_snapshot_id_by_uuid
name|'def'
name|'get_ec2_snapshot_id_by_uuid'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'snapshot_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|'('
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_snapshot_uuid_by_ec2_id
name|'def'
name|'get_snapshot_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'ec2_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|'('
name|'snapshot_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_block_device_mapping_get_query
dedent|''
name|'def'
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_create
name|'def'
name|'block_device_mapping_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'bdm_ref'
op|'='
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_update
name|'def'
name|'block_device_mapping_update'
op|'('
name|'context'
op|','
name|'bdm_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'bdm_id'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_update_or_create
name|'def'
name|'block_device_mapping_update_or_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'device_name'
op|'='
name|'values'
op|'['
string|"'device_name'"
op|']'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'bdm_ref'
op|'='
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata): same virtual device name can be specified multiple'
nl|'\n'
comment|'#                 times. So delete the existing ones.'
nl|'\n'
dedent|''
name|'virtual_name'
op|'='
name|'values'
op|'['
string|"'virtual_name'"
op|']'
newline|'\n'
name|'if'
op|'('
name|'virtual_name'
name|'is'
name|'not'
name|'None'
name|'and'
nl|'\n'
name|'block_device'
op|'.'
name|'is_swap_or_ephemeral'
op|'('
name|'virtual_name'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'virtual_name'
op|'='
name|'virtual_name'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'device_name'
op|'!='
nl|'\n'
name|'values'
op|'['
string|"'device_name'"
op|']'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_get_all_by_instance
name|'def'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy
name|'def'
name|'block_device_mapping_destroy'
op|'('
name|'context'
op|','
name|'bdm_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'bdm_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_volume
name|'def'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_device
name|'def'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'device_name'
op|'='
name|'device_name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
DECL|function|_security_group_get_query
dedent|''
name|'def'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'False'
op|','
name|'join_rules'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
name|'if'
name|'join_rules'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'rules.grantee_group'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_get_by_names
dedent|''
name|'def'
name|'_security_group_get_by_names'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
name|'group_names'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Get security group models for a project by a list of names.\n    Raise SecurityGroupNotFoundForProject for a name not found.\n    """'
newline|'\n'
name|'query'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'join_rules'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|'.'
name|'name'
op|'.'
name|'in_'
op|'('
name|'group_names'
op|')'
op|')'
newline|'\n'
name|'sg_models'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'sg_models'
op|')'
op|'=='
name|'len'
op|'('
name|'group_names'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sg_models'
newline|'\n'
comment|'# Find the first one missing and raise'
nl|'\n'
dedent|''
name|'group_names_from_models'
op|'='
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'sg_models'
op|']'
newline|'\n'
name|'for'
name|'group_name'
name|'in'
name|'group_names'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'group_name'
name|'not'
name|'in'
name|'group_names_from_models'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
comment|'# Not Reached'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_all
name|'def'
name|'security_group_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get
name|'def'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'security_group_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'instances'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|'('
nl|'\n'
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_name
name|'def'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'join_rules'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'instances'"
op|','
string|"'rules.grantee_group'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_project
name|'def'
name|'security_group_get_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_instance
name|'def'
name|'security_group_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|'.'
name|'instances'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_exists
name|'def'
name|'security_group_exists'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'group'
op|'='
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
newline|'\n'
name|'return'
name|'group'
name|'is'
name|'not'
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_in_use
name|'def'
name|'security_group_in_use'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# Are there any instances that haven't been deleted"
nl|'\n'
comment|'# that include this group?'
nl|'\n'
indent|'        '
name|'inst_assoc'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'group_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'for'
name|'ia'
name|'in'
name|'inst_assoc'
op|':'
newline|'\n'
indent|'            '
name|'num_instances'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'ia'
op|'.'
name|'instance_uuid'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
name|'if'
name|'num_instances'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_create
name|'def'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroup'
op|'('
op|')'
newline|'\n'
comment|'# FIXME(devcamcar): Unless I do this, rules fails with lazy load exception'
nl|'\n'
comment|'# once save() is called.  This will get cleaned up in next orm pass.'
nl|'\n'
name|'security_group_ref'
op|'.'
name|'rules'
newline|'\n'
name|'security_group_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
dedent|''
name|'security_group_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'security_group_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_ensure_default
dedent|''
name|'def'
name|'security_group_ensure_default'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Ensure default security group exists for a project_id."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'default_group'
op|'='
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'default'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'default_group'
op|'='
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'for'
name|'default_rule'
name|'in'
name|'security_group_default_rule_list'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
comment|'# This is suboptimal, it should be programmatic to know'
nl|'\n'
comment|'# the values of the default_rule'
nl|'\n'
indent|'            '
name|'rule_values'
op|'='
op|'{'
string|"'protocol'"
op|':'
name|'default_rule'
op|'.'
name|'protocol'
op|','
nl|'\n'
string|"'from_port'"
op|':'
name|'default_rule'
op|'.'
name|'from_port'
op|','
nl|'\n'
string|"'to_port'"
op|':'
name|'default_rule'
op|'.'
name|'to_port'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'default_rule'
op|'.'
name|'cidr'
op|','
nl|'\n'
string|"'parent_group_id'"
op|':'
name|'default_group'
op|'.'
name|'id'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'security_group_rule_create'
op|'('
name|'context'
op|','
name|'rule_values'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'default_group'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_destroy
name|'def'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_count_by_project
name|'def'
name|'security_group_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_rule_get_query
dedent|''
name|'def'
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_get
name|'def'
name|'security_group_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForRule'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_get_by_security_group
name|'def'
name|'security_group_rule_get_by_security_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'grantee_group.instances.'"
nl|'\n'
string|"'system_metadata'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_get_by_security_group_grantee
name|'def'
name|'security_group_rule_get_by_security_group_grantee'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'return'
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_create
name|'def'
name|'security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_rule_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|'('
op|')'
newline|'\n'
name|'security_group_rule_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'security_group_rule_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'security_group_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_destroy
name|'def'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForRule'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_count_by_group
name|'def'
name|'security_group_rule_count_by_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_rule_get_default_query
dedent|''
name|'def'
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressDefaultRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_default_rule_get
name|'def'
name|'security_group_default_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_default_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_default_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupDefaultRuleNotFound'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_default_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|security_group_default_rule_destroy
name|'def'
name|'security_group_default_rule_destroy'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_rule_default_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_default_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupDefaultRuleNotFound'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_default_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|security_group_default_rule_create
name|'def'
name|'security_group_default_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_default_rule_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupIngressDefaultRule'
op|'('
op|')'
newline|'\n'
name|'security_group_default_rule_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'security_group_default_rule_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'security_group_default_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_default_rule_list
name|'def'
name|'security_group_default_rule_list'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|provider_fw_rule_create
name|'def'
name|'provider_fw_rule_create'
op|'('
name|'context'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fw_rule_ref'
op|'='
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|'('
op|')'
newline|'\n'
name|'fw_rule_ref'
op|'.'
name|'update'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'fw_rule_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'fw_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|provider_fw_rule_get_all
name|'def'
name|'provider_fw_rule_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|provider_fw_rule_destroy
name|'def'
name|'provider_fw_rule_destroy'
op|'('
name|'context'
op|','
name|'rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'rule_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|project_get_networks
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'associate'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(tr3buchet): as before this function will associate'
nl|'\n'
comment|"# a project with a network if it doesn't have one and"
nl|'\n'
comment|'# associate is true'
nl|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'associate'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_create
name|'def'
name|'migration_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'migration'
op|'='
name|'models'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_update
name|'def'
name|'migration_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'migration_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_get
name|'def'
name|'migration_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|'('
name|'migration_id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_get_by_instance_and_status
name|'def'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
name|'status'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'MigrationNotFoundByStatus'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
name|'status'
op|'='
name|'status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_get_unconfirmed_by_dest_compute
name|'def'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'context'
op|','
name|'confirm_window'
op|','
nl|'\n'
name|'dest_compute'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'confirm_window'
op|'='
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'confirm_window'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'updated_at'
op|'<='
name|'confirm_window'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
string|'"finished"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'dest_compute'
op|'='
name|'dest_compute'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|migration_get_in_progress_by_host_and_node
name|'def'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'and_'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_compute'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_node'
op|'=='
name|'node'
op|')'
op|','
nl|'\n'
name|'and_'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'dest_compute'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'dest_node'
op|'=='
name|'node'
op|')'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'status'
op|'.'
name|'in_'
op|'('
op|'['
string|"'confirmed'"
op|','
string|"'reverted'"
op|']'
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'instance.system_metadata'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_create
dedent|''
name|'def'
name|'console_pool_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pool'
op|'='
name|'models'
op|'.'
name|'ConsolePool'
op|'('
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'pool'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_by_host_type
dedent|''
name|'def'
name|'console_pool_get_by_host_type'
op|'('
name|'context'
op|','
name|'compute_host'
op|','
name|'host'
op|','
nl|'\n'
name|'console_type'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ConsolePool'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'console_type'
op|'='
name|'console_type'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_host'
op|'='
name|'compute_host'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'consoles'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ConsolePoolNotFoundForHostType'
op|'('
nl|'\n'
name|'host'
op|'='
name|'host'
op|','
name|'console_type'
op|'='
name|'console_type'
op|','
nl|'\n'
name|'compute_host'
op|'='
name|'compute_host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_all_by_host_type
dedent|''
name|'def'
name|'console_pool_get_all_by_host_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ConsolePool'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'console_type'
op|'='
name|'console_type'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'consoles'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_create
dedent|''
name|'def'
name|'console_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'console'
op|'='
name|'models'
op|'.'
name|'Console'
op|'('
op|')'
newline|'\n'
name|'console'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'console'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'console'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_delete
dedent|''
name|'def'
name|'console_delete'
op|'('
name|'context'
op|','
name|'console_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# NOTE(mdragon): consoles are meant to be transient.'
nl|'\n'
indent|'        '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Console'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'console_id'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_by_pool_instance
dedent|''
dedent|''
name|'def'
name|'console_get_by_pool_instance'
op|'('
name|'context'
op|','
name|'pool_id'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'pool_id'
op|'='
name|'pool_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'pool'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFoundInPoolForInstance'
op|'('
nl|'\n'
name|'pool_id'
op|'='
name|'pool_id'
op|','
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_all_by_instance
dedent|''
name|'def'
name|'console_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get
dedent|''
name|'def'
name|'console_get'
op|'('
name|'context'
op|','
name|'console_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'console_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'pool'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'instance_uuid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFoundForInstance'
op|'('
nl|'\n'
name|'console_id'
op|'='
name|'console_id'
op|','
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFound'
op|'('
name|'console_id'
op|'='
name|'console_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_type_create
name|'def'
name|'instance_type_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new instance type. In order to pass in extra specs,\n    the values dict should contain a \'extra_specs\' key/value pair:\n\n    {\'extra_specs\' : {\'k1\': \'v1\', \'k2\': \'v2\', ...}}\n\n    """'
newline|'\n'
name|'specs'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'extra_specs'"
op|')'
newline|'\n'
name|'specs_refs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'specs'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'specs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'specs_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'('
op|')'
newline|'\n'
name|'specs_ref'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'specs_ref'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'specs_refs'
op|'.'
name|'append'
op|'('
name|'specs_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'values'
op|'['
string|"'extra_specs'"
op|']'
op|'='
name|'specs_refs'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypes'
op|'('
op|')'
newline|'\n'
name|'instance_type_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'instance_type_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'flavorid'"
name|'in'
name|'e'
op|'.'
name|'columns'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeIdExists'
op|'('
name|'flavor_id'
op|'='
name|'values'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeExists'
op|'('
name|'name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'db_exc'
op|'.'
name|'DBError'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'instance_type_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_dict_with_extra_specs
dedent|''
name|'def'
name|'_dict_with_extra_specs'
op|'('
name|'inst_type_query'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Takes an instance or instance type query returned\n    by sqlalchemy and returns it as a dictionary, converting the\n    extra_specs entry from a list of dicts:\n\n    \'extra_specs\' : [{\'key\': \'k1\', \'value\': \'v1\', ...}, ...]\n\n    to a single dict:\n\n    \'extra_specs\' : {\'k1\': \'v1\'}\n\n    """'
newline|'\n'
name|'inst_type_dict'
op|'='
name|'dict'
op|'('
name|'inst_type_query'
op|')'
newline|'\n'
name|'extra_specs'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'x'
op|'['
string|"'key'"
op|']'
op|','
name|'x'
op|'['
string|"'value'"
op|']'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'inst_type_query'
op|'['
string|"'extra_specs'"
op|']'
op|']'
op|')'
newline|'\n'
name|'inst_type_dict'
op|'['
string|"'extra_specs'"
op|']'
op|'='
name|'extra_specs'
newline|'\n'
name|'return'
name|'inst_type_dict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_type_get_query
dedent|''
name|'def'
name|'_instance_type_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'extra_specs'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_get_all
name|'def'
name|'instance_type_get_all'
op|'('
name|'context'
op|','
name|'inactive'
op|'='
name|'False'
op|','
name|'filters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns all instance types.\n    """'
newline|'\n'
name|'filters'
op|'='
name|'filters'
name|'or'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# FIXME(sirp): now that we have the `disabled` field for instance-types, we'
nl|'\n'
comment|'# should probably remove the use of `deleted` to mark inactive. `deleted`'
nl|'\n'
comment|'# should mean truly deleted, e.g. we can safely purge the record out of the'
nl|'\n'
comment|'# database.'
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
name|'if'
name|'inactive'
name|'else'
string|'"no"'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'_instance_type_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'min_memory_mb'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'memory_mb'
op|'>='
name|'filters'
op|'['
string|"'min_memory_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'min_root_gb'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'root_gb'
op|'>='
name|'filters'
op|'['
string|"'min_root_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'disabled'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'disabled'
op|'=='
name|'filters'
op|'['
string|"'disabled'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'is_public'"
name|'in'
name|'filters'
name|'and'
name|'filters'
op|'['
string|"'is_public'"
op|']'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'the_filter'
op|'='
op|'['
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'is_public'
op|'=='
name|'filters'
op|'['
string|"'is_public'"
op|']'
op|']'
newline|'\n'
name|'if'
name|'filters'
op|'['
string|"'is_public'"
op|']'
name|'and'
name|'context'
op|'.'
name|'project_id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'the_filter'
op|'.'
name|'extend'
op|'('
op|'['
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'projects'
op|'.'
name|'any'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'the_filter'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
op|'*'
name|'the_filter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'the_filter'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'inst_types'
op|'='
name|'query'
op|'.'
name|'order_by'
op|'('
string|'"name"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'_dict_with_extra_specs'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'inst_types'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_instance_type_get_id_from_flavor_query
name|'def'
name|'_instance_type_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'id'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'base_model'
op|'='
name|'models'
op|'.'
name|'InstanceTypes'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'flavorid'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_instance_type_get_id_from_flavor
name|'def'
name|'_instance_type_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_instance_type_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
dedent|''
name|'instance_type_id'
op|'='
name|'result'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'instance_type_id'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_get
name|'def'
name|'instance_type_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific instance_type."""'
newline|'\n'
name|'result'
op|'='
name|'_instance_type_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeNotFound'
op|'('
name|'instance_type_id'
op|'='
name|'id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_get_by_name
name|'def'
name|'instance_type_get_by_name'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific instance_type."""'
newline|'\n'
name|'result'
op|'='
name|'_instance_type_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeNotFoundByName'
op|'('
name|'instance_type_name'
op|'='
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_get_by_flavor_id
name|'def'
name|'instance_type_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific flavor_id."""'
newline|'\n'
name|'result'
op|'='
name|'_instance_type_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'flavorid'
op|'='
name|'flavor_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_type_destroy
name|'def'
name|'instance_type_destroy'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Marks specific instance_type as deleted."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeNotFoundByName'
op|'('
name|'instance_type_name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ref'
op|'.'
name|'soft_delete'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_instance_type_access_query
name|'def'
name|'_instance_type_access_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_type_access_get_by_flavor_id
name|'def'
name|'instance_type_access_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get flavor access list by flavor id."""'
newline|'\n'
name|'instance_type_id_subq'
op|'='
name|'_instance_type_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
name|'access_refs'
op|'='
name|'_instance_type_access_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id_subq'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'access_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_type_access_add
name|'def'
name|'instance_type_access_add'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add given tenant to the flavor access list."""'
newline|'\n'
name|'instance_type_id'
op|'='
name|'_instance_type_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'access_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|'('
op|')'
newline|'\n'
name|'access_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"instance_type_id"'
op|':'
name|'instance_type_id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'project_id'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'access_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorAccessExists'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'access_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|instance_type_access_remove
name|'def'
name|'instance_type_access_remove'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove given tenant from the flavor access list."""'
newline|'\n'
name|'instance_type_id'
op|'='
name|'_instance_type_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'count'
op|'='
name|'_instance_type_access_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorAccessNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_type_extra_specs_get_query
dedent|''
dedent|''
name|'def'
name|'_instance_type_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'instance_type_id_subq'
op|'='
name|'_instance_type_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id_subq'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_extra_specs_get
name|'def'
name|'instance_type_extra_specs_get'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_type_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
op|'['
op|'('
name|'row'
op|'['
string|"'key'"
op|']'
op|','
name|'row'
op|'['
string|"'value'"
op|']'
op|')'
name|'for'
name|'row'
name|'in'
name|'rows'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_extra_specs_get_item
name|'def'
name|'instance_type_extra_specs_get_item'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_instance_type_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTypeExtraSpecsNotFound'
op|'('
nl|'\n'
name|'extra_specs_key'
op|'='
name|'key'
op|','
name|'instance_type_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
name|'result'
op|'['
string|'"key"'
op|']'
op|':'
name|'result'
op|'['
string|'"value"'
op|']'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_extra_specs_delete
name|'def'
name|'instance_type_extra_specs_delete'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_instance_type_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_type_extra_specs_update_or_create
name|'def'
name|'instance_type_extra_specs_update_or_create'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'specs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): There is a race condition in this method. We should add'
nl|'\n'
comment|'#                 UniqueConstraint on (instance_type_id, key, deleted) to'
nl|'\n'
comment|'#                 avoid duplicated instance_type_extra_specs. This will be'
nl|'\n'
comment|'#                 possible after bp/db-unique-keys implementation.'
nl|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type_id'
op|'='
name|'_instance_type_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'spec_refs'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'specs'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'existing_keys'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'spec_ref'
name|'in'
name|'spec_refs'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'spec_ref'
op|'['
string|'"key"'
op|']'
newline|'\n'
name|'existing_keys'
op|'.'
name|'add'
op|'('
name|'key'
op|')'
newline|'\n'
name|'spec_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'specs'
op|'['
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'specs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'existing_keys'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'spec_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'('
op|')'
newline|'\n'
name|'spec_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'value'
op|','
nl|'\n'
string|'"instance_type_id"'
op|':'
name|'instance_type_id'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'spec_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'specs'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|cell_create
name|'def'
name|'cell_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'cell'
op|'='
name|'models'
op|'.'
name|'Cell'
op|'('
op|')'
newline|'\n'
name|'cell'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'cell'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'cell'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_cell_get_by_name_query
dedent|''
name|'def'
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Cell'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|cell_update
name|'def'
name|'cell_update'
op|'('
name|'context'
op|','
name|'cell_name'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell'
op|'='
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'cell'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cell'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|cell_delete
name|'def'
name|'cell_delete'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|cell_get
name|'def'
name|'cell_get'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CellNotFound'
op|'('
name|'cell_name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|cell_get_all
name|'def'
name|'cell_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Cell'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'########################'
nl|'\n'
comment|'# User-provided metadata'
nl|'\n'
nl|'\n'
DECL|function|_instance_metadata_get_multi
dedent|''
name|'def'
name|'_instance_metadata_get_multi'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_metadata_get_query
dedent|''
name|'def'
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_metadata_get_all_query
dedent|''
name|'def'
name|'_instance_metadata_get_all_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|','
name|'search_filts'
op|'='
op|'['
op|']'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'or_query'
op|'='
name|'None'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
comment|'# We want to incrementally build an OR query out of the search filters.'
nl|'\n'
comment|'# So:'
nl|'\n'
comment|"# {'filter':"
nl|'\n'
comment|"#     [{'resource_id': 'i-0000001'}],"
nl|'\n'
comment|"#     [{'key': 'foo', 'value': 'bar'}]}"
nl|'\n'
comment|'# Should produce:'
nl|'\n'
comment|"# AND ((instance_metadata.uuid IN ('1')) OR"
nl|'\n'
comment|"# (instance_metadata.key IN ('foo')) OR"
nl|'\n'
comment|"# (instance_metadata.value IN ('bar')))"
nl|'\n'
nl|'\n'
DECL|function|make_tuple
name|'def'
name|'make_tuple'
op|'('
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'item'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'='
name|'item'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'item'
op|','
op|'('
name|'tuple'
op|','
name|'list'
op|','
name|'set'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'='
op|'('
name|'item'
op|','
op|')'
newline|'\n'
dedent|''
name|'return'
name|'item'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'search_filt'
name|'in'
name|'search_filts'
op|':'
newline|'\n'
indent|'        '
name|'subq'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'search_filt'
op|'.'
name|'get'
op|'('
string|"'resource_id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'uuid'
op|'='
name|'make_tuple'
op|'('
name|'search_filt'
op|'['
string|"'resource_id'"
op|']'
op|')'
newline|'\n'
name|'subq'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'uuid'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'search_filt'
op|'.'
name|'get'
op|'('
string|"'key'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'make_tuple'
op|'('
name|'search_filt'
op|'['
string|"'key'"
op|']'
op|')'
newline|'\n'
name|'subq'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'key'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'search_filt'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'make_tuple'
op|'('
name|'search_filt'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'subq'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'value'
op|'.'
name|'in_'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'subq'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'or_query'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'or_query'
op|'='
name|'subq'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'or_query'
op|'='
name|'or_'
op|'('
name|'or_query'
op|','
name|'subq'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'or_query'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_query'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_metadata_get
name|'def'
name|'instance_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'['
string|"'key'"
op|']'
op|']'
op|'='
name|'row'
op|'['
string|"'value'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_metadata_get_all
name|'def'
name|'instance_metadata_get_all'
op|'('
name|'context'
op|','
name|'search_filts'
op|'='
op|'['
op|']'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_metadata_get_all_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
nl|'\n'
name|'search_filts'
op|'='
name|'search_filts'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
op|'{'
string|"'key'"
op|':'
name|'row'
op|'['
string|"'key'"
op|']'
op|','
nl|'\n'
string|"'value'"
op|':'
name|'row'
op|'['
string|"'value'"
op|']'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|'}'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_metadata_delete
name|'def'
name|'instance_metadata_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'key'
op|'='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_metadata_update
name|'def'
name|'instance_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'synchronize_session'
op|'='
string|'"fetch"'
newline|'\n'
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'synchronize_session'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'delete'
op|':'
newline|'\n'
indent|'            '
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'synchronize_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'already_existing_keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'meta_refs'
op|'='
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'meta_refs'
op|':'
newline|'\n'
indent|'            '
name|'already_existing_keys'
op|'.'
name|'append'
op|'('
name|'meta_ref'
op|'.'
name|'key'
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'meta_ref'
op|'.'
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_keys'
op|'='
name|'set'
op|'('
name|'all_keys'
op|')'
op|'-'
name|'set'
op|'('
name|'already_existing_keys'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'new_keys'
op|':'
newline|'\n'
indent|'            '
name|'meta_ref'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
op|'('
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|','
nl|'\n'
string|'"instance_uuid"'
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'meta_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#######################'
nl|'\n'
comment|'# System-owned metadata'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_system_metadata_get_multi
dedent|''
dedent|''
name|'def'
name|'_instance_system_metadata_get_multi'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_system_metadata_get_query
dedent|''
name|'def'
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_system_metadata_get
name|'def'
name|'instance_system_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'['
string|"'key'"
op|']'
op|']'
op|'='
name|'row'
op|'['
string|"'value'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_system_metadata_update
name|'def'
name|'instance_system_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'synchronize_session'
op|'='
string|'"fetch"'
newline|'\n'
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'synchronize_session'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'delete'
op|':'
newline|'\n'
indent|'            '
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'synchronize_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'already_existing_keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'meta_refs'
op|'='
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'meta_refs'
op|':'
newline|'\n'
indent|'            '
name|'already_existing_keys'
op|'.'
name|'append'
op|'('
name|'meta_ref'
op|'.'
name|'key'
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'meta_ref'
op|'.'
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_keys'
op|'='
name|'set'
op|'('
name|'all_keys'
op|')'
op|'-'
name|'set'
op|'('
name|'already_existing_keys'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'new_keys'
op|':'
newline|'\n'
indent|'            '
name|'meta_ref'
op|'='
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'('
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|','
nl|'\n'
string|'"instance_uuid"'
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'meta_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|agent_build_create
name|'def'
name|'agent_build_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'agent_build_ref'
op|'='
name|'models'
op|'.'
name|'AgentBuild'
op|'('
op|')'
newline|'\n'
name|'agent_build_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'agent_build_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'agent_build_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|agent_build_get_by_triple
name|'def'
name|'agent_build_get_by_triple'
op|'('
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'hypervisor'
op|'='
name|'hypervisor'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'os'
op|'='
name|'os'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'architecture'
op|'='
name|'architecture'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|agent_build_get_all
name|'def'
name|'agent_build_get_all'
op|'('
name|'context'
op|','
name|'hypervisor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'hypervisor'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'hypervisor'
op|'='
name|'hypervisor'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|agent_build_destroy
name|'def'
name|'agent_build_destroy'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|agent_build_update
name|'def'
name|'agent_build_update'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'agent_build_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
newline|'\n'
dedent|''
name|'agent_build_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'agent_build_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|bw_usage_get
name|'def'
name|'bw_usage_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'start_period'
op|','
name|'mac'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'start_period'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'mac'
op|'='
name|'mac'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|bw_usage_get_by_uuids
name|'def'
name|'bw_usage_get_by_uuids'
op|'('
name|'context'
op|','
name|'uuids'
op|','
name|'start_period'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'BandwidthUsage'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'uuids'
op|')'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'start_period'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'_retry_on_deadlock'
newline|'\n'
DECL|function|bw_usage_update
name|'def'
name|'bw_usage_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
name|'bw_in'
op|','
name|'bw_out'
op|','
nl|'\n'
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
name|'last_refreshed'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'last_refreshed'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'last_refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(comstud): More often than not, we'll be updating records vs"
nl|'\n'
comment|'# creating records.  Optimize accordingly, trying to update existing'
nl|'\n'
comment|'# records.  Fall back to creation when no rows are updated.'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'last_refreshed'"
op|':'
name|'last_refreshed'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
name|'last_ctr_in'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
name|'last_ctr_out'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
name|'bw_in'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
name|'bw_out'
op|'}'
newline|'\n'
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'start_period'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'mac'
op|'='
name|'mac'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|','
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'rows'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'bwusage'
op|'='
name|'models'
op|'.'
name|'BandwidthUsage'
op|'('
op|')'
newline|'\n'
name|'bwusage'
op|'.'
name|'start_period'
op|'='
name|'start_period'
newline|'\n'
name|'bwusage'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'bwusage'
op|'.'
name|'mac'
op|'='
name|'mac'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_refreshed'
op|'='
name|'last_refreshed'
newline|'\n'
name|'bwusage'
op|'.'
name|'bw_in'
op|'='
name|'bw_in'
newline|'\n'
name|'bwusage'
op|'.'
name|'bw_out'
op|'='
name|'bw_out'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_ctr_in'
op|'='
name|'last_ctr_in'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_ctr_out'
op|'='
name|'last_ctr_out'
newline|'\n'
name|'bwusage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|vol_get_usage_by_time
name|'def'
name|'vol_get_usage_by_time'
op|'('
name|'context'
op|','
name|'begin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return volumes usage that have been updated after a specified time."""'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_last_refreshed'
op|'=='
name|'None'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_last_refreshed'
op|'>'
name|'begin'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'curr_last_refreshed'
op|'=='
name|'None'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'curr_last_refreshed'
op|'>'
name|'begin'
op|','
nl|'\n'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|vol_usage_update
name|'def'
name|'vol_usage_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'rd_req'
op|','
name|'rd_bytes'
op|','
name|'wr_req'
op|','
name|'wr_bytes'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'availability_zone'
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'None'
op|','
name|'update_totals'
op|'='
name|'False'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'last_refreshed'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'last_refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# NOTE(dricco): We will be mostly updating current usage records vs'
nl|'\n'
comment|'# updating total or creating records. Optimize accordingly.'
nl|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'curr_last_refreshed'"
op|':'
name|'last_refreshed'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
name|'rd_req'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
name|'rd_bytes'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
name|'wr_req'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
name|'wr_bytes'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'user_id'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'tot_last_refreshed'"
op|':'
name|'last_refreshed'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
name|'rd_req'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'rd_bytes'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
name|'wr_req'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'wr_bytes'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'user_id'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'current_usage'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'volume_id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'current_usage'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'rd_req'
op|'<'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
name|'or'
nl|'\n'
name|'rd_bytes'
op|'<'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
name|'or'
nl|'\n'
name|'wr_req'
op|'<'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
name|'or'
nl|'\n'
name|'wr_bytes'
op|'<'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Volume(%s) has lower stats then what is in "'
nl|'\n'
string|'"the database. Instance must have been rebooted "'
nl|'\n'
string|'"or crashed. Updating totals."'
op|')'
op|'%'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'                    '
name|'values'
op|'['
string|"'tot_last_refreshed'"
op|']'
op|'='
name|'last_refreshed'
newline|'\n'
name|'values'
op|'['
string|"'tot_reads'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_read_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_writes'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_write_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'values'
op|'['
string|"'tot_reads'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|'+'
nl|'\n'
name|'rd_req'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_read_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
op|'+'
name|'rd_bytes'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_writes'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
op|'+'
nl|'\n'
name|'wr_req'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_write_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|'+'
name|'wr_bytes'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'current_usage'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'vol_usage'
op|'='
name|'models'
op|'.'
name|'VolumeUsage'
op|'('
op|')'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_last_refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_last_refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'vol_usage'
op|'.'
name|'volume_id'
op|'='
name|'id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'instance_uuid'
op|'='
name|'instance_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'availability_zone'
op|'='
name|'availability_zone'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'            '
name|'vol_usage'
op|'.'
name|'curr_reads'
op|'='
name|'rd_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_read_bytes'
op|'='
name|'rd_bytes'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_writes'
op|'='
name|'wr_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_write_bytes'
op|'='
name|'wr_bytes'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vol_usage'
op|'.'
name|'tot_reads'
op|'='
name|'rd_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_read_bytes'
op|'='
name|'rd_bytes'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_writes'
op|'='
name|'wr_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_write_bytes'
op|'='
name|'wr_bytes'
newline|'\n'
nl|'\n'
dedent|''
name|'vol_usage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get
dedent|''
dedent|''
name|'def'
name|'s3_image_get'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided id."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'S3Image'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'image_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get_by_uuid
dedent|''
name|'def'
name|'s3_image_get_by_uuid'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided uuid."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'S3Image'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'image_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_create
dedent|''
name|'def'
name|'s3_image_create'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create local s3 image represented by provided uuid."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'s3_image_ref'
op|'='
name|'models'
op|'.'
name|'S3Image'
op|'('
op|')'
newline|'\n'
name|'s3_image_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'image_uuid'
op|'}'
op|')'
newline|'\n'
name|'s3_image_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'db_exc'
op|'.'
name|'DBError'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'s3_image_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_aggregate_get_query
dedent|''
name|'def'
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'id_field'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'columns_to_join'
op|'='
op|'{'
name|'models'
op|'.'
name|'Aggregate'
op|':'
op|'['
string|"'_hosts'"
op|','
string|"'_metadata'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'columns_to_join'
op|'.'
name|'get'
op|'('
name|'model_class'
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'id'
name|'and'
name|'id_field'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'id_field'
op|'=='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_create
name|'def'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'query'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'name'
op|','
nl|'\n'
name|'values'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'aggregate'
op|'='
name|'models'
op|'.'
name|'Aggregate'
op|'('
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
comment|"# We don't want these to be lazy loaded later.  We know there is"
nl|'\n'
comment|'# nothing here since we just created this aggregate.'
nl|'\n'
name|'aggregate'
op|'.'
name|'_hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'aggregate'
op|'.'
name|'_metadata'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNameExists'
op|'('
name|'aggregate_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|','
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_get
name|'def'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'aggregate'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_get_by_host
name|'def'
name|'aggregate_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'host'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|'"_metadata"'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_metadata_get_by_host
name|'def'
name|'aggregate_metadata_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
op|'.'
name|'join'
op|'('
nl|'\n'
string|'"_hosts"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
op|'.'
name|'join'
op|'('
nl|'\n'
string|'"_metadata"'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
dedent|''
name|'rows'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'set'
op|')'
newline|'\n'
name|'for'
name|'agg'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'kv'
name|'in'
name|'agg'
op|'.'
name|'_metadata'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
name|'kv'
op|'['
string|"'key'"
op|']'
op|']'
op|'.'
name|'add'
op|'('
name|'kv'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_host_get_by_metadata_key
name|'def'
name|'aggregate_host_get_by_metadata_key'
op|'('
name|'context'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
op|'.'
name|'join'
op|'('
nl|'\n'
string|'"_metadata"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'set'
op|')'
newline|'\n'
name|'for'
name|'agg'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'agghost'
name|'in'
name|'agg'
op|'.'
name|'_hosts'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
name|'agghost'
op|'.'
name|'host'
op|']'
op|'.'
name|'add'
op|'('
name|'agg'
op|'.'
name|'_metadata'
op|'['
number|'0'
op|']'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_update
name|'def'
name|'aggregate_update'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'aggregate'
op|'='
op|'('
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'first'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|'"availability_zone"'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'az'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'availability_zone'"
op|')'
newline|'\n'
name|'if'
string|"'metadata'"
name|'not'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
name|'az'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'az'
newline|'\n'
dedent|''
dedent|''
name|'metadata'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'if'
name|'metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'metadata'"
op|')'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'aggregate'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
name|'return'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_delete
name|'def'
name|'aggregate_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
comment|'#Delete Metadata'
nl|'\n'
dedent|''
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_get_all
name|'def'
name|'aggregate_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|aggregate_metadata_get_query
name|'def'
name|'aggregate_metadata_get_query'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_get
name|'def'
name|'aggregate_metadata_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'dict'
op|'('
op|'['
op|'('
name|'r'
op|'['
string|"'key'"
op|']'
op|','
name|'r'
op|'['
string|"'value'"
op|']'
op|')'
name|'for'
name|'r'
name|'in'
name|'rows'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_delete
name|'def'
name|'aggregate_metadata_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'aggregate_id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'key'
op|'='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateMetadataNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|','
nl|'\n'
name|'metadata_key'
op|'='
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_add
name|'def'
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'metadata'
op|','
name|'set_delete'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): There is a race condition in this method. We should add'
nl|'\n'
comment|'#                 UniqueConstraint on (start_period, uuid, mac, deleted) to'
nl|'\n'
comment|'#                 avoid duplicated aggregate_metadata. This will be'
nl|'\n'
comment|'#                 possible after bp/db-unique-keys implementation.'
nl|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'aggregate_metadata_get_query'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'set_delete'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
newline|'\n'
name|'already_existing_keys'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'meta_ref'
op|'.'
name|'key'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
name|'already_existing_keys'
op|'.'
name|'add'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'already_existing_keys'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'meta_ref'
op|'='
name|'models'
op|'.'
name|'AggregateMetadata'
op|'('
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
nl|'\n'
string|'"value"'
op|':'
name|'value'
op|','
nl|'\n'
string|'"aggregate_id"'
op|':'
name|'aggregate_id'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'meta_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_get_all
name|'def'
name|'aggregate_host_get_all'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'r'
op|'.'
name|'host'
name|'for'
name|'r'
name|'in'
name|'rows'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_delete
name|'def'
name|'aggregate_host_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'aggregate_id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_add
name|'def'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): There is a race condition in this method and it will be'
nl|'\n'
comment|'#                 rewritten after bp/db-unique-keys implementation.'
nl|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_ref'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'aggregate_id'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'host_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AggregateHostExists'
op|'('
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
dedent|''
name|'host_ref'
op|'='
name|'models'
op|'.'
name|'AggregateHost'
op|'('
op|')'
newline|'\n'
name|'host_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"host"'
op|':'
name|'host'
op|','
string|'"aggregate_id"'
op|':'
name|'aggregate_id'
op|'}'
op|')'
newline|'\n'
name|'host_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'host_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_create
dedent|''
name|'def'
name|'instance_fault_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new InstanceFault."""'
newline|'\n'
name|'fault_ref'
op|'='
name|'models'
op|'.'
name|'InstanceFault'
op|'('
op|')'
newline|'\n'
name|'fault_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'fault_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'fault_ref'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_get_by_instance_uuids
dedent|''
name|'def'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance faults for the provided instance_uuids."""'
newline|'\n'
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceFault'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceFault'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'instance_uuids'
op|')'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'desc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'['
name|'instance_uuid'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'dict'
op|'('
name|'row'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'output'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_start
dedent|''
name|'def'
name|'action_start'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|')'
newline|'\n'
name|'action_ref'
op|'='
name|'models'
op|'.'
name|'InstanceAction'
op|'('
op|')'
newline|'\n'
name|'action_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'action_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'action_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_finish
dedent|''
name|'def'
name|'action_finish'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|','
string|"'finish_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'action_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'action_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'action_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|actions_get
dedent|''
name|'def'
name|'actions_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance actions for the provided uuid."""'
newline|'\n'
name|'actions'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'actions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_get_by_request_id
dedent|''
name|'def'
name|'action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the action by request_id and given instance."""'
newline|'\n'
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|')'
newline|'\n'
name|'return'
name|'action'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_action_get_by_request_id
dedent|''
name|'def'
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'request_id'
op|'='
name|'request_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_start
dedent|''
name|'def'
name|'action_event_start'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Start an event on an instance action."""'
newline|'\n'
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'action'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'['
string|"'action_id'"
op|']'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'event_ref'
op|'='
name|'models'
op|'.'
name|'InstanceActionEvent'
op|'('
op|')'
newline|'\n'
name|'event_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'event_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'event_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_finish
dedent|''
name|'def'
name|'action_event_finish'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Finish an event on an instance action."""'
newline|'\n'
name|'convert_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|','
string|"'finish_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'action'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'event_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'event'
op|'='
name|'values'
op|'['
string|"'event'"
op|']'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'event_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionEventNotFound'
op|'('
name|'action_id'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'event'
op|'='
name|'values'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'event_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'values'
op|'['
string|"'result'"
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'            '
name|'action'
op|'.'
name|'update'
op|'('
op|'{'
string|"'message'"
op|':'
string|"'Error'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'event_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_events_get
dedent|''
name|'def'
name|'action_events_get'
op|'('
name|'context'
op|','
name|'action_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'events'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action_id'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'events'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_get_by_id
dedent|''
name|'def'
name|'action_event_get_by_id'
op|'('
name|'context'
op|','
name|'action_id'
op|','
name|'event_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'event'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'event_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'event'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_instance_create
name|'def'
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible instance by provided uuid."""'
newline|'\n'
name|'ec2_instance_ref'
op|'='
name|'models'
op|'.'
name|'InstanceIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_instance_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_instance_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_ec2_instance_id_by_uuid
name|'def'
name|'get_ec2_instance_id_by_uuid'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_instance_uuid_by_ec2_id
name|'def'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'ec2_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|_ec2_instance_get_query
name|'def'
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceIdMapping'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|_task_log_get_query
name|'def'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'TaskLog'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'period_beginning'
op|'='
name|'period_beginning'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'period_ending'
op|'='
name|'period_ending'
op|')'
newline|'\n'
name|'if'
name|'host'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'state'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'state'
op|'='
name|'state'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|task_log_get
name|'def'
name|'task_log_get'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
name|'host'
op|','
nl|'\n'
name|'state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|task_log_get_all
name|'def'
name|'task_log_get_all'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|task_log_begin_task
name|'def'
name|'task_log_begin_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
name|'task_items'
op|'='
name|'None'
op|','
name|'message'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'task'
op|'='
name|'models'
op|'.'
name|'TaskLog'
op|'('
op|')'
newline|'\n'
name|'task'
op|'.'
name|'task_name'
op|'='
name|'task_name'
newline|'\n'
name|'task'
op|'.'
name|'period_beginning'
op|'='
name|'period_beginning'
newline|'\n'
name|'task'
op|'.'
name|'period_ending'
op|'='
name|'period_ending'
newline|'\n'
name|'task'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'task'
op|'.'
name|'state'
op|'='
string|'"RUNNING"'
newline|'\n'
name|'if'
name|'message'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'message'
op|'='
name|'message'
newline|'\n'
dedent|''
name|'if'
name|'task_items'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'task_items'
op|'='
name|'task_items'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'TaskAlreadyRunning'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|','
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|task_log_end_task
name|'def'
name|'task_log_end_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
name|'dict'
op|'('
name|'state'
op|'='
string|'"DONE"'
op|','
name|'errors'
op|'='
name|'errors'
op|')'
newline|'\n'
name|'if'
name|'message'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'['
string|'"message"'
op|']'
op|'='
name|'message'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rows'
op|'='
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'rows'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|"#It's not running!"
nl|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'TaskNotRunning'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|','
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_default_deleted_value
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_default_deleted_value'
op|'('
name|'table'
op|')'
op|':'
newline|'\n'
comment|'# TODO(dripton): It would be better to introspect the actual default value'
nl|'\n'
comment|"# from the column, but I don't see a way to do that in the low-level APIs"
nl|'\n'
comment|'# of SQLAlchemy 0.7.  0.8 has better introspection APIs, which we should'
nl|'\n'
comment|'# use when Nova is ready to require 0.8.'
nl|'\n'
nl|'\n'
comment|'# NOTE(mikal): this is a little confusing. This method returns the value'
nl|'\n'
comment|'# that a _not_deleted_ row would have.'
nl|'\n'
indent|'    '
name|'deleted_column_type'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'deleted_column_type'
op|','
name|'Integer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'deleted_column_type'
op|','
name|'Boolean'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'deleted_column_type'
op|','
name|'String'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'""'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|archive_deleted_rows_for_table
name|'def'
name|'archive_deleted_rows_for_table'
op|'('
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Move up to max_rows rows from one tables to the corresponding\n    shadow table.\n\n    :returns: number of rows archived\n    """'
newline|'\n'
comment|'# The context argument is only used for the decorator.'
nl|'\n'
name|'engine'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'tablename'
op|','
name|'metadata'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'default_deleted_value'
op|'='
name|'_get_default_deleted_value'
op|'('
name|'table'
op|')'
newline|'\n'
name|'shadow_tablename'
op|'='
string|'"shadow_"'
op|'+'
name|'tablename'
newline|'\n'
name|'rows_archived'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'shadow_table'
op|'='
name|'Table'
op|'('
name|'shadow_tablename'
op|','
name|'metadata'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NoSuchTableError'
op|':'
newline|'\n'
comment|'# No corresponding shadow table; skip it.'
nl|'\n'
indent|'        '
name|'return'
name|'rows_archived'
newline|'\n'
comment|'# Group the insert and delete in a transaction.'
nl|'\n'
dedent|''
name|'with'
name|'conn'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# TODO(dripton): It would be more efficient to insert(select) and then'
nl|'\n'
comment|'# delete(same select) without ever returning the selected rows back to'
nl|'\n'
comment|'# Python.  sqlalchemy does not support that directly, but we have'
nl|'\n'
comment|'# nova.db.sqlalchemy.utils.InsertFromSelect for the insert side.  We'
nl|'\n'
comment|'# need a corresponding function for the delete side.'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'column'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'column_name'
op|'='
string|'"id"'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
comment|'# We have one table (dns_domains) where the key is called'
nl|'\n'
comment|'# "domain" rather than "id"'
nl|'\n'
indent|'            '
name|'column'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'domain'
newline|'\n'
name|'column_name'
op|'='
string|'"domain"'
newline|'\n'
dedent|''
name|'query'
op|'='
name|'select'
op|'('
op|'['
name|'table'
op|']'
op|','
nl|'\n'
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
name|'default_deleted_value'
op|')'
op|'.'
name|'order_by'
op|'('
name|'column'
op|')'
op|'.'
name|'limit'
op|'('
name|'max_rows'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'if'
name|'rows'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
op|'['
name|'getattr'
op|'('
name|'row'
op|','
name|'column_name'
op|')'
name|'for'
name|'row'
name|'in'
name|'rows'
op|']'
newline|'\n'
name|'delete_statement'
op|'='
name|'table'
op|'.'
name|'delete'
op|'('
name|'column'
op|'.'
name|'in_'
op|'('
name|'keys'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IntegrityError'
op|':'
newline|'\n'
comment|'# A foreign key constraint keeps us from deleting some of'
nl|'\n'
comment|'# these rows until we clean up a dependent table.  Just'
nl|'\n'
comment|"# skip this table for now; we'll come back to it later."
nl|'\n'
indent|'                '
name|'return'
name|'rows_archived'
newline|'\n'
dedent|''
name|'insert_statement'
op|'='
name|'shadow_table'
op|'.'
name|'insert'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|','
name|'rows'
op|')'
newline|'\n'
name|'rows_archived'
op|'='
name|'result'
op|'.'
name|'rowcount'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rows_archived'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_admin_context'
newline|'\n'
DECL|function|archive_deleted_rows
name|'def'
name|'archive_deleted_rows'
op|'('
name|'context'
op|','
name|'max_rows'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Move up to max_rows rows from production tables to the corresponding\n    shadow tables.\n\n    :returns: Number of rows archived.\n    """'
newline|'\n'
comment|'# The context argument is only used for the decorator.'
nl|'\n'
name|'tablenames'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'model_class'
name|'in'
name|'models'
op|'.'
name|'__dict__'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'model_class'
op|','
string|'"__tablename__"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'tablenames'
op|'.'
name|'append'
op|'('
name|'model_class'
op|'.'
name|'__tablename__'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'rows_archived'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'tablename'
name|'in'
name|'tablenames'
op|':'
newline|'\n'
indent|'        '
name|'rows_archived'
op|'+='
name|'archive_deleted_rows_for_table'
op|'('
name|'context'
op|','
name|'tablename'
op|','
nl|'\n'
name|'max_rows'
op|'='
name|'max_rows'
op|'-'
name|'rows_archived'
op|')'
newline|'\n'
name|'if'
name|'rows_archived'
op|'>='
name|'max_rows'
op|':'
newline|'\n'
indent|'            '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rows_archived'
newline|'\n'
dedent|''
endmarker|''
end_unit
