begin_unit
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Implementation of SQLAlchemy backend."""'
newline|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_db'
name|'import'
name|'api'
name|'as'
name|'oslo_db_api'
newline|'\n'
name|'from'
name|'oslo_db'
name|'import'
name|'exception'
name|'as'
name|'db_exc'
newline|'\n'
name|'from'
name|'oslo_db'
name|'import'
name|'options'
name|'as'
name|'oslo_db_options'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'enginefacade'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'update_match'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'sqlalchemyutils'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'excutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'and_'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'NoSuchTableError'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'or_'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'aliased'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'contains_eager'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'joinedload'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'joinedload_all'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'noload'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'undefer'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'schema'
name|'import'
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'sql'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'asc'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'desc'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'false'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'func'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'null'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'true'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
op|','
name|'_LI'
op|','
name|'_LE'
op|','
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
nl|'\n'
DECL|variable|db_opts
name|'db_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'osapi_compute_unique_server_name_scope'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"''"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'When set, compute API will consider duplicate hostnames '"
nl|'\n'
string|"'invalid within the specified scope, regardless of case. '"
nl|'\n'
string|'\'Should be empty, "project" or "global".\''
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|api_db_opts
name|'api_db_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'connection'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQLAlchemy connection string to use to connect to '"
nl|'\n'
string|"'the Nova API database.'"
op|','
nl|'\n'
DECL|variable|secret
name|'secret'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'sqlite_synchronous'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If True, SQLite uses synchronous mode.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'slave_connection'"
op|','
nl|'\n'
DECL|variable|secret
name|'secret'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQLAlchemy connection string to use to connect to the'"
nl|'\n'
string|"' slave database.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'mysql_sql_mode'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'TRADITIONAL'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQL mode to be used for MySQL sessions. '"
nl|'\n'
string|"'This option, including the default, overrides any '"
nl|'\n'
string|"'server-set SQL mode. To use whatever SQL mode '"
nl|'\n'
string|"'is set by the server configuration, '"
nl|'\n'
string|"'set this to no value. Example: mysql_sql_mode='"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'idle_timeout'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'3600'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Timeout before idle SQL connections are reaped.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_pool_size'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum number of SQL connections to keep open in a '"
nl|'\n'
string|"'pool.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum number of database connection retries '"
nl|'\n'
string|"'during startup. Set to -1 to specify an infinite '"
nl|'\n'
string|"'retry count.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Interval between retries of opening a SQL connection.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_overflow'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If set, use this value for max_overflow with '"
nl|'\n'
string|"'SQLAlchemy.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'connection_debug'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
name|'help'
op|'='
string|"'Verbosity of SQL debugging information: 0=None, '"
nl|'\n'
string|"'100=Everything.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'connection_trace'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Add Python stack traces to SQL as comment strings.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'pool_timeout'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If set, use this value for pool_timeout with '"
nl|'\n'
string|"'SQLAlchemy.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'db_opts'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'oslo_db_options'
op|'.'
name|'database_opts'
op|','
string|"'database'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'api_db_opts'
op|','
name|'group'
op|'='
string|"'api_database'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'until_refresh'"
op|','
string|"'nova.quota'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|main_context_manager
name|'main_context_manager'
op|'='
name|'enginefacade'
op|'.'
name|'transaction_context'
op|'('
op|')'
newline|'\n'
DECL|variable|api_context_manager
name|'api_context_manager'
op|'='
name|'enginefacade'
op|'.'
name|'transaction_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_db_conf
name|'def'
name|'_get_db_conf'
op|'('
name|'conf_group'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'kw'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'connection'
op|'='
name|'conf_group'
op|'.'
name|'connection'
op|','
nl|'\n'
name|'slave_connection'
op|'='
name|'conf_group'
op|'.'
name|'slave_connection'
op|','
nl|'\n'
name|'sqlite_fk'
op|'='
name|'False'
op|','
nl|'\n'
name|'__autocommit'
op|'='
name|'True'
op|','
nl|'\n'
name|'expire_on_commit'
op|'='
name|'False'
op|','
nl|'\n'
name|'mysql_sql_mode'
op|'='
name|'conf_group'
op|'.'
name|'mysql_sql_mode'
op|','
nl|'\n'
name|'idle_timeout'
op|'='
name|'conf_group'
op|'.'
name|'idle_timeout'
op|','
nl|'\n'
name|'connection_debug'
op|'='
name|'conf_group'
op|'.'
name|'connection_debug'
op|','
nl|'\n'
name|'max_pool_size'
op|'='
name|'conf_group'
op|'.'
name|'max_pool_size'
op|','
nl|'\n'
name|'max_overflow'
op|'='
name|'conf_group'
op|'.'
name|'max_overflow'
op|','
nl|'\n'
name|'pool_timeout'
op|'='
name|'conf_group'
op|'.'
name|'pool_timeout'
op|','
nl|'\n'
name|'sqlite_synchronous'
op|'='
name|'conf_group'
op|'.'
name|'sqlite_synchronous'
op|','
nl|'\n'
name|'connection_trace'
op|'='
name|'conf_group'
op|'.'
name|'connection_trace'
op|','
nl|'\n'
name|'max_retries'
op|'='
name|'conf_group'
op|'.'
name|'max_retries'
op|','
nl|'\n'
name|'retry_interval'
op|'='
name|'conf_group'
op|'.'
name|'retry_interval'
op|')'
newline|'\n'
name|'return'
name|'kw'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|configure
dedent|''
name|'def'
name|'configure'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'main_context_manager'
op|'.'
name|'configure'
op|'('
op|'**'
name|'_get_db_conf'
op|'('
name|'conf'
op|'.'
name|'database'
op|')'
op|')'
newline|'\n'
name|'api_context_manager'
op|'.'
name|'configure'
op|'('
op|'**'
name|'_get_db_conf'
op|'('
name|'conf'
op|'.'
name|'api_database'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_engine
dedent|''
name|'def'
name|'get_engine'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'main_context_manager'
op|'.'
name|'get_legacy_facade'
op|'('
op|')'
op|'.'
name|'get_engine'
op|'('
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_api_engine
dedent|''
name|'def'
name|'get_api_engine'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'api_context_manager'
op|'.'
name|'get_legacy_facade'
op|'('
op|')'
op|'.'
name|'get_engine'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_session
dedent|''
name|'def'
name|'get_session'
op|'('
name|'use_slave'
op|'='
name|'False'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'main_context_manager'
op|'.'
name|'get_legacy_facade'
op|'('
op|')'
op|'.'
name|'get_session'
op|'('
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_api_session
dedent|''
name|'def'
name|'get_api_session'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'api_context_manager'
op|'.'
name|'get_legacy_facade'
op|'('
op|')'
op|'.'
name|'get_session'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_SHADOW_TABLE_PREFIX
dedent|''
name|'_SHADOW_TABLE_PREFIX'
op|'='
string|"'shadow_'"
newline|'\n'
DECL|variable|_DEFAULT_QUOTA_NAME
name|'_DEFAULT_QUOTA_NAME'
op|'='
string|"'default'"
newline|'\n'
DECL|variable|PER_PROJECT_QUOTAS
name|'PER_PROJECT_QUOTAS'
op|'='
op|'['
string|"'fixed_ips'"
op|','
string|"'floating_ips'"
op|','
string|"'networks'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_backend
name|'def'
name|'get_backend'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The backend is this module itself."""'
newline|'\n'
name|'return'
name|'sys'
op|'.'
name|'modules'
op|'['
name|'__name__'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_context
dedent|''
name|'def'
name|'require_context'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require *any* user or admin context.\n\n    This does no authorization for user or project access matching, see\n    :py:func:`nova.context.authorize_project_context` and\n    :py:func:`nova.context.authorize_user_context`.\n\n    The first argument to the wrapped function must be the context.\n\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'require_context'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_instance_exists_using_uuid
dedent|''
name|'def'
name|'require_instance_exists_using_uuid'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require the specified instance to exist.\n\n    Requires the wrapped function to use context and instance_uuid as\n    their first two arguments.\n    """'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|require_aggregate_exists
dedent|''
name|'def'
name|'require_aggregate_exists'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to require the specified aggregate to exist.\n\n    Requires the wrapped function to use context and aggregate_id as\n    their first two arguments.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
name|'return'
name|'f'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|model_query
dedent|''
name|'def'
name|'model_query'
op|'('
name|'context'
op|','
name|'model'
op|','
nl|'\n'
name|'args'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Query helper that accounts for context\'s `read_deleted` field.\n\n    :param context:     NovaContext of the query.\n    :param model:       Model to query. Must be a subclass of ModelBase.\n    :param args:        Arguments to query. If None - model is used.\n    :param session:     If present, the session to use.\n    :param use_slave:   If true, use a slave connection to the DB if creating a\n                        session.\n    :param read_deleted: If not None, overrides context\'s read_deleted field.\n                        Permitted values are \'no\', which does not return\n                        deleted values; \'only\', which only returns deleted\n                        values; and \'yes\', which does not filter deleted\n                        values.\n    :param project_only: If set and context is user-type, then restrict\n                        query to match the context\'s project_id. If set to\n                        \'allow_none\', restriction includes project_id = None.\n    """'
newline|'\n'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'context'
op|','
string|"'session'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'context'
op|'.'
name|'session'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'CONF'
op|'.'
name|'database'
op|'.'
name|'slave_connection'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'use_slave'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'read_deleted'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'read_deleted'
op|'='
name|'context'
op|'.'
name|'read_deleted'
newline|'\n'
nl|'\n'
dedent|''
name|'query_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'no'"
op|'=='
name|'read_deleted'
op|':'
newline|'\n'
indent|'        '
name|'query_kwargs'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'elif'
string|"'only'"
op|'=='
name|'read_deleted'
op|':'
newline|'\n'
indent|'        '
name|'query_kwargs'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
string|"'yes'"
op|'=='
name|'read_deleted'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
name|'_'
op|'('
string|'"Unrecognized read_deleted value \'%s\'"'
op|')'
nl|'\n'
op|'%'
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'model_query'
op|'('
name|'model'
op|','
name|'session'
op|','
name|'args'
op|','
op|'**'
name|'query_kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# We can't use oslo.db model_query's project_id here, as it doesn't allow"
nl|'\n'
comment|'# us to return both our projects and unowned projects.'
nl|'\n'
name|'if'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
name|'project_only'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'project_only'
op|'=='
string|"'allow_none'"
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'model'
op|'.'
name|'project_id'
op|'=='
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'model'
op|'.'
name|'project_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|convert_objects_related_datetimes
dedent|''
name|'def'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
op|'*'
name|'datetime_keys'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'datetime_keys'
op|':'
newline|'\n'
indent|'        '
name|'datetime_keys'
op|'='
op|'('
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'datetime_keys'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'in'
name|'values'
name|'and'
name|'values'
op|'['
name|'key'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'parse_strtime'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|'# Try alternate parsing since parse_strtime will fail'
nl|'\n'
comment|"# with say converting '2015-05-28T19:59:38+00:00'"
nl|'\n'
indent|'                    '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
comment|"# NOTE(danms): Strip UTC timezones from datetimes, since they're"
nl|'\n'
comment|'# stored that way in the database'
nl|'\n'
dedent|''
dedent|''
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'values'
op|'['
name|'key'
op|']'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_sync_instances
dedent|''
name|'def'
name|'_sync_instances'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'zip'
op|'('
op|'('
string|"'instances'"
op|','
string|"'cores'"
op|','
string|"'ram'"
op|')'
op|','
nl|'\n'
name|'_instance_data_get_for_user'
op|'('
nl|'\n'
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_sync_floating_ips
dedent|''
name|'def'
name|'_sync_floating_ips'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'floating_ips'
op|'='
name|'_floating_ip_count_by_project'
op|'('
nl|'\n'
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_sync_fixed_ips
dedent|''
name|'def'
name|'_sync_fixed_ips'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'fixed_ips'
op|'='
name|'_fixed_ip_count_by_project'
op|'('
nl|'\n'
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_sync_security_groups
dedent|''
name|'def'
name|'_sync_security_groups'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'security_groups'
op|'='
name|'_security_group_count_by_project_and_user'
op|'('
nl|'\n'
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_sync_server_groups
dedent|''
name|'def'
name|'_sync_server_groups'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'server_groups'
op|'='
name|'_instance_group_count_by_project_and_user'
op|'('
nl|'\n'
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|QUOTA_SYNC_FUNCTIONS
dedent|''
name|'QUOTA_SYNC_FUNCTIONS'
op|'='
op|'{'
nl|'\n'
string|"'_sync_instances'"
op|':'
name|'_sync_instances'
op|','
nl|'\n'
string|"'_sync_floating_ips'"
op|':'
name|'_sync_floating_ips'
op|','
nl|'\n'
string|"'_sync_fixed_ips'"
op|':'
name|'_sync_fixed_ips'
op|','
nl|'\n'
string|"'_sync_security_groups'"
op|':'
name|'_sync_security_groups'
op|','
nl|'\n'
string|"'_sync_server_groups'"
op|':'
name|'_sync_server_groups'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|constraint
name|'def'
name|'constraint'
op|'('
op|'**'
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'Constraint'
op|'('
name|'conditions'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|equal_any
dedent|''
name|'def'
name|'equal_any'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'EqualityCondition'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|not_equal
dedent|''
name|'def'
name|'not_equal'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'InequalityCondition'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Constraint
dedent|''
name|'class'
name|'Constraint'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conditions'
op|'='
name|'conditions'
newline|'\n'
nl|'\n'
DECL|member|apply
dedent|''
name|'def'
name|'apply'
op|'('
name|'self'
op|','
name|'model'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'condition'
name|'in'
name|'self'
op|'.'
name|'conditions'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'clause'
name|'in'
name|'condition'
op|'.'
name|'clauses'
op|'('
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'clause'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EqualityCondition
dedent|''
dedent|''
name|'class'
name|'EqualityCondition'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'values'
op|'='
name|'values'
newline|'\n'
nl|'\n'
DECL|member|clauses
dedent|''
name|'def'
name|'clauses'
op|'('
name|'self'
op|','
name|'field'
op|')'
op|':'
newline|'\n'
comment|'# method signature requires us to return an iterable even if for OR'
nl|'\n'
comment|'# operator this will actually be a single clause'
nl|'\n'
indent|'        '
name|'return'
op|'['
name|'or_'
op|'('
op|'*'
op|'['
name|'field'
op|'=='
name|'value'
name|'for'
name|'value'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InequalityCondition
dedent|''
dedent|''
name|'class'
name|'InequalityCondition'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'values'
op|'='
name|'values'
newline|'\n'
nl|'\n'
DECL|member|clauses
dedent|''
name|'def'
name|'clauses'
op|'('
name|'self'
op|','
name|'field'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'field'
op|'!='
name|'value'
name|'for'
name|'value'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_destroy
dedent|''
dedent|''
name|'def'
name|'service_destroy'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'service_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sbauza): Remove the service_id filter in a later release'
nl|'\n'
comment|'# once we are sure that all compute nodes report the host field'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'service_id'
op|'=='
name|'service_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'host'
op|'=='
name|'service'
op|'['
string|"'host'"
op|']'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_service_get
dedent|''
dedent|''
name|'def'
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ServiceNotFound'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get
dedent|''
name|'def'
name|'service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_minimum_version
dedent|''
name|'def'
name|'service_get_minimum_version'
op|'('
name|'context'
op|','
name|'binary'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'min_version'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
nl|'\n'
name|'func'
op|'.'
name|'min'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'version'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'binary'
op|'=='
name|'binary'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'forced_down'
op|'=='
name|'false'
op|'('
op|')'
op|')'
op|'.'
name|'scalar'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'min_version'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all
dedent|''
name|'def'
name|'service_get_all'
op|'('
name|'context'
op|','
name|'disabled'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'disabled'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_by_topic
dedent|''
name|'def'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'topic'
op|'='
name|'topic'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_by_host_and_topic
dedent|''
name|'def'
name|'service_get_by_host_and_topic'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'topic'
op|'='
name|'topic'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_by_binary
dedent|''
name|'def'
name|'service_get_all_by_binary'
op|'('
name|'context'
op|','
name|'binary'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'disabled'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'binary'
op|'='
name|'binary'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_by_host_and_binary
dedent|''
name|'def'
name|'service_get_by_host_and_binary'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'binary'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'binary'
op|'='
name|'binary'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'HostBinaryNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|','
name|'binary'
op|'='
name|'binary'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_by_host
dedent|''
name|'def'
name|'service_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_by_compute_host
dedent|''
name|'def'
name|'service_get_by_compute_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Service'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'binary'
op|'='
string|"'nova-compute'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_create
dedent|''
name|'def'
name|'service_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'enable_new_services'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'.'
name|'disabled'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'binary'"
name|'in'
name|'e'
op|'.'
name|'columns'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ServiceBinaryExists'
op|'('
name|'host'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'host'"
op|')'
op|','
nl|'\n'
name|'binary'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'binary'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ServiceTopicExists'
op|'('
name|'host'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'host'"
op|')'
op|','
nl|'\n'
name|'topic'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'topic'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'service_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|service_update
name|'def'
name|'service_update'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'='
name|'_service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
comment|'# Only servicegroup.drivers.db.DbDriver._report_state() updates'
nl|'\n'
comment|"# 'report_count', so if that value changes then store the timestamp"
nl|'\n'
comment|'# as the last time we got a state report.'
nl|'\n'
name|'if'
string|"'report_count'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'values'
op|'['
string|"'report_count'"
op|']'
op|'>'
name|'service_ref'
op|'.'
name|'report_count'
op|':'
newline|'\n'
indent|'                '
name|'service_ref'
op|'.'
name|'last_seen_up'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'service_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get
dedent|''
name|'def'
name|'compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_compute_node_get
dedent|''
name|'def'
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'compute_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_nodes_get_by_service_id
dedent|''
name|'def'
name|'compute_nodes_get_by_service_id'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter_by'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ServiceNotFound'
op|'('
name|'service_id'
op|'='
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get_by_host_and_nodename
dedent|''
name|'def'
name|'compute_node_get_by_host_and_nodename'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|','
name|'hypervisor_hostname'
op|'='
name|'nodename'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get_all_by_host
dedent|''
name|'def'
name|'compute_node_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get_all
dedent|''
name|'def'
name|'compute_node_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_search_by_hypervisor
dedent|''
name|'def'
name|'compute_node_search_by_hypervisor'
op|'('
name|'context'
op|','
name|'hypervisor_match'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'field'
op|'='
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'hypervisor_hostname'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|')'
op|'.'
name|'filter'
op|'('
name|'field'
op|'.'
name|'like'
op|'('
string|"'%%%s%%'"
op|'%'
name|'hypervisor_match'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_create
dedent|''
name|'def'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Creates a new ComputeNode and populates the capacity fields\n    with the most recent data.\n    """'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'compute_node_ref'
op|'='
name|'models'
op|'.'
name|'ComputeNode'
op|'('
op|')'
newline|'\n'
name|'compute_node_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'compute_node_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'compute_node_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|compute_node_update
name|'def'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Updates the ComputeNode record with the most recent data."""'
newline|'\n'
nl|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_ref'
op|'='
name|'_compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
comment|"# Always update this, even if there's going to be no other"
nl|'\n'
comment|'# changes in data.  This ensures that we invalidate the'
nl|'\n'
comment|'# scheduler cache of compute node data in case of races.'
nl|'\n'
name|'values'
op|'['
string|"'updated_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
name|'compute_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'compute_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_delete
dedent|''
name|'def'
name|'compute_node_delete'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete a ComputeNode record."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ComputeNode'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'compute_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_statistics
dedent|''
dedent|''
dedent|''
name|'def'
name|'compute_node_statistics'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute statistics over all compute nodes."""'
newline|'\n'
nl|'\n'
comment|'# TODO(sbauza): Remove the service_id filter in a later release'
nl|'\n'
comment|'# once we are sure that all compute nodes report the host field'
nl|'\n'
name|'_filter'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'host'
op|'=='
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Service'
op|'.'
name|'id'
op|'=='
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'ComputeNode'
op|','
op|'('
nl|'\n'
name|'func'
op|'.'
name|'count'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'id'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'vcpus'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'memory_mb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'local_gb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'vcpus_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'memory_mb_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'local_gb_used'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'free_ram_mb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'free_disk_gb'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'current_workload'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'running_vms'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'ComputeNode'
op|'.'
name|'disk_available_least'
op|')'
op|','
nl|'\n'
op|')'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'disabled'
op|'=='
name|'false'
op|'('
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Service'
op|'.'
name|'binary'
op|'=='
string|'"nova-compute"'
op|')'
op|'.'
name|'filter'
op|'('
name|'_filter'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Build a dict of the info--making no assumptions about result'
nl|'\n'
name|'fields'
op|'='
op|'('
string|"'count'"
op|','
string|"'vcpus'"
op|','
string|"'memory_mb'"
op|','
string|"'local_gb'"
op|','
string|"'vcpus_used'"
op|','
nl|'\n'
string|"'memory_mb_used'"
op|','
string|"'local_gb_used'"
op|','
string|"'free_ram_mb'"
op|','
string|"'free_disk_gb'"
op|','
nl|'\n'
string|"'current_workload'"
op|','
string|"'running_vms'"
op|','
string|"'disk_available_least'"
op|')'
newline|'\n'
name|'return'
op|'{'
name|'field'
op|':'
name|'int'
op|'('
name|'result'
op|'['
name|'idx'
op|']'
name|'or'
number|'0'
op|')'
nl|'\n'
name|'for'
name|'idx'
op|','
name|'field'
name|'in'
name|'enumerate'
op|'('
name|'fields'
op|')'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|certificate_create
name|'def'
name|'certificate_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'certificate_ref'
op|'='
name|'models'
op|'.'
name|'Certificate'
op|'('
op|')'
newline|'\n'
name|'for'
op|'('
name|'key'
op|','
name|'value'
op|')'
name|'in'
name|'values'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'certificate_ref'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'certificate_ref'
op|'.'
name|'save'
op|'('
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
name|'return'
name|'certificate_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|certificate_get_all_by_project
name|'def'
name|'certificate_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|certificate_get_all_by_user
name|'def'
name|'certificate_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|certificate_get_all_by_user_and_project
name|'def'
name|'certificate_get_all_by_user_and_project'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Certificate'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get
name|'def'
name|'floating_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFound'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_LW'
op|'('
string|'"Invalid floating ip id %s in request"'
op|')'
op|'%'
name|'id'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidID'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_pools
name|'def'
name|'floating_ip_get_pools'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pools'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'pool'
op|','
op|')'
op|')'
op|'.'
name|'distinct'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pools'
op|'.'
name|'append'
op|'('
op|'{'
string|"'name'"
op|':'
name|'result'
op|'['
number|'0'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pools'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|retry_on_request
name|'retry_on_request'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|floating_ip_allocate_address
name|'def'
name|'floating_ip_allocate_address'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'pool'
op|','
nl|'\n'
name|'auto_assigned'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'pool'
op|'='
name|'pool'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'floating_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'params'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|','
string|"'auto_assigned'"
op|':'
name|'auto_assigned'
op|'}'
newline|'\n'
nl|'\n'
name|'rows_update'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'floating_ip_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'pool'
op|'='
name|'pool'
op|')'
op|'.'
name|'update'
op|'('
name|'params'
op|','
name|'synchronize_session'
op|'='
string|"'evaluate'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rows_update'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'The row was updated in a concurrent transaction, '"
nl|'\n'
string|"'we will fetch another one'"
op|')'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'RetryRequest'
op|'('
name|'exception'
op|'.'
name|'FloatingIpAllocateFailed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'floating_ip_ref'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_bulk_create
name|'def'
name|'floating_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|','
name|'want_result'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'tab'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|'('
op|')'
op|'.'
name|'__table__'
newline|'\n'
name|'session'
op|'.'
name|'execute'
op|'('
name|'tab'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'e'
op|'.'
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'want_result'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'model_query'
op|'('
nl|'\n'
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'.'
name|'in_'
op|'('
nl|'\n'
op|'['
name|'ip'
op|'['
string|"'address'"
op|']'
name|'for'
name|'ip'
name|'in'
name|'ips'
op|']'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ip_range_splitter
dedent|''
dedent|''
dedent|''
name|'def'
name|'_ip_range_splitter'
op|'('
name|'ips'
op|','
name|'block_size'
op|'='
number|'256'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Yields blocks of IPs no more than block_size elements long."""'
newline|'\n'
name|'out'
op|'='
op|'['
op|']'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'ip'
name|'in'
name|'ips'
op|':'
newline|'\n'
indent|'        '
name|'out'
op|'.'
name|'append'
op|'('
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'count'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
name|'if'
name|'count'
op|'>'
name|'block_size'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'out'
newline|'\n'
name|'out'
op|'='
op|'['
op|']'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'out'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'out'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_bulk_destroy
name|'def'
name|'floating_ip_bulk_destroy'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'project_id_to_quota_count'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'int'
op|')'
newline|'\n'
name|'for'
name|'ip_block'
name|'in'
name|'_ip_range_splitter'
op|'('
name|'ips'
op|')'
op|':'
newline|'\n'
comment|'# Find any floating IPs that were not auto_assigned and'
nl|'\n'
comment|'# thus need quota released.'
nl|'\n'
indent|'            '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'.'
name|'in_'
op|'('
name|'ip_block'
op|')'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'auto_assigned'
op|'='
name|'False'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# The count is negative since we release quota by'
nl|'\n'
comment|'# reserving negative quota.'
nl|'\n'
indent|'                '
name|'project_id_to_quota_count'
op|'['
name|'row'
op|'['
string|"'project_id'"
op|']'
op|']'
op|'-='
number|'1'
newline|'\n'
comment|'# Delete the floating IPs.'
nl|'\n'
dedent|''
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'.'
name|'in_'
op|'('
name|'ip_block'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
string|"'fetch'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete the quotas, if needed.'
nl|'\n'
comment|'# Quota update happens in a separate transaction, so previous must have'
nl|'\n'
comment|'# been committed first.'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'project_id'
op|','
name|'count'
name|'in'
name|'project_id_to_quota_count'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'reservations'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'reserve'
op|'('
name|'context'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'floating_ips'
op|'='
name|'count'
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_LE'
op|'('
string|'"Failed to update usages bulk "'
nl|'\n'
string|'"deallocating floating IP"'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_create
name|'def'
name|'floating_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_ref'
op|'='
name|'models'
op|'.'
name|'FloatingIp'
op|'('
op|')'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'values'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_floating_ip_count_by_project
dedent|''
name|'def'
name|'_floating_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|'# TODO(tr3buchet): why leave auto_assigned floating IPs out?'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'auto_assigned'
op|'='
name|'False'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|floating_ip_fixed_ip_associate
name|'def'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'context'
op|','
name|'floating_address'
op|','
nl|'\n'
name|'fixed_address'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'fixed_address'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'fixed_address'
op|')'
newline|'\n'
dedent|''
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'floating_address'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'project_id'
op|'=='
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'=='
nl|'\n'
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'.'
name|'is_'
op|'('
name|'None'
op|')'
op|')'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'fixed_ip_id'"
op|':'
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|','
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rows'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpAssociateFailed'
op|'('
name|'address'
op|'='
name|'floating_address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|floating_ip_deallocate
name|'def'
name|'floating_ip_deallocate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'filter'
op|'('
name|'and_'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'project_id'
op|'!='
name|'null'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'project_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_destroy
name|'def'
name|'floating_ip_destroy'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_disassociate
name|'def'
name|'floating_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'floating_ip_ref'
op|'['
string|"'fixed_ip_id'"
op|']'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'fixed_ip_id'
op|'='
name|'None'
newline|'\n'
name|'floating_ip_ref'
op|'.'
name|'host'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_floating_ip_get_all
dedent|''
name|'def'
name|'_floating_ip_get_all'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_all
dedent|''
name|'def'
name|'floating_ip_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_refs'
op|'='
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'fixed_ip'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_refs'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoFloatingIpsDefined'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_refs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_all_by_host
dedent|''
name|'def'
name|'floating_ip_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'floating_ip_refs'
op|'='
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'fixed_ip'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'floating_ip_refs'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForHost'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'floating_ip_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_all_by_project
name|'def'
name|'floating_ip_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|'# TODO(tr3buchet): why do we not want auto_assigned floating IPs here?'
nl|'\n'
name|'return'
name|'_floating_ip_get_all'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'auto_assigned'
op|'='
name|'False'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_address
name|'def'
name|'floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_floating_ip_get_by_address
dedent|''
name|'def'
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# if address string is empty explicitly set it to None'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'address'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'fixed_ip.instance'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid floating IP %s in request"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidIpAddressError'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# If the floating IP has a project ID set, check to make sure'
nl|'\n'
comment|'# the non-admin user has access.'
nl|'\n'
dedent|''
name|'if'
name|'result'
op|'.'
name|'project_id'
name|'and'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'result'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_fixed_address
name|'def'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'context'
op|','
name|'fixed_address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'outerjoin'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'address'
op|'=='
name|'fixed_address'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_get_by_fixed_ip_id
name|'def'
name|'floating_ip_get_by_fixed_ip_id'
op|'('
name|'context'
op|','
name|'fixed_ip_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FloatingIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'fixed_ip_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|floating_ip_update
name|'def'
name|'floating_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_ip_ref'
op|'='
name|'_floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|')'
newline|'\n'
name|'float_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'float_ip_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FloatingIpExists'
op|'('
name|'address'
op|'='
name|'values'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'float_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|dnsdomain_get
name|'def'
name|'dnsdomain_get'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'domain'
op|'='
name|'fqdomain'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_dnsdomain_get_or_create
dedent|''
name|'def'
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'domain_ref'
op|'='
name|'dnsdomain_get'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'domain_ref'
op|':'
newline|'\n'
indent|'        '
name|'dns_ref'
op|'='
name|'models'
op|'.'
name|'DNSDomain'
op|'('
op|')'
newline|'\n'
name|'dns_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'domain'"
op|':'
name|'fqdomain'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'dns_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'domain_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|dnsdomain_register_for_zone
name|'def'
name|'dnsdomain_register_for_zone'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'zone'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'domain_ref'
op|'='
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'domain_ref'
op|'.'
name|'scope'
op|'='
string|"'private'"
newline|'\n'
name|'domain_ref'
op|'.'
name|'availability_zone'
op|'='
name|'zone'
newline|'\n'
name|'context'
op|'.'
name|'session'
op|'.'
name|'add'
op|'('
name|'domain_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|dnsdomain_register_for_project
name|'def'
name|'dnsdomain_register_for_project'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'domain_ref'
op|'='
name|'_dnsdomain_get_or_create'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
newline|'\n'
name|'domain_ref'
op|'.'
name|'scope'
op|'='
string|"'public'"
newline|'\n'
name|'domain_ref'
op|'.'
name|'project_id'
op|'='
name|'project'
newline|'\n'
name|'context'
op|'.'
name|'session'
op|'.'
name|'add'
op|'('
name|'domain_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|dnsdomain_unregister
name|'def'
name|'dnsdomain_unregister'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'domain'
op|'='
name|'fqdomain'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|dnsdomain_get_all
name|'def'
name|'dnsdomain_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'DNSDomain'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|','
nl|'\n'
name|'retry_on_request'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|fixed_ip_associate
name|'def'
name|'fixed_ip_associate'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'reserved'
op|'='
name|'False'
op|','
name|'virtual_interface_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Keyword arguments:\n    reserved -- should be a boolean value(True or False), exact value will be\n    used to filter on the fixed ip address\n    """'
newline|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_or_none'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'network_or_none'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'reserved'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'fixed_ip_ref'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetwork'
op|'('
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'network_uuid'
op|'='
name|'network_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'fixed_ip_ref'
op|'.'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|'('
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'params'
op|'='
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'virtual_interface_id'
name|'is'
name|'not'
name|'None'
op|'}'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip_ref'
op|'.'
name|'network_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'network_id'
newline|'\n'
dedent|''
name|'if'
name|'virtual_interface_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'virtual_interface_id'"
op|']'
op|'='
name|'virtual_interface_id'
newline|'\n'
nl|'\n'
dedent|''
name|'rows_updated'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'fixed_ip_ref'
op|'.'
name|'id'
op|')'
op|'.'
name|'filter'
op|'('
name|'network_or_none'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'reserved'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'update'
op|'('
name|'params'
op|','
name|'synchronize_session'
op|'='
string|"'evaluate'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rows_updated'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'The row was updated in a concurrent transaction, '"
nl|'\n'
string|"'we will fetch another row'"
op|')'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'RetryRequest'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FixedIpAssociateFailed'
op|'('
name|'net'
op|'='
name|'network_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|retry_on_request
name|'retry_on_request'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|fixed_ip_associate_pool
name|'def'
name|'fixed_ip_associate_pool'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|','
name|'virtual_interface_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'instance_uuid'
name|'and'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_or_none'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'network_or_none'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'None'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'fixed_ip_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreFixedIps'
op|'('
name|'net'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'params'
op|'='
op|'{'
string|"'allocated'"
op|':'
name|'virtual_interface_id'
name|'is'
name|'not'
name|'None'
op|'}'
newline|'\n'
name|'if'
name|'fixed_ip_ref'
op|'['
string|"'network_id'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'network_id'
newline|'\n'
dedent|''
name|'if'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
dedent|''
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
dedent|''
name|'if'
name|'virtual_interface_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'virtual_interface_id'"
op|']'
op|'='
name|'virtual_interface_id'
newline|'\n'
nl|'\n'
dedent|''
name|'rows_updated'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'fixed_ip_ref'
op|'['
string|"'network_id'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'None'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'fixed_ip_ref'
op|'['
string|"'address'"
op|']'
op|')'
op|'.'
name|'update'
op|'('
name|'params'
op|','
name|'synchronize_session'
op|'='
string|"'evaluate'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rows_updated'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'The row was updated in a concurrent transaction, '"
nl|'\n'
string|"'we will fetch another row'"
op|')'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'RetryRequest'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FixedIpAssociateFailed'
op|'('
name|'net'
op|'='
name|'network_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_create
name|'def'
name|'fixed_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fixed_ip_ref'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpExists'
op|'('
name|'address'
op|'='
name|'values'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'fixed_ip_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_bulk_create
name|'def'
name|'fixed_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'engine'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'with'
name|'engine'
op|'.'
name|'begin'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'tab'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'__table__'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'tab'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpExists'
op|'('
name|'address'
op|'='
name|'e'
op|'.'
name|'value'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_disassociate
name|'def'
name|'fixed_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_disassociate_all_by_timeout
dedent|''
dedent|''
name|'def'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'time'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): only update fixed ips that "belong" to this'
nl|'\n'
comment|'#             host; i.e. the network host or the instance'
nl|'\n'
comment|'#             host matches. Two queries necessary because'
nl|'\n'
comment|"#             join with update doesn't work."
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_filter'
op|'='
name|'or_'
op|'('
name|'and_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'multi_host'
op|'=='
name|'true'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|','
op|')'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'allocated'
op|'=='
name|'false'
op|'('
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'updated_at'
op|'<'
name|'time'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Network'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'id'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|')'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'host_filter'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'fixed_ip_ids'
op|'='
op|'['
name|'fip'
op|'['
number|'0'
op|']'
name|'for'
name|'fip'
name|'in'
name|'result'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip_ids'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'fixed_ip_ids'
op|')'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'synchronize_session'
op|'='
string|"'fetch'"
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get
name|'def'
name|'fixed_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'get_network'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
name|'if'
name|'get_network'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFound'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
comment|"# FIXME(sirp): shouldn't we just use project_only here to restrict the"
nl|'\n'
comment|'# results?'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'instance_get_by_uuid'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_all
dedent|''
name|'def'
name|'fixed_ip_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoFixedIpsDefined'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_address
name|'def'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fixed_ip_get_by_address
dedent|''
name|'def'
name|'_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'result'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'result'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid fixed IP Address %s in request"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'FixedIpInvalid'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(sirp): shouldn't we just use project_only here to restrict the"
nl|'\n'
comment|'# results?'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'nova'
op|'.'
name|'context'
op|'.'
name|'is_user_context'
op|'('
name|'context'
op|')'
name|'and'
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'_instance_get_by_uuid'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'session'
nl|'\n'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_floating_address
name|'def'
name|'fixed_ip_get_by_floating_address'
op|'('
name|'context'
op|','
name|'floating_address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip_id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|'=='
name|'floating_address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(tr3buchet) please don't invent an exception here, None is fine"
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_instance
name|'def'
name|'fixed_ip_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vif_and'
op|'='
name|'and_'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'outerjoin'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|','
name|'vif_and'
op|')'
op|'.'
name|'options'
op|'('
name|'contains_eager'
op|'('
string|'"virtual_interface"'
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'floating_ips'"
op|')'
op|')'
op|'.'
name|'order_by'
op|'('
name|'asc'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'created_at'
op|')'
op|','
nl|'\n'
name|'asc'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForInstance'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_by_host
dedent|''
name|'def'
name|'fixed_ip_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuids'
op|'='
name|'_instance_get_all_uuids_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_get_by_network_host
name|'def'
name|'fixed_ip_get_by_network_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetworkHost'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ips_by_virtual_interface
name|'def'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'virtual_interface_id'
op|'='
name|'vif_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'network'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'floating_ips'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|fixed_ip_update
name|'def'
name|'fixed_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fixed_ip_count_by_project
dedent|''
dedent|''
name|'def'
name|'_fixed_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'id'
op|','
op|')'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'project_id'
op|'=='
name|'project_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_create
name|'def'
name|'virtual_interface_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new virtual interface record in the database.\n\n    :param values: = dict containing column values\n    """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'vif_ref'
op|'='
name|'models'
op|'.'
name|'VirtualInterface'
op|'('
op|')'
newline|'\n'
name|'vif_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'vif_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_virtual_interface_query
dedent|''
name|'def'
name|'_virtual_interface_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VirtualInterface'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get
name|'def'
name|'virtual_interface_get'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param vif_id: = id of the virtual interface\n    """'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'vif_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_address
name|'def'
name|'virtual_interface_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param address: = the address of the interface you\'re looking to get\n    """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid virtual interface address %s in request"'
op|')'
op|'%'
name|'address'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidIpAddressError'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_uuid
name|'def'
name|'virtual_interface_get_by_uuid'
op|'('
name|'context'
op|','
name|'vif_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table.\n\n    :param vif_uuid: the uuid of the interface you\'re looking to get\n    """'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'vif_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'require_instance_exists_using_uuid'
newline|'\n'
DECL|function|virtual_interface_get_by_instance
name|'def'
name|'virtual_interface_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets all virtual interfaces for instance.\n\n    :param instance_uuid: = uuid of the instance to retrieve vifs for\n    """'
newline|'\n'
name|'vif_refs'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'order_by'
op|'('
name|'asc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'asc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_refs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_by_instance_and_network
name|'def'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets virtual interface for instance that\'s associated with network."""'
newline|'\n'
name|'vif_ref'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_delete_by_instance
name|'def'
name|'virtual_interface_delete_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete virtual interface records that are associated\n    with the instance given by instance_id.\n\n    :param instance_uuid: = uuid of instance\n    """'
newline|'\n'
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|virtual_interface_get_all
name|'def'
name|'virtual_interface_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all vifs."""'
newline|'\n'
name|'vif_refs'
op|'='
name|'_virtual_interface_query'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vif_refs'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_metadata_refs
dedent|''
name|'def'
name|'_metadata_refs'
op|'('
name|'metadata_dict'
op|','
name|'meta_class'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata_refs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'metadata_dict'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'metadata_dict'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'metadata_ref'
op|'='
name|'meta_class'
op|'('
op|')'
newline|'\n'
name|'metadata_ref'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'metadata_ref'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'metadata_refs'
op|'.'
name|'append'
op|'('
name|'metadata_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'metadata_refs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_validate_unique_server_name
dedent|''
name|'def'
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'lowername'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'base_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter'
op|'('
name|'func'
op|'.'
name|'lower'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'hostname'
op|')'
op|'=='
name|'lowername'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|'=='
string|"'project'"
op|':'
newline|'\n'
indent|'        '
name|'instance_with_same_name'
op|'='
name|'base_query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
op|'=='
string|"'global'"
op|':'
newline|'\n'
indent|'        '
name|'instance_with_same_name'
op|'='
name|'base_query'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Unknown osapi_compute_unique_server_name_scope value: %s'"
nl|'\n'
string|'\' Flag must be empty, "global" or\''
nl|'\n'
string|'\' "project"\''
op|')'
op|'%'
name|'CONF'
op|'.'
name|'osapi_compute_unique_server_name_scope'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'instance_with_same_name'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceExists'
op|'('
name|'name'
op|'='
name|'lowername'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_handle_objects_related_type_conversions
dedent|''
dedent|''
name|'def'
name|'_handle_objects_related_type_conversions'
op|'('
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make sure that certain things in values (which may have come from\n    an objects.instance.Instance object) are in suitable form for the\n    database.\n    """'
newline|'\n'
comment|'# NOTE(danms): Make sure IP addresses are passed as strings to'
nl|'\n'
comment|'# the database engine'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'('
string|"'access_ip_v4'"
op|','
string|"'access_ip_v6'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'in'
name|'values'
name|'and'
name|'values'
op|'['
name|'key'
op|']'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'str'
op|'('
name|'values'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'datetime_keys'
op|'='
op|'('
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'launched_at'"
op|','
string|"'terminated_at'"
op|')'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
op|'*'
name|'datetime_keys'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_check_instance_exists_in_project
dedent|''
name|'def'
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_create
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new Instance record in the database.\n\n    context - request context object\n    values - dict containing column values.\n    """'
newline|'\n'
nl|'\n'
comment|"# NOTE(rpodolyaka): create the default security group, if it doesn't exist."
nl|'\n'
comment|'# This must be done in a separate transaction, so that this one is not'
nl|'\n'
comment|'# aborted in case a concurrent one succeeds first and the unique constraint'
nl|'\n'
comment|'# for security group names is violated by a concurrent INSERT'
nl|'\n'
name|'security_group_ensure_default'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
name|'values'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_metadata_refs'
op|'('
nl|'\n'
name|'values'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|')'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'_metadata_refs'
op|'('
nl|'\n'
name|'values'
op|'.'
name|'get'
op|'('
string|"'system_metadata'"
op|')'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|')'
newline|'\n'
name|'_handle_objects_related_type_conversions'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'models'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'values'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'instance_ref'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'models'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'info_cache'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'info_cache'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'info_cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'['
string|"'info_cache'"
op|']'
op|'.'
name|'update'
op|'('
name|'info_cache'
op|')'
newline|'\n'
dedent|''
name|'security_groups'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'security_groups'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'extra'"
op|']'
op|'='
name|'models'
op|'.'
name|'InstanceExtra'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'extra'"
op|']'
op|'.'
name|'update'
op|'('
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'extra'"
op|']'
op|'.'
name|'update'
op|'('
name|'values'
op|'.'
name|'pop'
op|'('
string|"'extra'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_sec_group_models
name|'def'
name|'_get_sec_group_models'
op|'('
name|'session'
op|','
name|'security_groups'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'models'
op|'='
op|'['
op|']'
newline|'\n'
name|'default_group'
op|'='
name|'_security_group_ensure_default'
op|'('
name|'context'
op|','
name|'session'
op|')'
newline|'\n'
name|'if'
string|"'default'"
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'models'
op|'.'
name|'append'
op|'('
name|'default_group'
op|')'
newline|'\n'
comment|"# Generate a new list, so we don't modify the original"
nl|'\n'
name|'security_groups'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'security_groups'
name|'if'
name|'x'
op|'!='
string|"'default'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'models'
op|'.'
name|'extend'
op|'('
name|'_security_group_get_by_names'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|','
name|'context'
op|'.'
name|'project_id'
op|','
name|'security_groups'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'models'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'hostname'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'values'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'instance_ref'
op|'.'
name|'security_groups'
op|'='
name|'_get_sec_group_models'
op|'('
name|'session'
op|','
nl|'\n'
name|'security_groups'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# create the instance uuid to ec2_id mapping entry for instance'
nl|'\n'
dedent|''
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_data_get_for_user
dedent|''
name|'def'
name|'_instance_data_get_for_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|','
op|'('
nl|'\n'
name|'func'
op|'.'
name|'count'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'id'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vcpus'
op|')'
op|','
nl|'\n'
name|'func'
op|'.'
name|'sum'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'memory_mb'
op|')'
op|','
nl|'\n'
op|')'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'user_id'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'result'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'result'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): convert None to 0'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'result'
op|'['
number|'0'
op|']'
name|'or'
number|'0'
op|','
name|'result'
op|'['
number|'1'
op|']'
name|'or'
number|'0'
op|','
name|'result'
op|'['
number|'2'
op|']'
name|'or'
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|instance_destroy
name|'def'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'constraint'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_ref'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'constraint'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'constraint'
op|'.'
name|'apply'
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
name|'query'
op|')'
newline|'\n'
dedent|''
name|'count'
op|'='
name|'query'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|'('
op|')'
newline|'\n'
dedent|''
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceFault'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceExtra'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(snikitin): We can't use model_query here, because there is no"
nl|'\n'
comment|"# column 'deleted' in 'tags' table."
nl|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_by_uuid
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_get_by_uuid
dedent|''
name|'def'
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_build_instance_get'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get
name|'def'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'_build_instance_get'
op|'('
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'columns_to_join'
nl|'\n'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
comment|'# NOTE(sdague): catch all in case the db engine chokes on the'
nl|'\n'
comment|"# id because it's too long of an int to store."
nl|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid instance id %s in request"'
op|')'
op|'%'
name|'instance_id'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidID'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_build_instance_get
dedent|''
dedent|''
name|'def'
name|'_build_instance_get'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'True'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'security_groups.rules'"
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'info_cache'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'column'
name|'in'
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
op|':'
newline|'\n'
comment|'# Already always joined above'
nl|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'if'
string|"'extra.'"
name|'in'
name|'column'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'undefer'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
comment|'# NOTE(alaski) Stop lazy loading of columns not needed.'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'col'
name|'in'
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'col'
name|'not'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'noload'
op|'('
name|'col'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instances_fill_metadata
dedent|''
name|'def'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'instances'
op|','
nl|'\n'
name|'manual_joins'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Selectively fill instances with manually-joined metadata. Note that\n    instance will be converted to a dict.\n\n    :param context: security context\n    :param instances: list of instances to fill\n    :param manual_joins: list of tables to manually join (can be any\n                         combination of \'metadata\' and \'system_metadata\' or\n                         None to take the default of both)\n    """'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'instances'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'manual_joins'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'if'
string|"'metadata'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'row'
name|'in'
name|'_instance_metadata_get_multi'
op|'('
name|'context'
op|','
name|'uuids'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'sys_meta'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'if'
string|"'system_metadata'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'row'
name|'in'
name|'_instance_system_metadata_get_multi'
op|'('
name|'context'
op|','
name|'uuids'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sys_meta'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'pcidevs'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'if'
string|"'pci_devices'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'row'
name|'in'
name|'_instance_pcidevs_get_multi'
op|'('
name|'context'
op|','
name|'uuids'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pcidevs'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'filled_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'sys_meta'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'meta'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'if'
string|"'pci_devices'"
name|'in'
name|'manual_joins'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'['
string|"'pci_devices'"
op|']'
op|'='
name|'pcidevs'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
dedent|''
name|'filled_instances'
op|'.'
name|'append'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'filled_instances'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_manual_join_columns
dedent|''
name|'def'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Separate manually joined columns from columns_to_join\n\n    If columns_to_join contains \'metadata\', \'system_metadata\', or\n    \'pci_devices\' those columns are removed from columns_to_join and added\n    to a manual_joins list to be used with the _instances_fill_metadata method.\n\n    The columns_to_join formal parameter is copied and not modified, the return\n    tuple has the modified columns_to_join list to be used with joinedload in\n    a model query.\n\n    :param:columns_to_join: List of columns to join in a model query.\n    :return: tuple of (manual_joins, columns_to_join)\n    """'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
op|']'
newline|'\n'
name|'columns_to_join_new'
op|'='
name|'copy'
op|'.'
name|'copy'
op|'('
name|'columns_to_join'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
op|'('
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'pci_devices'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'column'
name|'in'
name|'columns_to_join_new'
op|':'
newline|'\n'
indent|'            '
name|'columns_to_join_new'
op|'.'
name|'remove'
op|'('
name|'column'
op|')'
newline|'\n'
name|'manual_joins'
op|'.'
name|'append'
op|'('
name|'column'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'manual_joins'
op|','
name|'columns_to_join_new'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_all
name|'def'
name|'instance_get_all'
op|'('
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join_new'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|','
name|'columns_to_join_new'
op|'='
op|'('
nl|'\n'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|')'
newline|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join_new'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|"# If we're not admin context, add appropriate filter.."
nl|'\n'
indent|'        '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'instances'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'instances'
op|','
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_all_by_filters
name|'def'
name|'instance_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|','
name|'sort_dir'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return instances matching all filters sorted by the primary key.\n\n    See instance_get_all_by_filters_sort for more information.\n    """'
newline|'\n'
comment|'# Invoke the API with the multiple sort keys and directions using the'
nl|'\n'
comment|'# single sort key/direction'
nl|'\n'
name|'return'
name|'instance_get_all_by_filters_sort'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'limit'
op|'='
name|'limit'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|','
nl|'\n'
name|'sort_keys'
op|'='
op|'['
name|'sort_key'
op|']'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
name|'sort_dir'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_all_by_filters_sort
name|'def'
name|'instance_get_all_by_filters_sort'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return instances that match all filters sorted the the given keys.\n    Deleted instances will be returned by default, unless there\'s a filter that\n    says otherwise.\n\n    Depending on the name of a filter, matching for that filter is\n    performed using either exact matching or as regular expression\n    matching. Exact matching is applied for the following filters::\n\n    |   [\'project_id\', \'user_id\', \'image_ref\',\n    |    \'vm_state\', \'instance_type_id\', \'uuid\',\n    |    \'metadata\', \'host\', \'system_metadata\']\n\n\n    A third type of filter (also using exact matching), filters\n    based on instance metadata tags when supplied under a special\n    key named \'filter\'::\n\n    |   filters = {\n    |       \'filter\': [\n    |           {\'name\': \'tag-key\', \'value\': \'<metakey>\'},\n    |           {\'name\': \'tag-value\', \'value\': \'<metaval>\'},\n    |           {\'name\': \'tag:<metakey>\', \'value\': \'<metaval>\'}\n    |       ]\n    |   }\n\n    Special keys are used to tweek the query further::\n\n    |   \'changes-since\' - only return instances updated after\n    |   \'deleted\' - only return (or exclude) deleted instances\n    |   \'soft_deleted\' - modify behavior of \'deleted\' to either\n    |                    include or exclude instances whose\n    |                    vm_state is SOFT_DELETED.\n\n    A fourth type of filter (also using exact matching), filters\n    based on instance tags (not metadata tags). There are two types\n    of these tags:\n\n    `tags` -- One or more strings that will be used to filter results\n            in an AND expression.\n\n    `tags-any` -- One or more strings that will be used to filter results in\n            an OR expression.\n\n    Tags should be represented as list::\n\n    |    filters = {\n    |        \'tags\': [some-tag, some-another-tag],\n    |        \'tags-any: [some-any-tag, some-another-any-tag]\n    |    }\n\n    """'
newline|'\n'
comment|'# NOTE(mriedem): If the limit is 0 there is no point in even going'
nl|'\n'
comment|'# to the database since nothing is going to be returned anyway.'
nl|'\n'
name|'if'
name|'limit'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'process_sort_params'
op|'('
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|','
nl|'\n'
name|'default_dir'
op|'='
string|"'desc'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'database'
op|'.'
name|'slave_connection'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'        '
name|'use_slave'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join_new'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|','
name|'columns_to_join_new'
op|'='
op|'('
nl|'\n'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query_prefix'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join_new'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'extra.'"
name|'in'
name|'column'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'options'
op|'('
name|'undefer'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Note: order_by is done in the sqlalchemy.utils.py paginate_query(),'
nl|'\n'
comment|'# no need to do it here as well'
nl|'\n'
nl|'\n'
comment|"# Make a copy of the filters dictionary to use going forward, as we'll"
nl|'\n'
comment|"# be modifying it and we shouldn't affect the caller's use of it."
nl|'\n'
dedent|''
dedent|''
name|'filters'
op|'='
name|'filters'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'changes-since'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'changes_since'
op|'='
name|'timeutils'
op|'.'
name|'normalize_time'
op|'('
name|'filters'
op|'['
string|"'changes-since'"
op|']'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|'>='
name|'changes_since'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deleted'
op|'='
name|'False'
newline|'\n'
name|'if'
string|"'deleted'"
name|'in'
name|'filters'
op|':'
newline|'\n'
comment|'# Instances can be soft or hard deleted and the query needs to'
nl|'\n'
comment|'# include or exclude both'
nl|'\n'
indent|'        '
name|'deleted'
op|'='
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'deleted'"
op|')'
newline|'\n'
name|'if'
name|'deleted'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'soft_deleted'"
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'delete'
op|'='
name|'or_'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'deleted'
op|'=='
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
nl|'\n'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'delete'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'deleted'
op|'=='
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter_by'
op|'('
name|'deleted'
op|'='
number|'0'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'soft_deleted'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
comment|'# It would be better to have vm_state not be nullable'
nl|'\n'
comment|'# but until then we test it explicitly as a workaround.'
nl|'\n'
indent|'                '
name|'not_soft_deleted'
op|'='
name|'or_'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vm_state'
op|'!='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'vm_state'
op|'=='
name|'null'
op|'('
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'not_soft_deleted'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
string|"'cleaned'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'cleaned'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'cleaned'
op|'=='
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'cleaned'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'tags'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'tags'
op|'='
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'tags'"
op|')'
newline|'\n'
comment|"# We build a JOIN ladder expression for each tag, JOIN'ing"
nl|'\n'
comment|'# the first tag to the instances table, and each subsequent'
nl|'\n'
comment|"# tag to the last JOIN'd tags table"
nl|'\n'
name|'first_tag'
op|'='
name|'tags'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'tags'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Tag'
op|'.'
name|'tag'
op|'=='
name|'first_tag'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'tag'
name|'in'
name|'tags'
op|':'
newline|'\n'
indent|'            '
name|'tag_alias'
op|'='
name|'aliased'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'join'
op|'('
name|'tag_alias'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'tags'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'tag_alias'
op|'.'
name|'tag'
op|'=='
name|'tag'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|"'tags-any'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'tags'
op|'='
name|'filters'
op|'.'
name|'pop'
op|'('
string|"'tags-any'"
op|')'
newline|'\n'
name|'tag_alias'
op|'='
name|'aliased'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'join'
op|'('
name|'tag_alias'
op|','
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'tags'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'query_prefix'
op|'.'
name|'filter'
op|'('
name|'tag_alias'
op|'.'
name|'tag'
op|'.'
name|'in_'
op|'('
name|'tags'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
comment|"# If we're not admin context, add appropriate filter.."
nl|'\n'
indent|'        '
name|'if'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'filters'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'filters'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
nl|'\n'
comment|'# Filters for exact matches that we can do along with the SQL query...'
nl|'\n'
comment|"# For other filters that don't match this, we will do regexp matching"
nl|'\n'
dedent|''
dedent|''
name|'exact_match_filter_names'
op|'='
op|'['
string|"'project_id'"
op|','
string|"'user_id'"
op|','
string|"'image_ref'"
op|','
nl|'\n'
string|"'vm_state'"
op|','
string|"'instance_type_id'"
op|','
string|"'uuid'"
op|','
nl|'\n'
string|"'metadata'"
op|','
string|"'host'"
op|','
string|"'task_state'"
op|','
nl|'\n'
string|"'system_metadata'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Filter the query'
nl|'\n'
name|'query_prefix'
op|'='
name|'_exact_instance_filter'
op|'('
name|'query_prefix'
op|','
nl|'\n'
name|'filters'
op|','
name|'exact_match_filter_names'
op|')'
newline|'\n'
name|'if'
name|'query_prefix'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'query_prefix'
op|'='
name|'_regex_instance_filter'
op|'('
name|'query_prefix'
op|','
name|'filters'
op|')'
newline|'\n'
name|'query_prefix'
op|'='
name|'_tag_instance_filter'
op|'('
name|'context'
op|','
name|'query_prefix'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
comment|'# paginate query'
nl|'\n'
name|'if'
name|'marker'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
name|'_instance_get_by_uuid'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
name|'marker'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'MarkerNotFound'
op|'('
name|'marker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'query_prefix'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'paginate_query'
op|'('
name|'query_prefix'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|','
name|'limit'
op|','
nl|'\n'
name|'sort_keys'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'InvalidSortKey'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidSortKey'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'query_prefix'
op|'.'
name|'all'
op|'('
op|')'
op|','
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_tag_instance_filter
dedent|''
name|'def'
name|'_tag_instance_filter'
op|'('
name|'context'
op|','
name|'query'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies tag filtering to an Instance query.\n\n    Returns the updated query.  This method alters filters to remove\n    keys that are tags.  This filters on resources by tags - this\n    method assumes that the caller will take care of access control\n\n    :param context: request context object\n    :param query: query to apply filters to\n    :param filters: dictionary of filters\n    """'
newline|'\n'
name|'if'
name|'filters'
op|'.'
name|'get'
op|'('
string|"'filter'"
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'query'
newline|'\n'
nl|'\n'
dedent|''
name|'model'
op|'='
name|'models'
op|'.'
name|'Instance'
newline|'\n'
name|'model_metadata'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
newline|'\n'
name|'model_uuid'
op|'='
name|'model_metadata'
op|'.'
name|'instance_uuid'
newline|'\n'
nl|'\n'
name|'or_query'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_to_list
name|'def'
name|'_to_list'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'val'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'val'
op|','
op|'('
name|'tuple'
op|','
name|'list'
op|','
name|'set'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
op|'('
name|'val'
op|','
op|')'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'filter_block'
name|'in'
name|'filters'
op|'['
string|"'filter'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'filter_block'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'filter_name'
op|'='
name|'filter_block'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'if'
name|'filter_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'tag_name'
op|'='
name|'filter_name'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'tag_val'
op|'='
name|'_to_list'
op|'('
name|'filter_block'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'filter_name'
op|'.'
name|'startswith'
op|'('
string|"'tag-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'tag_name'
name|'not'
name|'in'
op|'['
string|"'key'"
op|','
string|"'value'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Invalid field name: %s"'
op|')'
op|'%'
name|'tag_name'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
name|'err'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'subq'
op|'='
name|'getattr'
op|'('
name|'model_metadata'
op|','
name|'tag_name'
op|')'
op|'.'
name|'in_'
op|'('
name|'tag_val'
op|')'
newline|'\n'
name|'or_query'
op|'='
name|'subq'
name|'if'
name|'or_query'
name|'is'
name|'None'
name|'else'
name|'or_'
op|'('
name|'or_query'
op|','
name|'subq'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'filter_name'
op|'.'
name|'startswith'
op|'('
string|"'tag:'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'subq'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model_metadata'
op|','
op|'('
name|'model_uuid'
op|','
op|')'
op|','
nl|'\n'
name|'session'
op|'='
name|'query'
op|'.'
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'key'
op|'='
name|'tag_name'
op|')'
op|'.'
name|'filter'
op|'('
name|'model_metadata'
op|'.'
name|'value'
op|'.'
name|'in_'
op|'('
name|'tag_val'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'model'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'subq'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'or_query'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'subq'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model_metadata'
op|','
op|'('
name|'model_uuid'
op|','
op|')'
op|','
nl|'\n'
name|'session'
op|'='
name|'query'
op|'.'
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_query'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'model'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'subq'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_regexp_op_for_connection
dedent|''
name|'def'
name|'_get_regexp_op_for_connection'
op|'('
name|'db_connection'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'db_string'
op|'='
name|'db_connection'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"'+'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'regexp_op_map'
op|'='
op|'{'
nl|'\n'
string|"'postgresql'"
op|':'
string|"'~'"
op|','
nl|'\n'
string|"'mysql'"
op|':'
string|"'REGEXP'"
op|','
nl|'\n'
string|"'sqlite'"
op|':'
string|"'REGEXP'"
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'regexp_op_map'
op|'.'
name|'get'
op|'('
name|'db_string'
op|','
string|"'LIKE'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_regex_instance_filter
dedent|''
name|'def'
name|'_regex_instance_filter'
op|'('
name|'query'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies regular expression filtering to an Instance query.\n\n    Returns the updated query.\n\n    :param query: query to apply filters to\n    :param filters: dictionary of filters with regex values\n    """'
newline|'\n'
nl|'\n'
name|'model'
op|'='
name|'models'
op|'.'
name|'Instance'
newline|'\n'
name|'db_regexp_op'
op|'='
name|'_get_regexp_op_for_connection'
op|'('
name|'CONF'
op|'.'
name|'database'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'for'
name|'filter_name'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'filter_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'if'
string|"'property'"
op|'=='
name|'type'
op|'('
name|'column_attr'
op|')'
op|'.'
name|'__name__'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'filter_val'
op|'='
name|'filters'
op|'['
name|'filter_name'
op|']'
newline|'\n'
comment|'# Sometimes the REGEX filter value is not a string'
nl|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'filter_val'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filter_val'
op|'='
name|'str'
op|'('
name|'filter_val'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'db_regexp_op'
op|'=='
string|"'LIKE'"
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'op'
op|'('
name|'db_regexp_op'
op|')'
op|'('
nl|'\n'
string|"u'%'"
op|'+'
name|'filter_val'
op|'+'
string|"u'%'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'op'
op|'('
name|'db_regexp_op'
op|')'
op|'('
nl|'\n'
name|'filter_val'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_exact_instance_filter
dedent|''
name|'def'
name|'_exact_instance_filter'
op|'('
name|'query'
op|','
name|'filters'
op|','
name|'legal_keys'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Applies exact match filtering to an Instance query.\n\n    Returns the updated query.  Modifies filters argument to remove\n    filters consumed.\n\n    :param query: query to apply filters to\n    :param filters: dictionary of filters; values that are lists,\n                    tuples, sets, or frozensets cause an \'IN\' test to\n                    be performed, while exact matching (\'==\' operator)\n                    is used for other values\n    :param legal_keys: list of keys to apply exact filtering to\n    """'
newline|'\n'
nl|'\n'
name|'filter_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'model'
op|'='
name|'models'
op|'.'
name|'Instance'
newline|'\n'
nl|'\n'
comment|'# Walk through all the keys'
nl|'\n'
name|'for'
name|'key'
name|'in'
name|'legal_keys'
op|':'
newline|'\n'
comment|"# Skip ones we're not filtering on"
nl|'\n'
indent|'        '
name|'if'
name|'key'
name|'not'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# OK, filtering on this key; what value do we search for?'
nl|'\n'
dedent|''
name|'value'
op|'='
name|'filters'
op|'.'
name|'pop'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
name|'in'
op|'('
string|"'metadata'"
op|','
string|"'system_metadata'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'item'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'item'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'key'
op|'='
name|'k'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'value'
op|'='
name|'v'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'value'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'key'
op|'='
name|'k'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'any'
op|'('
name|'value'
op|'='
name|'v'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
op|'('
name|'list'
op|','
name|'tuple'
op|','
name|'set'
op|','
name|'frozenset'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
comment|'# empty IN-predicate; short circuit'
newline|'\n'
comment|'# Looking for values in a list; apply to query directly'
nl|'\n'
dedent|''
name|'column_attr'
op|'='
name|'getattr'
op|'('
name|'model'
op|','
name|'key'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'column_attr'
op|'.'
name|'in_'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# OK, simple exact match; save for later'
nl|'\n'
indent|'            '
name|'filter_dict'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
comment|'# Apply simple exact matches'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'filter_dict'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
op|'**'
name|'filter_dict'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|process_sort_params
dedent|''
name|'def'
name|'process_sort_params'
op|'('
name|'sort_keys'
op|','
name|'sort_dirs'
op|','
nl|'\n'
name|'default_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
nl|'\n'
name|'default_dir'
op|'='
string|"'asc'"
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Process the sort parameters to include default keys.\n\n    Creates a list of sort keys and a list of sort directions. Adds the default\n    keys to the end of the list if they are not already included.\n\n    When adding the default keys to the sort keys list, the associated\n    direction is:\n    1) The first element in the \'sort_dirs\' list (if specified), else\n    2) \'default_dir\' value (Note that \'asc\' is the default value since this is\n    the default in sqlalchemy.utils.paginate_query)\n\n    :param sort_keys: List of sort keys to include in the processed list\n    :param sort_dirs: List of sort directions to include in the processed list\n    :param default_keys: List of sort keys that need to be included in the\n                         processed list, they are added at the end of the list\n                         if not already specified.\n    :param default_dir: Sort direction associated with each of the default\n                        keys that are not supplied, used when they are added\n                        to the processed list\n    :returns: list of sort keys, list of sort directions\n    :raise exception.InvalidInput: If more sort directions than sort keys\n                                   are specified or if an invalid sort\n                                   direction is specified\n    """'
newline|'\n'
comment|'# Determine direction to use for when adding default keys'
nl|'\n'
name|'if'
name|'sort_dirs'
name|'and'
name|'len'
op|'('
name|'sort_dirs'
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'default_dir_value'
op|'='
name|'sort_dirs'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'default_dir_value'
op|'='
name|'default_dir'
newline|'\n'
nl|'\n'
comment|'# Create list of keys (do not modify the input list)'
nl|'\n'
dedent|''
name|'if'
name|'sort_keys'
op|':'
newline|'\n'
indent|'        '
name|'result_keys'
op|'='
name|'list'
op|'('
name|'sort_keys'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'result_keys'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# If a list of directions is not provided, use the default sort direction'
nl|'\n'
comment|'# for all provided keys'
nl|'\n'
dedent|''
name|'if'
name|'sort_dirs'
op|':'
newline|'\n'
indent|'        '
name|'result_dirs'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# Verify sort direction'
nl|'\n'
name|'for'
name|'sort_dir'
name|'in'
name|'sort_dirs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'sort_dir'
name|'not'
name|'in'
op|'('
string|"'asc'"
op|','
string|"'desc'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unknown sort direction, must be \'desc\' or \'asc\'"'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'result_dirs'
op|'.'
name|'append'
op|'('
name|'sort_dir'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'result_dirs'
op|'='
op|'['
name|'default_dir_value'
name|'for'
name|'_sort_key'
name|'in'
name|'result_keys'
op|']'
newline|'\n'
nl|'\n'
comment|'# Ensure that the key and direction length match'
nl|'\n'
dedent|''
name|'while'
name|'len'
op|'('
name|'result_dirs'
op|')'
op|'<'
name|'len'
op|'('
name|'result_keys'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result_dirs'
op|'.'
name|'append'
op|'('
name|'default_dir_value'
op|')'
newline|'\n'
comment|'# Unless more direction are specified, which is an error'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'result_dirs'
op|')'
op|'>'
name|'len'
op|'('
name|'result_keys'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Sort direction size exceeds sort key size"'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure defaults are included'
nl|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'default_keys'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'not'
name|'in'
name|'result_keys'
op|':'
newline|'\n'
indent|'            '
name|'result_keys'
op|'.'
name|'append'
op|'('
name|'key'
op|')'
newline|'\n'
name|'result_dirs'
op|'.'
name|'append'
op|'('
name|'default_dir_value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result_keys'
op|','
name|'result_dirs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_get_active_by_window_joined
name|'def'
name|'instance_get_active_by_window_joined'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return instances and joins that were active during window."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Instance'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join_new'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|','
name|'columns_to_join_new'
op|'='
op|'('
nl|'\n'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join_new'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'extra.'"
name|'in'
name|'column'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'undefer'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'terminated_at'
op|'=='
name|'null'
op|'('
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'terminated_at'
op|'>'
name|'begin'
op|')'
op|')'
newline|'\n'
name|'if'
name|'end'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'launched_at'
op|'<'
name|'end'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project_id'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|','
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_get_all_query
dedent|''
name|'def'
name|'_instance_get_all_query'
op|'('
name|'context'
op|','
name|'project_only'
op|'='
name|'False'
op|','
nl|'\n'
name|'joins'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'joins'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'joins'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'joins'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'extra.'"
name|'in'
name|'column'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'undefer'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host
dedent|''
name|'def'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
nl|'\n'
name|'manual_joins'
op|'='
name|'columns_to_join'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_get_all_uuids_by_host
dedent|''
name|'def'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a list of the instance uuids on a given host.\n\n    Returns a list of UUIDs, not Instance model objects. This internal version\n    allows you to specify a session object as a kwarg.\n    """'
newline|'\n'
name|'uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'tuple'
name|'in'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|','
op|')'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuids'
op|'.'
name|'append'
op|'('
name|'tuple'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'uuids'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host_and_node
dedent|''
name|'def'
name|'instance_get_all_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'manual_joins'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'candidates'
op|'='
op|'['
string|"'system_metadata'"
op|','
string|"'metadata'"
op|']'
newline|'\n'
name|'manual_joins'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'columns_to_join'
name|'if'
name|'x'
name|'in'
name|'candidates'
op|']'
newline|'\n'
name|'columns_to_join'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'columns_to_join'
op|')'
op|'-'
name|'set'
op|'('
name|'candidates'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
nl|'\n'
name|'context'
op|','
nl|'\n'
name|'joins'
op|'='
name|'columns_to_join'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'node'
op|'='
name|'node'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
name|'manual_joins'
op|'='
name|'manual_joins'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host_and_not_type
dedent|''
name|'def'
name|'instance_get_all_by_host_and_not_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'type_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'instance_type_id'
op|'!='
name|'type_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_grantee_security_groups
dedent|''
name|'def'
name|'instance_get_all_by_grantee_security_groups'
op|'('
name|'context'
op|','
name|'group_ids'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'group_ids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'_instance_get_all_query'
op|'('
name|'context'
op|')'
op|'.'
nl|'\n'
name|'join'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'security_groups'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|'.'
name|'rules'
op|'.'
name|'any'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|'.'
name|'group_id'
op|'.'
name|'in_'
op|'('
name|'group_ids'
op|')'
op|')'
op|')'
op|'.'
nl|'\n'
name|'all'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_floating_address_get_all
name|'def'
name|'instance_floating_address_get_all'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'floating_ips'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FloatingIp'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'address'
op|','
op|')'
op|')'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'FloatingIp'
op|'.'
name|'fixed_ip'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'floating_ip'
op|'.'
name|'address'
name|'for'
name|'floating_ip'
name|'in'
name|'floating_ips'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# NOTE(hanlind): This method can be removed as conductor RPC API moves to v2.0.'
nl|'\n'
DECL|function|instance_get_all_hung_in_rebooting
dedent|''
name|'def'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'context'
op|','
name|'reboot_window'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reboot_window'
op|'='
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'reboot_window'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): this is only used in the _poll_rebooting_instances()'
nl|'\n'
comment|'# call in compute/manager, so we can avoid the metadata lookups'
nl|'\n'
comment|'# explicitly'
nl|'\n'
name|'return'
name|'_instances_fill_metadata'
op|'('
name|'context'
op|','
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|'<='
name|'reboot_window'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|','
nl|'\n'
name|'manual_joins'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_retry_instance_update
dedent|''
name|'def'
name|'_retry_instance_update'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Wrap with oslo_db_api.wrap_db_retry, and also retry on\n    UnknownInstanceUpdateConflict.\n    """'
newline|'\n'
name|'exception_checker'
op|'='
name|'lambda'
name|'exc'
op|':'
name|'isinstance'
op|'('
name|'exc'
op|','
op|'('
name|'exception'
op|'.'
name|'UnknownInstanceUpdateConflict'
op|','
op|')'
op|')'
newline|'\n'
name|'return'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|','
nl|'\n'
name|'exception_checker'
op|'='
name|'exception_checker'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'_retry_instance_update'
op|'('
op|')'
newline|'\n'
DECL|function|instance_update
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
name|'expected'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_instance_update'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'values'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'_retry_instance_update'
op|'('
op|')'
newline|'\n'
DECL|function|instance_update_and_get_original
name|'def'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'expected'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on an instance and update it. Return\n    a shallow copy of the original instance reference, as well as the\n    updated one.\n\n    :param context: = request context object\n    :param instance_uuid: = instance uuid\n    :param values: = dict containing column values\n\n    If "expected_task_state" exists in values, the update can only happen\n    when the task state before update matches expected_task_state. Otherwise\n    a UnexpectedTaskStateError is thrown.\n\n    :returns: a tuple of the form (old_instance_ref, new_instance_ref)\n\n    Raises NotFound if instance does not exist.\n    """'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
op|'('
name|'copy'
op|'.'
name|'copy'
op|'('
name|'instance_ref'
op|')'
op|','
nl|'\n'
name|'_instance_update'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'expected'
op|','
name|'original'
op|'='
name|'instance_ref'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|"# NOTE(danms): This updates the instance's metadata list in-place and in"
nl|'\n'
comment|'# the database to avoid stale data and refresh issues. It assumes the'
nl|'\n'
comment|'# delete=True behavior of instance_metadata_update(...)'
nl|'\n'
DECL|function|_instance_metadata_update_in_place
dedent|''
dedent|''
name|'def'
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'metadata_type'
op|','
name|'model'
op|','
nl|'\n'
name|'metadata'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata'
op|'='
name|'dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'to_delete'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'keyvalue'
name|'in'
name|'instance'
op|'['
name|'metadata_type'
op|']'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
name|'keyvalue'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'if'
name|'key'
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'keyvalue'
op|'['
string|"'value'"
op|']'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
name|'key'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'key'
name|'not'
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'to_delete'
op|'.'
name|'append'
op|'('
name|'keyvalue'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE: we have to hard_delete here otherwise we will get more than one'
nl|'\n'
comment|'# system_metadata record when we read deleted for an instance;'
nl|'\n'
comment|"# regular metadata doesn't have the same problem because we don't"
nl|'\n'
comment|'# allow reading deleted regular metadata anywhere.'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'metadata_type'
op|'=='
string|"'system_metadata'"
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'condemned'
name|'in'
name|'to_delete'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'delete'
op|'('
name|'condemned'
op|')'
newline|'\n'
name|'instance'
op|'['
name|'metadata_type'
op|']'
op|'.'
name|'remove'
op|'('
name|'condemned'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'condemned'
name|'in'
name|'to_delete'
op|':'
newline|'\n'
indent|'            '
name|'condemned'
op|'.'
name|'soft_delete'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'newitem'
op|'='
name|'model'
op|'('
op|')'
newline|'\n'
name|'newitem'
op|'.'
name|'update'
op|'('
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
string|"'value'"
op|':'
name|'value'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'newitem'
op|')'
newline|'\n'
name|'instance'
op|'['
name|'metadata_type'
op|']'
op|'.'
name|'append'
op|'('
name|'newitem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_update
dedent|''
dedent|''
name|'def'
name|'_instance_update'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
name|'expected'
op|','
nl|'\n'
name|'original'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidUUID'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'expected'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Coerce all single values to singleton lists'
nl|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
name|'k'
op|':'
op|'['
name|'None'
op|']'
name|'if'
name|'v'
name|'is'
name|'None'
name|'else'
name|'sqlalchemyutils'
op|'.'
name|'to_list'
op|'('
name|'v'
op|')'
nl|'\n'
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'expected'
op|')'
op|'}'
newline|'\n'
nl|'\n'
comment|"# Extract 'expected_' values from values dict, as these aren't actually"
nl|'\n'
comment|'# updates'
nl|'\n'
dedent|''
name|'for'
name|'field'
name|'in'
op|'('
string|"'task_state'"
op|','
string|"'vm_state'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_field'
op|'='
string|"'expected_%s'"
op|'%'
name|'field'
newline|'\n'
name|'if'
name|'expected_field'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
name|'expected_field'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# Coerce all single values to singleton lists'
nl|'\n'
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'['
name|'field'
op|']'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'['
name|'field'
op|']'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'to_list'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
comment|'# Values which need to be updated separately'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'metadata'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'metadata'"
op|','
name|'None'
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'system_metadata'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'_handle_objects_related_type_conversions'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Hostname is potentially unique, but this is enforced in code rather'
nl|'\n'
comment|'# than the DB. The query below races, but the number of users of'
nl|'\n'
comment|'# osapi_compute_unique_server_name_scope is small, and a robust fix'
nl|'\n'
comment|'# will be complex. This is intentionally left as is for the moment.'
nl|'\n'
name|'if'
string|"'hostname'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'        '
name|'_validate_unique_server_name'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'values'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'compare'
op|'='
name|'models'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|','
op|'**'
name|'expected'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'True'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'update_on_match'
op|'('
name|'compare'
op|','
string|"'uuid'"
op|','
name|'values'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'update_match'
op|'.'
name|'NoRowsMatched'
op|':'
newline|'\n'
comment|'# Update failed. Try to find why and raise a specific error.'
nl|'\n'
nl|'\n'
comment|'# We should get here only because our expected values were not current'
nl|'\n'
comment|'# when update_on_match executed. Having failed, we now have a hint that'
nl|'\n'
comment|'# the values are out of date and should check them.'
nl|'\n'
nl|'\n'
comment|'# This code is made more complex because we are using repeatable reads.'
nl|'\n'
comment|'# If we have previously read the original instance in the current'
nl|'\n'
comment|'# transaction, reading it again will return the same data, even though'
nl|'\n'
comment|'# the above update failed because it has changed: it is not possible to'
nl|'\n'
comment|'# determine what has changed in this transaction. In this case we raise'
nl|'\n'
comment|'# UnknownInstanceUpdateConflict, which will cause the operation to be'
nl|'\n'
comment|'# retried in a new transaction.'
nl|'\n'
nl|'\n'
comment|'# Because of the above, if we have previously read the instance in the'
nl|'\n'
comment|"# current transaction it will have been passed as 'original', and there"
nl|'\n'
comment|'# is no point refreshing it. If we have not previously read the'
nl|'\n'
comment|'# instance, we can fetch it here and we will get fresh data.'
nl|'\n'
indent|'        '
name|'if'
name|'original'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'original'
op|'='
name|'_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conflicts_expected'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'conflicts_actual'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
op|'('
name|'field'
op|','
name|'expected_values'
op|')'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'actual'
op|'='
name|'original'
op|'['
name|'field'
op|']'
newline|'\n'
name|'if'
name|'actual'
name|'not'
name|'in'
name|'expected_values'
op|':'
newline|'\n'
indent|'                '
name|'conflicts_expected'
op|'['
name|'field'
op|']'
op|'='
name|'expected_values'
newline|'\n'
name|'conflicts_actual'
op|'['
name|'field'
op|']'
op|'='
name|'actual'
newline|'\n'
nl|'\n'
comment|'# Exception properties'
nl|'\n'
dedent|''
dedent|''
name|'exc_props'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'expected'"
op|':'
name|'conflicts_expected'
op|','
nl|'\n'
string|"'actual'"
op|':'
name|'conflicts_actual'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# There was a conflict, but something (probably the MySQL read view,'
nl|'\n'
comment|'# but possibly an exceptionally unlikely second race) is preventing us'
nl|'\n'
comment|"# from seeing what it is. When we go round again we'll get a fresh"
nl|'\n'
comment|'# transaction and a fresh read view.'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'conflicts_actual'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'UnknownInstanceUpdateConflict'
op|'('
op|'**'
name|'exc_props'
op|')'
newline|'\n'
nl|'\n'
comment|'# Task state gets special handling for convenience. We raise the'
nl|'\n'
comment|'# specific error UnexpectedDeletingTaskStateError or'
nl|'\n'
comment|'# UnexpectedTaskStateError as appropriate'
nl|'\n'
dedent|''
name|'if'
string|"'task_state'"
name|'in'
name|'conflicts_actual'
op|':'
newline|'\n'
indent|'            '
name|'conflict_task_state'
op|'='
name|'conflicts_actual'
op|'['
string|"'task_state'"
op|']'
newline|'\n'
name|'if'
name|'conflict_task_state'
op|'=='
name|'task_states'
op|'.'
name|'DELETING'
op|':'
newline|'\n'
indent|'                '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
newline|'\n'
nl|'\n'
comment|'# Everything else is an InstanceUpdateConflict'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'InstanceUpdateConflict'
newline|'\n'
nl|'\n'
dedent|''
name|'raise'
name|'exc'
op|'('
op|'**'
name|'exc_props'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
string|"'metadata'"
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
name|'metadata'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'system_metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'_instance_metadata_update_in_place'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
string|"'system_metadata'"
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'system_metadata'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_add_security_group
dedent|''
name|'def'
name|'instance_add_security_group'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate the given security group with the given instance."""'
newline|'\n'
name|'sec_group_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|'('
op|')'
newline|'\n'
name|'sec_group_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'security_group_id'"
op|':'
name|'security_group_id'
op|'}'
op|')'
newline|'\n'
name|'sec_group_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_remove_security_group
name|'def'
name|'instance_remove_security_group'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate the given security group from the given instance."""'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|instance_info_cache_get
name|'def'
name|'instance_info_cache_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets an instance info cache from the table.\n\n    :param instance_uuid: = uuid of the info cache\'s instance\n    """'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|instance_info_cache_update
name|'def'
name|'instance_info_cache_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update an instance info cache record in the table.\n\n    :param instance_uuid: = uuid of info cache\'s instance\n    :param values: = dict containing column values to update\n    """'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'info_cache'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'info_cache'
name|'and'
name|'info_cache'
op|'['
string|"'deleted'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceInfoCacheNotFound'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'info_cache'
op|':'
newline|'\n'
comment|"# NOTE(tr3buchet): just in case someone blows away an instance's"
nl|'\n'
comment|'#                  cache entry, re-create it.'
nl|'\n'
indent|'        '
name|'info_cache'
op|'='
name|'models'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'info_cache'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
comment|'# NOTE(sirp): Possible race if two greenthreads attempt to'
nl|'\n'
comment|'# recreate the instance cache entry at the same time. First one'
nl|'\n'
comment|'# wins.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'info_cache'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|instance_info_cache_delete
name|'def'
name|'instance_info_cache_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deletes an existing instance_info_cache record\n\n    :param instance_uuid: = uuid of the instance tied to the cache record\n    """'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceInfoCache'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_extra_create
dedent|''
name|'def'
name|'_instance_extra_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inst_extra_ref'
op|'='
name|'models'
op|'.'
name|'InstanceExtra'
op|'('
op|')'
newline|'\n'
name|'inst_extra_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'inst_extra_ref'
op|'.'
name|'save'
op|'('
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
name|'return'
name|'inst_extra_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|instance_extra_update_by_uuid
name|'def'
name|'instance_extra_update_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows_updated'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceExtra'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'rows_updated'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"Created instance_extra for %s"'
op|'%'
name|'instance_uuid'
op|')'
newline|'\n'
name|'create_values'
op|'='
name|'copy'
op|'.'
name|'copy'
op|'('
name|'values'
op|')'
newline|'\n'
name|'create_values'
op|'['
string|'"instance_uuid"'
op|']'
op|'='
name|'instance_uuid'
newline|'\n'
name|'_instance_extra_create'
op|'('
name|'context'
op|','
name|'create_values'
op|')'
newline|'\n'
name|'rows_updated'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'rows_updated'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|instance_extra_get_by_instance_uuid
name|'def'
name|'instance_extra_get_by_instance_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'columns'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceExtra'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'columns'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns'
op|'='
op|'['
string|"'numa_topology'"
op|','
string|"'pci_requests'"
op|','
string|"'flavor'"
op|','
string|"'vcpu_model'"
op|','
nl|'\n'
string|"'migration_context'"
op|']'
newline|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'undefer'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'instance_extra'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'instance_extra'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|key_pair_create
name|'def'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'key_pair_ref'
op|'='
name|'models'
op|'.'
name|'KeyPair'
op|'('
op|')'
newline|'\n'
name|'key_pair_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'key_pair_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
name|'return'
name|'key_pair_ref'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeyPairExists'
op|'('
name|'key_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|key_pair_destroy
name|'def'
name|'key_pair_destroy'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeypairNotFound'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|','
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|key_pair_get
name|'def'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'KeypairNotFound'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|','
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|key_pair_get_all_by_user
name|'def'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|key_pair_count_by_user
name|'def'
name|'key_pair_count_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'KeyPair'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_associate
dedent|''
name|'def'
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'network_id'
op|'='
name|'None'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate a project with a network.\n\n    called by project_get_networks under certain conditions\n    and network manager add_network_to_project()\n\n    only associate if the project doesn\'t already have a network\n    or if force is True\n\n    force solves race condition where a fresh project has multiple instance\n    builds simultaneously picked up by multiple network hosts which attempt\n    to associate the project with multiple networks\n    force should only be used as a direct consequence of user request\n    all automated requests should not use force\n    """'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|network_query
indent|'        '
name|'def'
name|'network_query'
op|'('
name|'project_filter'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filter_kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_filter'
op|'}'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'filter_kwargs'
op|'['
string|"'id'"
op|']'
op|'='
name|'id'
newline|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
op|'**'
name|'filter_kwargs'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'force'
op|':'
newline|'\n'
comment|'# find out if project has a network'
nl|'\n'
indent|'            '
name|'network_ref'
op|'='
name|'network_query'
op|'('
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'force'
name|'or'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
comment|"# in force mode or project doesn't have a network so associate"
nl|'\n'
comment|'# with a new network'
nl|'\n'
nl|'\n'
comment|'# get new network'
nl|'\n'
indent|'            '
name|'network_ref'
op|'='
name|'network_query'
op|'('
name|'None'
op|','
name|'network_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NoMoreNetworks'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# associate with network'
nl|'\n'
comment|"# NOTE(vish): if with_lockmode isn't supported, as in sqlite,"
nl|'\n'
comment|'#             then this has concurrency issues'
nl|'\n'
dedent|''
name|'network_ref'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'project_id'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'network_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'network_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_network_ips_query
dedent|''
name|'def'
name|'_network_ips_query'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_count_reserved_ips
dedent|''
name|'def'
name|'network_count_reserved_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_network_ips_query'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'True'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_create_safe
dedent|''
name|'def'
name|'network_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'network_ref'
op|'='
name|'models'
op|'.'
name|'Network'
op|'('
op|')'
newline|'\n'
name|'network_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'network_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'network_ref'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'DuplicateVlan'
op|'('
name|'vlan'
op|'='
name|'values'
op|'['
string|"'vlan'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_delete_safe
dedent|''
dedent|''
name|'def'
name|'network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'allocated'
op|'='
name|'True'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
name|'if'
name|'result'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkInUse'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
dedent|''
name|'network_ref'
op|'='
name|'_network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|'='
name|'network_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'session'
op|'.'
name|'delete'
op|'('
name|'network_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_disassociate
dedent|''
dedent|''
name|'def'
name|'network_disassociate'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'disassociate_host'
op|','
nl|'\n'
name|'disassociate_project'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'net_update'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'disassociate_project'
op|':'
newline|'\n'
indent|'        '
name|'net_update'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'disassociate_host'
op|':'
newline|'\n'
indent|'        '
name|'net_update'
op|'['
string|"'host'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'net_update'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_network_get
dedent|''
name|'def'
name|'_network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'project_only'
op|'='
string|"'allow_none'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get
name|'def'
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'project_only'
op|'='
string|"'allow_none'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get_all
name|'def'
name|'network_get_all'
op|'('
name|'context'
op|','
name|'project_only'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_get_all_by_uuids
name|'def'
name|'network_get_all_by_uuids'
op|'('
name|'context'
op|','
name|'network_uuids'
op|','
name|'project_only'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'network_uuids'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check if the result contains all the networks'
nl|'\n'
comment|'# we are looking for'
nl|'\n'
dedent|''
name|'for'
name|'network_uuid'
name|'in'
name|'network_uuids'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'network'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'network'
op|'['
string|"'uuid'"
op|']'
op|'=='
name|'network_uuid'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'project_only'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForProject'
op|'('
nl|'\n'
name|'network_uuid'
op|'='
name|'network_uuid'
op|','
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_associated_fixed_ips_query
dedent|''
name|'def'
name|'_get_associated_fixed_ips_query'
op|'('
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): The ugly joins here are to solve a performance issue and'
nl|'\n'
comment|'#             should be removed once we can add and remove leases'
nl|'\n'
comment|'#             without regenerating the whole list'
nl|'\n'
indent|'    '
name|'vif_and'
op|'='
name|'and_'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'inst_and'
op|'='
name|'and_'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): This subquery left joins the minimum interface id for each'
nl|'\n'
comment|'#             instance. If the join succeeds (i.e. the 11th column is not'
nl|'\n'
comment|'#             null), then the fixed ip is on the first interface.'
nl|'\n'
name|'subq'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'func'
op|'.'
name|'min'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'id'
op|')'
op|'.'
name|'label'
op|'('
string|'"id"'
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'instance_uuid'
op|')'
op|'.'
name|'group_by'
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'instance_uuid'
op|')'
op|'.'
name|'subquery'
op|'('
op|')'
newline|'\n'
name|'subq_and'
op|'='
name|'and_'
op|'('
name|'subq'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'subq'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'address'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VirtualInterface'
op|'.'
name|'address'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'hostname'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'updated_at'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'created_at'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'allocated'
op|','
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'leased'
op|','
nl|'\n'
name|'subq'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'deleted'
op|'=='
number|'0'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|'=='
name|'network_id'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'VirtualInterface'
op|','
name|'vif_and'
op|')'
op|')'
op|'.'
name|'join'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
name|'inst_and'
op|')'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'subq'
op|','
name|'subq_and'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|'!='
name|'null'
op|'('
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'virtual_interface_id'
op|'!='
name|'null'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_associated_fixed_ips
dedent|''
name|'def'
name|'network_get_associated_fixed_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# FIXME(sirp): since this returns fixed_ips, this would be better named'
nl|'\n'
comment|'# fixed_ip_get_all_by_network.'
nl|'\n'
indent|'    '
name|'query'
op|'='
name|'_get_associated_fixed_ips_query'
op|'('
name|'network_id'
op|','
name|'host'
op|')'
newline|'\n'
name|'result'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'datum'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'cleaned'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'cleaned'
op|'['
string|"'address'"
op|']'
op|'='
name|'datum'
op|'['
number|'0'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'datum'
op|'['
number|'1'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'datum'
op|'['
number|'2'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_id'"
op|']'
op|'='
name|'datum'
op|'['
number|'3'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_address'"
op|']'
op|'='
name|'datum'
op|'['
number|'4'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_hostname'"
op|']'
op|'='
name|'datum'
op|'['
number|'5'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_updated'"
op|']'
op|'='
name|'datum'
op|'['
number|'6'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_created'"
op|']'
op|'='
name|'datum'
op|'['
number|'7'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'allocated'"
op|']'
op|'='
name|'datum'
op|'['
number|'8'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'leased'"
op|']'
op|'='
name|'datum'
op|'['
number|'9'
op|']'
newline|'\n'
comment|'# NOTE(vish): default_route is True if this fixed ip is on the first'
nl|'\n'
comment|'#             interface its instance.'
nl|'\n'
name|'cleaned'
op|'['
string|"'default_route'"
op|']'
op|'='
name|'datum'
op|'['
number|'10'
op|']'
name|'is'
name|'not'
name|'None'
newline|'\n'
name|'data'
op|'.'
name|'append'
op|'('
name|'cleaned'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_in_use_on_host
dedent|''
name|'def'
name|'network_in_use_on_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_get_associated_fixed_ips_query'
op|'('
name|'network_id'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'query'
op|'.'
name|'count'
op|'('
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_network_get_query
dedent|''
name|'def'
name|'_network_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_uuid
dedent|''
name|'def'
name|'network_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForUUID'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_cidr
dedent|''
name|'def'
name|'network_get_by_cidr'
op|'('
name|'context'
op|','
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'cidr'
op|'=='
name|'cidr'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'cidr_v6'
op|'=='
name|'cidr'
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFoundForCidr'
op|'('
name|'cidr'
op|'='
name|'cidr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_all_by_host
dedent|''
name|'def'
name|'network_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'fixed_host_filter'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'and_'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|'!='
name|'null'
op|'('
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
op|')'
newline|'\n'
name|'fixed_ip_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'FixedIp'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'network_id'
op|','
op|')'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'outerjoin'
op|'('
op|'('
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Instance'
op|'.'
name|'uuid'
op|'=='
nl|'\n'
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'instance_uuid'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
name|'fixed_host_filter'
op|')'
newline|'\n'
comment|'# NOTE(vish): return networks that have host set'
nl|'\n'
comment|'#             or that have a fixed ip with host set'
nl|'\n'
comment|'#             or that have an instance with host set'
nl|'\n'
name|'host_filter'
op|'='
name|'or_'
op|'('
name|'models'
op|'.'
name|'Network'
op|'.'
name|'host'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Network'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'fixed_ip_query'
op|'.'
name|'subquery'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'_network_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'host_filter'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|retry_on_request
name|'retry_on_request'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|network_set_host
name|'def'
name|'network_set_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'network_ref'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'network_ref'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'network_ref'
op|'.'
name|'host'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'rows_updated'
op|'='
name|'_network_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'network_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'None'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
name|'host_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rows_updated'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'The row was updated in a concurrent transaction, '"
nl|'\n'
string|"'we will fetch another row'"
op|')'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'RetryRequest'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'NetworkSetHostFailed'
op|'('
name|'network_id'
op|'='
name|'network_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|network_update
name|'def'
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'='
name|'_network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'network_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'network_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'DuplicateVlan'
op|'('
name|'vlan'
op|'='
name|'values'
op|'['
string|"'vlan'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'network_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get
name|'def'
name|'quota_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'model'
op|'='
name|'models'
op|'.'
name|'ProjectUserQuota'
name|'if'
name|'user_id'
name|'else'
name|'models'
op|'.'
name|'Quota'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
newline|'\n'
name|'if'
name|'user_id'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'user_id'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProjectUserQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get_all_by_project_and_user
name|'def'
name|'quota_get_all_by_project_and_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'user_quotas'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProjectUserQuota'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'ProjectUserQuota'
op|'.'
name|'resource'
op|','
nl|'\n'
name|'models'
op|'.'
name|'ProjectUserQuota'
op|'.'
name|'hard_limit'
op|')'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|','
string|"'user_id'"
op|':'
name|'user_id'
op|'}'
newline|'\n'
name|'for'
name|'user_quota'
name|'in'
name|'user_quotas'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'user_quota'
op|'.'
name|'resource'
op|']'
op|'='
name|'user_quota'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get_all_by_project
name|'def'
name|'quota_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_get_all
name|'def'
name|'quota_get_all'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProjectUserQuota'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_create
dedent|''
name|'def'
name|'quota_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'per_user'
op|'='
name|'user_id'
name|'and'
name|'resource'
name|'not'
name|'in'
name|'PER_PROJECT_QUOTAS'
newline|'\n'
name|'quota_ref'
op|'='
name|'models'
op|'.'
name|'ProjectUserQuota'
op|'('
op|')'
name|'if'
name|'per_user'
name|'else'
name|'models'
op|'.'
name|'Quota'
op|'('
op|')'
newline|'\n'
name|'if'
name|'per_user'
op|':'
newline|'\n'
indent|'        '
name|'quota_ref'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
dedent|''
name|'quota_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'quota_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_ref'
op|'.'
name|'hard_limit'
op|'='
name|'limit'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'quota_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaExists'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|','
name|'resource'
op|'='
name|'resource'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'quota_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_update
dedent|''
name|'def'
name|'quota_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'per_user'
op|'='
name|'user_id'
name|'and'
name|'resource'
name|'not'
name|'in'
name|'PER_PROJECT_QUOTAS'
newline|'\n'
name|'model'
op|'='
name|'models'
op|'.'
name|'ProjectUserQuota'
name|'if'
name|'per_user'
name|'else'
name|'models'
op|'.'
name|'Quota'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
newline|'\n'
name|'if'
name|'per_user'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'update'
op|'('
op|'{'
string|"'hard_limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'per_user'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProjectUserQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_class_get
name|'def'
name|'quota_class_get'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_get_default
dedent|''
name|'def'
name|'quota_class_get_default'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'_DEFAULT_QUOTA_NAME'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'class_name'"
op|':'
name|'_DEFAULT_QUOTA_NAME'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_class_get_all_by_name
name|'def'
name|'quota_class_get_all_by_name'
op|'('
name|'context'
op|','
name|'class_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
string|"'class_name'"
op|':'
name|'class_name'
op|'}'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
op|'.'
name|'hard_limit'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_create
dedent|''
name|'def'
name|'quota_class_create'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'quota_class_ref'
op|'='
name|'models'
op|'.'
name|'QuotaClass'
op|'('
op|')'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'class_name'
op|'='
name|'class_name'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'hard_limit'
op|'='
name|'limit'
newline|'\n'
name|'quota_class_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'quota_class_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_update
dedent|''
name|'def'
name|'quota_class_update'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaClass'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'update'
op|'('
op|'{'
string|"'hard_limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|'('
name|'class_name'
op|'='
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_usage_get
name|'def'
name|'quota_usage_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
newline|'\n'
name|'if'
name|'user_id'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'resource'
name|'not'
name|'in'
name|'PER_PROJECT_QUOTAS'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'None'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_quota_usage_get_all
dedent|''
name|'def'
name|'_quota_usage_get_all'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
name|'result'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|'}'
newline|'\n'
name|'if'
name|'user_id'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'QuotaUsage'
op|'.'
name|'user_id'
op|'=='
name|'user_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'QuotaUsage'
op|'.'
name|'user_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'result'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'user_id'
newline|'\n'
nl|'\n'
dedent|''
name|'rows'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'row'
op|'.'
name|'resource'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'['
string|"'in_use'"
op|']'
op|'+='
name|'row'
op|'.'
name|'in_use'
newline|'\n'
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'['
string|"'reserved'"
op|']'
op|'+='
name|'row'
op|'.'
name|'reserved'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'dict'
op|'('
name|'in_use'
op|'='
name|'row'
op|'.'
name|'in_use'
op|','
nl|'\n'
name|'reserved'
op|'='
name|'row'
op|'.'
name|'reserved'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_usage_get_all_by_project_and_user
name|'def'
name|'quota_usage_get_all_by_project_and_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_quota_usage_get_all'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|quota_usage_get_all_by_project
name|'def'
name|'quota_usage_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_quota_usage_get_all'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_quota_usage_create
dedent|''
name|'def'
name|'_quota_usage_create'
op|'('
name|'project_id'
op|','
name|'user_id'
op|','
name|'resource'
op|','
name|'in_use'
op|','
nl|'\n'
name|'reserved'
op|','
name|'until_refresh'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'quota_usage_ref'
op|'='
name|'models'
op|'.'
name|'QuotaUsage'
op|'('
op|')'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'in_use'
op|'='
name|'in_use'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'reserved'
op|'='
name|'reserved'
newline|'\n'
name|'quota_usage_ref'
op|'.'
name|'until_refresh'
op|'='
name|'until_refresh'
newline|'\n'
comment|'# updated_at is needed for judgement of max_age'
nl|'\n'
name|'quota_usage_ref'
op|'.'
name|'updated_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'quota_usage_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'quota_usage_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_usage_update
dedent|''
name|'def'
name|'quota_usage_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'resource'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'updates'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'in_use'"
op|','
string|"'reserved'"
op|','
string|"'until_refresh'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|'['
name|'key'
op|']'
op|'='
name|'kwargs'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
name|'resource'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'QuotaUsage'
op|'.'
name|'user_id'
op|'=='
name|'user_id'
op|','
nl|'\n'
name|'models'
op|'.'
name|'QuotaUsage'
op|'.'
name|'user_id'
op|'=='
name|'null'
op|'('
op|')'
op|')'
op|')'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reservation_create
dedent|''
dedent|''
name|'def'
name|'_reservation_create'
op|'('
name|'uuid'
op|','
name|'usage'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'resource'
op|','
nl|'\n'
name|'delta'
op|','
name|'expire'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reservation_ref'
op|'='
name|'models'
op|'.'
name|'Reservation'
op|'('
op|')'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'usage_id'
op|'='
name|'usage'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'resource'
op|'='
name|'resource'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'delta'
op|'='
name|'delta'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'expire'
op|'='
name|'expire'
newline|'\n'
name|'reservation_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'reservation_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
comment|"# NOTE(johannes): The quota code uses SQL locking to ensure races don't"
nl|'\n'
comment|'# cause under or over counting of resources. To avoid deadlocks, this'
nl|'\n'
comment|'# code always acquires the lock on quota_usages before acquiring the lock'
nl|'\n'
comment|'# on reservations.'
nl|'\n'
nl|'\n'
DECL|function|_get_project_user_quota_usages
dedent|''
name|'def'
name|'_get_project_user_quota_usages'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'order_by'
op|'('
name|'models'
op|'.'
name|'QuotaUsage'
op|'.'
name|'id'
op|'.'
name|'asc'
op|'('
op|')'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'proj_result'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'user_result'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
comment|'# Get the total count of in_use,reserved'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'proj_result'
op|'.'
name|'setdefault'
op|'('
name|'row'
op|'.'
name|'resource'
op|','
nl|'\n'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'0'
op|','
name|'reserved'
op|'='
number|'0'
op|','
name|'total'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
name|'proj_result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'['
string|"'in_use'"
op|']'
op|'+='
name|'row'
op|'.'
name|'in_use'
newline|'\n'
name|'proj_result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'['
string|"'reserved'"
op|']'
op|'+='
name|'row'
op|'.'
name|'reserved'
newline|'\n'
name|'proj_result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'['
string|"'total'"
op|']'
op|'+='
op|'('
name|'row'
op|'.'
name|'in_use'
op|'+'
name|'row'
op|'.'
name|'reserved'
op|')'
newline|'\n'
name|'if'
name|'row'
op|'.'
name|'user_id'
name|'is'
name|'None'
name|'or'
name|'row'
op|'.'
name|'user_id'
op|'=='
name|'user_id'
op|':'
newline|'\n'
indent|'            '
name|'user_result'
op|'['
name|'row'
op|'.'
name|'resource'
op|']'
op|'='
name|'row'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'proj_result'
op|','
name|'user_result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_quota_usage_if_missing
dedent|''
name|'def'
name|'_create_quota_usage_if_missing'
op|'('
name|'user_usages'
op|','
name|'resource'
op|','
name|'until_refresh'
op|','
nl|'\n'
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Creates a QuotaUsage record and adds to user_usages if not present.\n\n    :param user_usages:   dict of resource keys to QuotaUsage records. This is\n                          updated if resource is not in user_usages yet or\n                          until_refresh is not None.\n    :param resource:      The resource being checked for quota usage.\n    :param until_refresh: Count of reservations until usage is refreshed,\n                          int or None\n    :param project_id:    The project being checked for quota usage.\n    :param user_id:       The user being checked for quota usage.\n    :param session:       DB session holding a transaction lock.\n    :return:              True if a new QuotaUsage record was created and added\n                          to user_usages, False otherwise.\n    """'
newline|'\n'
name|'new_usage'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'resource'
name|'not'
name|'in'
name|'user_usages'
op|':'
newline|'\n'
indent|'        '
name|'user_id_to_use'
op|'='
name|'user_id'
newline|'\n'
name|'if'
name|'resource'
name|'in'
name|'PER_PROJECT_QUOTAS'
op|':'
newline|'\n'
indent|'            '
name|'user_id_to_use'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'new_usage'
op|'='
name|'_quota_usage_create'
op|'('
name|'project_id'
op|','
name|'user_id_to_use'
op|','
name|'resource'
op|','
nl|'\n'
number|'0'
op|','
number|'0'
op|','
name|'until_refresh'
name|'or'
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'user_usages'
op|'['
name|'resource'
op|']'
op|'='
name|'new_usage'
newline|'\n'
dedent|''
name|'return'
name|'new_usage'
name|'is'
name|'not'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_quota_refresh_needed
dedent|''
name|'def'
name|'_is_quota_refresh_needed'
op|'('
name|'quota_usage'
op|','
name|'max_age'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Determines if a quota usage refresh is needed.\n\n    :param quota_usage:   A QuotaUsage object for a given resource.\n    :param max_age:       Number of seconds between subsequent usage refreshes.\n    :return:              True if a refresh is needed, False otherwise.\n    """'
newline|'\n'
name|'refresh'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'quota_usage'
op|'.'
name|'in_use'
op|'<'
number|'0'
op|':'
newline|'\n'
comment|'# Negative in_use count indicates a desync, so try to'
nl|'\n'
comment|'# heal from that...'
nl|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'in_use has dropped below 0; forcing refresh for '"
nl|'\n'
string|"'QuotaUsage: %s'"
op|','
name|'dict'
op|'('
name|'quota_usage'
op|')'
op|')'
newline|'\n'
name|'refresh'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'quota_usage'
op|'.'
name|'until_refresh'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'quota_usage'
op|'.'
name|'until_refresh'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'quota_usage'
op|'.'
name|'until_refresh'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'refresh'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'max_age'
name|'and'
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
nl|'\n'
name|'quota_usage'
op|'.'
name|'updated_at'
op|')'
op|'.'
name|'seconds'
op|'>='
name|'max_age'
op|':'
newline|'\n'
indent|'        '
name|'refresh'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'refresh'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_refresh_quota_usages
dedent|''
name|'def'
name|'_refresh_quota_usages'
op|'('
name|'quota_usage'
op|','
name|'until_refresh'
op|','
name|'in_use'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Refreshes quota usage for the given resource.\n\n    :param quota_usage:   A QuotaUsage object for a given resource.\n    :param until_refresh: Count of reservations until usage is refreshed,\n                          int or None\n    :param in_use:        Actual quota usage for the resource.\n    """'
newline|'\n'
name|'if'
name|'quota_usage'
op|'.'
name|'in_use'
op|'!='
name|'in_use'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_LI'
op|'('
string|"'quota_usages out of sync, updating. '"
nl|'\n'
string|"'project_id: %(project_id)s, '"
nl|'\n'
string|"'user_id: %(user_id)s, '"
nl|'\n'
string|"'resource: %(res)s, '"
nl|'\n'
string|"'tracked usage: %(tracked_use)s, '"
nl|'\n'
string|"'actual usage: %(in_use)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'quota_usage'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'quota_usage'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'res'"
op|':'
name|'quota_usage'
op|'.'
name|'resource'
op|','
nl|'\n'
string|"'tracked_use'"
op|':'
name|'quota_usage'
op|'.'
name|'in_use'
op|','
nl|'\n'
string|"'in_use'"
op|':'
name|'in_use'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'QuotaUsage has not changed, refresh is unnecessary for: %s'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'quota_usage'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the usage'
nl|'\n'
dedent|''
name|'quota_usage'
op|'.'
name|'in_use'
op|'='
name|'in_use'
newline|'\n'
name|'quota_usage'
op|'.'
name|'until_refresh'
op|'='
name|'until_refresh'
name|'or'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_calculate_overquota
dedent|''
name|'def'
name|'_calculate_overquota'
op|'('
name|'project_quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
nl|'\n'
name|'project_usages'
op|','
name|'user_usages'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Checks if any resources will go over quota based on the request.\n\n    :param project_quotas: dict of resource quotas (limits) for the project.\n    :param user_quotas:    dict of resource quotas (limits) for the user.\n    :param deltas:         dict of resource keys to positive/negative quota\n                           changes for the resources in a given operation.\n    :param project_usages: dict of resource keys to QuotaUsage records for the\n                           project.\n    :param user_usages:    dict of resource keys to QuotaUsage records for the\n                           user.\n    :return:               list of resources that are over-quota for the\n                           operation.\n    """'
newline|'\n'
name|'overs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'res'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# We can't go over-quota if we're not reserving anything."
nl|'\n'
indent|'        '
name|'if'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
comment|"# We can't go over-quota if we have unlimited quotas."
nl|'\n'
comment|'# over if the project usage + delta is more than project quota'
nl|'\n'
indent|'            '
name|'if'
number|'0'
op|'<='
name|'project_quotas'
op|'['
name|'res'
op|']'
op|'<'
name|'delta'
op|'+'
name|'project_usages'
op|'['
name|'res'
op|']'
op|'['
string|"'total'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'Request is over project quota for resource '"
nl|'\n'
string|'\'"%(res)s". Project limit: %(limit)s, delta: \''
nl|'\n'
string|"'%(delta)s, current total project usage: %(total)s'"
op|','
nl|'\n'
op|'{'
string|"'res'"
op|':'
name|'res'
op|','
string|"'limit'"
op|':'
name|'project_quotas'
op|'['
name|'res'
op|']'
op|','
nl|'\n'
string|"'delta'"
op|':'
name|'delta'
op|','
nl|'\n'
string|"'total'"
op|':'
name|'project_usages'
op|'['
name|'res'
op|']'
op|'['
string|"'total'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'overs'
op|'.'
name|'append'
op|'('
name|'res'
op|')'
newline|'\n'
comment|"# We can't go over-quota if we have unlimited quotas."
nl|'\n'
comment|'# over if the user usage + delta is more than user quota'
nl|'\n'
dedent|''
name|'elif'
number|'0'
op|'<='
name|'user_quotas'
op|'['
name|'res'
op|']'
op|'<'
name|'delta'
op|'+'
name|'user_usages'
op|'['
name|'res'
op|']'
op|'['
string|"'total'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'Request is over user quota for resource '"
nl|'\n'
string|'\'"%(res)s". User limit: %(limit)s, delta: \''
nl|'\n'
string|"'%(delta)s, current total user usage: %(total)s'"
op|','
nl|'\n'
op|'{'
string|"'res'"
op|':'
name|'res'
op|','
string|"'limit'"
op|':'
name|'user_quotas'
op|'['
name|'res'
op|']'
op|','
nl|'\n'
string|"'delta'"
op|':'
name|'delta'
op|','
string|"'total'"
op|':'
name|'user_usages'
op|'['
name|'res'
op|']'
op|'['
string|"'total'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'overs'
op|'.'
name|'append'
op|'('
name|'res'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'overs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|quota_reserve
name|'def'
name|'quota_reserve'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'project_quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
nl|'\n'
name|'expire'
op|','
name|'until_refresh'
op|','
name|'max_age'
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'elevated'
op|'='
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'project_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'if'
name|'user_id'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'user_id'
op|'='
name|'context'
op|'.'
name|'user_id'
newline|'\n'
nl|'\n'
comment|'# Get the current usages'
nl|'\n'
dedent|''
name|'project_usages'
op|','
name|'user_usages'
op|'='
name|'_get_project_user_quota_usages'
op|'('
nl|'\n'
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Handle usage refresh'
nl|'\n'
name|'work'
op|'='
name|'set'
op|'('
name|'deltas'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'while'
name|'work'
op|':'
newline|'\n'
indent|'            '
name|'resource'
op|'='
name|'work'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Do we need to refresh the usage?'
nl|'\n'
name|'created'
op|'='
name|'_create_quota_usage_if_missing'
op|'('
name|'user_usages'
op|','
name|'resource'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|','
name|'session'
op|')'
newline|'\n'
name|'refresh'
op|'='
name|'created'
name|'or'
name|'_is_quota_refresh_needed'
op|'('
nl|'\n'
name|'user_usages'
op|'['
name|'resource'
op|']'
op|','
name|'max_age'
op|')'
newline|'\n'
nl|'\n'
comment|'# OK, refresh the usage'
nl|'\n'
name|'if'
name|'refresh'
op|':'
newline|'\n'
comment|'# Grab the sync routine'
nl|'\n'
indent|'                '
name|'sync'
op|'='
name|'QUOTA_SYNC_FUNCTIONS'
op|'['
name|'resources'
op|'['
name|'resource'
op|']'
op|'.'
name|'sync'
op|']'
newline|'\n'
nl|'\n'
name|'updates'
op|'='
name|'sync'
op|'('
name|'elevated'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
newline|'\n'
name|'for'
name|'res'
op|','
name|'in_use'
name|'in'
name|'updates'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Make sure we have a destination for the usage!'
nl|'\n'
indent|'                    '
name|'_create_quota_usage_if_missing'
op|'('
name|'user_usages'
op|','
name|'res'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|','
name|'session'
op|')'
newline|'\n'
name|'_refresh_quota_usages'
op|'('
name|'user_usages'
op|'['
name|'res'
op|']'
op|','
name|'until_refresh'
op|','
nl|'\n'
name|'in_use'
op|')'
newline|'\n'
nl|'\n'
comment|'# Because more than one resource may be refreshed'
nl|'\n'
comment|"# by the call to the sync routine, and we don't"
nl|'\n'
comment|'# want to double-sync, we make sure all refreshed'
nl|'\n'
comment|'# resources are dropped from the work set.'
nl|'\n'
name|'work'
op|'.'
name|'discard'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(Vek): We make the assumption that the sync'
nl|'\n'
comment|'#            routine actually refreshes the'
nl|'\n'
comment|'#            resources that it is the sync routine'
nl|'\n'
comment|"#            for.  We don't check, because this is"
nl|'\n'
comment|'#            a best-effort mechanism.'
nl|'\n'
nl|'\n'
comment|'# Check for deltas that would go negative'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'unders'
op|'='
op|'['
name|'res'
name|'for'
name|'res'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'delta'
op|'<'
number|'0'
name|'and'
nl|'\n'
name|'delta'
op|'+'
name|'user_usages'
op|'['
name|'res'
op|']'
op|'.'
name|'in_use'
op|'<'
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|"# Now, let's check the quotas"
nl|'\n'
comment|"# NOTE(Vek): We're only concerned about positive increments."
nl|'\n'
comment|'#            If a project has gone over quota, we want them to'
nl|'\n'
comment|'#            be able to reduce their usage without any'
nl|'\n'
comment|'#            problems.'
nl|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'user_usages'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'not'
name|'in'
name|'project_usages'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'\'Copying QuotaUsage for resource "%(key)s" from \''
nl|'\n'
string|"'user_usages into project_usages: %(value)s'"
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
string|"'value'"
op|':'
name|'dict'
op|'('
name|'value'
op|')'
op|'}'
op|')'
newline|'\n'
name|'project_usages'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'overs'
op|'='
name|'_calculate_overquota'
op|'('
name|'project_quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
nl|'\n'
name|'project_usages'
op|','
name|'user_usages'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(Vek): The quota check needs to be in the transaction,'
nl|'\n'
comment|"#            but the transaction doesn't fail just because"
nl|'\n'
comment|"#            we're over quota, so the OverQuota raise is"
nl|'\n'
comment|'#            outside the transaction.  If we did the raise'
nl|'\n'
comment|'#            here, our usage updates would be discarded, but'
nl|'\n'
comment|"#            they're not invalidated by being over-quota."
nl|'\n'
nl|'\n'
comment|'# Create the reservations'
nl|'\n'
name|'if'
name|'not'
name|'overs'
op|':'
newline|'\n'
indent|'            '
name|'reservations'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'res'
op|','
name|'delta'
name|'in'
name|'deltas'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'reservation'
op|'='
name|'_reservation_create'
op|'('
nl|'\n'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'user_usages'
op|'['
name|'res'
op|']'
op|','
nl|'\n'
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|','
nl|'\n'
name|'res'
op|','
name|'delta'
op|','
name|'expire'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'reservations'
op|'.'
name|'append'
op|'('
name|'reservation'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Also update the reserved quantity'
nl|'\n'
comment|'# NOTE(Vek): Again, we are only concerned here about'
nl|'\n'
comment|"#            positive increments.  Here, though, we're"
nl|'\n'
comment|'#            worried about the following scenario:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#            1) User initiates resize down.'
nl|'\n'
comment|'#            2) User allocates a new instance.'
nl|'\n'
comment|'#            3) Resize down fails or is reverted.'
nl|'\n'
comment|'#            4) User is now over quota.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#            To prevent this, we only update the'
nl|'\n'
comment|'#            reserved value if the delta is positive.'
nl|'\n'
name|'if'
name|'delta'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'user_usages'
op|'['
name|'res'
op|']'
op|'.'
name|'reserved'
op|'+='
name|'delta'
newline|'\n'
nl|'\n'
comment|'# Apply updates to the usages table'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'usage_ref'
name|'in'
name|'user_usages'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'add'
op|'('
name|'usage_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'unders'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"Change will make usage less than 0 for the following "'
nl|'\n'
string|'"resources: %s"'
op|')'
op|','
name|'unders'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'overs'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'project_quotas'
op|'=='
name|'user_quotas'
op|':'
newline|'\n'
indent|'            '
name|'usages'
op|'='
name|'project_usages'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# NOTE(mriedem): user_usages is a dict of resource keys to'
nl|'\n'
comment|"# QuotaUsage sqlalchemy dict-like objects and doen't log well"
nl|'\n'
comment|'# so convert the user_usages values to something useful for'
nl|'\n'
comment|'# logging. Remove this if we ever change how'
nl|'\n'
comment|'# _get_project_user_quota_usages returns the user_usages values.'
nl|'\n'
indent|'            '
name|'user_usages'
op|'='
op|'{'
name|'k'
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
name|'v'
op|'['
string|"'in_use'"
op|']'
op|','
name|'reserved'
op|'='
name|'v'
op|'['
string|"'reserved'"
op|']'
op|','
nl|'\n'
name|'total'
op|'='
name|'v'
op|'['
string|"'total'"
op|']'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'user_usages'
op|'.'
name|'items'
op|'('
op|')'
op|'}'
newline|'\n'
name|'usages'
op|'='
name|'user_usages'
newline|'\n'
dedent|''
name|'usages'
op|'='
op|'{'
name|'k'
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
name|'v'
op|'['
string|"'in_use'"
op|']'
op|','
name|'reserved'
op|'='
name|'v'
op|'['
string|"'reserved'"
op|']'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'usages'
op|'.'
name|'items'
op|'('
op|')'
op|'}'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'Raise OverQuota exception because: '"
nl|'\n'
string|"'project_quotas: %(project_quotas)s, '"
nl|'\n'
string|"'user_quotas: %(user_quotas)s, deltas: %(deltas)s, '"
nl|'\n'
string|"'overs: %(overs)s, project_usages: %(project_usages)s, '"
nl|'\n'
string|"'user_usages: %(user_usages)s'"
op|','
nl|'\n'
op|'{'
string|"'project_quotas'"
op|':'
name|'project_quotas'
op|','
nl|'\n'
string|"'user_quotas'"
op|':'
name|'user_quotas'
op|','
nl|'\n'
string|"'overs'"
op|':'
name|'overs'
op|','
string|"'deltas'"
op|':'
name|'deltas'
op|','
nl|'\n'
string|"'project_usages'"
op|':'
name|'project_usages'
op|','
nl|'\n'
string|"'user_usages'"
op|':'
name|'user_usages'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
name|'sorted'
op|'('
name|'overs'
op|')'
op|','
name|'quotas'
op|'='
name|'user_quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'reservations'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_quota_reservations_query
dedent|''
name|'def'
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return the relevant reservations."""'
newline|'\n'
nl|'\n'
comment|'# Get the listed reservations'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Reservation'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'reservations'
op|')'
op|')'
op|'.'
name|'with_lockmode'
op|'('
string|"'update'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|reservation_commit
name|'def'
name|'reservation_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_project_usages'
op|','
name|'user_usages'
op|'='
name|'_get_project_user_quota_usages'
op|'('
nl|'\n'
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
nl|'\n'
name|'reservations'
op|')'
newline|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'='
name|'user_usages'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
newline|'\n'
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
name|'usage'
op|'.'
name|'in_use'
op|'+='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|reservation_rollback
name|'def'
name|'reservation_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|','
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_project_usages'
op|','
name|'user_usages'
op|'='
name|'_get_project_user_quota_usages'
op|'('
nl|'\n'
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'_quota_reservations_query'
op|'('
name|'session'
op|','
name|'context'
op|','
nl|'\n'
name|'reservations'
op|')'
newline|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'='
name|'user_usages'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
newline|'\n'
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
dedent|''
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_destroy_all_by_project_and_user
dedent|''
dedent|''
name|'def'
name|'quota_destroy_all_by_project_and_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProjectUserQuota'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_destroy_all_by_project
dedent|''
dedent|''
name|'def'
name|'quota_destroy_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Quota'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProjectUserQuota'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|reservation_expire
name|'def'
name|'reservation_expire'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'current_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'reservation_query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Reservation'
op|'.'
name|'expire'
op|'<'
name|'current_time'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'reservation'
name|'in'
name|'reservation_query'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'QuotaUsage'
op|')'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'reservation'
op|'.'
name|'delta'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'reservation'
op|'.'
name|'usage'
op|'.'
name|'reserved'
op|'-='
name|'reservation'
op|'.'
name|'delta'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'reservation'
op|'.'
name|'usage'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'reservation_query'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ec2_volume_get_query
dedent|''
dedent|''
name|'def'
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeIdMapping'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ec2_snapshot_get_query
dedent|''
name|'def'
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SnapshotIdMapping'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|ec2_volume_create
name|'def'
name|'ec2_volume_create'
op|'('
name|'context'
op|','
name|'volume_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible volume by provided uuid."""'
newline|'\n'
name|'ec2_volume_ref'
op|'='
name|'models'
op|'.'
name|'VolumeIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_volume_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'volume_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_volume_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_volume_ref'
op|'.'
name|'save'
op|'('
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_volume_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|ec2_volume_get_by_uuid
name|'def'
name|'ec2_volume_get_by_uuid'
op|'('
name|'context'
op|','
name|'volume_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'volume_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
name|'volume_id'
op|'='
name|'volume_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|ec2_volume_get_by_id
name|'def'
name|'ec2_volume_get_by_id'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_volume_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'volume_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|ec2_snapshot_create
name|'def'
name|'ec2_snapshot_create'
op|'('
name|'context'
op|','
name|'snapshot_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible snapshot by provided uuid."""'
newline|'\n'
name|'ec2_snapshot_ref'
op|'='
name|'models'
op|'.'
name|'SnapshotIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_snapshot_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'snapshot_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_snapshot_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_snapshot_ref'
op|'.'
name|'save'
op|'('
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_snapshot_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|ec2_snapshot_get_by_ec2_id
name|'def'
name|'ec2_snapshot_get_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'ec2_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|'('
name|'snapshot_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|ec2_snapshot_get_by_uuid
name|'def'
name|'ec2_snapshot_get_by_uuid'
op|'('
name|'context'
op|','
name|'snapshot_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_snapshot_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'snapshot_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|'('
name|'snapshot_id'
op|'='
name|'snapshot_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_block_device_mapping_get_query
dedent|''
name|'def'
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_scrub_empty_str_values
dedent|''
name|'def'
name|'_scrub_empty_str_values'
op|'('
name|'dct'
op|','
name|'keys_to_scrub'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove any keys found in sequence keys_to_scrub from the dict\n    if they have the value \'\'.\n    """'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'keys_to_scrub'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'in'
name|'dct'
name|'and'
name|'dct'
op|'['
name|'key'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'dct'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_from_legacy_values
dedent|''
dedent|''
dedent|''
name|'def'
name|'_from_legacy_values'
op|'('
name|'values'
op|','
name|'legacy'
op|','
name|'allow_updates'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'legacy'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'allow_updates'
name|'and'
name|'block_device'
op|'.'
name|'is_safe_for_update'
op|'('
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'values'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|'.'
name|'from_legacy'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'values'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_create
name|'def'
name|'block_device_mapping_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'legacy'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_from_legacy_values'
op|'('
name|'values'
op|','
name|'legacy'
op|')'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'bdm_ref'
op|'='
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'bdm_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_update
name|'def'
name|'block_device_mapping_update'
op|'('
name|'context'
op|','
name|'bdm_id'
op|','
name|'values'
op|','
name|'legacy'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_from_legacy_values'
op|'('
name|'values'
op|','
name|'legacy'
op|','
name|'allow_updates'
op|'='
name|'True'
op|')'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'bdm_id'
op|')'
newline|'\n'
name|'query'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_update_or_create
dedent|''
name|'def'
name|'block_device_mapping_update_or_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'legacy'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_from_legacy_values'
op|'('
name|'values'
op|','
name|'legacy'
op|','
name|'allow_updates'
op|'='
name|'True'
op|')'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'None'
newline|'\n'
comment|'# NOTE(xqueralt): Only update a BDM when device_name was provided. We'
nl|'\n'
comment|'# allow empty device names so they will be set later by the manager.'
nl|'\n'
name|'if'
name|'values'
op|'['
string|"'device_name'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'result'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'device_name'
op|'='
name|'values'
op|'['
string|"'device_name'"
op|']'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# Either the device_name doesn't exist in the database yet, or no"
nl|'\n'
comment|'# device_name was provided. Both cases mean creating a new BDM.'
nl|'\n'
indent|'            '
name|'result'
op|'='
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|'**'
name|'values'
op|')'
newline|'\n'
name|'result'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(xqueralt): Prevent from having multiple swap devices for the'
nl|'\n'
comment|'# same instance. This will delete all the existing ones.'
nl|'\n'
dedent|''
name|'if'
name|'block_device'
op|'.'
name|'new_format_is_swap'
op|'('
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'source_type'
op|'='
string|"'blank'"
op|','
name|'guest_format'
op|'='
string|"'swap'"
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'id'
op|'!='
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'query'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_get_all_by_instance_uuids
name|'def'
name|'block_device_mapping_get_all_by_instance_uuids'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'_block_device_mapping_get_query'
op|'('
nl|'\n'
name|'context'
op|','
name|'use_slave'
op|'='
name|'use_slave'
nl|'\n'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
nl|'\n'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_get_all_by_instance
name|'def'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_get_by_volume_id
name|'def'
name|'block_device_mapping_get_by_volume_id'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy
name|'def'
name|'block_device_mapping_destroy'
op|'('
name|'context'
op|','
name|'bdm_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'bdm_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_volume
name|'def'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_device
name|'def'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_block_device_mapping_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'device_name'
op|'='
name|'device_name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
DECL|function|_security_group_create
dedent|''
name|'def'
name|'_security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroup'
op|'('
op|')'
newline|'\n'
comment|'# FIXME(devcamcar): Unless I do this, rules fails with lazy load exception'
nl|'\n'
comment|'# once save() is called.  This will get cleaned up in next orm pass.'
nl|'\n'
name|'security_group_ref'
op|'.'
name|'rules'
newline|'\n'
name|'security_group_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'security_group_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupExists'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'values'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'security_group_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'security_group_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_get_query
dedent|''
name|'def'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'False'
op|','
name|'join_rules'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
name|'if'
name|'join_rules'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'rules.grantee_group'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_get_by_names
dedent|''
name|'def'
name|'_security_group_get_by_names'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'project_id'
op|','
name|'group_names'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get security group models for a project by a list of names.\n    Raise SecurityGroupNotFoundForProject for a name not found.\n    """'
newline|'\n'
name|'query'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'join_rules'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|'.'
name|'name'
op|'.'
name|'in_'
op|'('
name|'group_names'
op|')'
op|')'
newline|'\n'
name|'sg_models'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'sg_models'
op|')'
op|'=='
name|'len'
op|'('
name|'group_names'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sg_models'
newline|'\n'
comment|'# Find the first one missing and raise'
nl|'\n'
dedent|''
name|'group_names_from_models'
op|'='
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'sg_models'
op|']'
newline|'\n'
name|'for'
name|'group_name'
name|'in'
name|'group_names'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'group_name'
name|'not'
name|'in'
name|'group_names_from_models'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
comment|'# Not Reached'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_all
name|'def'
name|'security_group_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get
name|'def'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'security_group_id'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'column'
op|'.'
name|'startswith'
op|'('
string|"'instances'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|'('
nl|'\n'
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_name
name|'def'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_security_group_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'join_rules'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'instances'"
op|','
string|"'rules.grantee_group'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
name|'security_group_id'
op|'='
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_project
name|'def'
name|'security_group_get_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_get_by_instance
name|'def'
name|'security_group_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'join'
op|'('
name|'models'
op|'.'
name|'SecurityGroup'
op|'.'
name|'instances'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_in_use
name|'def'
name|'security_group_in_use'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# Are there any instances that haven't been deleted"
nl|'\n'
comment|'# that include this group?'
nl|'\n'
indent|'        '
name|'inst_assoc'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'group_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'for'
name|'ia'
name|'in'
name|'inst_assoc'
op|':'
newline|'\n'
indent|'            '
name|'num_instances'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'ia'
op|'.'
name|'instance_uuid'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
name|'if'
name|'num_instances'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_create
name|'def'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_update
name|'def'
name|'security_group_update'
op|'('
name|'context'
op|','
name|'security_group_id'
op|','
name|'values'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_id'
op|')'
newline|'\n'
name|'if'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'                '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'security_group_ref'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'security_group_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|'('
nl|'\n'
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
newline|'\n'
dedent|''
name|'security_group_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'name'
op|'='
name|'security_group_ref'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project_id'
op|'='
name|'security_group_ref'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'security_group_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupExists'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'security_group_name'
op|'='
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'security_group_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_ensure_default
dedent|''
name|'def'
name|'security_group_ensure_default'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Ensure default security group exists for a project_id."""'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_security_group_ensure_default'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SecurityGroupExists'
op|':'
newline|'\n'
comment|'# NOTE(rpodolyaka): a concurrent transaction has succeeded first,'
nl|'\n'
comment|'# suppress the error and proceed'
nl|'\n'
indent|'        '
name|'return'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_ensure_default
dedent|''
dedent|''
name|'def'
name|'_security_group_ensure_default'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'session'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'default_group'
op|'='
name|'_security_group_get_by_names'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|','
nl|'\n'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
op|'['
string|"'default'"
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'default_group'
op|'='
name|'_security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'usage'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'QuotaUsage'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'context'
op|'.'
name|'user_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource'
op|'='
string|"'security_groups'"
op|')'
newline|'\n'
comment|'# Create quota usage for auto created default security group'
nl|'\n'
name|'if'
name|'not'
name|'usage'
op|'.'
name|'first'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_quota_usage_create'
op|'('
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'security_groups'"
op|','
nl|'\n'
number|'1'
op|','
number|'0'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'until_refresh'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'usage'
op|'.'
name|'update'
op|'('
op|'{'
string|"'in_use'"
op|':'
name|'int'
op|'('
name|'usage'
op|'.'
name|'first'
op|'('
op|')'
op|'.'
name|'in_use'
op|')'
op|'+'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'default_rules'
op|'='
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'for'
name|'default_rule'
name|'in'
name|'default_rules'
op|':'
newline|'\n'
comment|'# This is suboptimal, it should be programmatic to know'
nl|'\n'
comment|'# the values of the default_rule'
nl|'\n'
indent|'                '
name|'rule_values'
op|'='
op|'{'
string|"'protocol'"
op|':'
name|'default_rule'
op|'.'
name|'protocol'
op|','
nl|'\n'
string|"'from_port'"
op|':'
name|'default_rule'
op|'.'
name|'from_port'
op|','
nl|'\n'
string|"'to_port'"
op|':'
name|'default_rule'
op|'.'
name|'to_port'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'default_rule'
op|'.'
name|'cidr'
op|','
nl|'\n'
string|"'parent_group_id'"
op|':'
name|'default_group'
op|'.'
name|'id'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'_security_group_rule_create'
op|'('
name|'context'
op|','
nl|'\n'
name|'rule_values'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'default_group'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_destroy
name|'def'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupInstanceAssociation'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'security_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_count_by_project_and_user
dedent|''
dedent|''
name|'def'
name|'_security_group_count_by_project_and_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'nova'
op|'.'
name|'context'
op|'.'
name|'authorize_project_context'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroup'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_rule_create
dedent|''
name|'def'
name|'_security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_rule_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|'('
op|')'
newline|'\n'
name|'security_group_rule_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'security_group_rule_ref'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'security_group_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_rule_get_query
dedent|''
name|'def'
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_get
name|'def'
name|'security_group_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
op|'('
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_id'
op|')'
op|'.'
nl|'\n'
name|'first'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForRule'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_get_by_security_group
name|'def'
name|'security_group_rule_get_by_security_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'columns_to_join'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'grantee_group.instances.system_metadata'"
op|','
nl|'\n'
string|"'grantee_group.instances.info_cache'"
op|']'
newline|'\n'
dedent|''
name|'query'
op|'='
op|'('
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|')'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_create
name|'def'
name|'security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_destroy
name|'def'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'count'
op|'='
op|'('
name|'_security_group_rule_get_query'
op|'('
name|'context'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_id'
op|')'
op|'.'
nl|'\n'
name|'soft_delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForRule'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_rule_count_by_group
name|'def'
name|'security_group_rule_count_by_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'('
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressRule'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'parent_group_id'
op|'='
name|'security_group_id'
op|')'
op|'.'
nl|'\n'
name|'count'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_security_group_rule_get_default_query
dedent|''
name|'def'
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'SecurityGroupIngressDefaultRule'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_default_rule_get
name|'def'
name|'security_group_default_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_default_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_default_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupDefaultRuleNotFound'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_default_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_default_rule_destroy
dedent|''
name|'def'
name|'security_group_default_rule_destroy'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_rule_default_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'security_group_rule_default_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupDefaultRuleNotFound'
op|'('
nl|'\n'
name|'rule_id'
op|'='
name|'security_group_rule_default_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_default_rule_create
dedent|''
dedent|''
dedent|''
name|'def'
name|'security_group_default_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'security_group_default_rule_ref'
op|'='
name|'models'
op|'.'
name|'SecurityGroupIngressDefaultRule'
op|'('
op|')'
newline|'\n'
name|'security_group_default_rule_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'security_group_default_rule_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'security_group_default_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|security_group_default_rule_list
name|'def'
name|'security_group_default_rule_list'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_security_group_rule_get_default_query'
op|'('
name|'context'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_create
dedent|''
name|'def'
name|'provider_fw_rule_create'
op|'('
name|'context'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fw_rule_ref'
op|'='
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|'('
op|')'
newline|'\n'
name|'fw_rule_ref'
op|'.'
name|'update'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'fw_rule_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'fw_rule_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_get_all
dedent|''
name|'def'
name|'provider_fw_rule_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_destroy
dedent|''
name|'def'
name|'provider_fw_rule_destroy'
op|'('
name|'context'
op|','
name|'rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'ProviderFirewallRule'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'rule_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|project_get_networks
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'associate'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(tr3buchet): as before this function will associate'
nl|'\n'
comment|"# a project with a network if it doesn't have one and"
nl|'\n'
comment|'# associate is true'
nl|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Network'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'associate'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_create
dedent|''
name|'def'
name|'migration_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'migration'
op|'='
name|'models'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_update
dedent|''
name|'def'
name|'migration_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'_migration_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_migration_get
dedent|''
name|'def'
name|'_migration_get'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'MigrationNotFound'
op|'('
name|'migration_id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get
dedent|''
name|'def'
name|'migration_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_migration_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_by_instance_and_status
dedent|''
name|'def'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
name|'status'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'MigrationNotFoundByStatus'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
name|'status'
op|'='
name|'status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_unconfirmed_by_dest_compute
dedent|''
name|'def'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'context'
op|','
name|'confirm_window'
op|','
nl|'\n'
name|'dest_compute'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'confirm_window'
op|'='
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'confirm_window'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'updated_at'
op|'<='
name|'confirm_window'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
string|'"finished"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'dest_compute'
op|'='
name|'dest_compute'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_in_progress_by_host_and_node
dedent|''
name|'def'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'and_'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_compute'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_node'
op|'=='
name|'node'
op|')'
op|','
nl|'\n'
name|'and_'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'dest_compute'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'dest_node'
op|'=='
name|'node'
op|')'
op|')'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'status'
op|'.'
name|'in_'
op|'('
op|'['
string|"'accepted'"
op|','
string|"'confirmed'"
op|','
nl|'\n'
string|"'reverted'"
op|','
string|"'error'"
op|']'
op|')'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload_all'
op|'('
string|"'instance.system_metadata'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_all_by_filters
dedent|''
name|'def'
name|'migration_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Migration'
op|')'
newline|'\n'
name|'if'
string|'"status"'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'status'
op|'=='
name|'filters'
op|'['
string|'"status"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
string|'"host"'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'filters'
op|'['
string|'"host"'
op|']'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_compute'
op|'=='
name|'host'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'dest_compute'
op|'=='
name|'host'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
string|'"source_compute"'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'filters'
op|'['
string|"'source_compute'"
op|']'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'source_compute'
op|'=='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'if'
string|'"migration_type"'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'migtype'
op|'='
name|'filters'
op|'['
string|'"migration_type"'
op|']'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'migration_type'
op|'=='
name|'migtype'
op|')'
newline|'\n'
dedent|''
name|'if'
string|'"hidden"'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'hidden'
op|'='
name|'filters'
op|'['
string|'"hidden"'
op|']'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'Migration'
op|'.'
name|'hidden'
op|'=='
name|'hidden'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_create
dedent|''
name|'def'
name|'console_pool_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pool'
op|'='
name|'models'
op|'.'
name|'ConsolePool'
op|'('
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'pool'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ConsolePoolExists'
op|'('
nl|'\n'
name|'host'
op|'='
name|'values'
op|'['
string|'"host"'
op|']'
op|','
nl|'\n'
name|'console_type'
op|'='
name|'values'
op|'['
string|'"console_type"'
op|']'
op|','
nl|'\n'
name|'compute_host'
op|'='
name|'values'
op|'['
string|'"compute_host"'
op|']'
op|','
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pool'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_by_host_type
dedent|''
name|'def'
name|'console_pool_get_by_host_type'
op|'('
name|'context'
op|','
name|'compute_host'
op|','
name|'host'
op|','
nl|'\n'
name|'console_type'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ConsolePool'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'console_type'
op|'='
name|'console_type'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_host'
op|'='
name|'compute_host'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'consoles'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ConsolePoolNotFoundForHostType'
op|'('
nl|'\n'
name|'host'
op|'='
name|'host'
op|','
name|'console_type'
op|'='
name|'console_type'
op|','
nl|'\n'
name|'compute_host'
op|'='
name|'compute_host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_all_by_host_type
dedent|''
name|'def'
name|'console_pool_get_all_by_host_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'ConsolePool'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'console_type'
op|'='
name|'console_type'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'consoles'"
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_create
dedent|''
name|'def'
name|'console_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'console'
op|'='
name|'models'
op|'.'
name|'Console'
op|'('
op|')'
newline|'\n'
name|'console'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'console'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'console'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_delete
dedent|''
name|'def'
name|'console_delete'
op|'('
name|'context'
op|','
name|'console_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# NOTE(mdragon): consoles are meant to be transient.'
nl|'\n'
indent|'        '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Console'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'console_id'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_by_pool_instance
dedent|''
dedent|''
name|'def'
name|'console_get_by_pool_instance'
op|'('
name|'context'
op|','
name|'pool_id'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'pool_id'
op|'='
name|'pool_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'pool'"
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFoundInPoolForInstance'
op|'('
nl|'\n'
name|'pool_id'
op|'='
name|'pool_id'
op|','
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_all_by_instance
dedent|''
name|'def'
name|'console_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'if'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'column'
name|'in'
name|'columns_to_join'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'column'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get
dedent|''
name|'def'
name|'console_get'
op|'('
name|'context'
op|','
name|'console_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Console'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'console_id'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'pool'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'instance_uuid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'instance_uuid'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFoundForInstance'
op|'('
nl|'\n'
name|'console_id'
op|'='
name|'console_id'
op|','
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ConsoleNotFound'
op|'('
name|'console_id'
op|'='
name|'console_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|flavor_create
dedent|''
name|'def'
name|'flavor_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'projects'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new instance type. In order to pass in extra specs,\n    the values dict should contain a \'extra_specs\' key/value pair:\n\n    {\'extra_specs\' : {\'k1\': \'v1\', \'k2\': \'v2\', ...}}\n\n    """'
newline|'\n'
name|'specs'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'extra_specs'"
op|')'
newline|'\n'
name|'specs_refs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'specs'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'specs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'specs_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'('
op|')'
newline|'\n'
name|'specs_ref'
op|'['
string|"'key'"
op|']'
op|'='
name|'k'
newline|'\n'
name|'specs_ref'
op|'['
string|"'value'"
op|']'
op|'='
name|'v'
newline|'\n'
name|'specs_refs'
op|'.'
name|'append'
op|'('
name|'specs_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'values'
op|'['
string|"'extra_specs'"
op|']'
op|'='
name|'specs_refs'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypes'
op|'('
op|')'
newline|'\n'
name|'instance_type_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'projects'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'projects'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance_type_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'flavorid'"
name|'in'
name|'e'
op|'.'
name|'columns'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'FlavorIdExists'
op|'('
name|'flavor_id'
op|'='
name|'values'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'FlavorExists'
op|'('
name|'name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'db_exc'
op|'.'
name|'DBError'
op|'('
name|'e'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'project'
name|'in'
name|'set'
op|'('
name|'projects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'access_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|'('
op|')'
newline|'\n'
name|'access_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"instance_type_id"'
op|':'
name|'instance_type_ref'
op|'.'
name|'id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'project'
op|'}'
op|')'
newline|'\n'
name|'access_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'instance_type_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_dict_with_extra_specs
dedent|''
name|'def'
name|'_dict_with_extra_specs'
op|'('
name|'inst_type_query'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Takes an instance or instance type query returned\n    by sqlalchemy and returns it as a dictionary, converting the\n    extra_specs entry from a list of dicts:\n\n    \'extra_specs\' : [{\'key\': \'k1\', \'value\': \'v1\', ...}, ...]\n\n    to a single dict:\n\n    \'extra_specs\' : {\'k1\': \'v1\'}\n\n    """'
newline|'\n'
name|'inst_type_dict'
op|'='
name|'dict'
op|'('
name|'inst_type_query'
op|')'
newline|'\n'
name|'extra_specs'
op|'='
op|'{'
name|'x'
op|'['
string|"'key'"
op|']'
op|':'
name|'x'
op|'['
string|"'value'"
op|']'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'inst_type_query'
op|'['
string|"'extra_specs'"
op|']'
op|'}'
newline|'\n'
name|'inst_type_dict'
op|'['
string|"'extra_specs'"
op|']'
op|'='
name|'extra_specs'
newline|'\n'
name|'return'
name|'inst_type_dict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_flavor_get_query
dedent|''
name|'def'
name|'_flavor_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'extra_specs'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'        '
name|'the_filter'
op|'='
op|'['
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'is_public'
op|'=='
name|'true'
op|'('
op|')'
op|']'
newline|'\n'
name|'the_filter'
op|'.'
name|'extend'
op|'('
op|'['
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'projects'
op|'.'
name|'any'
op|'('
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
op|'*'
name|'the_filter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_get_all
name|'def'
name|'flavor_get_all'
op|'('
name|'context'
op|','
name|'inactive'
op|'='
name|'False'
op|','
name|'filters'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
string|"'flavorid'"
op|','
name|'sort_dir'
op|'='
string|"'asc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns all flavors.\n    """'
newline|'\n'
name|'filters'
op|'='
name|'filters'
name|'or'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# FIXME(sirp): now that we have the `disabled` field for flavors, we'
nl|'\n'
comment|'# should probably remove the use of `deleted` to mark inactive. `deleted`'
nl|'\n'
comment|'# should mean truly deleted, e.g. we can safely purge the record out of the'
nl|'\n'
comment|'# database.'
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
name|'if'
name|'inactive'
name|'else'
string|'"no"'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'_flavor_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'min_memory_mb'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'memory_mb'
op|'>='
name|'filters'
op|'['
string|"'min_memory_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'min_root_gb'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'root_gb'
op|'>='
name|'filters'
op|'['
string|"'min_root_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'disabled'"
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'disabled'
op|'=='
name|'filters'
op|'['
string|"'disabled'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'is_public'"
name|'in'
name|'filters'
name|'and'
name|'filters'
op|'['
string|"'is_public'"
op|']'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'the_filter'
op|'='
op|'['
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'is_public'
op|'=='
name|'filters'
op|'['
string|"'is_public'"
op|']'
op|']'
newline|'\n'
name|'if'
name|'filters'
op|'['
string|"'is_public'"
op|']'
name|'and'
name|'context'
op|'.'
name|'project_id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'the_filter'
op|'.'
name|'extend'
op|'('
op|'['
nl|'\n'
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'projects'
op|'.'
name|'any'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'context'
op|'.'
name|'project_id'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'the_filter'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
op|'*'
name|'the_filter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'the_filter'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'marker_row'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'marker'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'marker_row'
op|'='
name|'_flavor_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'flavorid'
op|'='
name|'marker'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'marker_row'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'MarkerNotFound'
op|'('
name|'marker'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'query'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'paginate_query'
op|'('
name|'query'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
name|'limit'
op|','
nl|'\n'
op|'['
name|'sort_key'
op|','
string|"'id'"
op|']'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker_row'
op|','
nl|'\n'
name|'sort_dir'
op|'='
name|'sort_dir'
op|')'
newline|'\n'
nl|'\n'
name|'inst_types'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'_dict_with_extra_specs'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'inst_types'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_flavor_get_id_from_flavor_query
dedent|''
name|'def'
name|'_flavor_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'id'
op|','
op|')'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'flavorid'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_flavor_get_id_from_flavor
dedent|''
name|'def'
name|'_flavor_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_flavor_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_get
name|'def'
name|'flavor_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific flavor."""'
newline|'\n'
name|'result'
op|'='
name|'_flavor_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_get_by_name
name|'def'
name|'flavor_get_by_name'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific flavor."""'
newline|'\n'
name|'result'
op|'='
name|'_flavor_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFoundByName'
op|'('
name|'flavor_name'
op|'='
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_get_by_flavor_id
name|'def'
name|'flavor_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'read_deleted'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a dict describing specific flavor_id."""'
newline|'\n'
name|'result'
op|'='
name|'_flavor_get_query'
op|'('
name|'context'
op|','
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'flavorid'
op|'='
name|'flavor_id'
op|')'
op|'.'
name|'order_by'
op|'('
name|'asc'
op|'('
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'deleted'
op|')'
op|','
nl|'\n'
name|'asc'
op|'('
name|'models'
op|'.'
name|'InstanceTypes'
op|'.'
name|'id'
op|')'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_dict_with_extra_specs'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|flavor_destroy
dedent|''
name|'def'
name|'flavor_destroy'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Marks specific flavor as deleted."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypes'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFoundByName'
op|'('
name|'flavor_name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ref'
op|'.'
name|'soft_delete'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_flavor_access_query
dedent|''
dedent|''
name|'def'
name|'_flavor_access_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|flavor_access_get_by_flavor_id
dedent|''
name|'def'
name|'flavor_access_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get flavor access list by flavor id."""'
newline|'\n'
name|'instance_type_id_subq'
op|'='
name|'_flavor_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
name|'access_refs'
op|'='
name|'_flavor_access_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id_subq'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'access_refs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|flavor_access_add
dedent|''
name|'def'
name|'flavor_access_add'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add given tenant to the flavor access list."""'
newline|'\n'
name|'instance_type_id'
op|'='
name|'_flavor_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'access_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeProjects'
op|'('
op|')'
newline|'\n'
name|'access_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"instance_type_id"'
op|':'
name|'instance_type_id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'project_id'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'access_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorAccessExists'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'access_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|flavor_access_remove
dedent|''
name|'def'
name|'flavor_access_remove'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove given tenant from the flavor access list."""'
newline|'\n'
name|'instance_type_id'
op|'='
name|'_flavor_get_id_from_flavor'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'count'
op|'='
name|'_flavor_access_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorAccessNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_flavor_extra_specs_get_query
dedent|''
dedent|''
name|'def'
name|'_flavor_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'instance_type_id_subq'
op|'='
name|'_flavor_get_id_from_flavor_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id_subq'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_extra_specs_get
name|'def'
name|'flavor_extra_specs_get'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_flavor_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
name|'row'
op|'['
string|"'key'"
op|']'
op|':'
name|'row'
op|'['
string|"'value'"
op|']'
name|'for'
name|'row'
name|'in'
name|'rows'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_extra_specs_delete
name|'def'
name|'flavor_extra_specs_delete'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_flavor_extra_specs_get_query'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
comment|'# did not find the extra spec'
nl|'\n'
name|'if'
name|'result'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'FlavorExtraSpecsNotFound'
op|'('
nl|'\n'
name|'extra_specs_key'
op|'='
name|'key'
op|','
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|flavor_extra_specs_update_or_create
name|'def'
name|'flavor_extra_specs_update_or_create'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'specs'
op|','
nl|'\n'
name|'max_retries'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'attempt'
name|'in'
name|'range'
op|'('
name|'max_retries'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance_type_id'
op|'='
name|'_flavor_get_id_from_flavor'
op|'('
name|'context'
op|','
nl|'\n'
name|'flavor_id'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'spec_refs'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_type_id'
op|'='
name|'instance_type_id'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'specs'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'existing_keys'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'spec_ref'
name|'in'
name|'spec_refs'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'spec_ref'
op|'['
string|'"key"'
op|']'
newline|'\n'
name|'existing_keys'
op|'.'
name|'add'
op|'('
name|'key'
op|')'
newline|'\n'
name|'spec_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'specs'
op|'['
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'specs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'key'
name|'in'
name|'existing_keys'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'spec_ref'
op|'='
name|'models'
op|'.'
name|'InstanceTypeExtraSpecs'
op|'('
op|')'
newline|'\n'
name|'spec_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'value'
op|','
nl|'\n'
string|'"instance_type_id"'
op|':'
name|'instance_type_id'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'spec_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'specs'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
comment|'# a concurrent transaction has been committed,'
nl|'\n'
comment|'# try again unless this was the last attempt'
nl|'\n'
indent|'            '
name|'if'
name|'attempt'
op|'=='
name|'max_retries'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'FlavorExtraSpecUpdateCreateFailed'
op|'('
nl|'\n'
name|'id'
op|'='
name|'flavor_id'
op|','
name|'retries'
op|'='
name|'max_retries'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|cell_create
name|'def'
name|'cell_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'cell'
op|'='
name|'models'
op|'.'
name|'Cell'
op|'('
op|')'
newline|'\n'
name|'cell'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'cell'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'context'
op|'.'
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CellExists'
op|'('
name|'name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cell'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_cell_get_by_name_query
dedent|''
name|'def'
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Cell'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|cell_update
name|'def'
name|'cell_update'
op|'('
name|'context'
op|','
name|'cell_name'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'cell_query'
op|'='
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cell_query'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CellNotFound'
op|'('
name|'cell_name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
dedent|''
name|'cell'
op|'='
name|'cell_query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'cell'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|cell_delete
name|'def'
name|'cell_delete'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|cell_get
name|'def'
name|'cell_get'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_cell_get_by_name_query'
op|'('
name|'context'
op|','
name|'cell_name'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CellNotFound'
op|'('
name|'cell_name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|cell_get_all
name|'def'
name|'cell_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Cell'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'########################'
nl|'\n'
comment|'# User-provided metadata'
nl|'\n'
nl|'\n'
DECL|function|_instance_metadata_get_multi
dedent|''
name|'def'
name|'_instance_metadata_get_multi'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_metadata_get_query
dedent|''
name|'def'
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceMetadata'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_metadata_get
name|'def'
name|'instance_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
name|'row'
op|'['
string|"'key'"
op|']'
op|':'
name|'row'
op|'['
string|"'value'"
op|']'
name|'for'
name|'row'
name|'in'
name|'rows'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|instance_metadata_delete
name|'def'
name|'instance_metadata_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'key'
op|'='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|instance_metadata_update
name|'def'
name|'instance_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'delete'
op|':'
newline|'\n'
indent|'            '
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'already_existing_keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'meta_refs'
op|'='
name|'_instance_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'meta_refs'
op|':'
newline|'\n'
indent|'            '
name|'already_existing_keys'
op|'.'
name|'append'
op|'('
name|'meta_ref'
op|'.'
name|'key'
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'meta_ref'
op|'.'
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_keys'
op|'='
name|'set'
op|'('
name|'all_keys'
op|')'
op|'-'
name|'set'
op|'('
name|'already_existing_keys'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'new_keys'
op|':'
newline|'\n'
indent|'            '
name|'meta_ref'
op|'='
name|'models'
op|'.'
name|'InstanceMetadata'
op|'('
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|','
nl|'\n'
string|'"instance_uuid"'
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'meta_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#######################'
nl|'\n'
comment|'# System-owned metadata'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_system_metadata_get_multi
dedent|''
dedent|''
name|'def'
name|'_instance_system_metadata_get_multi'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_system_metadata_get_query
dedent|''
name|'def'
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_system_metadata_get
name|'def'
name|'instance_system_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
name|'row'
op|'['
string|"'key'"
op|']'
op|':'
name|'row'
op|'['
string|"'value'"
op|']'
name|'for'
name|'row'
name|'in'
name|'rows'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|instance_system_metadata_update
name|'def'
name|'instance_system_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'delete'
op|':'
newline|'\n'
indent|'            '
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'already_existing_keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'meta_refs'
op|'='
name|'_instance_system_metadata_get_query'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'meta_refs'
op|':'
newline|'\n'
indent|'            '
name|'already_existing_keys'
op|'.'
name|'append'
op|'('
name|'meta_ref'
op|'.'
name|'key'
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'meta_ref'
op|'.'
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_keys'
op|'='
name|'set'
op|'('
name|'all_keys'
op|')'
op|'-'
name|'set'
op|'('
name|'already_existing_keys'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'new_keys'
op|':'
newline|'\n'
indent|'            '
name|'meta_ref'
op|'='
name|'models'
op|'.'
name|'InstanceSystemMetadata'
op|'('
op|')'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|','
nl|'\n'
string|'"instance_uuid"'
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'meta_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_create
dedent|''
dedent|''
name|'def'
name|'agent_build_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'agent_build_ref'
op|'='
name|'models'
op|'.'
name|'AgentBuild'
op|'('
op|')'
newline|'\n'
name|'agent_build_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'agent_build_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AgentBuildExists'
op|'('
name|'hypervisor'
op|'='
name|'values'
op|'['
string|"'hypervisor'"
op|']'
op|','
nl|'\n'
name|'os'
op|'='
name|'values'
op|'['
string|"'os'"
op|']'
op|','
name|'architecture'
op|'='
name|'values'
op|'['
string|"'architecture'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'agent_build_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_get_by_triple
dedent|''
name|'def'
name|'agent_build_get_by_triple'
op|'('
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'hypervisor'
op|'='
name|'hypervisor'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'os'
op|'='
name|'os'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'architecture'
op|'='
name|'architecture'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_get_all
dedent|''
name|'def'
name|'agent_build_get_all'
op|'('
name|'context'
op|','
name|'hypervisor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'hypervisor'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'hypervisor'
op|'='
name|'hypervisor'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_destroy
dedent|''
dedent|''
name|'def'
name|'agent_build_destroy'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows_affected'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'id'
op|'='
name|'agent_build_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'rows_affected'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_update
dedent|''
dedent|''
name|'def'
name|'agent_build_update'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows_affected'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'AgentBuild'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'rows_affected'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|'('
name|'id'
op|'='
name|'agent_build_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|bw_usage_get
name|'def'
name|'bw_usage_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'start_period'
op|','
name|'mac'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
string|"'start_period'"
op|':'
name|'start_period'
op|'}'
newline|'\n'
name|'values'
op|'='
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_period'"
op|')'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'values'
op|'['
string|"'start_period'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'mac'
op|'='
name|'mac'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|bw_usage_get_by_uuids
name|'def'
name|'bw_usage_get_by_uuids'
op|'('
name|'context'
op|','
name|'uuids'
op|','
name|'start_period'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
string|"'start_period'"
op|':'
name|'start_period'
op|'}'
newline|'\n'
name|'values'
op|'='
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_period'"
op|')'
newline|'\n'
name|'return'
op|'('
nl|'\n'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'use_slave'
op|')'
op|'.'
nl|'\n'
name|'filter'
op|'('
name|'models'
op|'.'
name|'BandwidthUsage'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'uuids'
op|')'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'values'
op|'['
string|"'start_period'"
op|']'
op|')'
op|'.'
nl|'\n'
name|'all'
op|'('
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'oslo_db_api'
op|'.'
name|'wrap_db_retry'
op|'('
name|'max_retries'
op|'='
number|'5'
op|','
name|'retry_on_deadlock'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|bw_usage_update
name|'def'
name|'bw_usage_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
name|'bw_in'
op|','
name|'bw_out'
op|','
nl|'\n'
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
name|'last_refreshed'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'last_refreshed'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'last_refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(comstud): More often than not, we'll be updating records vs"
nl|'\n'
comment|'# creating records.  Optimize accordingly, trying to update existing'
nl|'\n'
comment|'# records.  Fall back to creation when no rows are updated.'
nl|'\n'
dedent|''
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts_values'
op|'='
op|'{'
string|"'last_refreshed'"
op|':'
name|'last_refreshed'
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|'}'
newline|'\n'
name|'ts_keys'
op|'='
op|'('
string|"'start_period'"
op|','
string|"'last_refreshed'"
op|')'
newline|'\n'
name|'ts_values'
op|'='
name|'convert_objects_related_datetimes'
op|'('
name|'ts_values'
op|','
op|'*'
name|'ts_keys'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'last_refreshed'"
op|':'
name|'ts_values'
op|'['
string|"'last_refreshed'"
op|']'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
name|'last_ctr_in'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
name|'last_ctr_out'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
name|'bw_in'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
name|'bw_out'
op|'}'
newline|'\n'
name|'bw_usage'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'BandwidthUsage'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|'.'
name|'filter_by'
op|'('
name|'start_period'
op|'='
name|'ts_values'
op|'['
string|"'start_period'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'mac'
op|'='
name|'mac'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'bw_usage'
op|':'
newline|'\n'
indent|'            '
name|'bw_usage'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'bw_usage'
newline|'\n'
nl|'\n'
dedent|''
name|'bwusage'
op|'='
name|'models'
op|'.'
name|'BandwidthUsage'
op|'('
op|')'
newline|'\n'
name|'bwusage'
op|'.'
name|'start_period'
op|'='
name|'ts_values'
op|'['
string|"'start_period'"
op|']'
newline|'\n'
name|'bwusage'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'bwusage'
op|'.'
name|'mac'
op|'='
name|'mac'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_refreshed'
op|'='
name|'ts_values'
op|'['
string|"'last_refreshed'"
op|']'
newline|'\n'
name|'bwusage'
op|'.'
name|'bw_in'
op|'='
name|'bw_in'
newline|'\n'
name|'bwusage'
op|'.'
name|'bw_out'
op|'='
name|'bw_out'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_ctr_in'
op|'='
name|'last_ctr_in'
newline|'\n'
name|'bwusage'
op|'.'
name|'last_ctr_out'
op|'='
name|'last_ctr_out'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'bwusage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
comment|'# NOTE(sirp): Possible race if two greenthreads attempt to create'
nl|'\n'
comment|'# the usage entry at the same time. First one wins.'
nl|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'bwusage'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|vol_get_usage_by_time
name|'def'
name|'vol_get_usage_by_time'
op|'('
name|'context'
op|','
name|'begin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return volumes usage that have been updated after a specified time."""'
newline|'\n'
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeUsage'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter'
op|'('
name|'or_'
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_last_refreshed'
op|'=='
name|'null'
op|'('
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_last_refreshed'
op|'>'
name|'begin'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'curr_last_refreshed'
op|'=='
name|'null'
op|'('
op|')'
op|','
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'curr_last_refreshed'
op|'>'
name|'begin'
op|','
nl|'\n'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|vol_usage_update
name|'def'
name|'vol_usage_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'rd_req'
op|','
name|'rd_bytes'
op|','
name|'wr_req'
op|','
name|'wr_bytes'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'availability_zone'
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'refreshed'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# NOTE(dricco): We will be mostly updating current usage records vs'
nl|'\n'
comment|'# updating total or creating records. Optimize accordingly.'
nl|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'curr_last_refreshed'"
op|':'
name|'refreshed'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
name|'rd_req'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
name|'rd_bytes'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
name|'wr_req'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
name|'wr_bytes'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'user_id'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'tot_last_refreshed'"
op|':'
name|'refreshed'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
name|'rd_req'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'rd_bytes'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
name|'wr_req'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'wr_bytes'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'user_id'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'current_usage'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'VolumeUsage'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'volume_id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'current_usage'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'rd_req'
op|'<'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
name|'or'
nl|'\n'
name|'rd_bytes'
op|'<'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
name|'or'
nl|'\n'
name|'wr_req'
op|'<'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
name|'or'
nl|'\n'
name|'wr_bytes'
op|'<'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_LI'
op|'('
string|'"Volume(%s) has lower stats then what is in "'
nl|'\n'
string|'"the database. Instance must have been rebooted "'
nl|'\n'
string|'"or crashed. Updating totals."'
op|')'
op|','
name|'id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'                    '
name|'values'
op|'['
string|"'tot_reads'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_read_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_writes'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_write_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'values'
op|'['
string|"'tot_reads'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_reads'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|'+'
nl|'\n'
name|'rd_req'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_read_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_read_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_read_bytes'"
op|']'
op|'+'
name|'rd_bytes'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_writes'"
op|']'
op|'='
op|'('
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_writes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_writes'"
op|']'
op|'+'
nl|'\n'
name|'wr_req'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'tot_write_bytes'"
op|']'
op|'='
op|'('
nl|'\n'
name|'models'
op|'.'
name|'VolumeUsage'
op|'.'
name|'tot_write_bytes'
op|'+'
nl|'\n'
name|'current_usage'
op|'['
string|"'curr_write_bytes'"
op|']'
op|'+'
name|'wr_bytes'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'current_usage'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'current_usage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'refresh'
op|'('
name|'current_usage'
op|')'
newline|'\n'
name|'return'
name|'current_usage'
newline|'\n'
nl|'\n'
dedent|''
name|'vol_usage'
op|'='
name|'models'
op|'.'
name|'VolumeUsage'
op|'('
op|')'
newline|'\n'
name|'vol_usage'
op|'.'
name|'volume_id'
op|'='
name|'id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'instance_uuid'
op|'='
name|'instance_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
name|'vol_usage'
op|'.'
name|'availability_zone'
op|'='
name|'availability_zone'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'update_totals'
op|':'
newline|'\n'
indent|'            '
name|'vol_usage'
op|'.'
name|'curr_last_refreshed'
op|'='
name|'refreshed'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_reads'
op|'='
name|'rd_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_read_bytes'
op|'='
name|'rd_bytes'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_writes'
op|'='
name|'wr_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'curr_write_bytes'
op|'='
name|'wr_bytes'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vol_usage'
op|'.'
name|'tot_last_refreshed'
op|'='
name|'refreshed'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_reads'
op|'='
name|'rd_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_read_bytes'
op|'='
name|'rd_bytes'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_writes'
op|'='
name|'wr_req'
newline|'\n'
name|'vol_usage'
op|'.'
name|'tot_write_bytes'
op|'='
name|'wr_bytes'
newline|'\n'
nl|'\n'
dedent|''
name|'vol_usage'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'vol_usage'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get
dedent|''
dedent|''
name|'def'
name|'s3_image_get'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided id."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'S3Image'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'image_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get_by_uuid
dedent|''
name|'def'
name|'s3_image_get_by_uuid'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided uuid."""'
newline|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'S3Image'
op|','
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'image_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_create
dedent|''
name|'def'
name|'s3_image_create'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create local s3 image represented by provided uuid."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'s3_image_ref'
op|'='
name|'models'
op|'.'
name|'S3Image'
op|'('
op|')'
newline|'\n'
name|'s3_image_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'image_uuid'
op|'}'
op|')'
newline|'\n'
name|'s3_image_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'db_exc'
op|'.'
name|'DBError'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'s3_image_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_aggregate_get_query
dedent|''
name|'def'
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'id_field'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'columns_to_join'
op|'='
op|'{'
name|'models'
op|'.'
name|'Aggregate'
op|':'
op|'['
string|"'_hosts'"
op|','
string|"'_metadata'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'columns_to_join'
op|'.'
name|'get'
op|'('
name|'model_class'
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'id'
name|'and'
name|'id_field'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'id_field'
op|'=='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_create
dedent|''
name|'def'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'query'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'name'
op|','
nl|'\n'
name|'values'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'aggregate'
op|'='
name|'models'
op|'.'
name|'Aggregate'
op|'('
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
comment|"# We don't want these to be lazy loaded later.  We know there is"
nl|'\n'
comment|'# nothing here since we just created this aggregate.'
nl|'\n'
name|'aggregate'
op|'.'
name|'_hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'aggregate'
op|'.'
name|'_metadata'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNameExists'
op|'('
name|'aggregate_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|','
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get
dedent|''
name|'def'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'aggregate'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get_by_host
dedent|''
name|'def'
name|'aggregate_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return rows that match host (mandatory) and metadata key (optional).\n\n    :param host matches host, and is required.\n    :param key Matches metadata key, if not None.\n    """'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'_hosts'"
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|"'_metadata'"
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|"'_hosts'"
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|'"_metadata"'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'aggregate_metadata_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|'"_hosts"'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|'"_metadata"'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'contains_eager'
op|'('
string|'"_metadata"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
dedent|''
name|'rows'
op|'='
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'metadata'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'set'
op|')'
newline|'\n'
name|'for'
name|'agg'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'kv'
name|'in'
name|'agg'
op|'.'
name|'_metadata'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
name|'kv'
op|'['
string|"'key'"
op|']'
op|']'
op|'.'
name|'add'
op|'('
name|'kv'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get_by_metadata_key
dedent|''
name|'def'
name|'aggregate_get_by_metadata_key'
op|'('
name|'context'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return rows that match metadata key.\n\n    :param key Matches metadata key.\n    """'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'join'
op|'('
string|'"_metadata"'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'=='
name|'key'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'contains_eager'
op|'('
string|'"_metadata"'
op|')'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
string|'"_hosts"'
op|')'
op|')'
newline|'\n'
name|'return'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_update
dedent|''
name|'def'
name|'aggregate_update'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|'"name"'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_by_name'
op|'='
op|'('
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'name'
op|','
nl|'\n'
name|'values'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'first'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'aggregate_by_name'
name|'and'
name|'aggregate_by_name'
op|'.'
name|'id'
op|'!='
name|'aggregate_id'
op|':'
newline|'\n'
comment|'# there is another aggregate with the new name'
nl|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNameExists'
op|'('
name|'aggregate_name'
op|'='
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'aggregate'
op|'='
op|'('
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'first'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_delete'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'aggregate'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|'"availability_zone"'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'az'
op|'='
name|'values'
op|'.'
name|'pop'
op|'('
string|"'availability_zone'"
op|')'
newline|'\n'
name|'if'
string|"'metadata'"
name|'not'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
name|'az'
op|'}'
newline|'\n'
name|'set_delete'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'az'
newline|'\n'
dedent|''
dedent|''
name|'metadata'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'if'
name|'metadata'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'metadata'"
op|')'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'set_delete'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'aggregate'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'aggregate'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'return'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_delete
dedent|''
dedent|''
name|'def'
name|'aggregate_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|','
nl|'\n'
name|'models'
op|'.'
name|'Aggregate'
op|'.'
name|'id'
op|','
nl|'\n'
name|'aggregate_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'AggregateNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete Metadata'
nl|'\n'
dedent|''
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get_all
dedent|''
dedent|''
name|'def'
name|'aggregate_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Aggregate'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_aggregate_metadata_get_query
dedent|''
name|'def'
name|'_aggregate_metadata_get_query'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'session'
op|'='
name|'None'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"yes"'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_get
name|'def'
name|'aggregate_metadata_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
name|'r'
op|'['
string|"'key'"
op|']'
op|':'
name|'r'
op|'['
string|"'value'"
op|']'
name|'for'
name|'r'
name|'in'
name|'rows'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_delete
name|'def'
name|'aggregate_metadata_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'aggregate_id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'key'
op|'='
name|'key'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateMetadataNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|','
nl|'\n'
name|'metadata_key'
op|'='
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_metadata_add
name|'def'
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'metadata'
op|','
name|'set_delete'
op|'='
name|'False'
op|','
nl|'\n'
name|'max_retries'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'all_keys'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'attempt'
name|'in'
name|'range'
op|'('
name|'max_retries'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'query'
op|'='
name|'_aggregate_metadata_get_query'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'set_delete'
op|':'
newline|'\n'
indent|'                    '
name|'query'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'already_existing_keys'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'if'
name|'all_keys'
op|':'
newline|'\n'
indent|'                    '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'key'
op|'.'
name|'in_'
op|'('
name|'all_keys'
op|')'
op|')'
newline|'\n'
name|'for'
name|'meta_ref'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'key'
op|'='
name|'meta_ref'
op|'.'
name|'key'
newline|'\n'
name|'meta_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"value"'
op|':'
name|'metadata'
op|'['
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
name|'already_existing_keys'
op|'.'
name|'add'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'new_entries'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'key'
name|'in'
name|'already_existing_keys'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'new_entries'
op|'.'
name|'append'
op|'('
op|'{'
string|'"key"'
op|':'
name|'key'
op|','
nl|'\n'
string|'"value"'
op|':'
name|'value'
op|','
nl|'\n'
string|'"aggregate_id"'
op|':'
name|'aggregate_id'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'new_entries'
op|':'
newline|'\n'
indent|'                    '
name|'session'
op|'.'
name|'execute'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'AggregateMetadata'
op|'.'
name|'__table__'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
name|'new_entries'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'metadata'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
comment|'# a concurrent transaction has been committed,'
nl|'\n'
comment|'# try again unless this was the last attempt'
nl|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
name|'as'
name|'ctxt'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'attempt'
op|'<'
name|'max_retries'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'ctxt'
op|'.'
name|'reraise'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Add metadata failed for aggregate %(id)s after "'
nl|'\n'
string|'"%(retries)s retries"'
op|')'
op|'%'
op|'{'
string|'"id"'
op|':'
name|'aggregate_id'
op|','
nl|'\n'
string|'"retries"'
op|':'
name|'max_retries'
op|'}'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_get_all
name|'def'
name|'aggregate_host_get_all'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'r'
op|'.'
name|'host'
name|'for'
name|'r'
name|'in'
name|'rows'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_delete
name|'def'
name|'aggregate_host_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'count'
op|'='
name|'_aggregate_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|','
nl|'\n'
name|'models'
op|'.'
name|'AggregateHost'
op|'.'
name|'aggregate_id'
op|','
nl|'\n'
name|'aggregate_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|'('
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'require_aggregate_exists'
newline|'\n'
DECL|function|aggregate_host_add
name|'def'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'host_ref'
op|'='
name|'models'
op|'.'
name|'AggregateHost'
op|'('
op|')'
newline|'\n'
name|'host_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|'"host"'
op|':'
name|'host'
op|','
string|'"aggregate_id"'
op|':'
name|'aggregate_id'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'host_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'AggregateHostExists'
op|'('
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'aggregate_id'
op|'='
name|'aggregate_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'host_ref'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_create
dedent|''
name|'def'
name|'instance_fault_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new InstanceFault."""'
newline|'\n'
name|'fault_ref'
op|'='
name|'models'
op|'.'
name|'InstanceFault'
op|'('
op|')'
newline|'\n'
name|'fault_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'fault_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'fault_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_get_by_instance_uuids
dedent|''
name|'def'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance faults for the provided instance_uuids."""'
newline|'\n'
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'rows'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceFault'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceFault'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'instance_uuids'
op|')'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'desc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'['
name|'instance_uuid'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'dict'
op|'('
name|'row'
op|')'
newline|'\n'
name|'output'
op|'['
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_start
dedent|''
name|'def'
name|'action_start'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|')'
newline|'\n'
name|'action_ref'
op|'='
name|'models'
op|'.'
name|'InstanceAction'
op|'('
op|')'
newline|'\n'
name|'action_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'action_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'action_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_finish
dedent|''
name|'def'
name|'action_finish'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|','
string|"'finish_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'query'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'one'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|actions_get
dedent|''
dedent|''
name|'def'
name|'actions_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance actions for the provided uuid."""'
newline|'\n'
name|'actions'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'desc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
name|'actions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_get_by_request_id
dedent|''
name|'def'
name|'action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the action by request_id and given instance."""'
newline|'\n'
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|')'
newline|'\n'
name|'return'
name|'action'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_action_get_by_request_id
dedent|''
name|'def'
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'request_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'request_id'
op|'='
name|'request_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_action_get_last_created_by_instance_uuid
dedent|''
name|'def'
name|'_action_get_last_created_by_instance_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
op|'('
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceAction'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
nl|'\n'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
nl|'\n'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'desc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
nl|'\n'
name|'first'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_start
dedent|''
name|'def'
name|'action_event_start'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Start an event on an instance action."""'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
comment|'# When nova-compute restarts, the context is generated again in'
nl|'\n'
comment|'# init_host workflow, the request_id was different with the request_id'
nl|'\n'
comment|"# recorded in InstanceAction, so we can't get the original record"
nl|'\n'
comment|'# according to request_id. Try to get the last created action so that'
nl|'\n'
comment|'# init_instance can continue to finish the recovery action, like:'
nl|'\n'
comment|'# powering_off, unpausing, and so on.'
nl|'\n'
name|'if'
name|'not'
name|'action'
name|'and'
name|'not'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'action'
op|'='
name|'_action_get_last_created_by_instance_uuid'
op|'('
nl|'\n'
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'action'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'['
string|"'action_id'"
op|']'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'event_ref'
op|'='
name|'models'
op|'.'
name|'InstanceActionEvent'
op|'('
op|')'
newline|'\n'
name|'event_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'event_ref'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'event_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_finish
dedent|''
name|'def'
name|'action_event_finish'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Finish an event on an instance action."""'
newline|'\n'
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
string|"'start_time'"
op|','
string|"'finish_time'"
op|')'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
name|'_action_get_by_request_id'
op|'('
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
nl|'\n'
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
comment|'# When nova-compute restarts, the context is generated again in'
nl|'\n'
comment|'# init_host workflow, the request_id was different with the request_id'
nl|'\n'
comment|"# recorded in InstanceAction, so we can't get the original record"
nl|'\n'
comment|'# according to request_id. Try to get the last created action so that'
nl|'\n'
comment|'# init_instance can continue to finish the recovery action, like:'
nl|'\n'
comment|'# powering_off, unpausing, and so on.'
nl|'\n'
name|'if'
name|'not'
name|'action'
name|'and'
name|'not'
name|'context'
op|'.'
name|'project_id'
op|':'
newline|'\n'
indent|'            '
name|'action'
op|'='
name|'_action_get_last_created_by_instance_uuid'
op|'('
nl|'\n'
name|'context'
op|','
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'action'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|'('
nl|'\n'
name|'request_id'
op|'='
name|'values'
op|'['
string|"'request_id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'event_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'event'
op|'='
name|'values'
op|'['
string|"'event'"
op|']'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'event_ref'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceActionEventNotFound'
op|'('
name|'action_id'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'event'
op|'='
name|'values'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'event_ref'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'values'
op|'['
string|"'result'"
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'            '
name|'action'
op|'.'
name|'update'
op|'('
op|'{'
string|"'message'"
op|':'
string|"'Error'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'event_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_events_get
dedent|''
name|'def'
name|'action_events_get'
op|'('
name|'context'
op|','
name|'action_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'events'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action_id'
op|')'
op|'.'
name|'order_by'
op|'('
name|'desc'
op|'('
string|'"created_at"'
op|')'
op|','
name|'desc'
op|'('
string|'"id"'
op|')'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'events'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|action_event_get_by_id
dedent|''
name|'def'
name|'action_event_get_by_id'
op|'('
name|'context'
op|','
name|'action_id'
op|','
name|'event_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'event'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceActionEvent'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'action_id'
op|'='
name|'action_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'event_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'event'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_instance_create
name|'def'
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create ec2 compatible instance by provided uuid."""'
newline|'\n'
name|'ec2_instance_ref'
op|'='
name|'models'
op|'.'
name|'InstanceIdMapping'
op|'('
op|')'
newline|'\n'
name|'ec2_instance_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ec2_instance_ref'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'ec2_instance_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_instance_get_by_uuid
name|'def'
name|'ec2_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|ec2_instance_get_by_id
name|'def'
name|'ec2_instance_get_by_id'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
DECL|function|get_instance_uuid_by_ec2_id
name|'def'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'ec2_instance_get_by_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
name|'return'
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ec2_instance_get_query
dedent|''
name|'def'
name|'_ec2_instance_get_query'
op|'('
name|'context'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceIdMapping'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_task_log_get_query
dedent|''
name|'def'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
string|"'period_beginning'"
op|':'
name|'period_beginning'
op|','
nl|'\n'
string|"'period_ending'"
op|':'
name|'period_ending'
op|'}'
newline|'\n'
name|'values'
op|'='
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
op|'*'
name|'values'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'TaskLog'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'period_beginning'
op|'='
name|'values'
op|'['
string|"'period_beginning'"
op|']'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'period_ending'
op|'='
name|'values'
op|'['
string|"'period_ending'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'host'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'state'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'state'
op|'='
name|'state'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_get
dedent|''
name|'def'
name|'task_log_get'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
name|'host'
op|','
nl|'\n'
name|'state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_get_all
dedent|''
name|'def'
name|'task_log_get_all'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_begin_task
dedent|''
name|'def'
name|'task_log_begin_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
name|'task_items'
op|'='
name|'None'
op|','
name|'message'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
string|"'period_beginning'"
op|':'
name|'period_beginning'
op|','
nl|'\n'
string|"'period_ending'"
op|':'
name|'period_ending'
op|'}'
newline|'\n'
name|'values'
op|'='
name|'convert_objects_related_datetimes'
op|'('
name|'values'
op|','
op|'*'
name|'values'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'task'
op|'='
name|'models'
op|'.'
name|'TaskLog'
op|'('
op|')'
newline|'\n'
name|'task'
op|'.'
name|'task_name'
op|'='
name|'task_name'
newline|'\n'
name|'task'
op|'.'
name|'period_beginning'
op|'='
name|'values'
op|'['
string|"'period_beginning'"
op|']'
newline|'\n'
name|'task'
op|'.'
name|'period_ending'
op|'='
name|'values'
op|'['
string|"'period_ending'"
op|']'
newline|'\n'
name|'task'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'task'
op|'.'
name|'state'
op|'='
string|'"RUNNING"'
newline|'\n'
name|'if'
name|'message'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'message'
op|'='
name|'message'
newline|'\n'
dedent|''
name|'if'
name|'task_items'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'task_items'
op|'='
name|'task_items'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'task'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'TaskAlreadyRunning'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|','
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_end_task
dedent|''
dedent|''
name|'def'
name|'task_log_end_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
name|'dict'
op|'('
name|'state'
op|'='
string|'"DONE"'
op|','
name|'errors'
op|'='
name|'errors'
op|')'
newline|'\n'
name|'if'
name|'message'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'['
string|'"message"'
op|']'
op|'='
name|'message'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rows'
op|'='
name|'_task_log_get_query'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'if'
name|'rows'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|"# It's not running!"
nl|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'TaskNotRunning'
op|'('
name|'task_name'
op|'='
name|'task_name'
op|','
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_archive_deleted_rows_for_table
dedent|''
dedent|''
dedent|''
name|'def'
name|'_archive_deleted_rows_for_table'
op|'('
name|'tablename'
op|','
name|'max_rows'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Move up to max_rows rows from one tables to the corresponding\n    shadow table.\n\n    :returns: number of rows archived\n    """'
newline|'\n'
comment|'# NOTE(guochbo): There is a circular import, nova.db.sqlalchemy.utils'
nl|'\n'
comment|'# imports nova.db.sqlalchemy.api.'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'db_utils'
newline|'\n'
nl|'\n'
name|'engine'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
comment|'# NOTE(tdurakov): table metadata should be received'
nl|'\n'
comment|'# from models, not db tables. Default value specified by SoftDeleteMixin'
nl|'\n'
comment|'# is known only by models, not DB layer.'
nl|'\n'
comment|'# IMPORTANT: please do not change source of metadata information for table.'
nl|'\n'
name|'table'
op|'='
name|'models'
op|'.'
name|'BASE'
op|'.'
name|'metadata'
op|'.'
name|'tables'
op|'['
name|'tablename'
op|']'
newline|'\n'
nl|'\n'
name|'shadow_tablename'
op|'='
name|'_SHADOW_TABLE_PREFIX'
op|'+'
name|'tablename'
newline|'\n'
name|'rows_archived'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'shadow_table'
op|'='
name|'Table'
op|'('
name|'shadow_tablename'
op|','
name|'metadata'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NoSuchTableError'
op|':'
newline|'\n'
comment|'# No corresponding shadow table; skip it.'
nl|'\n'
indent|'        '
name|'return'
name|'rows_archived'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'tablename'
op|'=='
string|'"dns_domains"'
op|':'
newline|'\n'
comment|'# We have one table (dns_domains) where the key is called'
nl|'\n'
comment|'# "domain" rather than "id"'
nl|'\n'
indent|'        '
name|'column'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'domain'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'column'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
comment|'# NOTE(guochbo): Use DeleteFromSelect to avoid'
nl|'\n'
comment|"# database's limit of maximum parameter in one SQL statement."
nl|'\n'
dedent|''
name|'deleted_column'
op|'='
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
newline|'\n'
name|'columns'
op|'='
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'table'
op|'.'
name|'c'
op|']'
newline|'\n'
name|'insert'
op|'='
name|'shadow_table'
op|'.'
name|'insert'
op|'('
name|'inline'
op|'='
name|'True'
op|')'
op|'.'
name|'from_select'
op|'('
name|'columns'
op|','
nl|'\n'
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'table'
op|']'
op|','
nl|'\n'
name|'deleted_column'
op|'!='
name|'deleted_column'
op|'.'
name|'default'
op|'.'
name|'arg'
op|')'
op|'.'
nl|'\n'
name|'order_by'
op|'('
name|'column'
op|')'
op|'.'
name|'limit'
op|'('
name|'max_rows'
op|')'
op|')'
newline|'\n'
name|'query_delete'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'column'
op|']'
op|','
nl|'\n'
name|'deleted_column'
op|'!='
name|'deleted_column'
op|'.'
name|'default'
op|'.'
name|'arg'
op|')'
op|'.'
name|'order_by'
op|'('
name|'column'
op|')'
op|'.'
name|'limit'
op|'('
name|'max_rows'
op|')'
newline|'\n'
nl|'\n'
name|'delete_statement'
op|'='
name|'db_utils'
op|'.'
name|'DeleteFromSelect'
op|'('
name|'table'
op|','
name|'query_delete'
op|','
name|'column'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# Group the insert and delete in a transaction.'
nl|'\n'
indent|'        '
name|'with'
name|'conn'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert'
op|')'
newline|'\n'
name|'result_delete'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBReferenceError'
name|'as'
name|'ex'
op|':'
newline|'\n'
comment|'# A foreign key constraint keeps us from deleting some of'
nl|'\n'
comment|'# these rows until we clean up a dependent table.  Just'
nl|'\n'
comment|"# skip this table for now; we'll come back to it later."
nl|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_LW'
op|'('
string|'"IntegrityError detected when archiving table "'
nl|'\n'
string|'"%(tablename)s: %(error)s"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'tablename'"
op|':'
name|'tablename'
op|','
string|"'error'"
op|':'
name|'six'
op|'.'
name|'text_type'
op|'('
name|'ex'
op|')'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'rows_archived'
newline|'\n'
nl|'\n'
dedent|''
name|'rows_archived'
op|'='
name|'result_delete'
op|'.'
name|'rowcount'
newline|'\n'
nl|'\n'
name|'return'
name|'rows_archived'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|archive_deleted_rows
dedent|''
name|'def'
name|'archive_deleted_rows'
op|'('
name|'max_rows'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Move up to max_rows rows from production tables to the corresponding\n    shadow tables.\n\n    :returns: dict that maps table name to number of rows archived from that\n              table, for example:\n\n    ::\n\n        {\n            \'instances\': 5,\n            \'block_device_mapping\': 5,\n            \'pci_devices\': 2,\n        }\n\n    """'
newline|'\n'
name|'table_to_rows_archived'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'total_rows_archived'
op|'='
number|'0'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'get_engine'
op|'('
name|'use_slave'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'reflect'
op|'('
op|')'
newline|'\n'
comment|'# Reverse sort the tables so we get the leaf nodes first for processing.'
nl|'\n'
name|'for'
name|'table'
name|'in'
name|'reversed'
op|'('
name|'meta'
op|'.'
name|'sorted_tables'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tablename'
op|'='
name|'table'
op|'.'
name|'name'
newline|'\n'
comment|'# skip the special sqlalchemy-migrate migrate_version table and any'
nl|'\n'
comment|'# shadow tables'
nl|'\n'
name|'if'
op|'('
name|'tablename'
op|'=='
string|"'migrate_version'"
name|'or'
nl|'\n'
name|'tablename'
op|'.'
name|'startswith'
op|'('
name|'_SHADOW_TABLE_PREFIX'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'rows_archived'
op|'='
name|'_archive_deleted_rows_for_table'
op|'('
nl|'\n'
name|'tablename'
op|','
name|'max_rows'
op|'='
name|'max_rows'
op|'-'
name|'total_rows_archived'
op|')'
newline|'\n'
name|'total_rows_archived'
op|'+='
name|'rows_archived'
newline|'\n'
comment|'# Only report results for tables that had updates.'
nl|'\n'
name|'if'
name|'rows_archived'
op|':'
newline|'\n'
indent|'            '
name|'table_to_rows_archived'
op|'['
name|'tablename'
op|']'
op|'='
name|'rows_archived'
newline|'\n'
dedent|''
name|'if'
name|'total_rows_archived'
op|'>='
name|'max_rows'
op|':'
newline|'\n'
indent|'            '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'table_to_rows_archived'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_get_query
dedent|''
name|'def'
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'id_field'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'columns_to_join'
op|'='
op|'{'
name|'models'
op|'.'
name|'InstanceGroup'
op|':'
op|'['
string|"'_policies'"
op|','
string|"'_members'"
op|']'
op|'}'
newline|'\n'
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'session'
op|'='
name|'session'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'columns_to_join'
op|'.'
name|'get'
op|'('
name|'model_class'
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'options'
op|'('
name|'joinedload'
op|'('
name|'c'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'id'
name|'and'
name|'id_field'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'id_field'
op|'=='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'query'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_create
dedent|''
name|'def'
name|'instance_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'policies'
op|'='
name|'None'
op|','
nl|'\n'
name|'members'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new group."""'
newline|'\n'
name|'uuid'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'uuid'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuid'
newline|'\n'
dedent|''
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'group'
op|'='
name|'models'
op|'.'
name|'InstanceGroup'
op|'('
op|')'
newline|'\n'
name|'group'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'group'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupIdExists'
op|'('
name|'group_uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|"# We don't want these to be lazy loaded later. We know there is"
nl|'\n'
comment|'# nothing here since we just created this instance group.'
nl|'\n'
dedent|''
name|'group'
op|'.'
name|'_policies'
op|'='
op|'['
op|']'
newline|'\n'
name|'group'
op|'.'
name|'_members'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'_instance_group_policies_add'
op|'('
name|'context'
op|','
name|'group'
op|'.'
name|'id'
op|','
name|'policies'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'_instance_group_members_add'
op|'('
name|'context'
op|','
name|'group'
op|'.'
name|'id'
op|','
name|'members'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'instance_group_get'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_get
dedent|''
name|'def'
name|'instance_group_get'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a specific group by uuid."""'
newline|'\n'
name|'group'
op|'='
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'group_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'group'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
name|'group_uuid'
op|'='
name|'group_uuid'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'group'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_get_by_instance
dedent|''
name|'def'
name|'instance_group_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group_member'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceGroupMember'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'group_member'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
name|'group_uuid'
op|'='
string|"''"
op|')'
newline|'\n'
dedent|''
name|'group'
op|'='
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceGroup'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|'.'
name|'id'
op|','
nl|'\n'
name|'group_member'
op|'.'
name|'group_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'group'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
nl|'\n'
name|'group_uuid'
op|'='
name|'group_member'
op|'.'
name|'group_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'group'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_update
dedent|''
dedent|''
name|'def'
name|'instance_group_update'
op|'('
name|'context'
op|','
name|'group_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update the attributes of an group.\n\n    If values contains a metadata key, it updates the aggregate metadata\n    too. Similarly for the policies and members.\n    """'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'group_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'group'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
name|'group_uuid'
op|'='
name|'group_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'policies'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'policies'"
op|')'
newline|'\n'
name|'if'
name|'policies'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'_instance_group_policies_add'
op|'('
name|'context'
op|','
nl|'\n'
name|'group'
op|'.'
name|'id'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'policies'"
op|')'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'True'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'members'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'members'"
op|')'
newline|'\n'
name|'if'
name|'members'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'_instance_group_members_add'
op|'('
name|'context'
op|','
nl|'\n'
name|'group'
op|'.'
name|'id'
op|','
nl|'\n'
name|'values'
op|'.'
name|'pop'
op|'('
string|"'members'"
op|')'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'True'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'group'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'policies'"
op|']'
op|'='
name|'policies'
newline|'\n'
dedent|''
name|'if'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'members'"
op|']'
op|'='
name|'members'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_delete
dedent|''
dedent|''
dedent|''
name|'def'
name|'instance_group_delete'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete an group."""'
newline|'\n'
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group_id'
op|'='
name|'_instance_group_id'
op|'('
name|'context'
op|','
name|'group_uuid'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
name|'count'
op|'='
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'group_uuid'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
name|'group_uuid'
op|'='
name|'group_uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete policies, metadata and members'
nl|'\n'
dedent|''
name|'instance_models'
op|'='
op|'['
name|'models'
op|'.'
name|'InstanceGroupPolicy'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|']'
newline|'\n'
name|'for'
name|'model'
name|'in'
name|'instance_models'
op|':'
newline|'\n'
indent|'            '
name|'model_query'
op|'('
name|'context'
op|','
name|'model'
op|','
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'group_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_get_all
dedent|''
dedent|''
dedent|''
name|'def'
name|'instance_group_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all groups."""'
newline|'\n'
name|'return'
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceGroup'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_get_all_by_project_id
dedent|''
name|'def'
name|'instance_group_get_all_by_project_id'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all groups."""'
newline|'\n'
name|'return'
name|'_instance_group_get_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceGroup'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_count_by_project_and_user
dedent|''
name|'def'
name|'_instance_group_count_by_project_and_user'
op|'('
name|'context'
op|','
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'InstanceGroup'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'user_id'
op|'='
name|'user_id'
op|')'
op|'.'
name|'count'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_model_get_query
dedent|''
name|'def'
name|'_instance_group_model_get_query'
op|'('
name|'context'
op|','
name|'model_class'
op|','
name|'group_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'model_class'
op|','
nl|'\n'
name|'read_deleted'
op|'='
name|'read_deleted'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_id
dedent|''
name|'def'
name|'_instance_group_id'
op|'('
name|'context'
op|','
name|'group_uuid'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns the group database ID for the group UUID."""'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroup'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'InstanceGroup'
op|'.'
name|'id'
op|','
op|')'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'group_uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|'('
name|'group_uuid'
op|'='
name|'group_uuid'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_members_add
dedent|''
name|'def'
name|'_instance_group_members_add'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'members'
op|','
name|'set_delete'
op|'='
name|'False'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'all_members'
op|'='
name|'set'
op|'('
name|'members'
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'_instance_group_model_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|','
nl|'\n'
name|'id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'set_delete'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|'.'
name|'instance_id'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'all_members'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|'.'
name|'instance_id'
op|'.'
name|'in_'
op|'('
name|'all_members'
op|')'
op|')'
newline|'\n'
name|'already_existing'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'member_ref'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'already_existing'
op|'.'
name|'add'
op|'('
name|'member_ref'
op|'.'
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'instance_id'
name|'in'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_id'
name|'in'
name|'already_existing'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'member_ref'
op|'='
name|'models'
op|'.'
name|'InstanceGroupMember'
op|'('
op|')'
newline|'\n'
name|'member_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'group_id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'member_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'members'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_members_add
dedent|''
dedent|''
name|'def'
name|'instance_group_members_add'
op|'('
name|'context'
op|','
name|'group_uuid'
op|','
name|'members'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'id'
op|'='
name|'_instance_group_id'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
newline|'\n'
name|'return'
name|'_instance_group_members_add'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'members'
op|','
nl|'\n'
name|'set_delete'
op|'='
name|'set_delete'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_member_delete
dedent|''
name|'def'
name|'instance_group_member_delete'
op|'('
name|'context'
op|','
name|'group_uuid'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'id'
op|'='
name|'_instance_group_id'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
newline|'\n'
name|'count'
op|'='
name|'_instance_group_model_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|','
nl|'\n'
name|'id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceGroupMemberNotFound'
op|'('
name|'group_uuid'
op|'='
name|'group_uuid'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_group_members_get
dedent|''
dedent|''
name|'def'
name|'instance_group_members_get'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'id'
op|'='
name|'_instance_group_id'
op|'('
name|'context'
op|','
name|'group_uuid'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupMember'
op|','
nl|'\n'
op|'('
name|'models'
op|'.'
name|'InstanceGroupMember'
op|'.'
name|'instance_id'
op|','
op|')'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'group_id'
op|'='
name|'id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
name|'instance'
op|'['
number|'0'
op|']'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_instance_group_policies_add
dedent|''
name|'def'
name|'_instance_group_policies_add'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'policies'
op|','
name|'set_delete'
op|'='
name|'False'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'session'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'allpols'
op|'='
name|'set'
op|'('
name|'policies'
op|')'
newline|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
name|'_instance_group_model_get_query'
op|'('
name|'context'
op|','
nl|'\n'
name|'models'
op|'.'
name|'InstanceGroupPolicy'
op|','
nl|'\n'
name|'id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
name|'if'
name|'set_delete'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'.'
name|'filter'
op|'('
op|'~'
name|'models'
op|'.'
name|'InstanceGroupPolicy'
op|'.'
name|'policy'
op|'.'
name|'in_'
op|'('
name|'allpols'
op|')'
op|')'
op|'.'
name|'soft_delete'
op|'('
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'query'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'InstanceGroupPolicy'
op|'.'
name|'policy'
op|'.'
name|'in_'
op|'('
name|'allpols'
op|')'
op|')'
newline|'\n'
name|'already_existing'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'policy_ref'
name|'in'
name|'query'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'already_existing'
op|'.'
name|'add'
op|'('
name|'policy_ref'
op|'.'
name|'policy'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'policy'
name|'in'
name|'already_existing'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'policy_ref'
op|'='
name|'models'
op|'.'
name|'InstanceGroupPolicy'
op|'('
op|')'
newline|'\n'
name|'policy_ref'
op|'.'
name|'update'
op|'('
op|'{'
string|"'policy'"
op|':'
name|'policy'
op|','
nl|'\n'
string|"'group_id'"
op|':'
name|'id'
op|'}'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'policy_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'policies'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|pci_device_get_by_addr
name|'def'
name|'pci_device_get_by_addr'
op|'('
name|'context'
op|','
name|'node_id'
op|','
name|'dev_addr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pci_dev_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_node_id'
op|'='
name|'node_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'dev_addr'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'pci_dev_ref'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'PciDeviceNotFound'
op|'('
name|'node_id'
op|'='
name|'node_id'
op|','
name|'address'
op|'='
name|'dev_addr'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pci_dev_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|pci_device_get_by_id
name|'def'
name|'pci_device_get_by_id'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pci_dev_ref'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'id'
op|'='
name|'id'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'pci_dev_ref'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'PciDeviceNotFoundById'
op|'('
name|'id'
op|'='
name|'id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'pci_dev_ref'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|pci_device_get_all_by_node
name|'def'
name|'pci_device_get_all_by_node'
op|'('
name|'context'
op|','
name|'node_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_node_id'
op|'='
name|'node_id'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'require_context'
newline|'\n'
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|pci_device_get_all_by_instance_uuid
name|'def'
name|'pci_device_get_all_by_instance_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
string|"'allocated'"
op|')'
op|'.'
name|'filter_by'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'reader'
newline|'\n'
DECL|function|_instance_pcidevs_get_multi
name|'def'
name|'_instance_pcidevs_get_multi'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'status'
op|'='
string|"'allocated'"
op|')'
op|'.'
name|'filter'
op|'('
name|'models'
op|'.'
name|'PciDevice'
op|'.'
name|'instance_uuid'
op|'.'
name|'in_'
op|'('
name|'instance_uuids'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|pci_device_destroy
name|'def'
name|'pci_device_destroy'
op|'('
name|'context'
op|','
name|'node_id'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_node_id'
op|'='
name|'node_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
op|'.'
name|'soft_delete'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'PciDeviceNotFound'
op|'('
name|'node_id'
op|'='
name|'node_id'
op|','
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'main_context_manager'
op|'.'
name|'writer'
newline|'\n'
DECL|function|pci_device_update
name|'def'
name|'pci_device_update'
op|'('
name|'context'
op|','
name|'node_id'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'query'
op|'='
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'PciDevice'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'compute_node_id'
op|'='
name|'node_id'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
name|'if'
name|'query'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'device'
op|'='
name|'models'
op|'.'
name|'PciDevice'
op|'('
op|')'
newline|'\n'
name|'device'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'session'
op|'.'
name|'add'
op|'('
name|'device'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'query'
op|'.'
name|'one'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_add
dedent|''
name|'def'
name|'instance_tag_add'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'tag'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tag_ref'
op|'='
name|'models'
op|'.'
name|'Tag'
op|'('
op|')'
newline|'\n'
name|'tag_ref'
op|'.'
name|'resource_id'
op|'='
name|'instance_uuid'
newline|'\n'
name|'tag_ref'
op|'.'
name|'tag'
op|'='
name|'tag'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'tag_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|':'
newline|'\n'
comment|'# NOTE(snikitin): We should ignore tags duplicates'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'tag_ref'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_set
dedent|''
name|'def'
name|'instance_tag_set'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'tags'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'existing'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|'.'
name|'tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'existing'
op|'='
name|'set'
op|'('
name|'row'
op|'.'
name|'tag'
name|'for'
name|'row'
name|'in'
name|'existing'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'set'
op|'('
name|'tags'
op|')'
newline|'\n'
name|'to_delete'
op|'='
name|'existing'
op|'-'
name|'tags'
newline|'\n'
name|'to_add'
op|'='
name|'tags'
op|'-'
name|'existing'
newline|'\n'
nl|'\n'
name|'if'
name|'to_delete'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'filter'
op|'('
nl|'\n'
name|'models'
op|'.'
name|'Tag'
op|'.'
name|'tag'
op|'.'
name|'in_'
op|'('
name|'to_delete'
op|')'
op|')'
op|'.'
name|'delete'
op|'('
nl|'\n'
name|'synchronize_session'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'to_add'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'resource_id'"
op|':'
name|'instance_uuid'
op|','
string|"'tag'"
op|':'
name|'tag'
op|'}'
name|'for'
name|'tag'
name|'in'
name|'to_add'
op|']'
newline|'\n'
name|'session'
op|'.'
name|'execute'
op|'('
name|'models'
op|'.'
name|'Tag'
op|'.'
name|'__table__'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_get_by_instance_uuid
dedent|''
dedent|''
name|'def'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'return'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_delete
dedent|''
dedent|''
name|'def'
name|'instance_tag_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'tag'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'result'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|','
name|'tag'
op|'='
name|'tag'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceTagNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
name|'tag'
op|'='
name|'tag'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_delete_all
dedent|''
dedent|''
dedent|''
name|'def'
name|'instance_tag_delete_all'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'resource_id'
op|'='
name|'instance_uuid'
op|')'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_tag_exists
dedent|''
dedent|''
name|'def'
name|'instance_tag_exists'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'tag'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'session'
op|'.'
name|'begin'
op|'('
name|'subtransactions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_check_instance_exists_in_project'
op|'('
name|'context'
op|','
name|'session'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'q'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'Tag'
op|')'
op|'.'
name|'filter_by'
op|'('
nl|'\n'
name|'resource_id'
op|'='
name|'instance_uuid'
op|','
name|'tag'
op|'='
name|'tag'
op|')'
newline|'\n'
name|'return'
name|'session'
op|'.'
name|'query'
op|'('
name|'q'
op|'.'
name|'exists'
op|'('
op|')'
op|')'
op|'.'
name|'scalar'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
