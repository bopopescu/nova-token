begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Defines interface for DB access.\n\nThe underlying driver is loaded as a :class:`LazyPluggable`.\n\nFunctions in this module are imported into the nova.db namespace. Call these\nfunctions from nova.db namespace, not the nova.db.api namespace.\n\nAll functions in this module return objects that implement a dictionary-like\ninterface. Currently, many of these objects are sqlalchemy objects that\nimplement a dictionary interface. However, a future goal is to have all of\nthese objects be simple dictionaries.\n\n\n**Related Flags**\n\n:db_backend:  string to lookup in the list of LazyPluggable backends.\n              `sqlalchemy` is the only supported backend right now.\n\n:sql_connection:  string specifying the sqlalchemy connection to use, like:\n                  `sqlite:///var/lib/nova/nova.sqlite`.\n\n:enable_new_services:  when adding a new service to the database, is it in the\n                       pool of available hardware (Default: True)\n\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'rpcapi'
name|'as'
name|'cells_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|db_opts
name|'db_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'db_backend'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'sqlalchemy'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The backend to use for db'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'enable_new_services'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Services to be added to the available pool on create'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'instance_name_template'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'instance-%08x'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Template string to be used to generate instance names'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'snapshot_name_template'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'snapshot-%s'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Template string to be used to generate snapshot names'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'db_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|IMPL
name|'IMPL'
op|'='
name|'utils'
op|'.'
name|'LazyPluggable'
op|'('
string|"'db_backend'"
op|','
nl|'\n'
DECL|variable|sqlalchemy
name|'sqlalchemy'
op|'='
string|"'nova.db.sqlalchemy.api'"
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoMoreNetworks
name|'class'
name|'NoMoreNetworks'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""No more available networks."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoMoreTargets
dedent|''
name|'class'
name|'NoMoreTargets'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""No more available targets"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|constraint
dedent|''
name|'def'
name|'constraint'
op|'('
op|'**'
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a constraint object suitable for use with some updates."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'constraint'
op|'('
op|'**'
name|'conditions'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|equal_any
dedent|''
name|'def'
name|'equal_any'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return an equality condition object suitable for use in a constraint.\n\n    Equal_any conditions require that a model object\'s attribute equal any\n    one of the given values.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'equal_any'
op|'('
op|'*'
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|not_equal
dedent|''
name|'def'
name|'not_equal'
op|'('
op|'*'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return an inequality condition object suitable for use in a constraint.\n\n    Not_equal conditions require that a model object\'s attribute differs from\n    all of the given values.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'not_equal'
op|'('
op|'*'
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_destroy
dedent|''
name|'def'
name|'service_destroy'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the service or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_destroy'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get
dedent|''
name|'def'
name|'service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a service or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_by_host_and_topic
dedent|''
name|'def'
name|'service_get_by_host_and_topic'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a service by host it\'s on and topic it listens to."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_by_host_and_topic'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'topic'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all
dedent|''
name|'def'
name|'service_get_all'
op|'('
name|'context'
op|','
name|'disabled'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all services."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_all'
op|'('
name|'context'
op|','
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_by_topic
dedent|''
name|'def'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all services for a given topic."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_by_host
dedent|''
name|'def'
name|'service_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all services for a given host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_compute_by_host
dedent|''
name|'def'
name|'service_get_all_compute_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all compute services for a given host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_all_compute_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_all_compute_sorted
dedent|''
name|'def'
name|'service_get_all_compute_sorted'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all compute services sorted by instance count.\n\n    :returns: a list of (Service, instance_count) tuples.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_all_compute_sorted'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_get_by_args
dedent|''
name|'def'
name|'service_get_by_args'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'binary'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the state of a service by node name and binary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_get_by_args'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'binary'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_create
dedent|''
name|'def'
name|'service_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a service from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|service_update
dedent|''
name|'def'
name|'service_update'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on a service and update it.\n\n    Raises NotFound if service does not exist.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'service_update'
op|'('
name|'context'
op|','
name|'service_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get
dedent|''
name|'def'
name|'compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a computeNode."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_get'
op|'('
name|'context'
op|','
name|'compute_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get_all
dedent|''
name|'def'
name|'compute_node_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all computeNodes."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_search_by_hypervisor
dedent|''
name|'def'
name|'compute_node_search_by_hypervisor'
op|'('
name|'context'
op|','
name|'hypervisor_match'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get computeNodes given a hypervisor hostname match string."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_search_by_hypervisor'
op|'('
name|'context'
op|','
name|'hypervisor_match'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_create
dedent|''
name|'def'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a computeNode from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_update
dedent|''
name|'def'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'values'
op|','
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on a computeNode and update it.\n\n    Raises NotFound if computeNode does not exist.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'compute_id'
op|','
name|'values'
op|','
name|'prune_stats'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_get_by_host
dedent|''
name|'def'
name|'compute_node_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|compute_node_statistics
dedent|''
name|'def'
name|'compute_node_statistics'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'compute_node_statistics'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|certificate_create
dedent|''
name|'def'
name|'certificate_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a certificate from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'certificate_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|certificate_get_all_by_project
dedent|''
name|'def'
name|'certificate_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all certificates for a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'certificate_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|certificate_get_all_by_user
dedent|''
name|'def'
name|'certificate_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all certificates for a user."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'certificate_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|certificate_get_all_by_user_and_project
dedent|''
name|'def'
name|'certificate_get_all_by_user_and_project'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all certificates for a user and project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'certificate_get_all_by_user_and_project'
op|'('
name|'context'
op|','
nl|'\n'
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get
dedent|''
name|'def'
name|'floating_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_pools
dedent|''
name|'def'
name|'floating_ip_get_pools'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a list of floating ip pools"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_pools'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_allocate_address
dedent|''
name|'def'
name|'floating_ip_allocate_address'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'pool'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Allocate free floating ip from specified pool and return the address.\n\n    Raises if one is not available.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_allocate_address'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'pool'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_bulk_create
dedent|''
name|'def'
name|'floating_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a lot of floating ips from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_bulk_destroy
dedent|''
name|'def'
name|'floating_ip_bulk_destroy'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy a lot of floating ips from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_bulk_destroy'
op|'('
name|'context'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_create
dedent|''
name|'def'
name|'floating_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a floating ip from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_count_by_project
dedent|''
name|'def'
name|'floating_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Count floating ips used by project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_deallocate
dedent|''
name|'def'
name|'floating_ip_deallocate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deallocate a floating ip by address."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_deallocate'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_destroy
dedent|''
name|'def'
name|'floating_ip_destroy'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the floating_ip or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_disassociate
dedent|''
name|'def'
name|'floating_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate a floating ip from a fixed ip by address.\n\n    :returns: the address of the previous fixed ip or None\n              if the ip was not associated to an ip.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_fixed_ip_associate
dedent|''
name|'def'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'context'
op|','
name|'floating_address'
op|','
nl|'\n'
name|'fixed_address'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate a floating ip to a fixed_ip by address.\n\n    :returns: the address of the new fixed ip (fixed_address) or None\n              if the ip was already associated to the fixed ip.\n    """'
newline|'\n'
nl|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'context'
op|','
nl|'\n'
name|'floating_address'
op|','
nl|'\n'
name|'fixed_address'
op|','
nl|'\n'
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_all
dedent|''
name|'def'
name|'floating_ip_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all floating ips."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_all_by_host
dedent|''
name|'def'
name|'floating_ip_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all floating ips by host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_all_by_project
dedent|''
name|'def'
name|'floating_ip_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all floating ips by project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_by_address
dedent|''
name|'def'
name|'floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a floating ip by address or raise if it doesn\'t exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_by_fixed_address
dedent|''
name|'def'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'context'
op|','
name|'fixed_address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a floating ips by fixed address"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'context'
op|','
name|'fixed_address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_get_by_fixed_ip_id
dedent|''
name|'def'
name|'floating_ip_get_by_fixed_ip_id'
op|'('
name|'context'
op|','
name|'fixed_ip_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a floating ips by fixed address"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_get_by_fixed_ip_id'
op|'('
name|'context'
op|','
name|'fixed_ip_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_update
dedent|''
name|'def'
name|'floating_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a floating ip by address or raise if it doesn\'t exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|floating_ip_set_auto_assigned
dedent|''
name|'def'
name|'floating_ip_set_auto_assigned'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set auto_assigned flag to floating ip"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'floating_ip_set_auto_assigned'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dnsdomain_list
dedent|''
name|'def'
name|'dnsdomain_list'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a list of all zones in our database, public and private."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'dnsdomain_list'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dnsdomain_register_for_zone
dedent|''
name|'def'
name|'dnsdomain_register_for_zone'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'zone'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associated a DNS domain with an availability zone"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'zone'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dnsdomain_register_for_project
dedent|''
name|'def'
name|'dnsdomain_register_for_project'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associated a DNS domain with a project id"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'dnsdomain_register_for_project'
op|'('
name|'context'
op|','
name|'fqdomain'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dnsdomain_unregister
dedent|''
name|'def'
name|'dnsdomain_unregister'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Purge associations for the specified DNS zone"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dnsdomain_get
dedent|''
name|'def'
name|'dnsdomain_get'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the db record for the specified domain."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'dnsdomain_get'
op|'('
name|'context'
op|','
name|'fqdomain'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_update
dedent|''
name|'def'
name|'migration_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a migration instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_create
dedent|''
name|'def'
name|'migration_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a migration record."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get
dedent|''
name|'def'
name|'migration_get'
op|'('
name|'context'
op|','
name|'migration_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Finds a migration by the id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_get'
op|'('
name|'context'
op|','
name|'migration_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_by_instance_and_status
dedent|''
name|'def'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Finds a migration by the instance uuid its migrating."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'status'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_unconfirmed_by_dest_compute
dedent|''
name|'def'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'context'
op|','
name|'confirm_window'
op|','
nl|'\n'
name|'dest_compute'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Finds all unconfirmed migrations within the confirmation window for\n    a specific destination compute host.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'context'
op|','
nl|'\n'
name|'confirm_window'
op|','
name|'dest_compute'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|migration_get_in_progress_by_host_and_node
dedent|''
name|'def'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Finds all migrations for the given host + node  that are not yet\n    confirmed or reverted.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_associate
dedent|''
name|'def'
name|'fixed_ip_associate'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'reserved'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate fixed ip to instance.\n\n    Raises if fixed ip is not available.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
name|'network_id'
op|','
nl|'\n'
name|'reserved'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_associate_pool
dedent|''
name|'def'
name|'fixed_ip_associate_pool'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find free ip in network and associate it to instance or host.\n\n    Raises if one is not available.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'context'
op|','
name|'network_id'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_create
dedent|''
name|'def'
name|'fixed_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a fixed ip from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_bulk_create
dedent|''
name|'def'
name|'fixed_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a lot of fixed ips from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_bulk_create'
op|'('
name|'context'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_disassociate
dedent|''
name|'def'
name|'fixed_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate a fixed ip from an instance by address."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_disassociate'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_disassociate_all_by_timeout
dedent|''
name|'def'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'time'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate old fixed ips from host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'time'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get
dedent|''
name|'def'
name|'fixed_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get fixed ip by id or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_all
dedent|''
name|'def'
name|'fixed_ip_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all defined fixed ips."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_by_address
dedent|''
name|'def'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a fixed ip by address or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_by_address_detailed
dedent|''
name|'def'
name|'fixed_ip_get_by_address_detailed'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get detailed fixed ip info by address or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get_by_address_detailed'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_by_instance
dedent|''
name|'def'
name|'fixed_ip_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get fixed ips by instance or raise if none exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_get_by_network_host
dedent|''
name|'def'
name|'fixed_ip_get_by_network_host'
op|'('
name|'context'
op|','
name|'network_uuid'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get fixed ip for a host in a network."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_get_by_network_host'
op|'('
name|'context'
op|','
name|'network_uuid'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ips_by_virtual_interface
dedent|''
name|'def'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get fixed ips by virtual interface or raise if none exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixed_ip_update
dedent|''
name|'def'
name|'fixed_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a fixed ip from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'fixed_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_create
dedent|''
name|'def'
name|'virtual_interface_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a virtual interface record in the database."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get
dedent|''
name|'def'
name|'virtual_interface_get'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table,"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get_by_address
dedent|''
name|'def'
name|'virtual_interface_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table filtering on address."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get_by_uuid
dedent|''
name|'def'
name|'virtual_interface_get_by_uuid'
op|'('
name|'context'
op|','
name|'vif_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a virtual interface from the table filtering on vif uuid."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get_by_uuid'
op|'('
name|'context'
op|','
name|'vif_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get_by_instance
dedent|''
name|'def'
name|'virtual_interface_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets all virtual_interfaces for instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get_by_instance_and_network
dedent|''
name|'def'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets all virtual interfaces for instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
nl|'\n'
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_delete
dedent|''
name|'def'
name|'virtual_interface_delete'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete virtual interface record from the database."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'context'
op|','
name|'vif_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_delete_by_instance
dedent|''
name|'def'
name|'virtual_interface_delete_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete virtual interface records associated with instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_delete_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virtual_interface_get_all
dedent|''
name|'def'
name|'virtual_interface_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets all virtual interfaces from the table"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_create
dedent|''
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create an instance from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_data_get_for_project
dedent|''
name|'def'
name|'instance_data_get_for_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get (instance_count, total_cores, total_ram) for project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_data_get_for_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_destroy
dedent|''
name|'def'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'constraint'
op|'='
name|'None'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the instance or raise if it does not exist."""'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'if'
name|'update_cells'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'context'
op|','
name|'rv'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of instance destroy"'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_by_uuid
dedent|''
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get an instance or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get
dedent|''
name|'def'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get an instance or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all
dedent|''
name|'def'
name|'instance_get_all'
op|'('
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_filters
dedent|''
name|'def'
name|'instance_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|'='
string|"'created_at'"
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances that match all filters."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|','
nl|'\n'
name|'sort_dir'
op|','
name|'limit'
op|'='
name|'limit'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_active_by_window
dedent|''
name|'def'
name|'instance_get_active_by_window'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|'='
name|'None'
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get instances active during a certain time window.\n\n    Specifying a project_id will filter for a certain project.\n    Specifying a host will filter for instances on a given compute host.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_active_by_window'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_active_by_window_joined
dedent|''
name|'def'
name|'instance_get_active_by_window_joined'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get instances and joins active during a certain time window.\n\n    Specifying a project_id will filter for a certain project.\n    Specifying a host will filter for instances on a given compute host.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_project
dedent|''
name|'def'
name|'instance_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances belonging to a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host
dedent|''
name|'def'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances belonging to a host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host_and_node
dedent|''
name|'def'
name|'instance_get_all_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances belonging to a node."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_host_and_not_type
dedent|''
name|'def'
name|'instance_get_all_by_host_and_not_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'type_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances belonging to a host with a different type_id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_host_and_not_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'type_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_by_reservation
dedent|''
name|'def'
name|'instance_get_all_by_reservation'
op|'('
name|'context'
op|','
name|'reservation_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances belonging to a reservation."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_by_reservation'
op|'('
name|'context'
op|','
name|'reservation_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_floating_address
dedent|''
name|'def'
name|'instance_get_floating_address'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the first floating ip address of an instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_floating_address'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_floating_address_get_all
dedent|''
name|'def'
name|'instance_floating_address_get_all'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all floating ip addresses of an instance"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_floating_address_get_all'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_get_all_hung_in_rebooting
dedent|''
name|'def'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'context'
op|','
name|'reboot_window'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instances stuck in a rebooting state."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'context'
op|','
name|'reboot_window'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_test_and_set
dedent|''
name|'def'
name|'instance_test_and_set'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'attr'
op|','
name|'ok_states'
op|','
nl|'\n'
name|'new_state'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Atomically check if an instance is in a valid state, and if it is, set\n    the instance into a new state.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_test_and_set'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'attr'
op|','
nl|'\n'
name|'ok_states'
op|','
name|'new_state'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on an instance and update it.\n\n    Raises NotFound if instance does not exist.\n\n    """'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'update_cells'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'instance_update_at_top'
op|'('
name|'context'
op|','
name|'rv'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of instance update"'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update_and_get_original
dedent|''
name|'def'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on an instance and update it. Return\n    a shallow copy of the original instance reference, as well as the\n    updated one.\n\n    :param context: = request context object\n    :param instance_id: = instance id or uuid\n    :param values: = dict containing column values\n\n    :returns: a tuple of the form (old_instance_ref, new_instance_ref)\n\n    Raises NotFound if instance does not exist.\n    """'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'instance_update_at_top'
op|'('
name|'context'
op|','
name|'rv'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of instance update"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_add_security_group
dedent|''
name|'def'
name|'instance_add_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate the given security group with the given instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_add_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_remove_security_group
dedent|''
name|'def'
name|'instance_remove_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate the given security group from the given instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_remove_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_info_cache_get
dedent|''
name|'def'
name|'instance_info_cache_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets an instance info cache from the table.\n\n    :param instance_uuid: = uuid of the info cache\'s instance\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_info_cache_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_info_cache_update
dedent|''
name|'def'
name|'instance_info_cache_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update an instance info cache record in the table.\n\n    :param instance_uuid: = uuid of info cache\'s instance\n    :param values: = dict containing column values to update\n    """'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'instance_info_cache_update_at_top'
op|'('
name|'context'
op|','
nl|'\n'
name|'rv'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of instance info cache "'
nl|'\n'
string|'"update"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_info_cache_delete
dedent|''
name|'def'
name|'instance_info_cache_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deletes an existing instance_info_cache record\n\n    :param instance_uuid: = uuid of the instance tied to the cache record\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_info_cache_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_create
dedent|''
name|'def'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a key_pair from the values dictionary."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'key_pair_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_destroy
dedent|''
name|'def'
name|'key_pair_destroy'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the key_pair or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'key_pair_destroy'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_get
dedent|''
name|'def'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a key_pair or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_get_all_by_user
dedent|''
name|'def'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all key_pairs by user."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|key_pair_count_by_user
dedent|''
name|'def'
name|'key_pair_count_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Count number of key pairs for the given user ID."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'key_pair_count_by_user'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_associate
dedent|''
name|'def'
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'network_id'
op|'='
name|'None'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Associate a free network to a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_associate'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'network_id'
op|','
name|'force'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_count_reserved_ips
dedent|''
name|'def'
name|'network_count_reserved_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return the number of reserved ips in the network."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_count_reserved_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_create_safe
dedent|''
name|'def'
name|'network_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a network from the values dict.\n\n    The network is only returned if the create succeeds. If the create violates\n    constraints because the network already exists, no exception is raised.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_delete_safe
dedent|''
name|'def'
name|'network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete network with key network_id.\n\n    This method assumes that the network is not associated with any project\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_disassociate
dedent|''
name|'def'
name|'network_disassociate'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'disassociate_host'
op|'='
name|'True'
op|','
nl|'\n'
name|'disassociate_project'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Disassociate the network from project or host and raise if it does\n    not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_disassociate'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'disassociate_host'
op|','
nl|'\n'
name|'disassociate_project'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get
dedent|''
name|'def'
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'project_only'
op|'='
string|'"allow_none"'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a network or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_all
dedent|''
name|'def'
name|'network_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return all defined networks."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_all_by_uuids
dedent|''
name|'def'
name|'network_get_all_by_uuids'
op|'('
name|'context'
op|','
name|'network_uuids'
op|','
nl|'\n'
name|'project_only'
op|'='
string|'"allow_none"'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return networks by ids."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'context'
op|','
name|'network_uuids'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'project_only'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# pylint: disable=C0103'
nl|'\n'
nl|'\n'
DECL|function|network_in_use_on_host
dedent|''
name|'def'
name|'network_in_use_on_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Indicates if a network is currently in use on host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_associated_fixed_ips
dedent|''
name|'def'
name|'network_get_associated_fixed_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all network\'s ips that have been associated."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_bridge
dedent|''
name|'def'
name|'network_get_by_bridge'
op|'('
name|'context'
op|','
name|'bridge'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a network by bridge or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_by_bridge'
op|'('
name|'context'
op|','
name|'bridge'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_uuid
dedent|''
name|'def'
name|'network_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a network by uuid or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_cidr
dedent|''
name|'def'
name|'network_get_by_cidr'
op|'('
name|'context'
op|','
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a network by cidr or raise if it does not exist"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_by_cidr'
op|'('
name|'context'
op|','
name|'cidr'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_by_instance
dedent|''
name|'def'
name|'network_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a network by instance id or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_all_by_instance
dedent|''
name|'def'
name|'network_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all networks by instance id or raise if none exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_get_all_by_host
dedent|''
name|'def'
name|'network_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""All networks for which the given host is the network host."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_set_host
dedent|''
name|'def'
name|'network_set_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Safely set the host for network."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_set_host'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|network_update
dedent|''
name|'def'
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the given properties on a network and update it.\n\n    Raises NotFound if network does not exist.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|iscsi_target_count_by_host
dedent|''
name|'def'
name|'iscsi_target_count_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return count of export devices."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'iscsi_target_count_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|iscsi_target_create_safe
dedent|''
name|'def'
name|'iscsi_target_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create an iscsi_target from the values dictionary.\n\n    The device is not returned. If the create violates the unique\n    constraints because the iscsi_target and host already exist,\n    no exception is raised.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'iscsi_target_create_safe'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###############'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_create
dedent|''
name|'def'
name|'quota_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a quota for the given project and resource."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_get
dedent|''
name|'def'
name|'quota_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve a quota or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_get_all_by_project
dedent|''
name|'def'
name|'quota_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve all quotas associated with a given project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_update
dedent|''
name|'def'
name|'quota_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a quota or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'limit'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_create
dedent|''
name|'def'
name|'quota_class_create'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a quota class for the given name and resource."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_class_create'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_get
dedent|''
name|'def'
name|'quota_class_get'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve a quota class or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_class_get'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_get_all_by_name
dedent|''
name|'def'
name|'quota_class_get_all_by_name'
op|'('
name|'context'
op|','
name|'class_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve all quotas associated with a given quota class."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_class_get_all_by_name'
op|'('
name|'context'
op|','
name|'class_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_class_update
dedent|''
name|'def'
name|'quota_class_update'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a quota class or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_class_update'
op|'('
name|'context'
op|','
name|'class_name'
op|','
name|'resource'
op|','
name|'limit'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_usage_get
dedent|''
name|'def'
name|'quota_usage_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve a quota usage or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_usage_get'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_usage_get_all_by_project
dedent|''
name|'def'
name|'quota_usage_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve all usage associated with a given resource."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_usage_get_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_usage_update
dedent|''
name|'def'
name|'quota_usage_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a quota usage or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_usage_update'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'resource'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_create
dedent|''
name|'def'
name|'reservation_create'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'usage'
op|','
name|'project_id'
op|','
name|'resource'
op|','
name|'delta'
op|','
nl|'\n'
name|'expire'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a reservation for the given project and resource."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_create'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'usage'
op|','
name|'project_id'
op|','
nl|'\n'
name|'resource'
op|','
name|'delta'
op|','
name|'expire'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_get
dedent|''
name|'def'
name|'reservation_get'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Retrieve a reservation or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_get'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_destroy
dedent|''
name|'def'
name|'reservation_destroy'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the reservation or raise if it does not exist."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_destroy'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_reserve
dedent|''
name|'def'
name|'quota_reserve'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'quotas'
op|','
name|'deltas'
op|','
name|'expire'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'max_age'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Check quotas and create appropriate reservations."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_reserve'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'quotas'
op|','
name|'deltas'
op|','
name|'expire'
op|','
nl|'\n'
name|'until_refresh'
op|','
name|'max_age'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_commit
dedent|''
name|'def'
name|'reservation_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Commit quota reservations."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_rollback
dedent|''
name|'def'
name|'reservation_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Roll back quota reservations."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quota_destroy_all_by_project
dedent|''
name|'def'
name|'quota_destroy_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy all quotas associated with a given project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'quota_destroy_all_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reservation_expire
dedent|''
name|'def'
name|'reservation_expire'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Roll back any expired reservations."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'reservation_expire'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|volume_get_iscsi_target_num
dedent|''
name|'def'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the target num (tid) allocated to the volume."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_ec2_volume_id_by_uuid
dedent|''
name|'def'
name|'get_ec2_volume_id_by_uuid'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'get_ec2_volume_id_by_uuid'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_volume_uuid_by_ec2_id
dedent|''
name|'def'
name|'get_volume_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'get_volume_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ec2_volume_create
dedent|''
name|'def'
name|'ec2_volume_create'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'forced_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'ec2_volume_create'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'forced_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_snapshot_uuid_by_ec2_id
dedent|''
name|'def'
name|'get_snapshot_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'get_snapshot_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_ec2_snapshot_id_by_uuid
dedent|''
name|'def'
name|'get_ec2_snapshot_id_by_uuid'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'get_ec2_snapshot_id_by_uuid'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ec2_snapshot_create
dedent|''
name|'def'
name|'ec2_snapshot_create'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|','
name|'forced_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'ec2_snapshot_create'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|','
name|'forced_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_create
dedent|''
name|'def'
name|'block_device_mapping_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create an entry of block device mapping"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_update
dedent|''
name|'def'
name|'block_device_mapping_update'
op|'('
name|'context'
op|','
name|'bdm_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update an entry of block device mapping"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'context'
op|','
name|'bdm_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_update_or_create
dedent|''
name|'def'
name|'block_device_mapping_update_or_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update an entry of block device mapping.\n    If not existed, create a new entry"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all block device mapping belonging to an instance"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_destroy
dedent|''
name|'def'
name|'block_device_mapping_destroy'
op|'('
name|'context'
op|','
name|'bdm_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the block device mapping."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'context'
op|','
name|'bdm_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_device
dedent|''
name|'def'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the block device mapping."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'device_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|block_device_mapping_destroy_by_instance_and_volume
dedent|''
name|'def'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy the block device mapping."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_get_all
dedent|''
name|'def'
name|'security_group_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all security groups."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_get
dedent|''
name|'def'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get security group by its id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_get_by_name
dedent|''
name|'def'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a security group with the specified name from a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_get_by_project
dedent|''
name|'def'
name|'security_group_get_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all security groups belonging to a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_get_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_get_by_instance
dedent|''
name|'def'
name|'security_group_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get security groups to which the instance is assigned."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_get_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_exists
dedent|''
name|'def'
name|'security_group_exists'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Indicates if a group name exists in a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_exists'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_in_use
dedent|''
name|'def'
name|'security_group_in_use'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Indicates if a security group is currently in use."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_in_use'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_create
dedent|''
name|'def'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_ensure_default
dedent|''
name|'def'
name|'security_group_ensure_default'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Ensure default security group exists for a project_id.\n\n    Returns a tuple with the first element being a bool indicating\n    if the default security group previously existed. Second\n    element is the dict used to create the default security group.\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_ensure_default'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_destroy
dedent|''
name|'def'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deletes a security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_count_by_project
dedent|''
name|'def'
name|'security_group_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Count number of security groups in a project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_count_by_project'
op|'('
name|'context'
op|','
name|'project_id'
op|','
nl|'\n'
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_create
dedent|''
name|'def'
name|'security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_get_by_security_group
dedent|''
name|'def'
name|'security_group_rule_get_by_security_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all rules for a given security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_get_by_security_group'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_get_by_security_group_grantee
dedent|''
name|'def'
name|'security_group_rule_get_by_security_group_grantee'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all rules that grant access to the given security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_get_by_security_group_grantee'
op|'('
name|'context'
op|','
nl|'\n'
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_destroy
dedent|''
name|'def'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deletes a security group rule."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_get
dedent|''
name|'def'
name|'security_group_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets a security group rule."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_get'
op|'('
name|'context'
op|','
name|'security_group_rule_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_count_by_group
dedent|''
name|'def'
name|'security_group_rule_count_by_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Count rules in a given security group."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'security_group_rule_count_by_group'
op|'('
name|'context'
op|','
name|'security_group_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_create
dedent|''
name|'def'
name|'provider_fw_rule_create'
op|'('
name|'context'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add a firewall rule at the provider level (all hosts & instances)."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'context'
op|','
name|'rule'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_get_all
dedent|''
name|'def'
name|'provider_fw_rule_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all provider-level firewall rules."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|provider_fw_rule_destroy
dedent|''
name|'def'
name|'provider_fw_rule_destroy'
op|'('
name|'context'
op|','
name|'rule_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete a provider firewall rule from the database."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'provider_fw_rule_destroy'
op|'('
name|'context'
op|','
name|'rule_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|project_get_networks
dedent|''
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'associate'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return the network associated with the project.\n\n    If associate is true, it will attempt to associate a new\n    network if one is not found, otherwise it returns None.\n\n    """'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'associate'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_create
dedent|''
name|'def'
name|'console_pool_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create console pool."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_pool_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_by_host_type
dedent|''
name|'def'
name|'console_pool_get_by_host_type'
op|'('
name|'context'
op|','
name|'compute_host'
op|','
name|'proxy_host'
op|','
nl|'\n'
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Fetch a console pool for a given proxy host, compute host, and type."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_pool_get_by_host_type'
op|'('
name|'context'
op|','
nl|'\n'
name|'compute_host'
op|','
nl|'\n'
name|'proxy_host'
op|','
nl|'\n'
name|'console_type'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_pool_get_all_by_host_type
dedent|''
name|'def'
name|'console_pool_get_all_by_host_type'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'console_type'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Fetch all pools for given proxy host and type."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_pool_get_all_by_host_type'
op|'('
name|'context'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'console_type'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_create
dedent|''
name|'def'
name|'console_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a console."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_delete
dedent|''
name|'def'
name|'console_delete'
op|'('
name|'context'
op|','
name|'console_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete a console."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_delete'
op|'('
name|'context'
op|','
name|'console_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_by_pool_instance
dedent|''
name|'def'
name|'console_get_by_pool_instance'
op|'('
name|'context'
op|','
name|'pool_id'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get console entry for a given instance and pool."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_get_by_pool_instance'
op|'('
name|'context'
op|','
name|'pool_id'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get_all_by_instance
dedent|''
name|'def'
name|'console_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get consoles for a given instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|console_get
dedent|''
name|'def'
name|'console_get'
op|'('
name|'context'
op|','
name|'console_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a specific console (possibly on a given instance)."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'console_get'
op|'('
name|'context'
op|','
name|'console_id'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'##################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_create
dedent|''
name|'def'
name|'instance_type_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new instance type."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_get_all
dedent|''
name|'def'
name|'instance_type_get_all'
op|'('
name|'context'
op|','
name|'inactive'
op|'='
name|'False'
op|','
name|'filters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance types."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_get_all'
op|'('
nl|'\n'
name|'context'
op|','
name|'inactive'
op|'='
name|'inactive'
op|','
name|'filters'
op|'='
name|'filters'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_get
dedent|''
name|'def'
name|'instance_type_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get instance type by id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_get_by_name
dedent|''
name|'def'
name|'instance_type_get_by_name'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get instance type by name."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'context'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_get_by_flavor_id
dedent|''
name|'def'
name|'instance_type_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get instance type by flavor id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_destroy
dedent|''
name|'def'
name|'instance_type_destroy'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete an instance type."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_destroy'
op|'('
name|'context'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_access_get_by_flavor_id
dedent|''
name|'def'
name|'instance_type_access_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get flavor access by flavor id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_access_add
dedent|''
name|'def'
name|'instance_type_access_add'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add flavor access for project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_access_add'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_access_remove
dedent|''
name|'def'
name|'instance_type_access_remove'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove flavor access for project."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_access_remove'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|cell_create
dedent|''
name|'def'
name|'cell_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new child Cell entry."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'cell_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|cell_update
dedent|''
name|'def'
name|'cell_update'
op|'('
name|'context'
op|','
name|'cell_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update a child Cell entry."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'cell_update'
op|'('
name|'context'
op|','
name|'cell_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|cell_delete
dedent|''
name|'def'
name|'cell_delete'
op|'('
name|'context'
op|','
name|'cell_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete a child Cell."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'cell_delete'
op|'('
name|'context'
op|','
name|'cell_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|cell_get
dedent|''
name|'def'
name|'cell_get'
op|'('
name|'context'
op|','
name|'cell_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a specific child Cell."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'cell_get'
op|'('
name|'context'
op|','
name|'cell_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|cell_get_all
dedent|''
name|'def'
name|'cell_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all child Cells."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'cell_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_metadata_get
dedent|''
name|'def'
name|'instance_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all metadata for an instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_metadata_delete
dedent|''
name|'def'
name|'instance_metadata_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete the given metadata item."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'instance_metadata_delete'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_metadata_update
dedent|''
name|'def'
name|'instance_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update metadata if it exists, otherwise create it."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'metadata'
op|','
name|'delete'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_system_metadata_get
dedent|''
name|'def'
name|'instance_system_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all system metadata for an instance."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_system_metadata_update
dedent|''
name|'def'
name|'instance_system_metadata_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update metadata if it exists, otherwise create it."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'instance_system_metadata_update'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'metadata'
op|','
name|'delete'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_create
dedent|''
name|'def'
name|'agent_build_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new agent build entry."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'agent_build_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_get_by_triple
dedent|''
name|'def'
name|'agent_build_get_by_triple'
op|'('
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get agent build by hypervisor/OS/architecture triple."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
nl|'\n'
name|'architecture'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_get_all
dedent|''
name|'def'
name|'agent_build_get_all'
op|'('
name|'context'
op|','
name|'hypervisor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all agent builds."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'agent_build_get_all'
op|'('
name|'context'
op|','
name|'hypervisor'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_destroy
dedent|''
name|'def'
name|'agent_build_destroy'
op|'('
name|'context'
op|','
name|'agent_update_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Destroy agent build entry."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'agent_build_destroy'
op|'('
name|'context'
op|','
name|'agent_update_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|agent_build_update
dedent|''
name|'def'
name|'agent_build_update'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update agent build entry."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'agent_build_update'
op|'('
name|'context'
op|','
name|'agent_build_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|bw_usage_get
dedent|''
name|'def'
name|'bw_usage_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'start_period'
op|','
name|'mac'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return bw usage for instance and mac in a given audit period."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'bw_usage_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'start_period'
op|','
name|'mac'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|bw_usage_get_by_uuids
dedent|''
name|'def'
name|'bw_usage_get_by_uuids'
op|'('
name|'context'
op|','
name|'uuids'
op|','
name|'start_period'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return bw usages for instance(s) in a given audit period."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'bw_usage_get_by_uuids'
op|'('
name|'context'
op|','
name|'uuids'
op|','
name|'start_period'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|bw_usage_update
dedent|''
name|'def'
name|'bw_usage_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
name|'bw_in'
op|','
name|'bw_out'
op|','
nl|'\n'
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
name|'last_refreshed'
op|'='
name|'None'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update cached bandwidth usage for an instance\'s network based on mac\n    address.  Creates new record if needed.\n    """'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'bw_usage_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
name|'bw_in'
op|','
nl|'\n'
name|'bw_out'
op|','
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
name|'last_refreshed'
op|'='
name|'last_refreshed'
op|')'
newline|'\n'
name|'if'
name|'update_cells'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'bw_usage_update_at_top'
op|'('
name|'context'
op|','
nl|'\n'
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
name|'bw_in'
op|','
name|'bw_out'
op|','
nl|'\n'
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
name|'last_refreshed'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of bw_usage update"'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_extra_specs_get
dedent|''
name|'def'
name|'instance_type_extra_specs_get'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all extra specs for an instance type."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_type_extra_specs_get'
op|'('
name|'context'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_extra_specs_delete
dedent|''
name|'def'
name|'instance_type_extra_specs_delete'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete the given extra specs item."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'instance_type_extra_specs_delete'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_type_extra_specs_update_or_create
dedent|''
name|'def'
name|'instance_type_extra_specs_update_or_create'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
nl|'\n'
name|'extra_specs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create or update instance type extra specs. This adds or modifies the\n    key/value pairs specified in the extra specs dict argument"""'
newline|'\n'
name|'IMPL'
op|'.'
name|'instance_type_extra_specs_update_or_create'
op|'('
name|'context'
op|','
name|'flavor_id'
op|','
nl|'\n'
name|'extra_specs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|vol_get_usage_by_time
dedent|''
name|'def'
name|'vol_get_usage_by_time'
op|'('
name|'context'
op|','
name|'begin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return volumes usage that have been updated after a specified time"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'context'
op|','
name|'begin'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|vol_usage_update
dedent|''
name|'def'
name|'vol_usage_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'rd_req'
op|','
name|'rd_bytes'
op|','
name|'wr_req'
op|','
name|'wr_bytes'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'last_refreshed'
op|'='
name|'None'
op|','
name|'update_totals'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update cached volume usage for a volume\n       Creates new record if needed."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'vol_usage_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'rd_req'
op|','
name|'rd_bytes'
op|','
name|'wr_req'
op|','
nl|'\n'
name|'wr_bytes'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'last_refreshed'
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'update_totals'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'###################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get
dedent|''
name|'def'
name|'s3_image_get'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided id"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'s3_image_get'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_get_by_uuid
dedent|''
name|'def'
name|'s3_image_get_by_uuid'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find local s3 image represented by the provided uuid"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'s3_image_get_by_uuid'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|s3_image_create
dedent|''
name|'def'
name|'s3_image_create'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create local s3 image represented by provided uuid"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'s3_image_create'
op|'('
name|'context'
op|','
name|'image_uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_create
dedent|''
name|'def'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new aggregate with metadata."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get
dedent|''
name|'def'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a specific aggregate by id."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get_by_host
dedent|''
name|'def'
name|'aggregate_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a list of aggregates that host belongs to"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'aggregate_metadata_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get metadata for all aggregates that host belongs to.\n\n    Returns a dictionary where each value is a set, this is to cover the case\n    where there two aggregates have different values for the same key.\n    Optional key filter"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_update
dedent|''
name|'def'
name|'aggregate_update'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Update the attributes of an aggregates. If values contains a metadata\n    key, it updates the aggregate metadata too."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_update'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_delete
dedent|''
name|'def'
name|'aggregate_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete an aggregate."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_get_all
dedent|''
name|'def'
name|'aggregate_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all aggregates."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_metadata_add
dedent|''
name|'def'
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'metadata'
op|','
name|'set_delete'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add/update metadata. If set_delete=True, it adds only."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'metadata'
op|','
name|'set_delete'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_metadata_get
dedent|''
name|'def'
name|'aggregate_metadata_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get metadata for the specified aggregate."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_metadata_delete
dedent|''
name|'def'
name|'aggregate_metadata_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete the given metadata key."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_host_add
dedent|''
name|'def'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add host to the aggregate."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_host_get_all
dedent|''
name|'def'
name|'aggregate_host_get_all'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get hosts for the specified aggregate."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|aggregate_host_delete
dedent|''
name|'def'
name|'aggregate_host_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Delete the given host from the aggregate."""'
newline|'\n'
name|'IMPL'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'context'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_create
dedent|''
name|'def'
name|'instance_fault_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a new Instance Fault."""'
newline|'\n'
name|'rv'
op|'='
name|'IMPL'
op|'.'
name|'instance_fault_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'update_cells'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'instance_fault_create_at_top'
op|'('
name|'context'
op|','
name|'rv'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Failed to notify cells of instance fault"'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_fault_get_by_instance_uuids
dedent|''
name|'def'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all instance faults for the provided instance_uuids."""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'context'
op|','
name|'instance_uuids'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_ec2_instance_id_by_uuid
dedent|''
name|'def'
name|'get_ec2_instance_id_by_uuid'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get ec2 id through uuid from instance_id_mappings table"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'get_ec2_instance_id_by_uuid'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_instance_uuid_by_ec2_id
dedent|''
name|'def'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get uuid through ec2 id from instance_id_mappings table"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'context'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ec2_instance_create
dedent|''
name|'def'
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create the ec2 id to instance uuid mapping on demand"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'ec2_instance_create'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'####################'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_end_task
dedent|''
name|'def'
name|'task_log_end_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
nl|'\n'
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'errors'
op|','
nl|'\n'
name|'message'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Mark a task as complete for a given host/time period"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'task_log_end_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
nl|'\n'
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'errors'
op|','
nl|'\n'
name|'message'
op|','
nl|'\n'
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_begin_task
dedent|''
name|'def'
name|'task_log_begin_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
nl|'\n'
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'task_items'
op|'='
name|'None'
op|','
nl|'\n'
name|'message'
op|'='
name|'None'
op|','
nl|'\n'
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Mark a task as started for a given host/time period"""'
newline|'\n'
name|'return'
name|'IMPL'
op|'.'
name|'task_log_begin_task'
op|'('
name|'context'
op|','
name|'task_name'
op|','
nl|'\n'
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
nl|'\n'
name|'host'
op|','
nl|'\n'
name|'task_items'
op|','
nl|'\n'
name|'message'
op|','
nl|'\n'
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_get_all
dedent|''
name|'def'
name|'task_log_get_all'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'task_log_get_all'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|task_log_get
dedent|''
name|'def'
name|'task_log_get'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|'='
name|'None'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'IMPL'
op|'.'
name|'task_log_get'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'period_beginning'
op|','
nl|'\n'
name|'period_ending'
op|','
name|'host'
op|','
name|'state'
op|','
name|'session'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
