begin_unit
comment|'#    Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Utility methods for objects"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|datetime_or_none
name|'def'
name|'datetime_or_none'
op|'('
name|'dt'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Validate a datetime or None value."""'
newline|'\n'
name|'if'
name|'dt'
name|'is'
name|'None'
name|'or'
name|'isinstance'
op|'('
name|'dt'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dt'
newline|'\n'
dedent|''
name|'raise'
name|'ValueError'
op|'('
string|"'A datetime.datetime is required here'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# NOTE(danms): Being tolerant of isotime strings here will help us'
nl|'\n'
comment|'# during our objects transition'
nl|'\n'
DECL|function|datetime_or_str_or_none
dedent|''
name|'def'
name|'datetime_or_str_or_none'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'datetime_or_none'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|int_or_none
dedent|''
name|'def'
name|'int_or_none'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Attempt to parse an integer value, or None."""'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'int'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|str_or_none
dedent|''
dedent|''
name|'def'
name|'str_or_none'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Attempt to stringify a value, or None."""'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|ip_or_none
dedent|''
dedent|''
name|'def'
name|'ip_or_none'
op|'('
name|'version'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a version-specific IP address validator."""'
newline|'\n'
DECL|function|validator
name|'def'
name|'validator'
op|'('
name|'val'
op|','
name|'version'
op|'='
name|'version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
name|'val'
op|','
name|'version'
op|'='
name|'version'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'validator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dt_serializer
dedent|''
name|'def'
name|'dt_serializer'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a datetime serializer for a named attribute."""'
newline|'\n'
DECL|function|serializer
name|'def'
name|'serializer'
op|'('
name|'self'
op|','
name|'name'
op|'='
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'timeutils'
op|'.'
name|'isotime'
op|'('
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'serializer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dt_deserializer
dedent|''
name|'def'
name|'dt_deserializer'
op|'('
name|'instance'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A deserializer method for datetime attributes."""'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
