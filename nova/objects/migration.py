begin_unit
comment|'#    Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'versionutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|determine_migration_type
name|'def'
name|'determine_migration_type'
op|'('
name|'migration'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'migration'
op|'['
string|"'old_instance_type_id'"
op|']'
op|'!='
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'resize'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'migration'"
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(berrange): Remove NovaObjectDictCompat'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'base'
op|'.'
name|'NovaObjectRegistry'
op|'.'
name|'register'
newline|'\n'
name|'class'
name|'Migration'
op|'('
name|'base'
op|'.'
name|'NovaPersistentObject'
op|','
name|'base'
op|'.'
name|'NovaObject'
op|','
nl|'\n'
DECL|class|Migration
name|'base'
op|'.'
name|'NovaObjectDictCompat'
op|')'
op|':'
newline|'\n'
comment|'# Version 1.0: Initial version'
nl|'\n'
comment|'# Version 1.1: String attributes updated to support unicode'
nl|'\n'
comment|'# Version 1.2: Added migration_type and hidden'
nl|'\n'
comment|'# Version 1.3: Added get_by_id_and_instance()'
nl|'\n'
DECL|variable|VERSION
indent|'    '
name|'VERSION'
op|'='
string|"'1.3'"
newline|'\n'
nl|'\n'
DECL|variable|fields
name|'fields'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'fields'
op|'.'
name|'IntegerField'
op|'('
op|')'
op|','
nl|'\n'
string|"'source_compute'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'dest_compute'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'source_node'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'dest_node'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'dest_host'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'old_instance_type_id'"
op|':'
name|'fields'
op|'.'
name|'IntegerField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'new_instance_type_id'"
op|':'
name|'fields'
op|'.'
name|'IntegerField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
name|'nullable'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
string|"'migration_type'"
op|':'
name|'fields'
op|'.'
name|'EnumField'
op|'('
op|'['
string|"'migration'"
op|','
string|"'resize'"
op|','
nl|'\n'
string|"'live-migration'"
op|','
string|"'evacuation'"
op|']'
op|','
nl|'\n'
DECL|variable|nullable
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
string|"'hidden'"
op|':'
name|'fields'
op|'.'
name|'BooleanField'
op|'('
name|'nullable'
op|'='
name|'False'
op|','
name|'default'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_from_db_object
name|'def'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'migration'
op|','
name|'db_migration'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
name|'in'
name|'migration'
op|'.'
name|'fields'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'db_migration'
op|'['
name|'key'
op|']'
newline|'\n'
name|'if'
name|'key'
op|'=='
string|"'migration_type'"
name|'and'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'determine_migration_type'
op|'('
name|'db_migration'
op|')'
newline|'\n'
dedent|''
name|'migration'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'migration'
op|'.'
name|'_context'
op|'='
name|'context'
newline|'\n'
name|'migration'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
DECL|member|obj_make_compatible
dedent|''
name|'def'
name|'obj_make_compatible'
op|'('
name|'self'
op|','
name|'primitive'
op|','
name|'target_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Migration'
op|','
name|'self'
op|')'
op|'.'
name|'obj_make_compatible'
op|'('
name|'primitive'
op|','
name|'target_version'
op|')'
newline|'\n'
name|'target_version'
op|'='
name|'versionutils'
op|'.'
name|'convert_version_to_tuple'
op|'('
name|'target_version'
op|')'
newline|'\n'
name|'if'
name|'target_version'
op|'<'
op|'('
number|'1'
op|','
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'migration_type'"
name|'in'
name|'primitive'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'primitive'
op|'['
string|"'migration_type'"
op|']'
newline|'\n'
name|'del'
name|'primitive'
op|'['
string|"'hidden'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|obj_load_attr
dedent|''
dedent|''
dedent|''
name|'def'
name|'obj_load_attr'
op|'('
name|'self'
op|','
name|'attrname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attrname'
op|'=='
string|"'migration_type'"
op|':'
newline|'\n'
comment|"# NOTE(danms): The only reason we'd need to load this is if"
nl|'\n'
comment|'# some older node sent us one. So, guess the type.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'migration_type'
op|'='
name|'determine_migration_type'
op|'('
name|'self'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'attrname'
op|'=='
string|"'hidden'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'hidden'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'super'
op|'('
name|'Migration'
op|','
name|'self'
op|')'
op|'.'
name|'obj_load_attr'
op|'('
name|'attrname'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_by_id
name|'def'
name|'get_by_id'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'migration_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migration'
op|'='
name|'db'
op|'.'
name|'migration_get'
op|'('
name|'context'
op|','
name|'migration_id'
op|')'
newline|'\n'
name|'return'
name|'cls'
op|'.'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'cls'
op|'('
op|')'
op|','
name|'db_migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_by_id_and_instance
name|'def'
name|'get_by_id_and_instance'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'migration_id'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migration'
op|'='
name|'db'
op|'.'
name|'migration_get_by_id_and_instance'
op|'('
nl|'\n'
name|'context'
op|','
name|'migration_id'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'return'
name|'cls'
op|'.'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'cls'
op|'('
op|')'
op|','
name|'db_migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_by_instance_and_status
name|'def'
name|'get_by_instance_and_status'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migration'
op|'='
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'status'
op|')'
newline|'\n'
name|'return'
name|'cls'
op|'.'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'cls'
op|'('
op|')'
op|','
name|'db_migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ObjectActionError'
op|'('
name|'action'
op|'='
string|"'create'"
op|','
nl|'\n'
name|'reason'
op|'='
string|"'already created'"
op|')'
newline|'\n'
dedent|''
name|'updates'
op|'='
name|'self'
op|'.'
name|'obj_get_changes'
op|'('
op|')'
newline|'\n'
name|'if'
string|"'migration_type'"
name|'not'
name|'in'
name|'updates'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ObjectActionError'
op|'('
nl|'\n'
name|'action'
op|'='
string|'"create"'
op|','
nl|'\n'
name|'reason'
op|'='
string|'"cannot create a Migration object without a "'
nl|'\n'
string|'"migration_type set"'
op|')'
newline|'\n'
dedent|''
name|'db_migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'updates'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|','
name|'db_migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable'
newline|'\n'
DECL|member|save
name|'def'
name|'save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'updates'
op|'='
name|'self'
op|'.'
name|'obj_get_changes'
op|'('
op|')'
newline|'\n'
name|'updates'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'db_migration'
op|'='
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'id'
op|','
name|'updates'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|','
name|'db_migration'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|instance
name|'def'
name|'instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'_cached_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_cached_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_cached_instance'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'instance'
op|'.'
name|'setter'
newline|'\n'
DECL|member|instance
name|'def'
name|'instance'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_cached_instance'
op|'='
name|'instance'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'base'
op|'.'
name|'NovaObjectRegistry'
op|'.'
name|'register'
newline|'\n'
DECL|class|MigrationList
name|'class'
name|'MigrationList'
op|'('
name|'base'
op|'.'
name|'ObjectListBase'
op|','
name|'base'
op|'.'
name|'NovaObject'
op|')'
op|':'
newline|'\n'
comment|'# Version 1.0: Initial version'
nl|'\n'
comment|'#              Migration <= 1.1'
nl|'\n'
comment|'# Version 1.1: Added use_slave to get_unconfirmed_by_dest_compute'
nl|'\n'
comment|'# Version 1.2: Migration version 1.2'
nl|'\n'
DECL|variable|VERSION
indent|'    '
name|'VERSION'
op|'='
string|"'1.2'"
newline|'\n'
nl|'\n'
DECL|variable|fields
name|'fields'
op|'='
op|'{'
nl|'\n'
string|"'objects'"
op|':'
name|'fields'
op|'.'
name|'ListOfObjectsField'
op|'('
string|"'Migration'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
op|'@'
name|'db'
op|'.'
name|'select_db_reader_mode'
newline|'\n'
DECL|member|_db_migration_get_unconfirmed_by_dest_compute
name|'def'
name|'_db_migration_get_unconfirmed_by_dest_compute'
op|'('
nl|'\n'
name|'context'
op|','
name|'confirm_window'
op|','
name|'dest_compute'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
nl|'\n'
name|'context'
op|','
name|'confirm_window'
op|','
name|'dest_compute'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_unconfirmed_by_dest_compute
name|'def'
name|'get_unconfirmed_by_dest_compute'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'confirm_window'
op|','
nl|'\n'
name|'dest_compute'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migrations'
op|'='
name|'cls'
op|'.'
name|'_db_migration_get_unconfirmed_by_dest_compute'
op|'('
nl|'\n'
name|'context'
op|','
name|'confirm_window'
op|','
name|'dest_compute'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
name|'return'
name|'base'
op|'.'
name|'obj_make_list'
op|'('
name|'context'
op|','
name|'cls'
op|'('
name|'context'
op|')'
op|','
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
name|'db_migrations'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_in_progress_by_host_and_node
name|'def'
name|'get_in_progress_by_host_and_node'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
nl|'\n'
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
newline|'\n'
name|'return'
name|'base'
op|'.'
name|'obj_make_list'
op|'('
name|'context'
op|','
name|'cls'
op|'('
name|'context'
op|')'
op|','
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
name|'db_migrations'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_by_filters
name|'def'
name|'get_by_filters'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_all_by_filters'
op|'('
name|'context'
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
name|'base'
op|'.'
name|'obj_make_list'
op|'('
name|'context'
op|','
name|'cls'
op|'('
name|'context'
op|')'
op|','
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
name|'db_migrations'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
