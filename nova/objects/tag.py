begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(berrange): Remove NovaObjectDictCompat'
nl|'\n'
name|'class'
name|'Tag'
op|'('
name|'base'
op|'.'
name|'NovaObject'
op|','
nl|'\n'
DECL|class|Tag
name|'base'
op|'.'
name|'NovaObjectDictCompat'
op|')'
op|':'
newline|'\n'
comment|'# Version 1.0: Initial version'
nl|'\n'
DECL|variable|VERSION
indent|'    '
name|'VERSION'
op|'='
string|"'1.0'"
newline|'\n'
nl|'\n'
DECL|variable|fields
name|'fields'
op|'='
op|'{'
nl|'\n'
string|"'resource_id'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
op|')'
op|','
nl|'\n'
string|"'tag'"
op|':'
name|'fields'
op|'.'
name|'StringField'
op|'('
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_from_db_object
name|'def'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'tag'
op|','
name|'db_tag'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
name|'in'
name|'tag'
op|'.'
name|'fields'
op|':'
newline|'\n'
indent|'            '
name|'tag'
op|'['
name|'key'
op|']'
op|'='
name|'db_tag'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'tag'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'tag'
op|'.'
name|'_context'
op|'='
name|'context'
newline|'\n'
name|'return'
name|'tag'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_tag'
op|'='
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'resource_id'
op|','
name|'self'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_from_db_object'
op|'('
name|'context'
op|','
name|'self'
op|','
name|'db_tag'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|destroy
name|'def'
name|'destroy'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'resource_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_tag_delete'
op|'('
name|'context'
op|','
name|'resource_id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(berrange): Remove NovaObjectDictCompat'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TagList'
op|'('
name|'base'
op|'.'
name|'ObjectListBase'
op|','
name|'base'
op|'.'
name|'NovaObject'
op|','
nl|'\n'
DECL|class|TagList
name|'base'
op|'.'
name|'NovaObjectDictCompat'
op|')'
op|':'
newline|'\n'
comment|'# Version 1.0: Initial version'
nl|'\n'
DECL|variable|VERSION
indent|'    '
name|'VERSION'
op|'='
string|"'1.0'"
newline|'\n'
nl|'\n'
DECL|variable|fields
name|'fields'
op|'='
op|'{'
nl|'\n'
string|"'objects'"
op|':'
name|'fields'
op|'.'
name|'ListOfObjectsField'
op|'('
string|"'Tag'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
DECL|variable|child_versions
name|'child_versions'
op|'='
op|'{'
nl|'\n'
string|"'1.0'"
op|':'
string|"'1.0'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|get_by_resource_id
name|'def'
name|'get_by_resource_id'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'resource_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_tags'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'context'
op|','
name|'resource_id'
op|')'
newline|'\n'
name|'return'
name|'base'
op|'.'
name|'obj_make_list'
op|'('
name|'context'
op|','
name|'cls'
op|'('
op|')'
op|','
name|'objects'
op|'.'
name|'Tag'
op|','
name|'db_tags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'resource_id'
op|','
name|'tags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_tags'
op|'='
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'context'
op|','
name|'resource_id'
op|','
name|'tags'
op|')'
newline|'\n'
name|'return'
name|'base'
op|'.'
name|'obj_make_list'
op|'('
name|'context'
op|','
name|'cls'
op|'('
op|')'
op|','
name|'objects'
op|'.'
name|'Tag'
op|','
name|'db_tags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'base'
op|'.'
name|'remotable_classmethod'
newline|'\n'
DECL|member|destroy
name|'def'
name|'destroy'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'resource_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_tag_delete_all'
op|'('
name|'context'
op|','
name|'resource_id'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
