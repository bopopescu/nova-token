begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'textwrap'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compat'
name|'import'
name|'flagfile'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ThatLastTwoPercentCoverageTestCase
name|'class'
name|'ThatLastTwoPercentCoverageTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_open_file_for_reading
indent|'    '
name|'def'
name|'test_open_file_for_reading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'flagfile'
op|'.'
name|'_open_file_for_reading'
op|'('
name|'__file__'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_open_fd_for_writing
dedent|''
dedent|''
name|'def'
name|'test_open_fd_for_writing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'fd'
op|','
name|'path'
op|')'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'flagfile'
op|'.'
name|'_open_fd_for_writing'
op|'('
name|'fd'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CompatFlagfileTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'CompatFlagfileTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CompatFlagfileTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'files'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempfiles'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'flagfile'
op|','
string|"'_open_file_for_reading'"
op|','
name|'self'
op|'.'
name|'_fake_open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'flagfile'
op|','
string|"'_open_fd_for_writing'"
op|','
name|'self'
op|'.'
name|'_fake_open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'tempfile'
op|','
string|"'mkdtemp'"
op|','
name|'self'
op|'.'
name|'_fake_mkdtemp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'tempfile'
op|','
string|"'mkstemp'"
op|','
name|'self'
op|'.'
name|'_fake_mkstemp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|','
name|'self'
op|'.'
name|'_fake_rmtree'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_open
dedent|''
name|'def'
name|'_fake_open'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|function|managed_stringio
name|'def'
name|'managed_stringio'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'path'
name|'in'
name|'self'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'files'
op|'['
name|'path'
op|']'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'sio'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'textwrap'
op|'.'
name|'dedent'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'path'
op|']'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'sio'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'files'
op|'['
name|'path'
op|']'
op|'='
name|'sio'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'sio'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'='
name|'args'
op|'['
number|'1'
op|':'
op|']'
comment|'# remove the fd arg for fdopen() case'
newline|'\n'
dedent|''
name|'return'
name|'managed_stringio'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_mkstemp
dedent|''
name|'def'
name|'_fake_mkstemp'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'dir'"
name|'in'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|'['
string|"'dir'"
op|']'
op|','
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempfiles'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_mkdtemp
dedent|''
name|'def'
name|'_fake_mkdtemp'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'tempdir'
newline|'\n'
nl|'\n'
DECL|member|_fake_rmtree
dedent|''
name|'def'
name|'_fake_rmtree'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_no_args
dedent|''
name|'def'
name|'test_no_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'before'
op|'='
op|'['
op|']'
newline|'\n'
name|'after'
op|'='
name|'flagfile'
op|'.'
name|'handle_flagfiles'
op|'('
name|'before'
op|','
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
name|'before'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_empty_flagfile
dedent|''
name|'def'
name|'_do_test_empty_flagfile'
op|'('
name|'self'
op|','
name|'before'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'foo.flags'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'after'
op|'='
name|'flagfile'
op|'.'
name|'handle_flagfiles'
op|'('
name|'before'
op|','
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
op|'['
string|"'--config-file='"
op|'+'
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|','
string|"'[DEFAULT]\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_flagfile
dedent|''
name|'def'
name|'test_empty_flagfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_empty_flagfile'
op|'('
op|'['
string|"'--flagfile=foo.flags'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_flagfile_separated
dedent|''
name|'def'
name|'test_empty_flagfile_separated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_empty_flagfile'
op|'('
op|'['
string|"'--flagfile'"
op|','
string|"'foo.flags'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_flagfile_single_hyphen
dedent|''
name|'def'
name|'test_empty_flagfile_single_hyphen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_empty_flagfile'
op|'('
op|'['
string|"'-flagfile=foo.flags'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_flagfile_single_hyphen_separated_separated
dedent|''
name|'def'
name|'test_empty_flagfile_single_hyphen_separated_separated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_empty_flagfile'
op|'('
op|'['
string|"'-flagfile'"
op|','
string|"'foo.flags'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_flagfile_with_other_args
dedent|''
name|'def'
name|'test_empty_flagfile_with_other_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'foo.flags'"
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
name|'before'
op|'='
op|'['
nl|'\n'
string|"'--foo'"
op|','
string|"'bar'"
op|','
nl|'\n'
string|"'--flagfile=foo.flags'"
op|','
nl|'\n'
string|"'--blaa=foo'"
op|','
nl|'\n'
string|"'--foo-flagfile'"
op|','
nl|'\n'
string|"'--flagfile-foo'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'after'
op|'='
name|'flagfile'
op|'.'
name|'handle_flagfiles'
op|'('
name|'before'
op|','
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
op|'['
nl|'\n'
string|"'--foo'"
op|','
string|"'bar'"
op|','
nl|'\n'
string|"'--config-file='"
op|'+'
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|"'--blaa=foo'"
op|','
nl|'\n'
string|"'--foo-flagfile'"
op|','
nl|'\n'
string|"'--flagfile-foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|','
string|"'[DEFAULT]\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_flagfile
dedent|''
name|'def'
name|'_do_test_flagfile'
op|'('
name|'self'
op|','
name|'flags'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'foo.flags'"
op|']'
op|'='
name|'flags'
newline|'\n'
nl|'\n'
name|'before'
op|'='
op|'['
string|"'--flagfile=foo.flags'"
op|']'
newline|'\n'
nl|'\n'
name|'after'
op|'='
name|'flagfile'
op|'.'
name|'handle_flagfiles'
op|'('
name|'before'
op|','
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
nl|'\n'
op|'['
string|"'--config-file='"
op|'+'
name|'t'
nl|'\n'
name|'for'
name|'t'
name|'in'
name|'reversed'
op|'('
name|'self'
op|'.'
name|'tempfiles'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|','
nl|'\n'
string|"'[DEFAULT]\\n'"
op|'+'
name|'conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flagfile
dedent|''
name|'def'
name|'test_flagfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_flagfile'
op|'('
string|"'--bar=foo'"
op|','
string|"'bar=foo\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boolean_flag
dedent|''
name|'def'
name|'test_boolean_flag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_flagfile'
op|'('
string|"'--verbose'"
op|','
string|"'verbose=true\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boolean_inverted_flag
dedent|''
name|'def'
name|'test_boolean_inverted_flag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_flagfile'
op|'('
string|"'--noverbose'"
op|','
string|"'verbose=false\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flagfile_comments
dedent|''
name|'def'
name|'test_flagfile_comments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_flagfile'
op|'('
string|"' \\n\\n#foo\\n--bar=foo\\n--foo=bar\\n//bar'"
op|','
nl|'\n'
string|"'bar=foo\\nfoo=bar\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flagfile_is_config
dedent|''
name|'def'
name|'test_flagfile_is_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'foo.flags'"
op|']'
op|'='
string|"'\\n\\n#foo\\n//bar\\n[DEFAULT]\\nbar=foo'"
newline|'\n'
name|'before'
op|'='
op|'['
string|"'--flagfile=foo.flags'"
op|']'
newline|'\n'
name|'after'
op|'='
name|'flagfile'
op|'.'
name|'handle_flagfiles'
op|'('
name|'before'
op|','
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
op|'['
string|"'--config-file=foo.flags'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flagfile_nested
dedent|''
name|'def'
name|'test_flagfile_nested'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'bar.flags'"
op|']'
op|'='
string|"'--foo=bar'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_do_test_flagfile'
op|'('
string|"'--flagfile=bar.flags'"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'2'
op|']'
op|']'
op|','
nl|'\n'
string|"'[DEFAULT]\\nfoo=bar\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flagfile_managed
dedent|''
name|'def'
name|'test_flagfile_managed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'['
string|"'foo.flags'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'before'
op|'='
op|'['
string|"'--flagfile=foo.flags'"
op|']'
newline|'\n'
name|'with'
name|'flagfile'
op|'.'
name|'handle_flagfiles_managed'
op|'('
name|'before'
op|')'
name|'as'
name|'after'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'after'
op|','
op|'['
string|"'--config-file='"
op|'+'
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'tempfiles'
op|'['
op|'-'
number|'1'
op|']'
op|']'
op|','
string|"'[DEFAULT]\\n'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tempdir'
name|'is'
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
