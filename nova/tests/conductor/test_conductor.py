begin_unit
comment|'#    Copyright 2012 IBM Corp.'
nl|'\n'
comment|'#    Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for the conductor service."""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
name|'import'
name|'messaging'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'conductor'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'api'
name|'as'
name|'conductor_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'manager'
name|'as'
name|'conductor_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'rpcapi'
name|'as'
name|'conductor_rpcapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
op|'.'
name|'tasks'
name|'import'
name|'live_migrate'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
name|'as'
name|'exc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'migration'
name|'as'
name|'migration_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'quotas'
name|'as'
name|'quotas_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'utils'
name|'as'
name|'scheduler_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'cast_as_call'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'compute'
name|'import'
name|'test_compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_notifier'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_server_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_migration'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_IMAGE_REF
name|'FAKE_IMAGE_REF'
op|'='
string|"'fake-image-ref'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeContext
name|'class'
name|'FakeContext'
op|'('
name|'context'
op|'.'
name|'RequestContext'
op|')'
op|':'
newline|'\n'
DECL|member|elevated
indent|'    '
name|'def'
name|'elevated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a consistent elevated context so we can detect it."""'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'_elevated'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_elevated'
op|'='
name|'super'
op|'('
name|'FakeContext'
op|','
name|'self'
op|')'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_elevated'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_BaseTestCase
dedent|''
dedent|''
name|'class'
name|'_BaseTestCase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'FakeContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'fake_notifier'
op|'.'
name|'stub_notifier'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'fake_notifier'
op|'.'
name|'reset'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_deserialize_context
name|'def'
name|'fake_deserialize_context'
op|'('
name|'serializer'
op|','
name|'ctxt_dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
name|'ctxt_dict'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
name|'ctxt_dict'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'context'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|'.'
name|'RequestContextSerializer'
op|','
string|"'deserialize_context'"
op|','
nl|'\n'
name|'fake_deserialize_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fake_instance
dedent|''
name|'def'
name|'_create_fake_instance'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|','
name|'type_name'
op|'='
string|"'m1.tiny'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
name|'FAKE_IMAGE_REF'
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'user_id'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'project_id'
newline|'\n'
name|'inst'
op|'['
string|"'host'"
op|']'
op|'='
string|"'fake_host'"
newline|'\n'
name|'type_id'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
name|'type_name'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
name|'type_id'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'memory_mb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'root_gb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'architecture'"
op|']'
op|'='
string|"'x86_64'"
newline|'\n'
name|'inst'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'Linux'"
newline|'\n'
name|'inst'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'fake-az'"
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_update
dedent|''
name|'def'
name|'_do_update'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update
dedent|''
name|'def'
name|'test_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
newline|'\n'
name|'new_inst'
op|'='
name|'self'
op|'.'
name|'_do_update'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'new_inst'
op|'['
string|"'vm_state'"
op|']'
op|','
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_event_start
dedent|''
name|'def'
name|'test_action_event_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'action_event_start'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_event_finish
dedent|''
name|'def'
name|'test_action_event_finish'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'action_event_finish'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'action_event_finish'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_invalid_key
dedent|''
name|'def'
name|'test_instance_update_invalid_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): the real DB API call ignores invalid keys'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conductor'
op|'='
name|'utils'
op|'.'
name|'ExceptionHelper'
op|'('
name|'self'
op|'.'
name|'conductor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'KeyError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_do_update'
op|','
string|"'any-uuid'"
op|','
name|'foobar'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_in_progress_by_host_and_node
dedent|''
dedent|''
name|'def'
name|'test_migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'migration_get_in_progress_by_host_and_node'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-host'"
op|','
string|"'fake-node'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-host'"
op|','
string|"'fake-node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid
dedent|''
name|'def'
name|'test_instance_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
newline|'\n'
name|'copy_instance'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'orig_instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'orig_instance'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'copy_instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_aggregate_with_host
dedent|''
name|'def'
name|'_setup_aggregate_with_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_ref'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|','
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'aggregate_host_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate_ref'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
name|'aggregate_ref'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'aggregate_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'aggregate_ref'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add
dedent|''
name|'def'
name|'test_aggregate_host_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_ref'
op|'='
name|'self'
op|'.'
name|'_setup_aggregate_with_host'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'any'
op|'('
op|'['
name|'host'
op|'=='
string|"'bar'"
nl|'\n'
name|'for'
name|'host'
name|'in'
name|'aggregate_ref'
op|'['
string|"'hosts'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'aggregate_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete
dedent|''
name|'def'
name|'test_aggregate_host_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_ref'
op|'='
name|'self'
op|'.'
name|'_setup_aggregate_with_host'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate_ref'
op|','
nl|'\n'
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
name|'aggregate_ref'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'aggregate_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'any'
op|'('
op|'['
name|'host'
op|'=='
string|"'bar'"
nl|'\n'
name|'for'
name|'host'
name|'in'
name|'aggregate_ref'
op|'['
string|"'hosts'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'aggregate_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'aggregate_metadata_get_by_host'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host'"
op|','
nl|'\n'
string|"'key'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'host'"
op|','
string|"'key'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_update
dedent|''
name|'def'
name|'test_bw_usage_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bw_usage_get'"
op|')'
newline|'\n'
nl|'\n'
name|'update_args'
op|'='
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
string|"'mac'"
op|','
number|'0'
op|','
number|'10'
op|','
number|'20'
op|','
number|'5'
op|','
number|'10'
op|','
number|'20'
op|')'
newline|'\n'
name|'get_args'
op|'='
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
number|'0'
op|','
string|"'mac'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
op|'*'
name|'update_args'
op|','
name|'update_cells'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bw_usage_get'
op|'('
op|'*'
name|'get_args'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'bw_usage_update'
op|'('
op|'*'
name|'update_args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_fw_rule_get_all
dedent|''
name|'def'
name|'test_provider_fw_rule_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_rules'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'provider_fw_rule_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_rules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'fake_rules'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_get_by_triple
dedent|''
name|'def'
name|'test_agent_build_get_by_triple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'agent_build_get_by_triple'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-hv'"
op|','
string|"'fake-os'"
op|','
nl|'\n'
string|"'fake-arch'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'it worked'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-hv'"
op|','
nl|'\n'
string|"'fake-os'"
op|','
nl|'\n'
string|"'fake-arch'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'it worked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'test_block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_active_by_window_joined
dedent|''
name|'def'
name|'test_instance_get_active_by_window_joined'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_active_by_window_joined'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-begin'"
op|','
nl|'\n'
string|"'fake-end'"
op|','
string|"'fake-proj'"
op|','
nl|'\n'
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-begin'"
op|','
string|"'fake-end'"
op|','
string|"'fake-proj'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy
dedent|''
name|'def'
name|'test_instance_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_info_cache_delete
dedent|''
name|'def'
name|'test_instance_info_cache_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_info_cache_delete'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_info_cache_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_info_cache_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_get_usage_by_time
dedent|''
name|'def'
name|'test_vol_get_usage_by_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'vol_get_usage_by_time'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-time'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'fake-usage'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-time'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-usage'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update
dedent|''
name|'def'
name|'test_vol_usage_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'vol_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'usage_volume_info'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake-az'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-vol'"
op|','
number|'22'
op|','
number|'33'
op|','
number|'44'
op|','
number|'55'
op|','
nl|'\n'
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'fake_inst'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'fake_inst'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'fake_inst'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-usage'"
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'usage_volume_info'
op|'('
string|"'fake-usage'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-info'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'vol_usage_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-vol'"
op|','
nl|'\n'
number|'22'
op|','
number|'33'
op|','
number|'44'
op|','
number|'55'
op|','
name|'fake_inst'
op|','
nl|'\n'
string|"'fake-update-time'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'fake_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'fake_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'conductor.%s'"
op|'%'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'host'
op|','
nl|'\n'
name|'msg'
op|'.'
name|'publisher_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'volume.usage'"
op|','
name|'msg'
op|'.'
name|'event_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'INFO'"
op|','
name|'msg'
op|'.'
name|'priority'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-info'"
op|','
name|'msg'
op|'.'
name|'payload'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_create
dedent|''
name|'def'
name|'test_compute_node_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'compute_node_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-values'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-values'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update
dedent|''
name|'def'
name|'test_compute_node_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'compute_node_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'fake'"
op|':'
string|"'values'"
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|','
nl|'\n'
op|'{'
string|"'fake'"
op|':'
string|"'values'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update_with_non_json_stats
dedent|''
name|'def'
name|'test_compute_node_update_with_non_json_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'fake_input'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'fake_vals'
op|'='
op|'{'
string|"'stats'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'fake_input'
op|'['
string|"'stats'"
op|']'
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'compute_node_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|','
name|'fake_vals'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|','
nl|'\n'
name|'fake_input'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_delete
dedent|''
name|'def'
name|'test_compute_node_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'compute_node_delete'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_node_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create
dedent|''
name|'def'
name|'test_instance_fault_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-values'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-values'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get
dedent|''
name|'def'
name|'test_task_log_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'task_log_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
string|"'end'"
op|','
string|"'host'"
op|','
nl|'\n'
string|"'state'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
nl|'\n'
string|"'end'"
op|','
string|"'host'"
op|','
string|"'state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_with_no_state
dedent|''
name|'def'
name|'test_task_log_get_with_no_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'task_log_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
string|"'end'"
op|','
nl|'\n'
string|"'host'"
op|','
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
nl|'\n'
string|"'end'"
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_begin_task
dedent|''
name|'def'
name|'test_task_log_begin_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'task_log_begin_task'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
nl|'\n'
string|"'end'"
op|','
string|"'host'"
op|','
string|"'items'"
op|','
nl|'\n'
string|"'message'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'task_log_begin_task'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
string|"'end'"
op|','
string|"'host'"
op|','
string|"'items'"
op|','
string|"'message'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_end_task
dedent|''
name|'def'
name|'test_task_log_end_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'task_log_end_task'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_end_task'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
string|"'end'"
op|','
nl|'\n'
string|"'host'"
op|','
string|"'errors'"
op|','
string|"'message'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'task_log_end_task'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'task'"
op|','
string|"'begin'"
op|','
string|"'end'"
op|','
string|"'host'"
op|','
string|"'errors'"
op|','
string|"'message'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_notify_usage_exists
dedent|''
name|'def'
name|'test_notify_usage_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
op|'{'
nl|'\n'
string|"'audit_period_beginning'"
op|':'
string|"'start'"
op|','
nl|'\n'
string|"'audit_period_ending'"
op|':'
string|"'end'"
op|','
nl|'\n'
string|"'bandwidth'"
op|':'
string|"'bw_usage'"
op|','
nl|'\n'
string|"'image_meta'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'extra'"
op|':'
string|"'info'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
op|'{'
nl|'\n'
string|"'system_metadata'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'notifications'
op|','
string|"'audit_period_bounds'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'notifications'
op|','
string|"'bandwidth_usage'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|')'
newline|'\n'
nl|'\n'
name|'notifications'
op|'.'
name|'audit_period_bounds'
op|'('
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
string|"'start'"
op|','
string|"'end'"
op|')'
op|')'
newline|'\n'
name|'notifications'
op|'.'
name|'bandwidth_usage'
op|'('
name|'instance'
op|','
string|"'start'"
op|','
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'bw_usage'"
op|')'
newline|'\n'
name|'notifier'
op|'='
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'notifier'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
name|'notifier'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'exists'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'notify_usage_exists'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'dict'
op|'('
name|'extra'
op|'='
string|"'info'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_groups_trigger_members_refresh
dedent|''
name|'def'
name|'test_security_groups_trigger_members_refresh'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|','
nl|'\n'
string|"'trigger_members_refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_members_refresh'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_groups_trigger_members_refresh'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_migrate_instance_start
dedent|''
name|'def'
name|'test_network_migrate_instance_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'migrate_instance_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'network_api'
op|'.'
name|'migrate_instance_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance'"
op|','
nl|'\n'
string|"'migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'network_migrate_instance_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance'"
op|','
nl|'\n'
string|"'migration'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_migrate_instance_finish
dedent|''
name|'def'
name|'test_network_migrate_instance_finish'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'migrate_instance_finish'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'network_api'
op|'.'
name|'migrate_instance_finish'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'instance'"
op|','
string|"'migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'network_migrate_instance_finish'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance'"
op|','
nl|'\n'
string|"'migration'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_commit
dedent|''
name|'def'
name|'test_quota_commit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'commit'"
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
name|'project_id'
op|'='
string|"'proj'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'quota_commit'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'quota_commit'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
string|"'proj'"
op|','
nl|'\n'
string|"'user'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_rollback
dedent|''
name|'def'
name|'test_quota_rollback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'rollback'"
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'rollback'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'rollback'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
name|'project_id'
op|'='
string|"'proj'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'quota_rollback'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'quota_rollback'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'reservations'"
op|','
string|"'proj'"
op|','
nl|'\n'
string|"'user'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_ec2_ids
dedent|''
name|'def'
name|'test_get_ec2_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'instance-id'"
op|':'
string|"'ec2-inst-id'"
op|','
nl|'\n'
string|"'ami-id'"
op|':'
string|"'ec2-ami-id'"
op|','
nl|'\n'
string|"'kernel-id'"
op|':'
string|"'ami-kernel-ec2-kernelid'"
op|','
nl|'\n'
string|"'ramdisk-id'"
op|':'
string|"'ami-ramdisk-ec2-ramdiskid'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'inst'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'ec2-kernelid'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'ec2-ramdiskid'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'fake-image'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'ec2utils'
op|','
string|"'id_to_ec2_inst_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'ec2utils'
op|','
string|"'glance_id_to_ec2_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'ec2utils'
op|','
string|"'image_type'"
op|')'
newline|'\n'
nl|'\n'
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'expected'
op|'['
string|"'instance-id'"
op|']'
op|')'
newline|'\n'
name|'ec2utils'
op|'.'
name|'glance_id_to_ec2_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'expected'
op|'['
string|"'ami-id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'image_type'
name|'in'
op|'['
string|"'kernel'"
op|','
string|"'ramdisk'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'image_id'
op|'='
name|'inst'
op|'['
string|"'%s_id'"
op|'%'
name|'image_type'
op|']'
newline|'\n'
name|'ec2utils'
op|'.'
name|'image_type'
op|'('
name|'image_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'ami-'"
op|'+'
name|'image_type'
op|')'
newline|'\n'
name|'ec2utils'
op|'.'
name|'glance_id_to_ec2_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_id'
op|','
nl|'\n'
string|"'ami-'"
op|'+'
name|'image_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'ami-%s-ec2-%sid'"
op|'%'
op|'('
name|'image_type'
op|','
name|'image_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'get_ec2_ids'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_unrescue
dedent|''
name|'def'
name|'test_compute_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'unrescue'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|'.'
name|'unrescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_unrescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'instance'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorTestCase
dedent|''
dedent|''
name|'class'
name|'ConductorTestCase'
op|'('
name|'_BaseTestCase'
op|','
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor Manager Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_manager'
op|'.'
name|'ConductorManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor'
newline|'\n'
nl|'\n'
DECL|member|test_instance_info_cache_update
dedent|''
name|'def'
name|'test_instance_info_cache_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_values'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'val1'"
op|','
string|"'key2'"
op|':'
string|"'val2'"
op|'}'
newline|'\n'
name|'fake_inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|','
nl|'\n'
name|'fake_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
nl|'\n'
name|'fake_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get
dedent|''
name|'def'
name|'test_migration_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'migrating'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'migration'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migration_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'migration'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_unconfirmed_by_dest_compute
dedent|''
name|'def'
name|'test_migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'migration_get_unconfirmed_by_dest_compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-window'"
op|','
nl|'\n'
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-window'"
op|','
nl|'\n'
string|"'fake-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_confirm_resize
dedent|''
name|'def'
name|'test_compute_confirm_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'confirm_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'instance'"
op|','
name|'migration'
op|'='
string|"'migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_confirm_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'instance'"
op|','
nl|'\n'
string|"'migration'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_create
dedent|''
name|'def'
name|'test_migration_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake-host'"
op|','
nl|'\n'
string|"'node'"
op|':'
string|"'fake-node'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'migration_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'source_compute'"
op|':'
name|'inst'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
string|"'source_node'"
op|':'
name|'inst'
op|'['
string|"'node'"
op|']'
op|','
nl|'\n'
string|"'fake-key'"
op|':'
string|"'fake-value'"
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
op|'{'
string|"'fake-key'"
op|':'
string|"'fake-value'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|','
string|"'device_name'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'fake_bdm2'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|','
string|"'device_name'"
op|':'
string|"'foo2'"
op|'}'
newline|'\n'
name|'cells_rpcapi'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'cells_rpcapi'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'bdm_update_or_create_at_top'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_bdm2'
op|')'
newline|'\n'
name|'cells_rpcapi'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm2'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'fake_bdm'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_bdm2'
op|')'
newline|'\n'
name|'cells_rpcapi'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm2'
op|','
nl|'\n'
name|'create'
op|'='
name|'False'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_bdm2'
op|')'
newline|'\n'
name|'cells_rpcapi'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm2'
op|','
nl|'\n'
name|'create'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters
dedent|''
name|'def'
name|'test_instance_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_use_slave
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_use_slave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host
dedent|''
name|'def'
name|'test_instance_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host_and_node'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
string|"'host'"
op|','
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
string|"'host'"
op|','
nl|'\n'
string|"'node'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host'"
op|','
nl|'\n'
string|"'node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_stubbed
dedent|''
name|'def'
name|'_test_stubbed'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'dbargs'
op|','
name|'condargs'
op|','
nl|'\n'
name|'db_result_listified'
op|'='
name|'False'
op|','
name|'db_exception'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'dbargs'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exception'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'dbargs'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exception'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'dbargs'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'messaging'
op|'.'
name|'ExpectedException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_get_all_by'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'condargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'utils'
op|'.'
name|'ExceptionHelper'
op|'('
name|'self'
op|'.'
name|'conductor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'db_exception'
op|'.'
name|'__class__'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_get_all_by'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'condargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_get_all_by'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'**'
name|'condargs'
op|')'
newline|'\n'
name|'if'
name|'db_result_listified'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake-result'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_host_and_topic
dedent|''
name|'def'
name|'test_service_get_by_host_and_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_host_and_topic'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'topic'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'topic'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_topic
dedent|''
name|'def'
name|'test_service_get_all_by_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_topic'"
op|','
nl|'\n'
op|'('
string|"'topic'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'topic'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_host
dedent|''
name|'def'
name|'test_service_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
name|'db_result_listified'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args
dedent|''
name|'def'
name|'test_service_get_by_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|','
name|'binary'
op|'='
string|"'binary'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host_not_found
dedent|''
name|'def'
name|'test_service_get_by_compute_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args_not_found
dedent|''
name|'def'
name|'test_service_get_by_args_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|','
name|'binary'
op|'='
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'HostBinaryNotFound'
op|'('
name|'binary'
op|'='
string|"'binary'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_groups_trigger_handler
dedent|''
name|'def'
name|'test_security_groups_trigger_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|','
nl|'\n'
string|"'trigger_handler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_handler'
op|'('
string|"'event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'args'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_groups_trigger_handler'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'event'"
op|','
op|'['
string|"'args'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_confirm_resize_with_objects
dedent|''
name|'def'
name|'test_compute_confirm_resize_with_objects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# use an instance object rather than a dict'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'instance'
op|')'
newline|'\n'
name|'migration'
op|'='
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
newline|'\n'
name|'mig_obj'
op|'='
name|'migration_obj'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'migration_obj'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'migration'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'confirm_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'migration'
op|'='
name|'mig_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_confirm_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
name|'mig_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_object_action
dedent|''
name|'def'
name|'_test_object_action'
op|'('
name|'self'
op|','
name|'is_classmethod'
op|','
name|'raise_exception'
op|')'
op|':'
newline|'\n'
DECL|class|TestObject
indent|'        '
name|'class'
name|'TestObject'
op|'('
name|'obj_base'
op|'.'
name|'NovaObject'
op|')'
op|':'
newline|'\n'
DECL|member|foo
indent|'            '
name|'def'
name|'foo'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'raise_exception'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'raise_exception'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
string|"'test'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|bar
name|'def'
name|'bar'
op|'('
name|'cls'
op|','
name|'context'
op|','
name|'raise_exception'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'raise_exception'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
string|"'test'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'obj'
op|'='
name|'TestObject'
op|'('
op|')'
newline|'\n'
name|'if'
name|'is_classmethod'
op|':'
newline|'\n'
DECL|variable|result
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'object_class_action'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'TestObject'
op|'.'
name|'obj_name'
op|'('
op|')'
op|','
string|"'bar'"
op|','
string|"'1.0'"
op|','
nl|'\n'
name|'tuple'
op|'('
op|')'
op|','
op|'{'
string|"'raise_exception'"
op|':'
name|'raise_exception'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|','
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'object_action'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'obj'
op|','
string|"'foo'"
op|','
name|'tuple'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'raise_exception'"
op|':'
name|'raise_exception'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'test'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_action
dedent|''
name|'def'
name|'test_object_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_object_action'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_action_on_raise
dedent|''
name|'def'
name|'test_object_action_on_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'messaging'
op|'.'
name|'ExpectedException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_object_action'
op|','
name|'False'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_class_action
dedent|''
name|'def'
name|'test_object_class_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_object_action'
op|'('
name|'True'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_class_action_on_raise
dedent|''
name|'def'
name|'test_object_class_action_on_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'messaging'
op|'.'
name|'ExpectedException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_object_action'
op|','
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_action_copies_object
dedent|''
name|'def'
name|'test_object_action_copies_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|TestObject
indent|'        '
name|'class'
name|'TestObject'
op|'('
name|'obj_base'
op|'.'
name|'NovaObject'
op|')'
op|':'
newline|'\n'
DECL|variable|fields
indent|'            '
name|'fields'
op|'='
op|'{'
string|"'dict'"
op|':'
name|'fields'
op|'.'
name|'DictOfStringsField'
op|'('
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|touch_dict
name|'def'
name|'touch_dict'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'dict'
op|'['
string|"'foo'"
op|']'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'obj'
op|'='
name|'TestObject'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'.'
name|'dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'obj'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'updates'
op|','
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'object_action'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'obj'
op|','
string|"'touch_dict'"
op|','
name|'tuple'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
comment|'# NOTE(danms): If conductor did not properly copy the object, then'
nl|'\n'
comment|'# the new and reference copies of the nested dict object will be'
nl|'\n'
comment|"# the same, and thus 'dict' will not be reported as changed"
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'dict'"
op|','
name|'updates'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'updates'
op|'['
string|"'dict'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add
dedent|''
name|'def'
name|'test_aggregate_metadata_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake aggregate'"
op|','
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'aggregate_metadata_add'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'aggregate'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|','
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'aggregate'
op|','
nl|'\n'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete
dedent|''
name|'def'
name|'test_aggregate_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake aggregate'"
op|','
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'aggregate_metadata_delete'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'aggregate'
op|'['
string|"'id'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
nl|'\n'
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_by_instance
dedent|''
name|'def'
name|'test_security_group_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-instance'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'security_group_get_by_instance'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'it worked'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_group_get_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'it worked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_by_security_group
dedent|''
name|'def'
name|'test_security_group_rule_get_by_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_secgroup'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-secgroup'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'security_group_rule_get_by_security_group'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_rule_get_by_security_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_secgroup'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'it worked'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_group_rule_get_by_security_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_secgroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'it worked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_action_event_expected_exceptions
dedent|''
name|'def'
name|'_test_action_event_expected_exceptions'
op|'('
name|'self'
op|','
name|'db_method'
op|','
nl|'\n'
name|'conductor_method'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
comment|'# Tests that expected exceptions are handled properly.'
nl|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
name|'db_method'
op|','
name|'side_effect'
op|'='
name|'error'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'messaging'
op|'.'
name|'ExpectedException'
op|','
name|'conductor_method'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_event_start_expected_exceptions
dedent|''
dedent|''
name|'def'
name|'test_action_event_start_expected_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
name|'exc'
op|'.'
name|'InstanceActionNotFound'
op|'('
name|'request_id'
op|'='
string|"'1'"
op|','
name|'instance_uuid'
op|'='
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_action_event_expected_exceptions'
op|'('
nl|'\n'
string|"'action_event_start'"
op|','
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'action_event_start'
op|','
name|'error'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_event_finish_expected_exceptions
dedent|''
name|'def'
name|'test_action_event_finish_expected_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'errors'
op|'='
op|'('
name|'exc'
op|'.'
name|'InstanceActionNotFound'
op|'('
name|'request_id'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'2'"
op|')'
op|','
nl|'\n'
name|'exc'
op|'.'
name|'InstanceActionEventNotFound'
op|'('
name|'event'
op|'='
string|"'1'"
op|','
name|'action_id'
op|'='
string|"'2'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'error'
name|'in'
name|'errors'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_action_event_expected_exceptions'
op|'('
nl|'\n'
string|"'action_event_finish'"
op|','
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'action_event_finish'
op|','
nl|'\n'
name|'error'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorRPCAPITestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ConductorRPCAPITestCase'
op|'('
name|'_BaseTestCase'
op|','
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor RPC API Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorRPCAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor_service'
op|'.'
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm'
op|'['
string|"'id'"
op|']'
op|','
name|'fake_bdm'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters
dedent|''
name|'def'
name|'test_instance_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_use_slave
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_use_slave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'fake-key'"
op|','
string|"'fake-sort'"
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_stubbed
dedent|''
name|'def'
name|'_test_stubbed'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'dbargs'
op|','
name|'condargs'
op|','
nl|'\n'
name|'db_result_listified'
op|'='
name|'False'
op|','
name|'db_exception'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'dbargs'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exception'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'dbargs'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'db_exception'
op|'.'
name|'__class__'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_get_all_by'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'condargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_get_all_by'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'**'
name|'condargs'
op|')'
newline|'\n'
name|'if'
name|'db_result_listified'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake-result'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_host_and_topic
dedent|''
name|'def'
name|'test_service_get_by_host_and_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_host_and_topic'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'topic'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'topic'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_topic
dedent|''
name|'def'
name|'test_service_get_all_by_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_topic'"
op|','
nl|'\n'
op|'('
string|"'topic'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'topic'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_host
dedent|''
name|'def'
name|'test_service_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
name|'db_result_listified'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args
dedent|''
name|'def'
name|'test_service_get_by_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|','
name|'binary'
op|'='
string|"'binary'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host_not_found
dedent|''
name|'def'
name|'test_service_get_by_compute_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'topic'
op|'='
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args_not_found
dedent|''
name|'def'
name|'test_service_get_by_args_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|','
name|'binary'
op|'='
string|"'binary'"
op|')'
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'HostBinaryNotFound'
op|'('
name|'binary'
op|'='
string|"'binary'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_groups_trigger_handler
dedent|''
name|'def'
name|'test_security_groups_trigger_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|','
nl|'\n'
string|"'trigger_handler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_handler'
op|'('
string|"'event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'arg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_groups_trigger_handler'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'event'"
op|','
op|'['
string|"'arg'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorAPITestCase'
op|'('
name|'_BaseTestCase'
op|','
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor API Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor_service'
op|'.'
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_do_update
dedent|''
name|'def'
name|'_do_update'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): the public API takes actual keyword arguments,'
nl|'\n'
comment|'# so override the base class here to make the call correctly'
nl|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
op|'**'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_get
dedent|''
name|'def'
name|'test_bw_usage_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bw_usage_get'"
op|')'
newline|'\n'
nl|'\n'
name|'get_args'
op|'='
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
number|'0'
op|','
string|"'mac'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_get'
op|'('
op|'*'
name|'get_args'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'bw_usage_get'
op|'('
op|'*'
name|'get_args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-bdm'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-id'"
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-bdm'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-id'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-bdm'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_stubbed
dedent|''
name|'def'
name|'_test_stubbed'
op|'('
name|'self'
op|','
name|'name'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'args'
name|'and'
name|'isinstance'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'FakeContext'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'args'
op|'='
name|'args'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
dedent|''
name|'db_exception'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'db_exception'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'ctxt'
op|','
op|'*'
name|'args'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exception'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'db'
op|','
name|'name'
op|')'
op|'('
name|'ctxt'
op|','
op|'*'
name|'args'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'name'
op|'=='
string|"'service_destroy'"
op|':'
newline|'\n'
comment|'# TODO(russellb) This is a hack ... SetUp() starts the conductor()'
nl|'\n'
comment|'# service.  There is a cleanup step that runs after this test which'
nl|'\n'
comment|'# also deletes the associated service record. This involves a call'
nl|'\n'
comment|'# to db.service_destroy(), which we have stubbed out.'
nl|'\n'
indent|'            '
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'if'
name|'db_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'db_exception'
op|'.'
name|'__class__'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
name|'name'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
name|'name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|','
string|"'fake-result'"
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'returns'"
op|','
name|'True'
op|')'
name|'else'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_host_and_topic
dedent|''
name|'def'
name|'test_service_get_by_host_and_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_host_and_topic'"
op|','
string|"'host'"
op|','
string|"'topic'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_topic
dedent|''
name|'def'
name|'test_service_get_all_by_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_topic'"
op|','
string|"'topic'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_host
dedent|''
name|'def'
name|'test_service_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_all_by_host'"
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args
dedent|''
name|'def'
name|'test_service_get_by_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
string|"'host'"
op|','
string|"'binary'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host_not_found
dedent|''
name|'def'
name|'test_service_get_by_compute_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_compute_host'"
op|','
string|"'host'"
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args_not_found
dedent|''
name|'def'
name|'test_service_get_by_args_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_get_by_args'"
op|','
string|"'host'"
op|','
string|"'binary'"
op|','
nl|'\n'
name|'db_exception'
op|'='
name|'exc'
op|'.'
name|'HostBinaryNotFound'
op|'('
name|'binary'
op|'='
string|"'binary'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_create
dedent|''
name|'def'
name|'test_service_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_create'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_destroy
dedent|''
name|'def'
name|'test_service_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'service_destroy'"
op|','
string|"''"
op|','
name|'returns'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update
dedent|''
name|'def'
name|'test_service_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'ctxt'
op|','
string|"''"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'id'"
op|':'
string|"''"
op|'}'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host_and_node
dedent|''
name|'def'
name|'test_instance_get_all_by_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stubbed'
op|'('
string|"'instance_get_all_by_host_and_node'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
string|"'host'"
op|','
string|"'node'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host
dedent|''
name|'def'
name|'test_instance_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host_and_node'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
string|"'host'"
op|','
nl|'\n'
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'fake-result'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wait_until_ready
dedent|''
name|'def'
name|'test_wait_until_ready'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timeouts'
op|'='
op|'['
op|']'
newline|'\n'
name|'calls'
op|'='
name|'dict'
op|'('
name|'count'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_ping
name|'def'
name|'fake_ping'
op|'('
name|'context'
op|','
name|'message'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'timeouts'
op|'.'
name|'append'
op|'('
name|'timeout'
op|')'
newline|'\n'
name|'calls'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'calls'
op|'['
string|"'count'"
op|']'
op|'<'
number|'15'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'messaging'
op|'.'
name|'MessagingTimeout'
op|'('
string|'"fake"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'base_rpcapi'
op|','
string|"'ping'"
op|','
name|'fake_ping'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'wait_until_ready'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timeouts'
op|'.'
name|'count'
op|'('
number|'10'
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'None'
op|','
name|'timeouts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_groups_trigger_handler
dedent|''
name|'def'
name|'test_security_groups_trigger_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|','
nl|'\n'
string|"'trigger_handler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_handler'
op|'('
string|"'event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'arg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'security_groups_trigger_handler'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'event'"
op|','
string|"'arg'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorLocalAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorLocalAPITestCase'
op|'('
name|'ConductorAPITestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor LocalAPI Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorLocalAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_manager'
op|'.'
name|'_target'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
nl|'\n'
DECL|member|test_client_exceptions
dedent|''
name|'def'
name|'test_client_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(danms): The LocalAPI should not raise exceptions wrapped'
nl|'\n'
comment|'# in ClientException. KeyError should be raised if an invalid'
nl|'\n'
comment|'# update key is passed, so use that to validate.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'KeyError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_do_update'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'foo'
op|'='
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wait_until_ready
dedent|''
name|'def'
name|'test_wait_until_ready'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Override test in ConductorAPITestCase'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorImportTest
dedent|''
dedent|''
name|'class'
name|'ConductorImportTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_import_conductor_local
indent|'    '
name|'def'
name|'test_import_conductor_local'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'API'
op|'('
op|')'
op|','
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'ComputeTaskAPI'
op|'('
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalComputeTaskAPI'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_conductor_rpc
dedent|''
name|'def'
name|'test_import_conductor_rpc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'API'
op|'('
op|')'
op|','
name|'conductor_api'
op|'.'
name|'API'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'ComputeTaskAPI'
op|'('
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'ComputeTaskAPI'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_conductor_override_to_local
dedent|''
name|'def'
name|'test_import_conductor_override_to_local'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'API'
op|'('
name|'use_local'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conductor'
op|'.'
name|'ComputeTaskAPI'
op|'('
name|'use_local'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalComputeTaskAPI'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorPolicyTest
dedent|''
dedent|''
name|'class'
name|'ConductorPolicyTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_all_allowed_keys
indent|'    '
name|'def'
name|'test_all_allowed_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_db_instance_update
indent|'        '
name|'def'
name|'fake_db_instance_update'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'fake_db_instance_update'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake-user'"
op|','
string|"'fake-project'"
op|')'
newline|'\n'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|'('
op|')'
newline|'\n'
name|'updates'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'conductor_manager'
op|'.'
name|'allowed_updates'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'conductor_manager'
op|'.'
name|'datetime_fields'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'['
name|'key'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'['
name|'key'
op|']'
op|'='
string|"'foo'"
newline|'\n'
dedent|''
dedent|''
name|'conductor'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
op|'**'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allowed_keys_are_real
dedent|''
name|'def'
name|'test_allowed_keys_are_real'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'models'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'keys'
op|'='
name|'list'
op|'('
name|'conductor_manager'
op|'.'
name|'allowed_updates'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): expected_task_state is a parameter that gets'
nl|'\n'
comment|'# passed to the db layer, but is not actually an instance attribute'
nl|'\n'
name|'del'
name|'keys'
op|'['
name|'keys'
op|'.'
name|'index'
op|'('
string|"'expected_task_state'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'instance'
op|','
name|'key'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_BaseTaskTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'_BaseTaskTestCase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_BaseTaskTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'FakeContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'fake_server_actions'
op|'.'
name|'stub_out_action_events'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_deserialize_context
name|'def'
name|'fake_deserialize_context'
op|'('
name|'serializer'
op|','
name|'ctxt_dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
name|'ctxt_dict'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
name|'ctxt_dict'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'context'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|'.'
name|'RequestContextSerializer'
op|','
string|"'deserialize_context'"
op|','
nl|'\n'
name|'fake_deserialize_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migrate
dedent|''
name|'def'
name|'test_live_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'inst'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'live_migrate'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'live_migrate'
op|'.'
name|'execute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
string|"'destination'"
op|','
nl|'\n'
string|"'block_migration'"
op|','
nl|'\n'
string|"'disk_over_commit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
op|'('
name|'conductor_api'
op|'.'
name|'ComputeTaskAPI'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalComputeTaskAPI'
op|')'
op|')'
op|':'
newline|'\n'
comment|"# The API method is actually 'live_migrate_instance'.  It gets"
nl|'\n'
comment|"# converted into 'migrate_server' when doing RPC."
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'live_migrate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
string|"'destination'"
op|','
string|"'block_migration'"
op|','
string|"'disk_over_commit'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'destination'"
op|'}'
op|','
name|'True'
op|','
name|'False'
op|','
name|'None'
op|','
nl|'\n'
string|"'block_migration'"
op|','
string|"'disk_over_commit'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cold_migrate
dedent|''
dedent|''
name|'def'
name|'test_cold_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_image_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
string|"'build_request_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|','
string|"'prep_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'select_destinations'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'image_ref'
op|'='
string|"'image_ref'"
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'inst'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'flavors'
op|'.'
name|'get_default_flavor'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'['
string|"'extra_specs'"
op|']'
op|'='
string|"'extra_specs'"
newline|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_type'"
op|':'
name|'flavor'
op|'}'
newline|'\n'
name|'compute_utils'
op|'.'
name|'get_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'image_service'
op|','
nl|'\n'
string|"'image_ref'"
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'image'"
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'image'"
op|','
nl|'\n'
op|'['
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|']'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'flavor'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'request_spec'
op|')'
newline|'\n'
nl|'\n'
name|'hosts'
op|'='
op|'['
name|'dict'
op|'('
name|'host'
op|'='
string|"'host1'"
op|','
name|'nodename'
op|'='
name|'None'
op|','
name|'limits'
op|'='
op|'{'
op|'}'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'limits'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'prep_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'image'"
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'dict'
op|')'
op|','
string|"'host1'"
op|','
op|'['
op|']'
op|','
name|'request_spec'
op|'='
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'filter_properties'
op|','
name|'node'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_hint'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
op|'('
name|'conductor_api'
op|'.'
name|'ComputeTaskAPI'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalComputeTaskAPI'
op|')'
op|')'
op|':'
newline|'\n'
comment|"# The API method is actually 'resize_instance'.  It gets"
nl|'\n'
comment|"# converted into 'migrate_server' when doing RPC."
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'resize_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
op|'{'
op|'}'
op|','
name|'scheduler_hint'
op|','
name|'flavor'
op|','
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'scheduler_hint'
op|','
nl|'\n'
name|'False'
op|','
name|'False'
op|','
name|'flavor'
op|','
name|'None'
op|','
name|'None'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_instances
dedent|''
dedent|''
name|'def'
name|'test_build_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
name|'flavors'
op|'.'
name|'get_default_flavor'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'flavors'
op|'.'
name|'save_flavor_info'
op|'('
op|'{'
op|'}'
op|','
name|'instance_type'
op|')'
newline|'\n'
comment|'# NOTE(alaski): instance_type -> system_metadata -> instance_type'
nl|'\n'
comment|'# loses some data (extra_specs).  This build process is using'
nl|'\n'
comment|'# scheduler/utils:build_request_spec() which extracts flavor from'
nl|'\n'
comment|'# system_metadata and will re-query the DB for extra_specs.. so'
nl|'\n'
comment|'# we need to test this properly'
nl|'\n'
name|'expected_instance_type'
op|'='
name|'flavors'
op|'.'
name|'extract_flavor'
op|'('
nl|'\n'
op|'{'
string|"'system_metadata'"
op|':'
name|'system_metadata'
op|'}'
op|')'
newline|'\n'
name|'expected_instance_type'
op|'['
string|"'extra_specs'"
op|']'
op|'='
string|"'fake-specs'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'flavor_extra_specs_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'run_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'flavor_extra_specs_get'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-specs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|'='
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
string|"'fake_data'"
op|':'
string|"'should_pass_silently'"
op|'}'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
string|"'system_metadata'"
op|':'
name|'system_metadata'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fakeuuid'"
op|'}'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'expected_instance_type'
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
string|"'fakeuuid'"
op|','
string|"'fakeuuid2'"
op|']'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
string|"'block_device_mapping'"
op|','
nl|'\n'
string|"'security_group'"
op|':'
string|"'security_groups'"
op|','
nl|'\n'
string|"'num_instances'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
name|'admin_password'
op|'='
string|"'admin_password'"
op|','
nl|'\n'
name|'injected_files'
op|'='
string|"'injected_files'"
op|','
nl|'\n'
name|'requested_networks'
op|'='
string|"'requested_networks'"
op|','
name|'is_first_time'
op|'='
name|'True'
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
op|','
name|'legacy_bdm_in_spec'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# build_instances() is a cast, we need to wait for it to complete'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'cast_as_call'
op|'.'
name|'CastAsCall'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
string|"'fakeuuid'"
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'system_metadata'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fakeuuid2'"
op|'}'
op|']'
op|','
nl|'\n'
name|'image'
op|'='
op|'{'
string|"'fake_data'"
op|':'
string|"'should_pass_silently'"
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'admin_password'
op|'='
string|"'admin_password'"
op|','
nl|'\n'
name|'injected_files'
op|'='
string|"'injected_files'"
op|','
nl|'\n'
name|'requested_networks'
op|'='
string|"'requested_networks'"
op|','
nl|'\n'
name|'security_groups'
op|'='
string|"'security_groups'"
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
string|"'block_device_mapping'"
op|','
nl|'\n'
name|'legacy_bdm'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unshelve_instance_on_host
dedent|''
name|'def'
name|'test_unshelve_instance_on_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UNSHELVING'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'instance'
op|'.'
name|'system_metadata'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'start_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_delete_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'unshelve_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'_delete_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_image_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'system_metadata'
op|'['
string|"'shelved_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_image_id'"
op|']'
op|'='
string|"'fake_image_id'"
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_host'"
op|']'
op|'='
string|"'fake-mini'"
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unshelve_instance_schedule_and_rebuild
dedent|''
name|'def'
name|'test_unshelve_instance_schedule_and_rebuild'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'system_metadata'
op|'='
name|'instance'
op|'.'
name|'system_metadata'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_schedule_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'unshelve_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'_get_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_image_id'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'_schedule_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_image'"
op|','
name|'filter_properties'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'nodename'"
op|':'
string|"'fake_node'"
op|','
nl|'\n'
string|"'limits'"
op|':'
op|'{'
op|'}'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
string|"'fake_host'"
op|','
name|'image'
op|'='
string|"'fake_image'"
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'limits'"
op|':'
op|'{'
op|'}'
op|'}'
op|','
name|'node'
op|'='
string|"'fake_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'system_metadata'
op|'['
string|"'shelved_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_image_id'"
op|']'
op|'='
string|"'fake_image_id'"
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_host'"
op|']'
op|'='
string|"'fake-mini'"
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unshelve_instance_schedule_and_rebuild_novalid_host
dedent|''
name|'def'
name|'test_unshelve_instance_schedule_and_rebuild_novalid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'instance'
op|'.'
name|'system_metadata'
newline|'\n'
nl|'\n'
DECL|function|fake_schedule_instances
name|'def'
name|'fake_schedule_instances'
op|'('
name|'context'
op|','
name|'image'
op|','
name|'filter_properties'
op|','
nl|'\n'
op|'*'
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exc'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_get_image'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake_image'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_schedule_instances'"
op|','
nl|'\n'
name|'fake_schedule_instances'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_get_image'
op|','
name|'_schedule_instances'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'system_metadata'
op|'['
string|"'shelved_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_image_id'"
op|']'
op|'='
string|"'fake_image_id'"
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_host'"
op|']'
op|'='
string|"'fake-mini'"
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'_get_image'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'['
string|"'shelved_image_id'"
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unshelve_instance_schedule_and_rebuild_volume_backed
dedent|''
dedent|''
name|'def'
name|'test_unshelve_instance_schedule_and_rebuild_volume_backed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'system_metadata'
op|'='
name|'instance'
op|'.'
name|'system_metadata'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|','
string|"'_schedule_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'unshelve_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'_get_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_image_id'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'_schedule_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'None'
op|','
name|'filter_properties'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'nodename'"
op|':'
string|"'fake_node'"
op|','
nl|'\n'
string|"'limits'"
op|':'
op|'{'
op|'}'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
string|"'fake_host'"
op|','
name|'image'
op|'='
name|'None'
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'limits'"
op|':'
op|'{'
op|'}'
op|'}'
op|','
name|'node'
op|'='
string|"'fake_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'system_metadata'
op|'['
string|"'shelved_at'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_image_id'"
op|']'
op|'='
string|"'fake_image_id'"
newline|'\n'
name|'system_metadata'
op|'['
string|"'shelved_host'"
op|']'
op|'='
string|"'fake-mini'"
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'unshelve_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorTaskTestCase
dedent|''
dedent|''
name|'class'
name|'ConductorTaskTestCase'
op|'('
name|'_BaseTaskTestCase'
op|','
name|'test_compute'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""ComputeTaskManager Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorTaskTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_manager'
op|'.'
name|'ComputeTaskManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_server_fails_with_rebuild
dedent|''
name|'def'
name|'test_migrate_server_fails_with_rebuild'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|','
name|'None'
op|','
name|'True'
op|','
name|'True'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_server_fails_with_flavor
dedent|''
name|'def'
name|'test_migrate_server_fails_with_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|','
name|'None'
op|','
name|'True'
op|','
name|'False'
op|','
string|'"dummy"'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_request_spec
dedent|''
name|'def'
name|'_build_request_spec'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_server_deals_with_expected_exceptions
dedent|''
name|'def'
name|'test_migrate_server_deals_with_expected_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'uuid'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'live_migrate'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
nl|'\n'
string|"'set_vm_state_and_notify'"
op|')'
newline|'\n'
nl|'\n'
name|'ex'
op|'='
name|'exc'
op|'.'
name|'DestinationHypervisorTooOld'
op|'('
op|')'
newline|'\n'
name|'live_migrate'
op|'.'
name|'execute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
string|"'destination'"
op|','
string|"'block_migration'"
op|','
nl|'\n'
string|"'disk_over_commit'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'ex'
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'set_vm_state_and_notify'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'compute_task'"
op|','
string|"'migrate_server'"
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'expected_task_state'"
op|':'
name|'task_states'
op|'.'
name|'MIGRATING'
op|'}'
op|','
nl|'\n'
name|'ex'
op|','
name|'self'
op|'.'
name|'_build_request_spec'
op|'('
name|'inst_obj'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'db'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'utils'
op|'.'
name|'ExceptionHelper'
op|'('
name|'self'
op|'.'
name|'conductor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exc'
op|'.'
name|'DestinationHypervisorTooOld'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'destination'"
op|'}'
op|','
name|'True'
op|','
name|'False'
op|','
name|'None'
op|','
string|"'block_migration'"
op|','
nl|'\n'
string|"'disk_over_commit'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_server_deals_with_unexpected_exceptions
dedent|''
name|'def'
name|'test_migrate_server_deals_with_unexpected_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'live_migrate'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
nl|'\n'
string|"'set_vm_state_and_notify'"
op|')'
newline|'\n'
nl|'\n'
name|'ex'
op|'='
name|'IOError'
op|'('
op|')'
newline|'\n'
name|'live_migrate'
op|'.'
name|'execute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
string|"'destination'"
op|','
string|"'block_migration'"
op|','
nl|'\n'
string|"'disk_over_commit'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'ex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'utils'
op|'.'
name|'ExceptionHelper'
op|'('
name|'self'
op|'.'
name|'conductor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exc'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'migrate_server'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'destination'"
op|'}'
op|','
name|'True'
op|','
name|'False'
op|','
name|'None'
op|','
string|"'block_migration'"
op|','
nl|'\n'
string|"'disk_over_commit'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vm_state_and_notify
dedent|''
name|'def'
name|'test_set_vm_state_and_notify'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
nl|'\n'
string|"'set_vm_state_and_notify'"
op|')'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'set_vm_state_and_notify'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'compute_task'"
op|','
string|"'method'"
op|','
string|"'updates'"
op|','
nl|'\n'
string|"'ex'"
op|','
string|"'request_spec'"
op|','
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'db'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'method'"
op|','
string|"'updates'"
op|','
string|"'ex'"
op|','
string|"'request_spec'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cold_migrate_no_valid_host_back_in_active_state
dedent|''
name|'def'
name|'test_cold_migrate_no_valid_host_back_in_active_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'image_ref'
op|'='
string|"'fake-image_ref'"
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'dict'
op|'('
name|'instance_type'
op|'='
name|'dict'
op|'('
name|'extra_specs'
op|'='
name|'dict'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'filter_props'
op|'='
name|'dict'
op|'('
name|'context'
op|'='
name|'None'
op|')'
newline|'\n'
name|'resvs'
op|'='
string|"'fake-resvs'"
newline|'\n'
name|'image'
op|'='
string|"'fake-image'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_image_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
string|"'build_request_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'select_destinations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
nl|'\n'
string|"'_set_vm_state_and_notify'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quotas_obj'
op|'.'
name|'Quotas'
op|','
string|"'rollback'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'get_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'image_service'
op|','
nl|'\n'
string|"'fake-image_ref'"
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'image'
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
op|'['
name|'inst_obj'
op|']'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'flavor'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'request_spec'
op|')'
newline|'\n'
nl|'\n'
name|'exc_info'
op|'='
name|'exc'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_props'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc_info'
op|')'
newline|'\n'
nl|'\n'
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'exc_info'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'quotas_obj'
op|'.'
name|'Quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_cold_migrate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
string|"'flavor'"
op|','
name|'filter_props'
op|','
op|'['
name|'resvs'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cold_migrate_no_valid_host_back_in_stopped_state
dedent|''
name|'def'
name|'test_cold_migrate_no_valid_host_back_in_stopped_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'image_ref'
op|'='
string|"'fake-image_ref'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'dict'
op|'('
name|'instance_type'
op|'='
name|'dict'
op|'('
name|'extra_specs'
op|'='
name|'dict'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'filter_props'
op|'='
name|'dict'
op|'('
name|'context'
op|'='
name|'None'
op|')'
newline|'\n'
name|'resvs'
op|'='
string|"'fake-resvs'"
newline|'\n'
name|'image'
op|'='
string|"'fake-image'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_image_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
string|"'build_request_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'select_destinations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
nl|'\n'
string|"'_set_vm_state_and_notify'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quotas_obj'
op|'.'
name|'Quotas'
op|','
string|"'rollback'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'get_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'image_service'
op|','
nl|'\n'
string|"'fake-image_ref'"
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'image'
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
op|'['
name|'inst_obj'
op|']'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'flavor'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'request_spec'
op|')'
newline|'\n'
nl|'\n'
name|'exc_info'
op|'='
name|'exc'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_props'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc_info'
op|')'
newline|'\n'
nl|'\n'
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'exc_info'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'quotas_obj'
op|'.'
name|'Quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_cold_migrate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
nl|'\n'
string|"'flavor'"
op|','
name|'filter_props'
op|','
op|'['
name|'resvs'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cold_migrate_exception_host_in_error_state_and_raise
dedent|''
name|'def'
name|'test_cold_migrate_exception_host_in_error_state_and_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'image_ref'
op|'='
string|"'fake-image_ref'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'dict'
op|'('
name|'instance_type'
op|'='
name|'dict'
op|'('
name|'extra_specs'
op|'='
name|'dict'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'filter_props'
op|'='
name|'dict'
op|'('
name|'context'
op|'='
name|'None'
op|')'
newline|'\n'
name|'resvs'
op|'='
string|"'fake-resvs'"
newline|'\n'
name|'image'
op|'='
string|"'fake-image'"
newline|'\n'
name|'hosts'
op|'='
op|'['
name|'dict'
op|'('
name|'host'
op|'='
string|"'host1'"
op|','
name|'nodename'
op|'='
name|'None'
op|','
name|'limits'
op|'='
op|'{'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_image_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
string|"'build_request_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'select_destinations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'scheduler_utils'
op|','
nl|'\n'
string|"'populate_filter_properties'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'prep_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conductor'
op|','
nl|'\n'
string|"'_set_vm_state_and_notify'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quotas_obj'
op|'.'
name|'Quotas'
op|','
string|"'rollback'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'get_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'conductor_manager'
op|'.'
name|'image_service'
op|','
nl|'\n'
string|"'fake-image_ref'"
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'image'
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
op|'['
name|'inst_obj'
op|']'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'flavor'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'request_spec'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'scheduler_rpcapi'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
name|'filter_props'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'populate_filter_properties'
op|'('
name|'filter_props'
op|','
nl|'\n'
name|'hosts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# context popped'
nl|'\n'
name|'expected_filter_props'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
comment|'# extra_specs popped'
nl|'\n'
name|'expected_request_spec'
op|'='
name|'dict'
op|'('
name|'instance_type'
op|'='
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'exc_info'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'something happened'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'prep_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
name|'inst_obj'
op|','
nl|'\n'
string|"'flavor'"
op|','
name|'hosts'
op|'['
number|'0'
op|']'
op|'['
string|"'host'"
op|']'
op|','
op|'['
name|'resvs'
op|']'
op|','
nl|'\n'
name|'request_spec'
op|'='
name|'expected_request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'expected_filter_props'
op|','
nl|'\n'
name|'node'
op|'='
name|'hosts'
op|'['
number|'0'
op|']'
op|'['
string|"'nodename'"
op|']'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc_info'
op|')'
newline|'\n'
nl|'\n'
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'exc_info'
op|','
nl|'\n'
name|'expected_request_spec'
op|')'
newline|'\n'
name|'quotas_obj'
op|'.'
name|'Quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_cold_migrate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
string|"'flavor'"
op|','
nl|'\n'
name|'filter_props'
op|','
op|'['
name|'resvs'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'ConductorTaskRPCAPITestCase'
op|'('
name|'_BaseTaskTestCase'
op|','
nl|'\n'
DECL|class|ConductorTaskRPCAPITestCase
name|'test_compute'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor compute_task RPC namespace Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorTaskRPCAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_rpcapi'
op|'.'
name|'ComputeTaskAPI'
op|'('
op|')'
newline|'\n'
name|'service_manager'
op|'='
name|'self'
op|'.'
name|'conductor_service'
op|'.'
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'service_manager'
op|'.'
name|'compute_task_mgr'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorTaskAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorTaskAPITestCase'
op|'('
name|'_BaseTaskTestCase'
op|','
name|'test_compute'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute task API Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorTaskAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'ComputeTaskAPI'
op|'('
op|')'
newline|'\n'
name|'service_manager'
op|'='
name|'self'
op|'.'
name|'conductor_service'
op|'.'
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'service_manager'
op|'.'
name|'compute_task_mgr'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorLocalComputeTaskAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorLocalComputeTaskAPITestCase'
op|'('
name|'ConductorTaskAPITestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor LocalComputeTaskAPI Tests."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorLocalComputeTaskAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'LocalComputeTaskAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_manager'
op|'='
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'_manager'
op|'.'
name|'_target'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorV2ManagerProxyTestCase
dedent|''
dedent|''
name|'class'
name|'ConductorV2ManagerProxyTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_v2_manager_proxy
indent|'    '
name|'def'
name|'test_v2_manager_proxy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'conductor_manager'
op|'.'
name|'ConductorManager'
op|'('
op|')'
newline|'\n'
name|'proxy'
op|'='
name|'conductor_manager'
op|'.'
name|'_ConductorManagerV2Proxy'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'methods'
op|'='
op|'['
nl|'\n'
comment|'# (method, number_of_args)'
nl|'\n'
op|'('
string|"'instance_update'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_get_by_uuid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'migration_get_in_progress_by_host_and_node'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'aggregate_host_add'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'aggregate_host_delete'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'aggregate_metadata_get_by_host'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'bw_usage_update'"
op|','
number|'9'
op|')'
op|','
nl|'\n'
op|'('
string|"'provider_fw_rule_get_all'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|"'agent_build_get_by_triple'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping_update_or_create'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping_get_all_by_instance'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_get_all_by_filters'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_get_active_by_window_joined'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_destroy'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_info_cache_delete'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'vol_get_usage_by_time'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'vol_usage_update'"
op|','
number|'8'
op|')'
op|','
nl|'\n'
op|'('
string|"'service_get_all_by'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_get_all_by_host'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_fault_create'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'action_event_start'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'action_event_finish'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'service_create'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'service_destroy'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'compute_node_create'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'compute_node_update'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'compute_node_delete'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'service_update'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'task_log_get'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'task_log_begin_task'"
op|','
number|'6'
op|')'
op|','
nl|'\n'
op|'('
string|"'task_log_end_task'"
op|','
number|'6'
op|')'
op|','
nl|'\n'
op|'('
string|"'notify_usage_exists'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'security_groups_trigger_handler'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'security_groups_trigger_members_refresh'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'network_migrate_instance_start'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'network_migrate_instance_finish'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'quota_commit'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'quota_rollback'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'get_ec2_ids'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'compute_unrescue'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'object_class_action'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|'('
string|"'object_action'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|'('
string|"'object_backport'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'method'
op|','
name|'num_args'
name|'in'
name|'methods'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'_i'
name|'in'
name|'xrange'
op|'('
name|'num_args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'append'
op|'('
name|'None'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|','
name|'method'
op|')'
name|'as'
name|'mock_method'
op|':'
newline|'\n'
indent|'                '
name|'getattr'
op|'('
name|'proxy'
op|','
name|'method'
op|')'
op|'('
name|'ctxt'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
name|'mock_method'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
