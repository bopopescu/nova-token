begin_unit
comment|'#    Copyright 2012 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for the conductor service"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'conductor'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'api'
name|'as'
name|'conductor_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'manager'
name|'as'
name|'conductor_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'rpcapi'
name|'as'
name|'conductor_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_IMAGE_REF
name|'FAKE_IMAGE_REF'
op|'='
string|"'fake-image-ref'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTestCase
name|'class'
name|'BaseTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fake_instance
dedent|''
name|'def'
name|'_create_fake_instance'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|','
name|'type_name'
op|'='
string|"'m1.tiny'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
name|'FAKE_IMAGE_REF'
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'launch_time'"
op|']'
op|'='
string|"'10'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'user_id'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'project_id'
newline|'\n'
name|'inst'
op|'['
string|"'host'"
op|']'
op|'='
string|"'fake_host'"
newline|'\n'
name|'type_id'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
name|'type_name'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
name|'type_id'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'memory_mb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'root_gb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'architecture'"
op|']'
op|'='
string|"'x86_64'"
newline|'\n'
name|'inst'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'Linux'"
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorTestCase
dedent|''
dedent|''
name|'class'
name|'ConductorTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor Manager Tests"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_manager'
op|'.'
name|'ConductorManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_do_update
dedent|''
name|'def'
name|'_do_update'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update
dedent|''
name|'def'
name|'test_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance'
op|'('
op|')'
newline|'\n'
name|'new_inst'
op|'='
name|'self'
op|'.'
name|'_do_update'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'new_inst'
op|'['
string|"'vm_state'"
op|']'
op|','
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_invalid_key
dedent|''
name|'def'
name|'test_instance_update_invalid_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): the real DB API call ignores invalid keys'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'KeyError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_do_update'
op|','
string|"'any-uuid'"
op|','
name|'foobar'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorRPCAPITestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ConductorRPCAPITestCase'
op|'('
name|'ConductorTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor RPC API Tests"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorRPCAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorLocalAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorLocalAPITestCase'
op|'('
name|'ConductorTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor LocalAPI Tests"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorLocalAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
nl|'\n'
DECL|member|_do_update
dedent|''
name|'def'
name|'_do_update'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): the public API takes actual keyword arguments,'
nl|'\n'
comment|'# so override the base class here to make the call correctly'
nl|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
op|'**'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorAPITestCase
dedent|''
dedent|''
name|'class'
name|'ConductorAPITestCase'
op|'('
name|'ConductorLocalAPITestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Conductor API Tests"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor_service'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'conductor'"
op|','
name|'manager'
op|'='
string|"'nova.conductor.manager.ConductorManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'conductor_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorImportTest
dedent|''
dedent|''
name|'class'
name|'ConductorImportTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_import_conductor_local
indent|'    '
name|'def'
name|'test_import_conductor_local'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'conductor'
op|'.'
name|'API'
op|'('
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'LocalAPI'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_conductor_rpc
dedent|''
name|'def'
name|'test_import_conductor_rpc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'conductor'
op|'.'
name|'API'
op|'('
op|')'
op|','
nl|'\n'
name|'conductor_api'
op|'.'
name|'API'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
