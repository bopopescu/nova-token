begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'mox'
name|'import'
name|'IgnoreArg'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'service'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
name|'as'
name|'auth_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'max_cores'"
op|','
string|"'nova.scheduler.simple'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'stub_network'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'instances_path'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDriver
name|'class'
name|'TestDriver'
op|'('
name|'driver'
op|'.'
name|'Scheduler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Scheduler Driver for Tests"""'
newline|'\n'
DECL|member|schedule
name|'def'
name|'schedule'
op|'('
name|'context'
op|','
name|'topic'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'fallback_host'"
newline|'\n'
nl|'\n'
DECL|member|schedule_named_method
dedent|''
name|'def'
name|'schedule_named_method'
op|'('
name|'context'
op|','
name|'topic'
op|','
name|'num'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'named_host'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerTestCase
dedent|''
dedent|''
name|'class'
name|'SchedulerTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for scheduler"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_driver'
op|'='
string|"'nova.tests.test_scheduler.TestDriver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fallback
dedent|''
name|'def'
name|'test_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'topic.fallback_host'"
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'noexist'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'num'"
op|':'
number|'7'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'scheduler'
op|'.'
name|'noexist'
op|'('
name|'ctxt'
op|','
string|"'topic'"
op|','
name|'num'
op|'='
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_named_method
dedent|''
name|'def'
name|'test_named_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'topic.named_host'"
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'named_method'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'num'"
op|':'
number|'7'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'scheduler'
op|'.'
name|'named_method'
op|'('
name|'ctxt'
op|','
string|"'topic'"
op|','
name|'num'
op|'='
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resource_host_not_exit
dedent|''
name|'def'
name|'test_show_host_resource_host_not_exit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.has_enough_resource \n        given host does not exists.\n        """'
newline|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'service_get_all_compute_sorted'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'scheduler'
op|'.'
name|'show_host_resource'
op|'('
name|'ctxt'
op|','
name|'dest'
op|')'
newline|'\n'
comment|'# ret should be dict'
nl|'\n'
name|'keys'
op|'='
op|'['
string|"'ret'"
op|','
string|"'msg'"
op|']'
newline|'\n'
name|'c1'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'result'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|'=='
name|'list'
op|'('
name|'set'
op|'('
name|'keys'
op|')'
op|')'
newline|'\n'
name|'c2'
op|'='
name|'not'
name|'result'
op|'['
string|"'ret'"
op|']'
newline|'\n'
name|'c3'
op|'='
name|'result'
op|'['
string|"'msg'"
op|']'
op|'.'
name|'find'
op|'('
string|"'No such Host or not compute node'"
op|')'
op|'<='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
name|'and'
name|'c3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resource_no_project
dedent|''
name|'def'
name|'test_show_host_resource_no_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.show_host_resource \n        no instance stays on the given host\n        """'
newline|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'r0'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'16'
op|','
string|"'memory_mb'"
op|':'
number|'32'
op|','
string|"'local_gb'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'16'
op|','
string|"'memory_mb_used'"
op|':'
number|'32'
op|','
string|"'local_gb_used'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'service_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
name|'dest'
op|'}'
newline|'\n'
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'r0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'service_get_all_compute_sorted'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'('
name|'service_ref'
op|','
number|'0'
op|')'
op|']'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'scheduler'
op|'.'
name|'show_host_resource'
op|'('
name|'ctxt'
op|','
name|'dest'
op|')'
newline|'\n'
comment|'# ret should be dict'
nl|'\n'
name|'keys'
op|'='
op|'['
string|"'ret'"
op|','
string|"'phy_resource'"
op|','
string|"'usage'"
op|']'
newline|'\n'
name|'c1'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'result'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|'=='
name|'list'
op|'('
name|'set'
op|'('
name|'keys'
op|')'
op|')'
newline|'\n'
name|'c2'
op|'='
name|'result'
op|'['
string|"'ret'"
op|']'
newline|'\n'
name|'c3'
op|'='
name|'result'
op|'['
string|"'phy_resource'"
op|']'
op|'=='
name|'r0'
newline|'\n'
name|'c4'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'=='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
name|'and'
name|'c3'
name|'and'
name|'c4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resource_works_correctly
dedent|''
name|'def'
name|'test_show_host_resource_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.show_host_resource \n        to make sure everything finished with no error.\n        """'
newline|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'r0'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'16'
op|','
string|"'memory_mb'"
op|':'
number|'32'
op|','
string|"'local_gb'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'16'
op|','
string|"'memory_mb_used'"
op|':'
number|'32'
op|','
string|"'local_gb_used'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'r1'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'10'
op|','
string|"'memory_mb'"
op|':'
number|'4'
op|','
string|"'local_gb'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'r2'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'10'
op|','
string|"'memory_mb'"
op|':'
number|'20'
op|','
string|"'local_gb'"
op|':'
number|'30'
op|'}'
newline|'\n'
name|'service_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
name|'dest'
op|'}'
newline|'\n'
name|'service_ref'
op|'.'
name|'update'
op|'('
name|'r0'
op|')'
newline|'\n'
name|'instance_ref2'
op|'='
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'project_id'"
op|':'
string|"'p-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'instance_ref2'
op|'.'
name|'update'
op|'('
name|'r1'
op|')'
newline|'\n'
name|'instance_ref3'
op|'='
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'project_id'"
op|':'
string|"'p-02'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'instance_ref3'
op|'.'
name|'update'
op|'('
name|'r2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'service_get_all_compute_sorted'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'('
name|'service_ref'
op|','
number|'0'
op|')'
op|']'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'instance_ref2'
op|','
name|'instance_ref3'
op|']'
op|')'
newline|'\n'
name|'for'
name|'p'
name|'in'
op|'['
string|"'p-01'"
op|','
string|"'p-02'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'db'
op|'.'
name|'instance_get_vcpu_sum_by_host_and_project'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'dest'
op|','
name|'p'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'r2'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'instance_get_memory_sum_by_host_and_project'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'dest'
op|','
name|'p'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'r2'
op|'['
string|"'memory_mb'"
op|']'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'instance_get_disk_sum_by_host_and_project'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'dest'
op|','
name|'p'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'r2'
op|'['
string|"'local_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'scheduler'
op|'.'
name|'show_host_resource'
op|'('
name|'ctxt'
op|','
name|'dest'
op|')'
newline|'\n'
comment|'# ret should be dict'
nl|'\n'
name|'keys'
op|'='
op|'['
string|"'ret'"
op|','
string|"'phy_resource'"
op|','
string|"'usage'"
op|']'
newline|'\n'
name|'c1'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'result'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|'=='
name|'list'
op|'('
name|'set'
op|'('
name|'keys'
op|')'
op|')'
newline|'\n'
name|'c2'
op|'='
name|'result'
op|'['
string|"'ret'"
op|']'
newline|'\n'
name|'c3'
op|'='
name|'result'
op|'['
string|"'phy_resource'"
op|']'
op|'=='
name|'r0'
newline|'\n'
name|'c4'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|'=='
op|'['
string|"'p-01'"
op|','
string|"'p-02'"
op|']'
newline|'\n'
name|'c5'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'['
string|"'p-01'"
op|']'
op|'=='
name|'r2'
newline|'\n'
name|'c6'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'['
string|"'p-02'"
op|']'
op|'=='
name|'r2'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
name|'and'
name|'c3'
name|'and'
name|'c4'
name|'and'
name|'c5'
name|'and'
name|'c6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneSchedulerTestCase
dedent|''
dedent|''
name|'class'
name|'ZoneSchedulerTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for zone scheduler"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ZoneSchedulerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_driver'
op|'='
string|"'nova.scheduler.zone.ZoneScheduler'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_service_model
dedent|''
name|'def'
name|'_create_service_model'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service'
op|'.'
name|'host'
op|'='
name|'kwargs'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'service'
op|'.'
name|'disabled'
op|'='
name|'False'
newline|'\n'
name|'service'
op|'.'
name|'deleted'
op|'='
name|'False'
newline|'\n'
name|'service'
op|'.'
name|'report_count'
op|'='
number|'0'
newline|'\n'
name|'service'
op|'.'
name|'binary'
op|'='
string|"'nova-compute'"
newline|'\n'
name|'service'
op|'.'
name|'topic'
op|'='
string|"'compute'"
newline|'\n'
name|'service'
op|'.'
name|'id'
op|'='
name|'kwargs'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'service'
op|'.'
name|'availability_zone'
op|'='
name|'kwargs'
op|'['
string|"'zone'"
op|']'
newline|'\n'
name|'service'
op|'.'
name|'created_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'return'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|test_with_two_zones
dedent|''
name|'def'
name|'test_with_two_zones'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'service_list'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service_model'
op|'('
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host1'"
op|','
nl|'\n'
name|'zone'
op|'='
string|"'zone1'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_service_model'
op|'('
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host2'"
op|','
nl|'\n'
name|'zone'
op|'='
string|"'zone2'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_service_model'
op|'('
name|'id'
op|'='
number|'3'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host3'"
op|','
nl|'\n'
name|'zone'
op|'='
string|"'zone2'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_service_model'
op|'('
name|'id'
op|'='
number|'4'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host4'"
op|','
nl|'\n'
name|'zone'
op|'='
string|"'zone2'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_service_model'
op|'('
name|'id'
op|'='
number|'5'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host5'"
op|','
nl|'\n'
name|'zone'
op|'='
string|"'zone2'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_get_all_by_topic'"
op|')'
newline|'\n'
name|'arg'
op|'='
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'arg'
op|','
name|'arg'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'service_list'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'compute.host1'"
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-ffffffff'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone1'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'scheduler'
op|'.'
name|'run_instance'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'i-ffffffff'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'zone1'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SimpleDriverTestCase
dedent|''
dedent|''
name|'class'
name|'SimpleDriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for simple driver"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SimpleDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|','
nl|'\n'
name|'max_cores'
op|'='
number|'4'
op|','
nl|'\n'
name|'max_gigabytes'
op|'='
number|'4'
op|','
nl|'\n'
name|'network_manager'
op|'='
string|"'nova.network.manager.FlatManager'"
op|','
nl|'\n'
name|'volume_driver'
op|'='
string|"'nova.volume.driver.FakeISCSIDriver'"
op|','
nl|'\n'
name|'scheduler_driver'
op|'='
string|"'nova.scheduler.simple.SimpleScheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'auth_manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_user'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_project'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_user'
op|'('
name|'self'
op|'.'
name|'user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_project'
op|'('
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance"""'
newline|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'image_id'"
op|']'
op|'='
string|"'ami-test'"
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'user'
op|'.'
name|'id'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'project'
op|'.'
name|'id'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type'"
op|']'
op|'='
string|"'m1.tiny'"
newline|'\n'
name|'inst'
op|'['
string|"'mac_address'"
op|']'
op|'='
name|'utils'
op|'.'
name|'generate_mac'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'inst'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_create_volume
dedent|''
name|'def'
name|'_create_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test volume"""'
newline|'\n'
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'image_id'"
op|']'
op|'='
string|"'ami-test'"
newline|'\n'
name|'vol'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'vol'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'test'"
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_doesnt_report_disabled_hosts_as_up
dedent|''
name|'def'
name|'test_doesnt_report_disabled_hosts_as_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver doesn\'t find hosts before they are enabled"""'
newline|'\n'
comment|'# NOTE(vish): constructing service without create method'
nl|'\n'
comment|'#             because we are going to use it without queue'
nl|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'s2'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host2'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s2'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reports_enabled_hosts_as_up
dedent|''
name|'def'
name|'test_reports_enabled_hosts_as_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver can find the hosts that are up"""'
newline|'\n'
comment|'# NOTE(vish): constructing service without create method'
nl|'\n'
comment|'#             because we are going to use it without queue'
nl|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_instance
dedent|''
name|'def'
name|'test_least_busy_host_gets_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less cores gets the next one"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specific_host_gets_instance
dedent|''
name|'def'
name|'test_specific_host_gets_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures if you set availability_zone it launches on that zone"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host1'"
op|','
name|'host'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wont_sechedule_if_specified_host_is_down
dedent|''
name|'def'
name|'test_wont_sechedule_if_specified_host_is_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'delta'
op|'='
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'FLAGS'
op|'.'
name|'service_down_time'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'past'
op|'='
name|'now'
op|'-'
name|'delta'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'updated_at'"
op|':'
name|'past'
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'driver'
op|'.'
name|'WillNotSchedule'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_will_schedule_on_disabled_host_if_specified
dedent|''
name|'def'
name|'test_will_schedule_on_disabled_host_if_specified'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host1'"
op|','
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_cores
dedent|''
name|'def'
name|'test_too_many_cores'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures we don\'t go over max cores"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'instance_ids1'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance_ids2'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'max_cores'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_ids1'
op|'.'
name|'append'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_ids2'
op|'.'
name|'append'
op|'('
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'driver'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'for'
name|'instance_id'
name|'in'
name|'instance_ids1'
op|':'
newline|'\n'
indent|'            '
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'instance_id'
name|'in'
name|'instance_ids2'
op|':'
newline|'\n'
indent|'            '
name|'compute2'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_volume
dedent|''
name|'def'
name|'test_least_busy_host_gets_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less gigabytes gets the next one"""'
newline|'\n'
name|'volume1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume_id1'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'volume_id2'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id2'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_gigabytes
dedent|''
name|'def'
name|'test_too_many_gigabytes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures we don\'t go over max gigabytes"""'
newline|'\n'
name|'volume1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume_ids1'
op|'='
op|'['
op|']'
newline|'\n'
name|'volume_ids2'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'max_gigabytes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume_id'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume_ids1'
op|'.'
name|'append'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume_ids2'
op|'.'
name|'append'
op|'('
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'volume_id'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'driver'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'volume_ids1'
op|':'
newline|'\n'
indent|'            '
name|'volume1'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'volume_id'
name|'in'
name|'volume_ids2'
op|':'
newline|'\n'
indent|'            '
name|'volume2'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'volume1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_scheduler_live_migraiton_with_volume
dedent|''
name|'def'
name|'test_scheduler_live_migraiton_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        driver.scheduler_live_migration finishes successfully\n        (volumes are attached to instances)\n        This testcase make sure schedule_live_migration\n        changes instance state from \'running\' -> \'migrating\'\n        """'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-00000001'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
comment|"# must be IgnoreArg() because scheduler changes ctxt's memory address"
nl|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_src_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_dest_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_common_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'instance_set_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|','
string|"'migrating'"
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'db'
op|'.'
name|'volume_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'v'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|"'migrating'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
string|"'dest'"
op|':'
name|'dest'
op|'}'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'ctxt'
op|','
name|'topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'live_migration'"
op|','
nl|'\n'
string|'"args"'
op|':'
name|'kwargs'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'live_migration'
op|'('
name|'ctxt'
op|','
name|'topic'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'dest'
op|'='
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_scheduler_live_migraiton_no_volume
dedent|''
name|'def'
name|'test_scheduler_live_migraiton_no_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        driver.scheduler_live_migration finishes successfully\n        (volumes are attached to instances)\n        This testcase make sure schedule_live_migration\n        changes instance state from \'running\' -> \'migrating\'\n        """'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'volumes'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
comment|"# must be IgnoreArg() because scheduler changes ctxt's memory address"
nl|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_src_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_dest_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_common_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'instance_set_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|','
string|"'migrating'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
string|"'dest'"
op|':'
name|'dest'
op|'}'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'ctxt'
op|','
name|'topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'live_migration'"
op|','
nl|'\n'
string|'"args"'
op|':'
name|'kwargs'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'live_migration'
op|'('
name|'ctxt'
op|','
name|'topic'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'dest'
op|'='
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_src_check_instance_not_running
dedent|''
name|'def'
name|'test_live_migraiton_src_check_instance_not_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_src_check. \n        The instance given by instance_id is not running.\n        """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
op|'['
op|']'
op|','
string|"'state_description'"
op|':'
string|"'migrating'"
op|','
nl|'\n'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is not running'"
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_src_check_volume_node_not_alive
dedent|''
name|'def'
name|'test_live_migraiton_src_check_volume_node_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_src_check. \n        Volume node is not alive if any volumes are attached to \n        the given instance.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state_description'"
op|':'
string|"'running'"
op|','
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'volume'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'volume node is not alive'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_src_check_volume_node_not_alive
dedent|''
name|'def'
name|'test_live_migraiton_src_check_volume_node_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_src_check. \n        The testcase make sure src-compute node is alive.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'volumes'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'state_description'"
op|':'
string|"'running'"
op|','
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'compute'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is not alive'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_src_check_works_correctly
dedent|''
name|'def'
name|'test_live_migraiton_src_check_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_src_check. \n        The testcase make sure everything finished with no error.\n        """'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'volumes'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'state_description'"
op|':'
string|"'running'"
op|','
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'compute'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'service_is_up'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'service_is_up'
op|'('
name|'service_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'driver_i'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_dest_check_service_not_exists
dedent|''
name|'def'
name|'test_live_migraiton_dest_check_service_not_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_dst_check. \n        Destination host does not exist.\n        """'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'driver_i'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'does not exists'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_dest_check_service_isnot_compute
dedent|''
name|'def'
name|'test_live_migraiton_dest_check_service_isnot_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_dst_check. \n        Destination host does not provide compute.\n        """'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'api'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'driver_i'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'must be compute node'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_dest_check_service_not_alive
dedent|''
name|'def'
name|'test_live_migraiton_dest_check_service_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_dst_check. \n        Destination host compute service is not alive.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|','
string|"'service_is_up'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'service_is_up'
op|'('
name|'service_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is not alive'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_dest_check_service_same_host
dedent|''
name|'def'
name|'test_live_migraiton_dest_check_service_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_dst_check. \n        Destination host is same as src host.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummydest'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|','
string|"'service_is_up'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'service_is_up'
op|'('
name|'service_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is running now. choose other host'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_dest_check_service_works_correctly
dedent|''
name|'def'
name|'test_live_migraiton_dest_check_service_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_dst_check. \n        The testcase make sure everything finished with no error.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummydest'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|','
string|"'service_is_up'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'service_is_up'
op|'('
name|'service_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|','
string|"'has_enough_resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'has_enough_resource'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is running now. choose other host'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_dest_not_exists
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_dest_not_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        Destination host does not exist.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'does not exists'"
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_orig_not_exists
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_orig_not_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        Original host(an instance launched on) does not exist.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'launched_on'"
op|':'
string|"'h1'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'host'"
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'launched_on'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'where instance was launched at) does not exists'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_different_hypervisor
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_different_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        Original host and dest host has different hypervisor type.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'launched_on'"
op|':'
string|"'h1'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_type'"
op|','
string|"'kvm'"
op|')'
newline|'\n'
name|'service_ref2'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'2'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_type'"
op|','
string|"'xen'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'launched_on'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Different hypervisor type'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_different_version
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_different_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        Original host and dest host has different hypervisor version.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'launched_on'"
op|':'
string|"'h1'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12000'
op|')'
newline|'\n'
name|'service_ref2'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'2'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12001'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'launched_on'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Older hypervisor version'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_checking_cpuinfo_fail
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_checking_cpuinfo_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        Original host and dest host has different hypervisor version.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'launched_on'"
op|':'
string|"'h1'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12000'
op|')'
newline|'\n'
name|'service_ref2'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'2'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12000'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'cpuinfo'"
op|','
string|"'<cpu>info</cpu>'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'launched_on'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref2'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'compare_cpu'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'cpu_info'"
op|':'
name|'service_ref2'
op|'['
string|"'cpu_info'"
op|']'
op|'}'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
string|"'doesnt have compatibility to'"
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rpc'
op|'.'
name|'RemoteError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'doesnt have compatibility to'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migraiton_common_check_service_works_correctly
dedent|''
name|'def'
name|'test_live_migraiton_common_check_service_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver._live_migration_common_check. \n        The testcase make sure everything finished with no error.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'launched_on'"
op|':'
string|"'h1'"
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'1'
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'topic'"
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'service_ref'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12000'
op|')'
newline|'\n'
name|'service_ref2'
op|'='
name|'models'
op|'.'
name|'Service'
op|'('
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'id'"
op|','
number|'2'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'hypervisor_version'"
op|','
number|'12000'
op|')'
newline|'\n'
name|'service_ref2'
op|'.'
name|'__setitem__'
op|'('
string|"'cpuinfo'"
op|','
string|"'<cpu>info</cpu>'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'launched_on'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref2'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'compare_cpu'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'cpu_info'"
op|':'
name|'service_ref2'
op|'['
string|"'cpu_info'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_has_enough_resource_lack_resource_memory
dedent|''
name|'def'
name|'test_has_enough_resource_lack_resource_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.has_enough_resource. \n        Lack of memory_mb.(boundary check)\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'service_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'memory_mb'"
op|':'
number|'32'
op|','
string|"'memory_mb_used'"
op|':'
number|'12'
op|','
string|"'local_gb'"
op|':'
number|'100'
op|'}'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'5'
op|','
string|"'memory_mb'"
op|':'
number|'20'
op|','
string|"'local_gb'"
op|':'
number|'10'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'has_enough_resource'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotEmpty'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'is not capable to migrate'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_has_enough_resource_works_correctly
dedent|''
name|'def'
name|'test_has_enough_resource_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.has_enough_resource \n        to make sure everything finished with no error.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'service_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'memory_mb'"
op|':'
number|'120'
op|','
string|"'memory_mb_used'"
op|':'
number|'32'
op|'}'
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'5'
op|','
string|"'memory_mb'"
op|':'
number|'8'
op|','
string|"'local_gb'"
op|':'
number|'10'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'db'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'dest'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'service_ref'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'has_enough_resource'
op|'('
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mounted_on_same_shared_storage_cannot_make_tmpfile
dedent|''
name|'def'
name|'test_mounted_on_same_shared_storage_cannot_make_tmpfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.mounted_on_same_shared_storage\n        checks log message when dest host cannot make tmpfile.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'fpath'
op|'='
string|"'/test/20110127120000'"
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'ctxt'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'mktmpfile'"
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
string|"''"
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|'.'
name|'logging'
op|','
string|"'error'"
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot create tmpfile at %s to confirm shared storage."'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'logging'
op|'.'
name|'error'
op|'('
name|'msg'
op|'%'
name|'FLAGS'
op|'.'
name|'instances_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mounted_on_same_shared_storage_cannot_comfirm_tmpfile
dedent|''
name|'def'
name|'test_mounted_on_same_shared_storage_cannot_comfirm_tmpfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.mounted_on_same_shared_storage\n        checks log message when src host cannot comfirm tmpfile.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'fpath'
op|'='
string|"'/test/20110127120000'"
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'ctxt'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'mktmpfile'"
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fpath'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'ctxt'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'confirm_tmpfile'"
op|','
string|'"args"'
op|':'
op|'{'
string|"'path'"
op|':'
name|'fpath'
op|'}'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
string|"''"
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|'.'
name|'logging'
op|','
string|"'error'"
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot create tmpfile at %s to confirm shared storage."'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'logging'
op|'.'
name|'error'
op|'('
name|'msg'
op|'%'
name|'FLAGS'
op|'.'
name|'instances_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'driver_i'
op|'.'
name|'mounted_on_same_shared_storage'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_mounted_on_same_shared_storage_works_correctly
dedent|''
name|'def'
name|'test_mounted_on_same_shared_storage_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A testcase of driver.mounted_on_same_shared_storage\n        to make sure everything finished with no error.\n        """'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'fpath'
op|'='
string|"'/test/20110127120000'"
newline|'\n'
name|'i_ref'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'hostname'"
op|':'
string|"'i-01'"
op|','
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'mktmpfile'"
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fpath'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'confirm_tmpfile'"
op|','
string|'"args"'
op|':'
op|'{'
string|"'path'"
op|':'
name|'fpath'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
op|'=='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
