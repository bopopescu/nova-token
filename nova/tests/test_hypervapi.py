begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#  Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest suite for the Hyper-V driver and related APIs.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'platform'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'config'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'hyperv'
name|'import'
name|'basetestcase'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'hyperv'
name|'import'
name|'db_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'hyperv'
name|'import'
name|'hypervutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'hyperv'
name|'import'
name|'mockproxy'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
name|'as'
name|'fake_image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'driver'
name|'as'
name|'driver_hyperv'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'config'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVAPITestCase
name|'class'
name|'HyperVAPITestCase'
op|'('
name|'basetestcase'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Hyper-V driver calls."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HyperVAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'_project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_image_metadata'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_dest_server'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_fetched_image'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_post_method_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_recover_method_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|'='
string|"'192.168.1.112:3260'"
newline|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|'='
string|"'10958016-e196-42e3-9e7f-5d8927ae3099'"
newline|'\n'
name|'self'
op|'.'
name|'_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'_user_id'
op|','
name|'self'
op|'.'
name|'_project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_stubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
string|"r'C:\\Hyper-V\\test\\instances'"
op|','
nl|'\n'
name|'vswitch_name'
op|'='
string|"'external'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_hypervutils'
op|'='
name|'hypervutils'
op|'.'
name|'HyperVUtils'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_stubs
dedent|''
name|'def'
name|'_setup_stubs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake_image'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fetched_image'
op|'='
name|'target'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'target'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'create_vhd'
op|'('
name|'target'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'fake_fetch'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_remote_image_service
name|'def'
name|'fake_get_remote_image_service'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
DECL|class|FakeGlanceImageService
indent|'            '
name|'class'
name|'FakeGlanceImageService'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|update
indent|'                '
name|'def'
name|'update'
op|'('
name|'self_fake'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'image_metadata'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
string|'"Simulated update failure"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_image_metadata'
op|'='
name|'image_metadata'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'('
name|'FakeGlanceImageService'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'glance'
op|','
string|"'get_remote_image_service'"
op|','
nl|'\n'
name|'fake_get_remote_image_service'
op|')'
newline|'\n'
nl|'\n'
comment|'# Modules to mock'
nl|'\n'
name|'modules_to_mock'
op|'='
op|'['
nl|'\n'
string|"'wmi'"
op|','
nl|'\n'
string|"'os'"
op|','
nl|'\n'
string|"'shutil'"
op|','
nl|'\n'
string|"'uuid'"
op|','
nl|'\n'
string|"'time'"
op|','
nl|'\n'
string|"'subprocess'"
op|','
nl|'\n'
string|"'multiprocessing'"
op|','
nl|'\n'
string|"'_winreg'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
comment|'# Modules in which the mocks are going to be injected'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'baseops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'hostops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'livemigrationops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'snapshotops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeutils'
newline|'\n'
nl|'\n'
name|'modules_to_test'
op|'='
op|'['
nl|'\n'
name|'driver_hyperv'
op|','
nl|'\n'
name|'baseops'
op|','
nl|'\n'
name|'hostops'
op|','
nl|'\n'
name|'vmops'
op|','
nl|'\n'
name|'vmutils'
op|','
nl|'\n'
name|'volumeops'
op|','
nl|'\n'
name|'volumeutils'
op|','
nl|'\n'
name|'snapshotops'
op|','
nl|'\n'
name|'livemigrationops'
op|','
nl|'\n'
name|'hypervutils'
op|','
nl|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
name|'__name__'
op|']'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_inject_mocks_in_modules'
op|'('
name|'modules_to_mock'
op|','
name|'modules_to_test'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'snapshotops'
op|'.'
name|'wmi'
op|','
name|'mockproxy'
op|'.'
name|'Mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'ioutils'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
DECL|function|fake_open
name|'def'
name|'fake_open'
op|'('
name|'name'
op|','
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|'"fake file content"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'ioutils'
op|','
string|"'open'"
op|','
name|'fake_open'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'_instance_data'
name|'and'
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'remove_vm'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'_dest_server'
name|'and'
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'remote_vm_exists'
op|'('
name|'self'
op|'.'
name|'_dest_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'remove_remote_vm'
op|'('
name|'self'
op|'.'
name|'_dest_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'logout_iscsi_volume_sessions'
op|'('
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'fake_image'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'super'
op|'('
name|'HyperVAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_resource
dedent|''
dedent|''
name|'def'
name|'test_get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dic'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_available_resource'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dic'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|','
name|'platform'
op|'.'
name|'node'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_stats
dedent|''
name|'def'
name|'test_get_host_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dic'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_host_stats'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dic'
op|'['
string|"'disk_total'"
op|']'
op|','
nl|'\n'
name|'dic'
op|'['
string|"'disk_used'"
op|']'
op|'+'
name|'dic'
op|'['
string|"'disk_available'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dic'
op|'['
string|"'host_memory_total'"
op|']'
op|','
nl|'\n'
name|'dic'
op|'['
string|"'host_memory_overhead'"
op|']'
op|'+'
name|'dic'
op|'['
string|"'host_memory_free'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'num_vms'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_count'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
name|'num_vms'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info
dedent|''
name|'def'
name|'test_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|'"state"'
op|']'
op|','
name|'str'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_cow_image
dedent|''
name|'def'
name|'test_spawn_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_cow_image
dedent|''
name|'def'
name|'test_spawn_no_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_vswitch_exception
dedent|''
name|'def'
name|'test_spawn_no_vswitch_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Set flag to a non existing vswitch'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'vswitch_name'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_spawn_instance'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_vm_state_change
dedent|''
name|'def'
name|'_test_vm_state_change'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'from_state'
op|','
name|'to_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
name|'if'
name|'from_state'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'set_vm_state'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|','
nl|'\n'
name|'from_state'
op|')'
newline|'\n'
dedent|''
name|'action'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'vmstate'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_state'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vmstate'
op|','
name|'to_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pause'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause_already_paused
dedent|''
name|'def'
name|'test_pause_already_paused'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pause'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause_already_running
dedent|''
name|'def'
name|'test_unpause_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'unpause'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'suspend'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_already_suspended
dedent|''
name|'def'
name|'test_suspend_already_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_already_running
dedent|''
name|'def'
name|'test_resume_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'resume'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off
dedent|''
name|'def'
name|'test_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_off'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off_already_powered_off
dedent|''
name|'def'
name|'test_power_off_already_powered_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on
dedent|''
name|'def'
name|'test_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_on'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on_already_running
dedent|''
name|'def'
name|'test_power_on_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_on'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'network_info'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'vmstate'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_state'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vmstate'
op|','
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
op|'('
name|'vhd_paths'
op|','
name|'_'
op|')'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_disks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'for'
name|'vhd_path'
name|'in'
name|'vhd_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'vhd_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration
dedent|''
dedent|''
name|'def'
name|'test_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'limit_cpu_features'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# Existing server'
nl|'\n'
name|'self'
op|'.'
name|'_dest_server'
op|'='
string|'"HV12RCTest1"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_live_migration'
op|'('
name|'self'
op|'.'
name|'_dest_server'
op|')'
newline|'\n'
nl|'\n'
name|'instance_name'
op|'='
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
name|'instance_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'remote_vm_exists'
op|'('
name|'self'
op|'.'
name|'_dest_server'
op|','
nl|'\n'
name|'instance_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_post_method_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_recover_method_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_with_target_failure
dedent|''
name|'def'
name|'test_live_migration_with_target_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'limit_cpu_features'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'dest_server'
op|'='
string|'"nonexistingserver"'
newline|'\n'
nl|'\n'
name|'exception_raised'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_live_migration'
op|'('
name|'dest_server'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'exception_raised'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# Cannot use assertRaises with pythoncom.com_error on Linux'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'exception_raised'
op|')'
newline|'\n'
nl|'\n'
name|'instance_name'
op|'='
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
name|'instance_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_post_method_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_recover_method_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_live_migration
dedent|''
name|'def'
name|'_live_migration'
op|'('
name|'self'
op|','
name|'dest_server'
op|')'
op|':'
newline|'\n'
DECL|function|fake_post_method
indent|'        '
name|'def'
name|'fake_post_method'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest'
op|','
name|'block_migration'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_post_method_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_recover_method
dedent|''
name|'def'
name|'fake_recover_method'
op|'('
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest'
op|','
name|'block_migration'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_recover_method_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
nl|'\n'
name|'dest_server'
op|','
name|'fake_post_method'
op|','
name|'fake_recover_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_cow_image
dedent|''
name|'def'
name|'test_pre_live_migration_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_pre_live_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_no_cow_image
dedent|''
name|'def'
name|'test_pre_live_migration_no_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_pre_live_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_pre_live_migration
dedent|''
name|'def'
name|'_test_pre_live_migration'
op|'('
name|'self'
op|','
name|'cow'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'cow'
op|')'
newline|'\n'
nl|'\n'
name|'instance_name'
op|'='
string|"'openstack_unit_test_vm_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance_data'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_instance_data'
op|'('
name|'instance_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_project_id'
op|','
name|'self'
op|'.'
name|'_user_id'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance_data'
op|','
nl|'\n'
name|'block_device_info'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'self'
op|'.'
name|'_fetched_image'
name|'is'
name|'None'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_fetched_image'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_with_update_failure
dedent|''
dedent|''
name|'def'
name|'test_snapshot_with_update_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|'='
name|'True'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test_snapshot_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert VM snapshots have been removed'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_snapshots_count'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_name'
op|'='
string|"'test_snapshot_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_image_metadata'
name|'and'
nl|'\n'
string|'"disk_format"'
name|'in'
name|'self'
op|'.'
name|'_image_metadata'
name|'and'
nl|'\n'
name|'self'
op|'.'
name|'_image_metadata'
op|'['
string|'"disk_format"'
op|']'
op|'=='
string|'"vhd"'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert VM snapshots have been removed'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_snapshots_count'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_instance
dedent|''
name|'def'
name|'_spawn_instance'
op|'('
name|'self'
op|','
name|'cow'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'cow'
op|')'
newline|'\n'
nl|'\n'
name|'instance_name'
op|'='
string|"'openstack_unit_test_vm_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_instance_data'
op|'('
name|'instance_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_project_id'
op|','
name|'self'
op|'.'
name|'_user_id'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_image_data'
op|'('
name|'self'
op|'.'
name|'_project_id'
op|','
name|'self'
op|'.'
name|'_user_id'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_spawn_instance
dedent|''
name|'def'
name|'_test_spawn_instance'
op|'('
name|'self'
op|','
name|'cow'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'cow'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'vm_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'vmstate'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_state'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vmstate'
op|','
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'vhd_paths'
op|','
name|'_'
op|')'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_disks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'vhd_paths'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'parent_path'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vhd_parent_path'
op|'('
name|'vhd_paths'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'parent_path'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'_fetched_image'
op|','
name|'parent_path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'parent_path'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'_fetched_image'
op|','
name|'vhd_paths'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_attach_volume
dedent|''
dedent|''
name|'def'
name|'_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_attach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'_'
op|','
name|'volumes_paths'
op|')'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_disks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'volumes_paths'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'sessions_exist'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'iscsi_volume_sessions_exist'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sessions_exist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume
dedent|''
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_attach_volume'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'_'
op|','
name|'volumes_paths'
op|')'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_disks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'volumes_paths'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'sessions_exist'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'iscsi_volume_sessions_exist'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'sessions_exist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_from_volume
dedent|''
name|'def'
name|'test_boot_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'False'
op|','
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'_'
op|','
name|'volumes_paths'
op|')'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'get_vm_disks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'volumes_paths'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'sessions_exist'
op|'='
name|'self'
op|'.'
name|'_hypervutils'
op|'.'
name|'iscsi_volume_sessions_exist'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sessions_exist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume_with_target_connection_failure
dedent|''
name|'def'
name|'test_attach_volume_with_target_connection_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'nonexistingtarget:3260'"
newline|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
name|'target'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'connection_info'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|'"name"'
op|']'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
