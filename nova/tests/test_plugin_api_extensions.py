begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'pkg_resources'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'extensions'
name|'as'
name|'computeextensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'plugin'
name|'import'
name|'plugin'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'plugin'
name|'import'
name|'pluginmanager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubController
name|'class'
name|'StubController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|i_am_the_stub
indent|'    '
name|'def'
name|'i_am_the_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubControllerExtension
dedent|''
dedent|''
name|'class'
name|'StubControllerExtension'
op|'('
name|'extensions'
op|'.'
name|'ExtensionDescriptor'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This is a docstring.  We need it."""'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
string|"'stubextension'"
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|"'stubby'"
newline|'\n'
nl|'\n'
DECL|member|get_resources
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
op|'['
op|']'
newline|'\n'
name|'res'
op|'='
name|'extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'testme'"
op|','
nl|'\n'
name|'StubController'
op|'('
op|')'
op|')'
newline|'\n'
name|'resources'
op|'.'
name|'append'
op|'('
name|'res'
op|')'
newline|'\n'
name|'return'
name|'resources'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|service_list
dedent|''
dedent|''
name|'service_list'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestPluginClass
name|'class'
name|'TestPluginClass'
op|'('
name|'plugin'
op|'.'
name|'Plugin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestPluginClass'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'service_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_api_extension_descriptor'
op|'('
name|'StubControllerExtension'
op|')'
newline|'\n'
name|'service_list'
op|'.'
name|'append'
op|'('
name|'service_name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockEntrypoint
dedent|''
dedent|''
name|'class'
name|'MockEntrypoint'
op|'('
name|'pkg_resources'
op|'.'
name|'EntryPoint'
op|')'
op|':'
newline|'\n'
DECL|member|load
indent|'    '
name|'def'
name|'load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'TestPluginClass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|APITestCase
dedent|''
dedent|''
name|'class'
name|'APITestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for the plugin api extension interface"""'
newline|'\n'
DECL|member|test_add_extension
name|'def'
name|'test_add_extension'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|mock_load
indent|'        '
name|'def'
name|'mock_load'
op|'('
name|'_s'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'TestPluginClass'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_iter_entry_points
dedent|''
name|'def'
name|'mock_iter_entry_points'
op|'('
name|'_t'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'MockEntrypoint'
op|'('
string|'"fake"'
op|','
string|'"fake"'
op|','
op|'['
string|'"fake"'
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pkg_resources'
op|','
string|"'iter_entry_points'"
op|','
nl|'\n'
name|'mock_iter_entry_points'
op|')'
newline|'\n'
name|'global'
name|'service_list'
newline|'\n'
name|'service_list'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Marking out the default extension paths makes this test MUCH faster.'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_extension'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_volume_extension'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'found'
op|'='
name|'False'
newline|'\n'
name|'mgr'
op|'='
name|'computeextensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'for'
name|'res'
name|'in'
name|'mgr'
op|'.'
name|'get_resources'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# We have to use this weird 'dir' check because"
nl|'\n'
comment|'#  the plugin framework muddies up the classname'
nl|'\n'
comment|"#  such that 'isinstance' doesn't work right."
nl|'\n'
indent|'            '
name|'if'
string|"'i_am_the_stub'"
name|'in'
name|'dir'
op|'('
name|'res'
op|'.'
name|'controller'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'service_list'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'service_list'
op|'['
number|'0'
op|']'
op|','
string|"'compute-extensions'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
