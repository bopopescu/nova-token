begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests for Volume Code.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'cStringIO'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'notifier'
name|'import'
name|'api'
name|'as'
name|'notifier_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'notifier'
name|'import'
name|'test_notifier'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
newline|'\n'
nl|'\n'
DECL|variable|QUOTAS
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeTestCase
name|'class'
name|'VolumeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test Case for volumes."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'vol_tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.fake.FakeDriver'"
op|','
nl|'\n'
name|'volumes_dir'
op|'='
name|'vol_tmpdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'flags'
op|'.'
name|'FLAGS'
op|','
string|"'notification_driver'"
op|','
nl|'\n'
op|'['
string|"'nova.openstack.common.notifier.test_notifier'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'FLAGS'
op|'.'
name|'volumes_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'notifier_api'
op|'.'
name|'_reset_drivers'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'VolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_create_volume
name|'def'
name|'_create_volume'
op|'('
name|'size'
op|'='
number|'0'
op|','
name|'snapshot_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a volume object."""'
newline|'\n'
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
name|'size'
newline|'\n'
name|'vol'
op|'['
string|"'snapshot_id'"
op|']'
op|'='
name|'snapshot_id'
newline|'\n'
name|'vol'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'FLAGS'
op|'.'
name|'storage_availability_zone'
newline|'\n'
name|'vol'
op|'['
string|"'status'"
op|']'
op|'='
string|'"creating"'
newline|'\n'
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|'"detached"'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_uuid_mapping
dedent|''
name|'def'
name|'test_ec2_uuid_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
string|"'aaaaaaaa-bbbb-bbbb-bbbb-aaaaaaaaaaaa'"
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'ec2_vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'aaaaaaaa-bbbb-bbbb-bbbb-aaaaaaaaaaaa'"
op|','
nl|'\n'
name|'db'
op|'.'
name|'get_volume_uuid_by_ec2_id'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
number|'5'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ec2_vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
string|"'aaaaaaaa-bbbb-bbbb-bbbb-aaaaaaaaaaaa'"
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'ec2_vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ec2_vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
string|"'aaaaaaaa-bbbb-bbbb-bbbb-aaaaaaaaazzz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'ec2_vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_delete_volume
dedent|''
name|'def'
name|'test_create_delete_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume can be created and deleted."""'
newline|'\n'
comment|'# Need to stub out reserve, commit, and rollback'
nl|'\n'
DECL|function|fake_reserve
name|'def'
name|'fake_reserve'
op|'('
name|'context'
op|','
name|'expire'
op|'='
name|'None'
op|','
op|'**'
name|'deltas'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|'"RESERVATION"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_commit
dedent|''
name|'def'
name|'fake_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_rollback
dedent|''
name|'def'
name|'fake_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"reserve"'
op|','
name|'fake_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"commit"'
op|','
name|'fake_commit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"rollback"'
op|','
name|'fake_rollback'
op|')'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_id'
op|','
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'volume_id'
op|')'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'volume_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_over_quota
dedent|''
name|'def'
name|'_do_test_create_over_quota'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume creation over quota."""'
newline|'\n'
nl|'\n'
DECL|function|fake_reserve
name|'def'
name|'fake_reserve'
op|'('
name|'context'
op|','
op|'**'
name|'deltas'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'overs'
op|'='
op|'['
name|'resource'
op|']'
op|','
nl|'\n'
name|'quotas'
op|'='
name|'dict'
op|'('
name|'gigabytes'
op|'='
number|'1000'
op|','
name|'volumes'
op|'='
number|'10'
op|')'
op|','
nl|'\n'
name|'usages'
op|'='
name|'dict'
op|'('
name|'gigabytes'
op|'='
name|'dict'
op|'('
name|'reserved'
op|'='
number|'1'
op|','
name|'in_use'
op|'='
number|'999'
op|')'
op|','
nl|'\n'
name|'volumes'
op|'='
name|'dict'
op|'('
name|'reserved'
op|'='
number|'1'
op|','
name|'in_use'
op|'='
number|'9'
op|')'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_commit
dedent|''
name|'def'
name|'fake_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'should not commit over quota'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|"'reserve'"
op|','
name|'fake_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|"'commit'"
op|','
name|'fake_commit'
op|')'
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected'
op|','
nl|'\n'
name|'volume_api'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
number|'2'
op|','
nl|'\n'
string|"'name'"
op|','
nl|'\n'
string|"'description'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volumes_over_quota
dedent|''
name|'def'
name|'test_create_volumes_over_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_create_over_quota'
op|'('
string|"'volumes'"
op|','
nl|'\n'
name|'exception'
op|'.'
name|'VolumeLimitExceeded'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_gigabytes_over_quota
dedent|''
name|'def'
name|'test_create_gigabytes_over_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_create_over_quota'
op|'('
string|"'gigabytes'"
op|','
nl|'\n'
name|'exception'
op|'.'
name|'VolumeSizeTooLarge'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_busy_volume
dedent|''
name|'def'
name|'test_delete_busy_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume survives deletion if driver reports it as busy."""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'delete_volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'delete_volume'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'VolumeIsBusy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'res'
op|')'
newline|'\n'
name|'volume_ref'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_id'
op|','
name|'volume_ref'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"available"'
op|','
name|'volume_ref'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_snapshot
dedent|''
name|'def'
name|'test_create_volume_from_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume can be created from a snapshot."""'
newline|'\n'
name|'volume_src'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_src'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'volume_src'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_src'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'snapshot_id'
op|')'
newline|'\n'
name|'volume_dst'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
number|'0'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_dst'
op|'['
string|"'id'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_dst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'volume_get'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'volume_dst'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot_id'
op|','
name|'db'
op|'.'
name|'volume_get'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'volume_dst'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_dst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_src'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_big_volume
dedent|''
name|'def'
name|'test_too_big_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure failure if a too large of a volume is requested."""'
newline|'\n'
comment|'# FIXME(vish): validation needs to move into the data layer in'
nl|'\n'
comment|'#              volume_create'
nl|'\n'
name|'return'
name|'True'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
string|"'1001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should have thrown TypeError"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_volumes
dedent|''
dedent|''
name|'def'
name|'test_too_many_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that NoMoreTargets is raised when we run out of volumes."""'
newline|'\n'
name|'vols'
op|'='
op|'['
op|']'
newline|'\n'
name|'total_slots'
op|'='
name|'FLAGS'
op|'.'
name|'iscsi_num_targets'
newline|'\n'
name|'for'
name|'_index'
name|'in'
name|'xrange'
op|'('
name|'total_slots'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'vols'
op|'.'
name|'append'
op|'('
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'db'
op|'.'
name|'NoMoreTargets'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_attach_detach_volume
dedent|''
dedent|''
name|'def'
name|'test_run_attach_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure volume can be attached and detached from instance."""'
newline|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'image_id'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'launch_time'"
op|']'
op|'='
string|"'10'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
string|"'2'"
comment|'# m1.tiny'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|'"/dev/sdf"'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'fake_tests'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_attached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'mountpoint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'fake_tests'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_detached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'detach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"available"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'volume_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_concurrent_volumes_get_different_targets
dedent|''
name|'def'
name|'test_concurrent_volumes_get_different_targets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure multiple concurrent volumes get different targets."""'
newline|'\n'
name|'volume_ids'
op|'='
op|'['
op|']'
newline|'\n'
name|'targets'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_check
name|'def'
name|'_check'
op|'('
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Make sure targets aren\'t duplicated."""'
newline|'\n'
name|'volume_ids'
op|'.'
name|'append'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'iscsi_target'
op|'='
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'admin_context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'iscsi_target'
name|'not'
name|'in'
name|'targets'
op|')'
newline|'\n'
name|'targets'
op|'.'
name|'append'
op|'('
name|'iscsi_target'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Target %s allocated"'
op|')'
op|','
name|'iscsi_target'
op|')'
newline|'\n'
dedent|''
name|'total_slots'
op|'='
name|'FLAGS'
op|'.'
name|'iscsi_num_targets'
newline|'\n'
name|'for'
name|'_index'
name|'in'
name|'xrange'
op|'('
name|'total_slots'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'_check'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'volume_id'
name|'in'
name|'volume_ids'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_node
dedent|''
dedent|''
name|'def'
name|'test_multi_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# TODO(termie): Figure out how to test with two nodes,'
nl|'\n'
comment|'# each of them having a different FLAG for storage_node'
nl|'\n'
comment|'# This will allow us to test cross-node interactions'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_create_snapshot
name|'def'
name|'_create_snapshot'
op|'('
name|'volume_id'
op|','
name|'size'
op|'='
string|"'0'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a snapshot object."""'
newline|'\n'
name|'snap'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'snap'
op|'['
string|"'volume_size'"
op|']'
op|'='
name|'size'
newline|'\n'
name|'snap'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'snap'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'snap'
op|'['
string|"'volume_id'"
op|']'
op|'='
name|'volume_id'
newline|'\n'
name|'snap'
op|'['
string|"'status'"
op|']'
op|'='
string|'"creating"'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'snap'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_create_delete_snapshot
dedent|''
name|'def'
name|'test_create_delete_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot can be created and deleted."""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot_id'
op|','
nl|'\n'
name|'db'
op|'.'
name|'snapshot_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'snapshot_id'
op|')'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'snapshot_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cant_delete_volume_with_snapshots
dedent|''
name|'def'
name|'test_cant_delete_volume_with_snapshots'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot can be created and deleted."""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot_id'
op|','
nl|'\n'
name|'db'
op|'.'
name|'snapshot_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'snapshot_id'
op|')'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'volume'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
name|'volume'
op|'['
string|"'host'"
op|']'
op|'='
string|"'fakehost'"
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'volume_api'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_can_delete_errored_snapshot
dedent|''
name|'def'
name|'test_can_delete_errored_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot can be created and deleted."""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'db'
op|'.'
name|'snapshot_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'badstatus'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'volume_api'
op|'.'
name|'delete_snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'error'"
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot_force
dedent|''
name|'def'
name|'test_create_snapshot_force'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot in use can be created forcibly."""'
newline|'\n'
nl|'\n'
DECL|function|fake_cast
name|'def'
name|'fake_cast'
op|'('
name|'ctxt'
op|','
name|'topic'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'fake_cast'
op|')'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_attached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
string|"'/dev/sda1'"
op|')'
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'volume'
op|'='
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'volume_api'
op|'.'
name|'create_snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|','
nl|'\n'
string|"'fake_name'"
op|','
string|"'fake_description'"
op|')'
newline|'\n'
name|'snapshot_ref'
op|'='
name|'volume_api'
op|'.'
name|'create_snapshot_force'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume'
op|','
nl|'\n'
string|"'fake_name'"
op|','
nl|'\n'
string|"'fake_description'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_busy_snapshot
dedent|''
name|'def'
name|'test_delete_busy_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot can be created and deleted."""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'delete_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'delete_snapshot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'SnapshotIsBusy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'snapshot_ref'
op|'='
name|'db'
op|'.'
name|'snapshot_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot_id'
op|','
name|'snapshot_ref'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"available"'
op|','
name|'snapshot_ref'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_usage_notification
dedent|''
name|'def'
name|'test_create_volume_usage_notification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure create volume generates appropriate usage notification"""'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'event_type'"
op|']'
op|','
string|"'volume.create.start'"
op|')'
newline|'\n'
name|'payload'
op|'='
name|'msg'
op|'['
string|"'payload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'status'"
op|']'
op|','
string|"'creating'"
op|')'
newline|'\n'
name|'msg'
op|'='
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'priority'"
op|']'
op|','
string|"'INFO'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'event_type'"
op|']'
op|','
string|"'volume.create.end'"
op|')'
newline|'\n'
name|'payload'
op|'='
name|'msg'
op|'['
string|"'payload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'tenant_id'"
op|']'
op|','
name|'volume'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'user_id'"
op|']'
op|','
name|'volume'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'volume_id'"
op|']'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'size'"
op|']'
op|','
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'display_name'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'snapshot_id'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'launched_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'created_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_volume_with_size
dedent|''
name|'def'
name|'_do_test_create_volume_with_size'
op|'('
name|'self'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
DECL|function|fake_reserve
indent|'        '
name|'def'
name|'fake_reserve'
op|'('
name|'context'
op|','
name|'expire'
op|'='
name|'None'
op|','
op|'**'
name|'deltas'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|'"RESERVATION"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_commit
dedent|''
name|'def'
name|'fake_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_rollback
dedent|''
name|'def'
name|'fake_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"reserve"'
op|','
name|'fake_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"commit"'
op|','
name|'fake_commit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"rollback"'
op|','
name|'fake_rollback'
op|')'
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
name|'volume_api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|','
nl|'\n'
string|"'name'"
op|','
nl|'\n'
string|"'description'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|','
name|'int'
op|'('
name|'size'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_int_size
dedent|''
name|'def'
name|'test_create_volume_int_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume creation with int size."""'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_volume_with_size'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_string_size
dedent|''
name|'def'
name|'test_create_volume_string_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test volume creation with string size."""'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_volume_with_size'
op|'('
string|"'2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_with_bad_size
dedent|''
name|'def'
name|'test_create_volume_with_bad_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_reserve
indent|'        '
name|'def'
name|'fake_reserve'
op|'('
name|'context'
op|','
name|'expire'
op|'='
name|'None'
op|','
op|'**'
name|'deltas'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|'"RESERVATION"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_commit
dedent|''
name|'def'
name|'fake_commit'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_rollback
dedent|''
name|'def'
name|'fake_rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"reserve"'
op|','
name|'fake_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"commit"'
op|','
name|'fake_commit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'QUOTAS'
op|','
string|'"rollback"'
op|','
name|'fake_rollback'
op|')'
newline|'\n'
nl|'\n'
name|'volume_api'
op|'='
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
nl|'\n'
name|'volume_api'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'2Gb'"
op|','
nl|'\n'
string|"'name'"
op|','
nl|'\n'
string|"'description'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DriverTestCase
dedent|''
dedent|''
name|'class'
name|'DriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base Test class for Drivers."""'
newline|'\n'
DECL|variable|driver_name
name|'driver_name'
op|'='
string|'"nova.volume.driver.FakeBaseDriver"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'vol_tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'volume_driver'
op|'='
name|'self'
op|'.'
name|'driver_name'
op|','
nl|'\n'
name|'volumes_dir'
op|'='
name|'vol_tmpdir'
op|','
nl|'\n'
name|'logging_default_format_string'
op|'='
string|'"%(message)s"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'='
string|'""'
newline|'\n'
nl|'\n'
DECL|function|_fake_execute
name|'def'
name|'_fake_execute'
op|'('
name|'_command'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Fake _execute."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'output'
op|','
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'set_execute'
op|'('
name|'_fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'='
name|'cStringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logger'
op|'.'
name|'addHandler'
op|'('
name|'logging'
op|'.'
name|'logging'
op|'.'
name|'StreamHandler'
op|'('
name|'self'
op|'.'
name|'stream'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'FLAGS'
op|'.'
name|'volumes_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'super'
op|'('
name|'DriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_attach_volume
dedent|''
name|'def'
name|'_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach volumes to an instance. This function also sets\n           a fake log message."""'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|_detach_volume
dedent|''
name|'def'
name|'_detach_volume'
op|'('
name|'self'
op|','
name|'volume_id_list'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detach volumes from an instance."""'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'volume_id_list'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_detached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeDriverTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'VolumeDriverTestCase'
op|'('
name|'DriverTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for VolumeDriver"""'
newline|'\n'
DECL|variable|driver_name
name|'driver_name'
op|'='
string|'"nova.volume.driver.VolumeDriver"'
newline|'\n'
nl|'\n'
DECL|member|test_delete_busy_volume
name|'def'
name|'test_delete_busy_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test deleting a busy volume."""'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_volume_not_present'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_delete_volume'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'False'
op|')'
newline|'\n'
comment|"# Want DriverTestCase._fake_execute to return 'o' so that"
nl|'\n'
comment|'# volume.driver.delete_volume() raises the VolumeIsBusy exception.'
nl|'\n'
name|'self'
op|'.'
name|'output'
op|'='
string|"'o'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeIsBusy'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'delete_volume'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test1'"
op|','
string|"'size'"
op|':'
number|'1024'
op|'}'
op|')'
newline|'\n'
comment|'# when DriverTestCase._fake_execute returns something other than'
nl|'\n'
comment|"# 'o' volume.driver.delete_volume() does not raise an exception."
nl|'\n'
name|'self'
op|'.'
name|'output'
op|'='
string|"'x'"
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'delete_volume'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'test1'"
op|','
string|"'size'"
op|':'
number|'1024'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ISCSITestCase
dedent|''
dedent|''
name|'class'
name|'ISCSITestCase'
op|'('
name|'DriverTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test Case for ISCSIDriver"""'
newline|'\n'
DECL|variable|driver_name
name|'driver_name'
op|'='
string|'"nova.volume.driver.ISCSIDriver"'
newline|'\n'
nl|'\n'
DECL|member|_attach_volume
name|'def'
name|'_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Attach volumes to an instance. This function also sets\n           a fake log message."""'
newline|'\n'
name|'volume_id_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'vol_ref'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'vol_ref'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# each volume has a different mountpoint'
nl|'\n'
name|'mountpoint'
op|'='
string|'"/dev/sd"'
op|'+'
name|'chr'
op|'('
op|'('
name|'ord'
op|'('
string|"'b'"
op|')'
op|'+'
name|'index'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_attached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'mountpoint'
op|')'
newline|'\n'
name|'volume_id_list'
op|'.'
name|'append'
op|'('
name|'vol_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'volume_id_list'
newline|'\n'
nl|'\n'
DECL|member|test_check_for_export_with_no_volume
dedent|''
name|'def'
name|'test_check_for_export_with_no_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No log message when no volume is attached to an instance."""'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'check_for_export'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stream'
op|'.'
name|'getvalue'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_for_export_with_all_volume_exported
dedent|''
name|'def'
name|'test_check_for_export_with_all_volume_exported'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No log message when all the processes are running."""'
newline|'\n'
name|'volume_id_list'
op|'='
name|'self'
op|'.'
name|'_attach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'tgtadm'
op|','
string|"'show_target'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'volume_id_list'
op|':'
newline|'\n'
indent|'            '
name|'tid'
op|'='
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'tgtadm'
op|'.'
name|'show_target'
op|'('
name|'tid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stream'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'check_for_export'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stream'
op|'.'
name|'getvalue'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_detach_volume'
op|'('
name|'volume_id_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_for_export_with_some_volume_missing
dedent|''
name|'def'
name|'test_check_for_export_with_some_volume_missing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Output a warning message when some volumes are not recognied\n           by ietd."""'
newline|'\n'
name|'volume_id_list'
op|'='
name|'self'
op|'.'
name|'_attach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tid'
op|'='
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id_list'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'tgtadm'
op|','
string|"'show_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'tgtadm'
op|'.'
name|'show_target'
op|'('
name|'tid'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'check_for_export'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_id'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Cannot confirm exported volume id:%s."'
op|')'
op|'%'
name|'volume_id_list'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'0'
op|'<='
name|'self'
op|'.'
name|'stream'
op|'.'
name|'getvalue'
op|'('
op|')'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_detach_volume'
op|'('
name|'volume_id_list'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumePolicyTestCase
dedent|''
dedent|''
name|'class'
name|'VolumePolicyTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumePolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumePolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_rules
dedent|''
name|'def'
name|'_set_rules'
op|'('
name|'self'
op|','
name|'rules'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'set_brain'
op|'('
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'HttpBrain'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_policy
dedent|''
name|'def'
name|'test_check_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nova'
op|'.'
name|'policy'
op|','
string|"'enforce'"
op|')'
newline|'\n'
name|'target'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'volume:attach'"
op|','
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'check_policy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'attach'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_policy_with_target
dedent|''
name|'def'
name|'test_check_policy_with_target'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nova'
op|'.'
name|'policy'
op|','
string|"'enforce'"
op|')'
newline|'\n'
name|'target'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'volume:attach'"
op|','
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'api'
op|'.'
name|'check_policy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'attach'"
op|','
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
