begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for hook customization."""'
newline|'\n'
nl|'\n'
name|'import'
name|'stevedore'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'hooks'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SampleHookA
name|'class'
name|'SampleHookA'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|'"a"'
newline|'\n'
nl|'\n'
DECL|member|_add_called
name|'def'
name|'_add_called'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'called'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'called'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'.'
name|'append'
op|'('
name|'op'
op|'+'
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pre
dedent|''
dedent|''
name|'def'
name|'pre'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_add_called'
op|'('
string|'"pre"'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SampleHookB
dedent|''
dedent|''
name|'class'
name|'SampleHookB'
op|'('
name|'SampleHookA'
op|')'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|'"b"'
newline|'\n'
nl|'\n'
DECL|member|post
name|'def'
name|'post'
op|'('
name|'self'
op|','
name|'rv'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_add_called'
op|'('
string|'"post"'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockEntryPoint
dedent|''
dedent|''
name|'class'
name|'MockEntryPoint'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cls'
op|'='
name|'cls'
newline|'\n'
nl|'\n'
DECL|member|load
dedent|''
name|'def'
name|'load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'cls'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HookTestCase
dedent|''
dedent|''
name|'class'
name|'HookTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_mock_load_plugins
indent|'    '
name|'def'
name|'_mock_load_plugins'
op|'('
name|'self'
op|','
name|'iload'
op|','
name|'iargs'
op|','
name|'ikwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
nl|'\n'
name|'stevedore'
op|'.'
name|'extension'
op|'.'
name|'Extension'
op|'('
string|"'test_hook'"
op|','
nl|'\n'
name|'MockEntryPoint'
op|'('
name|'SampleHookA'
op|')'
op|','
name|'SampleHookA'
op|','
name|'SampleHookA'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'stevedore'
op|'.'
name|'extension'
op|'.'
name|'Extension'
op|'('
string|"'test_hook'"
op|','
nl|'\n'
name|'MockEntryPoint'
op|'('
name|'SampleHookB'
op|')'
op|','
name|'SampleHookB'
op|','
name|'SampleHookB'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HookTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'hooks'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stevedore'
op|'.'
name|'extension'
op|'.'
name|'ExtensionManager'
op|','
string|"'_load_plugins'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_mock_load_plugins'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'hooks'
op|'.'
name|'add_hook'
op|'('
string|"'test_hook'"
op|')'
newline|'\n'
DECL|member|_hooked
name|'def'
name|'_hooked'
op|'('
name|'self'
op|','
name|'a'
op|','
name|'b'
op|'='
number|'1'
op|','
name|'c'
op|'='
number|'2'
op|','
name|'called'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'42'
newline|'\n'
nl|'\n'
DECL|member|test_basic
dedent|''
name|'def'
name|'test_basic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'42'
op|','
name|'self'
op|'.'
name|'_hooked'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mgr'
op|'='
name|'hooks'
op|'.'
name|'_HOOKS'
op|'['
string|"'test_hook'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'mgr'
op|'.'
name|'extensions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'SampleHookA'
op|','
name|'mgr'
op|'.'
name|'extensions'
op|'['
number|'0'
op|']'
op|'.'
name|'plugin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'SampleHookB'
op|','
name|'mgr'
op|'.'
name|'extensions'
op|'['
number|'1'
op|']'
op|'.'
name|'plugin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_order_of_execution
dedent|''
name|'def'
name|'test_order_of_execution'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called_order'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_hooked'
op|'('
number|'42'
op|','
name|'called'
op|'='
name|'called_order'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'prea'"
op|','
string|"'preb'"
op|','
string|"'postb'"
op|']'
op|','
name|'called_order'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
