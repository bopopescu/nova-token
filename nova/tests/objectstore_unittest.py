begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUnittets for S3 objectstore clone.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'import'
name|'glob'
newline|'\n'
name|'import'
name|'hashlib'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'connection'
name|'import'
name|'S3Connection'
op|','
name|'OrdinaryCallingFormat'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'threads'
op|','
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'http'
op|','
name|'server'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objectstore'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'exception'
name|'import'
name|'NotEmpty'
op|','
name|'NotFound'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objectstore'
name|'import'
name|'image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objectstore'
op|'.'
name|'handler'
name|'import'
name|'S3'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
comment|"# Create a unique temporary directory. We don't delete after test to"
nl|'\n'
comment|'# allow checking the contents after running tests. Users and/or tools'
nl|'\n'
comment|'# running the tests need to remove the tests directories.'
nl|'\n'
DECL|variable|OSS_TEMPDIR
name|'OSS_TEMPDIR'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
name|'prefix'
op|'='
string|"'test_oss-'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Create bucket/images path'
nl|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'OSS_TEMPDIR'
op|','
string|"'images'"
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'OSS_TEMPDIR'
op|','
string|"'buckets'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectStoreTestCase
name|'class'
name|'ObjectStoreTestCase'
op|'('
name|'test'
op|'.'
name|'TrialTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test objectstore API directly."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
comment|'# pylint: disable-msg=C0103'
newline|'\n'
indent|'        '
string|'"""Setup users and projects."""'
newline|'\n'
name|'super'
op|'('
name|'ObjectStoreTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'buckets_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'OSS_TEMPDIR'
op|','
string|"'buckets'"
op|')'
op|','
nl|'\n'
name|'images_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'OSS_TEMPDIR'
op|','
string|"'images'"
op|')'
op|','
nl|'\n'
name|'ca_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'CA'"
op|')'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'DEBUG'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_user'
op|'('
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_user'
op|'('
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_user'
op|'('
string|"'admin_user'"
op|','
name|'admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_project'
op|'('
string|"'proj1'"
op|','
string|"'user1'"
op|','
string|"'a proj'"
op|','
op|'['
string|"'user1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_project'
op|'('
string|"'proj2'"
op|','
string|"'user2'"
op|','
string|"'a proj'"
op|','
op|'['
string|"'user2'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|Context
name|'class'
name|'Context'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Dummy context for running tests."""'
newline|'\n'
DECL|variable|user
name|'user'
op|'='
name|'None'
newline|'\n'
DECL|variable|project
name|'project'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'context'
op|'='
name|'Context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
comment|'# pylint: disable-msg=C0103'
newline|'\n'
indent|'        '
string|'"""Tear down users and projects."""'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_project'
op|'('
string|"'proj1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_project'
op|'('
string|"'proj2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_user'
op|'('
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_user'
op|'('
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_user'
op|'('
string|"'admin_user'"
op|')'
newline|'\n'
name|'super'
op|'('
name|'ObjectStoreTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_buckets
dedent|''
name|'def'
name|'test_buckets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the bucket API."""'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_user'
op|'('
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_project'
op|'('
string|"'proj1'"
op|')'
newline|'\n'
name|'objectstore'
op|'.'
name|'bucket'
op|'.'
name|'Bucket'
op|'.'
name|'create'
op|'('
string|"'new_bucket'"
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bucket'
op|'='
name|'objectstore'
op|'.'
name|'bucket'
op|'.'
name|'Bucket'
op|'('
string|"'new_bucket'"
op|')'
newline|'\n'
nl|'\n'
comment|'# creator is authorized to use bucket'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'bucket'
op|'.'
name|'is_authorized'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# another user is not authorized'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_user'
op|'('
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_project'
op|'('
string|"'proj2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bucket'
op|'.'
name|'is_authorized'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# admin is authorized to use bucket'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_user'
op|'('
string|"'admin_user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bucket'
op|'.'
name|'is_authorized'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# new buckets are empty'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bucket'
op|'.'
name|'list_keys'
op|'('
op|')'
op|'['
string|"'Contents'"
op|']'
op|'=='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# storing keys works'
nl|'\n'
name|'bucket'
op|'['
string|"'foo'"
op|']'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'bucket'
op|'.'
name|'list_keys'
op|'('
op|')'
op|'['
string|"'Contents'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bucket'
op|'['
string|"'foo'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
comment|'# md5 of key works'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bucket'
op|'['
string|"'foo'"
op|']'
op|'.'
name|'md5'
op|','
name|'hashlib'
op|'.'
name|'md5'
op|'('
string|"'bar'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# deleting non-empty bucket should throw a NotEmpty exception'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotEmpty'
op|','
name|'bucket'
op|'.'
name|'delete'
op|')'
newline|'\n'
nl|'\n'
comment|'# deleting key'
nl|'\n'
name|'del'
name|'bucket'
op|'['
string|"'foo'"
op|']'
newline|'\n'
nl|'\n'
comment|'# deleting empty bucket'
nl|'\n'
name|'bucket'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# accessing deleted bucket throws exception'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotFound'
op|','
name|'objectstore'
op|'.'
name|'bucket'
op|'.'
name|'Bucket'
op|','
string|"'new_bucket'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_images
dedent|''
name|'def'
name|'test_images'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Test the image API."'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_user'
op|'('
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_project'
op|'('
string|"'proj1'"
op|')'
newline|'\n'
nl|'\n'
comment|'# create a bucket for our bundle'
nl|'\n'
name|'objectstore'
op|'.'
name|'bucket'
op|'.'
name|'Bucket'
op|'.'
name|'create'
op|'('
string|"'image_bucket'"
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bucket'
op|'='
name|'objectstore'
op|'.'
name|'bucket'
op|'.'
name|'Bucket'
op|'('
string|"'image_bucket'"
op|')'
newline|'\n'
nl|'\n'
comment|'# upload an image manifest/parts'
nl|'\n'
name|'bundle_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'bundle'"
op|')'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'glob'
op|'.'
name|'glob'
op|'('
name|'bundle_path'
op|'+'
string|"'/*'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'path'
op|')'
op|']'
op|'='
name|'open'
op|'('
name|'path'
op|','
string|"'rb'"
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# register an image'
nl|'\n'
dedent|''
name|'image'
op|'.'
name|'Image'
op|'.'
name|'register_aws_image'
op|'('
string|"'i-testing'"
op|','
nl|'\n'
string|"'image_bucket/1mb.manifest.xml'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify image'
nl|'\n'
name|'my_img'
op|'='
name|'image'
op|'.'
name|'Image'
op|'('
string|"'i-testing'"
op|')'
newline|'\n'
name|'result_image_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'my_img'
op|'.'
name|'path'
op|','
string|"'image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'os'
op|'.'
name|'stat'
op|'('
name|'result_image_file'
op|')'
op|'.'
name|'st_size'
op|','
number|'1048576'
op|')'
newline|'\n'
nl|'\n'
name|'sha'
op|'='
name|'hashlib'
op|'.'
name|'sha1'
op|'('
name|'open'
op|'('
name|'result_image_file'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sha'
op|','
string|"'3b71f43ff30f4b15b5cd85dd9e95ebc7e84eb5a3'"
op|')'
newline|'\n'
nl|'\n'
comment|'# verify image permissions'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_user'
op|'('
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'get_project'
op|'('
string|"'proj2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'my_img'
op|'.'
name|'is_authorized'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# change user-editable fields'
nl|'\n'
name|'my_img'
op|'.'
name|'update_user_editable_fields'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"'my cool image'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'my cool image'"
op|','
name|'my_img'
op|'.'
name|'metadata'
op|'['
string|"'displayName'"
op|']'
op|')'
newline|'\n'
name|'my_img'
op|'.'
name|'update_user_editable_fields'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'my_img'
op|'.'
name|'metadata'
op|'['
string|"'displayName'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHTTPChannel
dedent|''
dedent|''
name|'class'
name|'TestHTTPChannel'
op|'('
name|'http'
op|'.'
name|'HTTPChannel'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Dummy site required for twisted.web"""'
newline|'\n'
nl|'\n'
DECL|member|checkPersistence
name|'def'
name|'checkPersistence'
op|'('
name|'self'
op|','
name|'_'
op|','
name|'__'
op|')'
op|':'
comment|'# pylint: disable-msg=C0103'
newline|'\n'
indent|'        '
string|'"""Otherwise we end up with an unclean reactor."""'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSite
dedent|''
dedent|''
name|'class'
name|'TestSite'
op|'('
name|'server'
op|'.'
name|'Site'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Dummy site required for twisted.web"""'
newline|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'TestHTTPChannel'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|S3APITestCase
dedent|''
name|'class'
name|'S3APITestCase'
op|'('
name|'test'
op|'.'
name|'TrialTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test objectstore through S3 API."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
comment|'# pylint: disable-msg=C0103'
newline|'\n'
indent|'        '
string|'"""Setup users, projects, and start a test server."""'
newline|'\n'
name|'super'
op|'('
name|'S3APITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FLAGS'
op|'.'
name|'auth_driver'
op|'='
string|"'nova.auth.ldapdriver.FakeLdapDriver'"
op|','
newline|'\n'
name|'FLAGS'
op|'.'
name|'buckets_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'OSS_TEMPDIR'
op|','
string|"'buckets'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_user'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_user'
op|'('
string|"'admin'"
op|','
name|'admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_project'
op|'='
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'create_project'
op|'('
string|"'admin'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_user'
op|')'
newline|'\n'
nl|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'FLAGS'
op|'.'
name|'buckets_path'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'FLAGS'
op|'.'
name|'buckets_path'
op|')'
newline|'\n'
nl|'\n'
name|'root'
op|'='
name|'S3'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'site'
op|'='
name|'TestSite'
op|'('
name|'root'
op|')'
newline|'\n'
comment|'# pylint: disable-msg=E1101'
nl|'\n'
name|'self'
op|'.'
name|'listening_port'
op|'='
name|'reactor'
op|'.'
name|'listenTCP'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'site'
op|','
nl|'\n'
name|'interface'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
comment|'# pylint: enable-msg=E1101'
nl|'\n'
name|'self'
op|'.'
name|'tcp_port'
op|'='
name|'self'
op|'.'
name|'listening_port'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
newline|'\n'
nl|'\n'
nl|'\n'
name|'if'
name|'not'
name|'boto'
op|'.'
name|'config'
op|'.'
name|'has_section'
op|'('
string|"'Boto'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'config'
op|'.'
name|'add_section'
op|'('
string|"'Boto'"
op|')'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'config'
op|'.'
name|'set'
op|'('
string|"'Boto'"
op|','
string|"'num_retries'"
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'S3Connection'
op|'('
name|'aws_access_key_id'
op|'='
name|'self'
op|'.'
name|'admin_user'
op|'.'
name|'access'
op|','
nl|'\n'
name|'aws_secret_access_key'
op|'='
name|'self'
op|'.'
name|'admin_user'
op|'.'
name|'secret'
op|','
nl|'\n'
name|'host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'tcp_port'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'False'
op|','
nl|'\n'
name|'calling_format'
op|'='
name|'OrdinaryCallingFormat'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_http_connection
name|'def'
name|'get_http_connection'
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Get a new S3 connection, don\'t attempt to reuse connections."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'new_http_connection'
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_http_connection'
op|'='
name|'get_http_connection'
newline|'\n'
nl|'\n'
DECL|member|_ensure_no_buckets
dedent|''
name|'def'
name|'_ensure_no_buckets'
op|'('
name|'self'
op|','
name|'buckets'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'buckets'
op|')'
op|','
number|'0'
op|','
string|'"Bucket list was not empty"'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_ensure_one_bucket
dedent|''
name|'def'
name|'_ensure_one_bucket'
op|'('
name|'self'
op|','
name|'buckets'
op|','
name|'name'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'buckets'
op|')'
op|','
number|'1'
op|','
nl|'\n'
string|'"Bucket list didn\'t have exactly one element in it"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'buckets'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|','
name|'name'
op|','
string|'"Wrong name"'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|test_000_list_buckets
dedent|''
name|'def'
name|'test_000_list_buckets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure we are starting with no buckets."""'
newline|'\n'
name|'deferred'
op|'='
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_buckets'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_ensure_no_buckets'
op|')'
newline|'\n'
name|'return'
name|'deferred'
newline|'\n'
nl|'\n'
DECL|member|test_001_create_and_delete_bucket
dedent|''
name|'def'
name|'test_001_create_and_delete_bucket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test bucket creation and deletion."""'
newline|'\n'
name|'bucket_name'
op|'='
string|"'testbucket'"
newline|'\n'
nl|'\n'
name|'deferred'
op|'='
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'create_bucket'
op|','
name|'bucket_name'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_buckets'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_ensure_one_bucket'
op|','
name|'bucket_name'
op|')'
newline|'\n'
nl|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'delete_bucket'
op|','
nl|'\n'
name|'bucket_name'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_buckets'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_ensure_no_buckets'
op|')'
newline|'\n'
name|'return'
name|'deferred'
newline|'\n'
nl|'\n'
DECL|member|test_002_create_bucket_and_key_and_delete_key_again
dedent|''
name|'def'
name|'test_002_create_bucket_and_key_and_delete_key_again'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test key operations on buckets."""'
newline|'\n'
name|'bucket_name'
op|'='
string|"'testbucket'"
newline|'\n'
name|'key_name'
op|'='
string|"'somekey'"
newline|'\n'
name|'key_contents'
op|'='
string|"'somekey'"
newline|'\n'
nl|'\n'
name|'deferred'
op|'='
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'create_bucket'
op|','
name|'bucket_name'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'b'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'b'
op|'.'
name|'new_key'
op|','
name|'key_name'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'k'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'k'
op|'.'
name|'set_contents_from_string'
op|','
nl|'\n'
name|'key_contents'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ensure_key_contents
name|'def'
name|'ensure_key_contents'
op|'('
name|'bucket_name'
op|','
name|'key_name'
op|','
name|'contents'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Verify contents for a key in the given bucket."""'
newline|'\n'
name|'bucket'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'get_key'
op|'('
name|'key_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'key'
op|'.'
name|'get_contents_as_string'
op|'('
op|')'
op|','
name|'contents'
op|','
nl|'\n'
string|'"Bad contents"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'ensure_key_contents'
op|','
nl|'\n'
name|'bucket_name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'key_contents'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|delete_key
name|'def'
name|'delete_key'
op|'('
name|'bucket_name'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Delete a key for the given bucket."""'
newline|'\n'
name|'bucket'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'get_key'
op|'('
name|'key_name'
op|')'
newline|'\n'
name|'key'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'delete_key'
op|','
name|'bucket_name'
op|','
nl|'\n'
name|'key_name'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_bucket'
op|','
nl|'\n'
name|'bucket_name'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'b'
op|':'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'b'
op|'.'
name|'get_all_keys'
op|')'
op|')'
newline|'\n'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_ensure_no_buckets'
op|')'
newline|'\n'
name|'return'
name|'deferred'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
comment|'# pylint: disable-msg=C0103'
newline|'\n'
indent|'        '
string|'"""Tear down auth and test server."""'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_user'
op|'('
string|"'admin'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_manager'
op|'.'
name|'delete_project'
op|'('
string|"'admin'"
op|')'
newline|'\n'
name|'stop_listening'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'listening_port'
op|'.'
name|'stopListening'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
name|'stop_listening'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
