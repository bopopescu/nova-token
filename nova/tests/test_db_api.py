begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# encoding=UTF8'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for the DB API."""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
name|'import'
name|'uuid'
name|'as'
name|'stdlib_uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'sqlite'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'schema'
name|'import'
name|'Table'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
op|'.'
name|'expression'
name|'import'
name|'select'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'sqlalchemy_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'session'
name|'as'
name|'db_session'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'reserved_host_memory_mb'"
op|','
string|"'nova.compute.resource_tracker'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'reserved_host_disk_mb'"
op|','
string|"'nova.compute.resource_tracker'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|get_engine
name|'get_engine'
op|'='
name|'db_session'
op|'.'
name|'get_engine'
newline|'\n'
DECL|variable|get_session
name|'get_session'
op|'='
name|'db_session'
op|'.'
name|'get_session'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbTestCase
name|'class'
name|'DbTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DbTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_instances_with_args
dedent|''
name|'def'
name|'create_instances_with_args'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
string|"'image_ref'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'node'"
op|':'
string|"'node1'"
op|','
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'if'
string|"'context'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'context'"
op|')'
newline|'\n'
name|'args'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'ctxt'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
dedent|''
name|'args'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_metadata
dedent|''
name|'def'
name|'fake_metadata'
op|'('
name|'self'
op|','
name|'content'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'['
string|'"foo%i"'
op|'%'
name|'i'
op|']'
op|'='
string|'"this is %s item %i"'
op|'%'
op|'('
name|'content'
op|','
name|'i'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'meta'
newline|'\n'
nl|'\n'
DECL|member|create_metadata_for_instance
dedent|''
name|'def'
name|'create_metadata_for_instance'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_metadata_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'meta'
op|','
name|'False'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'sys_meta'
op|','
name|'False'
op|')'
newline|'\n'
name|'return'
name|'meta'
op|','
name|'sys_meta'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbApiTestCase
dedent|''
dedent|''
name|'class'
name|'DbApiTestCase'
op|'('
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_instance_unique_hostname
indent|'    '
name|'def'
name|'test_create_instance_unique_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'otherprojectcontext'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|'"%s2"'
op|'%'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'global' any duplicate should fail, be it this project:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'global'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|'# or another:'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|','
nl|'\n'
name|'context'
op|'='
name|'otherprojectcontext'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in the project should fail:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in a different project should work:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'context'
op|'='
name|'otherprojectcontext'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_get_all_query
dedent|''
name|'def'
name|'test_instance_metadata_get_all_query'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'baz'"
op|':'
string|"'quux'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
op|'{'
string|"'key'"
op|':'
string|"'foo'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
op|'{'
string|"'value'"
op|':'
string|"'quux'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
op|'{'
string|"'value'"
op|':'
string|"'quux'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'foo'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_ids_not_found_are_printable
dedent|''
name|'def'
name|'test_ec2_ids_not_found_are_printable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|check_exc_format
indent|'        '
name|'def'
name|'check_exc_format'
op|'('
name|'method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'method'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'fake'"
name|'in'
name|'unicode'
op|'('
name|'exc'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_ec2_volume_id_by_uuid'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_volume_uuid_by_ec2_id'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_ec2_snapshot_id_by_uuid'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_snapshot_uuid_by_ec2_id'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_ec2_instance_id_by_uuid'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_with_meta
dedent|''
name|'def'
name|'test_instance_get_all_with_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'fake_meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'fake_sys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_with_meta
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_with_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'fake_meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'fake_sys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_without_meta
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_without_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_regex
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'teeeest2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'diff'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'t.*st.'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_metadata
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_unicode_value
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_unicode_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"u'test\xe2\x99\xa5'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"u'test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid
dedent|''
name|'def'
name|'test_instance_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'fake_meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'fake_sys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_empty
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_meta
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'fake_meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_sys_meta
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_sys_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'fake_meta'
op|','
name|'fake_sys'
op|'='
name|'self'
op|'.'
name|'create_metadata_for_instance'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'fake_sys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'reservation_id'
op|'='
string|"'b'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst1'
op|'['
string|"'id'"
op|']'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst2'
op|'['
string|"'id'"
op|']'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'if'
name|'inst1'
op|'['
string|"'id'"
op|']'
op|'=='
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host_and_node_no_join
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_host_and_node_no_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that system metadata is not joined.'
nl|'\n'
indent|'        '
name|'sys_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'system_metadata'
op|'='
name|'sys_meta'
op|')'
newline|'\n'
nl|'\n'
name|'elevated'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'elevated'
op|','
string|"'host1'"
op|','
nl|'\n'
string|"'node1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'instances'
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instances'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'sysmeta'
op|'='
name|'dict'
op|'('
name|'instance'
op|')'
op|'['
string|"'system_metadata'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'sysmeta'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_unconfirmed_by_dest_compute
dedent|''
name|'def'
name|'test_migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no migrations are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no migrations are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'01'
op|','
number|'01'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"finished"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|','
nl|'\n'
string|'"dest_compute"'
op|':'
string|'"fake_host2"'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure different host is not returned'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one migration older than 10 seconds is returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'ctxt'
op|','
name|'migration'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the new migration is not returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"finished"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|','
nl|'\n'
string|'"dest_compute"'
op|':'
string|'"fake_host2"'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|'"fake_host2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'ctxt'
op|','
name|'migration'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_hung_in_rebooting
dedent|''
name|'def'
name|'test_instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no instances are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one rebooting instance with updated_at older than 10 seconds'
nl|'\n'
comment|'# is returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'01'
op|','
number|'01'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"task_state"'
op|':'
string|'"rebooting"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the newly rebooted instance is not returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"task_state"'
op|':'
string|'"rebooting"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_associate_disassociate
dedent|''
name|'def'
name|'test_multi_associate_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'floating'"
op|'}'
newline|'\n'
name|'floating'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
name|'fixed'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'res'
op|'='
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'ctxt'
op|','
name|'floating'
op|','
name|'fixed'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
string|"'address'"
op|']'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'res'
op|'='
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'ctxt'
op|','
name|'floating'
op|','
name|'fixed'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
name|'None'
op|')'
newline|'\n'
name|'res'
op|'='
name|'db'
op|'.'
name|'floating_ip_disassociate'
op|'('
name|'ctxt'
op|','
name|'floating'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
string|"'address'"
op|']'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'res'
op|'='
name|'db'
op|'.'
name|'floating_ip_disassociate'
op|'('
name|'ctxt'
op|','
name|'floating'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_floating_address
dedent|''
name|'def'
name|'test_fixed_ip_get_by_floating_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
name|'fixed'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'floating'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'floating'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_floating_address'
op|'('
name|'ctxt'
op|','
name|'floating'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed'
op|','
name|'fixed_ip_ref'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_host
dedent|''
name|'def'
name|'test_fixed_ip_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed1'"
op|'}'
newline|'\n'
name|'fixed1'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'instance1'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'ctxt'
op|','
string|"'fixed1'"
op|','
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed2'"
op|'}'
newline|'\n'
name|'fixed2'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'ctxt'
op|','
string|"'fixed2'"
op|','
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed3'"
op|'}'
newline|'\n'
name|'fixed3'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'instance3'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'ctxt'
op|','
string|"'fixed3'"
op|','
name|'instance3'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_fixed_address
dedent|''
name|'def'
name|'test_floating_ip_get_by_fixed_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
name|'fixed'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'floating1'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'floating1'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'floating2'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fixed_ip_ref'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'floating2'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'floating_ip_refs'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'ctxt'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'floating1'
op|','
name|'floating_ip_refs'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'floating2'
op|','
name|'floating_ip_refs'
op|'['
number|'1'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_create_safe
dedent|''
name|'def'
name|'test_network_create_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'None'
op|','
name|'network'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'36'
op|','
name|'len'
op|'('
name|'network'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'db_network'
op|'='
name|'db'
op|'.'
name|'network_get'
op|'('
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'uuid'"
op|']'
op|','
name|'db_network'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_delete_safe
dedent|''
name|'def'
name|'test_network_delete_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'db_network'
op|'='
name|'db'
op|'.'
name|'network_get'
op|'('
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'network_id'"
op|':'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
string|"'address'"
op|':'
string|"'fake1'"
op|'}'
newline|'\n'
name|'address1'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'network_id'"
op|':'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'fake2'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'address2'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkInUse'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_delete_safe'
op|','
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'ctxt'
op|','
name|'address2'
op|','
op|'{'
string|"'allocated'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_delete_safe'
op|'('
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|','
name|'ctxt'
op|','
name|'address1'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'address1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fixed_ip'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_create_with_duplicate_vlan
dedent|''
name|'def'
name|'test_network_create_with_duplicate_vlan'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values1'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'something'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DuplicateVlan'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|','
name|'ctxt'
op|','
name|'values2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_update_with_duplicate_vlan
dedent|''
name|'def'
name|'test_network_update_with_duplicate_vlan'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values1'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'something'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'network_ref'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DuplicateVlan'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_update'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'network_ref'
op|'['
string|'"id"'
op|']'
op|','
name|'values2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_instance_uuid
dedent|''
name|'def'
name|'test_instance_update_with_instance_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test instance_update() works when an instance UUID is passed.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'key1'"
op|':'
string|"'meow'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'blah'"
op|'}'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'bar'"
op|','
string|"'key2'"
op|':'
string|"'wuff'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'baz'"
op|'}'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the user-provided metadata to ensure it was successfully'
nl|'\n'
comment|'# updated'
nl|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'wuff'"
op|','
name|'instance_meta'
op|'['
string|"'key2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'key1'"
op|','
name|'instance_meta'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the system metadata to ensure it was successfully updated'
nl|'\n'
name|'system_meta'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'baz'"
op|','
name|'system_meta'
op|'['
string|"'original_image_ref'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_metadata_on_instance_destroy
dedent|''
name|'def'
name|'test_delete_instance_metadata_on_instance_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'key1'"
op|':'
string|"'meow'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'blah'"
op|'}'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meow'"
op|','
name|'instance_meta'
op|'['
string|"'key1'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
comment|'# Make sure instance metadata is deleted as well'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'instance_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_unique_name
dedent|''
name|'def'
name|'test_instance_update_unique_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'otherprojectcontext'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|'"%s2"'
op|'%'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'hostname'
op|'='
string|"'fake_name'"
op|')'
newline|'\n'
name|'uuid1p1'
op|'='
name|'inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'hostname'
op|'='
string|"'fake_name2'"
op|')'
newline|'\n'
name|'uuid2p1'
op|'='
name|'inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'context'
op|'='
name|'otherprojectcontext'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name3'"
op|')'
newline|'\n'
name|'uuid1p2'
op|'='
name|'inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
comment|'# osapi_compute_unique_server_name_scope is unset so this should work:'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name2'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid1p1'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid1p1'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'global' any duplicate should fail."
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'global'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid2p1'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'otherprojectcontext'
op|','
nl|'\n'
name|'uuid1p2'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|"# But we should definitely be able to update our name if we aren't"
nl|'\n'
comment|'#  really changing it.'
nl|'\n'
name|'case_only_values'
op|'='
op|'{'
string|"'hostname'"
op|':'
string|"'fake_NAME'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid1p1'
op|','
name|'case_only_values'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in the project should fail:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid2p1'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in a different project should work:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'otherprojectcontext'
op|','
name|'uuid1p2'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_and_get_original
dedent|''
name|'def'
name|'test_instance_update_with_and_get_original'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'vm_state'"
op|':'
string|"'building'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'needscoffee'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"building"'
op|','
name|'old_ref'
op|'['
string|'"vm_state"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"needscoffee"'
op|','
name|'new_ref'
op|'['
string|'"vm_state"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_instance_update_updates_metadata
dedent|''
name|'def'
name|'_test_instance_update_updates_metadata'
op|'('
name|'self'
op|','
name|'metadata_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_and_check
name|'def'
name|'set_and_check'
op|'('
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
name|'metadata_type'
op|':'
name|'dict'
op|'('
name|'meta'
op|')'
op|'}'
op|')'
newline|'\n'
name|'_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
name|'metadata_type'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'_meta'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
op|'{'
string|"'speed'"
op|':'
string|"'88'"
op|','
string|"'units'"
op|':'
string|"'MPH'"
op|'}'
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
nl|'\n'
name|'meta'
op|'['
string|"'gigawatts'"
op|']'
op|'='
string|"'1.21'"
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
nl|'\n'
name|'del'
name|'meta'
op|'['
string|"'gigawatts'"
op|']'
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_updates_system_metadata
dedent|''
name|'def'
name|'test_instance_update_updates_system_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that system_metadata is updated during instance_update'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_update_updates_metadata'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_updates_metadata
dedent|''
name|'def'
name|'test_instance_update_updates_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that metadata is updated during instance_update'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_update_updates_metadata'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create
dedent|''
name|'def'
name|'test_instance_fault_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure we can create an instance fault.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a fault'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the fault to ensure it was successfully added'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'faults'
op|'['
name|'uuid'
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_get_by_instance
dedent|''
name|'def'
name|'test_instance_fault_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure we can retrieve an instance fault by  instance UUID.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
nl|'\n'
comment|'# Create faults'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault1'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'500'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault2'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault3'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'500'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault4'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'instance_faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
name|'uuids'
op|'['
number|'0'
op|']'
op|':'
op|'['
name|'fault2'
op|','
name|'fault1'
op|']'
op|','
nl|'\n'
name|'uuids'
op|'['
number|'1'
op|']'
op|':'
op|'['
name|'fault4'
op|','
name|'fault3'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_faults'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_faults_get_by_instance_uuids_no_faults
dedent|''
name|'def'
name|'test_instance_faults_get_by_instance_uuids_no_faults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# None should be returned when no faults exist.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'instance_faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
name|'uuids'
op|'['
number|'0'
op|']'
op|':'
op|'['
op|']'
op|','
name|'uuids'
op|'['
number|'1'
op|']'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'instance_faults'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_start
dedent|''
name|'def'
name|'test_instance_action_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the action to ensure it was successfully added'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'actions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'run_instance'"
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'request_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'request_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'user_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'project_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_finish
dedent|''
name|'def'
name|'test_instance_action_finish'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action_start_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_start_values'
op|')'
newline|'\n'
nl|'\n'
name|'finish_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'action_finish_values'
op|'='
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'finish_time'"
op|':'
name|'finish_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_finish'
op|'('
name|'ctxt'
op|','
name|'action_finish_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the action to ensure it was successfully added'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'actions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'run_instance'"
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'finish_time'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'finish_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'request_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'request_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'user_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|'.'
name|'project_id'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_actions_get_by_instance
dedent|''
name|'def'
name|'test_instance_actions_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can get actions by UUID."""'
newline|'\n'
name|'ctxt1'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt1'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt1'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt1'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt1'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'action_values'
op|'['
string|"'action'"
op|']'
op|'='
string|"'resize'"
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt1'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt2'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt2'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt2'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the action to ensure it was successfully added'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'ctxt1'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'actions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'resize'"
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'run_instance'"
op|','
name|'actions'
op|'['
number|'1'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_get_by_instance_and_action
dedent|''
name|'def'
name|'test_instance_action_get_by_instance_and_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can get an action by instance UUID and action id."""'
newline|'\n'
name|'ctxt1'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt1'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt1'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt1'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt1'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'action_values'
op|'['
string|"'action'"
op|']'
op|'='
string|"'resize'"
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt1'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt2'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt2'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt2'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'ctxt1'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'request_id'
op|'='
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'request_id'"
op|']'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'ctxt1'
op|','
name|'uuid1'
op|','
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'run_instance'"
op|','
name|'action'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt1'
op|'.'
name|'request_id'
op|','
name|'action'
op|'['
string|"'request_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_start
dedent|''
name|'def'
name|'test_instance_action_event_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action event."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'ctxt'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'schedule'"
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_success
dedent|''
name|'def'
name|'test_instance_action_event_finish_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'finish_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'event_finish_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'finish_time'"
op|':'
name|'finish_time'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Success'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'ctxt'
op|','
name|'event_finish_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'ctxt'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'ctxt'
op|','
name|'uuid'
op|','
name|'ctxt'
op|'.'
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'schedule'"
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'finish_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'finish_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'action'
op|'['
string|"'message'"
op|']'
op|','
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_error
dedent|''
name|'def'
name|'test_instance_action_event_finish_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event with an error."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'finish_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'event_finish_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'finish_time'"
op|':'
name|'finish_time'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Error'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'ctxt'
op|','
name|'event_finish_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'ctxt'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'ctxt'
op|','
name|'uuid'
op|','
name|'ctxt'
op|'.'
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'schedule'"
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'finish_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'finish_time'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'action'
op|'['
string|"'message'"
op|']'
op|','
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_and_event_start_string_time
dedent|''
name|'def'
name|'test_instance_action_and_event_start_string_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action and event with a string start_time."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'start_time_str'
op|'='
name|'timeutils'
op|'.'
name|'strtime'
op|'('
name|'start_time'
op|')'
newline|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time_str'
op|'}'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time_str'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'ctxt'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'schedule'"
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
comment|'# db api still returns models with datetime, not str, values'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_get_by_id
dedent|''
name|'def'
name|'test_instance_action_event_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get a specific instance action event."""'
newline|'\n'
name|'ctxt1'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'run_instance'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt1'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt1'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt1'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'added_action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt1'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
op|'{'
string|"'action'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt2'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt2'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt2'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'start_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'schedule'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt1'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'start_time'
op|'}'
newline|'\n'
name|'added_event'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt1'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'event'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt2'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt2'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_get_by_id'
op|'('
name|'ctxt1'
op|','
name|'added_action'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'added_event'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'schedule'"
op|','
name|'event'
op|'['
string|"'event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start_time'
op|','
name|'event'
op|'['
string|"'start_time'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_key_pair
dedent|''
name|'def'
name|'test_add_key_pair'
op|'('
name|'self'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if keypair creation work as expected."""'
newline|'\n'
name|'keypair'
op|'='
op|'{'
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'name'
name|'or'
string|"'test-keypair'"
op|','
nl|'\n'
string|"'fingerprint'"
op|':'
string|"'15:b0:f8:b3:f9:48:63:71:cf:7b:5b:38:6d:44:2d:4a'"
op|','
nl|'\n'
string|"'private_key'"
op|':'
string|"'private_key_value'"
op|','
nl|'\n'
string|"'public_key'"
op|':'
string|"'public_key_value'"
nl|'\n'
op|'}'
newline|'\n'
name|'result_key'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'keypair'
op|')'
newline|'\n'
name|'for'
name|'label'
name|'in'
name|'keypair'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'keypair'
op|'['
name|'label'
op|']'
op|','
name|'result_key'
op|'['
name|'label'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_destroy
dedent|''
dedent|''
name|'def'
name|'test_key_pair_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if key pair deletion works as expected."""'
newline|'\n'
name|'keypair_name'
op|'='
string|"'test-delete-keypair'"
newline|'\n'
name|'self'
op|'.'
name|'test_add_key_pair'
op|'('
name|'name'
op|'='
name|'keypair_name'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'keypair_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'keypair_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get
dedent|''
name|'def'
name|'test_key_pair_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test if a previously created keypair can be found."""'
newline|'\n'
name|'keypair_name'
op|'='
string|"'test-get-keypair'"
newline|'\n'
name|'self'
op|'.'
name|'test_add_key_pair'
op|'('
name|'name'
op|'='
name|'keypair_name'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'keypair_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'.'
name|'name'
op|','
name|'keypair_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get_all_by_user
dedent|''
name|'def'
name|'test_key_pair_get_all_by_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|')'
op|','
name|'list'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_non_existent_key_pair
dedent|''
name|'def'
name|'test_delete_non_existent_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_destroy'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'non-existent-keypair'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_non_existent_key_pair
dedent|''
name|'def'
name|'test_get_non_existent_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'invalid-key'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dns_registration
dedent|''
name|'def'
name|'test_dns_registration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domain1'
op|'='
string|"'test.domain.one'"
newline|'\n'
name|'domain2'
op|'='
string|"'test.domain.two'"
newline|'\n'
name|'testzone'
op|'='
string|"'testzone'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|','
name|'testzone'
op|')'
newline|'\n'
name|'domain_ref'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'zone'
op|'='
name|'domain_ref'
op|'['
string|"'availability_zone'"
op|']'
newline|'\n'
name|'scope'
op|'='
name|'domain_ref'
op|'['
string|"'scope'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scope'
op|','
string|"'private'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'zone'
op|','
name|'testzone'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_project'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'domain_ref'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|')'
newline|'\n'
name|'project'
op|'='
name|'domain_ref'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'scope'
op|'='
name|'domain_ref'
op|'['
string|"'scope'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'project'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scope'
op|','
string|"'public'"
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'domain1'
op|','
name|'domain2'
op|']'
newline|'\n'
name|'domains'
op|'='
name|'db'
op|'.'
name|'dnsdomain_list'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'domains'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_associated_fixed_ips
dedent|''
name|'def'
name|'test_network_get_associated_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'hostname'"
op|':'
string|"'myname'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'bar'"
op|','
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'baz'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'fixed_address'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'ctxt'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'record'
op|'='
name|'data'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'address'"
op|']'
op|','
name|'fixed_address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'network_id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'instance_created'"
op|']'
op|','
name|'instance'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'instance_updated'"
op|']'
op|','
name|'instance'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'instance_hostname'"
op|']'
op|','
name|'instance'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'vif_id'"
op|']'
op|','
name|'vif'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'record'
op|'['
string|"'vif_address'"
op|']'
op|','
name|'vif'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
string|"'nothing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_by_host
dedent|''
name|'def'
name|'test_network_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# dummy network'
nl|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
comment|'# network with host set'
nl|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# network with fixed ip with host set'
nl|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'network_id'"
op|':'
name|'net'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'fixed_address'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# network with instance with host set'
nl|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'network_id'"
op|':'
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'fixed_address'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_in_use_on_host
dedent|''
name|'def'
name|'test_network_in_use_on_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'hostname'"
op|':'
string|"'myname'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'bar'"
op|','
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'baz'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
string|"'foo'"
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
string|"'bar'"
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vol_mapping_non_admin
dedent|''
name|'def'
name|'test_get_vol_mapping_non_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ref'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'db'
op|'.'
name|'get_ec2_volume_id_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ref'
op|'['
string|"'id'"
op|']'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_snap_mapping_non_admin
dedent|''
name|'def'
name|'test_get_snap_mapping_non_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ref'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'db'
op|'.'
name|'get_ec2_snapshot_id_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ref'
op|'['
string|"'id'"
op|']'
op|','
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_calls
dedent|''
name|'def'
name|'test_bw_usage_calls'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now'
op|')'
newline|'\n'
name|'start_period'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'uuid3_refreshed'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'expected_bw_usages'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac1'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'12345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'67890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac2'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'300'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'22345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'77890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid3'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac3'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'500'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'32345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'87890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'uuid3_refreshed'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_compare
name|'def'
name|'_compare'
op|'('
name|'bw_usage'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bw_usage'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'bw_usages'
op|'='
name|'db'
op|'.'
name|'bw_usage_get_by_uuids'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'['
string|"'fake_uuid1'"
op|','
string|"'fake_uuid2'"
op|']'
op|','
name|'start_period'
op|')'
newline|'\n'
comment|'# No matches'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bw_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Add 3 entries'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'ctxt'
op|','
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'fake_mac1'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'100'
op|','
number|'200'
op|','
number|'12345'
op|','
number|'67890'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'ctxt'
op|','
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'fake_mac2'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'100'
op|','
number|'200'
op|','
number|'42'
op|','
number|'42'
op|')'
newline|'\n'
comment|'# Test explicit refreshed time'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'ctxt'
op|','
string|"'fake_uuid3'"
op|','
nl|'\n'
string|"'fake_mac3'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'400'
op|','
number|'500'
op|','
number|'32345'
op|','
number|'87890'
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'uuid3_refreshed'
op|')'
newline|'\n'
comment|'# Update 2nd entry'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'ctxt'
op|','
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'fake_mac2'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'200'
op|','
number|'300'
op|','
number|'22345'
op|','
number|'77890'
op|')'
newline|'\n'
nl|'\n'
name|'bw_usages'
op|'='
name|'db'
op|'.'
name|'bw_usage_get_by_uuids'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'['
string|"'fake_uuid1'"
op|','
string|"'fake_uuid2'"
op|','
string|"'fake_uuid3'"
op|']'
op|','
name|'start_period'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bw_usages'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'_compare'
op|'('
name|'bw_usages'
op|'['
number|'0'
op|']'
op|','
name|'expected_bw_usages'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'_compare'
op|'('
name|'bw_usages'
op|'['
number|'1'
op|']'
op|','
name|'expected_bw_usages'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'_compare'
op|'('
name|'bw_usages'
op|'['
number|'2'
op|']'
op|','
name|'expected_bw_usages'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'clear_time_override'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_create
dedent|''
name|'def'
name|'test_key_pair_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_keypair'"
op|','
string|"'public_key'"
op|':'
string|"'test-public-key'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|','
string|"'fingerprint'"
op|':'
string|"'test_fingerprint'"
op|'}'
newline|'\n'
name|'keypair'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'None'
op|','
name|'keypair'
op|')'
newline|'\n'
name|'for'
name|'name'
op|','
name|'value'
name|'in'
name|'values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'keypair'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_create_with_duplicate_name
dedent|''
dedent|''
name|'def'
name|'test_key_pair_create_with_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_keypair'"
op|','
string|"'public_key'"
op|':'
string|"'test-public-key'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|','
string|"'fingerprint'"
op|':'
string|"'test_fingerprint'"
op|'}'
newline|'\n'
name|'keypair'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyPairExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'key_pair_create'
op|','
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_admin_get_deleted_keypair
dedent|''
name|'def'
name|'test_admin_get_deleted_keypair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test deleted keypair can be read by admin user.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_keypair'"
op|','
string|"'public_key'"
op|':'
string|"'test-public-key'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|','
string|"'fingerprint'"
op|':'
string|"'test_fingerprint'"
op|'}'
newline|'\n'
name|'keypair'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'ctxt'
op|','
name|'keypair'
op|'['
string|"'user_id'"
op|']'
op|','
name|'keypair'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# Raise exception when read_deleted is 'no'."
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
name|'ctxt'
op|','
nl|'\n'
name|'keypair'
op|'['
string|"'user_id'"
op|']'
op|','
name|'keypair'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'db_keypair'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'ctxt'
op|','
name|'keypair'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'keypair'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_keypair'
op|'['
string|"'name'"
op|']'
op|','
name|'keypair'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_keypair'
op|'['
string|"'deleted'"
op|']'
op|','
name|'keypair'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_admin_get_all_keypairs_including_deleted
dedent|''
name|'def'
name|'test_admin_get_all_keypairs_including_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test all deleted/non-deleted keypairs can be read by admin user.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'keypair1_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_keypair1'"
op|','
nl|'\n'
string|"'public_key'"
op|':'
string|"'test-public-key1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|','
nl|'\n'
string|"'fingerprint'"
op|':'
string|"'test_fingerprint1'"
op|'}'
newline|'\n'
name|'keypair2_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_keypair2'"
op|','
nl|'\n'
string|"'public_key'"
op|':'
string|"'test-public-key2'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|','
nl|'\n'
string|"'fingerprint'"
op|':'
string|"'test_fingerprint2'"
op|'}'
newline|'\n'
name|'keypair1'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'ctxt'
op|','
name|'keypair1_values'
op|')'
newline|'\n'
name|'keypair2'
op|'='
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'ctxt'
op|','
name|'keypair2_values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'ctxt'
op|','
name|'keypair1'
op|'['
string|"'user_id'"
op|']'
op|','
name|'keypair1'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'ctxt'
op|','
name|'keypair2'
op|'['
string|"'user_id'"
op|']'
op|','
name|'keypair2'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
comment|'# Returns non-deleted keypairs.'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'ctxt'
op|','
name|'keypair1'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
comment|'# Returns deleted and non-deleted keypairs.'
nl|'\n'
name|'db_keypairs'
op|'='
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'ctxt'
op|','
name|'keypair1'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'expected_deleted_ids'
op|'='
op|'['
name|'keypair1'
op|'['
string|"'id'"
op|']'
op|','
name|'keypair2'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'expected_keypair_names'
op|'='
op|'['
name|'keypair1'
op|'['
string|"'name'"
op|']'
op|','
name|'keypair2'
op|'['
string|"'name'"
op|']'
op|']'
newline|'\n'
name|'for'
name|'keypair'
name|'in'
name|'db_keypairs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'keypair'
op|'['
string|"'name'"
op|']'
name|'in'
name|'expected_keypair_names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'keypair'
op|'['
string|"'deleted'"
op|']'
name|'in'
name|'expected_deleted_ids'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_values
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_fake_aggr_values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_metadata
dedent|''
name|'def'
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'fake_key1'"
op|':'
string|"'fake_value1'"
op|','
nl|'\n'
string|"'fake_key2'"
op|':'
string|"'fake_value2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_hosts
dedent|''
name|'def'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'foo.openstack.org'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate
dedent|''
name|'def'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate_with_hosts
dedent|''
name|'def'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NotDbApiTestCase
dedent|''
name|'class'
name|'NotDbApiTestCase'
op|'('
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NotDbApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sql_connection'
op|'='
string|'"notdb://"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_regex_unsupported_db
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_regex_unsupported_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Ensure that the 'LIKE' operator is used for unsupported dbs."
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test.*'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'diff'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'test.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_paginate
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_paginate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test1'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'test2'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test2'"
op|')'
newline|'\n'
name|'test3'
op|'='
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'display_name'
op|'='
string|"'test3'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test3'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MarkerNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'marker'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'AggregateDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AggregateDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_no_metadata
dedent|''
name|'def'
name|'test_aggregate_create_no_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
string|"'name'"
op|']'
op|','
string|"'fake_aggregate'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_avoid_name_conflict
dedent|''
name|'def'
name|'test_aggregate_create_avoid_name_conflict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r1'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'r1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
name|'r1'
op|'['
string|"'name'"
op|']'
op|'}'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'new_zone'"
op|'}'
newline|'\n'
name|'r2'
op|'='
name|'_create_aggregate'
op|'('
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r2'
op|'['
string|"'name'"
op|']'
op|','
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r2'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_create_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNameExists'
op|','
nl|'\n'
name|'_create_aggregate'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_with_metadata
dedent|''
name|'def'
name|'test_aggregate_create_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected_metadata'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_delete_create_with_metadata
dedent|''
name|'def'
name|'test_aggregate_create_delete_create_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'#test for bug 1052479'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected_metadata'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_metadata'
op|','
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_low_privi_context
dedent|''
name|'def'
name|'test_aggregate_create_low_privi_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'_get_fake_aggr_values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get
dedent|''
name|'def'
name|'test_aggregate_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|','
name|'expected'
op|'['
string|"'hosts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
name|'expected'
op|'['
string|"'metadetails'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host
dedent|''
name|'def'
name|'test_aggregate_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'a1'
op|'['
string|"'id'"
op|']'
op|','
name|'a2'
op|'['
string|"'id'"
op|']'
op|']'
op|','
op|'['
name|'x'
op|'['
string|"'id'"
op|']'
name|'for'
name|'x'
name|'in'
name|'r1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host_with_key
dedent|''
name|'def'
name|'test_aggregate_get_by_host_with_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'goodkey'"
op|':'
string|"'good'"
op|'}'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
comment|'# filter result by key'
nl|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|','
name|'key'
op|'='
string|"'goodkey'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'a1'
op|'['
string|"'id'"
op|']'
op|']'
op|','
op|'['
name|'x'
op|'['
string|"'id'"
op|']'
name|'for'
name|'x'
name|'in'
name|'r1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
name|'a3'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'bar.openstack.org'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'badkey'"
op|':'
string|"'bad'"
op|'}'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|'['
string|"'fake_key1'"
op|']'
op|','
name|'set'
op|'('
op|'['
string|"'fake_value1'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'badkey'"
name|'in'
name|'r1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_host_with_key
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_host_with_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
name|'a3'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'foo.openstack.org'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'good'"
op|':'
string|"'value'"
op|'}'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|','
nl|'\n'
name|'key'
op|'='
string|"'good'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|'['
string|"'good'"
op|']'
op|','
name|'set'
op|'('
op|'['
string|"'value'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'fake_key1'"
name|'in'
name|'r1'
op|')'
newline|'\n'
comment|'# Delete metadata'
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'a3'
op|'['
string|"'id'"
op|']'
op|','
string|"'good'"
op|')'
newline|'\n'
name|'r2'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|','
nl|'\n'
name|'key'
op|'='
string|"'good'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'good'"
name|'in'
name|'r2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_get_by_metadata_key
dedent|''
name|'def'
name|'test_aggregate_host_get_by_metadata_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
name|'a3'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'foo.openstack.org'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'good'"
op|':'
string|"'value'"
op|'}'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_by_metadata_key'
op|'('
name|'ctxt'
op|','
name|'key'
op|'='
string|"'good'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|','
op|'{'
string|"'foo.openstack.org'"
op|':'
name|'set'
op|'('
op|'['
string|"'value'"
op|']'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'fake_key1'"
name|'in'
name|'r1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host_not_found
dedent|''
name|'def'
name|'test_aggregate_get_by_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'unknown_host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete
dedent|''
name|'def'
name|'test_aggregate_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'aggregate'
op|'['
string|"'deleted'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update
dedent|''
name|'def'
name|'test_aggregate_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
string|"'fake_avail_zone'"
op|')'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'new_values'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'different_avail_zone'"
newline|'\n'
name|'updated'
op|'='
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'updated'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'different_avail_zone'"
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'updated'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'values'
op|'['
string|"'metadata'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'updated'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_existing_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_existing_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'fake_key1'"
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'values'
op|'['
string|"'metadata'"
op|']'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_update_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|','
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'new_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all
dedent|''
name|'def'
name|'test_aggregate_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'counter'
op|'='
number|'3'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
name|'counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all_non_deleted
dedent|''
name|'def'
name|'test_aggregate_get_all_non_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'add_counter'
op|'='
number|'5'
newline|'\n'
name|'remove_counter'
op|'='
number|'2'
newline|'\n'
name|'aggregates'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'add_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|'}'
newline|'\n'
name|'aggregates'
op|'.'
name|'append'
op|'('
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'remove_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'aggregates'
op|'['
name|'c'
op|'-'
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'add_counter'
op|'-'
name|'remove_counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add
dedent|''
name|'def'
name|'test_aggregate_metadata_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_update
dedent|''
name|'def'
name|'test_aggregate_metadata_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'key'
op|')'
newline|'\n'
name|'new_metadata'
op|'='
op|'{'
name|'key'
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'new_metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'key'
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete
dedent|''
name|'def'
name|'test_aggregate_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'del'
name|'metadata'
op|'['
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_remove_availability_zone
dedent|''
name|'def'
name|'test_aggregate_remove_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
string|"'availability_zone'"
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'aggregate'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
op|'}'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateMetadataNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
string|"'foo_key'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add
dedent|''
name|'def'
name|'test_aggregate_host_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_re_add
dedent|''
name|'def'
name|'test_aggregate_host_re_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'host'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_works
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_works'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'r1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'r2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone2'"
op|'}'
op|')'
newline|'\n'
name|'h1'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'r1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'h2'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'r2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h1'
op|','
name|'h2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_add_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'host'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete
dedent|''
name|'def'
name|'test_aggregate_host_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SqlAlchemyDbApiTestCase
dedent|''
dedent|''
name|'class'
name|'SqlAlchemyDbApiTestCase'
op|'('
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_instance_get_all_by_host
indent|'    '
name|'def'
name|'test_instance_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_uuids_by_host
dedent|''
name|'def'
name|'test_instance_get_all_uuids_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instances_with_args'
op|'('
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'types'
op|'.'
name|'UnicodeType'
op|','
name|'type'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CapacityTestCase
dedent|''
dedent|''
name|'class'
name|'CapacityTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CapacityTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'service_dict'
op|'='
name|'dict'
op|'('
name|'host'
op|'='
string|"'host1'"
op|','
name|'binary'
op|'='
string|"'binary1'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'compute'"
op|','
name|'report_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service_dict'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'='
name|'dict'
op|'('
name|'vcpus'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'local_gb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb_used'
op|'='
number|'0'
op|','
name|'free_ram_mb'
op|'='
number|'1024'
op|','
nl|'\n'
name|'free_disk_gb'
op|'='
number|'2048'
op|','
name|'hypervisor_type'
op|'='
string|'"xen"'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'1'
op|','
name|'cpu_info'
op|'='
string|'""'
op|','
nl|'\n'
name|'running_vms'
op|'='
number|'0'
op|','
name|'current_workload'
op|'='
number|'0'
op|','
nl|'\n'
name|'service_id'
op|'='
name|'self'
op|'.'
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
comment|'# add some random stats'
nl|'\n'
name|'stats'
op|'='
name|'dict'
op|'('
name|'num_instances'
op|'='
number|'3'
op|','
name|'num_proj_12345'
op|'='
number|'2'
op|','
nl|'\n'
name|'num_proj_23456'
op|'='
number|'2'
op|','
name|'num_vm_building'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'stats'"
op|']'
op|'='
name|'stats'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_helper
dedent|''
name|'def'
name|'_create_helper'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_stats_as_dict
dedent|''
name|'def'
name|'_stats_as_dict'
op|'('
name|'self'
op|','
name|'stats'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'stats'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'s'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'d'
op|'['
name|'key'
op|']'
op|'='
name|'s'
op|'['
string|"'value'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_create
dedent|''
name|'def'
name|'test_compute_node_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'['
string|"'free_ram_mb'"
op|']'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'['
string|"'free_disk_gb'"
op|']'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'['
string|"'running_vms'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'['
string|"'current_workload'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'_stats_as_dict'
op|'('
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'stats'
op|'['
string|"'num_instances'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'stats'
op|'['
string|"'num_proj_12345'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'stats'
op|'['
string|"'num_vm_building'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all
dedent|''
name|'def'
name|'test_compute_node_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'nodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'node'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'_stats_as_dict'
op|'('
name|'node'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_instances'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_proj_12345'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_vm_building'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update
dedent|''
name|'def'
name|'test_compute_node_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_node_id'
op|'='
name|'item'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'_stats_as_dict'
op|'('
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# change some values:'
nl|'\n'
name|'stats'
op|'['
string|"'num_instances'"
op|']'
op|'='
number|'8'
newline|'\n'
name|'stats'
op|'['
string|"'num_tribbles'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'stats'"
op|':'
name|'stats'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'item'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_id'
op|','
name|'values'
op|')'
newline|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'_stats_as_dict'
op|'('
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'item'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_instances'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_proj_12345'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'int'
op|'('
name|'stats'
op|'['
string|"'num_tribbles'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update_always_updates_updated_at
dedent|''
name|'def'
name|'test_compute_node_update_always_updates_updated_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'item_updated'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'item'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'item'
op|'['
string|"'updated_at'"
op|']'
op|','
name|'item_updated'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_stat_prune
dedent|''
name|'def'
name|'test_compute_node_stat_prune'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'for'
name|'stat'
name|'in'
name|'item'
op|'['
string|"'stats'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'stat'
op|'['
string|"'key'"
op|']'
op|'=='
string|"'num_instances'"
op|':'
newline|'\n'
indent|'                '
name|'num_instance_stat'
op|'='
name|'stat'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'stats'"
op|':'
name|'dict'
op|'('
name|'num_instances'
op|'='
number|'1'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'item'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|','
name|'prune_stats'
op|'='
name|'True'
op|')'
newline|'\n'
name|'item'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'stat'
op|'='
name|'item'
op|'['
string|"'stats'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num_instance_stat'
op|'['
string|"'id'"
op|']'
op|','
name|'stat'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num_instance_stat'
op|'['
string|"'key'"
op|']'
op|','
name|'stat'
op|'['
string|"'key'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'int'
op|'('
name|'stat'
op|'['
string|"'value'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MigrationTestCase
dedent|''
dedent|''
name|'class'
name|'MigrationTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'status'
op|'='
string|"'reverted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'status'
op|'='
string|"'confirmed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host2'"
op|','
name|'source_node'
op|'='
string|"'b'"
op|','
nl|'\n'
name|'dest_compute'
op|'='
string|"'host1'"
op|','
name|'dest_node'
op|'='
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host2'"
op|','
name|'dest_compute'
op|'='
string|"'host3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host3'"
op|','
name|'dest_compute'
op|'='
string|"'host4'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create
dedent|''
name|'def'
name|'_create'
op|'('
name|'self'
op|','
name|'status'
op|'='
string|"'migrating'"
op|','
name|'source_compute'
op|'='
string|"'host1'"
op|','
nl|'\n'
name|'source_node'
op|'='
string|"'a'"
op|','
name|'dest_compute'
op|'='
string|"'host2'"
op|','
name|'dest_node'
op|'='
string|"'b'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
name|'source_compute'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'system_metadata'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'system_metadata'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'='
op|'{'
string|"'status'"
op|':'
name|'status'
op|','
string|"'source_compute'"
op|':'
name|'source_compute'
op|','
nl|'\n'
string|"'source_node'"
op|':'
name|'source_node'
op|','
string|"'dest_compute'"
op|':'
name|'dest_compute'
op|','
nl|'\n'
string|"'dest_node'"
op|':'
name|'dest_node'
op|','
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_in_progress
dedent|''
name|'def'
name|'_assert_in_progress'
op|'('
name|'self'
op|','
name|'migrations'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'confirmed'"
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'reverted'"
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_in_progress_joins
dedent|''
dedent|''
name|'def'
name|'test_migration_get_in_progress_joins'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'foo'"
op|','
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'foo'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'migrations'
op|'['
number|'0'
op|']'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'system_metadata'
op|'['
string|"'key'"
op|']'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'system_metadata'
op|'['
string|"'value'"
op|']'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host1_nodea
dedent|''
name|'def'
name|'test_in_progress_host1_nodea'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host1'"
op|','
string|"'a'"
op|')'
newline|'\n'
comment|'# 2 as source + 1 as dest'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_in_progress'
op|'('
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host1_nodeb
dedent|''
name|'def'
name|'test_in_progress_host1_nodeb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host1'"
op|','
string|"'b'"
op|')'
newline|'\n'
comment|"# some migrations are to/from host1, but none with a node 'b'"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host2_nodeb
dedent|''
name|'def'
name|'test_in_progress_host2_nodeb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
comment|'# 2 as dest, 1 as source'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_in_progress'
op|'('
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_join
dedent|''
name|'def'
name|'test_instance_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'migration'
op|'['
string|"'instance'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ModelsObjectComparatorMixin
dedent|''
dedent|''
dedent|''
name|'class'
name|'ModelsObjectComparatorMixin'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|_dict_from_object
indent|'    '
name|'def'
name|'_dict_from_object'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'ignored_keys'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ignored_keys'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ignored_keys'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
op|'['
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'obj'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'k'
name|'not'
name|'in'
name|'ignored_keys'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualObjects
dedent|''
name|'def'
name|'_assertEqualObjects'
op|'('
name|'self'
op|','
name|'obj1'
op|','
name|'obj2'
op|','
name|'ignored_keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj1'
op|'='
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'obj1'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'obj2'
op|'='
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'obj2'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'obj1'
op|')'
op|','
name|'len'
op|'('
name|'obj2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'obj1'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'obj2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualListsOfObjects
dedent|''
dedent|''
name|'def'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|','
name|'objs1'
op|','
name|'objs2'
op|','
name|'ignored_keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'objs1'
op|')'
op|','
name|'len'
op|'('
name|'objs2'
op|')'
op|')'
newline|'\n'
name|'objs2'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'o'
op|'['
string|"'id'"
op|']'
op|','
name|'o'
op|')'
name|'for'
name|'o'
name|'in'
name|'objs2'
op|']'
op|')'
newline|'\n'
name|'for'
name|'o1'
name|'in'
name|'objs1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'o1'
op|','
name|'objs2'
op|'['
name|'o1'
op|'['
string|"'id'"
op|']'
op|']'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualListsOfPrimitivesAsSets
dedent|''
dedent|''
name|'def'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'self'
op|','
name|'primitives1'
op|','
name|'primitives2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'primitives1'
op|')'
op|','
name|'len'
op|'('
name|'primitives2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'primitive'
name|'in'
name|'primitives1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'primitive'
op|','
name|'primitives2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'primitive'
name|'in'
name|'primitives2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'primitive'
op|','
name|'primitives1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServiceTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServiceTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServiceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'fake_binary'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'fake_topic'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_service
dedent|''
name|'def'
name|'_create_service'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_create
dedent|''
name|'def'
name|'test_service_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'service'
op|'['
string|"'id'"
op|']'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'service'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_destroy
dedent|''
dedent|''
name|'def'
name|'test_service_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake_host2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service2'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'service2'
op|','
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update
dedent|''
name|'def'
name|'test_service_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'new_values'
op|'='
op|'{'
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host1'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'fake_binary1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'fake_topic1'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'updated_service'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'new_values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'updated_service'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update_not_found_exception
dedent|''
dedent|''
name|'def'
name|'test_service_update_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get
dedent|''
name|'def'
name|'test_service_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'some_other_fake_host'"
op|'}'
op|')'
newline|'\n'
name|'real_service1'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'service1'
op|','
name|'real_service1'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_with_compute_node
dedent|''
name|'def'
name|'test_service_get_with_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'compute_values'
op|'='
name|'dict'
op|'('
name|'vcpus'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'local_gb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb_used'
op|'='
number|'0'
op|','
name|'free_ram_mb'
op|'='
number|'1024'
op|','
nl|'\n'
name|'free_disk_gb'
op|'='
number|'2048'
op|','
name|'hypervisor_type'
op|'='
string|'"xen"'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'1'
op|','
name|'cpu_info'
op|'='
string|'""'
op|','
nl|'\n'
name|'running_vms'
op|'='
number|'0'
op|','
name|'current_workload'
op|'='
number|'0'
op|','
nl|'\n'
name|'service_id'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'compute'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_values'
op|')'
newline|'\n'
name|'real_service'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'real_compute'
op|'='
name|'real_service'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'compute'
op|'['
string|"'id'"
op|']'
op|','
name|'real_compute'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_not_found_exception
dedent|''
name|'def'
name|'test_service_get_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_host_and_topic
dedent|''
name|'def'
name|'test_service_get_by_host_and_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'topic1'"
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'real_service1'
op|'='
name|'db'
op|'.'
name|'service_get_by_host_and_topic'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host1'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'topic1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'service1'
op|','
name|'real_service1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'topic1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'disabled_services'
op|'='
op|'['
name|'services'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
name|'non_disabled_services'
op|'='
name|'services'
op|'['
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'compares'
op|'='
op|'['
nl|'\n'
op|'('
name|'services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'disabled_services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'True'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'non_disabled_services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'False'
op|')'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'comp'
name|'in'
name|'compares'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'*'
name|'comp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_topic
dedent|''
dedent|''
name|'def'
name|'test_service_get_all_by_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
string|"'t2'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'expected'
op|'='
name|'services'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'t1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_host
dedent|''
name|'def'
name|'test_service_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
string|"'t2'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'services'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
name|'CONF'
op|'.'
name|'compute_topic'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
name|'CONF'
op|'.'
name|'compute_topic'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'real_service'
op|'='
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'0'
op|']'
op|','
name|'real_service'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host_not_found
dedent|''
name|'def'
name|'test_service_get_by_compute_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args
dedent|''
name|'def'
name|'test_service_get_by_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'binary'"
op|':'
string|"'a'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'binary'"
op|':'
string|"'b'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'service1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'0'
op|']'
op|','
name|'service1'
op|')'
newline|'\n'
nl|'\n'
name|'service2'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'1'
op|']'
op|','
name|'service2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args_not_found_exception
dedent|''
name|'def'
name|'test_service_get_by_args_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'HostBinaryNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_args'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseInstanceTypeTestCase
dedent|''
dedent|''
name|'class'
name|'BaseInstanceTypeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseInstanceTypeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'fake_flavor'"
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'0.5'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_inst_type
dedent|''
name|'def'
name|'_create_inst_type'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_type_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_create
indent|'    '
name|'def'
name|'test_instance_type_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_type'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'extra_specs'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst_type'
op|'['
string|"'id'"
op|']'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_destroy
dedent|''
name|'def'
name|'test_instance_type_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'specs1'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'1'"
op|','
string|"'b'"
op|':'
string|"'2'"
op|'}'
newline|'\n'
name|'inst_type1'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'name1'"
op|','
string|"'flavorid'"
op|':'
string|"'a1'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'specs1'
op|'}'
op|')'
newline|'\n'
name|'specs2'
op|'='
op|'{'
string|"'c'"
op|':'
string|"'4'"
op|','
string|"'d'"
op|':'
string|"'3'"
op|'}'
newline|'\n'
name|'inst_type2'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'name2'"
op|','
string|"'flavorid'"
op|':'
string|"'a2'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'specs2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_type_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'name1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTypeNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'real_specs1'
op|'='
name|'db'
op|'.'
name|'instance_type_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_type1'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'real_specs1'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'r_inst_type2'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type2'
op|','
name|'r_inst_type2'
op|','
string|"'extra_specs'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_destroy_not_found
dedent|''
name|'def'
name|'test_instance_type_destroy_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTypeNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_destroy'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_create_duplicate_name
dedent|''
name|'def'
name|'test_instance_type_create_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTypeExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type'
op|','
nl|'\n'
op|'{'
string|"'flavorid'"
op|':'
string|"'some_random_flavor'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_create_duplicate_flavorid
dedent|''
name|'def'
name|'test_instance_type_create_duplicate_flavorid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTypeIdExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'some_random_name'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_create_with_extra_specs
dedent|''
name|'def'
name|'test_instance_type_create_with_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extra_specs'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
string|"'abc'"
op|','
name|'b'
op|'='
string|"'def'"
op|','
name|'c'
op|'='
string|"'ghi'"
op|')'
newline|'\n'
name|'inst_type'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'extra_specs'"
op|':'
name|'extra_specs'
op|'}'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'extra_specs'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'extra_specs'
op|','
name|'inst_type'
op|'['
string|"'extra_specs'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get_all
dedent|''
name|'def'
name|'test_instance_type_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): Remove base instance types'
nl|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'db'
op|'.'
name|'instance_type_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_type_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_types'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'600'
op|','
string|"'memory_mb'"
op|':'
number|'100'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'500'
op|','
string|"'memory_mb'"
op|':'
number|'200'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'400'
op|','
string|"'memory_mb'"
op|':'
number|'300'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a3'"
op|','
string|"'flavorid'"
op|':'
string|"'f3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'300'
op|','
string|"'memory_mb'"
op|':'
number|'400'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a4'"
op|','
string|"'flavorid'"
op|':'
string|"'f4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'200'
op|','
string|"'memory_mb'"
op|':'
number|'500'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a5'"
op|','
string|"'flavorid'"
op|':'
string|"'f5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'100'
op|','
string|"'memory_mb'"
op|':'
number|'600'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a6'"
op|','
string|"'flavorid'"
op|':'
string|"'f6'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'instance_types'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'it'
op|')'
name|'for'
name|'it'
name|'in'
name|'instance_types'
op|']'
newline|'\n'
nl|'\n'
name|'lambda_filters'
op|'='
op|'{'
nl|'\n'
string|"'min_memory_mb'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'memory_mb'"
op|']'
op|'>='
name|'v'
op|','
nl|'\n'
string|"'min_root_gb'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'root_gb'"
op|']'
op|'>='
name|'v'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'disabled'"
op|']'
op|'=='
name|'v'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
op|'('
name|'v'
name|'is'
name|'None'
name|'or'
name|'it'
op|'['
string|"'is_public'"
op|']'
op|'=='
name|'v'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mem_filts'
op|'='
op|'['
op|'{'
string|"'min_memory_mb'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
number|'100'
op|','
number|'350'
op|','
number|'550'
op|','
number|'650'
op|']'
op|']'
newline|'\n'
name|'root_filts'
op|'='
op|'['
op|'{'
string|"'min_root_gb'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
number|'100'
op|','
number|'350'
op|','
number|'550'
op|','
number|'650'
op|']'
op|']'
newline|'\n'
name|'disabled_filts'
op|'='
op|'['
op|'{'
string|"'disabled'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
name|'True'
op|','
name|'False'
op|']'
op|']'
newline|'\n'
name|'is_public_filts'
op|'='
op|'['
op|'{'
string|"'is_public'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
name|'True'
op|','
name|'False'
op|','
name|'None'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|function|assert_multi_filter_instance_type_get
name|'def'
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filters'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'filters'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_it'
op|'='
name|'instance_types'
newline|'\n'
name|'for'
name|'name'
op|','
name|'value'
name|'in'
name|'filters'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'filt'
op|'='
name|'lambda'
name|'it'
op|':'
name|'lambda_filters'
op|'['
name|'name'
op|']'
op|'('
name|'it'
op|','
name|'value'
op|')'
newline|'\n'
name|'expected_it'
op|'='
name|'filter'
op|'('
name|'filt'
op|','
name|'expected_it'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'real_it'
op|'='
name|'db'
op|'.'
name|'instance_type_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|'='
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected_it'
op|','
name|'real_it'
op|')'
newline|'\n'
nl|'\n'
comment|'#no filter'
nl|'\n'
dedent|''
name|'assert_multi_filter_instance_type_get'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'#test only with one filter'
nl|'\n'
name|'for'
name|'filt'
name|'in'
name|'mem_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'root_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'disabled_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'is_public_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filt'
op|')'
newline|'\n'
nl|'\n'
comment|'#test all filters together'
nl|'\n'
dedent|''
name|'for'
name|'mem'
name|'in'
name|'mem_filts'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'root'
name|'in'
name|'root_filts'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'disabled'
name|'in'
name|'disabled_filts'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'is_public'
name|'in'
name|'is_public_filts'
op|':'
newline|'\n'
indent|'                        '
name|'filts'
op|'='
op|'['
name|'f'
op|'.'
name|'items'
op|'('
op|')'
name|'for'
name|'f'
name|'in'
nl|'\n'
op|'['
name|'mem'
op|','
name|'root'
op|','
name|'disabled'
op|','
name|'is_public'
op|']'
op|']'
newline|'\n'
name|'filts'
op|'='
name|'dict'
op|'('
name|'reduce'
op|'('
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'x'
op|'+'
name|'y'
op|','
name|'filts'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'assert_multi_filter_instance_type_get'
op|'('
name|'filts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_instance_type_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'inst_types'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'inst_types'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'inst_type'
name|'in'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'inst_type_by_id'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type'
op|','
name|'inst_type_by_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get_by_name
dedent|''
dedent|''
name|'def'
name|'test_instance_type_get_by_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'inst_types'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'inst_types'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'inst_type'
name|'in'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'inst_type_by_name'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_type'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type'
op|','
name|'inst_type_by_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get_by_name_not_found
dedent|''
dedent|''
name|'def'
name|'test_instance_type_get_by_name_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTypeNotFoundByName'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get_by_flavor_id
dedent|''
name|'def'
name|'test_instance_type_get_by_flavor_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'inst_types'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'inst_types'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'inst_type'
name|'in'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'inst_type_by_flavorid'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'inst_type'
op|','
name|'inst_type_by_flavorid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get_by_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_instance_type_get_by_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_get_by_flavor_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeExtraSpecsTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeExtraSpecsTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceTypeExtraSpecsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'dict'
op|'('
name|'a'
op|'='
string|"'a'"
op|','
name|'b'
op|'='
string|"'b'"
op|','
name|'c'
op|'='
string|"'c'"
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'dict'
op|'('
name|'d'
op|'='
string|"'d'"
op|','
name|'e'
op|'='
string|"'e'"
op|','
name|'f'
op|'='
string|"'f'"
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): We have already tested instance_type_create method'
nl|'\n'
comment|'#                 with extra_specs in InstanceTypeTestCase.'
nl|'\n'
name|'self'
op|'.'
name|'inst_types'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_extra_specs_get
dedent|''
name|'def'
name|'test_instance_type_extra_specs_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'instance_type_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'it'
op|'['
string|"'extra_specs'"
op|']'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_extra_specs_get_item
dedent|''
dedent|''
name|'def'
name|'test_instance_type_extra_specs_get_item'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
name|'dict'
op|'('
name|'f1'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
string|"'a'"
op|','
name|'b'
op|'='
string|"'b'"
op|','
name|'c'
op|'='
string|"'c'"
op|')'
op|','
nl|'\n'
name|'f2'
op|'='
name|'dict'
op|'('
name|'d'
op|'='
string|"'d'"
op|','
name|'e'
op|'='
string|"'e'"
op|','
name|'f'
op|'='
string|"'f'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'flavor'
op|','
name|'specs'
name|'in'
name|'expected'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'specs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'spec'
op|'='
name|'db'
op|'.'
name|'instance_type_extra_specs_get_item'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|','
nl|'\n'
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spec'
op|'['
name|'key'
op|']'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_extra_specs_delete
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_instance_type_extra_specs_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'specs'
op|'='
name|'it'
op|'['
string|"'extra_specs'"
op|']'
newline|'\n'
name|'key'
op|'='
name|'specs'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'specs'
op|'['
name|'key'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_type_extra_specs_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'key'
op|')'
newline|'\n'
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'instance_type_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'it'
op|'['
string|"'extra_specs'"
op|']'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_extra_specs_update_or_create
dedent|''
dedent|''
name|'def'
name|'test_instance_type_extra_specs_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'inst_types'
op|':'
newline|'\n'
indent|'            '
name|'current_specs'
op|'='
name|'it'
op|'['
string|"'extra_specs'"
op|']'
newline|'\n'
name|'current_specs'
op|'.'
name|'update'
op|'('
name|'dict'
op|'('
name|'b'
op|'='
string|"'b1'"
op|','
name|'c'
op|'='
string|"'c1'"
op|','
name|'d'
op|'='
string|"'d1'"
op|','
name|'e'
op|'='
string|"'e1'"
op|')'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'current_specs'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_type_extra_specs_update_or_create'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'instance_type_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'current_specs'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_extra_specs_update_or_create_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_instance_type_extra_specs_update_or_create_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_extra_specs_update_or_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeAccessTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeAccessTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_create_inst_type_access
indent|'    '
name|'def'
name|'_create_inst_type_access'
op|'('
name|'self'
op|','
name|'instance_type_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_type_access_add'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_type_id'
op|','
nl|'\n'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_get_by_flavor_id
dedent|''
name|'def'
name|'test_instance_type_access_get_by_flavor_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|')'
newline|'\n'
name|'it1'
op|','
name|'it2'
op|'='
name|'tuple'
op|'('
op|'('
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'inst_types'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'access_it1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'access_it2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'it'
op|','
name|'access_it'
name|'in'
name|'zip'
op|'('
op|'('
name|'it1'
op|','
name|'it2'
op|')'
op|','
op|'('
name|'access_it1'
op|','
name|'access_it2'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'real_access_it'
op|'='
name|'db'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'access_it'
op|','
name|'real_access_it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_get_by_flavor_id_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_instance_type_access_get_by_flavor_id_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_get_by_flavor_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_add
dedent|''
name|'def'
name|'test_instance_type_access_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_type'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'project_id'
op|'='
string|"'p1'"
newline|'\n'
nl|'\n'
name|'access'
op|'='
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'project_id'
op|')'
newline|'\n'
comment|"# NOTE(boris-42): Check that instance_type_access_add doesn't fail and"
nl|'\n'
comment|'#                 returns correct value. This is enough because other'
nl|'\n'
comment|'#                 logic is checked by other methods.'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'access'
op|'['
string|"'id'"
op|']'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'access'
op|'['
string|"'instance_type_id'"
op|']'
op|','
name|'inst_type'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'access'
op|'['
string|"'project_id'"
op|']'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_add_to_non_existing_flavor
dedent|''
name|'def'
name|'test_instance_type_access_add_to_non_existing_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|','
nl|'\n'
string|"'nonexists'"
op|','
string|"'does_not_matter'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_add_duplicate_project_id_flavor
dedent|''
name|'def'
name|'test_instance_type_access_add_duplicate_project_id_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_type'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorAccessExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|','
op|'*'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_remove
dedent|''
name|'def'
name|'test_instance_type_access_remove'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|')'
newline|'\n'
name|'it1'
op|','
name|'it2'
op|'='
name|'tuple'
op|'('
op|'('
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'inst_types'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'access_it1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'access_it2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
name|'it2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_type_access_remove'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'access_it1'
op|'['
number|'1'
op|']'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'it'
op|','
name|'access_it'
name|'in'
name|'zip'
op|'('
op|'('
name|'it1'
op|','
name|'it2'
op|')'
op|','
op|'('
name|'access_it1'
op|'['
op|':'
number|'1'
op|']'
op|','
name|'access_it2'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'real_access_it'
op|'='
name|'db'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'access_it'
op|','
name|'real_access_it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_remove_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_instance_type_access_remove_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_access_remove'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|','
string|"'does_not_matter'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_remove_access_not_found
dedent|''
name|'def'
name|'test_instance_type_access_remove_access_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_type'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorAccessNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_type_access_remove'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_access_removed_after_instance_type_destroy
dedent|''
name|'def'
name|'test_instance_type_access_removed_after_instance_type_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_type1'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|','
string|"'name'"
op|':'
string|"'n1'"
op|'}'
op|')'
newline|'\n'
name|'inst_type2'
op|'='
name|'self'
op|'.'
name|'_create_inst_type'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f2'"
op|','
string|"'name'"
op|':'
string|"'n2'"
op|'}'
op|')'
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'('
name|'inst_type1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
op|','
nl|'\n'
op|'('
name|'inst_type1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p2'"
op|')'
op|','
nl|'\n'
op|'('
name|'inst_type2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p3'"
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_inst_type_access'
op|'('
op|'*'
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_type_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type1'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type1'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
name|'p'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type2'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_type_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst_type2'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'instance_type_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIPTestCase
dedent|''
dedent|''
name|'class'
name|'FixedIPTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_timeout_test
indent|'    '
name|'def'
name|'_timeout_test'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'timeout'
op|','
name|'multi_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'host'
op|'='
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'multi_host'
op|'='
name|'multi_host'
op|','
nl|'\n'
name|'host'
op|'='
string|"'bar'"
op|')'
op|')'
newline|'\n'
name|'old'
op|'='
name|'timeout'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'new'
op|'='
name|'timeout'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
comment|'# should deallocate'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# still allocated'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'True'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# wrong network'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# too new'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'new'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_disassociate_all_by_timeout_single_host
dedent|''
name|'def'
name|'test_fixed_ip_disassociate_all_by_timeout_single_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timeout_test'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'now'
op|','
name|'False'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'foo'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'0'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'bar'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_disassociate_all_by_timeout_multi_host
dedent|''
name|'def'
name|'test_fixed_ip_disassociate_all_by_timeout_multi_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timeout_test'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'now'
op|','
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'foo'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'bar'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_network_host_not_found_exception
dedent|''
name|'def'
name|'test_fixed_ip_get_by_network_host_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetworkHost'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_network_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'ignore'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_network_host_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_network_host_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'network_id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_network_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'fip'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host'"
op|','
name|'fip'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'project_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
op|')'
newline|'\n'
name|'return'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS'
op|'='
string|"'address'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
op|'['
name|'FIXED_IP_ADDRESS'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_multiple_fixed_ips_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_multiple_fixed_ips_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'address_1'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'address_2'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_inappropriate_ignored
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_inappropriate_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'address_1'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'address_2'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'another_instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'another_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'address'
op|'='
string|'"another_addr"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_not_found_exception
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForInstance'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS'
op|'='
string|"'address'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
op|'['
name|'FIXED_IP_ADDRESS'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_multiple_fixed_ips_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_multiple_fixed_ips_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'address_1'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'address_2'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_inappropriate_ignored
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_inappropriate_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'address_1'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'address_2'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'another_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'another_vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
string|'"another_addr"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_no_ip_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_no_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'ips_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_count_by_project_one_ip
dedent|''
name|'def'
name|'test_fixed_ip_count_by_project_one_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'PROJECT_ID'
op|'='
string|'"project_id"'
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'PROJECT_ID'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
string|"'address'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_count'
op|'='
name|'db'
op|'.'
name|'fixed_ip_count_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'PROJECT_ID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'ips_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_count_by_project_two_ips_for_different_instances
dedent|''
name|'def'
name|'test_fixed_ip_count_by_project_two_ips_for_different_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'PROJECT_ID'
op|'='
string|'"project_id"'
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'PROJECT_ID'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
string|"'address_1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'another_instance_for_this_project'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'project_id'
op|'='
name|'PROJECT_ID'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'another_instance_for_this_project'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'address'
op|'='
string|"'address_2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_count'
op|'='
name|'db'
op|'.'
name|'fixed_ip_count_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'PROJECT_ID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'ips_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_fixed_ip
dedent|''
name|'def'
name|'create_fixed_ip'
op|'('
name|'self'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'default_params'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.1'"
op|'}'
newline|'\n'
name|'default_params'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'default_params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_fails_if_ip_not_in_network
dedent|''
name|'def'
name|'test_fixed_ip_associate_fails_if_ip_not_in_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetwork'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_fails_if_ip_in_use
dedent|''
name|'def'
name|'test_fixed_ip_associate_fails_if_ip_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_succeeds
dedent|''
name|'def'
name|'test_fixed_ip_associate_succeeds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_succeeds_and_sets_network
dedent|''
name|'def'
name|'test_fixed_ip_associate_succeeds_and_sets_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'network_id'"
op|']'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceDestroyConstraints
dedent|''
dedent|''
name|'class'
name|'InstanceDestroyConstraints'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_equal_any_constraint_met
indent|'    '
name|'def'
name|'test_destroy_with_equal_any_constraint_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'task_state'"
op|':'
string|"'deleting'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'task_state'
op|'='
name|'db'
op|'.'
name|'equal_any'
op|'('
string|"'deleting'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_equal_any_constraint_not_met
dedent|''
name|'def'
name|'test_destroy_with_equal_any_constraint_not_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'resize'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'vm_state'
op|'='
name|'db'
op|'.'
name|'equal_any'
op|'('
string|"'active'"
op|','
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|','
name|'db'
op|'.'
name|'instance_destroy'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_not_equal_constraint_met
dedent|''
name|'def'
name|'test_destroy_with_not_equal_constraint_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'task_state'"
op|':'
string|"'deleting'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'task_state'
op|'='
name|'db'
op|'.'
name|'not_equal'
op|'('
string|"'error'"
op|','
string|"'resize'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_not_equal_constraint_not_met
dedent|''
name|'def'
name|'test_destroy_with_not_equal_constraint_not_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'vm_state'
op|'='
name|'db'
op|'.'
name|'not_equal'
op|'('
string|"'active'"
op|','
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|','
name|'db'
op|'.'
name|'instance_destroy'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeUsageDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'VolumeUsageDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeUsageDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_no_totals_update
dedent|''
name|'def'
name|'test_vol_usage_update_no_totals_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now'
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'refreshed_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'expected_vol_usages'
op|'='
op|'['
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid1'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'2000'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'3000'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'4000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"u'2'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid2'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid2'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid2'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'300'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'400'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_compare
name|'def'
name|'_compare'
op|'('
name|'vol_usage'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'10'
op|','
name|'rd_bytes'
op|'='
number|'20'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'30'
op|','
name|'wr_bytes'
op|'='
number|'40'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'2'
op|','
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid2'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid2'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid2'"
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'1000'
op|','
name|'rd_bytes'
op|'='
number|'2000'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'3000'
op|','
name|'wr_bytes'
op|'='
number|'4000'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'refreshed_time'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'_compare'
op|'('
name|'vol_usages'
op|'['
number|'0'
op|']'
op|','
name|'expected_vol_usages'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'_compare'
op|'('
name|'vol_usages'
op|'['
number|'1'
op|']'
op|','
name|'expected_vol_usages'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'clear_time_override'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_totals_update
dedent|''
name|'def'
name|'test_vol_usage_update_totals_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now'
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'expected_vol_usages'
op|'='
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid'"
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'600'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'800'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'1200'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'200'
op|','
name|'rd_bytes'
op|'='
number|'300'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'400'
op|','
name|'wr_bytes'
op|'='
number|'500'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'300'
op|','
name|'rd_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'500'
op|','
name|'wr_bytes'
op|'='
number|'600'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'rd_req'
op|'='
number|'400'
op|','
name|'rd_bytes'
op|'='
number|'500'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'600'
op|','
name|'wr_bytes'
op|'='
number|'700'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'vol_usages'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected_vol_usages'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usages'
op|'['
number|'0'
op|']'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'timeutils'
op|'.'
name|'clear_time_override'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TaskLogTestCase
dedent|''
dedent|''
name|'class'
name|'TaskLogTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TaskLogTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'begin'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'end'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'task_name'
op|'='
string|"'fake-task-name'"
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'fake-host'"
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"'Fake task message'"
newline|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get
dedent|''
name|'def'
name|'test_task_log_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'task_name'"
op|']'
op|','
name|'self'
op|'.'
name|'task_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'period_beginning'"
op|']'
op|','
name|'self'
op|'.'
name|'begin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'period_ending'"
op|']'
op|','
name|'self'
op|'.'
name|'end'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'host'"
op|']'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'message'"
op|']'
op|','
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all
dedent|''
name|'def'
name|'test_task_log_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_begin_task
dedent|''
name|'def'
name|'test_task_log_begin_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'task_name'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_begin_task_duplicate
dedent|''
name|'def'
name|'test_task_log_begin_task_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
op|'*'
name|'params'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'TaskAlreadyRunning'
op|','
nl|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|','
nl|'\n'
op|'*'
name|'params'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_end_task
dedent|''
name|'def'
name|'test_task_log_end_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'errors'
op|'='
number|'1'
newline|'\n'
name|'db'
op|'.'
name|'task_log_end_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'errors'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BlockDeviceMappingTestCase
dedent|''
dedent|''
name|'class'
name|'BlockDeviceMappingTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BlockDeviceMappingTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_bdm
dedent|''
name|'def'
name|'_create_bdm'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'instance_uuid'"
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'device_name'"
op|','
string|"'fake_device'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|'=='
name|'values'
op|'['
string|"'device_name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'bdm'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_create
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_block_device_mapping_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bdm'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update
dedent|''
name|'def'
name|'test_block_device_mapping_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'virtual_name'"
op|':'
string|"'some_virt_name'"
op|'}'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'bdm'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
number|'0'
op|']'
op|'['
string|"'virtual_name'"
op|']'
op|','
string|"'some_virt_name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'some_virt_name'"
nl|'\n'
op|'}'
newline|'\n'
comment|'# check create'
nl|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check update'
nl|'\n'
name|'values'
op|'['
string|"'virtual_name'"
op|']'
op|'='
string|"'virtual_name'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'bdm_real'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'virtual_name'"
op|']'
op|','
string|"'virtual_name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create_check_remove_virt
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create_check_remove_virt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral12'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# check that old bdm with same virtual_names are deleted on create'
nl|'\n'
name|'val1'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'val1'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'device1'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val1'
op|')'
newline|'\n'
name|'val2'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'val2'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'device2'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val2'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'bdm_real'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'device2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'virtual_name'"
op|']'
op|','
string|"'ephemeral12'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check that old bdm with same virtual_names are deleted on update'
nl|'\n'
name|'val3'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'val3'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'device3'"
newline|'\n'
name|'val3'
op|'['
string|"'virtual_name'"
op|']'
op|'='
string|"'some_name'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val3'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'val3'
op|'['
string|"'virtual_name'"
op|']'
op|'='
string|"'ephemeral12'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val3'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'bdm_real'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'device3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'virtual_name'"
op|']'
op|','
string|"'ephemeral12'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'test_block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid1'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'bmds_values'
op|'='
op|'['
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'virtual_name'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'first'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'virtual_name1'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'second'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'virtual_name2'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'third'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bmds_values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'bmd'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bmd'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bmd'
op|'['
number|'0'
op|']'
op|'['
string|"'virtual_name'"
op|']'
op|','
string|"'virtual_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bmd'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'first'"
op|')'
newline|'\n'
nl|'\n'
name|'bmd'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bmd'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destroy
dedent|''
name|'def'
name|'test_block_device_mapping_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'bdm'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'bdm'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destory_by_instance_and_volumne
dedent|''
name|'def'
name|'test_block_device_mapping_destory_by_instance_and_volumne'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol_id1'
op|'='
string|"'69f5c254-1a5b-4fff-acf7-cb369904f58f'"
newline|'\n'
name|'vol_id2'
op|'='
string|"'69f5c254-1a5b-4fff-acf7-cb369904f59f'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'fake1'"
op|','
string|"'volume_id'"
op|':'
name|'vol_id1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'fake2'"
op|','
string|"'volume_id'"
op|':'
name|'vol_id2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
nl|'\n'
name|'vol_id1'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdms'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdms'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destroy_by_instance_and_device
dedent|''
name|'def'
name|'test_block_device_mapping_destroy_by_instance_and_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'fake1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'fake2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
string|"'fake1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdms'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdms'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake2'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterfaceTestCase
dedent|''
dedent|''
name|'class'
name|'VirtualInterfaceTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VirtualInterfaceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'self'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'fake_address'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'self'
op|'.'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_virt_interface
dedent|''
name|'def'
name|'_create_virt_interface'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_create
dedent|''
name|'def'
name|'test_virtual_interface_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'testtools'
op|'.'
name|'skip'
op|'('
string|'"bug 1156227"'
op|')'
newline|'\n'
DECL|member|test_virtual_interface_create_with_duplicate_address
name|'def'
name|'test_virtual_interface_create_with_duplicate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
comment|"# NOTE(boris-42): Due to the bug 1156227 this won't work. In havana-1"
nl|'\n'
comment|'#                 it will be fixed.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|','
op|'{'
string|'"uuid"'
op|':'
name|'vif'
op|'['
string|"'uuid'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get
dedent|''
name|'def'
name|'test_virtual_interface_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'a'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'b'"
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_address
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'first'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'second'"
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'vif'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_uuid
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_instance
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'vifs1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake1'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake2'"
op|'}'
op|')'
op|']'
newline|'\n'
name|'vifs2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake3'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|']'
newline|'\n'
name|'vifs1_real'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'vifs2_real'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'vifs1'
op|','
name|'vifs1_real'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'vifs2'
op|','
name|'vifs2_real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_instance_and_network
dedent|''
name|'def'
name|'test_virtual_interface_get_by_instance_and_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project2'"
op|'}'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake1'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake2'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake3'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'vif'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'r_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'r_vif'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_delete_by_instance
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_delete_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'['
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake1'"
op|')'
op|','
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake3'"
op|','
name|'instance_uuid'
op|'='
name|'inst_uuid2'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vals'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
name|'vals'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'virtual_interface_delete_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'real_vifs1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'real_vifs2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_vifs1'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_vifs2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_all
dedent|''
name|'def'
name|'test_virtual_interface_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'['
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake1'"
op|')'
op|','
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake3'"
op|','
name|'instance_uuid'
op|'='
name|'inst_uuid2'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
name|'val'
op|')'
name|'for'
name|'val'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'real_vifs'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'vifs'
op|','
name|'real_vifs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ArchiveTestCase
dedent|''
dedent|''
name|'class'
name|'ArchiveTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ArchiveTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'engine'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'self'
op|'.'
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'.'
name|'bind'
op|'='
name|'self'
op|'.'
name|'engine'
newline|'\n'
name|'self'
op|'.'
name|'table1'
op|'='
name|'Table'
op|'('
string|'"instance_id_mappings"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_table1'
op|'='
name|'Table'
op|'('
string|'"shadow_instance_id_mappings"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'table2'
op|'='
name|'Table'
op|'('
string|'"dns_domains"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_table2'
op|'='
name|'Table'
op|'('
string|'"shadow_dns_domains"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'consoles'
op|'='
name|'Table'
op|'('
string|'"consoles"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'console_pools'
op|'='
name|'Table'
op|'('
string|'"console_pools"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_consoles'
op|'='
name|'Table'
op|'('
string|'"shadow_consoles"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_console_pools'
op|'='
name|'Table'
op|'('
string|'"shadow_console_pools"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'unused'
name|'in'
name|'xrange'
op|'('
number|'6'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'uuidstrs'
op|'.'
name|'append'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ids'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ArchiveTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'delete_statement1'
op|'='
name|'self'
op|'.'
name|'table1'
op|'.'
name|'delete'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement1'
op|')'
newline|'\n'
name|'delete_statement2'
op|'='
name|'self'
op|'.'
name|'shadow_table1'
op|'.'
name|'delete'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'shadow_table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement2'
op|')'
newline|'\n'
name|'delete_statement3'
op|'='
name|'self'
op|'.'
name|'table2'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'table2'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement3'
op|')'
newline|'\n'
name|'delete_statement4'
op|'='
name|'self'
op|'.'
name|'shadow_table2'
op|'.'
name|'delete'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'shadow_table2'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement4'
op|')'
newline|'\n'
name|'for'
name|'table'
name|'in'
op|'['
name|'self'
op|'.'
name|'console_pools'
op|','
name|'self'
op|'.'
name|'consoles'
op|','
name|'self'
op|'.'
name|'shadow_consoles'
op|','
nl|'\n'
name|'self'
op|'.'
name|'shadow_console_pools'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'delete_statement5'
op|'='
name|'table'
op|'.'
name|'delete'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'ids'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows
dedent|''
dedent|''
name|'def'
name|'test_archive_deleted_rows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Add 6 rows to table'
nl|'\n'
indent|'        '
name|'for'
name|'uuidstr'
name|'in'
name|'self'
op|'.'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'            '
name|'insert_statement'
op|'='
name|'self'
op|'.'
name|'table1'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
comment|'# Set 4 to deleted'
nl|'\n'
dedent|''
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'table1'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'query1'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'table1'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows1'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 6 in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows1'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'query2'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_table1'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'shadow_table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows2'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 0 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows2'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Archive 2 rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows3'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows3'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'rows4'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Archive 2 more rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows5'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows5'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows6'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows6'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Try to archive more, but there are no deleted rows left.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows7'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows7'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows8'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows8'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_for_table
dedent|''
name|'def'
name|'test_archive_deleted_rows_for_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tablename'
op|'='
string|'"instance_id_mappings"'
newline|'\n'
comment|'# Add 6 rows to table'
nl|'\n'
name|'for'
name|'uuidstr'
name|'in'
name|'self'
op|'.'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'            '
name|'insert_statement'
op|'='
name|'self'
op|'.'
name|'table1'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
comment|'# Set 4 to deleted'
nl|'\n'
dedent|''
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'table1'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'query1'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'table1'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows1'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 6 in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows1'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'query2'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_table1'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'shadow_table1'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows2'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 0 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows2'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Archive 2 rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows3'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows3'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'rows4'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Archive 2 more rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows5'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows5'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows6'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows6'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Try to archive more, but there are no deleted rows left.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows7'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows7'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows8'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows8'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_no_id_column
dedent|''
name|'def'
name|'test_archive_deleted_rows_no_id_column'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuidstr0'
op|'='
name|'self'
op|'.'
name|'uuidstrs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'insert_statement'
op|'='
name|'self'
op|'.'
name|'table2'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'domain'
op|'='
name|'uuidstr0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'table2'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'table2'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
name|'uuidstr0'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'query1'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'table2'
op|']'
op|','
name|'self'
op|'.'
name|'table2'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
name|'uuidstr0'
op|')'
newline|'\n'
name|'rows1'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows1'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'query2'
op|'='
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_table2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'shadow_table2'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
name|'uuidstr0'
op|')'
newline|'\n'
name|'rows2'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows2'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'1'
op|')'
newline|'\n'
name|'rows3'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query1'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows3'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'rows4'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query2'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows4'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_fk_constraint
dedent|''
name|'def'
name|'test_archive_deleted_rows_fk_constraint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# consoles.pool_id depends on console_pools.id'
nl|'\n'
comment|"# SQLite doesn't enforce foreign key constraints without a pragma."
nl|'\n'
indent|'        '
name|'dialect'
op|'='
name|'self'
op|'.'
name|'engine'
op|'.'
name|'url'
op|'.'
name|'get_dialect'
op|'('
op|')'
newline|'\n'
name|'if'
name|'dialect'
op|'=='
name|'sqlite'
op|'.'
name|'dialect'
op|':'
newline|'\n'
comment|"# We're seeing issues with foreign key support in SQLite 3.6.20"
nl|'\n'
comment|"# SQLAlchemy doesn't support it at all with < SQLite 3.6.19"
nl|'\n'
comment|'# It works fine in SQLite 3.7.'
nl|'\n'
comment|'# So return early to skip this test if running SQLite < 3.7'
nl|'\n'
indent|'            '
name|'import'
name|'sqlite3'
newline|'\n'
name|'tup'
op|'='
name|'sqlite3'
op|'.'
name|'sqlite_version_info'
newline|'\n'
name|'if'
name|'tup'
op|'['
number|'0'
op|']'
op|'<'
number|'3'
name|'or'
op|'('
name|'tup'
op|'['
number|'0'
op|']'
op|'=='
number|'3'
name|'and'
name|'tup'
op|'['
number|'1'
op|']'
op|'<'
number|'7'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'skipTest'
op|'('
nl|'\n'
string|"'sqlite version too old for reliable SQLA foreign_keys'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'"PRAGMA foreign_keys = ON"'
op|')'
newline|'\n'
dedent|''
name|'insert_statement'
op|'='
name|'self'
op|'.'
name|'console_pools'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
name|'id1'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ids'
op|'.'
name|'append'
op|'('
name|'id1'
op|')'
newline|'\n'
name|'insert_statement'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|','
nl|'\n'
name|'pool_id'
op|'='
name|'id1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
name|'id2'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ids'
op|'.'
name|'append'
op|'('
name|'id2'
op|')'
newline|'\n'
comment|'# The first try to archive console_pools should fail, due to FK.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Then archiving consoles should work.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"consoles"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# Then archiving console_pools should work.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
