begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for the DB API"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_setup_networking
name|'def'
name|'_setup_networking'
op|'('
name|'instance_id'
op|','
name|'ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'flo_addr'
op|'='
string|"'1.2.1.2'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'network_ref'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'fake'"
op|','
nl|'\n'
name|'associate'
op|'='
name|'True'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vif'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'56:12:12:12:12:12'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id'
op|'}'
newline|'\n'
name|'vif_ref'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'ctxt'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ip'
op|'='
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'fixed_ip'
op|')'
newline|'\n'
name|'fix_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'ip'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
name|'flo_addr'
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fix_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbApiTestCase
dedent|''
name|'class'
name|'DbApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DbApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_project_vpn
dedent|''
name|'def'
name|'test_instance_get_project_vpn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'instance_type_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_project_vpn'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters
dedent|''
name|'def'
name|'test_instance_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
string|"'image_ref'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|'}'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args1'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
string|"'image_ref'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|'}'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args1'
op|')'
newline|'\n'
name|'args2'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'b'"
op|','
string|"'image_ref'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|'}'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst1'
op|'.'
name|'id'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst2'
op|'.'
name|'id'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|']'
op|')'
newline|'\n'
name|'if'
name|'inst1'
op|'.'
name|'id'
op|'=='
name|'result'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'.'
name|'deleted'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_all_unconfirmed
dedent|''
dedent|''
name|'def'
name|'test_migration_get_all_unconfirmed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no migrations are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_all_unconfirmed'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one migration older than 10 seconds is returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'01'
op|','
number|'01'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"FINISHED"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_all_unconfirmed'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'ctxt'
op|','
name|'migration'
op|'.'
name|'id'
op|','
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the new migration is not returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"FINISHED"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_all_unconfirmed'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'ctxt'
op|','
name|'migration'
op|'.'
name|'id'
op|','
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_hung_in_rebooting
dedent|''
name|'def'
name|'test_instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no instances are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one rebooting instance with updated_at older than 10 seconds'
nl|'\n'
comment|'# is returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'01'
op|','
number|'01'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"task_state"'
op|':'
string|'"rebooting"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'id'
op|','
op|'{'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the newly rebooted instance is not returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"task_state"'
op|':'
string|'"rebooting"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'id'
op|','
op|'{'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_create_safe
dedent|''
name|'def'
name|'test_network_create_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'None'
op|','
name|'network'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'36'
op|','
name|'len'
op|'('
name|'network'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'db_network'
op|'='
name|'db'
op|'.'
name|'network_get'
op|'('
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'.'
name|'uuid'
op|','
name|'db_network'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_instance_id
dedent|''
name|'def'
name|'test_instance_update_with_instance_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" test instance_update() works when an instance id is passed """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
name|'metadata'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the metadata'
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
name|'metadata'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'id'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the metadata to ensure it was successfully updated'
nl|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_instance_uuid
dedent|''
name|'def'
name|'test_instance_update_with_instance_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" test instance_update() works when an instance UUID is passed """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
name|'metadata'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the metadata'
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
name|'metadata'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the metadata to ensure it was successfully updated'
nl|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create
dedent|''
name|'def'
name|'test_instance_fault_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can create an instance fault"""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'utils'
op|'.'
name|'gen_uuid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a fault'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the fault to ensure it was successfully added'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'faults'
op|'['
name|'uuid'
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_get_by_instance
dedent|''
name|'def'
name|'test_instance_fault_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" ensure we can retrieve an instance fault by  instance UUID """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
nl|'\n'
comment|'# Create faults'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault1'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'500'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault2'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault3'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'500'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fault4'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'instance_faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
name|'uuids'
op|'['
number|'0'
op|']'
op|':'
op|'['
name|'fault2'
op|','
name|'fault1'
op|']'
op|','
nl|'\n'
name|'uuids'
op|'['
number|'1'
op|']'
op|':'
op|'['
name|'fault4'
op|','
name|'fault3'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_faults'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_faults_get_by_instance_uuids_no_faults
dedent|''
name|'def'
name|'test_instance_faults_get_by_instance_uuids_no_faults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""None should be returned when no faults exist"""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'instance_faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
name|'uuids'
op|'['
number|'0'
op|']'
op|':'
op|'['
op|']'
op|','
name|'uuids'
op|'['
number|'1'
op|']'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'instance_faults'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_values
dedent|''
dedent|''
name|'def'
name|'_get_fake_aggr_values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|','
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_metadata
dedent|''
name|'def'
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'fake_key1'"
op|':'
string|"'fake_value1'"
op|','
nl|'\n'
string|"'fake_key2'"
op|':'
string|"'fake_value2'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_hosts
dedent|''
name|'def'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'foo.openstack.org'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate
dedent|''
name|'def'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate_with_hosts
dedent|''
name|'def'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateDBApiTestCase
dedent|''
name|'class'
name|'AggregateDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AggregateDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AggregateDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create
dedent|''
name|'def'
name|'test_aggregate_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure aggregate can be created with no metadata."""'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'operational_state'"
op|']'
op|','
string|"'building'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_create_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure aggregate names are distinct."""'
newline|'\n'
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNameExists'
op|','
nl|'\n'
name|'_create_aggregate'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateNotFound is raised when getting an aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateNotFound is raised when getting metadata."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_with_metadata
dedent|''
name|'def'
name|'test_aggregate_create_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure aggregate can be created with metadata."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'expected_metadata'
op|','
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_low_privi_context
dedent|''
name|'def'
name|'test_aggregate_create_low_privi_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure right context is applied when creating aggregate."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'_get_fake_aggr_values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateNotFound is raised when deleting an aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete
dedent|''
name|'def'
name|'test_aggregate_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can delete an aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update
dedent|''
name|'def'
name|'test_aggregate_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure an aggregate can be updated."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'new_values'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'different_avail_zone'"
newline|'\n'
name|'updated'
op|'='
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'result'
op|'.'
name|'availability_zone'
op|','
nl|'\n'
name|'updated'
op|'.'
name|'availability_zone'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure an aggregate can be updated with metadata."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_existing_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_existing_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure an aggregate can be updated with existing metadata."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'fake_key1'"
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
number|'1'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'values'
op|'['
string|"'metadata'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_update_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateNotFound is raised when updating an aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|','
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'new_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all
dedent|''
name|'def'
name|'test_aggregate_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can get all aggregates."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'counter'
op|'='
number|'3'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
name|'counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all_non_deleted
dedent|''
name|'def'
name|'test_aggregate_get_all_non_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we get only non-deleted aggregates."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'add_counter'
op|'='
number|'5'
newline|'\n'
name|'remove_counter'
op|'='
number|'2'
newline|'\n'
name|'aggregates'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'add_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
newline|'\n'
name|'aggregates'
op|'.'
name|'append'
op|'('
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'c'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'remove_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'aggregates'
op|'['
name|'c'
op|'-'
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'add_counter'
op|'-'
name|'remove_counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add
dedent|''
name|'def'
name|'test_aggregate_metadata_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can add metadata for the aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'metadata'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_update
dedent|''
name|'def'
name|'test_aggregate_metadata_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can update metadata for the aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'key'
op|')'
newline|'\n'
name|'new_metadata'
op|'='
op|'{'
name|'key'
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'new_metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'key'
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'metadata'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete
dedent|''
name|'def'
name|'test_aggregate_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can delete metadata for the aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'del'
name|'metadata'
op|'['
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'metadata'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateMetadataNotFound is raised when deleting."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateMetadataNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
string|"'foo_key'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add
dedent|''
name|'def'
name|'test_aggregate_host_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can add host to the aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_raise_conflict
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_raise_conflict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we cannot add host to distinct aggregates."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostConflict'
op|','
nl|'\n'
name|'_create_aggregate_with_hosts'
op|','
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone2'"
op|','
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we cannot add host to the same aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_add_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateFound when adding a host."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'host'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete
dedent|''
name|'def'
name|'test_aggregate_host_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can add host to the aggregate."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
nl|'\n'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateHostNotFound is raised when deleting a host."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dns_registration
dedent|''
name|'def'
name|'test_dns_registration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domain1'
op|'='
string|"'test.domain.one'"
newline|'\n'
name|'domain2'
op|'='
string|"'test.domain.two'"
newline|'\n'
name|'testzone'
op|'='
string|"'testzone'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|','
name|'testzone'
op|')'
newline|'\n'
name|'domain_ref'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'zone'
op|'='
name|'domain_ref'
op|'.'
name|'availability_zone'
newline|'\n'
name|'scope'
op|'='
name|'domain_ref'
op|'.'
name|'scope'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scope'
op|','
string|"'private'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'zone'
op|','
name|'testzone'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_project'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'domain_ref'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|')'
newline|'\n'
name|'project'
op|'='
name|'domain_ref'
op|'.'
name|'project_id'
newline|'\n'
name|'scope'
op|'='
name|'domain_ref'
op|'.'
name|'scope'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'project'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scope'
op|','
string|"'public'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'ctxt'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'ctxt'
op|','
name|'domain2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CapacityTestCase
dedent|''
dedent|''
name|'class'
name|'CapacityTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CapacityTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'service_dict'
op|'='
name|'dict'
op|'('
name|'host'
op|'='
string|"'host1'"
op|','
name|'binary'
op|'='
string|"'binary1'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'compute'"
op|','
name|'report_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service_dict'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'='
name|'dict'
op|'('
name|'vcpus'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'local_gb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb_used'
op|'='
number|'0'
op|','
name|'hypervisor_type'
op|'='
string|'"xen"'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'1'
op|','
name|'cpu_info'
op|'='
string|'""'
op|','
nl|'\n'
name|'service_id'
op|'='
name|'self'
op|'.'
name|'service'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_helper
dedent|''
name|'def'
name|'_create_helper'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_create
dedent|''
name|'def'
name|'test_compute_node_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'.'
name|'free_ram_mb'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'.'
name|'free_disk_gb'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'.'
name|'current_workload'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_create_with_reservations
dedent|''
name|'def'
name|'test_compute_node_create_with_reservations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_memory_mb'
op|'='
number|'256'
op|')'
newline|'\n'
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|'.'
name|'free_ram_mb'
op|','
number|'1024'
op|'-'
number|'256'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_set
dedent|''
name|'def'
name|'test_compute_node_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'free_ram_mb'
op|'='
number|'2048'
op|','
name|'free_disk_gb'
op|'='
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
name|'work'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
name|'vms'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_utilization_update
dedent|''
name|'def'
name|'test_compute_node_utilization_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_create_helper'
op|'('
string|"'host1'"
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'free_ram_mb_delta'
op|'='
op|'-'
number|'24'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'free_disk_gb_delta'
op|'='
op|'-'
number|'48'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'2000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'work_delta'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'2000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'work_delta'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'2000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'x'
op|'='
name|'db'
op|'.'
name|'compute_node_utilization_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
nl|'\n'
name|'vm_delta'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_ram_mb'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'free_disk_gb'
op|','
number|'2000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'current_workload'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'x'
op|'.'
name|'running_vms'
op|','
number|'5'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
