begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012, Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUnit Tests for nova.console.rpcapi\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'console'
name|'import'
name|'rpcapi'
name|'as'
name|'console_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsoleRpcAPITestCase
name|'class'
name|'ConsoleRpcAPITestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_test_console_api
indent|'    '
name|'def'
name|'_test_console_api'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'rpc_method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
name|'rpcapi'
op|'='
name|'console_rpcapi'
op|'.'
name|'ConsoleAPI'
op|'('
op|')'
newline|'\n'
name|'expected_retval'
op|'='
string|"'foo'"
name|'if'
name|'method'
op|'=='
string|"'call'"
name|'else'
name|'None'
newline|'\n'
name|'expected_version'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'version'"
op|','
name|'rpcapi'
op|'.'
name|'BASE_RPC_API_VERSION'
op|')'
newline|'\n'
name|'expected_msg'
op|'='
name|'rpcapi'
op|'.'
name|'make_msg'
op|'('
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'expected_msg'
op|'['
string|"'version'"
op|']'
op|'='
name|'expected_version'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fake_args'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'fake_kwargs'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_fake_rpc_method
name|'def'
name|'_fake_rpc_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'fake_kwargs'
op|'='
name|'kwargs'
newline|'\n'
name|'if'
name|'expected_retval'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'expected_retval'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
name|'rpc_method'
op|','
name|'_fake_rpc_method'
op|')'
newline|'\n'
nl|'\n'
name|'retval'
op|'='
name|'getattr'
op|'('
name|'rpcapi'
op|','
name|'method'
op|')'
op|'('
name|'ctxt'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'retval'
op|','
name|'expected_retval'
op|')'
newline|'\n'
name|'expected_args'
op|'='
op|'['
name|'ctxt'
op|','
name|'CONF'
op|'.'
name|'console_topic'
op|','
name|'expected_msg'
op|']'
newline|'\n'
name|'for'
name|'arg'
op|','
name|'expected_arg'
name|'in'
name|'zip'
op|'('
name|'self'
op|'.'
name|'fake_args'
op|','
name|'expected_args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arg'
op|','
name|'expected_arg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_console
dedent|''
dedent|''
name|'def'
name|'test_add_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_console_api'
op|'('
string|"'add_console'"
op|','
name|'instance_id'
op|'='
string|"'i'"
op|','
nl|'\n'
name|'rpc_method'
op|'='
string|"'cast'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'console'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_console_api'
op|'('
string|"'add_console'"
op|','
name|'instance_id'
op|'='
string|"'i'"
op|','
nl|'\n'
name|'rpc_method'
op|'='
string|"'cast'"
op|','
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_console
dedent|''
name|'def'
name|'test_remove_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_console_api'
op|'('
string|"'remove_console'"
op|','
name|'console_id'
op|'='
string|"'i'"
op|','
nl|'\n'
name|'rpc_method'
op|'='
string|"'cast'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'console'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_console_api'
op|'('
string|"'remove_console'"
op|','
name|'console_id'
op|'='
string|"'i'"
op|','
nl|'\n'
name|'rpc_method'
op|'='
string|"'cast'"
op|','
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
