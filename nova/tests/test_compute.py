begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Compute\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
name|'as'
name|'compute_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'sqlalchemy_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'notifier'
name|'import'
name|'test_notifier'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.tests.compute'"
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'stub_network'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'live_migration_retry_count'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeTime
name|'class'
name|'FakeTime'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|sleep
dedent|''
name|'def'
name|'sleep'
op|'('
name|'self'
op|','
name|'t'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'counter'
op|'+='
name|'t'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|nop_report_driver_status
dedent|''
dedent|''
name|'def'
name|'nop_report_driver_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeTestCase
dedent|''
name|'class'
name|'ComputeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for compute"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|','
nl|'\n'
name|'notification_driver'
op|'='
string|"'nova.notifier.test_notifier'"
op|','
nl|'\n'
name|'network_manager'
op|'='
string|"'nova.network.manager.FlatManager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance"""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'launch_time'"
op|']'
op|'='
string|"'10'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'user_id'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'project_id'
newline|'\n'
name|'type_id'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
name|'type_id'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_type
dedent|''
name|'def'
name|'_create_instance_type'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance"""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'name'"
op|']'
op|'='
string|"'m1.small'"
newline|'\n'
name|'inst'
op|'['
string|"'memory_mb'"
op|']'
op|'='
string|"'1024'"
newline|'\n'
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'local_gb'"
op|']'
op|'='
string|"'20'"
newline|'\n'
name|'inst'
op|'['
string|"'flavorid'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'swap'"
op|']'
op|'='
string|"'2048'"
newline|'\n'
name|'inst'
op|'['
string|"'rxtx_quota'"
op|']'
op|'='
number|'100'
newline|'\n'
name|'inst'
op|'['
string|"'rxtx_cap'"
op|']'
op|'='
number|'200'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_type_create'
op|'('
name|'context'
op|','
name|'inst'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_create_group
dedent|''
name|'def'
name|'_create_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'testgroup'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'testgroup'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_dummy_instance
dedent|''
name|'def'
name|'_get_dummy_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get mock-return-value instance object\n           Use this when any testcase executed later than test_run_terminate\n        """'
newline|'\n'
name|'vol1'
op|'='
name|'models'
op|'.'
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'vol1'
op|'['
string|"'id'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'vol2'
op|'='
name|'models'
op|'.'
name|'Volume'
op|'('
op|')'
newline|'\n'
name|'vol2'
op|'['
string|"'id'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'instance_ref'
op|'='
name|'models'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance_ref'
op|'['
string|"'volumes'"
op|']'
op|'='
op|'['
name|'vol1'
op|','
name|'vol2'
op|']'
newline|'\n'
name|'instance_ref'
op|'['
string|"'hostname'"
op|']'
op|'='
string|"'hostname-1'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'host'"
op|']'
op|'='
string|"'dummy'"
newline|'\n'
name|'return'
name|'instance_ref'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_defaults_display_name
dedent|''
name|'def'
name|'test_create_instance_defaults_display_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verify that an instance cannot be created without a display_name."""'
newline|'\n'
name|'cases'
op|'='
op|'['
name|'dict'
op|'('
op|')'
op|','
name|'dict'
op|'('
name|'display_name'
op|'='
name|'None'
op|')'
op|']'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'cases'
op|':'
newline|'\n'
indent|'            '
name|'ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
name|'None'
op|','
op|'**'
name|'instance'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'display_name'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_associates_security_groups
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_create_instance_associates_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure create associates security groups"""'
newline|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'_create_group'
op|'('
op|')'
newline|'\n'
name|'ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
nl|'\n'
name|'image_href'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_group'
op|'='
op|'['
string|"'testgroup'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'group'
op|'.'
name|'instances'
op|')'
op|'=='
number|'1'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_invalid_security_group_raises
dedent|''
dedent|''
name|'def'
name|'test_create_instance_with_invalid_security_group_raises'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'pre_build_len'
op|'='
name|'len'
op|'('
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_type'
op|','
nl|'\n'
name|'image_href'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_group'
op|'='
op|'['
string|"'this_is_a_fake_sec_group'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pre_build_len'
op|','
nl|'\n'
name|'len'
op|'('
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_associates_config_drive
dedent|''
name|'def'
name|'test_create_instance_associates_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure create associates a config drive."""'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'params'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'True'
op|','
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'instances'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance'
op|'.'
name|'config_drive'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_hostname_generator
dedent|''
dedent|''
name|'def'
name|'test_default_hostname_generator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cases'
op|'='
op|'['
op|'('
name|'None'
op|','
string|"'server-1'"
op|')'
op|','
op|'('
string|"'Hello, Server!'"
op|','
string|"'hello-server'"
op|')'
op|','
nl|'\n'
op|'('
string|"'<}\\x1fh\\x10e\\x08l\\x02l\\x05o\\x12!{>'"
op|','
string|"'hello'"
op|')'
op|','
nl|'\n'
op|'('
string|"'hello_server'"
op|','
string|"'hello-server'"
op|')'
op|']'
newline|'\n'
name|'for'
name|'display_name'
op|','
name|'hostname'
name|'in'
name|'cases'
op|':'
newline|'\n'
indent|'            '
name|'ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
name|'None'
op|','
nl|'\n'
name|'display_name'
op|'='
name|'display_name'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'hostname'"
op|']'
op|','
name|'hostname'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_instance_disassociates_security_groups
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_destroy_instance_disassociates_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure destroying disassociates security groups"""'
newline|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'_create_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
nl|'\n'
name|'image_href'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_group'
op|'='
op|'['
string|"'testgroup'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'group'
op|'.'
name|'instances'
op|')'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_security_group_disassociates_instances
dedent|''
dedent|''
name|'def'
name|'test_destroy_security_group_disassociates_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure destroying security groups disassociates instances"""'
newline|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'_create_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ref'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
nl|'\n'
name|'image_href'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_group'
op|'='
op|'['
string|"'testgroup'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
nl|'\n'
name|'read_deleted'
op|'='
name|'True'
op|')'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'group'
op|'.'
name|'instances'
op|')'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ref'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_terminate
dedent|''
dedent|''
name|'def'
name|'test_run_terminate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure it is possible to  run and terminate instance"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Running instances: %s"'
op|')'
op|','
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"After terminating instances: %s"'
op|')'
op|','
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_terminate_timestamps
dedent|''
name|'def'
name|'test_run_terminate_timestamps'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure timestamps are set for launched and destroyed"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'launched_at'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'deleted_at'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'launch'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'instance_ref'
op|'['
string|"'launched_at'"
op|']'
op|'>'
name|'launch'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'deleted_at'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'terminate'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'instance_ref'
op|'['
string|"'launched_at'"
op|']'
op|'<'
name|'terminate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'instance_ref'
op|'['
string|"'deleted_at'"
op|']'
op|'>'
name|'terminate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be stopped"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be started"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be paused"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'pause_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'unpause_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""ensure instance can be suspended"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'suspend_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'resume_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_soft_reboot
dedent|''
name|'def'
name|'test_soft_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be soft rebooted"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reboot_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'reboot_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hard_reboot
dedent|''
name|'def'
name|'test_hard_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be hard rebooted"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"HARD"'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reboot_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'reboot_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password
dedent|''
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can have its admin password set"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_file
dedent|''
name|'def'
name|'test_inject_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can write a file to an instance"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'inject_file'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
string|'"/tmp/test"'
op|','
nl|'\n'
string|'"File Contents"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_update
dedent|''
name|'def'
name|'test_agent_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can have its agent updated"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'agent_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
string|"'http://127.0.0.1/agent'"
op|','
string|"'00112233445566778899aabbccddeeff'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be snapshotted"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'name'
op|'='
string|'"myfakesnapshot"'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'snapshot_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_output
dedent|''
name|'def'
name|'test_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure we can get console output from instance"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'console'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'get_console_output'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'console'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ajax_console
dedent|''
name|'def'
name|'test_ajax_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure we can get console output from instance"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'console'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'get_ajax_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'set'
op|'('
op|'['
string|"'token'"
op|','
string|"'host'"
op|','
string|"'port'"
op|']'
op|')'
op|'.'
name|'issubset'
op|'('
name|'console'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vnc_console
dedent|''
name|'def'
name|'test_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure we can a vnc console for an instance."""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'console'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'get_vnc_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'console'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_usage_notification
dedent|''
name|'def'
name|'test_run_instance_usage_notification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure run instance generates apropriate usage notification"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'priority'"
op|']'
op|','
string|"'INFO'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'event_type'"
op|']'
op|','
string|"'compute.instance.create'"
op|')'
newline|'\n'
name|'payload'
op|'='
name|'msg'
op|'['
string|"'payload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'project_id'"
op|']'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'user_id'"
op|']'
op|','
name|'self'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_type'"
op|']'
op|','
string|"'m1.tiny'"
op|')'
newline|'\n'
name|'type_id'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'payload'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
op|','
name|'str'
op|'('
name|'type_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'display_name'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'created_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'launched_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'image_ref'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_usage_notification
dedent|''
name|'def'
name|'test_terminate_usage_notification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure terminate_instance generates apropriate usage notification"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'priority'"
op|']'
op|','
string|"'INFO'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'event_type'"
op|']'
op|','
string|"'compute.instance.delete'"
op|')'
newline|'\n'
name|'payload'
op|'='
name|'msg'
op|'['
string|"'payload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'project_id'"
op|']'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'user_id'"
op|']'
op|','
name|'self'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_type'"
op|']'
op|','
string|"'m1.tiny'"
op|')'
newline|'\n'
name|'type_id'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'payload'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
op|','
name|'str'
op|'('
name|'type_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'display_name'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'created_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'launched_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'image_ref'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_existing
dedent|''
name|'def'
name|'test_run_instance_existing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure failure when running an instance that already exists"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Error'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lock
dedent|''
name|'def'
name|'test_lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""ensure locked instance cannot be changed"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'non_admin_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# decorator should return False (fail) with locked nonadmin context'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'lock_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reboot_instance'
op|'('
name|'non_admin_context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret_val'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# decorator should return None (success) with unlocked nonadmin context'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'unlock_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reboot_instance'
op|'('
name|'non_admin_context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret_val'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_resize
dedent|''
name|'def'
name|'test_finish_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Contrived test to ensure finish_resize doesn\'t raise anything"""'
newline|'\n'
nl|'\n'
DECL|function|fake
name|'def'
name|'fake'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'finish_migration'"
op|','
name|'fake'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
name|'fake'
op|')'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'prep_resize'
op|'('
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'migration_ref'
op|'='
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'pre-migrating'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'finish_resize'
op|'('
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'int'
op|'('
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|','
name|'e'
op|':'
newline|'\n'
comment|'# Only catch key errors. We want other reasons for the test to'
nl|'\n'
comment|"# fail to actually error out so we don't obscure anything"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance_notification
dedent|''
name|'def'
name|'test_resize_instance_notification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure notifications on instance migrate/resize"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'prep_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'migration_ref'
op|'='
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'pre-migrating'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'test_notifier'
op|'.'
name|'NOTIFICATIONS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'priority'"
op|']'
op|','
string|"'INFO'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'msg'
op|'['
string|"'event_type'"
op|']'
op|','
string|"'compute.instance.resize.prep'"
op|')'
newline|'\n'
name|'payload'
op|'='
name|'msg'
op|'['
string|"'payload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'project_id'"
op|']'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'user_id'"
op|']'
op|','
name|'self'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'instance_type'"
op|']'
op|','
string|"'m1.tiny'"
op|')'
newline|'\n'
name|'type_id'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'payload'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
op|','
name|'str'
op|'('
name|'type_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'display_name'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'created_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'launched_at'"
name|'in'
name|'payload'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'payload'
op|'['
string|"'image_ref'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance
dedent|''
name|'def'
name|'test_resize_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance can be migrated/resized"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'prep_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'migration_ref'
op|'='
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'pre-migrating'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'resize_instance'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_invalid_flavor_fails
dedent|''
name|'def'
name|'test_resize_invalid_flavor_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure invalid flavors raise"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
nl|'\n'
name|'context'
op|','
name|'instance_id'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_down_fails
dedent|''
name|'def'
name|'test_resize_down_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure resizing down raises and fails"""'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'inst_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.xlarge'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
name|'inst_type'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CannotResizeToSmallerSize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'context'
op|','
name|'instance_id'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_size_fails
dedent|''
name|'def'
name|'test_resize_same_size_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure invalid flavors raise"""'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CannotResizeToSameSize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'context'
op|','
name|'instance_id'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_resize
dedent|''
name|'def'
name|'test_finish_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that the flavor is reverted to the original on revert"""'
newline|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake
name|'def'
name|'fake'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'finish_migration'"
op|','
name|'fake'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'revert_migration'"
op|','
name|'fake'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
name|'fake'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Confirm the instance size before the resize starts'
nl|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_type_ref'
op|'['
string|"'flavorid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'new_instance_type_ref'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_flavor_id'
op|'('
name|'context'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'prep_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'new_instance_type_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'migration_ref'
op|'='
name|'db'
op|'.'
name|'migration_get_by_instance_and_status'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'pre-migrating'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'resize_instance'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'finish_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'int'
op|'('
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Prove that the instance size is now the new size'
nl|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_type_ref'
op|'['
string|"'flavorid'"
op|']'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
comment|'# Finally, revert and confirm the old flavor has been applied'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'revert_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'finish_revert_resize'
op|'('
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'migration_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'context'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_type_ref'
op|'['
string|"'flavorid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_flavor_id
dedent|''
name|'def'
name|'test_get_by_flavor_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_flavor_id'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'['
string|"'name'"
op|']'
op|','
string|"'m1.tiny'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_source_fails
dedent|''
name|'def'
name|'test_resize_same_source_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure instance fails to migrate when source and destination are\n        the same host"""'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Error'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'prep_resize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate
dedent|''
name|'def'
name|'test_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
comment|'# Migrate simply calls resize() without a flavor_id.'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_other_managers
dedent|''
name|'def'
name|'_setup_other_managers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'volume_manager'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_manager'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_driver'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'compute_driver'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_instance_has_no_fixed_ip
dedent|''
name|'def'
name|'test_pre_live_migration_instance_has_no_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm raising exception if instance doesn\'t have fixed_ip."""'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'i_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'c'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'time'
op|'='
name|'FakeTime'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_instance_has_volume
dedent|''
name|'def'
name|'test_pre_live_migration_instance_has_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm setup_compute_volume is called when volume is mounted."""'
newline|'\n'
DECL|function|fake_nw_info
name|'def'
name|'fake_nw_info'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
number|'0'
op|','
op|'{'
string|"'ips'"
op|':'
op|'['
string|"'dummy'"
op|']'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_other_managers'
op|'('
op|')'
newline|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'volmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'drivermock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'compute_driver'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vid'
op|'='
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|'['
name|'i'
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'volmock'
op|'.'
name|'setup_compute_volume'
op|'('
name|'c'
op|','
name|'vid'
op|')'
op|'.'
name|'InAnyOrder'
op|'('
string|"'g1'"
op|')'
newline|'\n'
dedent|''
name|'drivermock'
op|'.'
name|'plug_vifs'
op|'('
name|'i_ref'
op|','
name|'fake_nw_info'
op|'('
op|')'
op|')'
newline|'\n'
name|'drivermock'
op|'.'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'i_ref'
op|','
name|'fake_nw_info'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
name|'fake_nw_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_manager'
op|'='
name|'volmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'='
name|'drivermock'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'pre_live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_instance_has_no_volume
dedent|''
name|'def'
name|'test_pre_live_migration_instance_has_no_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm log meg when instance doesn\'t mount any volumes."""'
newline|'\n'
DECL|function|fake_nw_info
name|'def'
name|'fake_nw_info'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
number|'0'
op|','
op|'{'
string|"'ips'"
op|':'
op|'['
string|"'dummy'"
op|']'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_other_managers'
op|'('
op|')'
newline|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'drivermock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'compute_driver'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_manager'
op|'.'
name|'LOG'
op|','
string|"'info'"
op|')'
newline|'\n'
name|'compute_manager'
op|'.'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"%s has no volume."'
op|')'
op|','
name|'i_ref'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
name|'drivermock'
op|'.'
name|'plug_vifs'
op|'('
name|'i_ref'
op|','
name|'fake_nw_info'
op|'('
op|')'
op|')'
newline|'\n'
name|'drivermock'
op|'.'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'i_ref'
op|','
name|'fake_nw_info'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
name|'fake_nw_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'='
name|'drivermock'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'pre_live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'time'
op|'='
name|'FakeTime'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_setup_compute_node_fail
dedent|''
name|'def'
name|'test_pre_live_migration_setup_compute_node_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm operation setup_compute_network() fails.\n\n        It retries and raise exception when timeout exceeded.\n\n        """'
newline|'\n'
DECL|function|fake_nw_info
name|'def'
name|'fake_nw_info'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
number|'0'
op|','
op|'{'
string|"'ips'"
op|':'
op|'['
string|"'dummy'"
op|']'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_other_managers'
op|'('
op|')'
newline|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'netmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'volmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'drivermock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'self'
op|'.'
name|'compute_driver'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volmock'
op|'.'
name|'setup_compute_volume'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|'['
name|'i'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'FLAGS'
op|'.'
name|'live_migration_retry_count'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drivermock'
op|'.'
name|'plug_vifs'
op|'('
name|'i_ref'
op|','
name|'fake_nw_info'
op|'('
op|')'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
name|'fake_nw_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_manager'
op|'='
name|'netmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_manager'
op|'='
name|'volmock'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'='
name|'drivermock'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'time'
op|'='
name|'FakeTime'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_works_correctly_with_volume
dedent|''
name|'def'
name|'test_live_migration_works_correctly_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm check_for_export to confirm volume health check."""'
newline|'\n'
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'volume_topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"check_for_export"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'topic'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"pre_live_migration"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk'"
op|':'
name|'None'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'live_migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'post_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'rollback_live_migration'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_raises_exception
dedent|''
name|'def'
name|'test_live_migration_dest_raises_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm exception when pre_live_migration fails."""'
newline|'\n'
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'volume_topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"check_for_export"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'topic'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"pre_live_migration"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk'"
op|':'
name|'None'
op|'}'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
string|"''"
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_update'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'dbmock'
op|'.'
name|'volume_update'
op|'('
name|'c'
op|','
name|'v'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|'}'
op|')'
newline|'\n'
comment|'# mock for volume_api.remove_from_compute'
nl|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"remove_volume"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'volume_id'"
op|':'
name|'v'
op|'['
string|"'id'"
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_raises_exception_no_volume
dedent|''
name|'def'
name|'test_live_migration_dest_raises_exception_no_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Same as above test(input pattern is different) """'
newline|'\n'
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'topic'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"pre_live_migration"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk'"
op|':'
name|'None'
op|'}'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
string|"''"
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_update'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_works_correctly_no_volume
dedent|''
name|'def'
name|'test_live_migration_works_correctly_no_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm live_migration() works as expected correctly."""'
newline|'\n'
name|'i_ref'
op|'='
name|'self'
op|'.'
name|'_get_dummy_instance'
op|'('
op|')'
newline|'\n'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'topic'
op|'='
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'dbmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'db'
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'i_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
name|'dbmock'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'topic'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'topic'
op|','
op|'{'
string|'"method"'
op|':'
string|'"pre_live_migration"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk'"
op|':'
name|'None'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'live_migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'post_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'rollback_live_migration'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'db'
op|'='
name|'dbmock'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_live_migration_working_correctly
dedent|''
name|'def'
name|'test_post_live_migration_working_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm post_live_migration() works as expected correctly."""'
newline|'\n'
name|'dest'
op|'='
string|"'desthost'"
newline|'\n'
name|'flo_addr'
op|'='
string|"'1.2.1.2'"
newline|'\n'
nl|'\n'
comment|'# Preparing datas'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'MIGRATING'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'PAUSED'
op|'}'
op|')'
newline|'\n'
name|'v_ref'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'c'
op|','
op|'{'
string|"'size'"
op|':'
number|'1'
op|','
string|"'instance_id'"
op|':'
name|'instance_id'
op|'}'
op|')'
newline|'\n'
name|'fix_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id'
op|'}'
op|')'
newline|'\n'
name|'fix_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'c'
op|','
name|'fix_addr'
op|')'
newline|'\n'
name|'flo_ref'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'c'
op|','
op|'{'
string|"'address'"
op|':'
name|'flo_addr'
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fix_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
comment|'# reload is necessary before setting mocks'
nl|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_manager'
op|','
nl|'\n'
string|"'remove_compute_volume'"
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'i_ref'
op|'['
string|"'volumes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_manager'
op|'.'
name|'remove_compute_volume'
op|'('
name|'c'
op|','
name|'v'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'unfilter_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'unfilter_instance'
op|'('
name|'i_ref'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'c'
op|','
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'c'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|'"post_live_migration_at_destination"'
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'instance_id'"
op|':'
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|','
string|"'block_migration'"
op|':'
name|'False'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# executing'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'post_live_migration'
op|'('
name|'c'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure every data is rewritten to dest'
nl|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'c'
op|','
name|'i_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|'=='
name|'dest'
op|')'
newline|'\n'
name|'flo_refs'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all_by_host'
op|'('
name|'c'
op|','
name|'dest'
op|')'
newline|'\n'
name|'c2'
op|'='
op|'('
name|'len'
op|'('
name|'flo_refs'
op|')'
op|'!='
number|'0'
name|'and'
name|'flo_refs'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|'=='
name|'flo_addr'
op|')'
newline|'\n'
nl|'\n'
comment|'# post operaton'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'c'
op|','
name|'v_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'c'
op|','
name|'flo_addr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_kill_vm
dedent|''
name|'def'
name|'test_run_kill_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Detect when a vm is terminated behind the scenes"""'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_manager'
op|'.'
name|'ComputeManager'
op|','
nl|'\n'
string|"'_report_driver_status'"
op|','
name|'nop_report_driver_status'
op|')'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Running instances: %s"'
op|')'
op|','
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'instance_name'
op|'='
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'test_remove_vm'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# Force the compute manager to do its periodic poll'
nl|'\n'
name|'error_list'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'periodic_tasks'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'error_list'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"After force-killing instances: %s"'
op|')'
op|','
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|'['
string|"'power_state'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_name_regexp
dedent|''
name|'def'
name|'test_get_all_by_name_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by name (display_name)"""'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"'woot'"
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'woo'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'not-woot'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'30'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'woo.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'woot.*'"
op|'}'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'.*oot.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'n.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'noth.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_instance_name_regexp
dedent|''
name|'def'
name|'test_get_all_by_instance_name_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by name"""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'instance-%d'"
op|')'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'id'"
op|':'
number|'10'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'instance_name'"
op|':'
string|"'instance.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'instance_name'"
op|':'
string|"'.*\\-\\d$'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'instance_name'"
op|':'
string|"'i.*2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_fixed_ip
dedent|''
name|'def'
name|'test_get_by_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting 1 instance by Fixed IP"""'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'id'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'id'"
op|':'
number|'30'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'vif_ref1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'12:34:56:78:90:12'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'90:12:34:56:78:90'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.2.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# regex not allowed'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'fixed_ip'"
op|':'
string|"'.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'fixed_ip'"
op|':'
string|"'1.1.3.1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'fixed_ip'"
op|':'
string|"'1.1.1.1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id1'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'fixed_ip'"
op|':'
string|"'1.1.2.1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_ip_regexp
dedent|''
name|'def'
name|'test_get_all_by_ip_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching by Floating and Fixed IP"""'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"'woot'"
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'woo'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'not-woot'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'30'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'vif_ref1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'12:34:56:78:90:12'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'90:12:34:56:78:90'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref3'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'34:56:78:90:12:34'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id3'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.2.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'fix_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.3.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id3'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref3'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'fix_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'c'
op|','
name|'fix_addr'
op|')'
newline|'\n'
name|'flo_ref'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.2'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fix_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# ends up matching 2nd octet here.. so all 3 match'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*\\.1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'1.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*\\.1.\\d+$'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*\\.2.+'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'10.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref3'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'c'
op|','
string|"'10.0.0.2'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_ipv6_regexp
dedent|''
name|'def'
name|'test_get_all_by_ipv6_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching by IPv6 address"""'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"'woot'"
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'woo'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'not-woot'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'30'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'vif_ref1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'12:34:56:78:90:12'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'90:12:34:56:78:90'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref3'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'34:56:78:90:12:34'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id3'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# This will create IPv6 addresses of:'
nl|'\n'
comment|'# 1: fd00::1034:56ff:fe78:9012'
nl|'\n'
comment|'# 20: fd00::9212:34ff:fe56:7890'
nl|'\n'
comment|'# 30: fd00::3656:78ff:fe90:1234'
nl|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip6'"
op|':'
string|"'.*1034.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id1'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip6'"
op|':'
string|"'^fd00.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id1'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip6'"
op|':'
string|"'^.*12.*34.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref3'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_multiple_options_at_once
dedent|''
name|'def'
name|'test_get_all_by_multiple_options_at_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching by multiple options at once"""'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'display_name'"
op|':'
string|"'woot'"
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'woo'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'not-woot'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'30'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'vif_ref1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'12:34:56:78:90:12'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'90:12:34:56:78:90'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'vif_ref3'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'34:56:78:90:12:34'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id3'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.2.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'fix_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.3.1'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
name|'instance_id3'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif_ref3'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'fix_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'c'
op|','
name|'fix_addr'
op|')'
newline|'\n'
name|'flo_ref'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'c'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.2'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fix_ref'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# ip ends up matching 2nd octet here.. so all 3 match ip'
nl|'\n'
comment|"# but 'name' only matches one"
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*\\.1'"
op|','
string|"'name'"
op|':'
string|"'not.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
comment|"# ip ends up matching any ip with a '2' in it.. so instance"
nl|'\n'
comment|'# 2 and 3.. but name should only match #2'
nl|'\n'
comment|"# but 'name' only matches one"
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*2'"
op|','
string|"'name'"
op|':'
string|"'^woo.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
comment|'# same as above but no match on name (name matches instance_id1'
nl|'\n'
comment|"# but the ip query doesn't"
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*2.*'"
op|','
string|"'name'"
op|':'
string|"'^woot.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# ip matches all 3... ipv6 matches #2+#3...name matches #3'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'.*\\.1'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'not.*'"
op|','
nl|'\n'
string|"'ip6'"
op|':'
string|"'^.*12.*34.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_delete'
op|'('
name|'c'
op|','
name|'vif_ref3'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'c'
op|','
string|"'10.0.0.2'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_image
dedent|''
name|'def'
name|'test_get_all_by_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by image"""'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'image_ref'"
op|':'
string|"'1234'"
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'4567'"
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'4567'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'image'"
op|':'
string|"'123'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'image'"
op|':'
string|"'1234'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id1'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'image'"
op|':'
string|"'4567'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test passing a list as search arg'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'image'"
op|':'
op|'['
string|"'1234'"
op|','
string|"'4567'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_flavor
dedent|''
name|'def'
name|'test_get_all_by_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by image"""'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(comstud): Migrations set up the instance_types table'
nl|'\n'
comment|'# for us.  Therefore, we assume the following is true for'
nl|'\n'
comment|'# these tests:'
nl|'\n'
comment|'# instance_type_id 1 == flavor 3'
nl|'\n'
comment|'# instance_type_id 2 == flavor 1'
nl|'\n'
comment|'# instance_type_id 3 == flavor 4'
nl|'\n'
comment|'# instance_type_id 4 == flavor 5'
nl|'\n'
comment|'# instance_type_id 5 == flavor 2'
nl|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'flavor'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|','
nl|'\n'
name|'c'
op|','
name|'search_opts'
op|'='
op|'{'
string|"'flavor'"
op|':'
number|'99'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'flavor'"
op|':'
number|'3'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id1'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'flavor'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_state
dedent|''
name|'def'
name|'test_get_all_by_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by state"""'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id1'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id2'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test passing a list as search arg'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'power_state'"
op|':'
op|'['
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_metadata
dedent|''
name|'def'
name|'test_get_all_by_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test searching instances by metadata"""'
newline|'\n'
nl|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_id0'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_id1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'instance_id2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'instance_id3'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'key3'"
op|':'
string|"'value3'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'instance_id4'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'key3'"
op|':'
string|"'value3'"
op|','
nl|'\n'
string|"'key4'"
op|':'
string|"'value4'"
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# get all instances'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
comment|'# wrong key/value combination'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key1'"
op|':'
string|"'value3'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# non-existing keys'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key5'"
op|':'
string|"'value1'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# find existing instance'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id2'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key3'"
op|':'
string|"'value3'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_ids'
op|'='
op|'['
name|'instance'
op|'.'
name|'id'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id3'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_id4'
name|'in'
name|'instance_ids'
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple criterias as a dict'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key3'"
op|':'
string|"'value3'"
op|','
nl|'\n'
string|"'key4'"
op|':'
string|"'value4'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id4'
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple criterias as a list'
nl|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|'('
name|'c'
op|','
nl|'\n'
name|'search_opts'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'['
op|'{'
string|"'key4'"
op|':'
string|"'value4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'key3'"
op|':'
string|"'value3'"
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|','
name|'instance_id4'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id0'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id3'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'c'
op|','
name|'instance_id4'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_parse_db_block_device_mapping
name|'def'
name|'_parse_db_block_device_mapping'
op|'('
name|'bdm_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'attr_list'
op|'='
op|'('
string|"'delete_on_termination'"
op|','
string|"'device_name'"
op|','
string|"'no_device'"
op|','
nl|'\n'
string|"'virtual_name'"
op|','
string|"'volume_id'"
op|','
string|"'volume_size'"
op|','
string|"'snapshot_id'"
op|')'
newline|'\n'
name|'bdm'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'attr_list'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'bdm_ref'
op|'.'
name|'get'
op|'('
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'val'
op|':'
newline|'\n'
indent|'                '
name|'bdm'
op|'['
name|'attr'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'bdm'
newline|'\n'
nl|'\n'
DECL|member|test_update_block_device_mapping
dedent|''
name|'def'
name|'test_update_block_device_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swap_size'
op|'='
number|'1'
newline|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'swap'"
op|':'
name|'swap_size'
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'mappings'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'ami'"
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'root'"
op|','
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'swap'"
op|','
string|"'device'"
op|':'
string|"'sdb4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'swap'"
op|','
string|"'device'"
op|':'
string|"'sdb3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'swap'"
op|','
string|"'device'"
op|':'
string|"'sdb2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'swap'"
op|','
string|"'device'"
op|':'
string|"'sdb1'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|','
string|"'device'"
op|':'
string|"'sdc1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'ephemeral1'"
op|','
string|"'device'"
op|':'
string|"'sdc2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual'"
op|':'
string|"'ephemeral2'"
op|','
string|"'device'"
op|':'
string|"'sdc3'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping'
op|'='
op|'['
nl|'\n'
comment|'# root'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sda1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x12345678'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
nl|'\n'
nl|'\n'
comment|'# overwrite swap'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x23456789'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x3456789A'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
nl|'\n'
comment|'# overwrite ephemeral'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc2'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x456789AB'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc3'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x56789ABC'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc4'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
nl|'\n'
comment|'# volume'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdd1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x87654321'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdd2'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0x98765432'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdd3'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'0xA9875463'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdd4'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_update_image_block_device_mapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_type'
op|','
name|'instance_id'
op|','
name|'mappings'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
name|'self'
op|'.'
name|'_parse_db_block_device_mapping'
op|'('
name|'bdm_ref'
op|')'
nl|'\n'
name|'for'
name|'bdm_ref'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
op|']'
newline|'\n'
name|'expected_result'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'swap_size'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdc1'"
op|'}'
op|','
nl|'\n'
nl|'\n'
comment|'# NOTE(yamahata): ATM only ephemeral0 is supported.'
nl|'\n'
comment|"#                 they're ignored for now"
nl|'\n'
comment|"#{'virtual_name': 'ephemeral1', 'device_name': '/dev/sdc2'},"
nl|'\n'
comment|"#{'virtual_name': 'ephemeral2', 'device_name': '/dev/sdc3'}"
nl|'\n'
op|']'
newline|'\n'
name|'bdms'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'expected_result'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListMatch'
op|'('
name|'bdms'
op|','
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_update_block_device_mapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_types'
op|'.'
name|'get_default_instance_type'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'self'
op|'.'
name|'_parse_db_block_device_mapping'
op|'('
name|'bdm_ref'
op|')'
nl|'\n'
name|'for'
name|'bdm_ref'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
op|']'
newline|'\n'
name|'expected_result'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x12345678'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sda1'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'swap_size'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x23456789'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x3456789A'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'no_device'"
op|':'
name|'True'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdc1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x456789AB'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdc2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x56789ABC'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdc3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'no_device'"
op|':'
name|'True'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdc4'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x87654321'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdd1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0x98765432'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdd2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'snapshot_id'"
op|':'
number|'0xA9875463'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdd3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'no_device'"
op|':'
name|'True'
op|','
string|"'device_name'"
op|':'
string|"'/dev/sdd4'"
op|'}'
op|']'
newline|'\n'
name|'bdms'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'expected_result'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListMatch'
op|'('
name|'bdms'
op|','
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ephemeral_size
dedent|''
name|'def'
name|'test_ephemeral_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'local_size'
op|'='
number|'2'
newline|'\n'
name|'inst_type'
op|'='
op|'{'
string|"'local_gb'"
op|':'
name|'local_size'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_ephemeral_size'
op|'('
name|'inst_type'
op|','
nl|'\n'
string|"'ephemeral0'"
op|')'
op|','
nl|'\n'
name|'local_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_ephemeral_size'
op|'('
name|'inst_type'
op|','
nl|'\n'
string|"'ephemeral1'"
op|')'
op|','
nl|'\n'
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
