begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Copyright 2010 OpenStack LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
name|'from'
name|'xml'
op|'.'
name|'etree'
op|'.'
name|'ElementTree'
name|'import'
name|'fromstring'
name|'as'
name|'xml_to_tree'
newline|'\n'
nl|'\n'
name|'import'
name|'fakelibvirt'
name|'as'
name|'libvirt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_vm_xml
name|'def'
name|'get_vm_xml'
op|'('
name|'name'
op|'='
string|'"testname"'
op|','
name|'uuid'
op|'='
name|'None'
op|','
name|'source_type'
op|'='
string|"'file'"
op|','
nl|'\n'
name|'interface_type'
op|'='
string|"'bridge'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'uuid_tag'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'uuid'
op|':'
newline|'\n'
indent|'        '
name|'uuid_tag'
op|'='
string|"'<uuid>%s</uuid>'"
op|'%'
op|'('
name|'uuid'
op|','
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
string|"'''<domain type='kvm'>\n  <name>%(name)s</name>\n%(uuid_tag)s\n  <memory>128000</memory>\n  <vcpu>1</vcpu>\n  <os>\n    <type>hvm</type>\n    <kernel>/somekernel</kernel>\n    <cmdline>root=/dev/sda</cmdline>\n    <boot dev='hd'/>\n  </os>\n  <features>\n    <acpi/>\n  </features>\n  <devices>\n    <disk type='file' device='disk'>\n      <driver name='qemu' type='qcow2'/>\n      <source %(source_type)s='/somefile'/>\n      <target dev='vda' bus='virtio'/>\n    </disk>\n    <interface type='%(interface_type)s'>\n      <mac address='05:26:3e:31:28:1f'/>\n      <source %(interface_type)s='br100'/>\n    </interface>\n    <input type='mouse' bus='ps2'/>\n    <graphics type='vnc' port='5901' autoport='yes' keymap='en-us'/>\n  </devices>\n</domain>'''"
op|'%'
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'uuid_tag'"
op|':'
name|'uuid_tag'
op|','
nl|'\n'
string|"'source_type'"
op|':'
name|'source_type'
op|','
nl|'\n'
string|"'interface_type'"
op|':'
name|'interface_type'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeLibvirtTests
dedent|''
name|'class'
name|'FakeLibvirtTests'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeLibvirtTests'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_openReadOnly_curry_func
dedent|''
name|'def'
name|'get_openReadOnly_curry_func'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'lambda'
name|'uri'
op|':'
name|'libvirt'
op|'.'
name|'openReadOnly'
op|'('
name|'uri'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_openAuth_curry_func
dedent|''
name|'def'
name|'get_openAuth_curry_func'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'lambda'
name|'uri'
op|':'
name|'libvirt'
op|'.'
name|'openAuth'
op|'('
name|'uri'
op|','
nl|'\n'
op|'['
op|'['
name|'libvirt'
op|'.'
name|'VIR_CRED_AUTHNAME'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CRED_NOECHOPROMPT'
op|']'
op|','
nl|'\n'
string|"'root'"
op|','
nl|'\n'
name|'None'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_connect_method_accepts_None_uri_by_default
dedent|''
name|'def'
name|'_test_connect_method_accepts_None_uri_by_default'
op|'('
name|'self'
op|','
name|'conn_method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'conn_method'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'conn'
op|','
name|'None'
op|','
string|'"Connecting to fake libvirt failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openReadOnly_accepts_None_uri_by_default
dedent|''
name|'def'
name|'test_openReadOnly_accepts_None_uri_by_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openReadOnly_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_accepts_None_uri_by_default'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openAuth_accepts_None_uri_by_default
dedent|''
name|'def'
name|'test_openAuth_accepts_None_uri_by_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_accepts_None_uri_by_default'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_connect_method_can_refuse_None_uri
dedent|''
name|'def'
name|'_test_connect_method_can_refuse_None_uri'
op|'('
name|'self'
op|','
name|'conn_method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt'
op|'.'
name|'allow_default_uri_connection'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'Exception'
op|','
name|'conn_method'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openReadOnly_can_refuse_None_uri
dedent|''
name|'def'
name|'test_openReadOnly_can_refuse_None_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openReadOnly_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_can_refuse_None_uri'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openAuth_can_refuse_None_uri
dedent|''
name|'def'
name|'test_openAuth_can_refuse_None_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_can_refuse_None_uri'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_connect_method_refuses_invalid_URI
dedent|''
name|'def'
name|'_test_connect_method_refuses_invalid_URI'
op|'('
name|'self'
op|','
name|'conn_method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'conn_method'
op|','
string|"'blah'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openReadOnly_refuses_invalid_URI
dedent|''
name|'def'
name|'test_openReadOnly_refuses_invalid_URI'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openReadOnly_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_refuses_invalid_URI'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_openAuth_refuses_invalid_URI
dedent|''
name|'def'
name|'test_openAuth_refuses_invalid_URI'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_method'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_connect_method_refuses_invalid_URI'
op|'('
name|'conn_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getInfo
dedent|''
name|'def'
name|'test_getInfo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt'
op|'.'
name|'openReadOnly'
op|'('
name|'None'
op|')'
newline|'\n'
name|'res'
op|'='
name|'conn'
op|'.'
name|'getInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|','
op|'('
string|"'i686'"
op|','
string|"'x86_64'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'1024'
op|'<='
name|'res'
op|'['
number|'1'
op|']'
op|'<='
number|'16384'
op|','
nl|'\n'
string|'"Memory unusually high or low."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'1'
op|'<='
name|'res'
op|'['
number|'2'
op|']'
op|'<='
number|'32'
op|','
nl|'\n'
string|'"Active CPU count unusually high or low."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'800'
op|'<='
name|'res'
op|'['
number|'3'
op|']'
op|'<='
number|'4500'
op|','
nl|'\n'
string|'"CPU speed unusually high or low."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'['
number|'2'
op|']'
op|'<='
op|'('
name|'res'
op|'['
number|'5'
op|']'
op|'*'
name|'res'
op|'['
number|'6'
op|']'
op|')'
op|','
nl|'\n'
string|'"More active CPUs than num_sockets*cores_per_socket"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_createXML_detects_invalid_xml
dedent|''
name|'def'
name|'test_createXML_detects_invalid_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_XML_func_detects_invalid_xml'
op|'('
string|"'createXML'"
op|','
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_defineXML_detects_invalid_xml
dedent|''
name|'def'
name|'test_defineXML_detects_invalid_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_XML_func_detects_invalid_xml'
op|'('
string|"'defineXML'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_XML_func_detects_invalid_xml
dedent|''
name|'def'
name|'_test_XML_func_detects_invalid_xml'
op|'('
name|'self'
op|','
name|'xmlfunc_name'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'conn'
op|','
name|'xmlfunc_name'
op|')'
op|'('
string|'"this is not valid </xml>"'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_ERR_XML_DETAIL'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_domain'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_DOMAIN'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'failureException'
op|'('
string|'"Invalid XML didn\'t raise libvirtError"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_defineXML_defines_domain
dedent|''
name|'def'
name|'test_defineXML_defines_domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'testname'"
op|','
name|'dom'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'dom'
op|'.'
name|'isActive'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'lookupByName'
op|','
nl|'\n'
string|"'testname'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_blockStats
dedent|''
name|'def'
name|'test_blockStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'createXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'blockstats'
op|'='
name|'dom'
op|'.'
name|'blockStats'
op|'('
string|"'vda'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'blockstats'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'blockstats'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'type'
op|'('
name|'x'
op|')'
name|'in'
op|'['
name|'int'
op|','
name|'long'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_detach
dedent|''
dedent|''
name|'def'
name|'test_attach_detach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'createXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'xml'
op|'='
string|"'''<disk type='block'>\n                   <driver name='qemu' type='raw'/>\n                   <source dev='/dev/nbd0'/>\n                   <target dev='/dev/vdc' bus='virtio'/>\n                 </disk>'''"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'dom'
op|'.'
name|'attachDevice'
op|'('
name|'xml'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'dom'
op|'.'
name|'detachDevice'
op|'('
name|'xml'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_info
dedent|''
name|'def'
name|'test_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'createXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'info'
op|'='
name|'dom'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|','
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|','
number|'128000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'info'
op|'['
number|'2'
op|']'
op|'<='
number|'128000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'3'
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'type'
op|'('
name|'info'
op|'['
number|'4'
op|']'
op|')'
name|'in'
op|'['
name|'int'
op|','
name|'long'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_createXML_runs_domain
dedent|''
name|'def'
name|'test_createXML_runs_domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'createXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'testname'"
op|','
name|'dom'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'dom'
op|'.'
name|'isActive'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'libvirt'
op|'.'
name|'libvirtError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_domain'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
string|'"lookupByName succeeded for destroyed non-defined VM"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_defineXML_remembers_uuid
dedent|''
name|'def'
name|'test_defineXML_remembers_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'b21f957d-a72f-4b93-b5a5-45b1161abb02'"
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dom'
op|'.'
name|'UUIDString'
op|'('
op|')'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_createWithFlags
dedent|''
name|'def'
name|'test_createWithFlags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'dom'
op|'.'
name|'isActive'
op|'('
op|')'
op|','
string|"'Defined domain was running.'"
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'createWithFlags'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'dom'
op|'.'
name|'isActive'
op|'('
op|')'
op|','
nl|'\n'
string|"'Domain wasn\\'t running after createWithFlags'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_managedSave
dedent|''
name|'def'
name|'test_managedSave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'dom'
op|'.'
name|'isActive'
op|'('
op|')'
op|','
string|"'Defined domain was running.'"
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'createWithFlags'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dom'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'managedSave'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dom'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'managedSaveRemove'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dom'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_listDomainsId_and_lookupById
dedent|''
name|'def'
name|'test_listDomainsId_and_lookupById'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'createWithFlags'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'dom_id'
op|'='
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'lookupByID'
op|'('
name|'dom_id'
op|')'
op|','
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'dom_id'
op|'='
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'lookupByID'
op|'('
name|'dom_id'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_domain'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'failureException'
op|'('
string|'"Looking up an invalid domain ID didn\'t "'
nl|'\n'
string|'"raise libvirtError"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_define_and_retrieve
dedent|''
name|'def'
name|'test_define_and_retrieve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'xml'
op|'='
name|'dom'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
newline|'\n'
name|'xml_to_tree'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_accepts_source_type
dedent|''
name|'def'
name|'_test_accepts_source_type'
op|'('
name|'self'
op|','
name|'source_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
name|'source_type'
op|'='
name|'source_type'
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'xml'
op|'='
name|'dom'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'xml_to_tree'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'elem'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/source'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'elem'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|','
string|"'/somefile'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accepts_source_dev
dedent|''
name|'def'
name|'test_accepts_source_dev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_accepts_source_type'
op|'('
string|"'dev'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accepts_source_path
dedent|''
name|'def'
name|'test_accepts_source_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_accepts_source_type'
op|'('
string|"'path'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_type_bridge_sticks
dedent|''
name|'def'
name|'test_network_type_bridge_sticks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_network_type_sticks'
op|'('
string|"'bridge'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_type_network_sticks
dedent|''
name|'def'
name|'test_network_type_network_sticks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_network_type_sticks'
op|'('
string|"'network'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_network_type_sticks
dedent|''
name|'def'
name|'_test_network_type_sticks'
op|'('
name|'self'
op|','
name|'network_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'listDomainsID'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'defineXML'
op|'('
name|'get_vm_xml'
op|'('
name|'interface_type'
op|'='
name|'network_type'
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'conn'
op|'.'
name|'lookupByName'
op|'('
string|"'testname'"
op|')'
newline|'\n'
name|'xml'
op|'='
name|'dom'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'xml_to_tree'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'elem'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./devices/interface'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'elem'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
name|'network_type'
op|')'
newline|'\n'
name|'elem'
op|'='
name|'elem'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'elem'
op|'.'
name|'get'
op|'('
name|'network_type'
op|')'
op|','
string|"'br100'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getType
dedent|''
name|'def'
name|'test_getType'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'getType'
op|'('
op|')'
op|','
string|"'QEMU'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getVersion
dedent|''
name|'def'
name|'test_getVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'type'
op|'('
name|'conn'
op|'.'
name|'getVersion'
op|'('
op|')'
op|')'
name|'is'
name|'int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getCapabilities
dedent|''
name|'def'
name|'test_getCapabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
name|'xml_to_tree'
op|'('
name|'conn'
op|'.'
name|'getCapabilities'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nwfilter_define_undefine
dedent|''
name|'def'
name|'test_nwfilter_define_undefine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
comment|"# Will raise an exception if it's not valid XML"
nl|'\n'
name|'xml'
op|'='
string|"'''<filter name='nova-instance-instance-789' chain='root'>\n                    <uuid>946878c6-3ad3-82b2-87f3-c709f3807f58</uuid>\n                 </filter>'''"
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'nwfilterDefineXML'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'nwfilter'
op|'='
name|'conn'
op|'.'
name|'nwfilterLookupByName'
op|'('
string|"'nova-instance-instance-789'"
op|')'
newline|'\n'
name|'nwfilter'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'nwfilterLookupByName'
op|'('
string|"'nova-instance-instance-789320334'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_NWFILTER'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'get_error_domain'
op|'('
op|')'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_NWFILTER'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'raise'
name|'self'
op|'.'
name|'failureException'
op|'('
string|'"Invalid NWFilter name didn\'t"'
nl|'\n'
string|'" raise libvirtError"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compareCPU_compatible
dedent|''
name|'def'
name|'test_compareCPU_compatible'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
string|'\'\'\'<cpu>\n                   <arch>%s</arch>\n                   <model>%s</model>\n                   <vendor>%s</vendor>\n                   <topology sockets="%d" cores="%d" threads="%d"/>\n                 </cpu>\'\'\''
op|'%'
op|'('
name|'libvirt'
op|'.'
name|'node_arch'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_model'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_vendor'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_sockets'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cores'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'compareCPU'
op|'('
name|'xml'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CPU_COMPARE_IDENTICAL'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compareCPU_incompatible_vendor
dedent|''
name|'def'
name|'test_compareCPU_incompatible_vendor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
string|'\'\'\'<cpu>\n                   <arch>%s</arch>\n                   <model>%s</model>\n                   <vendor>%s</vendor>\n                   <topology sockets="%d" cores="%d" threads="%d"/>\n                 </cpu>\'\'\''
op|'%'
op|'('
name|'libvirt'
op|'.'
name|'node_arch'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_model'
op|','
nl|'\n'
string|'"AnotherVendor"'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_sockets'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cores'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'compareCPU'
op|'('
name|'xml'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compareCPU_incompatible_arch
dedent|''
name|'def'
name|'test_compareCPU_incompatible_arch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
string|'\'\'\'<cpu>\n                   <arch>%s</arch>\n                   <model>%s</model>\n                   <vendor>%s</vendor>\n                   <topology sockets="%d" cores="%d" threads="%d"/>\n                 </cpu>\'\'\''
op|'%'
op|'('
string|"'not-a-valid-arch'"
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_model'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_vendor'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_sockets'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cores'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'compareCPU'
op|'('
name|'xml'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compareCPU_incompatible_model
dedent|''
name|'def'
name|'test_compareCPU_incompatible_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
string|'\'\'\'<cpu>\n                   <arch>%s</arch>\n                   <model>%s</model>\n                   <vendor>%s</vendor>\n                   <topology sockets="%d" cores="%d" threads="%d"/>\n                 </cpu>\'\'\''
op|'%'
op|'('
name|'libvirt'
op|'.'
name|'node_arch'
op|','
nl|'\n'
string|'"AnotherModel"'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_vendor'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_sockets'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cores'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'compareCPU'
op|'('
name|'xml'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compareCPU_compatible_unspecified_model
dedent|''
name|'def'
name|'test_compareCPU_compatible_unspecified_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_openAuth_curry_func'
op|'('
op|')'
op|'('
string|"'qemu:///system'"
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
string|'\'\'\'<cpu>\n                   <arch>%s</arch>\n                   <vendor>%s</vendor>\n                   <topology sockets="%d" cores="%d" threads="%d"/>\n                 </cpu>\'\'\''
op|'%'
op|'('
name|'libvirt'
op|'.'
name|'node_arch'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cpu_vendor'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_sockets'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_cores'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'node_threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'compareCPU'
op|'('
name|'xml'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_CPU_COMPARE_IDENTICAL'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
