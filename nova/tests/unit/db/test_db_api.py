begin_unit
comment|'# encoding=UTF8'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for the DB API."""'
newline|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
name|'import'
name|'uuid'
name|'as'
name|'stdlib_uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'iso8601'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'db'
name|'import'
name|'exception'
name|'as'
name|'db_exc'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'sqlalchemyutils'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'sqlite'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'inspect'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Integer'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'query'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'sql'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Table'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'sqlalchemy_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'types'
name|'as'
name|'col_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'db_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'reserved_host_memory_mb'"
op|','
string|"'nova.compute.resource_tracker'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'reserved_host_disk_mb'"
op|','
string|"'nova.compute.resource_tracker'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|get_engine
name|'get_engine'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'get_engine'
newline|'\n'
DECL|variable|get_session
name|'get_session'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'get_session'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reservation_get
name|'def'
name|'_reservation_get'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|'('
name|'context'
op|','
name|'models'
op|'.'
name|'Reservation'
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'result'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ReservationNotFound'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_quota_reserve
dedent|''
name|'def'
name|'_quota_reserve'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create sample Quota, QuotaUsage and Reservation objects.\n\n    There is no method db.quota_usage_create(), so we have to use\n    db.quota_reserve() for creating QuotaUsage objects.\n\n    Returns reservations uuids.\n\n    """'
newline|'\n'
DECL|function|get_sync
name|'def'
name|'get_sync'
op|'('
name|'resource'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
DECL|function|sync
indent|'        '
name|'def'
name|'sync'
op|'('
name|'elevated'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
name|'resource'
op|':'
name|'usage'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'sync'
newline|'\n'
dedent|''
name|'quotas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'user_quotas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'resources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'deltas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource'
op|'='
string|"'resource%d'"
op|'%'
name|'i'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|'# test for project level resources'
nl|'\n'
indent|'            '
name|'resource'
op|'='
string|"'fixed_ips'"
newline|'\n'
name|'quotas'
op|'['
name|'resource'
op|']'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'context'
op|','
nl|'\n'
name|'project_id'
op|','
name|'resource'
op|','
name|'i'
op|')'
newline|'\n'
name|'user_quotas'
op|'['
name|'resource'
op|']'
op|'='
name|'quotas'
op|'['
name|'resource'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'quotas'
op|'['
name|'resource'
op|']'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'context'
op|','
nl|'\n'
name|'project_id'
op|','
name|'resource'
op|','
name|'i'
op|')'
newline|'\n'
name|'user_quotas'
op|'['
name|'resource'
op|']'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'context'
op|','
name|'project_id'
op|','
nl|'\n'
name|'resource'
op|','
name|'i'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
dedent|''
name|'sync_name'
op|'='
string|"'_sync_%s'"
op|'%'
name|'resource'
newline|'\n'
name|'resources'
op|'['
name|'resource'
op|']'
op|'='
name|'quota'
op|'.'
name|'ReservableResource'
op|'('
nl|'\n'
name|'resource'
op|','
name|'sync_name'
op|','
string|"'quota_res_%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'deltas'
op|'['
name|'resource'
op|']'
op|'='
name|'i'
newline|'\n'
name|'setattr'
op|'('
name|'sqlalchemy_api'
op|','
name|'sync_name'
op|','
name|'get_sync'
op|'('
name|'resource'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'QUOTA_SYNC_FUNCTIONS'
op|'['
name|'sync_name'
op|']'
op|'='
name|'getattr'
op|'('
nl|'\n'
name|'sqlalchemy_api'
op|','
name|'sync_name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'db'
op|'.'
name|'quota_reserve'
op|'('
name|'context'
op|','
name|'resources'
op|','
name|'quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
nl|'\n'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
name|'CONF'
op|'.'
name|'until_refresh'
op|','
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'days'
op|'='
number|'1'
op|')'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbTestCase
dedent|''
name|'class'
name|'DbTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DbTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_instance_with_args
dedent|''
name|'def'
name|'create_instance_with_args'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
string|"'image_ref'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'node'"
op|':'
string|"'node1'"
op|','
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'if'
string|"'context'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'context'"
op|')'
newline|'\n'
name|'args'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'ctxt'
op|'.'
name|'project_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
dedent|''
name|'args'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_metadata
dedent|''
name|'def'
name|'fake_metadata'
op|'('
name|'self'
op|','
name|'content'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'['
string|'"foo%i"'
op|'%'
name|'i'
op|']'
op|'='
string|'"this is %s item %i"'
op|'%'
op|'('
name|'content'
op|','
name|'i'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'meta'
newline|'\n'
nl|'\n'
DECL|member|create_metadata_for_instance
dedent|''
name|'def'
name|'create_metadata_for_instance'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_metadata_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'meta'
op|','
name|'False'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'sys_meta'
op|','
name|'False'
op|')'
newline|'\n'
name|'return'
name|'meta'
op|','
name|'sys_meta'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DecoratorTestCase
dedent|''
dedent|''
name|'class'
name|'DecoratorTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_test_decorator_wraps_helper
indent|'    '
name|'def'
name|'_test_decorator_wraps_helper'
op|'('
name|'self'
op|','
name|'decorator'
op|')'
op|':'
newline|'\n'
DECL|function|test_func
indent|'        '
name|'def'
name|'test_func'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Test docstring."""'
newline|'\n'
nl|'\n'
dedent|''
name|'decorated_func'
op|'='
name|'decorator'
op|'('
name|'test_func'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_func'
op|'.'
name|'func_name'
op|','
name|'decorated_func'
op|'.'
name|'func_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_func'
op|'.'
name|'__doc__'
op|','
name|'decorated_func'
op|'.'
name|'__doc__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_func'
op|'.'
name|'__module__'
op|','
name|'decorated_func'
op|'.'
name|'__module__'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_require_context_decorator_wraps_functions_properly
dedent|''
name|'def'
name|'test_require_context_decorator_wraps_functions_properly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_decorator_wraps_helper'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'require_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_require_admin_context_decorator_wraps_functions_properly
dedent|''
name|'def'
name|'test_require_admin_context_decorator_wraps_functions_properly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_decorator_wraps_helper'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'require_admin_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_require_deadlock_retry_wraps_functions_properly
dedent|''
name|'def'
name|'test_require_deadlock_retry_wraps_functions_properly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_decorator_wraps_helper'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_retry_on_deadlock'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_values
dedent|''
dedent|''
name|'def'
name|'_get_fake_aggr_values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_metadata
dedent|''
name|'def'
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'fake_key1'"
op|':'
string|"'fake_value1'"
op|','
nl|'\n'
string|"'fake_key2'"
op|':'
string|"'fake_value2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_aggr_hosts
dedent|''
name|'def'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'foo.openstack.org'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate
dedent|''
name|'def'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_aggregate_with_hosts
dedent|''
name|'def'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'context'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NotDbApiTestCase
dedent|''
name|'class'
name|'NotDbApiTestCase'
op|'('
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NotDbApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection'
op|'='
string|"'notdb://'"
op|','
name|'group'
op|'='
string|"'database'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_regex_unsupported_db
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_regex_unsupported_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Ensure that the 'LIKE' operator is used for unsupported dbs."
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'diff'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'di'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_paginate
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_paginate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'test2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test2'"
op|')'
newline|'\n'
name|'test3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test3'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|'"asc"'
op|','
nl|'\n'
name|'marker'
op|'='
name|'test3'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MarkerNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
op|','
nl|'\n'
name|'marker'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_equals_inst_order
dedent|''
name|'def'
name|'_assert_equals_inst_order'
op|'('
name|'self'
op|','
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'match_keys'
op|'='
op|'['
string|"'uuid'"
op|','
string|"'vm_state'"
op|','
nl|'\n'
string|"'display_name'"
op|','
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Retrieves instances based on the given filters and sorting\n        information and verifies that the instances are returned in the\n        correct sorted order by ensuring that the supplied keys match.\n        '''"
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters_sort'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
name|'limit'
op|'='
name|'limit'
op|','
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'correct_order'
op|')'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'for'
name|'inst1'
op|','
name|'inst2'
name|'in'
name|'zip'
op|'('
name|'result'
op|','
name|'correct_order'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'match_keys'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst1'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'inst2'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_sort_keys
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_sort_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies sort order and direction for multiple instances.'''"
newline|'\n'
comment|'# Instances that will reply to the query'
nl|'\n'
name|'test1_active'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'test1_error'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test1_error2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test2_active'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'test2_error'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test2_error2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
comment|'# Other instances in the DB, will not match name filter'
nl|'\n'
name|'other_error'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'other'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'other_active'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'other'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Verify different sort key/direction combinations'
nl|'\n'
name|'sort_keys'
op|'='
op|'['
string|"'display_name'"
op|','
string|"'vm_state'"
op|','
string|"'created_at'"
op|']'
newline|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|']'
newline|'\n'
name|'correct_order'
op|'='
op|'['
name|'test1_active'
op|','
name|'test1_error'
op|','
name|'test1_error2'
op|','
nl|'\n'
name|'test2_active'
op|','
name|'test2_error'
op|','
name|'test2_error2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'asc'"
op|']'
newline|'\n'
name|'correct_order'
op|'='
op|'['
name|'test1_error'
op|','
name|'test1_error2'
op|','
name|'test1_active'
op|','
nl|'\n'
name|'test2_error'
op|','
name|'test2_error2'
op|','
name|'test2_active'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'desc'"
op|','
string|"'desc'"
op|','
string|"'asc'"
op|']'
newline|'\n'
name|'correct_order'
op|'='
op|'['
name|'test2_error'
op|','
name|'test2_error2'
op|','
name|'test2_active'
op|','
nl|'\n'
name|'test1_error'
op|','
name|'test1_error2'
op|','
name|'test1_active'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# created_at is added by default if not supplied, descending order'
nl|'\n'
name|'sort_keys'
op|'='
op|'['
string|"'display_name'"
op|','
string|"'vm_state'"
op|']'
newline|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'desc'"
op|','
string|"'desc'"
op|']'
newline|'\n'
name|'correct_order'
op|'='
op|'['
name|'test2_error2'
op|','
name|'test2_error'
op|','
name|'test2_active'
op|','
nl|'\n'
name|'test1_error2'
op|','
name|'test1_error'
op|','
name|'test1_active'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now created_at should be in ascending order (defaults to the first'
nl|'\n'
comment|'# sort dir direction)'
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|']'
newline|'\n'
name|'correct_order'
op|'='
op|'['
name|'test1_active'
op|','
name|'test1_error'
op|','
name|'test1_error2'
op|','
nl|'\n'
name|'test2_active'
op|','
name|'test2_error'
op|','
name|'test2_error2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# Remove name filter, get all instances'
nl|'\n'
name|'correct_order'
op|'='
op|'['
name|'other_active'
op|','
name|'other_error'
op|','
nl|'\n'
name|'test1_active'
op|','
name|'test1_error'
op|','
name|'test1_error2'
op|','
nl|'\n'
name|'test2_active'
op|','
name|'test2_error'
op|','
name|'test2_error2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|"# Default sorting, 'created_at' then 'id' in desc order"
nl|'\n'
name|'correct_order'
op|'='
op|'['
name|'other_active'
op|','
name|'other_error'
op|','
nl|'\n'
name|'test2_error2'
op|','
name|'test2_error'
op|','
name|'test2_active'
op|','
nl|'\n'
name|'test1_error2'
op|','
name|'test1_error'
op|','
name|'test1_active'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
name|'correct_order'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_sort_keys_paginate
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_sort_keys_paginate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies sort order with pagination.'''"
newline|'\n'
comment|'# Instances that will reply to the query'
nl|'\n'
name|'test1_active'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'test1_error'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test1_error2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test1'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test2_active'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'test2_error'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'test2_error2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'display_name'
op|'='
string|"'test2'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
comment|'# Other instances in the DB, will not match name filter'
nl|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'other'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'other'"
op|')'
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'display_name'"
op|':'
string|"'%test%'"
op|'}'
newline|'\n'
comment|'# Common sort information for every query'
nl|'\n'
name|'sort_keys'
op|'='
op|'['
string|"'display_name'"
op|','
string|"'vm_state'"
op|','
string|"'created_at'"
op|']'
newline|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'asc'"
op|']'
newline|'\n'
comment|'# Overall correct instance order based on the sort keys'
nl|'\n'
name|'correct_order'
op|'='
op|'['
name|'test1_error'
op|','
name|'test1_error2'
op|','
name|'test1_active'
op|','
nl|'\n'
name|'test2_error'
op|','
name|'test2_error2'
op|','
name|'test2_active'
op|']'
newline|'\n'
nl|'\n'
comment|'# Limits of 1, 2, and 3, verify that the instances returned are in the'
nl|'\n'
comment|'# correct sorted order, update the marker to get the next correct page'
nl|'\n'
name|'for'
name|'limit'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
name|'None'
newline|'\n'
comment|'# Include the maximum number of instances (ie, 6) to ensure that'
nl|'\n'
comment|'# the last query (with marker pointing to the last instance)'
nl|'\n'
comment|'# returns 0 servers'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'7'
op|','
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'i'
op|'=='
name|'len'
op|'('
name|'correct_order'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'correct'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'correct'
op|'='
name|'correct_order'
op|'['
name|'i'
op|':'
name|'i'
op|'+'
name|'limit'
op|']'
newline|'\n'
dedent|''
name|'insts'
op|'='
name|'self'
op|'.'
name|'_assert_equals_inst_order'
op|'('
nl|'\n'
name|'correct'
op|','
name|'filters'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sort_dirs'
op|','
nl|'\n'
name|'limit'
op|'='
name|'limit'
op|','
name|'marker'
op|'='
name|'marker'
op|')'
newline|'\n'
name|'if'
name|'correct'
op|':'
newline|'\n'
indent|'                    '
name|'marker'
op|'='
name|'insts'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'correct'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'marker'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_sort_key_invalid
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_sort_key_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''InvalidSortKey raised if an invalid key is given.'''"
newline|'\n'
name|'for'
name|'keys'
name|'in'
op|'['
op|'['
string|"'foo'"
op|']'
op|','
op|'['
string|"'uuid'"
op|','
string|"'foo'"
op|']'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSortKey'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters_sort'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'filters'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_convert_objects_related_datetimes
dedent|''
dedent|''
name|'def'
name|'test_convert_objects_related_datetimes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'t1'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'t2'
op|'='
name|'t1'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'t3'
op|'='
name|'t2'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'hours'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'t2_utc'
op|'='
name|'t2'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'t3_utc'
op|'='
name|'t3'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'datetime_keys'
op|'='
op|'('
string|"'created_at'"
op|','
string|"'deleted_at'"
op|')'
newline|'\n'
nl|'\n'
name|'test1'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'t1'
op|','
string|"'deleted_at'"
op|':'
name|'t2'
op|','
string|"'updated_at'"
op|':'
name|'t3'
op|'}'
newline|'\n'
name|'expected_dict'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'t1'
op|','
string|"'deleted_at'"
op|':'
name|'t2'
op|','
string|"'updated_at'"
op|':'
name|'t3'
op|'}'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'convert_objects_related_datetimes'
op|'('
name|'test1'
op|','
op|'*'
name|'datetime_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test1'
op|','
name|'expected_dict'
op|')'
newline|'\n'
nl|'\n'
name|'test2'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'t1'
op|','
string|"'deleted_at'"
op|':'
name|'t2_utc'
op|','
string|"'updated_at'"
op|':'
name|'t3'
op|'}'
newline|'\n'
name|'expected_dict'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'t1'
op|','
string|"'deleted_at'"
op|':'
name|'t2'
op|','
string|"'updated_at'"
op|':'
name|'t3'
op|'}'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'convert_objects_related_datetimes'
op|'('
name|'test2'
op|','
op|'*'
name|'datetime_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test2'
op|','
name|'expected_dict'
op|')'
newline|'\n'
nl|'\n'
name|'test3'
op|'='
op|'{'
string|"'deleted_at'"
op|':'
name|'t2_utc'
op|','
string|"'updated_at'"
op|':'
name|'t3_utc'
op|'}'
newline|'\n'
name|'expected_dict'
op|'='
op|'{'
string|"'deleted_at'"
op|':'
name|'t2'
op|','
string|"'updated_at'"
op|':'
name|'t3_utc'
op|'}'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'convert_objects_related_datetimes'
op|'('
name|'test3'
op|','
op|'*'
name|'datetime_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test3'
op|','
name|'expected_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_model_query_invalid_arguments
dedent|''
name|'def'
name|'test_model_query_invalid_arguments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# read_deleted shouldn't accept invalid values"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'read_deleted'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
name|'read_deleted'
op|'='
string|'"foo"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check model is a valid model'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|'""'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'get_session'"
op|')'
newline|'\n'
DECL|member|test_model_query_use_slave_false
name|'def'
name|'test_model_query_use_slave_false'
op|'('
name|'self'
op|','
name|'mock_get_session'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'mock_get_session'
op|'.'
name|'assert_called_once_with'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'get_session'"
op|')'
newline|'\n'
DECL|member|test_model_query_use_slave_no_slave_connection
name|'def'
name|'test_model_query_use_slave_no_slave_connection'
op|'('
name|'self'
op|','
name|'mock_get_session'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'slave_connection'
op|'='
string|"''"
op|','
name|'group'
op|'='
string|"'database'"
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_get_session'
op|'.'
name|'assert_called_once_with'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'get_session'"
op|')'
newline|'\n'
DECL|member|test_model_query_use_slave_true
name|'def'
name|'test_model_query_use_slave_true'
op|'('
name|'self'
op|','
name|'mock_get_session'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'slave_connection'
op|'='
string|"'foo://bar'"
op|','
name|'group'
op|'='
string|"'database'"
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_get_session'
op|'.'
name|'assert_called_once_with'
op|'('
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'get_session'"
op|')'
newline|'\n'
DECL|member|test_model_query_lazy_session_default
name|'def'
name|'test_model_query_lazy_session_default'
op|'('
name|'self'
op|','
name|'mock_get_session'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sqlalchemy_api'
op|'.'
name|'model_query'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'models'
op|'.'
name|'Instance'
op|','
nl|'\n'
name|'session'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_get_session'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'AggregateDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AggregateDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_no_metadata
dedent|''
name|'def'
name|'test_aggregate_create_no_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'name'"
op|']'
op|','
string|"'fake_aggregate'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_avoid_name_conflict
dedent|''
name|'def'
name|'test_aggregate_create_avoid_name_conflict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r1'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'r1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
name|'r1'
op|'['
string|"'name'"
op|']'
op|'}'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'new_zone'"
op|'}'
newline|'\n'
name|'r2'
op|'='
name|'_create_aggregate'
op|'('
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r2'
op|'['
string|"'name'"
op|']'
op|','
name|'values'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r2'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_create_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNameExists'
op|','
nl|'\n'
name|'_create_aggregate'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_get_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_with_metadata
dedent|''
name|'def'
name|'test_aggregate_create_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected_metadata'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_create_delete_create_with_metadata
dedent|''
name|'def'
name|'test_aggregate_create_delete_create_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test for bug 1052479'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected_metadata'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'expected_metadata'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_metadata'
op|','
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get
dedent|''
name|'def'
name|'test_aggregate_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|','
name|'expected'
op|'['
string|"'hosts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_metadata'
op|'('
op|')'
op|','
name|'expected'
op|'['
string|"'metadetails'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host
dedent|''
name|'def'
name|'test_aggregate_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values3'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'values4'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate4'"
op|'}'
newline|'\n'
name|'values5'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate5'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'a2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|')'
newline|'\n'
comment|'# a3 has no hosts and should not be in the results.'
nl|'\n'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values3'
op|')'
newline|'\n'
comment|'# a4 has no matching hosts.'
nl|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values4'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'foo4.openstack.org'"
op|']'
op|')'
newline|'\n'
comment|'# a5 has no matching hosts after deleting the only matching host.'
nl|'\n'
name|'a5'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values5'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'foo5.openstack.org'"
op|','
string|"'foo.openstack.org'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'a5'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'foo.openstack.org'"
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'a1'
op|'['
string|"'id'"
op|']'
op|','
name|'a2'
op|'['
string|"'id'"
op|']'
op|']'
op|','
op|'['
name|'x'
op|'['
string|"'id'"
op|']'
name|'for'
name|'x'
name|'in'
name|'r1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host_with_key
dedent|''
name|'def'
name|'test_aggregate_get_by_host_with_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values3'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'values4'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate4'"
op|'}'
newline|'\n'
name|'a1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'goodkey'"
op|':'
string|"'good'"
op|'}'
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|')'
newline|'\n'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values3'
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values4'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'foo4.openstack.org'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'goodkey'"
op|':'
string|"'bad'"
op|'}'
op|')'
newline|'\n'
comment|'# filter result by key'
nl|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|','
name|'key'
op|'='
string|"'goodkey'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'a1'
op|'['
string|"'id'"
op|']'
op|']'
op|','
op|'['
name|'x'
op|'['
string|"'id'"
op|']'
name|'for'
name|'x'
name|'in'
name|'r1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate3'"
op|'}'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'bar.openstack.org'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'badkey'"
op|':'
string|"'bad'"
op|'}'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo.openstack.org'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|'['
string|"'fake_key1'"
op|']'
op|','
name|'set'
op|'('
op|'['
string|"'fake_value1'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'badkey'"
op|','
name|'r1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_metadata_key
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_metadata_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'aggregate_id'"
op|':'
string|"'fake_id'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_aggregate'"
op|'}'
newline|'\n'
name|'aggr'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'bar.openstack.org'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'az1'"
op|'}'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_metadata_key'
op|'('
name|'ctxt'
op|','
name|'aggr'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'availability_zone'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'set'
op|'('
op|'['
string|"'az1'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'availability_zone'"
op|','
name|'r1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'name'"
op|','
name|'r1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_get_by_host_with_key
dedent|''
name|'def'
name|'test_aggregate_metadata_get_by_host_with_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate12'"
op|'}'
newline|'\n'
name|'values3'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate23'"
op|'}'
newline|'\n'
name|'a2_hosts'
op|'='
op|'['
string|"'foo1.openstack.org'"
op|','
string|"'foo2.openstack.org'"
op|']'
newline|'\n'
name|'a2_metadata'
op|'='
op|'{'
string|"'good'"
op|':'
string|"'value12'"
op|','
string|"'bad'"
op|':'
string|"'badvalue12'"
op|'}'
newline|'\n'
name|'a3_hosts'
op|'='
op|'['
string|"'foo2.openstack.org'"
op|','
string|"'foo3.openstack.org'"
op|']'
newline|'\n'
name|'a3_metadata'
op|'='
op|'{'
string|"'good'"
op|':'
string|"'value23'"
op|','
string|"'bad'"
op|':'
string|"'badvalue23'"
op|'}'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values2'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'a2_hosts'
op|','
name|'metadata'
op|'='
name|'a2_metadata'
op|')'
newline|'\n'
name|'a3'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
name|'values3'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'a3_hosts'
op|','
name|'metadata'
op|'='
name|'a3_metadata'
op|')'
newline|'\n'
name|'r1'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo2.openstack.org'"
op|','
nl|'\n'
name|'key'
op|'='
string|"'good'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r1'
op|'['
string|"'good'"
op|']'
op|','
name|'set'
op|'('
op|'['
string|"'value12'"
op|','
string|"'value23'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'fake_key1'"
op|','
name|'r1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'bad'"
op|','
name|'r1'
op|')'
newline|'\n'
comment|'# Delete metadata'
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'a3'
op|'['
string|"'id'"
op|']'
op|','
string|"'good'"
op|')'
newline|'\n'
name|'r2'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'foo3.openstack.org'"
op|','
nl|'\n'
name|'key'
op|'='
string|"'good'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'good'"
op|','
name|'r2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host_not_found
dedent|''
name|'def'
name|'test_aggregate_get_by_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'db'
op|'.'
name|'aggregate_get_by_host'
op|'('
name|'ctxt'
op|','
string|"'unknown_host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_delete
dedent|''
name|'def'
name|'test_aggregate_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
op|','
nl|'\n'
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'aggregate'
op|'['
string|"'deleted'"
op|']'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update
dedent|''
name|'def'
name|'test_aggregate_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
string|"'fake_avail_zone'"
op|')'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'new_values'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'different_avail_zone'"
newline|'\n'
name|'updated'
op|'='
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'updated'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'different_avail_zone'"
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'updated'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'values'
op|'['
string|"'metadata'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'result'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'updated'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_with_existing_metadata
dedent|''
name|'def'
name|'test_aggregate_update_with_existing_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'fake_key1'"
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'values'
op|'['
string|"'metadata'"
op|']'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_zone_with_existing_metadata
dedent|''
name|'def'
name|'test_aggregate_update_zone_with_existing_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'new_zone'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone_2'"
op|'}'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'new_zone'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'new_zone'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_update_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'new_values'
op|'='
name|'_get_fake_aggr_values'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|','
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'new_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_update_raise_name_exist
dedent|''
name|'def'
name|'test_aggregate_update_raise_name_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test1'"
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test2'"
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'new_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNameExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_update'
op|','
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'new_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all
dedent|''
name|'def'
name|'test_aggregate_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'counter'
op|'='
number|'3'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'range'
op|'('
name|'counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_all_non_deleted
dedent|''
name|'def'
name|'test_aggregate_get_all_non_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'add_counter'
op|'='
number|'5'
newline|'\n'
name|'remove_counter'
op|'='
number|'2'
newline|'\n'
name|'aggregates'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'add_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate_%d'"
op|'%'
name|'c'
op|'}'
newline|'\n'
name|'aggregates'
op|'.'
name|'append'
op|'('
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
name|'values'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'c'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'remove_counter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_delete'
op|'('
name|'ctxt'
op|','
name|'aggregates'
op|'['
name|'c'
op|'-'
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'results'
op|'='
name|'db'
op|'.'
name|'aggregate_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
name|'add_counter'
op|'-'
name|'remove_counter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add
dedent|''
name|'def'
name|'test_aggregate_metadata_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add_and_update
dedent|''
name|'def'
name|'test_aggregate_metadata_add_and_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'new_metadata'
op|'='
op|'{'
name|'key'
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'fake_new_key'"
op|':'
string|"'fake_new_value'"
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'new_metadata'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'new_metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add_retry
dedent|''
name|'def'
name|'test_aggregate_metadata_add_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|counted
name|'def'
name|'counted'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|get_query
indent|'            '
name|'def'
name|'get_query'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'session'
op|','
name|'read_deleted'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'get_query'
op|'.'
name|'counter'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
newline|'\n'
dedent|''
name|'get_query'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
name|'return'
name|'get_query'
newline|'\n'
nl|'\n'
dedent|''
name|'get_query'
op|'='
name|'counted'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'sqlalchemy_api'
op|','
nl|'\n'
string|"'_aggregate_metadata_get_query'"
op|','
name|'get_query'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
op|','
name|'sqlalchemy_api'
op|'.'
nl|'\n'
name|'aggregate_metadata_add'
op|','
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'max_retries'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_query'
op|'.'
name|'counter'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_update
dedent|''
name|'def'
name|'test_aggregate_metadata_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'key'
op|')'
newline|'\n'
name|'new_metadata'
op|'='
op|'{'
name|'key'
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'new_metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'key'
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete
dedent|''
name|'def'
name|'test_aggregate_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'_get_fake_aggr_metadata'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'del'
name|'metadata'
op|'['
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'metadata'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_remove_availability_zone
dedent|''
name|'def'
name|'test_aggregate_remove_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
nl|'\n'
string|"'fake_avail_zone'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
string|"'availability_zone'"
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_metadata_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'aggregate'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
op|'}'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_metadata_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateMetadataNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_metadata_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
string|"'foo_key'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add
dedent|''
name|'def'
name|'test_aggregate_host_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_re_add
dedent|''
name|'def'
name|'test_aggregate_host_re_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'host'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_works
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_works'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'r1'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'r2'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_aggregate2'"
op|'}'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone2'"
op|'}'
op|')'
newline|'\n'
name|'h1'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'r1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'h2'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'r2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h1'
op|','
name|'h2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_duplicate_raise_exist_exc
dedent|''
name|'def'
name|'test_aggregate_host_add_duplicate_raise_exist_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_add_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_add_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# this does not exist!'
nl|'\n'
name|'aggregate_id'
op|'='
number|'1'
newline|'\n'
name|'host'
op|'='
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'aggregate_id'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete
dedent|''
name|'def'
name|'test_aggregate_host_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate_with_hosts'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'aggregate_host_get_all'
op|'('
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_host_delete_raise_not_found
dedent|''
name|'def'
name|'test_aggregate_host_delete_raise_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'_create_aggregate'
op|'('
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'_get_fake_aggr_hosts'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SqlAlchemyDbApiNoDbTestCase
dedent|''
dedent|''
name|'class'
name|'SqlAlchemyDbApiNoDbTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""No-DB test class for simple test cases that do not require a backend."""'
newline|'\n'
nl|'\n'
DECL|member|test_manual_join_columns_immutable_list
name|'def'
name|'test_manual_join_columns_immutable_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that _manual_join_columns doesn't modify the list passed in."
nl|'\n'
indent|'        '
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|','
string|"'test'"
op|']'
newline|'\n'
name|'manual_joins'
op|','
name|'columns_to_join2'
op|'='
op|'('
nl|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_manual_join_columns'
op|'('
name|'columns_to_join'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'system_metadata'"
op|']'
op|','
name|'manual_joins'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'test'"
op|']'
op|','
name|'columns_to_join2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'system_metadata'"
op|','
string|"'test'"
op|']'
op|','
name|'columns_to_join'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SqlAlchemyDbApiTestCase
dedent|''
dedent|''
name|'class'
name|'SqlAlchemyDbApiTestCase'
op|'('
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_instance_get_all_by_host
indent|'    '
name|'def'
name|'test_instance_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_uuids_by_host
dedent|''
name|'def'
name|'test_instance_get_all_uuids_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_get_all_uuids_by_host'
op|'('
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'types'
op|'.'
name|'UnicodeType'
op|','
name|'type'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_active_by_window_joined
dedent|''
name|'def'
name|'test_instance_get_active_by_window_joined'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2013'
op|','
number|'10'
op|','
number|'10'
op|','
number|'17'
op|','
number|'16'
op|','
number|'37'
op|','
number|'156701'
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'10'
op|')'
newline|'\n'
name|'now1'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'1'
op|')'
newline|'\n'
name|'now2'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'2'
op|')'
newline|'\n'
name|'now3'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'3'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# used for testing columns_to_join'
nl|'\n'
name|'network_info'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'ckey'"
op|':'
string|"'cvalue'"
op|'}'
op|')'
newline|'\n'
name|'sample_data'
op|'='
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'mkey1'"
op|':'
string|"'mval1'"
op|','
string|"'mkey2'"
op|':'
string|"'mval2'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'smkey1'"
op|':'
string|"'smval1'"
op|','
string|"'smkey2'"
op|':'
string|"'smval2'"
op|'}'
op|','
nl|'\n'
string|"'info_cache'"
op|':'
op|'{'
string|"'network_info'"
op|':'
name|'network_info'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'launched_at'
op|'='
name|'now'
op|','
op|'**'
name|'sample_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'launched_at'
op|'='
name|'now1'
op|','
name|'terminated_at'
op|'='
name|'now2'
op|','
nl|'\n'
op|'**'
name|'sample_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'launched_at'
op|'='
name|'now2'
op|','
name|'terminated_at'
op|'='
name|'now3'
op|','
nl|'\n'
op|'**'
name|'sample_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'launched_at'
op|'='
name|'now3'
op|','
name|'terminated_at'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'sample_data'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'begin'
op|'='
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
comment|'# verify that all default columns are joined'
nl|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|','
name|'meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sample_data'
op|'['
string|"'system_metadata'"
op|']'
op|','
name|'sys_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'info_cache'"
op|','
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'begin'
op|'='
name|'now3'
op|','
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
comment|'# verify that only info_cache is loaded'
nl|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'info_cache'"
op|','
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'begin'
op|'='
name|'start_time'
op|','
name|'end'
op|'='
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'begin'
op|'='
name|'start_time'
op|','
name|'end'
op|'='
name|'now2'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
comment|'# verify that only system_metadata is loaded'
nl|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sample_data'
op|'['
string|"'system_metadata'"
op|']'
op|','
name|'sys_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'info_cache'"
op|','
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'begin'
op|'='
name|'now2'
op|','
name|'end'
op|'='
name|'now3'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
comment|'# verify that only metadata and info_cache are loaded'
nl|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|','
name|'meta'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'sys_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'info_cache'"
op|','
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network_info'
op|','
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'info_cache'"
op|']'
op|'['
string|"'network_info'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api.instance_get_all_by_filters_sort'"
op|')'
newline|'\n'
DECL|member|test_instance_get_all_by_filters_calls_sort
name|'def'
name|'test_instance_get_all_by_filters_calls_sort'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_all_filters_sort'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies instance_get_all_by_filters calls the sort function.'''"
newline|'\n'
comment|'# sort parameters should be wrapped in a list, all other parameters'
nl|'\n'
comment|'# should be passed through'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
string|"'sort_key'"
op|','
string|"'sort_dir'"
op|','
name|'limit'
op|'='
number|'100'
op|','
name|'marker'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
string|"'columns'"
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_get_all_filters_sort'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'limit'
op|'='
number|'100'
op|','
name|'marker'
op|'='
string|"'uuid'"
op|','
name|'columns_to_join'
op|'='
string|"'columns'"
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|','
name|'sort_keys'
op|'='
op|'['
string|"'sort_key'"
op|']'
op|','
name|'sort_dirs'
op|'='
op|'['
string|"'sort_dir'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProcessSortParamTestCase
dedent|''
dedent|''
name|'class'
name|'ProcessSortParamTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_defaults
indent|'    '
name|'def'
name|'test_process_sort_params_defaults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies default sort parameters.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
op|'['
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_override_default_keys
dedent|''
name|'def'
name|'test_process_sort_params_override_default_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that the default keys can be overridden.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'default_keys'
op|'='
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_override_default_dir
dedent|''
name|'def'
name|'test_process_sort_params_override_default_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that the default direction can be overridden.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'default_dir'
op|'='
string|"'dir1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'dir1'"
op|','
string|"'dir1'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_override_default_key_and_dir
dedent|''
name|'def'
name|'test_process_sort_params_override_default_key_and_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that the default key and dir can be overridden.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'default_keys'
op|'='
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
nl|'\n'
name|'default_dir'
op|'='
string|"'dir1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'dir1'"
op|','
string|"'dir1'"
op|','
string|"'dir1'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'default_keys'
op|'='
op|'['
op|']'
op|','
name|'default_dir'
op|'='
string|"'dir1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_non_default
dedent|''
name|'def'
name|'test_process_sort_params_non_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that non-default keys are added correctly.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|']'
op|','
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|','
string|"'created_at'"
op|','
string|"'id'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
comment|'# First sort_dir in list is used when adding the default keys'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_default
dedent|''
name|'def'
name|'test_process_sort_params_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that default keys are added correctly.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|']'
op|','
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# Include default key value, rely on default direction'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'asc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_default_dir
dedent|''
name|'def'
name|'test_process_sort_params_default_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that the default dir is applied to all keys.'''"
newline|'\n'
comment|'# Direction is set, ignore default dir'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|']'
op|','
op|'['
string|"'desc'"
op|']'
op|','
name|'default_dir'
op|'='
string|"'dir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'desc'"
op|','
string|"'desc'"
op|','
string|"'desc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# But should be used if no direction is set'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|']'
op|','
op|'['
op|']'
op|','
name|'default_dir'
op|'='
string|"'dir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'dir'"
op|','
string|"'dir'"
op|','
string|"'dir'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_unequal_length
dedent|''
name|'def'
name|'test_process_sort_params_unequal_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies that a sort direction list is applied correctly.'''"
newline|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
op|'['
string|"'desc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'desc'"
op|','
string|"'desc'"
op|','
string|"'desc'"
op|','
string|"'desc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
comment|'# Default direction is the first key in the list'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
op|'['
string|"'desc'"
op|','
string|"'asc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'desc'"
op|','
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'desc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
name|'sort_keys'
op|','
name|'sort_dirs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|'('
nl|'\n'
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|']'
op|','
op|'['
string|"'desc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'id'"
op|','
string|"'key2'"
op|','
string|"'key3'"
op|','
string|"'created_at'"
op|']'
op|','
name|'sort_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'desc'"
op|','
string|"'asc'"
op|','
string|"'asc'"
op|','
string|"'desc'"
op|']'
op|','
name|'sort_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_extra_dirs_lengths
dedent|''
name|'def'
name|'test_process_sort_params_extra_dirs_lengths'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''InvalidInput raised if more directions are given.'''"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
nl|'\n'
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|','
nl|'\n'
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|']'
op|','
nl|'\n'
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'desc'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_sort_params_invalid_sort_dir
dedent|''
name|'def'
name|'test_process_sort_params_invalid_sort_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''InvalidInput raised if invalid directions are given.'''"
newline|'\n'
name|'for'
name|'dirs'
name|'in'
op|'['
op|'['
string|"'foo'"
op|']'
op|','
op|'['
string|"'asc'"
op|','
string|"'foo'"
op|']'
op|','
op|'['
string|"'asc'"
op|','
string|"'desc'"
op|','
string|"'foo'"
op|']'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
nl|'\n'
name|'sqlalchemy_api'
op|'.'
name|'process_sort_params'
op|','
nl|'\n'
op|'['
string|"'key'"
op|']'
op|','
nl|'\n'
name|'dirs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MigrationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'MigrationTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'status'
op|'='
string|"'reverted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'status'
op|'='
string|"'confirmed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'status'
op|'='
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host2'"
op|','
name|'source_node'
op|'='
string|"'b'"
op|','
nl|'\n'
name|'dest_compute'
op|'='
string|"'host1'"
op|','
name|'dest_node'
op|'='
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host2'"
op|','
name|'dest_compute'
op|'='
string|"'host3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'host3'"
op|','
name|'dest_compute'
op|'='
string|"'host4'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create
dedent|''
name|'def'
name|'_create'
op|'('
name|'self'
op|','
name|'status'
op|'='
string|"'migrating'"
op|','
name|'source_compute'
op|'='
string|"'host1'"
op|','
nl|'\n'
name|'source_node'
op|'='
string|"'a'"
op|','
name|'dest_compute'
op|'='
string|"'host2'"
op|','
name|'dest_node'
op|'='
string|"'b'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
name|'source_compute'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'if'
name|'system_metadata'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'system_metadata'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'values'
op|'='
op|'{'
string|"'status'"
op|':'
name|'status'
op|','
string|"'source_compute'"
op|':'
name|'source_compute'
op|','
nl|'\n'
string|"'source_node'"
op|':'
name|'source_node'
op|','
string|"'dest_compute'"
op|':'
name|'dest_compute'
op|','
nl|'\n'
string|"'dest_node'"
op|':'
name|'dest_node'
op|','
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_in_progress
dedent|''
name|'def'
name|'_assert_in_progress'
op|'('
name|'self'
op|','
name|'migrations'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'confirmed'"
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'reverted'"
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'error'"
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_in_progress_joins
dedent|''
dedent|''
name|'def'
name|'test_migration_get_in_progress_joins'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create'
op|'('
name|'source_compute'
op|'='
string|"'foo'"
op|','
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'foo'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'system_metadata'
op|'='
name|'migrations'
op|'['
number|'0'
op|']'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'system_metadata'
op|'['
string|"'key'"
op|']'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'system_metadata'
op|'['
string|"'value'"
op|']'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host1_nodea
dedent|''
name|'def'
name|'test_in_progress_host1_nodea'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host1'"
op|','
string|"'a'"
op|')'
newline|'\n'
comment|'# 2 as source + 1 as dest'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_in_progress'
op|'('
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host1_nodeb
dedent|''
name|'def'
name|'test_in_progress_host1_nodeb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host1'"
op|','
string|"'b'"
op|')'
newline|'\n'
comment|"# some migrations are to/from host1, but none with a node 'b'"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_progress_host2_nodeb
dedent|''
name|'def'
name|'test_in_progress_host2_nodeb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
comment|'# 2 as dest, 1 as source'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_in_progress'
op|'('
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_join
dedent|''
name|'def'
name|'test_instance_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'migration'
op|'['
string|"'instance'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations_by_filters
dedent|''
dedent|''
name|'def'
name|'test_get_migrations_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"migrating"'
op|','
string|'"host"'
op|':'
string|'"host3"'
op|'}'
newline|'\n'
name|'migrations'
op|'='
name|'db'
op|'.'
name|'migration_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'migrations'
op|')'
op|')'
newline|'\n'
name|'for'
name|'migration'
name|'in'
name|'migrations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'filters'
op|'['
string|'"status"'
op|']'
op|','
name|'migration'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'hosts'
op|'='
op|'['
name|'migration'
op|'['
string|"'source_compute'"
op|']'
op|','
name|'migration'
op|'['
string|"'dest_compute'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'filters'
op|'['
string|'"host"'
op|']'
op|','
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_only_admin_can_get_all_migrations_by_filters
dedent|''
dedent|''
name|'def'
name|'test_only_admin_can_get_all_migrations_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user_id'
op|'='
name|'None'
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|','
name|'read_deleted'
op|'='
string|'"no"'
op|','
nl|'\n'
name|'overwrite'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'migration_get_all_by_filters'
op|','
name|'user_ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_get_unconfirmed_by_dest_compute
dedent|''
name|'def'
name|'test_migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure no migrations are returned.'
nl|'\n'
indent|'        '
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no migrations are returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'1'
op|','
number|'1'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"finished"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|','
nl|'\n'
string|'"dest_compute"'
op|':'
string|'"fake_host2"'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure different host is not returned'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one migration older than 10 seconds is returned.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|"'fake_host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'migration'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the new migration is not returned.'
nl|'\n'
name|'updated_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|'"status"'
op|':'
string|'"finished"'
op|','
string|'"updated_at"'
op|':'
name|'updated_at'
op|','
nl|'\n'
string|'"dest_compute"'
op|':'
string|'"fake_host2"'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'migration_get_unconfirmed_by_dest_compute'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|','
nl|'\n'
string|'"fake_host2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'migration_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'migration'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|'"status"'
op|':'
string|'"CONFIRMED"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_update_not_found
dedent|''
name|'def'
name|'test_migration_update_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'migration_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'42'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ModelsObjectComparatorMixin
dedent|''
dedent|''
name|'class'
name|'ModelsObjectComparatorMixin'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|_dict_from_object
indent|'    '
name|'def'
name|'_dict_from_object'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'ignored_keys'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ignored_keys'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ignored_keys'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
op|'{'
name|'k'
op|':'
name|'v'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'obj'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'k'
name|'not'
name|'in'
name|'ignored_keys'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualObjects
dedent|''
name|'def'
name|'_assertEqualObjects'
op|'('
name|'self'
op|','
name|'obj1'
op|','
name|'obj2'
op|','
name|'ignored_keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj1'
op|'='
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'obj1'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'obj2'
op|'='
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'obj2'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'obj1'
op|')'
op|','
nl|'\n'
name|'len'
op|'('
name|'obj2'
op|')'
op|','
nl|'\n'
string|'"Keys mismatch: %s"'
op|'%'
nl|'\n'
name|'str'
op|'('
name|'set'
op|'('
name|'obj1'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'^'
name|'set'
op|'('
name|'obj2'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'obj1'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'obj2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualListsOfObjects
dedent|''
dedent|''
name|'def'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|','
name|'objs1'
op|','
name|'objs2'
op|','
name|'ignored_keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_to_dict'
op|'='
name|'lambda'
name|'o'
op|':'
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'o'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'sort_key'
op|'='
name|'lambda'
name|'d'
op|':'
op|'['
name|'d'
op|'['
name|'k'
op|']'
name|'for'
name|'k'
name|'in'
name|'sorted'
op|'('
name|'d'
op|')'
op|']'
newline|'\n'
name|'conv_and_sort'
op|'='
name|'lambda'
name|'obj'
op|':'
name|'sorted'
op|'('
name|'map'
op|'('
name|'obj_to_dict'
op|','
name|'obj'
op|')'
op|','
name|'key'
op|'='
name|'sort_key'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conv_and_sort'
op|'('
name|'objs1'
op|')'
op|','
name|'conv_and_sort'
op|'('
name|'objs2'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualOrderedListOfObjects
dedent|''
name|'def'
name|'_assertEqualOrderedListOfObjects'
op|'('
name|'self'
op|','
name|'objs1'
op|','
name|'objs2'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_to_dict'
op|'='
name|'lambda'
name|'o'
op|':'
name|'self'
op|'.'
name|'_dict_from_object'
op|'('
name|'o'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'conv'
op|'='
name|'lambda'
name|'obj'
op|':'
name|'map'
op|'('
name|'obj_to_dict'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conv'
op|'('
name|'objs1'
op|')'
op|','
name|'conv'
op|'('
name|'objs2'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualListsOfPrimitivesAsSets
dedent|''
name|'def'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'self'
op|','
name|'primitives1'
op|','
name|'primitives2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'primitives1'
op|')'
op|','
name|'len'
op|'('
name|'primitives2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'primitive'
name|'in'
name|'primitives1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'primitive'
op|','
name|'primitives2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'primitive'
name|'in'
name|'primitives2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'primitive'
op|','
name|'primitives1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceSystemMetadataTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'InstanceSystemMetadataTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.instance_system_metadata_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceSystemMetadataTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'h1'"
op|','
string|"'project_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_metadata_get
dedent|''
name|'def'
name|'test_instance_system_metadata_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_metadata_update_new_pair
dedent|''
name|'def'
name|'test_instance_system_metadata_update_new_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|','
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_metadata_update_existent_pair
dedent|''
name|'def'
name|'test_instance_system_metadata_update_existent_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'new_value'"
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'key'"
op|':'
string|"'new_value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_metadata_update_delete_true
dedent|''
name|'def'
name|'test_instance_system_metadata_update_delete_true'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'testtools'
op|'.'
name|'skip'
op|'('
string|'"bug 1189462"'
op|')'
newline|'\n'
DECL|member|test_instance_system_metadata_update_nonexistent
name|'def'
name|'test_instance_system_metadata_update_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_system_metadata_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexistent-uuid'"
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReservationTestCase
dedent|''
dedent|''
name|'class'
name|'ReservationTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.reservation_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ReservationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'reservations'
op|'='
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
newline|'\n'
name|'usage'
op|'='
name|'db'
op|'.'
name|'quota_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|','
string|"'user1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'values'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'sample-uuid'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'resource1'"
op|','
nl|'\n'
string|"'delta'"
op|':'
number|'42'
op|','
nl|'\n'
string|"'expire'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'days'
op|'='
number|'1'
op|')'
op|','
nl|'\n'
string|"'usage'"
op|':'
op|'{'
string|"'id'"
op|':'
name|'usage'
op|'.'
name|'id'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_reservation_commit
dedent|''
name|'def'
name|'test_reservation_commit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'1'
op|','
string|"'in_use'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'2'
op|','
string|"'in_use'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|')'
newline|'\n'
name|'_reservation_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'reservation_commit'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|','
string|"'project1'"
op|','
nl|'\n'
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ReservationNotFound'
op|','
nl|'\n'
name|'_reservation_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'4'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reservation_rollback
dedent|''
name|'def'
name|'test_reservation_rollback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'1'
op|','
string|"'in_use'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'2'
op|','
string|"'in_use'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|')'
newline|'\n'
name|'_reservation_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'reservation_rollback'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|','
string|"'project1'"
op|','
nl|'\n'
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ReservationNotFound'
op|','
nl|'\n'
name|'_reservation_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'reservations'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reservation_expire
dedent|''
name|'def'
name|'test_reservation_expire'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'reservation_expire'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'in_use'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupRuleTestCase
dedent|''
dedent|''
name|'class'
name|'SecurityGroupRuleTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SecurityGroupRuleTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_sec_group'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'fake_sec_group_descr'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instances'"
op|':'
op|'['
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_base_rule_values
dedent|''
name|'def'
name|'_get_base_rule_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'protocol'"
op|':'
string|'"tcp"'
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'8080'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'grantee_group'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_security_group
dedent|''
name|'def'
name|'_create_security_group'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_security_group_rule
dedent|''
name|'def'
name|'_create_security_group_rule'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_rule_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_create
dedent|''
name|'def'
name|'test_security_group_rule_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group_rule'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'_get_base_rule_values'
op|'('
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'security_group_rule'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_security_group_rule_get_by_security_group
dedent|''
dedent|''
name|'def'
name|'_test_security_group_rule_get_by_security_group'
op|'('
name|'self'
op|','
name|'columns'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'system_metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'security_group'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
nl|'\n'
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
nl|'\n'
op|'{'
string|"'parent_group'"
op|':'
name|'security_group'
op|','
string|"'grantee_group'"
op|':'
name|'security_group'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule1'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
nl|'\n'
op|'{'
string|"'parent_group'"
op|':'
name|'security_group'
op|','
string|"'grantee_group'"
op|':'
name|'security_group'
op|'}'
op|')'
newline|'\n'
name|'found_rules'
op|'='
name|'db'
op|'.'
name|'security_group_rule_get_by_security_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group'
op|'['
string|"'id'"
op|']'
op|','
name|'columns_to_join'
op|'='
name|'columns'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'found_rules'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rules_ids'
op|'='
op|'['
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
name|'security_group_rule1'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'found_rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'columns'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'grantee_group'"
op|','
name|'dict'
op|'('
name|'rule'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instances'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'rule'
op|'.'
name|'grantee_group'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
nl|'\n'
string|"'system_metadata'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'rule'
op|'.'
name|'grantee_group'
op|'.'
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'rule'
op|'['
string|"'id'"
op|']'
op|','
name|'rules_ids'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'grantee_group'"
op|','
name|'dict'
op|'('
name|'rule'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_by_security_group
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_security_group_rule_get_by_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_security_group_rule_get_by_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_by_security_group_no_joins
dedent|''
name|'def'
name|'test_security_group_rule_get_by_security_group_no_joins'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_security_group_rule_get_by_security_group'
op|'('
name|'columns'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_by_security_group_grantee
dedent|''
name|'def'
name|'test_security_group_rule_get_by_security_group_grantee'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
nl|'\n'
op|'{'
string|"'grantee_group'"
op|':'
name|'security_group'
op|'}'
op|')'
newline|'\n'
name|'rules'
op|'='
name|'db'
op|'.'
name|'security_group_rule_get_by_security_group_grantee'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rules'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rules'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_destroy
dedent|''
name|'def'
name|'test_security_group_rule_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|'}'
op|')'
newline|'\n'
name|'security_group_rule1'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule2'
op|'='
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_rule_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group_rule1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group_rule1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'db'
op|'.'
name|'security_group_rule_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group_rule2'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'security_group_rule2'
op|','
op|'['
string|"'grantee_group'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_destroy_not_found_exception
dedent|''
name|'def'
name|'test_security_group_rule_destroy_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_destroy'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get
dedent|''
name|'def'
name|'test_security_group_rule_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group_rule1'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'real_security_group_rule'
op|'='
name|'db'
op|'.'
name|'security_group_rule_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group_rule1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'security_group_rule1'
op|','
nl|'\n'
name|'real_security_group_rule'
op|','
op|'['
string|"'grantee_group'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_not_found_exception
dedent|''
name|'def'
name|'test_security_group_rule_get_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_count_by_group
dedent|''
name|'def'
name|'test_security_group_rule_count_by_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg1'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|'}'
op|')'
newline|'\n'
name|'sg2'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|'}'
op|')'
newline|'\n'
name|'rules_by_group'
op|'='
op|'{'
name|'sg1'
op|':'
op|'['
op|']'
op|','
name|'sg2'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'rules_by_group'
op|':'
newline|'\n'
indent|'            '
name|'rules'
op|'='
name|'rules_by_group'
op|'['
name|'group'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rules'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_create_security_group_rule'
op|'('
op|'{'
string|"'parent_group_id'"
op|':'
nl|'\n'
name|'group'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'db'
op|'.'
name|'security_group_rule_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'rules_by_group'
op|'['
name|'sg1'
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'counted_groups'
op|'='
op|'['
name|'db'
op|'.'
name|'security_group_rule_count_by_group'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
nl|'\n'
name|'for'
name|'group'
name|'in'
op|'['
name|'sg1'
op|','
name|'sg2'
op|']'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
number|'9'
op|','
number|'10'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'counted_groups'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupTestCase
dedent|''
dedent|''
name|'class'
name|'SecurityGroupTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SecurityGroupTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_sec_group'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'fake_sec_group_descr'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instances'"
op|':'
op|'['
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_security_group
dedent|''
name|'def'
name|'_create_security_group'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_create
dedent|''
name|'def'
name|'test_security_group_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'security_group'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_destroy
dedent|''
dedent|''
name|'def'
name|'test_security_group_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group1'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'security_group2'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake_sec_group2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'db'
op|'.'
name|'security_group_get'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
op|','
name|'security_group2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get
dedent|''
name|'def'
name|'test_security_group_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group1'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake_sec_group2'"
op|'}'
op|')'
newline|'\n'
name|'real_security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'security_group1'
op|','
nl|'\n'
name|'real_security_group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_with_instance_columns
dedent|''
name|'def'
name|'test_security_group_get_with_instance_columns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'system_metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|'}'
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'instances.system_metadata'"
op|']'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'secgroup'
op|'.'
name|'instances'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'system_metadata'"
op|','
name|'dict'
op|'('
name|'inst'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_no_instances
dedent|''
name|'def'
name|'test_security_group_get_no_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sid'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'sid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instances'"
op|','
name|'security_group'
op|'.'
name|'__dict__'
op|')'
newline|'\n'
nl|'\n'
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'sid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instances'"
op|','
name|'security_group'
op|'.'
name|'__dict__'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_not_found_exception
dedent|''
name|'def'
name|'test_security_group_get_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_by_name
dedent|''
name|'def'
name|'test_security_group_get_by_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group1'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|'}'
op|')'
newline|'\n'
name|'security_group2'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'real_security_group1'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group1'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'security_group1'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
newline|'\n'
name|'real_security_group2'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group2'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'security_group2'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'security_group1'
op|','
name|'real_security_group1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'security_group2'
op|','
name|'real_security_group2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_by_project
dedent|''
name|'def'
name|'test_security_group_get_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group1'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj1'"
op|'}'
op|')'
newline|'\n'
name|'security_group2'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'real1'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group1'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'real2'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group2'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'expected1'
op|','
name|'expected2'
op|'='
op|'['
name|'security_group1'
op|']'
op|','
op|'['
name|'security_group2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected1'
op|','
name|'real1'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected2'
op|','
name|'real2'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_by_instance
dedent|''
name|'def'
name|'test_security_group_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'host'
op|'='
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|','
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|','
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake3'"
op|','
string|"'instances'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'security_groups'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_security_group'
op|'('
name|'vals'
op|')'
nl|'\n'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'security_groups'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'real'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_all
dedent|''
name|'def'
name|'test_security_group_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj2'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'security_groups'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_security_group'
op|'('
name|'vals'
op|')'
nl|'\n'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'security_group_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'security_groups'
op|','
name|'real'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_in_use
dedent|''
name|'def'
name|'test_security_group_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'host'
op|'='
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'instances'"
op|':'
op|'['
name|'instance'
op|']'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_in_use'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instances'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'security_groups'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_security_group'
op|'('
name|'vals'
op|')'
nl|'\n'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'real'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'security_group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'in_use'
op|'='
name|'db'
op|'.'
name|'security_group_in_use'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'real'
op|'.'
name|'append'
op|'('
name|'in_use'
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
op|'['
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_ensure_default
dedent|''
name|'def'
name|'test_security_group_ensure_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_ensure_default'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'security_groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'security_groups'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"default"'
op|','
name|'security_groups'
op|'['
number|'0'
op|']'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'usage'
op|'='
name|'db'
op|'.'
name|'quota_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'security_groups'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'usage'
op|'.'
name|'in_use'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'api'
op|','
string|"'_security_group_get_by_names'"
op|')'
newline|'\n'
DECL|member|test_security_group_ensure_default_called_concurrently
name|'def'
name|'test_security_group_ensure_default_called_concurrently'
op|'('
name|'self'
op|','
name|'sg_mock'
op|')'
op|':'
newline|'\n'
comment|'# make sure NotFound is always raised here to trick Nova to insert the'
nl|'\n'
comment|'# duplicate security group entry'
nl|'\n'
indent|'        '
name|'sg_mock'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
newline|'\n'
nl|'\n'
comment|'# create the first db entry'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|'='
number|'1'
newline|'\n'
name|'db'
op|'.'
name|'security_group_ensure_default'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'security_groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'security_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create the second one and ensure the exception is handled properly'
nl|'\n'
name|'default_group'
op|'='
name|'db'
op|'.'
name|'security_group_ensure_default'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'default'"
op|','
name|'default_group'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_update
dedent|''
name|'def'
name|'test_security_group_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_group'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'new_values'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'sec_group1'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'sec_group_descr1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake_user1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_proj1'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'updated_group'
op|'='
name|'db'
op|'.'
name|'security_group_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'new_values'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'rules.grantee_group'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'new_values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'updated_group'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'updated_group'
op|'['
string|"'rules'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_update_to_duplicate
dedent|''
name|'def'
name|'test_security_group_update_to_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_security_group'
op|'('
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj1'"
op|'}'
op|')'
newline|'\n'
name|'security_group2'
op|'='
name|'self'
op|'.'
name|'_create_security_group'
op|'('
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|','
string|"'project_id'"
op|':'
string|"'fake_proj2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'security_group_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'security_group2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'fake_proj1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.instance_* methods."""'
newline|'\n'
nl|'\n'
DECL|variable|sample_data
name|'sample_data'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'example.com'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'h1'"
op|','
nl|'\n'
string|"'node'"
op|':'
string|"'n1'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'mkey1'"
op|':'
string|"'mval1'"
op|','
string|"'mkey2'"
op|':'
string|"'mval2'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'smkey1'"
op|':'
string|"'smval1'"
op|','
string|"'smkey2'"
op|':'
string|"'smval2'"
op|'}'
op|','
nl|'\n'
string|"'info_cache'"
op|':'
op|'{'
string|"'ckey'"
op|':'
string|"'cvalue'"
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualInstances
dedent|''
name|'def'
name|'_assertEqualInstances'
op|'('
name|'self'
op|','
name|'instance1'
op|','
name|'instance2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'instance1'
op|','
name|'instance2'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
nl|'\n'
string|"'extra'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualListsOfInstances
dedent|''
name|'def'
name|'_assertEqualListsOfInstances'
op|'('
name|'self'
op|','
name|'list1'
op|','
name|'list2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'list1'
op|','
name|'list2'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
nl|'\n'
string|"'extra'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_instance_with_args
dedent|''
name|'def'
name|'create_instance_with_args'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'context'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'context'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'context'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'context'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
dedent|''
name|'args'
op|'='
name|'self'
op|'.'
name|'sample_data'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'args'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'context'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_create
dedent|''
name|'def'
name|'test_instance_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_create_with_object_values
dedent|''
name|'def'
name|'test_instance_create_with_object_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'access_ip_v4'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'1.2.3.4'"
op|')'
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'::1'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'dt_keys'
op|'='
op|'('
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'launched_at'"
op|','
string|"'terminated_at'"
op|','
string|"'scheduled_at'"
op|')'
newline|'\n'
name|'dt'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'dt_utc'
op|'='
name|'dt'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'dt_keys'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'dt_utc'
newline|'\n'
dedent|''
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'access_ip_v4'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'access_ip_v6'"
op|']'
op|','
string|"'::1'"
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'dt_keys'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
name|'key'
op|']'
op|','
name|'dt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_object_values
dedent|''
dedent|''
name|'def'
name|'test_instance_update_with_object_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'access_ip_v4'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'1.2.3.4'"
op|')'
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'::1'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'dt_keys'
op|'='
op|'('
string|"'created_at'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'launched_at'"
op|','
string|"'terminated_at'"
op|','
string|"'scheduled_at'"
op|')'
newline|'\n'
name|'dt'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'dt_utc'
op|'='
name|'dt'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'dt_keys'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
name|'key'
op|']'
op|'='
name|'dt_utc'
newline|'\n'
dedent|''
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'access_ip_v4'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'access_ip_v6'"
op|']'
op|','
string|"'::1'"
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'dt_keys'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
name|'key'
op|']'
op|','
name|'dt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_no_metadata_clobber
dedent|''
dedent|''
name|'def'
name|'test_instance_update_no_metadata_clobber'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'sys_meta'
op|'='
op|'{'
string|"'sfoo'"
op|':'
string|"'sbar'"
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
name|'meta'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'sys_meta'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'sfoo'"
op|':'
string|"'sbar'"
op|'}'
op|','
name|'sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_with_meta
dedent|''
name|'def'
name|'test_instance_get_all_with_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update
dedent|''
dedent|''
name|'def'
name|'test_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'bar'"
op|','
string|"'key2'"
op|':'
string|"'wuff'"
op|'}'
newline|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'original_image_ref'"
op|':'
string|"'baz'"
op|'}'
newline|'\n'
comment|'# Update the metadata'
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'metadata'"
op|':'
name|'metadata'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'system_metadata'
op|'}'
op|')'
newline|'\n'
comment|'# Retrieve the user-provided metadata to ensure it was successfully'
nl|'\n'
comment|'# updated'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'system_metadata'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_bad_str_dates
dedent|''
name|'def'
name|'test_instance_update_bad_str_dates'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'created_at'"
op|':'
string|"'123'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_good_str_dates
dedent|''
name|'def'
name|'test_instance_update_good_str_dates'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'created_at'"
op|':'
string|"'2011-01-31T00:00:00.0'"
op|'}'
newline|'\n'
name|'actual'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'31'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'['
string|'"created_at"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_unique_hostname
dedent|''
name|'def'
name|'test_create_instance_unique_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context1'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user1'"
op|','
string|"'p1'"
op|')'
newline|'\n'
name|'context2'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user2'"
op|','
string|"'p2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'hostname'
op|'='
string|"'h1'"
op|','
name|'project_id'
op|'='
string|"'p1'"
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'global' any duplicate should fail, be it this project:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'global'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|','
nl|'\n'
name|'context'
op|'='
name|'context1'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'h1'"
op|','
name|'project_id'
op|'='
string|"'p3'"
op|')'
newline|'\n'
comment|'# or another:'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|','
nl|'\n'
name|'context'
op|'='
name|'context2'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'h1'"
op|','
name|'project_id'
op|'='
string|"'p2'"
op|')'
newline|'\n'
comment|"# With scope 'project' a duplicate in the project should fail:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|','
nl|'\n'
name|'context'
op|'='
name|'context1'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'h1'"
op|','
name|'project_id'
op|'='
string|"'p1'"
op|')'
newline|'\n'
comment|"# With scope 'project' a duplicate in a different project should work:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'context'
op|'='
name|'context2'
op|','
name|'hostname'
op|'='
string|"'h2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api.undefer'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api.joinedload'"
op|')'
newline|'\n'
DECL|member|test_instance_get_all_by_filters_extra_columns
name|'def'
name|'test_instance_get_all_by_filters_extra_columns'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_joinedload'
op|','
nl|'\n'
name|'mock_undefer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_get_all_by_filters_sort'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'extra.pci_requests'"
op|']'
op|')'
newline|'\n'
name|'mock_joinedload'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'info_cache'"
op|')'
newline|'\n'
name|'mock_undefer'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'extra.pci_requests'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api.undefer'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api.joinedload'"
op|')'
newline|'\n'
DECL|member|test_instance_get_active_by_window_extra_columns
name|'def'
name|'test_instance_get_active_by_window_extra_columns'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_joinedload'
op|','
nl|'\n'
name|'mock_undefer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2013'
op|','
number|'10'
op|','
number|'10'
op|','
number|'17'
op|','
number|'16'
op|','
number|'37'
op|','
number|'156701'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'now'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'extra.pci_requests'"
op|']'
op|')'
newline|'\n'
name|'mock_joinedload'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'info_cache'"
op|')'
newline|'\n'
name|'mock_undefer'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'extra.pci_requests'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_with_meta
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_with_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_without_meta
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_without_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'filtered_instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
name|'instances'
op|','
name|'filtered_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_zero_limit
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_zero_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|','
name|'limit'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_get_multi
dedent|''
name|'def'
name|'test_instance_metadata_get_multi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuids'
op|'='
op|'['
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'meta'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_metadata_get_multi'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'meta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'uuids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_get_multi_no_uuids
dedent|''
dedent|''
name|'def'
name|'test_instance_metadata_get_multi_no_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'filter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_instance_metadata_get_multi'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_system_metadata_get_multi
dedent|''
name|'def'
name|'test_instance_system_system_metadata_get_multi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuids'
op|'='
op|'['
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'sys_meta'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_instance_system_metadata_get_multi'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'sys_meta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'uuids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_system_metadata_get_multi_no_uuids
dedent|''
dedent|''
name|'def'
name|'test_instance_system_metadata_get_multi_no_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'filter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_instance_system_metadata_get_multi'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_regex
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'test1'"
op|')'
newline|'\n'
name|'i2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'teeeest2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"'diff'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"'t.*st.'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
name|'result'
op|','
op|'['
name|'i1'
op|','
name|'i2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_changes_since
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_changes_since'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'updated_at'
op|'='
nl|'\n'
string|"'2013-12-05T15:03:25.000000'"
op|')'
newline|'\n'
name|'i2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'updated_at'
op|'='
nl|'\n'
string|"'2013-12-05T15:03:26.000000'"
op|')'
newline|'\n'
name|'changes_since'
op|'='
name|'iso8601'
op|'.'
name|'parse_date'
op|'('
string|"'2013-12-05T15:03:25.000000'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'changes-since'"
op|':'
nl|'\n'
name|'changes_since'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'i1'
op|','
name|'i2'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'changes_since'
op|'='
name|'iso8601'
op|'.'
name|'parse_date'
op|'('
string|"'2013-12-05T15:03:26.000000'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'changes-since'"
op|':'
nl|'\n'
name|'changes_since'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'i2'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_exact_match
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_exact_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'host'
op|'='
string|"'host12'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_metadata
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_system_metadata
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_system_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'system_metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_unicode_value
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_unicode_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'display_name'
op|'='
string|"u'test\xe2\x99\xa5'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'display_name'"
op|':'
string|"u'test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tags
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
comment|"# For format 'tag-'"
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag-key'"
op|','
string|"'value'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag-value'"
op|','
string|"'value'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
comment|"# For format 'tag:'"
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag:foo'"
op|','
string|"'value'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
comment|'# For non-existent tag'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag:foo'"
op|','
string|"'value'"
op|':'
string|"'barred'"
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
comment|'# Confirm with deleted tags'
nl|'\n'
name|'db'
op|'.'
name|'instance_metadata_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'foo'"
op|')'
newline|'\n'
comment|"# For format 'tag-'"
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag-key'"
op|','
string|"'value'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag-value'"
op|','
string|"'value'"
op|':'
string|"'bar'"
op|'}'
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
comment|"# For format 'tag:'"
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'filter'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'tag:foo'"
op|','
string|"'value'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid
dedent|''
name|'def'
name|'test_instance_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualInstances'
op|'('
name|'inst'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_empty
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_meta
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_by_uuid_join_sys_meta
dedent|''
name|'def'
name|'test_instance_get_by_uuid_join_sys_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'result'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'reservation_id'
op|'='
string|"'b'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst1'
op|','
name|'inst2'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
nl|'\n'
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'info_cache'"
op|','
nl|'\n'
string|"'pci_devices'"
op|','
string|"'extra'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_deleted_and_soft_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_deleted_and_soft_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst1'
op|','
name|'inst2'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
nl|'\n'
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'info_cache'"
op|','
nl|'\n'
string|"'pci_devices'"
op|','
string|"'extra'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_deleted_no_soft_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_deleted_no_soft_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'soft_deleted'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst1'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'metadata'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
string|"'pci_devices'"
op|','
nl|'\n'
string|"'extra'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_alive_and_soft_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_alive_and_soft_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'soft_deleted'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'inst2'
op|','
name|'inst3'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_not_deleted
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_not_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst4'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst3'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfInstances'
op|'('
op|'['
name|'inst3'
op|','
name|'inst4'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_cleaned
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_cleaned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'reservation_id'
op|'='
string|"'b'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'cleaned'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|','
op|'['
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
op|']'
op|')'
newline|'\n'
name|'if'
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|'=='
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tag_any
dedent|''
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tag_any'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'t1'
op|'='
string|"'tag1'"
newline|'\n'
name|'t2'
op|'='
string|"'tag2'"
newline|'\n'
name|'t3'
op|'='
string|"'tag3'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst2'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|','
name|'t3'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst3'
op|'.'
name|'uuid'
op|','
op|'['
name|'t3'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'tag-any'"
op|':'
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst1'
op|','
name|'inst2'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'metadata'"
op|','
string|"'extra'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tag_any_empty
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tag_any_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'t1'
op|'='
string|"'tag1'"
newline|'\n'
name|'t2'
op|'='
string|"'tag2'"
newline|'\n'
name|'t3'
op|'='
string|"'tag3'"
newline|'\n'
name|'t4'
op|'='
string|"'tag4'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst2'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'tag-any'"
op|':'
op|'['
name|'t3'
op|','
name|'t4'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tag
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'t1'
op|'='
string|"'tag1'"
newline|'\n'
name|'t2'
op|'='
string|"'tag2'"
newline|'\n'
name|'t3'
op|'='
string|"'tag3'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t3'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst2'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst3'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|','
name|'t3'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'tag'"
op|':'
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst2'
op|','
name|'inst3'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'metadata'"
op|','
string|"'extra'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tag_empty
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tag_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'t1'
op|'='
string|"'tag1'"
newline|'\n'
name|'t2'
op|'='
string|"'tag2'"
newline|'\n'
name|'t3'
op|'='
string|"'tag3'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst2'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'tag'"
op|':'
op|'['
name|'t3'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_filters_tag_any_and_tag
dedent|''
name|'def'
name|'test_instance_get_all_by_filters_tag_any_and_tag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'t1'
op|'='
string|"'tag1'"
newline|'\n'
name|'t2'
op|'='
string|"'tag2'"
newline|'\n'
name|'t3'
op|'='
string|"'tag3'"
newline|'\n'
name|'t4'
op|'='
string|"'tag4'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst2'
op|'.'
name|'uuid'
op|','
op|'['
name|'t1'
op|','
name|'t2'
op|','
name|'t4'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst3'
op|'.'
name|'uuid'
op|','
op|'['
name|'t2'
op|','
name|'t3'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'tag'"
op|':'
op|'['
name|'t1'
op|','
name|'t2'
op|']'
op|','
nl|'\n'
string|"'tag-any'"
op|':'
op|'['
name|'t3'
op|','
name|'t4'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'inst2'
op|']'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'metadata'"
op|','
string|"'extra'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host_and_node_no_join
dedent|''
name|'def'
name|'test_instance_get_all_by_host_and_node_no_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'h1'"
op|','
string|"'n1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_by_host_and_node
dedent|''
name|'def'
name|'test_instance_get_all_by_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'h1'"
op|','
string|"'n1'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|','
string|"'extra'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'system_metadata'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'extra'"
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api._instances_fill_metadata'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.api._instance_get_all_query'"
op|')'
newline|'\n'
DECL|member|test_instance_get_all_by_host_and_node_fills_manually
name|'def'
name|'test_instance_get_all_by_host_and_node_fills_manually'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_getall'
op|','
nl|'\n'
name|'mock_fill'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'h1'"
op|','
string|"'n1'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'extra'"
op|','
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
op|'['
string|"'extra'"
op|','
string|"'foo'"
op|']'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'mock_getall'
op|'.'
name|'call_args'
op|'['
number|'1'
op|']'
op|'['
string|"'joins'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'mock_fill'
op|'.'
name|'call_args'
op|'['
number|'1'
op|']'
op|'['
string|"'manual_joins'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_get_all_hung_in_rebooting
dedent|''
name|'def'
name|'test_instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure no instances are returned.'
nl|'\n'
indent|'        '
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure one rebooting instance with updated_at older than 10 seconds'
nl|'\n'
comment|'# is returned.'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'task_state'
op|'='
string|'"rebooting"'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2000'
op|','
number|'1'
op|','
number|'1'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'instance'
op|']'
op|','
name|'results'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'task_state'"
op|','
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'pci_devices'"
op|','
nl|'\n'
string|"'extra'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the newly rebooted instance is not returned.'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'task_state'
op|'='
string|'"rebooting"'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_expected_vm_state
dedent|''
name|'def'
name|'test_instance_update_with_expected_vm_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'host'"
op|':'
string|"'h1'"
op|','
nl|'\n'
string|"'expected_vm_state'"
op|':'
op|'('
string|"'foo'"
op|','
string|"'bar'"
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_unexpected_vm_state
dedent|''
name|'def'
name|'test_instance_update_with_unexpected_vm_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'UnexpectedVMStateError'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'h1'"
op|','
string|"'expected_vm_state'"
op|':'
op|'('
string|"'spam'"
op|','
string|"'bar'"
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_instance_uuid
dedent|''
name|'def'
name|'test_instance_update_with_instance_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test instance_update() works when an instance UUID is passed.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'key1'"
op|':'
string|"'meow'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'blah'"
op|'}'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update the metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'bar'"
op|','
string|"'key2'"
op|':'
string|"'wuff'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'baz'"
op|'}'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the user-provided metadata to ensure it was successfully'
nl|'\n'
comment|'# updated'
nl|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'wuff'"
op|','
name|'instance_meta'
op|'['
string|"'key2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'key1'"
op|','
name|'instance_meta'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the system metadata to ensure it was successfully updated'
nl|'\n'
name|'system_meta'
op|'='
name|'db'
op|'.'
name|'instance_system_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'baz'"
op|','
name|'system_meta'
op|'['
string|"'original_image_ref'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_metadata_on_instance_destroy
dedent|''
name|'def'
name|'test_delete_instance_metadata_on_instance_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# Create an instance with some metadata'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'key1'"
op|':'
string|"'meow'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'original_image_ref'"
op|':'
string|"'blah'"
op|'}'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'instance_meta'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meow'"
op|','
name|'instance_meta'
op|'['
string|"'key1'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_meta'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
comment|'# Make sure instance metadata is deleted as well'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'instance_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_faults_on_instance_destroy
dedent|''
name|'def'
name|'test_delete_instance_faults_on_instance_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# Create faults'
nl|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fault_values'
op|'='
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'404'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'localhost'"
nl|'\n'
op|'}'
newline|'\n'
name|'fault'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the fault to ensure it was successfully added'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'faults'
op|'['
name|'uuid'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'fault'
op|','
name|'faults'
op|'['
name|'uuid'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
comment|'# Make sure instance faults is deleted as well'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'faults'
op|'['
name|'uuid'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_with_and_get_original
dedent|''
name|'def'
name|'test_instance_update_with_and_get_original'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'vm_state'
op|'='
string|"'building'"
op|')'
newline|'\n'
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'needscoffee'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'building'"
op|','
name|'old_ref'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'needscoffee'"
op|','
name|'new_ref'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_and_get_original_metadata
dedent|''
name|'def'
name|'test_instance_update_and_get_original_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
newline|'\n'
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'needscoffee'"
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'new_ref'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'self'
op|'.'
name|'sample_data'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'new_ref'
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_meta'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_and_get_original_metadata_none_join
dedent|''
name|'def'
name|'test_instance_update_and_get_original_metadata_none_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'mk1'"
op|':'
string|"'mv3'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'new_ref'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
op|'{'
string|"'mk1'"
op|':'
string|"'mv3'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_and_get_original_no_conflict_on_session
dedent|''
name|'def'
name|'test_instance_update_and_get_original_no_conflict_on_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'get_session'
op|'('
op|')'
newline|'\n'
comment|'# patch get_session so that we may inspect it outside of the'
nl|'\n'
comment|'# method; once enginefacade is implemented, this can be simplified'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"nova.db.sqlalchemy.api.get_session"'
op|','
name|'lambda'
op|':'
name|'session'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'mk1'"
op|':'
string|"'mv3'"
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# test some regular persisted fields'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'old_ref'
op|'.'
name|'uuid'
op|','
name|'new_ref'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'old_ref'
op|'.'
name|'project_id'
op|','
name|'new_ref'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# after a copy operation, we can assert:'
nl|'\n'
nl|'\n'
comment|'# 1. the two states have their own InstanceState'
nl|'\n'
name|'old_insp'
op|'='
name|'inspect'
op|'('
name|'old_ref'
op|')'
newline|'\n'
name|'new_insp'
op|'='
name|'inspect'
op|'('
name|'new_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'old_insp'
op|','
name|'new_insp'
op|')'
newline|'\n'
nl|'\n'
comment|'# 2. only one of the objects is still in our Session'
nl|'\n'
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'new_insp'
op|'.'
name|'session'
op|','
name|'session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'old_insp'
op|'.'
name|'session'
op|')'
newline|'\n'
nl|'\n'
comment|'# 3. The "new" object remains persistent and ready'
nl|'\n'
comment|'# for updates'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'new_insp'
op|'.'
name|'persistent'
op|')'
newline|'\n'
nl|'\n'
comment|'# 4. the "old" object is detached from this Session.'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'old_insp'
op|'.'
name|'detached'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_unique_name
dedent|''
name|'def'
name|'test_instance_update_unique_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context1'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user1'"
op|','
string|"'p1'"
op|')'
newline|'\n'
name|'context2'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user2'"
op|','
string|"'p2'"
op|')'
newline|'\n'
nl|'\n'
name|'inst1'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'context'
op|'='
name|'context1'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'p1'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name1'"
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'context'
op|'='
name|'context1'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'p1'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name2'"
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
name|'context'
op|'='
name|'context2'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'p2'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'fake_name3'"
op|')'
newline|'\n'
comment|'# osapi_compute_unique_server_name_scope is unset so this should work:'
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context1'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name2'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context1'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'global' any duplicate should fail."
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'global'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'context1'
op|','
nl|'\n'
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'context2'
op|','
nl|'\n'
name|'inst3'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'hostname'"
op|':'
string|"'fake_name1'"
op|'}'
op|')'
newline|'\n'
comment|"# But we should definitely be able to update our name if we aren't"
nl|'\n'
comment|'#  really changing it.'
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context1'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'hostname'"
op|':'
string|"'fake_NAME'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in the project should fail:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceExists'
op|','
name|'db'
op|'.'
name|'instance_update'
op|','
nl|'\n'
name|'context1'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'hostname'"
op|':'
string|"'fake_NAME'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# With scope 'project' a duplicate in a different project should work:"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_unique_server_name_scope'
op|'='
string|"'project'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context2'
op|','
name|'inst3'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
string|"'hostname'"
op|':'
string|"'fake_NAME'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_instance_update_updates_metadata
dedent|''
name|'def'
name|'_test_instance_update_updates_metadata'
op|'('
name|'self'
op|','
name|'metadata_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_and_check
name|'def'
name|'set_and_check'
op|'('
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
name|'metadata_type'
op|':'
name|'dict'
op|'('
name|'meta'
op|')'
op|'}'
op|')'
newline|'\n'
name|'_meta'
op|'='
name|'utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'inst'
op|'['
name|'metadata_type'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|','
name|'_meta'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
op|'{'
string|"'speed'"
op|':'
string|"'88'"
op|','
string|"'units'"
op|':'
string|"'MPH'"
op|'}'
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
name|'meta'
op|'['
string|"'gigawatts'"
op|']'
op|'='
string|"'1.21'"
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
name|'del'
name|'meta'
op|'['
string|"'gigawatts'"
op|']'
newline|'\n'
name|'set_and_check'
op|'('
name|'meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_in_use
dedent|''
name|'def'
name|'test_security_group_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'host'
op|'='
string|"'foo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_updates_system_metadata
dedent|''
name|'def'
name|'test_instance_update_updates_system_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that system_metadata is updated during instance_update'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_update_updates_metadata'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_updates_metadata
dedent|''
name|'def'
name|'test_instance_update_updates_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that metadata is updated during instance_update'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_update_updates_metadata'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_floating_address_get_all
dedent|''
name|'def'
name|'test_instance_floating_address_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
string|"'h1'"
op|','
string|"'hostname'"
op|':'
string|"'n1'"
op|'}'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
string|"'h2'"
op|','
string|"'hostname'"
op|':'
string|"'n2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'float_addresses'
op|'='
op|'['
string|"'2.1.1.1'"
op|','
string|"'2.1.1.2'"
op|','
string|"'2.1.1.3'"
op|']'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'instance1'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'instance2'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'fixed_addr'
op|','
name|'float_addr'
op|','
name|'instance_uuid'
name|'in'
name|'zip'
op|'('
name|'fixed_addresses'
op|','
nl|'\n'
name|'float_addresses'
op|','
nl|'\n'
name|'instance_uuids'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
name|'fixed_addr'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'fixed_id'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'fixed_addr'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'float_addr'
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fixed_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'real_float_addresses'
op|'='
name|'db'
op|'.'
name|'instance_floating_address_get_all'
op|'('
name|'ctxt'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
name|'float_addresses'
op|'['
op|':'
number|'2'
op|']'
op|')'
op|','
name|'set'
op|'('
name|'real_float_addresses'
op|')'
op|')'
newline|'\n'
name|'real_float_addresses'
op|'='
name|'db'
op|'.'
name|'instance_floating_address_get_all'
op|'('
name|'ctxt'
op|','
name|'instance_uuids'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
name|'float_addresses'
op|'['
number|'2'
op|']'
op|']'
op|')'
op|','
name|'set'
op|'('
name|'real_float_addresses'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidUUID'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_floating_address_get_all'
op|','
nl|'\n'
name|'ctxt'
op|','
string|"'invalid_uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_stringified_ips
dedent|''
name|'def'
name|'test_instance_stringified_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'access_ip_v4'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'1.2.3.4'"
op|')'
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'::1'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance'
op|'['
string|"'access_ip_v4'"
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance'
op|'['
string|"'access_ip_v6'"
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance'
op|'['
string|"'access_ip_v4'"
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance'
op|'['
string|"'access_ip_v6'"
op|']'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy
dedent|''
name|'def'
name|'test_instance_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_uuid'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|'**'
name|'values'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'inst_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|','
name|'ctxt'
op|','
name|'inst_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'db'
op|'.'
name|'instance_info_cache_get'
op|'('
name|'ctxt'
op|','
name|'inst_uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'ctxt'
op|','
name|'inst_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy_already_destroyed
dedent|''
name|'def'
name|'test_instance_destroy_already_destroyed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'create_instance_with_args'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|','
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceMetadataTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceMetadataTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.instance_metadata_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceMetadataTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_get
dedent|''
name|'def'
name|'test_instance_metadata_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'metadata'"
op|':'
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|','
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_delete
dedent|''
name|'def'
name|'test_instance_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'key'"
op|':'
string|"'val'"
op|','
nl|'\n'
string|"'key1'"
op|':'
string|"'val1'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_metadata_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'key1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'key'"
op|':'
string|"'val'"
op|'}'
op|','
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata_update
dedent|''
name|'def'
name|'test_instance_metadata_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
string|"'h1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'p1'"
op|','
string|"'metadata'"
op|':'
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# This should add new key/value pair'
nl|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_metadata_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|','
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# This should leave only one key/value pair'
nl|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_metadata_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db'
op|'.'
name|'instance_metadata_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|','
op|'{'
string|"'new_key'"
op|':'
string|"'new_value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceExtraTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceExtraTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceExtraTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_extra_get_by_uuid_instance_create
dedent|''
name|'def'
name|'test_instance_extra_get_by_uuid_instance_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_extra'
op|'='
name|'db'
op|'.'
name|'instance_extra_get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'inst_extra'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_extra_update_by_uuid
dedent|''
name|'def'
name|'test_instance_extra_update_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'instance_extra_update_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
string|"'changed'"
op|'}'
op|')'
newline|'\n'
name|'inst_extra'
op|'='
name|'db'
op|'.'
name|'instance_extra_get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'changed'"
op|','
name|'inst_extra'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_extra_get_with_columns
dedent|''
name|'def'
name|'test_instance_extra_get_with_columns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extra'
op|'='
name|'db'
op|'.'
name|'instance_extra_get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'columns'
op|'='
op|'['
string|"'numa_topology'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'pci_requests'"
op|','
name|'extra'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'numa_topology'"
op|','
name|'extra'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServiceTestCase
dedent|''
dedent|''
name|'class'
name|'ServiceTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServiceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'fake_binary'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'fake_topic'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_service
dedent|''
name|'def'
name|'_create_service'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_create
dedent|''
name|'def'
name|'test_service_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'service'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_destroy
dedent|''
dedent|''
name|'def'
name|'test_service_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake_host2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service2'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'service2'
op|','
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update
dedent|''
name|'def'
name|'test_service_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'new_values'
op|'='
op|'{'
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host1'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'fake_binary1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'fake_topic1'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'updated_service'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'new_values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'updated_service'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update_not_found_exception
dedent|''
dedent|''
name|'def'
name|'test_service_update_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get
dedent|''
name|'def'
name|'test_service_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'some_other_fake_host'"
op|'}'
op|')'
newline|'\n'
name|'real_service1'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'service1'
op|','
name|'real_service1'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_with_compute_node
dedent|''
name|'def'
name|'test_service_get_with_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'compute_values'
op|'='
name|'dict'
op|'('
name|'vcpus'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'local_gb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb_used'
op|'='
number|'0'
op|','
name|'free_ram_mb'
op|'='
number|'1024'
op|','
nl|'\n'
name|'free_disk_gb'
op|'='
number|'2048'
op|','
name|'hypervisor_type'
op|'='
string|'"xen"'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'1'
op|','
name|'cpu_info'
op|'='
string|'""'
op|','
nl|'\n'
name|'running_vms'
op|'='
number|'0'
op|','
name|'current_workload'
op|'='
number|'0'
op|','
nl|'\n'
name|'service_id'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|'='
name|'service'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'compute'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_values'
op|')'
newline|'\n'
name|'real_service'
op|'='
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'with_compute_node'
op|'='
name|'True'
op|')'
newline|'\n'
name|'real_compute'
op|'='
name|'real_service'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'compute'
op|'['
string|"'id'"
op|']'
op|','
name|'real_compute'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_not_found_exception
dedent|''
name|'def'
name|'test_service_get_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_host_and_topic
dedent|''
name|'def'
name|'test_service_get_by_host_and_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'topic1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_service'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'real_service1'
op|'='
name|'db'
op|'.'
name|'service_get_by_host_and_topic'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host1'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'topic1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'service1'
op|','
name|'real_service1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'topic1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'disabled_services'
op|'='
op|'['
name|'services'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
name|'non_disabled_services'
op|'='
name|'services'
op|'['
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'compares'
op|'='
op|'['
nl|'\n'
op|'('
name|'services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'disabled_services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'True'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'non_disabled_services'
op|','
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'False'
op|')'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'comp'
name|'in'
name|'compares'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'*'
name|'comp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_topic
dedent|''
dedent|''
name|'def'
name|'test_service_get_all_by_topic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
string|"'t2'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'expected'
op|'='
name|'services'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'t1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_by_host
dedent|''
name|'def'
name|'test_service_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t11'"
op|','
string|"'binary'"
op|':'
string|"'b11'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
string|"'t12'"
op|','
string|"'binary'"
op|':'
string|"'b12'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'services'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'real'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'topic'"
op|':'
name|'CONF'
op|'.'
name|'compute_topic'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'topic'"
op|':'
string|"'t1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host3'"
op|','
string|"'topic'"
op|':'
name|'CONF'
op|'.'
name|'compute_topic'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'real_service'
op|'='
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'0'
op|']'
op|','
name|'real_service'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'compute_node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host_not_found
dedent|''
name|'def'
name|'test_service_get_by_compute_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args
dedent|''
name|'def'
name|'test_service_get_by_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'binary'"
op|':'
string|"'a'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'binary'"
op|':'
string|"'b'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'services'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'vals'
op|')'
name|'for'
name|'vals'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'service1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'0'
op|']'
op|','
name|'service1'
op|')'
newline|'\n'
nl|'\n'
name|'service2'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host2'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'services'
op|'['
number|'1'
op|']'
op|','
name|'service2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_args_not_found_exception
dedent|''
name|'def'
name|'test_service_get_by_args_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'HostBinaryNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'service_get_by_args'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-exists-host'"
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_binary_exists_exception
dedent|''
name|'def'
name|'test_service_binary_exists_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'.'
name|'update'
op|'('
op|'{'
string|"'topic'"
op|':'
string|"'top1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceBinaryExists'
op|','
name|'db'
op|'.'
name|'service_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_topic_exists_exceptions
dedent|''
name|'def'
name|'test_service_topic_exists_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'.'
name|'update'
op|'('
op|'{'
string|"'binary'"
op|':'
string|"'bin1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceTopicExists'
op|','
name|'db'
op|'.'
name|'service_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseInstanceTypeTestCase
dedent|''
dedent|''
name|'class'
name|'BaseInstanceTypeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseInstanceTypeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'user'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'fake_flavor'"
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'0.5'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_flavor
dedent|''
name|'def'
name|'_create_flavor'
op|'('
name|'self'
op|','
name|'values'
op|','
name|'projects'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'flavor_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|','
name|'projects'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceActionTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceActionTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|variable|IGNORED_FIELDS
indent|'    '
name|'IGNORED_FIELDS'
op|'='
op|'['
nl|'\n'
string|"'id'"
op|','
nl|'\n'
string|"'created_at'"
op|','
nl|'\n'
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
nl|'\n'
string|"'deleted'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceActionTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_action_values
dedent|''
name|'def'
name|'_create_action_values'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'action'
op|'='
string|"'run_instance'"
op|','
nl|'\n'
name|'ctxt'
op|'='
name|'None'
op|','
name|'extra'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ctxt'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'action'"
op|':'
name|'action'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'message'"
op|':'
string|"'action-message'"
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'extra'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'.'
name|'update'
op|'('
name|'extra'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
DECL|member|_create_event_values
dedent|''
name|'def'
name|'_create_event_values'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'event'
op|'='
string|"'schedule'"
op|','
nl|'\n'
name|'ctxt'
op|'='
name|'None'
op|','
name|'extra'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ctxt'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
dedent|''
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'event'"
op|':'
name|'event'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'ctxt'
op|'.'
name|'request_id'
op|','
nl|'\n'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake-host'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'fake-details'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'extra'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'.'
name|'update'
op|'('
name|'extra'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
DECL|member|_assertActionSaved
dedent|''
name|'def'
name|'_assertActionSaved'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve the action to ensure it was successfully added."""'
newline|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'actions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'action'
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertActionEventSaved
dedent|''
name|'def'
name|'_assertActionEventSaved'
op|'('
name|'self'
op|','
name|'event'
op|','
name|'action_id'
op|')'
op|':'
newline|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
indent|'        '
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'event'
op|','
name|'events'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|','
string|"'request_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_start
dedent|''
name|'def'
name|'test_instance_action_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'IGNORED_FIELDS'
op|'+'
op|'['
string|"'finish_time'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'action_values'
op|','
name|'action'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionSaved'
op|'('
name|'action'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_finish
dedent|''
name|'def'
name|'test_instance_action_finish'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'['
string|"'finish_time'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_finish'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'action_values'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'IGNORED_FIELDS'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionSaved'
op|'('
name|'action'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_finish_without_started_event
dedent|''
name|'def'
name|'test_instance_action_finish_without_started_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance finish action."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'action_values'
op|'['
string|"'finish_time'"
op|']'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|','
name|'db'
op|'.'
name|'action_finish'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_actions_get_by_instance
dedent|''
name|'def'
name|'test_instance_actions_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can get actions by UUID."""'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid1'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'expected'
op|'.'
name|'append'
op|'('
name|'action'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'['
string|"'action'"
op|']'
op|'='
string|"'resize'"
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'expected'
op|'.'
name|'append'
op|'('
name|'action'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create some extra actions'
nl|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid2'
op|','
string|"'reboot'"
op|','
name|'ctxt2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the action to ensure it was successfully added'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'actions'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_actions_get_are_in_order
dedent|''
name|'def'
name|'test_instance_actions_get_are_in_order'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure retrived actions are in order."""'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'extra'
op|'='
op|'{'
nl|'\n'
string|"'created_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid1'
op|','
name|'extra'
op|'='
name|'extra'
op|')'
newline|'\n'
name|'action1'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'['
string|"'action'"
op|']'
op|'='
string|"'delete'"
newline|'\n'
name|'action2'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'actions'
op|'='
name|'db'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'actions'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualOrderedListOfObjects'
op|'('
op|'['
name|'action2'
op|','
name|'action1'
op|']'
op|','
name|'actions'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_get_by_instance_and_action
dedent|''
name|'def'
name|'test_instance_action_get_by_instance_and_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can get an action by instance UUID and action id."""'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'request_id'
op|'='
name|'action_values'
op|'['
string|"'request_id'"
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(rpodolyaka): ensure we use a different req id for the 2nd req'
nl|'\n'
name|'action_values'
op|'['
string|"'action'"
op|']'
op|'='
string|"'resize'"
newline|'\n'
name|'action_values'
op|'['
string|"'request_id'"
op|']'
op|'='
string|"'req-00000000-7522-4d99-7ff-111111111111'"
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid2'
op|','
string|"'reboot'"
op|','
name|'ctxt2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid1'
op|','
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'run_instance'"
op|','
name|'action'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'request_id'
op|','
name|'action'
op|'['
string|"'request_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_start
dedent|''
name|'def'
name|'test_instance_action_event_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action event."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action_values'
op|'='
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action_values'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
comment|'# self.fail(self._dict_from_object(event, None))'
nl|'\n'
name|'event_values'
op|'['
string|"'action_id'"
op|']'
op|'='
name|'action'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'ignored'
op|'='
name|'self'
op|'.'
name|'IGNORED_FIELDS'
op|'+'
op|'['
string|"'finish_time'"
op|','
string|"'traceback'"
op|','
string|"'result'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'event_values'
op|','
name|'event'
op|','
name|'ignored'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionEventSaved'
op|'('
name|'event'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_start_without_action
dedent|''
name|'def'
name|'test_instance_action_event_start_without_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action event."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_without_started_event
dedent|''
name|'def'
name|'test_instance_action_event_finish_without_started_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
nl|'\n'
string|"'finish_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Success'"
nl|'\n'
op|'}'
newline|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|','
name|'extra'
op|'='
name|'event_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceActionEventNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'action_event_finish'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_without_action
dedent|''
name|'def'
name|'test_instance_action_event_finish_without_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
nl|'\n'
string|"'finish_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Success'"
nl|'\n'
op|'}'
newline|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|','
name|'extra'
op|'='
name|'event_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'action_event_finish'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_success
dedent|''
name|'def'
name|'test_instance_action_event_finish_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
nl|'\n'
string|"'finish_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Success'"
nl|'\n'
op|'}'
newline|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|','
name|'extra'
op|'='
name|'event_values'
op|')'
newline|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionEventSaved'
op|'('
name|'event'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"'Error'"
op|','
name|'action'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_finish_error
dedent|''
name|'def'
name|'test_instance_action_event_finish_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finish an instance action event with an error."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
nl|'\n'
string|"'finish_time'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
op|','
nl|'\n'
string|"'result'"
op|':'
string|"'Error'"
nl|'\n'
op|'}'
newline|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|','
name|'extra'
op|'='
name|'event_values'
op|')'
newline|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionEventSaved'
op|'('
name|'event'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'request_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Error'"
op|','
name|'action'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_and_event_start_string_time
dedent|''
name|'def'
name|'test_instance_action_and_event_start_string_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create an instance action and event with a string start_time."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
op|'{'
string|"'start_time'"
op|':'
name|'timeutils'
op|'.'
name|'strtime'
op|'('
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
op|'}'
newline|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid'
op|','
name|'extra'
op|'='
name|'event_values'
op|')'
newline|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertActionEventSaved'
op|'('
name|'event'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_events_get_are_in_order
dedent|''
name|'def'
name|'test_instance_action_events_get_are_in_order'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure retrived action events are in order."""'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'extra1'
op|'='
op|'{'
nl|'\n'
string|"'created_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'extra2'
op|'='
op|'{'
nl|'\n'
string|"'created_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'event_val1'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid1'
op|','
string|"'schedule'"
op|','
name|'extra'
op|'='
name|'extra1'
op|')'
newline|'\n'
name|'event_val2'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid1'
op|','
string|"'run'"
op|','
name|'extra'
op|'='
name|'extra1'
op|')'
newline|'\n'
name|'event_val3'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid1'
op|','
string|"'stop'"
op|','
name|'extra'
op|'='
name|'extra2'
op|')'
newline|'\n'
nl|'\n'
name|'event1'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_val1'
op|')'
newline|'\n'
name|'event2'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_val2'
op|')'
newline|'\n'
name|'event3'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'event_val3'
op|')'
newline|'\n'
nl|'\n'
name|'events'
op|'='
name|'db'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'action'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'events'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualOrderedListOfObjects'
op|'('
op|'['
name|'event3'
op|','
name|'event2'
op|','
name|'event1'
op|']'
op|','
name|'events'
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|','
string|"'request_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_action_event_get_by_id
dedent|''
name|'def'
name|'test_instance_action_event_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get a specific instance action event."""'
newline|'\n'
name|'ctxt2'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'action'
op|'='
name|'db'
op|'.'
name|'action_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'action_start'
op|'('
name|'ctxt2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_action_values'
op|'('
name|'uuid2'
op|','
string|"'reboot'"
op|','
name|'ctxt2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event'
op|'='
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event_values'
op|'='
name|'self'
op|'.'
name|'_create_event_values'
op|'('
name|'uuid2'
op|','
string|"'reboot'"
op|','
name|'ctxt2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'ctxt2'
op|','
name|'event_values'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the event to ensure it was successfully added'
nl|'\n'
name|'saved_event'
op|'='
name|'db'
op|'.'
name|'action_event_get_by_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'action'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'event'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'event'
op|','
name|'saved_event'
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|','
string|"'request_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceFaultTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceFaultTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceFaultTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fault_values
dedent|''
name|'def'
name|'_create_fault_values'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'code'
op|'='
number|'404'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'message'"
op|':'
string|"'message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'detail'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'code'"
op|':'
name|'code'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'localhost'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create
dedent|''
name|'def'
name|'test_instance_fault_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can create an instance fault."""'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure no faults registered for this instance'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'faults'
op|'['
name|'uuid'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a fault'
nl|'\n'
name|'fault_values'
op|'='
name|'self'
op|'.'
name|'_create_fault_values'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|')'
newline|'\n'
name|'fault'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'fault_values'
op|','
name|'fault'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
comment|'# Retrieve the fault to ensure it was successfully added'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'faults'
op|'['
name|'uuid'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'fault'
op|','
name|'faults'
op|'['
name|'uuid'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_get_by_instance
dedent|''
name|'def'
name|'test_instance_fault_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure we can retrieve faults for instance."""'
newline|'\n'
name|'uuids'
op|'='
op|'['
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|']'
newline|'\n'
name|'fault_codes'
op|'='
op|'['
number|'404'
op|','
number|'500'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Create faults'
nl|'\n'
name|'for'
name|'uuid'
name|'in'
name|'uuids'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'['
name|'uuid'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'code'
name|'in'
name|'fault_codes'
op|':'
newline|'\n'
indent|'                '
name|'fault_values'
op|'='
name|'self'
op|'.'
name|'_create_fault_values'
op|'('
name|'uuid'
op|','
name|'code'
op|')'
newline|'\n'
name|'fault'
op|'='
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fault_values'
op|')'
newline|'\n'
name|'expected'
op|'['
name|'uuid'
op|']'
op|'.'
name|'append'
op|'('
name|'fault'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure faults are saved'
nl|'\n'
dedent|''
dedent|''
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
name|'len'
op|'('
name|'faults'
op|')'
op|')'
newline|'\n'
name|'for'
name|'uuid'
name|'in'
name|'uuids'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|'['
name|'uuid'
op|']'
op|','
name|'faults'
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_faults_get_by_instance_uuids_no_faults
dedent|''
dedent|''
name|'def'
name|'test_instance_faults_get_by_instance_uuids_no_faults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# None should be returned when no faults exist.'
nl|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
name|'uuid'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'faults'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_faults_get_by_instance_uuids_no_uuids
dedent|''
name|'def'
name|'test_instance_faults_get_by_instance_uuids_no_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'filter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'faults'
op|'='
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'faults'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_create
indent|'    '
name|'def'
name|'test_flavor_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'extra_specs'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_create_with_projects
dedent|''
name|'def'
name|'test_flavor_create_with_projects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'projects'
op|'='
op|'['
string|"'fake-project1'"
op|','
string|"'fake-project2'"
op|']'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|','
name|'projects'
op|'+'
op|'['
string|"'fake-project2'"
op|']'
op|')'
newline|'\n'
name|'access'
op|'='
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'projects'
op|','
op|'['
name|'x'
op|'.'
name|'project_id'
name|'for'
name|'x'
name|'in'
name|'access'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_destroy
dedent|''
name|'def'
name|'test_flavor_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'specs1'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'1'"
op|','
string|"'b'"
op|':'
string|"'2'"
op|'}'
newline|'\n'
name|'flavor1'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'name1'"
op|','
string|"'flavorid'"
op|':'
string|"'a1'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'specs1'
op|'}'
op|')'
newline|'\n'
name|'specs2'
op|'='
op|'{'
string|"'c'"
op|':'
string|"'4'"
op|','
string|"'d'"
op|':'
string|"'3'"
op|'}'
newline|'\n'
name|'flavor2'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'name2'"
op|','
string|"'flavorid'"
op|':'
string|"'a2'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'specs2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'name1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'real_specs1'
op|'='
name|'db'
op|'.'
name|'flavor_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor1'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'real_specs1'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'r_flavor2'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor2'
op|','
name|'r_flavor2'
op|','
string|"'extra_specs'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_destroy_not_found
dedent|''
name|'def'
name|'test_flavor_destroy_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_destroy'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_create_duplicate_name
dedent|''
name|'def'
name|'test_flavor_create_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor'
op|','
nl|'\n'
op|'{'
string|"'flavorid'"
op|':'
string|"'some_random_flavor'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_create_duplicate_flavorid
dedent|''
name|'def'
name|'test_flavor_create_duplicate_flavorid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorIdExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'some_random_name'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_create_with_extra_specs
dedent|''
name|'def'
name|'test_flavor_create_with_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extra_specs'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
string|"'abc'"
op|','
name|'b'
op|'='
string|"'def'"
op|','
name|'c'
op|'='
string|"'ghi'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'extra_specs'"
op|':'
name|'extra_specs'
op|'}'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'extra_specs'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'extra_specs'
op|','
name|'flavor'
op|'['
string|"'extra_specs'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_all
dedent|''
name|'def'
name|'test_flavor_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(boris-42): Remove base instance types'
nl|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'flavors'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'600'
op|','
string|"'memory_mb'"
op|':'
number|'100'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'500'
op|','
string|"'memory_mb'"
op|':'
number|'200'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'400'
op|','
string|"'memory_mb'"
op|':'
number|'300'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'a3'"
op|','
string|"'flavorid'"
op|':'
string|"'f3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'300'
op|','
string|"'memory_mb'"
op|':'
number|'400'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a4'"
op|','
string|"'flavorid'"
op|':'
string|"'f4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'200'
op|','
string|"'memory_mb'"
op|':'
number|'500'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a5'"
op|','
string|"'flavorid'"
op|':'
string|"'f5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'root_gb'"
op|':'
number|'100'
op|','
string|"'memory_mb'"
op|':'
number|'600'
op|','
string|"'disabled'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
string|"'name'"
op|':'
string|"'a6'"
op|','
string|"'flavorid'"
op|':'
string|"'f6'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'flavors'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'it'
op|')'
name|'for'
name|'it'
name|'in'
name|'flavors'
op|']'
newline|'\n'
nl|'\n'
name|'lambda_filters'
op|'='
op|'{'
nl|'\n'
string|"'min_memory_mb'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'memory_mb'"
op|']'
op|'>='
name|'v'
op|','
nl|'\n'
string|"'min_root_gb'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'root_gb'"
op|']'
op|'>='
name|'v'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
name|'it'
op|'['
string|"'disabled'"
op|']'
op|'=='
name|'v'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'lambda'
name|'it'
op|','
name|'v'
op|':'
op|'('
name|'v'
name|'is'
name|'None'
name|'or'
name|'it'
op|'['
string|"'is_public'"
op|']'
op|'=='
name|'v'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mem_filts'
op|'='
op|'['
op|'{'
string|"'min_memory_mb'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
number|'100'
op|','
number|'350'
op|','
number|'550'
op|','
number|'650'
op|']'
op|']'
newline|'\n'
name|'root_filts'
op|'='
op|'['
op|'{'
string|"'min_root_gb'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
number|'100'
op|','
number|'350'
op|','
number|'550'
op|','
number|'650'
op|']'
op|']'
newline|'\n'
name|'disabled_filts'
op|'='
op|'['
op|'{'
string|"'disabled'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
name|'True'
op|','
name|'False'
op|']'
op|']'
newline|'\n'
name|'is_public_filts'
op|'='
op|'['
op|'{'
string|"'is_public'"
op|':'
name|'x'
op|'}'
name|'for'
name|'x'
name|'in'
op|'['
name|'True'
op|','
name|'False'
op|','
name|'None'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|function|assert_multi_filter_flavor_get
name|'def'
name|'assert_multi_filter_flavor_get'
op|'('
name|'filters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filters'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'filters'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_it'
op|'='
name|'flavors'
newline|'\n'
name|'for'
name|'name'
op|','
name|'value'
name|'in'
name|'filters'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'filt'
op|'='
name|'lambda'
name|'it'
op|':'
name|'lambda_filters'
op|'['
name|'name'
op|']'
op|'('
name|'it'
op|','
name|'value'
op|')'
newline|'\n'
name|'expected_it'
op|'='
name|'filter'
op|'('
name|'filt'
op|','
name|'expected_it'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'real_it'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|'='
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected_it'
op|','
name|'real_it'
op|')'
newline|'\n'
nl|'\n'
comment|'# no filter'
nl|'\n'
dedent|''
name|'assert_multi_filter_flavor_get'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# test only with one filter'
nl|'\n'
name|'for'
name|'filt'
name|'in'
name|'mem_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_flavor_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'root_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_flavor_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'disabled_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_flavor_get'
op|'('
name|'filt'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filt'
name|'in'
name|'is_public_filts'
op|':'
newline|'\n'
indent|'            '
name|'assert_multi_filter_flavor_get'
op|'('
name|'filt'
op|')'
newline|'\n'
nl|'\n'
comment|'# test all filters together'
nl|'\n'
dedent|''
name|'for'
name|'mem'
name|'in'
name|'mem_filts'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'root'
name|'in'
name|'root_filts'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'disabled'
name|'in'
name|'disabled_filts'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'is_public'
name|'in'
name|'is_public_filts'
op|':'
newline|'\n'
indent|'                        '
name|'filts'
op|'='
op|'['
name|'f'
op|'.'
name|'items'
op|'('
op|')'
name|'for'
name|'f'
name|'in'
nl|'\n'
op|'['
name|'mem'
op|','
name|'root'
op|','
name|'disabled'
op|','
name|'is_public'
op|']'
op|']'
newline|'\n'
name|'filts'
op|'='
name|'dict'
op|'('
name|'reduce'
op|'('
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'x'
op|'+'
name|'y'
op|','
name|'filts'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'assert_multi_filter_flavor_get'
op|'('
name|'filts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_all_limit_sort
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_flavor_get_all_limit_sort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|assert_sorted_by_key_dir
indent|'        '
name|'def'
name|'assert_sorted_by_key_dir'
op|'('
name|'sort_key'
op|','
name|'asc'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sort_dir'
op|'='
string|"'asc'"
name|'if'
name|'asc'
name|'else'
string|"'desc'"
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'sort_key'
op|'='
string|"'name'"
op|','
nl|'\n'
name|'sort_dir'
op|'='
name|'sort_dir'
op|')'
newline|'\n'
comment|'# Manually sort the results as we would expect them'
nl|'\n'
name|'expected_results'
op|'='
name|'sorted'
op|'('
name|'results'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'item'
op|':'
name|'item'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'reverse'
op|'='
op|'('
name|'not'
name|'asc'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_results'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|function|assert_sorted_by_key_both_dir
dedent|''
name|'def'
name|'assert_sorted_by_key_both_dir'
op|'('
name|'sort_key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'assert_sorted_by_key_dir'
op|'('
name|'sort_key'
op|','
name|'True'
op|')'
newline|'\n'
name|'assert_sorted_by_key_dir'
op|'('
name|'sort_key'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'attr'
name|'in'
op|'['
string|"'memory_mb'"
op|','
string|"'root_gb'"
op|','
string|"'deleted_at'"
op|','
string|"'name'"
op|','
string|"'deleted'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'ephemeral_gb'"
op|','
string|"'updated_at'"
op|','
string|"'disabled'"
op|','
nl|'\n'
string|"'vcpus'"
op|','
string|"'swap'"
op|','
string|"'rxtx_factor'"
op|','
string|"'is_public'"
op|','
string|"'flavorid'"
op|','
nl|'\n'
string|"'vcpu_weight'"
op|','
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'assert_sorted_by_key_both_dir'
op|'('
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_all_limit
dedent|''
dedent|''
name|'def'
name|'test_flavor_get_all_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limited_flavors'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'limit'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'limited_flavors'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_all_list_marker
dedent|''
name|'def'
name|'test_flavor_get_all_list_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'all_flavors'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
comment|'# Set the 3rd result as the marker'
nl|'\n'
name|'marker_flavorid'
op|'='
name|'all_flavors'
op|'['
number|'2'
op|']'
op|'['
string|"'flavorid'"
op|']'
newline|'\n'
name|'marked_flavors'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'marker'
op|'='
name|'marker_flavorid'
op|')'
newline|'\n'
comment|'# We expect everything /after/ the 3rd result'
nl|'\n'
name|'expected_results'
op|'='
name|'all_flavors'
op|'['
number|'3'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_results'
op|','
name|'marked_flavors'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_all_marker_not_found
dedent|''
name|'def'
name|'test_flavor_get_all_marker_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MarkerNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_all'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'marker'
op|'='
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get
dedent|''
name|'def'
name|'test_flavor_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'flavors'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'flavors'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'flavor'
name|'in'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'flavor_by_id'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_non_public
dedent|''
dedent|''
name|'def'
name|'test_flavor_get_non_public'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Admin can see it'
nl|'\n'
name|'flavor_by_id'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can not'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
name|'db'
op|'.'
name|'flavor_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'user_ctxt'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can see it after being granted access'
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_add'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'user_ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'flavor_by_id'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'user_ctxt'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_name
dedent|''
name|'def'
name|'test_flavor_get_by_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'flavors'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'flavors'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'flavor'
name|'in'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'flavor_by_name'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_name'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_name_not_found
dedent|''
dedent|''
name|'def'
name|'test_flavor_get_by_name_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFoundByName'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_by_name'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_name_non_public
dedent|''
name|'def'
name|'test_flavor_get_by_name_non_public'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Admin can see it'
nl|'\n'
name|'flavor_by_name'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_name'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can not'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFoundByName'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_by_name'
op|','
name|'self'
op|'.'
name|'user_ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can see it after being granted access'
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_add'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'user_ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'flavor_by_name'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_name'
op|'('
name|'self'
op|'.'
name|'user_ctxt'
op|','
name|'flavor'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_flavor_id
dedent|''
name|'def'
name|'test_flavor_get_by_flavor_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'def'"
op|','
string|"'flavorid'"
op|':'
string|"'456'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'ghi'"
op|','
string|"'flavorid'"
op|':'
string|"'789'"
op|'}'
op|']'
newline|'\n'
name|'flavors'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
name|'flavors'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'flavor'
name|'in'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'flavor_by_flavorid'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_flavorid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_flavor_get_by_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_flavor_id_non_public
dedent|''
name|'def'
name|'test_flavor_get_by_flavor_id_non_public'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Admin can see it'
nl|'\n'
name|'flavor_by_fid'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_fid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can not'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|','
name|'self'
op|'.'
name|'user_ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Regular user can see it after being granted access'
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_add'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'user_ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'flavor_by_fid'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|'('
name|'self'
op|'.'
name|'user_ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'flavor'
op|','
name|'flavor_by_fid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_flavor_id_deleted
dedent|''
name|'def'
name|'test_flavor_get_by_flavor_id_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'abc'"
op|')'
newline|'\n'
nl|'\n'
name|'flavor_by_fid'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|'['
string|"'id'"
op|']'
op|','
name|'flavor_by_fid'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_get_by_flavor_id_deleted_and_recreat
dedent|''
name|'def'
name|'test_flavor_get_by_flavor_id_deleted_and_recreat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(wingwj): Aims to test difference between mysql and postgresql'
nl|'\n'
comment|'# for bug 1288636'
nl|'\n'
indent|'        '
name|'param_dict'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'abc'"
op|','
string|"'flavorid'"
op|':'
string|"'123'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'param_dict'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'abc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Recreate the flavor with the same params'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'param_dict'
op|')'
newline|'\n'
nl|'\n'
name|'flavor_by_fid'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|'['
string|"'id'"
op|']'
op|','
name|'flavor_by_fid'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeExtraSpecsTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeExtraSpecsTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceTypeExtraSpecsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'values'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'dict'
op|'('
name|'a'
op|'='
string|"'a'"
op|','
name|'b'
op|'='
string|"'b'"
op|','
name|'c'
op|'='
string|"'c'"
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'dict'
op|'('
name|'d'
op|'='
string|"'d'"
op|','
name|'e'
op|'='
string|"'e'"
op|','
name|'f'
op|'='
string|"'f'"
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): We have already tested flavor_create method'
nl|'\n'
comment|'#                 with extra_specs in InstanceTypeTestCase.'
nl|'\n'
name|'self'
op|'.'
name|'flavors'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_get
dedent|''
name|'def'
name|'test_flavor_extra_specs_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'flavor_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'it'
op|'['
string|"'extra_specs'"
op|']'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_delete
dedent|''
dedent|''
name|'def'
name|'test_flavor_extra_specs_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'specs'
op|'='
name|'it'
op|'['
string|"'extra_specs'"
op|']'
newline|'\n'
name|'key'
op|'='
name|'specs'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'specs'
op|'['
name|'key'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'flavor_extra_specs_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'key'
op|')'
newline|'\n'
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'flavor_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'it'
op|'['
string|"'extra_specs'"
op|']'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_delete_failed
dedent|''
dedent|''
name|'def'
name|'test_flavor_extra_specs_delete_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorExtraSpecsNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_extra_specs_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'dummy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_update_or_create
dedent|''
dedent|''
name|'def'
name|'test_flavor_extra_specs_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'it'
name|'in'
name|'self'
op|'.'
name|'flavors'
op|':'
newline|'\n'
indent|'            '
name|'current_specs'
op|'='
name|'it'
op|'['
string|"'extra_specs'"
op|']'
newline|'\n'
name|'current_specs'
op|'.'
name|'update'
op|'('
name|'dict'
op|'('
name|'b'
op|'='
string|"'b1'"
op|','
name|'c'
op|'='
string|"'c1'"
op|','
name|'d'
op|'='
string|"'d1'"
op|','
name|'e'
op|'='
string|"'e1'"
op|')'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'current_specs'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'flavor_extra_specs_update_or_create'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'real_specs'
op|'='
name|'db'
op|'.'
name|'flavor_extra_specs_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'current_specs'
op|','
name|'real_specs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_update_or_create_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_flavor_extra_specs_update_or_create_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_extra_specs_update_or_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_extra_specs_update_or_create_retry
dedent|''
name|'def'
name|'test_flavor_extra_specs_update_or_create_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|counted
indent|'        '
name|'def'
name|'counted'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|get_id
indent|'            '
name|'def'
name|'get_id'
op|'('
name|'context'
op|','
name|'flavorid'
op|','
name|'session'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'get_id'
op|'.'
name|'counter'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'DBDuplicateEntry'
newline|'\n'
dedent|''
name|'get_id'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
name|'return'
name|'get_id'
newline|'\n'
nl|'\n'
dedent|''
name|'get_id'
op|'='
name|'counted'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'sqlalchemy_api'
op|','
string|"'_flavor_get_id_from_flavor'"
op|','
name|'get_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorExtraSpecUpdateCreateFailed'
op|','
nl|'\n'
name|'sqlalchemy_api'
op|'.'
name|'flavor_extra_specs_update_or_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
op|'{'
op|'}'
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_id'
op|'.'
name|'counter'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeAccessTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceTypeAccessTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_create_flavor_access
indent|'    '
name|'def'
name|'_create_flavor_access'
op|'('
name|'self'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'flavor_access_add'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor_id'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_get_by_flavor_id
dedent|''
name|'def'
name|'test_flavor_access_get_by_flavor_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|')'
newline|'\n'
name|'it1'
op|','
name|'it2'
op|'='
name|'tuple'
op|'('
op|'('
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'flavors'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'access_it1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'access_it2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'it'
op|','
name|'access_it'
name|'in'
name|'zip'
op|'('
op|'('
name|'it1'
op|','
name|'it2'
op|')'
op|','
op|'('
name|'access_it1'
op|','
name|'access_it2'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'real_access_it'
op|'='
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'access_it'
op|','
name|'real_access_it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_get_by_flavor_id_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_flavor_access_get_by_flavor_id_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_get_by_flavor_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_add
dedent|''
name|'def'
name|'test_flavor_access_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'project_id'
op|'='
string|"'p1'"
newline|'\n'
nl|'\n'
name|'access'
op|'='
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|"# NOTE(boris-42): Check that flavor_access_add doesn't fail and"
nl|'\n'
comment|'#                 returns correct value. This is enough because other'
nl|'\n'
comment|'#                 logic is checked by other methods.'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'access'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'access'
op|'['
string|"'instance_type_id'"
op|']'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'access'
op|'['
string|"'project_id'"
op|']'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_add_to_non_existing_flavor
dedent|''
name|'def'
name|'test_flavor_access_add_to_non_existing_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|','
nl|'\n'
string|"'nonexists'"
op|','
string|"'does_not_matter'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_add_duplicate_project_id_flavor
dedent|''
name|'def'
name|'test_flavor_access_add_duplicate_project_id_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorAccessExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|','
op|'*'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_remove
dedent|''
name|'def'
name|'test_flavor_access_remove'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
op|'('
op|'{'
string|"'name'"
op|':'
string|"'n1'"
op|','
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'n2'"
op|','
string|"'flavorid'"
op|':'
string|"'f2'"
op|'}'
op|')'
newline|'\n'
name|'it1'
op|','
name|'it2'
op|'='
name|'tuple'
op|'('
op|'('
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'v'
op|')'
name|'for'
name|'v'
name|'in'
name|'flavors'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'access_it1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'access_it2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
name|'it2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'pr1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_remove'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it1'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'access_it1'
op|'['
number|'1'
op|']'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'it'
op|','
name|'access_it'
name|'in'
name|'zip'
op|'('
op|'('
name|'it1'
op|','
name|'it2'
op|')'
op|','
op|'('
name|'access_it1'
op|'['
op|':'
number|'1'
op|']'
op|','
name|'access_it2'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'it'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'real_access_it'
op|'='
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'access_it'
op|','
name|'real_access_it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_remove_flavor_not_found
dedent|''
dedent|''
name|'def'
name|'test_flavor_access_remove_flavor_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_remove'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexists'"
op|','
string|"'does_not_matter'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_remove_access_not_found
dedent|''
name|'def'
name|'test_flavor_access_remove_access_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|'}'
op|')'
newline|'\n'
name|'params'
op|'='
op|'('
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorAccessNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'flavor_access_remove'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavor_access_removed_after_flavor_destroy
dedent|''
name|'def'
name|'test_flavor_access_removed_after_flavor_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor1'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f1'"
op|','
string|"'name'"
op|':'
string|"'n1'"
op|'}'
op|')'
newline|'\n'
name|'flavor2'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|'{'
string|"'flavorid'"
op|':'
string|"'f2'"
op|','
string|"'name'"
op|':'
string|"'n2'"
op|'}'
op|')'
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'('
name|'flavor1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p1'"
op|')'
op|','
nl|'\n'
op|'('
name|'flavor1'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p2'"
op|')'
op|','
nl|'\n'
op|'('
name|'flavor2'
op|'['
string|"'flavorid'"
op|']'
op|','
string|"'p3'"
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_flavor_access'
op|'('
op|'*'
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor1'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor1'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
name|'p'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor2'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'flavor2'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'flavor_access_get_by_flavor_id'
op|'('
op|'*'
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIPTestCase
dedent|''
dedent|''
name|'class'
name|'FixedIPTestCase'
op|'('
name|'BaseInstanceTypeTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_timeout_test
indent|'    '
name|'def'
name|'_timeout_test'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'timeout'
op|','
name|'multi_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'host'
op|'='
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'multi_host'
op|'='
name|'multi_host'
op|','
nl|'\n'
name|'host'
op|'='
string|"'bar'"
op|')'
op|')'
newline|'\n'
name|'old'
op|'='
name|'timeout'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'new'
op|'='
name|'timeout'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
comment|'# should deallocate'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# still allocated'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'True'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# wrong network'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'old'
op|')'
op|')'
newline|'\n'
comment|'# too new'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'ctxt'
op|','
name|'dict'
op|'('
name|'allocated'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'new'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_db_query_first_to_raise_data_error_exception
dedent|''
name|'def'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'first'"
op|')'
newline|'\n'
name|'query'
op|'.'
name|'Query'
op|'.'
name|'first'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exc'
op|'.'
name|'DBError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_disassociate_all_by_timeout_single_host
dedent|''
name|'def'
name|'test_fixed_ip_disassociate_all_by_timeout_single_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timeout_test'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'now'
op|','
name|'False'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'foo'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'0'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'bar'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_disassociate_all_by_timeout_multi_host
dedent|''
name|'def'
name|'test_fixed_ip_disassociate_all_by_timeout_multi_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timeout_test'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'now'
op|','
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'foo'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'fixed_ip_disassociate_all_by_timeout'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'bar'"
op|','
name|'now'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_floating_address
dedent|''
name|'def'
name|'test_fixed_ip_get_by_floating_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.2'"
op|'}'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'8.7.6.5'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'fixed_ip'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'floating'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'fixed_ip_ref'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_floating_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'floating'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_host
dedent|''
name|'def'
name|'test_fixed_ip_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_ips'
op|'='
op|'{'
nl|'\n'
string|"'host1'"
op|':'
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
op|','
nl|'\n'
string|"'host2'"
op|':'
op|'['
string|"'1.1.1.4'"
op|','
string|"'1.1.1.5'"
op|']'
op|','
nl|'\n'
string|"'host3'"
op|':'
op|'['
string|"'1.1.1.6'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'host'
op|','
name|'ips'
name|'in'
name|'host_ips'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ip'
name|'in'
name|'ips'
op|':'
newline|'\n'
indent|'                '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'ip'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'host'
op|','
name|'ips'
name|'in'
name|'host_ips'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ips_on_host'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'ips_on_host'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_network_host_not_found_exception
dedent|''
dedent|''
name|'def'
name|'test_fixed_ip_get_by_network_host_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetworkHost'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_network_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'ignore'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_network_host_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_network_host_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'network_id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_network_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'fip'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host'"
op|','
name|'fip'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
op|'['
name|'FIXED_IP_ADDRESS'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_multiple_fixed_ips_found
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_multiple_fixed_ips_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_inappropriate_ignored
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_inappropriate_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'another_instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'another_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'address'
op|'='
string|'"192.168.1.7"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_instance_not_found_exception
dedent|''
name|'def'
name|'test_fixed_ip_get_by_instance_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForInstance'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_fixed_ip_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_fixed_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
op|'['
name|'FIXED_IP_ADDRESS'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_multiple_fixed_ips_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_multiple_fixed_ips_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_inappropriate_ignored
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_inappropriate_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'FIXED_IP_ADDRESS_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_1'
op|')'
op|')'
newline|'\n'
name|'FIXED_IP_ADDRESS_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
name|'FIXED_IP_ADDRESS_2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'another_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
nl|'\n'
name|'virtual_interface_id'
op|'='
name|'another_vif'
op|'.'
name|'id'
op|','
name|'address'
op|'='
string|'"192.168.1.7"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
nl|'\n'
op|'['
name|'FIXED_IP_ADDRESS_1'
op|','
name|'FIXED_IP_ADDRESS_2'
op|']'
op|','
nl|'\n'
op|'['
name|'ips_list'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|','
name|'ips_list'
op|'['
number|'1'
op|']'
op|'.'
name|'address'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ips_by_virtual_interface_no_ip_found
dedent|''
name|'def'
name|'test_fixed_ips_by_virtual_interface_no_ip_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'dict'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ips_list'
op|'='
name|'db'
op|'.'
name|'fixed_ips_by_virtual_interface'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'ips_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_fixed_ip
dedent|''
name|'def'
name|'create_fixed_ip'
op|'('
name|'self'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'default_params'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.1'"
op|'}'
newline|'\n'
name|'default_params'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'default_params'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_fails_if_ip_not_in_network
dedent|''
name|'def'
name|'test_fixed_ip_associate_fails_if_ip_not_in_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetwork'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_fails_if_ip_in_use
dedent|''
name|'def'
name|'test_fixed_ip_associate_fails_if_ip_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_succeeds
dedent|''
name|'def'
name|'test_fixed_ip_associate_succeeds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_succeeds_and_sets_network
dedent|''
name|'def'
name|'test_fixed_ip_associate_succeeds_and_sets_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'network_id'"
op|']'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_pool_invalid_uuid
dedent|''
name|'def'
name|'test_fixed_ip_associate_pool_invalid_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'123'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidUUID'
op|','
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_pool_no_more_fixed_ips
dedent|''
name|'def'
name|'test_fixed_ip_associate_pool_no_more_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoMoreFixedIps'
op|','
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_associate_pool_succeeds
dedent|''
name|'def'
name|'test_fixed_ip_associate_pool_succeeds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'self'
op|'.'
name|'create_fixed_ip'
op|'('
name|'network_id'
op|'='
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_create_same_address
dedent|''
name|'def'
name|'test_fixed_ip_create_same_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpExists'
op|','
name|'db'
op|'.'
name|'fixed_ip_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_create_success
dedent|''
name|'def'
name|'test_fixed_ip_create_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'param'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.5'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
name|'fixed_ip_data'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'param'
op|','
name|'fixed_ip_data'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_bulk_create_same_address
dedent|''
name|'def'
name|'test_fixed_ip_bulk_create_same_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'address_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id_1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'network_id_2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'params'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'address'"
op|':'
name|'address_2'
op|','
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
string|"'network_id'"
op|':'
name|'network_id_1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'address'"
op|':'
name|'address_1'
op|','
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
string|"'network_id'"
op|':'
name|'network_id_1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'address'"
op|':'
name|'address_2'
op|','
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
string|"'network_id'"
op|':'
name|'network_id_2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpExists'
op|','
name|'db'
op|'.'
name|'fixed_ip_bulk_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'params'
op|')'
newline|'\n'
comment|'# In this case the transaction will be rolled back and none of the ips'
nl|'\n'
comment|'# will make it to the database.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address_1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address_2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_bulk_create_success
dedent|''
name|'def'
name|'test_fixed_ip_bulk_create_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address_1'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'address_2'
op|'='
string|"'192.168.1.6'"
newline|'\n'
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id_1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'network_id_2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'params'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'address'"
op|':'
name|'address_1'
op|','
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
string|"'network_id'"
op|':'
name|'network_id_1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'address'"
op|':'
name|'address_2'
op|','
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
string|"'network_id'"
op|':'
name|'network_id_2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_bulk_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'params'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'virtual_interface'"
op|','
string|"'network'"
op|','
string|"'floating_ips'"
op|']'
newline|'\n'
name|'fixed_ip_data'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# we have no `id` in incoming data so we can not use'
nl|'\n'
comment|'# _assertEqualListsOfObjects to compare incoming data and received'
nl|'\n'
comment|'# objects'
nl|'\n'
name|'fixed_ip_data'
op|'='
name|'sorted'
op|'('
name|'fixed_ip_data'
op|','
name|'key'
op|'='
name|'lambda'
name|'i'
op|':'
name|'i'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'params'
op|'='
name|'sorted'
op|'('
name|'params'
op|','
name|'key'
op|'='
name|'lambda'
name|'i'
op|':'
name|'i'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'param'
op|','
name|'ip'
name|'in'
name|'zip'
op|'('
name|'params'
op|','
name|'fixed_ip_data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'param'
op|','
name|'ip'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_disassociate
dedent|''
dedent|''
name|'def'
name|'test_fixed_ip_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.1.5'"
op|','
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|'}'
newline|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'param'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif'
op|'['
string|"'id'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_disassociate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'fixed_ip_data'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|','
string|"'deleted_at'"
op|','
nl|'\n'
string|"'updated_at'"
op|','
string|"'instance_uuid'"
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'param'
op|','
name|'fixed_ip_data'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fixed_ip_data'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fixed_ip_data'
op|'['
string|"'virtual_interface_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_not_found_exception
dedent|''
name|'def'
name|'test_fixed_ip_get_not_found_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_success2
dedent|''
name|'def'
name|'test_fixed_ip_get_success2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'param'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
nl|'\n'
op|'}'
newline|'\n'
name|'fixed_ip_id'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'is_admin'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
name|'db'
op|'.'
name|'fixed_ip_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fixed_ip_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_success
dedent|''
name|'def'
name|'test_fixed_ip_get_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|"'192.168.1.5'"
newline|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'param'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ip_id'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'fixed_ip_data'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fixed_ip_id'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'param'
op|','
name|'fixed_ip_data'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_get_by_address
dedent|''
name|'def'
name|'test_fixed_ip_get_by_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'instance'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instance'"
op|','
name|'fixed_ip'
op|'.'
name|'__dict__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_uuid'
op|','
name|'fixed_ip'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_update_not_found_for_address
dedent|''
name|'def'
name|'test_fixed_ip_update_not_found_for_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'192.168.1.5'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_update
dedent|''
name|'def'
name|'test_fixed_ip_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid_1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuid_2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_id_1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'network_id_2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'param_1'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'True'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'192.168.133.1'"
op|','
string|"'address'"
op|':'
string|"'10.0.0.2'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
string|"'instance_uuid'"
op|':'
name|'instance_uuid_1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id_1'
op|','
string|"'virtual_interface_id'"
op|':'
string|"'123'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'param_2'
op|'='
op|'{'
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'address'"
op|':'
string|"'10.0.0.3'"
op|','
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid_2'
op|','
string|"'network_id'"
op|':'
name|'network_id_2'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'None'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'created_at'"
op|','
string|"'id'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
name|'fixed_ip_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param_1'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fixed_ip_addr'
op|','
name|'param_2'
op|')'
newline|'\n'
name|'fixed_ip_after_update'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'param_2'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'param_2'
op|','
name|'fixed_ip_after_update'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIpTestCase
dedent|''
dedent|''
name|'class'
name|'FloatingIpTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FloatingIpTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'fake_pool'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'fake_interface'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|mock_db_query_first_to_raise_data_error_exception
dedent|''
name|'def'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'first'"
op|')'
newline|'\n'
name|'query'
op|'.'
name|'Query'
op|'.'
name|'first'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exc'
op|'.'
name|'DBError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_floating_ip
dedent|''
name|'def'
name|'_create_floating_ip'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'vals'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'vals'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vals'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get
dedent|''
name|'def'
name|'test_floating_ip_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
op|'{'
string|"'address'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|','
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|'}'
op|']'
newline|'\n'
name|'floating_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
name|'val'
op|')'
name|'for'
name|'val'
name|'in'
name|'values'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'floating_ip'
name|'in'
name|'floating_ips'
op|':'
newline|'\n'
indent|'            '
name|'real_floating_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'floating_ip'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'floating_ip'
op|','
name|'real_floating_ip'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'fixed_ip'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_not_found
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_get_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_with_long_id_not_found
dedent|''
name|'def'
name|'test_floating_ip_get_with_long_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidID'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'123456789101112'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_pools
dedent|''
name|'def'
name|'test_floating_ip_get_pools'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'0.0.0.0'"
op|','
string|"'pool'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'pool'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2.2.2.2'"
op|','
string|"'pool'"
op|':'
string|"'def'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'3.3.3.3'"
op|','
string|"'pool'"
op|':'
string|"'ghi'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'val'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'expected_pools'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'x'
op|'}'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'set'
op|'('
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'['
string|"'pool'"
op|']'
op|','
name|'values'
op|')'
op|')'
op|']'
newline|'\n'
name|'real_pools'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_pools'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'real_pools'
op|','
name|'expected_pools'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_allocate_address
dedent|''
name|'def'
name|'test_floating_ip_allocate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pools'
op|'='
op|'{'
nl|'\n'
string|"'pool1'"
op|':'
op|'['
string|"'0.0.0.0'"
op|','
string|"'1.1.1.1'"
op|']'
op|','
nl|'\n'
string|"'pool2'"
op|':'
op|'['
string|"'2.2.2.2'"
op|']'
op|','
nl|'\n'
string|"'pool3'"
op|':'
op|'['
string|"'3.3.3.3'"
op|','
string|"'4.4.4.4'"
op|','
string|"'5.5.5.5'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'pool'
op|','
name|'addresses'
name|'in'
name|'pools'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'address'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'                '
name|'vals'
op|'='
op|'{'
string|"'pool'"
op|':'
name|'pool'
op|','
string|"'address'"
op|':'
name|'address'
op|','
string|"'project_id'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
name|'vals'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'project_id'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'for'
name|'pool'
op|','
name|'addresses'
name|'in'
name|'pools'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'alloc_addrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'                '
name|'float_addr'
op|'='
name|'db'
op|'.'
name|'floating_ip_allocate_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_id'
op|','
name|'pool'
op|')'
newline|'\n'
name|'alloc_addrs'
op|'.'
name|'append'
op|'('
name|'float_addr'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'alloc_addrs'
op|','
name|'addresses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_allocate_auto_assigned
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_allocate_auto_assigned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|','
string|"'1.1.1.4'"
op|']'
newline|'\n'
nl|'\n'
name|'float_ips'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'float_ips'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
nl|'\n'
op|'{'
string|'"address"'
op|':'
name|'addresses'
op|'['
name|'i'
op|']'
op|'}'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'float_ips'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|'"address"'
op|':'
name|'addresses'
op|'['
name|'i'
op|']'
op|','
nl|'\n'
string|'"auto_assigned"'
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ips'
op|'['
name|'i'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'float_ip'
op|'.'
name|'auto_assigned'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ips'
op|'['
name|'i'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'float_ip'
op|'.'
name|'auto_assigned'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_allocate_address_no_more_floating_ips
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_allocate_address_no_more_floating_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_allocate_address'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'any_project_id'"
op|','
string|"'no_such_pool'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_allocate_not_authorized
dedent|''
name|'def'
name|'test_floating_ip_allocate_not_authorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user_id'
op|'='
string|"'a'"
op|','
name|'project_id'
op|'='
string|"'abc'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_allocate_address'
op|','
nl|'\n'
name|'ctxt'
op|','
string|"'other_project_id'"
op|','
string|"'any_pool'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_existing_ips
dedent|''
name|'def'
name|'_get_existing_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'ip'
op|'['
string|"'address'"
op|']'
name|'for'
name|'ip'
name|'in'
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_bulk_create
dedent|''
name|'def'
name|'test_floating_ip_bulk_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_ips'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|','
string|"'1.1.1.4'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'floating_ip_bulk_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
op|'{'
string|"'address'"
op|':'
name|'x'
op|'}'
op|','
name|'expected_ips'
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'self'
op|'.'
name|'_get_existing_ips'
op|'('
op|')'
op|','
nl|'\n'
name|'expected_ips'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_bulk_create_duplicate
dedent|''
name|'def'
name|'test_floating_ip_bulk_create_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ips'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|','
string|"'1.1.1.4'"
op|']'
newline|'\n'
name|'prepare_ips'
op|'='
name|'lambda'
name|'x'
op|':'
op|'{'
string|"'address'"
op|':'
name|'x'
op|'}'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'floating_ip_bulk_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'map'
op|'('
name|'prepare_ips'
op|','
name|'ips'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ips'
op|','
op|'['
name|'ip'
op|'.'
name|'address'
name|'for'
name|'ip'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_bulk_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'map'
op|'('
name|'prepare_ips'
op|','
op|'['
string|"'1.1.1.5'"
op|','
string|"'1.1.1.4'"
op|']'
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_by_address'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'1.1.1.5'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_bulk_destroy
dedent|''
name|'def'
name|'test_floating_ip_bulk_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ips_for_delete'
op|'='
op|'['
op|']'
newline|'\n'
name|'ips_for_non_delete'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|create_ips
name|'def'
name|'create_ips'
op|'('
name|'i'
op|','
name|'j'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'address'"
op|':'
string|"'1.1.%s.%s'"
op|'%'
op|'('
name|'i'
op|','
name|'k'
op|')'
op|'}'
name|'for'
name|'k'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'j'
op|'+'
number|'1'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): Create more than 256 ip to check that'
nl|'\n'
comment|'#                 _ip_range_splitter works properly.'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ips_for_delete'
op|'.'
name|'extend'
op|'('
name|'create_ips'
op|'('
name|'i'
op|','
number|'255'
op|')'
op|')'
newline|'\n'
dedent|''
name|'ips_for_non_delete'
op|'.'
name|'extend'
op|'('
name|'create_ips'
op|'('
number|'3'
op|','
number|'255'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'floating_ip_bulk_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'ips_for_delete'
op|'+'
name|'ips_for_non_delete'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'non_bulk_ips_for_delete'
op|'='
name|'create_ips'
op|'('
number|'4'
op|','
number|'3'
op|')'
newline|'\n'
name|'non_bulk_ips_for_non_delete'
op|'='
name|'create_ips'
op|'('
number|'5'
op|','
number|'3'
op|')'
newline|'\n'
name|'non_bulk_ips'
op|'='
name|'non_bulk_ips_for_delete'
op|'+'
name|'non_bulk_ips_for_non_delete'
newline|'\n'
name|'project_id'
op|'='
string|"'fake_project'"
newline|'\n'
name|'reservations'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'floating_ips'
op|'='
name|'len'
op|'('
name|'non_bulk_ips'
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
name|'for'
name|'dct'
name|'in'
name|'non_bulk_ips'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
name|'dct'
op|')'
newline|'\n'
dedent|''
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_usage_get_all_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'project_id'
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'6'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'ips_for_delete'
op|'.'
name|'extend'
op|'('
name|'non_bulk_ips_for_delete'
op|')'
newline|'\n'
name|'ips_for_non_delete'
op|'.'
name|'extend'
op|'('
name|'non_bulk_ips_for_non_delete'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_bulk_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'ips_for_delete'
op|')'
newline|'\n'
nl|'\n'
name|'expected_addresses'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'['
string|"'address'"
op|']'
op|','
name|'ips_for_non_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'self'
op|'.'
name|'_get_existing_ips'
op|'('
op|')'
op|','
nl|'\n'
name|'expected_addresses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_usage_get_all_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'project_id'
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'3'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_create
dedent|''
name|'def'
name|'test_floating_ip_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'floating_ip'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'floating_ip'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_create_duplicate
dedent|''
name|'def'
name|'test_floating_ip_create_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_floating_ip'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fixed_ip
dedent|''
name|'def'
name|'_create_fixed_ip'
op|'('
name|'self'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'default_params'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.1'"
op|'}'
newline|'\n'
name|'default_params'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'default_params'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_fixed_ip_associate
dedent|''
name|'def'
name|'test_floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'fixed_addresses'
op|'='
op|'['
string|"'2.2.2.1'"
op|','
string|"'2.2.2.2'"
op|','
string|"'2.2.2.3'"
op|']'
newline|'\n'
nl|'\n'
name|'float_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'float_addresses'
op|']'
newline|'\n'
name|'fixed_addrs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_fixed_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'fixed_addresses'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'float_ip'
op|','
name|'fixed_addr'
name|'in'
name|'zip'
op|'('
name|'float_ips'
op|','
name|'fixed_addrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'float_ip'
op|'.'
name|'address'
op|','
nl|'\n'
name|'fixed_addr'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'.'
name|'address'
op|','
name|'fixed_addr'
op|')'
newline|'\n'
nl|'\n'
name|'updated_float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'.'
name|'id'
op|','
name|'updated_float_ip'
op|'.'
name|'fixed_ip_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host'"
op|','
name|'updated_float_ip'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test that already allocated float_ip returns None'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'float_addresses'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fixed_addresses'
op|'['
number|'0'
op|']'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_fixed_ip_associate_float_ip_not_found
dedent|''
name|'def'
name|'test_floating_ip_fixed_ip_associate_float_ip_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'10.10.10.10'"
op|','
string|"'some'"
op|','
string|"'some'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_deallocate
dedent|''
name|'def'
name|'test_floating_ip_deallocate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|','
string|"'host'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'float_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
name|'values'
op|')'
newline|'\n'
name|'rows_updated'
op|'='
name|'db'
op|'.'
name|'floating_ip_deallocate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'rows_updated'
op|')'
newline|'\n'
nl|'\n'
name|'updated_float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'updated_float_ip'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'updated_float_ip'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'updated_float_ip'
op|'.'
name|'auto_assigned'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_deallocate_address_not_found
dedent|''
name|'def'
name|'test_floating_ip_deallocate_address_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'db'
op|'.'
name|'floating_ip_deallocate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'2.2.2.2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_destroy
dedent|''
name|'def'
name|'test_floating_ip_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'float_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'addr'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'addr'
name|'in'
name|'addresses'
op|']'
newline|'\n'
nl|'\n'
name|'expected_len'
op|'='
name|'len'
op|'('
name|'addresses'
op|')'
newline|'\n'
name|'for'
name|'float_ip'
name|'in'
name|'float_ips'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'expected_len'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'expected_len'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_len'
op|','
nl|'\n'
name|'len'
op|'('
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoFloatingIpsDefined'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_all'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_disassociate
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'fixed_addresses'
op|'='
op|'['
string|"'2.2.2.1'"
op|','
string|"'2.2.2.2'"
op|','
string|"'2.2.2.3'"
op|']'
newline|'\n'
nl|'\n'
name|'float_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'float_addresses'
op|']'
newline|'\n'
name|'fixed_addrs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_fixed_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'fixed_addresses'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'float_ip'
op|','
name|'fixed_addr'
name|'in'
name|'zip'
op|'('
name|'float_ips'
op|','
name|'fixed_addrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'float_ip'
op|'.'
name|'address'
op|','
nl|'\n'
name|'fixed_addr'
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'float_ip'
op|','
name|'fixed_addr'
name|'in'
name|'zip'
op|'('
name|'float_ips'
op|','
name|'fixed_addrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed'
op|'='
name|'db'
op|'.'
name|'floating_ip_disassociate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed'
op|'.'
name|'address'
op|','
name|'fixed_addr'
op|')'
newline|'\n'
name|'updated_float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'updated_float_ip'
op|'.'
name|'fixed_ip_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'updated_float_ip'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_disassociate_not_found
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_disassociate_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_disassociate'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'11.11.11.11'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all
dedent|''
name|'def'
name|'test_floating_ip_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'float_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'addr'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'addr'
name|'in'
name|'addresses'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'float_ips'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
string|'"fixed_ip"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_associated
dedent|''
name|'def'
name|'test_floating_ip_get_all_associated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'float_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|'}'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'self'
op|'.'
name|'_create_fixed_ip'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'2.2.2.2'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'float_ip'
op|'.'
name|'address'
op|','
nl|'\n'
name|'fixed_ip'
op|','
nl|'\n'
string|"'host'"
op|')'
newline|'\n'
name|'float_ips'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'float_ips'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'float_ip'
op|'.'
name|'address'
op|','
name|'float_ips'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|','
name|'float_ips'
op|'['
number|'0'
op|']'
op|'.'
name|'fixed_ip'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|','
name|'float_ips'
op|'['
number|'0'
op|']'
op|'.'
name|'fixed_ip'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_not_found
dedent|''
name|'def'
name|'test_floating_ip_get_all_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoFloatingIpsDefined'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_all'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_by_host
dedent|''
name|'def'
name|'test_floating_ip_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
op|'{'
nl|'\n'
string|"'host1'"
op|':'
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|']'
op|','
nl|'\n'
string|"'host2'"
op|':'
op|'['
string|"'2.1.1.1'"
op|','
string|"'2.1.1.2'"
op|']'
op|','
nl|'\n'
string|"'host3'"
op|':'
op|'['
string|"'3.1.1.1'"
op|','
string|"'3.1.1.2'"
op|','
string|"'3.1.1.3'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'hosts_with_float_ips'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'host'
op|','
name|'addresses'
name|'in'
name|'hosts'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'hosts_with_float_ips'
op|'['
name|'host'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'address'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'                '
name|'float_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'host'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
newline|'\n'
name|'hosts_with_float_ips'
op|'['
name|'host'
op|']'
op|'.'
name|'append'
op|'('
name|'float_ip'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'host'
op|','
name|'float_ips'
name|'in'
name|'hosts_with_float_ips'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'real_float_ips'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'float_ips'
op|','
name|'real_float_ips'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
string|'"fixed_ip"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_by_host_not_found
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_get_all_by_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFoundForHost'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_all_by_host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non_exists_host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_by_project
dedent|''
name|'def'
name|'test_floating_ip_get_all_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'projects'
op|'='
op|'{'
nl|'\n'
string|"'pr1'"
op|':'
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|']'
op|','
nl|'\n'
string|"'pr2'"
op|':'
op|'['
string|"'2.1.1.1'"
op|','
string|"'2.1.1.2'"
op|']'
op|','
nl|'\n'
string|"'pr3'"
op|':'
op|'['
string|"'3.1.1.1'"
op|','
string|"'3.1.1.2'"
op|','
string|"'3.1.1.3'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'projects_with_float_ips'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'project_id'
op|','
name|'addresses'
name|'in'
name|'projects'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'projects_with_float_ips'
op|'['
name|'project_id'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'address'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'                '
name|'float_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'project_id'"
op|':'
name|'project_id'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
newline|'\n'
name|'projects_with_float_ips'
op|'['
name|'project_id'
op|']'
op|'.'
name|'append'
op|'('
name|'float_ip'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'project_id'
op|','
name|'float_ips'
name|'in'
name|'projects_with_float_ips'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'real_float_ips'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'float_ips'
op|','
name|'real_float_ips'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
string|"'fixed_ip'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_all_by_project_not_authorized
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_get_all_by_project_not_authorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user_id'
op|'='
string|"'a'"
op|','
name|'project_id'
op|'='
string|"'abc'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_all_by_project'
op|','
nl|'\n'
name|'ctxt'
op|','
string|"'other_project'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_address
dedent|''
name|'def'
name|'test_floating_ip_get_by_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addresses'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'1.1.1.2'"
op|','
string|"'1.1.1.3'"
op|']'
newline|'\n'
name|'float_ips'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'addr'
op|'}'
op|')'
nl|'\n'
name|'for'
name|'addr'
name|'in'
name|'addresses'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'float_ip'
name|'in'
name|'float_ips'
op|':'
newline|'\n'
indent|'            '
name|'real_float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'float_ip'
op|'.'
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'float_ip'
op|','
name|'real_float_ip'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
string|"'fixed_ip'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_address_not_found
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_get_by_address_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_by_address'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'20.20.20.20'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_invalid_address
dedent|''
name|'def'
name|'test_floating_ip_get_by_invalid_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidIpAddressError'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_get_by_address'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non_exists_host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_fixed_address
dedent|''
name|'def'
name|'test_floating_ip_get_by_fixed_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_float'
op|'='
op|'['
nl|'\n'
op|'('
string|"'1.1.1.1'"
op|','
string|"'2.2.2.1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'1.1.1.2'"
op|','
string|"'2.2.2.2'"
op|')'
op|','
nl|'\n'
op|'('
string|"'1.1.1.3'"
op|','
string|"'2.2.2.3'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'fixed_addr'
op|','
name|'float_addr'
name|'in'
name|'fixed_float'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'float_addr'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_fixed_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'fixed_addr'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_addr'
op|','
nl|'\n'
name|'fixed_addr'
op|','
string|"'some_host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'fixed_addr'
op|','
name|'float_addr'
name|'in'
name|'fixed_float'
op|':'
newline|'\n'
indent|'            '
name|'float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_by_fixed_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fixed_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'float_addr'
op|','
name|'float_ip'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_get_by_fixed_ip_id
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_get_by_fixed_ip_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_float'
op|'='
op|'['
nl|'\n'
op|'('
string|"'1.1.1.1'"
op|','
string|"'2.2.2.1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'1.1.1.2'"
op|','
string|"'2.2.2.2'"
op|')'
op|','
nl|'\n'
op|'('
string|"'1.1.1.3'"
op|','
string|"'2.2.2.3'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'fixed_addr'
op|','
name|'float_addr'
name|'in'
name|'fixed_float'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'float_addr'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_fixed_ip'
op|'('
op|'{'
string|"'address'"
op|':'
name|'fixed_addr'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_addr'
op|','
nl|'\n'
name|'fixed_addr'
op|','
string|"'some_host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'fixed_addr'
op|','
name|'float_addr'
name|'in'
name|'fixed_float'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fixed_addr'
op|')'
newline|'\n'
name|'float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_by_fixed_ip_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fixed_ip'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'float_addr'
op|','
name|'float_ip'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_update
dedent|''
dedent|''
name|'def'
name|'test_floating_ip_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_ip'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'some_pr'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'some_host'"
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'some_interface'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'some_pool'"
nl|'\n'
op|'}'
newline|'\n'
name|'floating_ref'
op|'='
name|'db'
op|'.'
name|'floating_ip_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'floating_ref'
op|')'
newline|'\n'
name|'updated_float_ip'
op|'='
name|'db'
op|'.'
name|'floating_ip_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'updated_float_ip'
op|','
name|'values'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'address'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
nl|'\n'
string|"'deleted'"
op|','
string|"'fixed_ip_id'"
op|','
nl|'\n'
string|"'fixed_ip'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_update_to_duplicate
dedent|''
name|'def'
name|'test_floating_ip_update_to_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'float_ip1'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.1'"
op|'}'
op|')'
newline|'\n'
name|'float_ip2'
op|'='
name|'self'
op|'.'
name|'_create_floating_ip'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'1.1.1.2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpExists'
op|','
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'float_ip2'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'float_ip1'
op|'['
string|"'address'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceDestroyConstraints
dedent|''
dedent|''
name|'class'
name|'InstanceDestroyConstraints'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_equal_any_constraint_met_single_value
indent|'    '
name|'def'
name|'test_destroy_with_equal_any_constraint_met_single_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'task_state'"
op|':'
string|"'deleting'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'task_state'
op|'='
name|'db'
op|'.'
name|'equal_any'
op|'('
string|"'deleting'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_equal_any_constraint_met
dedent|''
name|'def'
name|'test_destroy_with_equal_any_constraint_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'task_state'"
op|':'
string|"'deleting'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'task_state'
op|'='
name|'db'
op|'.'
name|'equal_any'
op|'('
string|"'deleting'"
op|','
nl|'\n'
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_equal_any_constraint_not_met
dedent|''
name|'def'
name|'test_destroy_with_equal_any_constraint_not_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'resize'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'vm_state'
op|'='
name|'db'
op|'.'
name|'equal_any'
op|'('
string|"'active'"
op|','
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|','
name|'db'
op|'.'
name|'instance_destroy'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_not_equal_constraint_met
dedent|''
name|'def'
name|'test_destroy_with_not_equal_constraint_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'task_state'"
op|':'
string|"'deleting'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'task_state'
op|'='
name|'db'
op|'.'
name|'not_equal'
op|'('
string|"'error'"
op|','
string|"'resize'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_with_not_equal_constraint_not_met
dedent|''
name|'def'
name|'test_destroy_with_not_equal_constraint_not_met'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctx'
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
name|'constraint'
op|'='
name|'db'
op|'.'
name|'constraint'
op|'('
name|'vm_state'
op|'='
name|'db'
op|'.'
name|'not_equal'
op|'('
string|"'active'"
op|','
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConstraintNotMet'
op|','
name|'db'
op|'.'
name|'instance_destroy'
op|','
nl|'\n'
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'constraint'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'ctx'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeUsageDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'VolumeUsageDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeUsageDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'test'
op|'.'
name|'TimeOverride'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_no_totals_update
dedent|''
name|'def'
name|'test_vol_usage_update_no_totals_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now'
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'expected_vol_usages'
op|'='
op|'{'
nl|'\n'
string|"u'1'"
op|':'
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid1'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'2000'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'3000'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'4000'
op|','
nl|'\n'
string|"'curr_last_refreshed'"
op|':'
name|'now'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_last_refreshed'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
string|"u'2'"
op|':'
op|'{'
string|"'volume_id'"
op|':'
string|"u'2'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid2'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid2'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid2'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'300'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_last_refreshed'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_compare
name|'def'
name|'_compare'
op|'('
name|'vol_usage'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'10'
op|','
name|'rd_bytes'
op|'='
number|'20'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'30'
op|','
name|'wr_bytes'
op|'='
number|'40'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'2'"
op|','
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid2'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid2'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid2'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'1000'
op|','
name|'rd_bytes'
op|'='
number|'2000'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'3000'
op|','
name|'wr_bytes'
op|'='
number|'4000'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'usage'
name|'in'
name|'vol_usages'
op|':'
newline|'\n'
indent|'            '
name|'_compare'
op|'('
name|'usage'
op|','
name|'expected_vol_usages'
op|'['
name|'usage'
op|'.'
name|'volume_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_totals_update
dedent|''
dedent|''
name|'def'
name|'test_vol_usage_update_totals_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'now1'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'1'
op|')'
newline|'\n'
name|'now2'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'2'
op|')'
newline|'\n'
name|'now3'
op|'='
name|'now'
op|'+'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|')'
newline|'\n'
name|'current_usage'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'tot_reads'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'200'
op|','
name|'rd_bytes'
op|'='
number|'300'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'400'
op|','
name|'wr_bytes'
op|'='
number|'500'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'True'
op|')'
newline|'\n'
name|'current_usage'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'tot_reads'"
op|']'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'300'
op|','
name|'rd_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'500'
op|','
name|'wr_bytes'
op|'='
number|'600'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|')'
newline|'\n'
name|'current_usage'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'tot_reads'"
op|']'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_usage'
op|'['
string|"'curr_reads'"
op|']'
op|','
number|'300'
op|')'
newline|'\n'
nl|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'now3'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
name|'rd_req'
op|'='
number|'400'
op|','
name|'rd_bytes'
op|'='
number|'500'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'600'
op|','
name|'wr_bytes'
op|'='
number|'700'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
nl|'\n'
name|'expected_vol_usages'
op|'='
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake-az'"
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'600'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'800'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'1200'
op|','
nl|'\n'
string|"'tot_last_refreshed'"
op|':'
name|'now3'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_last_refreshed'"
op|':'
name|'now2'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'vol_usages'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected_vol_usages'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usages'
op|'['
number|'0'
op|']'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_when_blockdevicestats_reset
dedent|''
dedent|''
name|'def'
name|'test_vol_usage_update_when_blockdevicestats_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
nl|'\n'
name|'rd_req'
op|'='
number|'10000'
op|','
name|'rd_bytes'
op|'='
number|'20000'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'30000'
op|','
name|'wr_bytes'
op|'='
number|'40000'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Instance rebooted or crashed. block device stats were reset and are'
nl|'\n'
comment|'# less than the previous values'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
nl|'\n'
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
nl|'\n'
name|'rd_req'
op|'='
number|'200'
op|','
name|'rd_bytes'
op|'='
number|'300'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'400'
op|','
name|'wr_bytes'
op|'='
number|'500'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|')'
newline|'\n'
nl|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_vol_usage'
op|'='
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake-az'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid1'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'300'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'500'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'10000'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'20000'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'30000'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'40000'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected_vol_usage'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vol_usage_update_totals_update_when_blockdevicestats_reset
dedent|''
dedent|''
name|'def'
name|'test_vol_usage_update_totals_update_when_blockdevicestats_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is unlikely to happen, but could when a volume is detached'
nl|'\n'
comment|'# right after a instance has rebooted / recovered and before'
nl|'\n'
comment|'# the system polled and updated the volume usage cache table.'
nl|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'start_time'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usages'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vol_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
nl|'\n'
name|'rd_req'
op|'='
number|'10000'
op|','
name|'rd_bytes'
op|'='
number|'20000'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'30000'
op|','
name|'wr_bytes'
op|'='
number|'40000'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Instance rebooted or crashed. block device stats were reset and are'
nl|'\n'
comment|'# less than the previous values'
nl|'\n'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'ctxt'
op|','
string|"u'1'"
op|','
nl|'\n'
name|'rd_req'
op|'='
number|'100'
op|','
name|'rd_bytes'
op|'='
number|'200'
op|','
nl|'\n'
name|'wr_req'
op|'='
number|'300'
op|','
name|'wr_bytes'
op|'='
number|'400'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project-uuid1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'fake-az'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake-user-uuid1'"
op|','
nl|'\n'
name|'update_totals'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'vol_usage'
op|'='
name|'db'
op|'.'
name|'vol_get_usage_by_time'
op|'('
name|'ctxt'
op|','
name|'start_time'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_vol_usage'
op|'='
op|'{'
string|"'volume_id'"
op|':'
string|"u'1'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance-uuid1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project-uuid1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake-az'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user-uuid1'"
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'10100'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'20200'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'30300'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'40400'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected_vol_usage'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|'['
name|'key'
op|']'
op|','
name|'value'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TaskLogTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'TaskLogTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TaskLogTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'begin'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'end'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'task_name'
op|'='
string|"'fake-task-name'"
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'fake-host'"
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"'Fake task message'"
newline|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get
dedent|''
name|'def'
name|'test_task_log_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'task_name'"
op|']'
op|','
name|'self'
op|'.'
name|'task_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'period_beginning'"
op|']'
op|','
name|'self'
op|'.'
name|'begin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'period_ending'"
op|']'
op|','
name|'self'
op|'.'
name|'end'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'host'"
op|']'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'message'"
op|']'
op|','
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all
dedent|''
name|'def'
name|'test_task_log_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|','
name|'state'
op|'='
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_begin_task
dedent|''
name|'def'
name|'test_task_log_begin_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'task_items'
op|'='
number|'42'
op|','
nl|'\n'
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'task_name'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_begin_task_duplicate
dedent|''
name|'def'
name|'test_task_log_begin_task_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
name|'self'
op|'.'
name|'begin'
op|','
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
op|'*'
name|'params'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'TaskAlreadyRunning'
op|','
nl|'\n'
name|'db'
op|'.'
name|'task_log_begin_task'
op|','
nl|'\n'
op|'*'
name|'params'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_end_task
dedent|''
name|'def'
name|'test_task_log_end_task'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'errors'
op|'='
number|'1'
newline|'\n'
name|'db'
op|'.'
name|'task_log_end_task'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'task_name'
op|','
name|'self'
op|'.'
name|'begin'
op|','
nl|'\n'
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'errors'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_end_task_task_not_running
dedent|''
name|'def'
name|'test_task_log_end_task_task_not_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'TaskNotRunning'
op|','
nl|'\n'
name|'db'
op|'.'
name|'task_log_end_task'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'nonexistent'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'begin'
op|','
name|'self'
op|'.'
name|'end'
op|','
name|'self'
op|'.'
name|'host'
op|','
number|'42'
op|','
nl|'\n'
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BlockDeviceMappingTestCase
dedent|''
dedent|''
name|'class'
name|'BlockDeviceMappingTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BlockDeviceMappingTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_bdm
dedent|''
name|'def'
name|'_create_bdm'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'instance_uuid'"
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'device_name'"
op|','
string|"'fake_device'"
op|')'
newline|'\n'
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'source_type'"
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'values'
op|'.'
name|'setdefault'
op|'('
string|"'destination_type'"
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'block_dev'
op|'='
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'block_dev'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'block_dev'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|'=='
name|'values'
op|'['
string|"'device_name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'bdm'
newline|'\n'
nl|'\n'
DECL|member|test_scrub_empty_str_values_no_effect
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_scrub_empty_str_values_no_effect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'volume_size'"
op|':'
number|'5'
op|'}'
newline|'\n'
name|'expected'
op|'='
name|'copy'
op|'.'
name|'copy'
op|'('
name|'values'
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'values'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_scrub_empty_str_values_empty_string
dedent|''
name|'def'
name|'test_scrub_empty_str_values_empty_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'volume_size'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'values'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_scrub_empty_str_values_empty_unicode
dedent|''
name|'def'
name|'test_scrub_empty_str_values_empty_unicode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'volume_size'"
op|':'
string|"u''"
op|'}'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_scrub_empty_str_values'
op|'('
name|'values'
op|','
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'values'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_create
dedent|''
name|'def'
name|'test_block_device_mapping_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update
dedent|''
name|'def'
name|'test_block_device_mapping_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'destination_type'"
op|':'
string|"'moon'"
op|'}'
op|','
nl|'\n'
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'bdm'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
number|'0'
op|']'
op|'['
string|"'destination_type'"
op|']'
op|','
string|"'moon'"
op|')'
newline|'\n'
comment|'# Also make sure the update call returned correct data'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dict'
op|'('
name|'bdm_real'
op|'['
number|'0'
op|']'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'result'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
nl|'\n'
op|'}'
newline|'\n'
comment|'# check create'
nl|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|','
nl|'\n'
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake_name'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check update'
nl|'\n'
name|'values'
op|'['
string|"'destination_type'"
op|']'
op|'='
string|"'camelot'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|','
nl|'\n'
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'bdm_real'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'fake_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'destination_type'"
op|']'
op|','
string|"'camelot'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check create without device_name'
nl|'\n'
name|'bdm1'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm1'
op|'['
string|"'device_name'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm1'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'with_device_name'
op|'='
op|'['
name|'b'
name|'for'
name|'b'
name|'in'
name|'bdms'
name|'if'
name|'b'
op|'['
string|"'device_name'"
op|']'
name|'is'
name|'not'
name|'None'
op|']'
newline|'\n'
name|'without_device_name'
op|'='
op|'['
name|'b'
name|'for'
name|'b'
name|'in'
name|'bdms'
name|'if'
name|'b'
op|'['
string|"'device_name'"
op|']'
name|'is'
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'with_device_name'
op|')'
op|','
number|'1'
op|','
nl|'\n'
string|"'expected 1 bdm with device_name, found %d'"
op|'%'
nl|'\n'
name|'len'
op|'('
name|'with_device_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'without_device_name'
op|')'
op|','
number|'1'
op|','
nl|'\n'
string|"'expected 1 bdm without device_name, found %d'"
op|'%'
nl|'\n'
name|'len'
op|'('
name|'without_device_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# check create multiple devices without device_name'
nl|'\n'
name|'bdm2'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm2'
op|'['
string|"'device_name'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm2'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'with_device_name'
op|'='
op|'['
name|'b'
name|'for'
name|'b'
name|'in'
name|'bdms'
name|'if'
name|'b'
op|'['
string|"'device_name'"
op|']'
name|'is'
name|'not'
name|'None'
op|']'
newline|'\n'
name|'without_device_name'
op|'='
op|'['
name|'b'
name|'for'
name|'b'
name|'in'
name|'bdms'
name|'if'
name|'b'
op|'['
string|"'device_name'"
op|']'
name|'is'
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'with_device_name'
op|')'
op|','
number|'1'
op|','
nl|'\n'
string|"'expected 1 bdm with device_name, found %d'"
op|'%'
nl|'\n'
name|'len'
op|'('
name|'with_device_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'without_device_name'
op|')'
op|','
number|'2'
op|','
nl|'\n'
string|"'expected 2 bdms without device_name, found %d'"
op|'%'
nl|'\n'
name|'len'
op|'('
name|'without_device_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create_multiple_ephemeral
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create_multiple_ephemeral'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'myformat'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'bdm1'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm1'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'/dev/sdb'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm1'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'bdm2'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'bdm2'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'/dev/sdc'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm2'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'bdm_real'
op|'='
name|'sorted'
op|'('
nl|'\n'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'bdm'
op|':'
name|'bdm'
op|'['
string|"'device_name'"
op|']'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'bdm'
op|','
name|'device_name'
name|'in'
name|'zip'
op|'('
name|'bdm_real'
op|','
op|'['
string|"'/dev/sdb'"
op|','
string|"'/dev/sdc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|','
name|'device_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|'['
string|"'guest_format'"
op|']'
op|','
string|"'myformat'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_update_or_create_check_remove_virt
dedent|''
dedent|''
name|'def'
name|'test_block_device_mapping_update_or_create_check_remove_virt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'swap'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# check that old swap bdms are deleted on create'
nl|'\n'
name|'val1'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'val1'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'device1'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val1'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'val2'
op|'='
name|'dict'
op|'('
name|'values'
op|')'
newline|'\n'
name|'val2'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'device2'"
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val2'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_real'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'bdm_real'
op|'='
name|'bdm_real'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'device2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'source_type'"
op|']'
op|','
string|"'blank'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_real'
op|'['
string|"'guest_format'"
op|']'
op|','
string|"'swap'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm_real'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'test_block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid1'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'bmds_values'
op|'='
op|'['
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'bdm'
name|'in'
name|'bmds_values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'bmd'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bmd'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bmd'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
name|'bmd'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bmd'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destroy
dedent|''
name|'def'
name|'test_block_device_mapping_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'bdm'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'bdm'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destroy_by_instance_and_volume
dedent|''
name|'def'
name|'test_block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol_id1'
op|'='
string|"'69f5c254-1a5b-4fff-acf7-cb369904f58f'"
newline|'\n'
name|'vol_id2'
op|'='
string|"'69f5c254-1a5b-4fff-acf7-cb369904f59f'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|','
string|"'volume_id'"
op|':'
name|'vol_id1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
string|"'volume_id'"
op|':'
name|'vol_id2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
nl|'\n'
name|'vol_id1'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdms'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdms'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_destroy_by_instance_and_device
dedent|''
name|'def'
name|'test_block_device_mapping_destroy_by_instance_and_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdms'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdms'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_by_volume_id
dedent|''
name|'def'
name|'test_block_device_mapping_get_by_volume_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'volume_id'"
op|':'
string|"'fake_id'"
op|'}'
op|')'
newline|'\n'
name|'bdm'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_by_volume_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|','
string|"'fake_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_by_volume_id_join_instance
dedent|''
name|'def'
name|'test_block_device_mapping_get_by_volume_id_join_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_bdm'
op|'('
op|'{'
string|"'volume_id'"
op|':'
string|"'fake_id'"
op|'}'
op|')'
newline|'\n'
name|'bdm'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_by_volume_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_id'"
op|','
nl|'\n'
op|'['
string|"'instance'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|','
string|"'fake_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AgentBuildTestCase
dedent|''
dedent|''
name|'class'
name|'AgentBuildTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.agent_build_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AgentBuildTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_create_and_get_all
dedent|''
name|'def'
name|'test_agent_build_create_and_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|')'
newline|'\n'
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'os'"
op|':'
string|"'GNU/HURD'"
op|'}'
op|')'
newline|'\n'
name|'all_agent_builds'
op|'='
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'all_agent_builds'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'agent_build'
op|','
name|'all_agent_builds'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_get_by_triple
dedent|''
name|'def'
name|'test_agent_build_get_by_triple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'hypervisor'"
op|':'
string|"'kvm'"
op|','
nl|'\n'
string|"'os'"
op|':'
string|"'FreeBSD'"
op|','
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'kvm'"
op|','
nl|'\n'
string|"'FreeBSD'"
op|','
string|"'i386'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'agent_build'
op|','
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'kvm'"
op|','
string|"'FreeBSD'"
op|','
name|'arch'
op|'.'
name|'X86_64'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_destroy
dedent|''
name|'def'
name|'test_agent_build_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_update
dedent|''
name|'def'
name|'test_agent_build_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'os'"
op|':'
string|"'HaikuOS'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|','
op|'{'
string|"'os'"
op|':'
string|"'ReactOS'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ReactOS'"
op|','
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'os'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_destroy_destroyed
dedent|''
name|'def'
name|'test_agent_build_destroy_destroyed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'agent_build_destroy'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_update_destroyed
dedent|''
name|'def'
name|'test_agent_build_update_destroyed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'agent_build'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'os'"
op|':'
string|"'HaikuOS'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AgentBuildNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'agent_build_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'agent_build'
op|'.'
name|'id'
op|','
op|'{'
string|"'os'"
op|':'
string|"'OS/2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_exists
dedent|''
name|'def'
name|'test_agent_build_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'hypervisor'"
op|':'
string|"'kvm'"
op|','
string|"'os'"
op|':'
string|"'FreeBSD'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AgentBuildExists'
op|','
name|'db'
op|'.'
name|'agent_build_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_get_all_by_hypervisor
dedent|''
name|'def'
name|'test_agent_build_get_all_by_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'hypervisor'"
op|':'
string|"'kvm'"
op|','
string|"'os'"
op|':'
string|"'FreeBSD'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|'}'
newline|'\n'
name|'created'
op|'='
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'hypervisor'
op|'='
string|"'kvm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'created'
op|']'
op|','
name|'actual'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterfaceTestCase
dedent|''
dedent|''
name|'class'
name|'VirtualInterfaceTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VirtualInterfaceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_base_values
dedent|''
name|'def'
name|'_get_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'self'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'fake_address'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'self'
op|'.'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'str'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|mock_db_query_first_to_raise_data_error_exception
dedent|''
name|'def'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'query'
op|'.'
name|'Query'
op|','
string|"'first'"
op|')'
newline|'\n'
name|'query'
op|'.'
name|'Query'
op|'.'
name|'first'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'db_exc'
op|'.'
name|'DBError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_virt_interface
dedent|''
name|'def'
name|'_create_virt_interface'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
newline|'\n'
name|'v'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_create
dedent|''
name|'def'
name|'test_virtual_interface_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'self'
op|'.'
name|'_get_base_values'
op|'('
op|')'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_create_with_duplicate_address
dedent|''
name|'def'
name|'test_virtual_interface_create_with_duplicate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|','
op|'{'
string|'"uuid"'
op|':'
name|'vif'
op|'['
string|"'uuid'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get
dedent|''
name|'def'
name|'test_virtual_interface_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'a'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'b'"
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_address
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'first'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'second'"
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'vif'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_address_not_found
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_address_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'db'
op|'.'
name|'virtual_interface_get_by_address'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|'"i.nv.ali.ip"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_address_data_error_exception
dedent|''
name|'def'
name|'test_virtual_interface_get_by_address_data_error_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_db_query_first_to_raise_data_error_exception'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidIpAddressError'
op|','
nl|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_address'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|'"i.nv.ali.ip"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_uuid
dedent|''
name|'def'
name|'test_virtual_interface_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|'"address"'
op|':'
string|'"address_1"'
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|'"address"'
op|':'
string|'"address_2"'
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'real_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'vif'
op|','
name|'real_vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_instance
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'vifs1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake1'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake2'"
op|'}'
op|')'
op|']'
newline|'\n'
comment|'# multiple nic of same instance'
nl|'\n'
name|'vifs2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake3'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake4'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|']'
newline|'\n'
name|'vifs1_real'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'vifs2_real'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'vifs1'
op|','
name|'vifs1_real'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualOrderedListOfObjects'
op|'('
name|'vifs2'
op|','
name|'vifs2_real'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_by_instance_and_network
dedent|''
name|'def'
name|'test_virtual_interface_get_by_instance_and_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project2'"
op|'}'
newline|'\n'
name|'network_id'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake1'"
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake2'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fake3'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'inst_uuid2'
op|'}'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vif'
name|'in'
name|'vifs'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vif'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'vif'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'r_vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
op|'*'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'r_vif'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_delete_by_instance
dedent|''
dedent|''
name|'def'
name|'test_virtual_interface_delete_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'['
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake1'"
op|')'
op|','
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake3'"
op|','
name|'instance_uuid'
op|'='
name|'inst_uuid2'
op|')'
op|']'
newline|'\n'
name|'for'
name|'vals'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
name|'vals'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'virtual_interface_delete_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'real_vifs1'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'real_vifs2'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst_uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_vifs1'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_vifs2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virtual_interface_get_all
dedent|''
name|'def'
name|'test_virtual_interface_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_uuid2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'['
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake1'"
op|')'
op|','
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'fake3'"
op|','
name|'instance_uuid'
op|'='
name|'inst_uuid2'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'vifs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_virt_interface'
op|'('
name|'val'
op|')'
name|'for'
name|'val'
name|'in'
name|'values'
op|']'
newline|'\n'
name|'real_vifs'
op|'='
name|'db'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'vifs'
op|','
name|'real_vifs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkTestCase
dedent|''
dedent|''
name|'class'
name|'NetworkTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.network_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_associated_fixed_ip
dedent|''
name|'def'
name|'_get_associated_fixed_ip'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'cidr'
op|','
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'cidr'"
op|':'
name|'cidr'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'db'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
nl|'\n'
name|'host'
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'virtual_interface'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|','
string|"'network_id'"
op|':'
name|'network'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network'
op|'.'
name|'id'
op|','
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'virtual_interface'
op|'.'
name|'id'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'ip'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'return'
name|'network'
op|','
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_associated_default_route
dedent|''
name|'def'
name|'test_network_get_associated_default_route'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|','
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_associated_fixed_ip'
op|'('
string|"'host.net'"
op|','
nl|'\n'
string|"'192.0.2.0/30'"
op|','
string|"'192.0.2.1'"
op|')'
newline|'\n'
name|'network2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'cidr'"
op|':'
string|"'192.0.3.0/30'"
op|'}'
op|')'
newline|'\n'
name|'ip'
op|'='
string|"'192.0.3.1'"
newline|'\n'
name|'virtual_interface'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|','
string|"'network_id'"
op|':'
name|'network2'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network2'
op|'.'
name|'id'
op|','
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'virtual_interface'
op|'.'
name|'id'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'ip'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'network2'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'default_route'"
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network2'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'default_route'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_associated_fixed_ips
dedent|''
name|'def'
name|'test_network_get_associated_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|','
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_associated_fixed_ip'
op|'('
string|"'host.net'"
op|','
nl|'\n'
string|"'192.0.2.0/30'"
op|','
string|"'192.0.2.1'"
op|')'
newline|'\n'
name|'data'
op|'='
name|'db'
op|'.'
name|'network_get_associated_fixed_ips'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'192.0.2.1'"
op|','
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'192.0.2.1'"
op|','
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'vif_address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|','
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'allocated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_create_safe
dedent|''
name|'def'
name|'test_network_create_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'36'
op|','
name|'len'
op|'('
name|'network'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'db_network'
op|'='
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network'
op|','
name|'db_network'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_create_with_duplicate_vlan
dedent|''
name|'def'
name|'test_network_create_with_duplicate_vlan'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values1'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'something'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DuplicateVlan'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_delete_safe
dedent|''
name|'def'
name|'test_network_delete_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'network_id'"
op|':'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
string|"'address'"
op|':'
string|"'192.168.1.5'"
op|'}'
newline|'\n'
name|'address1'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'network_id'"
op|':'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.6'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'address2'
op|'='
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkInUse'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_delete_safe'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address2'
op|','
op|'{'
string|"'allocated'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_delete_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|','
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address1'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'address1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fixed_ip'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_in_use_on_host
dedent|''
name|'def'
name|'test_network_in_use_on_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo'"
op|','
string|"'hostname'"
op|':'
string|"'myname'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.1.5'"
op|','
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'vif'
op|'='
name|'db'
op|'.'
name|'virtual_interface_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'192.168.1.6'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
name|'vif'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'foo'"
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'network_in_use_on_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
string|"'bar'"
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_update_nonexistent
dedent|''
name|'def'
name|'test_network_update_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'123456'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_update_with_duplicate_vlan
dedent|''
name|'def'
name|'test_network_update_with_duplicate_vlan'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values1'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'values2'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'something'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'vlan'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'network_ref'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DuplicateVlan'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'network_ref'
op|'['
string|'"id"'
op|']'
op|','
name|'values2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_update
dedent|''
name|'def'
name|'test_network_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
string|"'test.com'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
op|'{'
string|"'vlan'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'network_new'
op|'='
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'network_new'
op|'.'
name|'vlan'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_set_host_nonexistent_network
dedent|''
name|'def'
name|'test_network_set_host_nonexistent_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_set_host'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'123456'
op|','
string|"'nonexistent'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_set_host_with_initially_no_host
dedent|''
name|'def'
name|'test_network_set_host_with_initially_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'example.com'"
op|','
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'db'
op|'.'
name|'network_set_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
string|"'new.example.com'"
op|')'
op|','
nl|'\n'
string|"'example.com'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_set_host
dedent|''
name|'def'
name|'test_network_set_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'db'
op|'.'
name|'network_set_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
string|"'example.com'"
op|')'
op|','
nl|'\n'
string|"'example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'example.com'"
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_by_host
dedent|''
name|'def'
name|'test_network_get_all_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'example.com'"
op|')'
op|')'
newline|'\n'
name|'host'
op|'='
string|"'h1.example.com'"
newline|'\n'
comment|'# network with host set'
nl|'\n'
name|'net1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'net1'
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
op|')'
newline|'\n'
comment|'# network with fixed ip with host set'
nl|'\n'
name|'net2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
name|'host'
op|','
string|"'network_id'"
op|':'
name|'net2'
op|'.'
name|'id'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'net1'
op|','
name|'net2'
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
op|')'
newline|'\n'
comment|'# network with instance with host set'
nl|'\n'
name|'net3'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'network_id'"
op|':'
name|'net3'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'net1'
op|','
name|'net2'
op|','
name|'net3'
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_by_cidr
dedent|''
name|'def'
name|'test_network_get_by_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr'
op|'='
string|"'192.0.2.0/30'"
newline|'\n'
name|'cidr_v6'
op|'='
string|"'2001:db8:1::/64'"
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'cidr'"
op|':'
name|'cidr'
op|','
string|"'cidr_v6'"
op|':'
name|'cidr_v6'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_by_cidr'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cidr'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_by_cidr'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cidr_v6'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_by_cidr_nonexistent
dedent|''
name|'def'
name|'test_network_get_by_cidr_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFoundForCidr'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_by_cidr'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'192.0.2.0/30'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_by_uuid
dedent|''
name|'def'
name|'test_network_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project_1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_by_uuid_nonexistent
dedent|''
name|'def'
name|'test_network_get_by_uuid_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFoundForUUID'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_by_uuid'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'non-existent-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_by_uuids_no_networks
dedent|''
name|'def'
name|'test_network_get_all_by_uuids_no_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoNetworksFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
string|"'non-existent-uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_by_uuids
dedent|''
name|'def'
name|'test_network_get_all_by_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'net2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'net1'
op|','
name|'net2'
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'['
name|'net1'
op|'.'
name|'uuid'
op|','
name|'net2'
op|'.'
name|'uuid'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_no_networks
dedent|''
name|'def'
name|'test_network_get_all_no_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoNetworksFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all
dedent|''
name|'def'
name|'test_network_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'network_db'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'network_db'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network'
op|','
name|'network_db'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_admin_user
dedent|''
name|'def'
name|'test_network_get_all_admin_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'network2'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'network1'
op|','
name|'network2'
op|']'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_only'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get_all_normal_user
dedent|''
name|'def'
name|'test_network_get_all_normal_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'normal_ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
name|'network1'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'network_db'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'normal_ctxt'
op|','
name|'project_only'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'network_db'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'network1'
op|','
name|'network_db'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_get
dedent|''
name|'def'
name|'test_network_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
op|','
nl|'\n'
name|'network'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_delete_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'network_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_associate
dedent|''
name|'def'
name|'test_network_associate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'network'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|'"project1"'
op|','
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"project1"'
op|','
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'network'
op|'.'
name|'id'
op|')'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_diassociate
dedent|''
name|'def'
name|'test_network_diassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'host'"
op|':'
string|"'test.net'"
op|'}'
op|')'
newline|'\n'
comment|'# disassociate project'
nl|'\n'
name|'db'
op|'.'
name|'network_disassociate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
name|'False'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
op|'.'
name|'project_id'
op|')'
newline|'\n'
comment|'# disassociate host'
nl|'\n'
name|'db'
op|'.'
name|'network_disassociate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|','
name|'True'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'db'
op|'.'
name|'network_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'network'
op|'.'
name|'id'
op|')'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_count_reserved_ips
dedent|''
name|'def'
name|'test_network_count_reserved_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'db'
op|'.'
name|'network_count_reserved_ips'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'net'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'network_id'"
op|':'
name|'net'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'reserved'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'db'
op|'.'
name|'network_count_reserved_ips'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'net'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|KeyPairTestCase
dedent|''
dedent|''
name|'class'
name|'KeyPairTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'KeyPairTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_key_pair
dedent|''
name|'def'
name|'_create_key_pair'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'key_pair_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_create
dedent|''
name|'def'
name|'test_key_pair_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'param'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'test_1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|','
nl|'\n'
string|"'public_key'"
op|':'
string|"'test_public_key_1'"
op|','
nl|'\n'
string|"'fingerprint'"
op|':'
string|"'test_fingerprint_1'"
nl|'\n'
op|'}'
newline|'\n'
name|'key_pair'
op|'='
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'key_pair'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'key_pair'
op|','
name|'param'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_create_with_duplicate_name
dedent|''
name|'def'
name|'test_key_pair_create_with_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_name'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyPairExists'
op|','
name|'self'
op|'.'
name|'_create_key_pair'
op|','
nl|'\n'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get
dedent|''
name|'def'
name|'test_key_pair_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_2'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_3'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_3'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'key_pairs'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'p'
op|')'
name|'for'
name|'p'
name|'in'
name|'params'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
name|'key_pairs'
op|':'
newline|'\n'
indent|'            '
name|'real_key'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key'
op|'['
string|"'user_id'"
op|']'
op|','
name|'key'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'key'
op|','
name|'real_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get_no_results
dedent|''
dedent|''
name|'def'
name|'test_key_pair_get_no_results'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'param'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get_deleted
dedent|''
name|'def'
name|'test_key_pair_get_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'param'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
newline|'\n'
name|'key_pair_created'
op|'='
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
name|'key_pair_deleted'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
string|"'deleted_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'key_pair_deleted'
op|','
name|'key_pair_created'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key_pair_deleted'
op|'['
string|"'deleted'"
op|']'
op|','
name|'key_pair_deleted'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_get_all_by_user
dedent|''
name|'def'
name|'test_key_pair_get_all_by_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_2'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_3'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_2'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'key_pairs_user_1'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'p'
op|')'
name|'for'
name|'p'
name|'in'
name|'params'
nl|'\n'
name|'if'
name|'p'
op|'['
string|"'user_id'"
op|']'
op|'=='
string|"'test_user_id_1'"
op|']'
newline|'\n'
name|'key_pairs_user_2'
op|'='
op|'['
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'p'
op|')'
name|'for'
name|'p'
name|'in'
name|'params'
nl|'\n'
name|'if'
name|'p'
op|'['
string|"'user_id'"
op|']'
op|'=='
string|"'test_user_id_2'"
op|']'
newline|'\n'
nl|'\n'
name|'real_keys_1'
op|'='
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'test_user_id_1'"
op|')'
newline|'\n'
name|'real_keys_2'
op|'='
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'test_user_id_2'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'key_pairs_user_1'
op|','
name|'real_keys_1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'key_pairs_user_2'
op|','
name|'real_keys_2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_count_by_user
dedent|''
name|'def'
name|'test_key_pair_count_by_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_2'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'test_3'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_2'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'p'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'count_1'
op|'='
name|'db'
op|'.'
name|'key_pair_count_by_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'test_user_id_1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count_1'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'count_2'
op|'='
name|'db'
op|'.'
name|'key_pair_count_by_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'test_user_id_2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count_2'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_destroy
dedent|''
name|'def'
name|'test_key_pair_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'param'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_key_pair'
op|'('
name|'param'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
name|'db'
op|'.'
name|'key_pair_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_pair_destroy_no_such_key
dedent|''
name|'def'
name|'test_key_pair_destroy_no_such_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'param'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test_1'"
op|','
string|"'user_id'"
op|':'
string|"'test_user_id_1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeypairNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'key_pair_destroy'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'param'
op|'['
string|"'user_id'"
op|']'
op|','
name|'param'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QuotaTestCase
dedent|''
dedent|''
name|'class'
name|'QuotaTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests for db.api.quota_* methods."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'QuotaTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_create
dedent|''
name|'def'
name|'test_quota_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource'"
op|','
number|'99'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'resource'
op|','
string|"'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'hard_limit'
op|','
number|'99'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'project_id'
op|','
string|"'project1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_get
dedent|''
name|'def'
name|'test_quota_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource'"
op|','
number|'99'
op|')'
newline|'\n'
name|'quota_db'
op|'='
name|'db'
op|'.'
name|'quota_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'quota'
op|','
name|'quota_db'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_get_all_by_project
dedent|''
name|'def'
name|'test_quota_get_all_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'j'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'proj%d'"
op|'%'
name|'i'
op|','
string|"'resource%d'"
op|'%'
name|'j'
op|','
name|'j'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'quotas_db'
op|'='
name|'db'
op|'.'
name|'quota_get_all_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'proj%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quotas_db'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'proj%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'resource0'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'resource1'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'resource2'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_get_all_by_project_and_user
dedent|''
dedent|''
name|'def'
name|'test_quota_get_all_by_project_and_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'j'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'proj%d'"
op|'%'
name|'i'
op|','
string|"'resource%d'"
op|'%'
name|'j'
op|','
nl|'\n'
name|'j'
op|'-'
number|'1'
op|','
name|'user_id'
op|'='
string|"'user%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'quotas_db'
op|'='
name|'db'
op|'.'
name|'quota_get_all_by_project_and_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'proj%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'user%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quotas_db'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'proj%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'user%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'resource1'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'resource2'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_update
dedent|''
dedent|''
name|'def'
name|'test_quota_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|','
number|'41'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'quota_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|','
number|'42'
op|')'
newline|'\n'
name|'quota'
op|'='
name|'db'
op|'.'
name|'quota_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'hard_limit'
op|','
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'resource'
op|','
string|"'resource1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'.'
name|'project_id'
op|','
string|"'project1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_update_nonexistent
dedent|''
name|'def'
name|'test_quota_update_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'quota_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_get_nonexistent
dedent|''
name|'def'
name|'test_quota_get_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'quota_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_reserve_all_resources
dedent|''
name|'def'
name|'test_quota_reserve_all_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quotas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'deltas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'reservable_resources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
op|','
name|'resource'
name|'in'
name|'enumerate'
op|'('
name|'quota'
op|'.'
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'resource'
op|','
name|'quota'
op|'.'
name|'ReservableResource'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'quotas'
op|'['
name|'resource'
op|'.'
name|'name'
op|']'
op|'='
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
nl|'\n'
name|'resource'
op|'.'
name|'name'
op|','
number|'100'
op|')'
newline|'\n'
name|'deltas'
op|'['
name|'resource'
op|'.'
name|'name'
op|']'
op|'='
name|'i'
newline|'\n'
name|'reservable_resources'
op|'['
name|'resource'
op|'.'
name|'name'
op|']'
op|'='
name|'resource'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'usages'
op|'='
op|'{'
string|"'instances'"
op|':'
number|'3'
op|','
string|"'cores'"
op|':'
number|'6'
op|','
string|"'ram'"
op|':'
number|'9'
op|'}'
newline|'\n'
name|'instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'.'
name|'append'
op|'('
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'vcpus'"
op|':'
number|'2'
op|','
string|"'memory_mb'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'usages'
op|'['
string|"'fixed_ips'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_create_safe'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'address'
op|'='
string|"'192.168.0.%d'"
op|'%'
name|'i'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'network'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'address'
op|','
nl|'\n'
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'uuid'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'usages'
op|'['
string|"'floating_ips'"
op|']'
op|'='
number|'5'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'usages'
op|'['
string|"'security_groups'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'usages'
op|'['
string|"'server_groups'"
op|']'
op|'='
number|'4'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_group_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'str'
op|'('
name|'i'
op|')'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'reservations_uuids'
op|'='
name|'db'
op|'.'
name|'quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'reservable_resources'
op|','
nl|'\n'
name|'quotas'
op|','
name|'quotas'
op|','
name|'deltas'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
string|"'project1'"
op|')'
newline|'\n'
name|'resources_names'
op|'='
name|'reservable_resources'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'reservation_uuid'
name|'in'
name|'reservations_uuids'
op|':'
newline|'\n'
indent|'            '
name|'reservation'
op|'='
name|'_reservation_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'reservation_uuid'
op|')'
newline|'\n'
name|'usage'
op|'='
name|'db'
op|'.'
name|'quota_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
nl|'\n'
name|'reservation'
op|'.'
name|'resource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'usage'
op|'.'
name|'in_use'
op|','
name|'usages'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
op|','
nl|'\n'
string|"'Resource: %s'"
op|'%'
name|'reservation'
op|'.'
name|'resource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'usage'
op|'.'
name|'reserved'
op|','
name|'deltas'
op|'['
name|'reservation'
op|'.'
name|'resource'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'reservation'
op|'.'
name|'resource'
op|','
name|'resources_names'
op|')'
newline|'\n'
name|'resources_names'
op|'.'
name|'remove'
op|'('
name|'reservation'
op|'.'
name|'resource'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resources_names'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_destroy_all_by_project
dedent|''
name|'def'
name|'test_quota_destroy_all_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reservations'
op|'='
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'quota_destroy_all_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_get_all_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_get_all_by_project_and_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'user_id'"
op|':'
string|"'user1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_usage_get_all_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'reservations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ReservationNotFound'
op|','
nl|'\n'
name|'_reservation_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'r'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_destroy_all_by_project_and_user
dedent|''
dedent|''
name|'def'
name|'test_quota_destroy_all_by_project_and_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reservations'
op|'='
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'quota_destroy_all_by_project_and_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
nl|'\n'
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_get_all_by_project_and_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'user1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'user1'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'2'
op|','
string|"'reserved'"
op|':'
number|'2'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'reservations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ReservationNotFound'
op|','
nl|'\n'
name|'_reservation_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'r'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_get_nonexistent
dedent|''
dedent|''
name|'def'
name|'test_quota_usage_get_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|','
name|'db'
op|'.'
name|'quota_usage_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'nonexitent_resource'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_get
dedent|''
name|'def'
name|'test_quota_usage_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|')'
newline|'\n'
name|'quota_usage'
op|'='
name|'db'
op|'.'
name|'quota_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'resource0'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'resource'"
op|':'
string|"'resource0'"
op|','
string|"'project_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'in_use'"
op|':'
number|'0'
op|','
string|"'reserved'"
op|':'
number|'0'
op|','
string|"'total'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'quota_usage'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_get_all_by_project
dedent|''
dedent|''
name|'def'
name|'test_quota_usage_get_all_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'0'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'2'
op|','
string|"'reserved'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_get_all_by_project_and_user
dedent|''
name|'def'
name|'test_quota_usage_get_all_by_project_and_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'u1'"
op|','
nl|'\n'
string|"'resource0'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'0'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'resource1'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'2'
op|','
string|"'reserved'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'db'
op|'.'
name|'quota_usage_get_all_by_project_and_user'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_update_nonexistent
dedent|''
name|'def'
name|'test_quota_usage_update_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaUsageNotFound'
op|','
name|'db'
op|'.'
name|'quota_usage_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|','
string|"'resource'"
op|','
name|'in_use'
op|'='
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_usage_update
dedent|''
name|'def'
name|'test_quota_usage_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_quota_reserve'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'quota_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'u1'"
op|','
string|"'resource0'"
op|','
name|'in_use'
op|'='
number|'42'
op|','
nl|'\n'
name|'reserved'
op|'='
number|'43'
op|')'
newline|'\n'
name|'quota_usage'
op|'='
name|'db'
op|'.'
name|'quota_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'p1'"
op|','
string|"'resource0'"
op|','
string|"'u1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'resource'"
op|':'
string|"'resource0'"
op|','
string|"'project_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'u1'"
op|','
string|"'in_use'"
op|':'
number|'42'
op|','
string|"'reserved'"
op|':'
number|'43'
op|','
string|"'total'"
op|':'
number|'85'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'expected'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'quota_usage'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_create_exists
dedent|''
dedent|''
name|'def'
name|'test_quota_create_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'project1'"
op|','
string|"'resource1'"
op|','
number|'41'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaExists'
op|','
name|'db'
op|'.'
name|'quota_create'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'project1'"
op|','
string|"'resource1'"
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QuotaReserveNoDbTestCase
dedent|''
dedent|''
name|'class'
name|'QuotaReserveNoDbTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests quota reserve/refresh operations using mock."""'
newline|'\n'
nl|'\n'
DECL|member|test_create_quota_usage_if_missing_not_created
name|'def'
name|'test_create_quota_usage_if_missing_not_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that QuotaUsage isn't created if it's already in user_usages."
nl|'\n'
indent|'        '
name|'resource'
op|'='
string|"'fake-resource'"
newline|'\n'
name|'project_id'
op|'='
string|"'fake-project'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake_user'"
newline|'\n'
name|'session'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'user_usages'
op|'='
op|'{'
name|'resource'
op|':'
name|'quota_usage'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'_quota_usage_create'"
op|')'
name|'as'
name|'quc'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_create_quota_usage_if_missing'
op|'('
nl|'\n'
name|'user_usages'
op|','
name|'resource'
op|','
name|'None'
op|','
nl|'\n'
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'quc'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_quota_usage_if_missing_created
dedent|''
name|'def'
name|'_test_create_quota_usage_if_missing_created'
op|'('
name|'self'
op|','
name|'per_project_quotas'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the QuotaUsage is created.'
nl|'\n'
indent|'        '
name|'user_usages'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'per_project_quotas'
op|':'
newline|'\n'
indent|'            '
name|'resource'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'PER_PROJECT_QUOTAS'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'resource'
op|'='
string|"'fake-resource'"
newline|'\n'
dedent|''
name|'project_id'
op|'='
string|"'fake-project'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake_user'"
newline|'\n'
name|'session'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqlalchemy_api'
op|','
string|"'_quota_usage_create'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'quota_usage'
op|')'
name|'as'
name|'quc'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_create_quota_usage_if_missing'
op|'('
nl|'\n'
name|'user_usages'
op|','
name|'resource'
op|','
name|'None'
op|','
nl|'\n'
name|'project_id'
op|','
name|'user_id'
op|','
name|'session'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota_usage'
op|','
name|'user_usages'
op|'['
name|'resource'
op|']'
op|')'
newline|'\n'
comment|'# Now test if the QuotaUsage was created with a user_id or not.'
nl|'\n'
name|'if'
name|'per_project_quotas'
op|':'
newline|'\n'
indent|'            '
name|'quc'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'project_id'
op|','
name|'None'
op|','
name|'resource'
op|','
number|'0'
op|','
number|'0'
op|','
name|'None'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'quc'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'project_id'
op|','
name|'user_id'
op|','
name|'resource'
op|','
number|'0'
op|','
number|'0'
op|','
name|'None'
op|','
name|'session'
op|'='
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_quota_usage_if_missing_created_per_project_quotas
dedent|''
dedent|''
name|'def'
name|'test_create_quota_usage_if_missing_created_per_project_quotas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_quota_usage_if_missing_created'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_quota_usage_if_missing_created_user_quotas
dedent|''
name|'def'
name|'test_create_quota_usage_if_missing_created_user_quotas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_quota_usage_if_missing_created'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_quota_refresh_needed_in_use
dedent|''
name|'def'
name|'test_is_quota_refresh_needed_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests when a quota refresh is needed based on the in_use value.'
nl|'\n'
indent|'        '
name|'for'
name|'in_use'
name|'in'
name|'range'
op|'('
op|'-'
number|'1'
op|','
number|'1'
op|')'
op|':'
newline|'\n'
comment|'# We have to set until_refresh=None otherwise mock will give it'
nl|'\n'
comment|"# a value which runs some code we don't want."
nl|'\n'
indent|'            '
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'in_use'
op|'='
name|'in_use'
op|','
name|'until_refresh'
op|'='
name|'None'
op|')'
newline|'\n'
name|'if'
name|'in_use'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_is_quota_refresh_needed'
op|'('
nl|'\n'
name|'quota_usage'
op|','
name|'max_age'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_is_quota_refresh_needed'
op|'('
nl|'\n'
name|'quota_usage'
op|','
name|'max_age'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_quota_refresh_needed_until_refresh_none
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_is_quota_refresh_needed_until_refresh_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'in_use'
op|'='
number|'0'
op|','
name|'until_refresh'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'sqlalchemy_api'
op|'.'
name|'_is_quota_refresh_needed'
op|'('
name|'quota_usage'
op|','
nl|'\n'
name|'max_age'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_quota_refresh_needed_until_refresh_not_none
dedent|''
name|'def'
name|'test_is_quota_refresh_needed_until_refresh_not_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests different values for the until_refresh counter.'
nl|'\n'
indent|'        '
name|'for'
name|'until_refresh'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'in_use'
op|'='
number|'0'
op|','
name|'until_refresh'
op|'='
name|'until_refresh'
op|')'
newline|'\n'
name|'refresh'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_is_quota_refresh_needed'
op|'('
name|'quota_usage'
op|','
nl|'\n'
name|'max_age'
op|'='
number|'0'
op|')'
newline|'\n'
name|'until_refresh'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'until_refresh'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'refresh'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'refresh'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'until_refresh'
op|','
name|'quota_usage'
op|'.'
name|'until_refresh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_quota_usages
dedent|''
dedent|''
name|'def'
name|'test_refresh_quota_usages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usage'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'spec'
op|'='
name|'models'
op|'.'
name|'QuotaUsage'
op|')'
newline|'\n'
name|'quota_usage'
op|'.'
name|'in_use'
op|'='
number|'5'
newline|'\n'
name|'quota_usage'
op|'.'
name|'until_refresh'
op|'='
name|'None'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_refresh_quota_usages'
op|'('
name|'quota_usage'
op|','
name|'until_refresh'
op|'='
number|'5'
op|','
nl|'\n'
name|'in_use'
op|'='
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'quota_usage'
op|'.'
name|'in_use'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'quota_usage'
op|'.'
name|'until_refresh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calculate_overquota_no_delta
dedent|''
name|'def'
name|'test_calculate_overquota_no_delta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deltas'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
name|'user_quotas'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'overs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_calculate_overquota'
op|'('
op|'{'
op|'}'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'overs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calculate_overquota_unlimited_quota
dedent|''
name|'def'
name|'test_calculate_overquota_unlimited_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deltas'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'project_quotas'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'user_quotas'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
name|'project_usages'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'user_usages'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'overs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_calculate_overquota'
op|'('
nl|'\n'
name|'project_quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
name|'project_usages'
op|','
name|'user_usages'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'overs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_calculate_overquota
dedent|''
name|'def'
name|'_test_calculate_overquota'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'project_usages'
op|','
name|'user_usages'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deltas'
op|'='
op|'{'
name|'resource'
op|':'
number|'1'
op|'}'
newline|'\n'
name|'project_quotas'
op|'='
op|'{'
name|'resource'
op|':'
number|'10'
op|'}'
newline|'\n'
name|'user_quotas'
op|'='
op|'{'
name|'resource'
op|':'
number|'10'
op|'}'
newline|'\n'
name|'overs'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'_calculate_overquota'
op|'('
nl|'\n'
name|'project_quotas'
op|','
name|'user_quotas'
op|','
name|'deltas'
op|','
name|'project_usages'
op|','
name|'user_usages'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resource'
op|','
name|'overs'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calculate_overquota_per_project_quota_overquota
dedent|''
name|'def'
name|'test_calculate_overquota_per_project_quota_overquota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# In this test, user quotas are fine but project quotas are over.'
nl|'\n'
indent|'        '
name|'resource'
op|'='
string|"'foo'"
newline|'\n'
name|'project_usages'
op|'='
op|'{'
name|'resource'
op|':'
op|'{'
string|"'total'"
op|':'
number|'10'
op|'}'
op|'}'
newline|'\n'
name|'user_usages'
op|'='
op|'{'
name|'resource'
op|':'
op|'{'
string|"'total'"
op|':'
number|'5'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_calculate_overquota'
op|'('
name|'resource'
op|','
name|'project_usages'
op|','
name|'user_usages'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calculate_overquota_per_user_quota_overquota
dedent|''
name|'def'
name|'test_calculate_overquota_per_user_quota_overquota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# In this test, project quotas are fine but user quotas are over.'
nl|'\n'
indent|'        '
name|'resource'
op|'='
string|"'foo'"
newline|'\n'
name|'project_usages'
op|'='
op|'{'
name|'resource'
op|':'
op|'{'
string|"'total'"
op|':'
number|'5'
op|'}'
op|'}'
newline|'\n'
name|'user_usages'
op|'='
op|'{'
name|'resource'
op|':'
op|'{'
string|"'total'"
op|':'
number|'10'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_calculate_overquota'
op|'('
name|'resource'
op|','
name|'project_usages'
op|','
name|'user_usages'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QuotaClassTestCase
dedent|''
dedent|''
name|'class'
name|'QuotaClassTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'QuotaClassTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_get_default
dedent|''
name|'def'
name|'test_quota_class_get_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'test_resource1'"
op|':'
string|"'10'"
op|','
nl|'\n'
string|"'test_resource2'"
op|':'
string|"'20'"
op|','
nl|'\n'
string|"'test_resource3'"
op|':'
string|"'30'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'res'
op|','
name|'limit'
name|'in'
name|'params'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'quota_class_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'default'"
op|','
name|'res'
op|','
name|'limit'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'defaults'
op|'='
name|'db'
op|'.'
name|'quota_class_get_default'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'defaults'
op|','
name|'dict'
op|'('
name|'class_name'
op|'='
string|"'default'"
op|','
nl|'\n'
name|'test_resource1'
op|'='
number|'10'
op|','
nl|'\n'
name|'test_resource2'
op|'='
number|'20'
op|','
nl|'\n'
name|'test_resource3'
op|'='
number|'30'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_create
dedent|''
name|'def'
name|'test_quota_class_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'qc'
op|'='
name|'db'
op|'.'
name|'quota_class_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|','
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'qc'
op|'.'
name|'class_name'
op|','
string|"'class name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'qc'
op|'.'
name|'resource'
op|','
string|"'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'qc'
op|'.'
name|'hard_limit'
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_get
dedent|''
name|'def'
name|'test_quota_class_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'qc'
op|'='
name|'db'
op|'.'
name|'quota_class_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|','
number|'42'
op|')'
newline|'\n'
name|'qc_db'
op|'='
name|'db'
op|'.'
name|'quota_class_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'qc'
op|','
name|'qc_db'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_get_nonexistent
dedent|''
name|'def'
name|'test_quota_class_get_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|','
name|'db'
op|'.'
name|'quota_class_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'nonexistent'"
op|','
string|"'resource'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_get_all_by_name
dedent|''
name|'def'
name|'test_quota_class_get_all_by_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'j'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'quota_class_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'resource%d'"
op|'%'
name|'j'
op|','
name|'j'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'classes'
op|'='
name|'db'
op|'.'
name|'quota_class_get_all_by_name'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'classes'
op|','
op|'{'
string|"'class_name'"
op|':'
string|"'class%d'"
op|'%'
name|'i'
op|','
nl|'\n'
string|"'resource0'"
op|':'
number|'0'
op|','
string|"'resource1'"
op|':'
number|'1'
op|','
string|"'resource2'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_update
dedent|''
dedent|''
name|'def'
name|'test_quota_class_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'quota_class_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|','
number|'42'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'quota_class_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|','
number|'43'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db'
op|'.'
name|'quota_class_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
nl|'\n'
string|"'resource'"
op|')'
op|'.'
name|'hard_limit'
op|','
number|'43'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_class_update_nonexistent
dedent|''
name|'def'
name|'test_quota_class_update_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaClassNotFound'
op|','
name|'db'
op|'.'
name|'quota_class_update'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'class name'"
op|','
string|"'resource'"
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_quota_usages
dedent|''
name|'def'
name|'test_refresh_quota_usages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usages'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'sqlalchemy_api'
op|'.'
name|'_refresh_quota_usages'
op|'('
name|'quota_usages'
op|','
name|'until_refresh'
op|'='
number|'5'
op|','
nl|'\n'
name|'in_use'
op|'='
number|'6'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|S3ImageTestCase
dedent|''
dedent|''
name|'class'
name|'S3ImageTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'S3ImageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'values'
op|'='
op|'['
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'images'
op|'='
op|'['
name|'db'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
nl|'\n'
name|'for'
name|'uuid'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_s3_image_create
dedent|''
name|'def'
name|'test_s3_image_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ref'
name|'in'
name|'self'
op|'.'
name|'images'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'ref'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'self'
op|'.'
name|'values'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
op|'['
name|'ref'
op|'.'
name|'uuid'
name|'for'
name|'ref'
name|'in'
name|'self'
op|'.'
name|'images'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_s3_image_get_by_uuid
dedent|''
name|'def'
name|'test_s3_image_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'uuid'
name|'in'
name|'self'
op|'.'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'ref'
op|'='
name|'db'
op|'.'
name|'s3_image_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'ref'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuid'
op|','
name|'ref'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_s3_image_get
dedent|''
dedent|''
name|'def'
name|'test_s3_image_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'self'
op|'.'
name|'values'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
op|'['
name|'db'
op|'.'
name|'s3_image_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'ref'
op|'.'
name|'id'
op|')'
op|'.'
name|'uuid'
nl|'\n'
name|'for'
name|'ref'
name|'in'
name|'self'
op|'.'
name|'images'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_s3_image_get_not_found
dedent|''
name|'def'
name|'test_s3_image_get_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'db'
op|'.'
name|'s3_image_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_s3_image_get_by_uuid_not_found
dedent|''
name|'def'
name|'test_s3_image_get_by_uuid_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'db'
op|'.'
name|'s3_image_get_by_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeNodeTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeNodeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|_ignored_keys
indent|'    '
name|'_ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeNodeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service_dict'
op|'='
name|'dict'
op|'('
name|'host'
op|'='
string|"'host1'"
op|','
name|'binary'
op|'='
string|"'nova-compute'"
op|','
nl|'\n'
name|'topic'
op|'='
name|'CONF'
op|'.'
name|'compute_topic'
op|','
name|'report_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'service_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'='
name|'dict'
op|'('
name|'vcpus'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'local_gb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb_used'
op|'='
number|'0'
op|','
name|'free_ram_mb'
op|'='
number|'1024'
op|','
nl|'\n'
name|'free_disk_gb'
op|'='
number|'2048'
op|','
name|'hypervisor_type'
op|'='
string|'"xen"'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'1'
op|','
name|'cpu_info'
op|'='
string|'""'
op|','
nl|'\n'
name|'running_vms'
op|'='
number|'0'
op|','
name|'current_workload'
op|'='
number|'0'
op|','
nl|'\n'
name|'service_id'
op|'='
name|'self'
op|'.'
name|'service'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'service'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'disk_available_least'
op|'='
number|'100'
op|','
nl|'\n'
name|'hypervisor_hostname'
op|'='
string|"'abracadabra104'"
op|','
nl|'\n'
name|'host_ip'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'supported_instances'
op|'='
string|"''"
op|','
nl|'\n'
name|'pci_stats'
op|'='
string|"''"
op|','
nl|'\n'
name|'metrics'
op|'='
string|"''"
op|','
nl|'\n'
name|'extra_resources'
op|'='
string|"''"
op|','
nl|'\n'
name|'stats'
op|'='
string|"''"
op|','
name|'numa_topology'
op|'='
string|"''"
op|')'
newline|'\n'
comment|'# add some random stats'
nl|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'dict'
op|'('
name|'num_instances'
op|'='
number|'3'
op|','
name|'num_proj_12345'
op|'='
number|'2'
op|','
nl|'\n'
name|'num_proj_23456'
op|'='
number|'2'
op|','
name|'num_vm_building'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'item'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_create
dedent|''
name|'def'
name|'test_compute_node_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'compute_node_dict'
op|','
name|'self'
op|'.'
name|'item'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|'+'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'new_stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'self'
op|'.'
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stats'
op|','
name|'new_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all
dedent|''
name|'def'
name|'test_compute_node_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'date_fields'
op|'='
name|'set'
op|'('
op|'['
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'no_date_fields'
name|'in'
op|'['
name|'False'
op|','
name|'True'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'nodes'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'no_date_fields'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'node'
op|'='
name|'nodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'compute_node_dict'
op|','
name|'node'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|'+'
nl|'\n'
op|'['
string|"'stats'"
op|','
string|"'service'"
op|']'
op|')'
newline|'\n'
name|'node_fields'
op|'='
name|'set'
op|'('
name|'node'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'no_date_fields'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'date_fields'
op|'&'
name|'node_fields'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'date_fields'
op|'<='
name|'node_fields'
op|')'
newline|'\n'
dedent|''
name|'new_stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'node'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stats'
op|','
name|'new_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_deleted_compute_node
dedent|''
dedent|''
name|'def'
name|'test_compute_node_get_all_deleted_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create a service and compute node and ensure we can find its stats;'
nl|'\n'
comment|'# delete the service and compute node when done and loop again'
nl|'\n'
indent|'        '
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'2'
op|','
number|'5'
op|')'
op|':'
newline|'\n'
comment|'# Create a service'
nl|'\n'
indent|'            '
name|'service_data'
op|'='
name|'self'
op|'.'
name|'service_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'service_data'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host-%s'"
op|'%'
name|'x'
newline|'\n'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service_data'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a compute node'
nl|'\n'
name|'compute_node_data'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|'.'
name|'copy'
op|'('
op|')'
op|')'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'hypervisor-%s'"
op|'%'
name|'x'
newline|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_data'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure the "new" compute node is found'
nl|'\n'
name|'nodes'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'found'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'n'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'n'
op|'['
string|"'id'"
op|']'
op|'=='
name|'node'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'found'
op|'='
name|'n'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'found'
op|')'
newline|'\n'
comment|'# Now ensure the match has stats!'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'found'
op|'['
string|"'stats'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now delete the newly-created compute node to ensure the related'
nl|'\n'
comment|'# compute node stats are wiped in a cascaded fashion'
nl|'\n'
name|'db'
op|'.'
name|'compute_node_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Clean up the service'
nl|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_mult_compute_nodes_one_service_entry
dedent|''
dedent|''
name|'def'
name|'test_compute_node_get_all_mult_compute_nodes_one_service_entry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_data'
op|'='
name|'self'
op|'.'
name|'service_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'service_data'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host2'"
newline|'\n'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service_data'
op|')'
newline|'\n'
nl|'\n'
name|'existing_node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'item'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'existing_node'
op|'['
string|"'service'"
op|']'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'service'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'existing_node'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
op|'['
string|"'bm_node1'"
op|','
string|"'bm_node2'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'compute_node_data'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_data'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
name|'name'
newline|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_data'
op|')'
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'node'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'node'
op|'['
string|"'service'"
op|']'
op|'='
name|'dict'
op|'('
name|'service'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'='
name|'sorted'
op|'('
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'n'
op|':'
name|'n'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_by_host_with_distinct_hosts
dedent|''
name|'def'
name|'test_compute_node_get_all_by_host_with_distinct_hosts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create another service with another node'
nl|'\n'
indent|'        '
name|'service2'
op|'='
name|'self'
op|'.'
name|'service_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'service2'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host2'"
newline|'\n'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service2'
op|')'
newline|'\n'
name|'compute_node_another_host'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_another_host'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_another_host'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'node_2'"
newline|'\n'
name|'compute_node_another_host'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host2'"
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_another_host'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'self'
op|'.'
name|'item'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host2'"
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'node'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_by_host_with_same_host
dedent|''
name|'def'
name|'test_compute_node_get_all_by_host_with_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create another node on top of the same service'
nl|'\n'
indent|'        '
name|'compute_node_same_host'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'node_3'"
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_same_host'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'self'
op|'.'
name|'item'
op|','
name|'node'
op|']'
newline|'\n'
name|'result'
op|'='
name|'sorted'
op|'('
name|'db'
op|'.'
name|'compute_node_get_all_by_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'n'
op|':'
name|'n'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_by_host_not_found
dedent|''
name|'def'
name|'test_compute_node_get_all_by_host_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'compute_node_get_all_by_host'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'wrong'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_nodes_get_by_service_id_one_result
dedent|''
name|'def'
name|'test_compute_nodes_get_by_service_id_one_result'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'['
name|'self'
op|'.'
name|'item'
op|']'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'compute_nodes_get_by_service_id'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_nodes_get_by_service_id_multiple_results
dedent|''
name|'def'
name|'test_compute_nodes_get_by_service_id_multiple_results'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create another node on top of the same service'
nl|'\n'
indent|'        '
name|'compute_node_same_host'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'node_2'"
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_same_host'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'self'
op|'.'
name|'item'
op|','
name|'node'
op|']'
newline|'\n'
name|'result'
op|'='
name|'sorted'
op|'('
name|'db'
op|'.'
name|'compute_nodes_get_by_service_id'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'service'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'n'
op|':'
name|'n'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'expected'
op|','
name|'result'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_nodes_get_by_service_id_not_found
dedent|''
name|'def'
name|'test_compute_nodes_get_by_service_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'compute_nodes_get_by_service_id'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_by_host_and_nodename
dedent|''
name|'def'
name|'test_compute_node_get_by_host_and_nodename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create another node on top of the same service'
nl|'\n'
indent|'        '
name|'compute_node_same_host'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_same_host'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'node_2'"
newline|'\n'
nl|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_same_host'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'node'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'compute_node_get_by_host_and_nodename'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
string|"'node_2'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'expected'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_by_host_and_nodename_not_found
dedent|''
name|'def'
name|'test_compute_node_get_by_host_and_nodename_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'compute_node_get_by_host_and_nodename'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
string|"'wrong'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get
dedent|''
name|'def'
name|'test_compute_node_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_node_id'
op|'='
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'compute_node_dict'
op|','
name|'node'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|'+'
op|'['
string|"'stats'"
op|','
string|"'service'"
op|']'
op|')'
newline|'\n'
name|'new_stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'node'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stats'
op|','
name|'new_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update
dedent|''
name|'def'
name|'test_compute_node_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_node_id'
op|'='
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'self'
op|'.'
name|'item'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
comment|'# change some values:'
nl|'\n'
name|'stats'
op|'['
string|"'num_instances'"
op|']'
op|'='
number|'8'
newline|'\n'
name|'stats'
op|'['
string|"'num_tribbles'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'stats'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'stats'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'item_updated'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_id'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'item_updated'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'new_stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'item_updated'
op|'['
string|"'stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|','
name|'new_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_delete
dedent|''
name|'def'
name|'test_compute_node_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_node_id'
op|'='
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_id'
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'db'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_search_by_hypervisor
dedent|''
name|'def'
name|'test_compute_node_search_by_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nodes_created'
op|'='
op|'['
op|']'
newline|'\n'
name|'new_service'
op|'='
name|'copy'
op|'.'
name|'copy'
op|'('
name|'self'
op|'.'
name|'service_dict'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_service'
op|'['
string|"'binary'"
op|']'
op|'+='
name|'str'
op|'('
name|'i'
op|')'
newline|'\n'
name|'new_service'
op|'['
string|"'topic'"
op|']'
op|'+='
name|'str'
op|'('
name|'i'
op|')'
newline|'\n'
name|'service'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'new_service'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'service'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'testhost'"
op|'+'
name|'str'
op|'('
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_node_dict'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'node'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'compute_node_dict'
op|')'
newline|'\n'
name|'nodes_created'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'nodes'
op|'='
name|'db'
op|'.'
name|'compute_node_search_by_hypervisor'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'nodes_created'
op|','
name|'nodes'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|'+'
op|'['
string|"'stats'"
op|','
string|"'service'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_statistics
dedent|''
name|'def'
name|'test_compute_node_statistics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'db'
op|'.'
name|'compute_node_statistics'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'pop'
op|'('
string|"'count'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'stats'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|','
name|'self'
op|'.'
name|'item'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_statistics_disabled_service
dedent|''
dedent|''
name|'def'
name|'test_compute_node_statistics_disabled_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serv'
op|'='
name|'db'
op|'.'
name|'service_get_by_host_and_topic'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'host1'"
op|','
name|'CONF'
op|'.'
name|'compute_topic'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'serv'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'stats'
op|'='
name|'db'
op|'.'
name|'compute_node_statistics'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'pop'
op|'('
string|"'count'"
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_statistics_with_old_service_id
dedent|''
name|'def'
name|'test_compute_node_statistics_with_old_service_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(sbauza): This test is only for checking backwards compatibility'
nl|'\n'
comment|'# with old versions of compute_nodes not providing host column.'
nl|'\n'
comment|'# This test could be removed once we are sure that all compute nodes'
nl|'\n'
comment|'# are populating the host field thanks to the ResourceTracker'
nl|'\n'
nl|'\n'
indent|'        '
name|'service2'
op|'='
name|'self'
op|'.'
name|'service_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'service2'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host2'"
newline|'\n'
name|'db_service2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'service2'
op|')'
newline|'\n'
name|'compute_node_old_host'
op|'='
name|'self'
op|'.'
name|'compute_node_dict'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'compute_node_old_host'
op|'['
string|"'stats'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'compute_node_old_host'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"'node_2'"
newline|'\n'
name|'compute_node_old_host'
op|'['
string|"'service_id'"
op|']'
op|'='
name|'db_service2'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'compute_node_old_host'
op|'.'
name|'pop'
op|'('
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'compute_node_old_host'
op|')'
newline|'\n'
name|'stats'
op|'='
name|'db'
op|'.'
name|'compute_node_statistics'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'stats'
op|'.'
name|'pop'
op|'('
string|"'count'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_not_found
dedent|''
name|'def'
name|'test_compute_node_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
name|'db'
op|'.'
name|'compute_node_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update_always_updates_updated_at
dedent|''
name|'def'
name|'test_compute_node_update_always_updates_updated_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item_updated'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'self'
op|'.'
name|'item'
op|'['
string|"'updated_at'"
op|']'
op|','
nl|'\n'
name|'item_updated'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_update_override_updated_at
dedent|''
name|'def'
name|'test_compute_node_update_override_updated_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Update the record once so updated_at is set.'
nl|'\n'
indent|'        '
name|'first'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'free_ram_mb'"
op|':'
string|"'12'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'first'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Update a second time. Make sure that the updated_at value we send'
nl|'\n'
comment|'# is overridden.'
nl|'\n'
name|'second'
op|'='
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'item'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'updated_at'"
op|':'
name|'first'
op|'.'
name|'updated_at'
op|','
nl|'\n'
string|"'free_ram_mb'"
op|':'
string|"'13'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'first'
op|'['
string|"'updated_at'"
op|']'
op|','
name|'second'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProviderFwRuleTestCase
dedent|''
dedent|''
name|'class'
name|'ProviderFwRuleTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ProviderFwRuleTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_rule_values'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rules'
op|'='
op|'['
name|'db'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'rule'
op|')'
nl|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'values'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_rule_values
dedent|''
name|'def'
name|'_get_rule_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr_samples'
op|'='
op|'['
string|"'192.168.0.0/24'"
op|','
string|"'10.1.2.3/32'"
op|','
nl|'\n'
string|"'2001:4f8:3:ba::/64'"
op|','
nl|'\n'
string|"'2001:4f8:3:ba:2e0:81ff:fe22:d1f1/128'"
op|']'
newline|'\n'
name|'values'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'cidr_samples'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rule'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rule'
op|'['
string|"'protocol'"
op|']'
op|'='
string|"'foo'"
op|'+'
name|'str'
op|'('
name|'i'
op|')'
newline|'\n'
name|'rule'
op|'['
string|"'from_port'"
op|']'
op|'='
number|'9999'
op|'+'
name|'i'
newline|'\n'
name|'rule'
op|'['
string|"'to_port'"
op|']'
op|'='
number|'9898'
op|'+'
name|'i'
newline|'\n'
name|'rule'
op|'['
string|"'cidr'"
op|']'
op|'='
name|'cidr_samples'
op|'['
name|'i'
op|']'
newline|'\n'
name|'values'
op|'.'
name|'append'
op|'('
name|'rule'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
DECL|member|test_provider_fw_rule_create
dedent|''
name|'def'
name|'test_provider_fw_rule_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
nl|'\n'
string|"'updated_at'"
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'rule'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'rules'
op|'['
name|'i'
op|']'
op|','
name|'rule'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_fw_rule_get_all
dedent|''
dedent|''
name|'def'
name|'test_provider_fw_rule_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|'.'
name|'rules'
op|','
nl|'\n'
name|'db'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_fw_rule_destroy
dedent|''
name|'def'
name|'test_provider_fw_rule_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'rules'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'provider_fw_rule_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'rule'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'db'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CertificateTestCase
dedent|''
dedent|''
name|'class'
name|'CertificateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CertificateTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'created'
op|'='
name|'self'
op|'.'
name|'_certificates_create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_certs_values
dedent|''
name|'def'
name|'_get_certs_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_values'
op|'='
op|'{'
nl|'\n'
string|"'user_id'"
op|':'
string|"'user'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'project'"
op|','
nl|'\n'
string|"'file_name'"
op|':'
string|"'filename'"
nl|'\n'
op|'}'
newline|'\n'
name|'return'
op|'['
op|'{'
name|'k'
op|':'
name|'v'
op|'+'
name|'str'
op|'('
name|'x'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'base_values'
op|'.'
name|'iteritems'
op|'('
op|')'
op|'}'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
number|'4'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_certificates_create
dedent|''
name|'def'
name|'_certificates_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'db'
op|'.'
name|'certificate_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cert'
op|')'
nl|'\n'
name|'for'
name|'cert'
name|'in'
name|'self'
op|'.'
name|'_get_certs_values'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_certificate_create
dedent|''
name|'def'
name|'test_certificate_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
nl|'\n'
string|"'updated_at'"
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'cert'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_certs_values'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'created'
op|'['
name|'i'
op|']'
op|','
name|'cert'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_certificate_get_all_by_project
dedent|''
dedent|''
name|'def'
name|'test_certificate_get_all_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cert'
op|'='
name|'db'
op|'.'
name|'certificate_get_all_by_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|','
name|'cert'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_certificate_get_all_by_user
dedent|''
name|'def'
name|'test_certificate_get_all_by_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cert'
op|'='
name|'db'
op|'.'
name|'certificate_get_all_by_user'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|','
name|'cert'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_certificate_get_all_by_user_and_project
dedent|''
name|'def'
name|'test_certificate_get_all_by_user_and_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cert'
op|'='
name|'db'
op|'.'
name|'certificate_get_all_by_user_and_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'self'
op|'.'
name|'created'
op|'['
number|'1'
op|']'
op|','
name|'cert'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsoleTestCase
dedent|''
dedent|''
name|'class'
name|'ConsoleTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConsoleTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'pools_data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.10.10'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user1'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'passwd1'"
op|','
nl|'\n'
string|"'console_type'"
op|':'
string|"'type1'"
op|','
nl|'\n'
string|"'public_hostname'"
op|':'
string|"'public_host1'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'compute_host1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.10.11'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user2'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'passwd2'"
op|','
nl|'\n'
string|"'console_type'"
op|':'
string|"'type2'"
op|','
nl|'\n'
string|"'public_hostname'"
op|':'
string|"'public_host2'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'compute_host2'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'console_pools'
op|'='
op|'['
name|'db'
op|'.'
name|'console_pool_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val'
op|')'
nl|'\n'
name|'for'
name|'val'
name|'in'
name|'pools_data'
op|']'
newline|'\n'
name|'instance_uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'console_data'
op|'='
op|'['
op|'{'
string|"'instance_name'"
op|':'
string|"'name'"
op|'+'
name|'str'
op|'('
name|'x'
op|')'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'pass'"
op|'+'
name|'str'
op|'('
name|'x'
op|')'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'7878'
op|'+'
name|'x'
op|','
nl|'\n'
string|"'pool_id'"
op|':'
name|'self'
op|'.'
name|'console_pools'
op|'['
name|'x'
op|']'
op|'['
string|"'id'"
op|']'
op|'}'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'pools_data'
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'consoles'
op|'='
op|'['
name|'db'
op|'.'
name|'console_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'val'
op|')'
nl|'\n'
name|'for'
name|'val'
name|'in'
name|'self'
op|'.'
name|'console_data'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_console_create
dedent|''
name|'def'
name|'test_console_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
nl|'\n'
string|"'updated_at'"
op|']'
newline|'\n'
name|'for'
name|'console'
name|'in'
name|'self'
op|'.'
name|'consoles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'console'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|'.'
name|'console_data'
op|','
name|'self'
op|'.'
name|'consoles'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_by_id
dedent|''
name|'def'
name|'test_console_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'console'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
newline|'\n'
name|'console_get'
op|'='
name|'db'
op|'.'
name|'console_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'console'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'console'
op|','
name|'console_get'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'pool'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_by_id_uuid
dedent|''
name|'def'
name|'test_console_get_by_id_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'console'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
newline|'\n'
name|'console_get'
op|'='
name|'db'
op|'.'
name|'console_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'console'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'console'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'console'
op|','
name|'console_get'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'pool'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_by_pool_instance
dedent|''
name|'def'
name|'test_console_get_by_pool_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'console'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
newline|'\n'
name|'console_get'
op|'='
name|'db'
op|'.'
name|'console_get_by_pool_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'console'
op|'['
string|"'pool_id'"
op|']'
op|','
name|'console'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'console'
op|','
name|'console_get'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'pool'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_all_by_instance
dedent|''
name|'def'
name|'test_console_get_all_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'consoles_get'
op|'='
name|'db'
op|'.'
name|'console_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|'.'
name|'consoles'
op|','
name|'consoles_get'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_all_by_instance_with_pool
dedent|''
name|'def'
name|'test_console_get_all_by_instance_with_pool'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'consoles_get'
op|'='
name|'db'
op|'.'
name|'console_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'pool'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'self'
op|'.'
name|'consoles'
op|','
name|'consoles_get'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'pool'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
op|'['
name|'pool'
name|'for'
name|'pool'
name|'in'
name|'self'
op|'.'
name|'console_pools'
op|']'
op|','
nl|'\n'
op|'['
name|'c'
op|'['
string|"'pool'"
op|']'
name|'for'
name|'c'
name|'in'
name|'consoles_get'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_all_by_instance_empty
dedent|''
name|'def'
name|'test_console_get_all_by_instance_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'consoles_get'
op|'='
name|'db'
op|'.'
name|'console_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'consoles_get'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_delete
dedent|''
name|'def'
name|'test_console_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'console_id'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'console_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'console_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleNotFound'
op|','
name|'db'
op|'.'
name|'console_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'console_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_by_pool_instance_not_found
dedent|''
name|'def'
name|'test_console_get_by_pool_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleNotFoundInPoolForInstance'
op|','
nl|'\n'
name|'db'
op|'.'
name|'console_get_by_pool_instance'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
op|'['
string|"'pool_id'"
op|']'
op|','
nl|'\n'
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_not_found
dedent|''
name|'def'
name|'test_console_get_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleNotFound'
op|','
name|'db'
op|'.'
name|'console_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_get_not_found_instance
dedent|''
name|'def'
name|'test_console_get_not_found_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleNotFoundForInstance'
op|','
name|'db'
op|'.'
name|'console_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'consoles'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellTestCase
dedent|''
dedent|''
name|'class'
name|'CellTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|_ignored_keys
indent|'    '
name|'_ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_cell_base_values
dedent|''
name|'def'
name|'_get_cell_base_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'myname'"
op|','
nl|'\n'
string|"'api_url'"
op|':'
string|"'apiurl'"
op|','
nl|'\n'
string|"'transport_url'"
op|':'
string|"'transporturl'"
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
number|'0.5'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
number|'1.5'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_cell_value_modify
dedent|''
name|'def'
name|'_cell_value_modify'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'step'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
op|'+'
name|'str'
op|'('
name|'step'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'float'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
op|'+'
name|'step'
op|'+'
number|'0.6'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'bool'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'bool'
op|'('
name|'step'
op|'%'
number|'2'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
op|'+'
name|'step'
newline|'\n'
nl|'\n'
DECL|member|_create_cells
dedent|''
dedent|''
name|'def'
name|'_create_cells'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_values'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'modified_val'
op|'='
op|'{'
name|'k'
op|':'
name|'self'
op|'.'
name|'_cell_value_modify'
op|'('
name|'v'
op|','
name|'x'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'modified_val'
op|')'
newline|'\n'
name|'test_values'
op|'.'
name|'append'
op|'('
name|'modified_val'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'test_values'
newline|'\n'
nl|'\n'
DECL|member|test_cell_create
dedent|''
name|'def'
name|'test_cell_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell'
op|'='
name|'db'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'cell'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'cell'
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_update
dedent|''
name|'def'
name|'test_cell_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|')'
newline|'\n'
name|'new_values'
op|'='
op|'{'
nl|'\n'
string|"'api_url'"
op|':'
string|"'apiurl1'"
op|','
nl|'\n'
string|"'transport_url'"
op|':'
string|"'transporturl1'"
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
number|'0.6'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
number|'1.6'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'test_cellname'
op|'='
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'updated_cell'
op|'='
name|'db'
op|'.'
name|'cell_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'test_cellname'
op|','
name|'new_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'updated_cell'
op|','
name|'new_values'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|'+'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_delete
dedent|''
name|'def'
name|'test_cell_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_cells'
op|'='
name|'self'
op|'.'
name|'_create_cells'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'new_cells'
op|':'
newline|'\n'
indent|'            '
name|'test_cellname'
op|'='
name|'cell'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'cell_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'test_cellname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellNotFound'
op|','
name|'db'
op|'.'
name|'cell_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'test_cellname'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_get
dedent|''
dedent|''
name|'def'
name|'test_cell_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_cells'
op|'='
name|'self'
op|'.'
name|'_create_cells'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'new_cells'
op|':'
newline|'\n'
indent|'            '
name|'cell_get'
op|'='
name|'db'
op|'.'
name|'cell_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'cell_get'
op|','
name|'cell'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_get_all
dedent|''
dedent|''
name|'def'
name|'test_cell_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_cells'
op|'='
name|'self'
op|'.'
name|'_create_cells'
op|'('
op|')'
newline|'\n'
name|'cells'
op|'='
name|'db'
op|'.'
name|'cell_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'new_cells'
op|')'
op|','
name|'len'
op|'('
name|'cells'
op|')'
op|')'
newline|'\n'
name|'cells_byname'
op|'='
op|'{'
name|'newcell'
op|'['
string|"'name'"
op|']'
op|':'
name|'newcell'
nl|'\n'
name|'for'
name|'newcell'
name|'in'
name|'new_cells'
op|'}'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'cells'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'cell'
op|','
name|'cells_byname'
op|'['
name|'cell'
op|'['
string|"'name'"
op|']'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_get_not_found
dedent|''
dedent|''
name|'def'
name|'test_cell_get_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellNotFound'
op|','
name|'db'
op|'.'
name|'cell_get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'cellnotinbase'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_update_not_found
dedent|''
name|'def'
name|'test_cell_update_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellNotFound'
op|','
name|'db'
op|'.'
name|'cell_update'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'cellnotinbase'"
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_create_exists
dedent|''
name|'def'
name|'test_cell_create_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellExists'
op|','
name|'db'
op|'.'
name|'cell_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'_get_cell_base_values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsolePoolTestCase
dedent|''
dedent|''
name|'class'
name|'ConsolePoolTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConsolePoolTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_console_pool_1'
op|'='
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.2.10'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user_1'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'secret_123'"
op|','
nl|'\n'
string|"'console_type'"
op|':'
string|"'type_1'"
op|','
nl|'\n'
string|"'public_hostname'"
op|':'
string|"'public_hostname_123'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'localhost'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'test_console_pool_2'
op|'='
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.2.11'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user_2'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'secret_1234'"
op|','
nl|'\n'
string|"'console_type'"
op|':'
string|"'type_2'"
op|','
nl|'\n'
string|"'public_hostname'"
op|':'
string|"'public_hostname_1234'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'localhost'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'test_console_pool_3'
op|'='
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.2.12'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user_3'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'secret_12345'"
op|','
nl|'\n'
string|"'console_type'"
op|':'
string|"'type_2'"
op|','
nl|'\n'
string|"'public_hostname'"
op|':'
string|"'public_hostname_12345'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_create
dedent|''
name|'def'
name|'test_console_pool_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'console_pool'
op|'='
name|'db'
op|'.'
name|'console_pool_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'test_console_pool_1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'console_pool'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
nl|'\n'
name|'console_pool'
op|','
name|'self'
op|'.'
name|'test_console_pool_1'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_create_duplicate
dedent|''
name|'def'
name|'test_console_pool_create_duplicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'console_pool_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'test_console_pool_1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsolePoolExists'
op|','
name|'db'
op|'.'
name|'console_pool_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'test_console_pool_1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_get_by_host_type
dedent|''
name|'def'
name|'test_console_pool_get_by_host_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'['
nl|'\n'
name|'self'
op|'.'
name|'test_console_pool_1'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_console_pool_2'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'p'
name|'in'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'console_pool_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'p'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'id'"
op|','
string|"'consoles'"
op|']'
newline|'\n'
nl|'\n'
name|'cp'
op|'='
name|'self'
op|'.'
name|'test_console_pool_1'
newline|'\n'
name|'db_cp'
op|'='
name|'db'
op|'.'
name|'console_pool_get_by_host_type'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cp'
op|'['
string|"'compute_host'"
op|']'
op|','
name|'cp'
op|'['
string|"'host'"
op|']'
op|','
name|'cp'
op|'['
string|"'console_type'"
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'cp'
op|','
name|'db_cp'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_get_by_host_type_no_resuls
dedent|''
name|'def'
name|'test_console_pool_get_by_host_type_no_resuls'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ConsolePoolNotFoundForHostType'
op|','
nl|'\n'
name|'db'
op|'.'
name|'console_pool_get_by_host_type'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'compute_host'"
op|','
nl|'\n'
string|"'host'"
op|','
string|"'console_type'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_get_all_by_host_type
dedent|''
name|'def'
name|'test_console_pool_get_all_by_host_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'['
nl|'\n'
name|'self'
op|'.'
name|'test_console_pool_1'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_console_pool_2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_console_pool_3'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'console_pool_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'p'
op|')'
newline|'\n'
dedent|''
name|'ignored_keys'
op|'='
op|'['
string|"'deleted'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted_at'"
op|','
string|"'id'"
op|','
string|"'consoles'"
op|']'
newline|'\n'
nl|'\n'
name|'cp'
op|'='
name|'self'
op|'.'
name|'test_console_pool_2'
newline|'\n'
name|'db_cp'
op|'='
name|'db'
op|'.'
name|'console_pool_get_all_by_host_type'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cp'
op|'['
string|"'host'"
op|']'
op|','
name|'cp'
op|'['
string|"'console_type'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
nl|'\n'
name|'db_cp'
op|','
op|'['
name|'self'
op|'.'
name|'test_console_pool_2'
op|','
name|'self'
op|'.'
name|'test_console_pool_3'
op|']'
op|','
nl|'\n'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_console_pool_get_all_by_host_type_no_results
dedent|''
name|'def'
name|'test_console_pool_get_all_by_host_type_no_results'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'db'
op|'.'
name|'console_pool_get_all_by_host_type'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'cp_host'"
op|','
string|"'cp_console_type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DnsdomainTestCase
dedent|''
dedent|''
name|'class'
name|'DnsdomainTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DnsdomainTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'domain'
op|'='
string|"'test.domain'"
newline|'\n'
name|'self'
op|'.'
name|'testzone'
op|'='
string|"'testzone'"
newline|'\n'
name|'self'
op|'.'
name|'project'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
DECL|member|test_dnsdomain_register_for_zone
dedent|''
name|'def'
name|'test_dnsdomain_register_for_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|','
name|'self'
op|'.'
name|'testzone'
op|')'
newline|'\n'
name|'domain'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'domain'"
op|']'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'self'
op|'.'
name|'testzone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'scope'"
op|']'
op|','
string|"'private'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsdomain_register_for_project
dedent|''
name|'def'
name|'test_dnsdomain_register_for_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'dnsdomain_register_for_project'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|','
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
name|'domain'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'domain'"
op|']'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'project_id'"
op|']'
op|','
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'domain'
op|'['
string|"'scope'"
op|']'
op|','
string|"'public'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsdomain_unregister
dedent|''
name|'def'
name|'test_dnsdomain_unregister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|','
name|'self'
op|'.'
name|'testzone'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'dnsdomain_unregister'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'domain'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsdomain_get_all
dedent|''
name|'def'
name|'test_dnsdomain_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d_list'
op|'='
op|'['
string|"'test.domain.one'"
op|','
string|"'test.domain.two'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'d_list'
op|'['
number|'0'
op|']'
op|','
string|"'zone'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'dnsdomain_register_for_zone'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'d_list'
op|'['
number|'1'
op|']'
op|','
string|"'zone'"
op|')'
newline|'\n'
name|'db_list'
op|'='
name|'db'
op|'.'
name|'dnsdomain_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'db_domain_list'
op|'='
op|'['
name|'d'
op|'.'
name|'domain'
name|'for'
name|'d'
name|'in'
name|'db_list'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'d_list'
op|')'
op|','
name|'sorted'
op|'('
name|'db_domain_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BwUsageTestCase
dedent|''
dedent|''
name|'class'
name|'BwUsageTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|_ignored_keys
indent|'    '
name|'_ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BwUsageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'test'
op|'.'
name|'TimeOverride'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_get_by_uuids
dedent|''
name|'def'
name|'test_bw_usage_get_by_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'start_period'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
name|'uuid3_refreshed'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'expected_bw_usages'
op|'='
op|'{'
nl|'\n'
string|"'fake_uuid1'"
op|':'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac1'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'12345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'67890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
string|"'fake_uuid2'"
op|':'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac2'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'300'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'22345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'77890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
string|"'fake_uuid3'"
op|':'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid3'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac3'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'500'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'32345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'87890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'uuid3_refreshed'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'bw_usages'
op|'='
name|'db'
op|'.'
name|'bw_usage_get_by_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'['
string|"'fake_uuid1'"
op|','
string|"'fake_uuid2'"
op|']'
op|','
name|'start_period'
op|')'
newline|'\n'
comment|'# No matches'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bw_usages'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Add 3 entries'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'fake_mac1'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'100'
op|','
number|'200'
op|','
number|'12345'
op|','
number|'67890'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'fake_mac2'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'100'
op|','
number|'200'
op|','
number|'42'
op|','
number|'42'
op|')'
newline|'\n'
comment|'# Test explicit refreshed time'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid3'"
op|','
nl|'\n'
string|"'fake_mac3'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'400'
op|','
number|'500'
op|','
number|'32345'
op|','
number|'87890'
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'uuid3_refreshed'
op|')'
newline|'\n'
comment|'# Update 2nd entry'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid2'"
op|','
nl|'\n'
string|"'fake_mac2'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'200'
op|','
number|'300'
op|','
number|'22345'
op|','
number|'77890'
op|')'
newline|'\n'
nl|'\n'
name|'bw_usages'
op|'='
name|'db'
op|'.'
name|'bw_usage_get_by_uuids'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'['
string|"'fake_uuid1'"
op|','
string|"'fake_uuid2'"
op|','
string|"'fake_uuid3'"
op|']'
op|','
name|'start_period'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bw_usages'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'usage'
name|'in'
name|'bw_usages'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'expected_bw_usages'
op|'['
name|'usage'
op|'['
string|"'uuid'"
op|']'
op|']'
op|','
name|'usage'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_get
dedent|''
dedent|''
name|'def'
name|'test_bw_usage_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'start_period'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'expected_bw_usage'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac1'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'start_period'
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
number|'12345'
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
number|'67890'
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
name|'now'
op|'}'
newline|'\n'
nl|'\n'
name|'bw_usage'
op|'='
name|'db'
op|'.'
name|'bw_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid1'"
op|','
name|'start_period'
op|','
nl|'\n'
string|"'fake_mac1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'bw_usage'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid1'"
op|','
nl|'\n'
string|"'fake_mac1'"
op|','
name|'start_period'
op|','
nl|'\n'
number|'100'
op|','
number|'200'
op|','
number|'12345'
op|','
number|'67890'
op|')'
newline|'\n'
nl|'\n'
name|'bw_usage'
op|'='
name|'db'
op|'.'
name|'bw_usage_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid1'"
op|','
name|'start_period'
op|','
nl|'\n'
string|"'fake_mac1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'bw_usage'
op|','
name|'expected_bw_usage'
op|','
nl|'\n'
name|'ignored_keys'
op|'='
name|'self'
op|'.'
name|'_ignored_keys'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Ec2TestCase
dedent|''
dedent|''
name|'class'
name|'Ec2TestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Ec2TestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_ids_not_found_are_printable
dedent|''
name|'def'
name|'test_ec2_ids_not_found_are_printable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|check_exc_format
indent|'        '
name|'def'
name|'check_exc_format'
op|'('
name|'method'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'method'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'six'
op|'.'
name|'text_type'
op|'('
name|'value'
op|')'
op|','
name|'six'
op|'.'
name|'text_type'
op|'('
name|'exc'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|','
number|'123456'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'ec2_snapshot_get_by_ec2_id'
op|','
number|'123456'
op|')'
newline|'\n'
name|'check_exc_format'
op|'('
name|'db'
op|'.'
name|'ec2_snapshot_get_by_uuid'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_volume_create
dedent|''
name|'def'
name|'test_ec2_volume_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_volume_get_by_id
dedent|''
name|'def'
name|'test_ec2_volume_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'db'
op|'.'
name|'ec2_volume_get_by_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol2'
op|'['
string|"'uuid'"
op|']'
op|','
name|'vol'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_volume_get_by_uuid
dedent|''
name|'def'
name|'test_ec2_volume_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
name|'db'
op|'.'
name|'ec2_volume_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'db'
op|'.'
name|'ec2_volume_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'vol'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol2'
op|'['
string|"'id'"
op|']'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_snapshot_create
dedent|''
name|'def'
name|'test_ec2_snapshot_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snap'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snap'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_snapshot_get_by_ec2_id
dedent|''
name|'def'
name|'test_ec2_snapshot_get_by_ec2_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snap'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'snap2'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_get_by_ec2_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snap2'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_snapshot_get_by_uuid
dedent|''
name|'def'
name|'test_ec2_snapshot_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snap'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'snap2'
op|'='
name|'db'
op|'.'
name|'ec2_snapshot_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|','
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_snapshot_get_by_ec2_id_not_found
dedent|''
name|'def'
name|'test_ec2_snapshot_get_by_ec2_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'ec2_snapshot_get_by_ec2_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'123456'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_snapshot_get_by_uuid_not_found
dedent|''
name|'def'
name|'test_ec2_snapshot_get_by_uuid_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'ec2_snapshot_get_by_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_instance_create
dedent|''
name|'def'
name|'test_ec2_instance_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'ec2_instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_instance_get_by_uuid
dedent|''
name|'def'
name|'test_ec2_instance_get_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'ec2_instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'ec2_instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_instance_get_by_id
dedent|''
name|'def'
name|'test_ec2_instance_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'ec2_instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'ec2_instance_get_by_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_instance_get_by_uuid_not_found
dedent|''
name|'def'
name|'test_ec2_instance_get_by_uuid_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'ec2_instance_get_by_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'uuid-not-present'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ec2_instance_get_by_id_not_found
dedent|''
name|'def'
name|'test_ec2_instance_get_by_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'ec2_instance_get_by_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'12345'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_uuid_by_ec2_id
dedent|''
name|'def'
name|'test_get_instance_uuid_by_ec2_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'ec2_instance_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'inst_uuid'
op|'='
name|'db'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst_uuid'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_uuid_by_ec2_id_not_found
dedent|''
name|'def'
name|'test_get_instance_uuid_by_ec2_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'100500'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ArchiveTestCase
dedent|''
dedent|''
name|'class'
name|'ArchiveTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ArchiveTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'engine'
op|'='
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'self'
op|'.'
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_id_mappings'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"instance_id_mappings"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_instance_id_mappings'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_instance_id_mappings"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dns_domains'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"dns_domains"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_dns_domains'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_dns_domains"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'consoles'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
string|'"consoles"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'console_pools'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_consoles'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_consoles"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_console_pools'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instances'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
string|'"instances"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'shadow_instances'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_instances"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'unused'
name|'in'
name|'range'
op|'('
number|'6'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'uuidstrs'
op|'.'
name|'append'
op|'('
name|'stdlib_uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ids'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'id_tablenames_to_cleanup'
op|'='
name|'set'
op|'('
op|'['
string|'"console_pools"'
op|','
string|'"consoles"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uuid_tablenames_to_cleanup'
op|'='
name|'set'
op|'('
op|'['
string|'"instance_id_mappings"'
op|','
nl|'\n'
string|'"instances"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'domain_tablenames_to_cleanup'
op|'='
name|'set'
op|'('
op|'['
string|'"dns_domains"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ArchiveTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'for'
name|'tablename'
name|'in'
name|'self'
op|'.'
name|'id_tablenames_to_cleanup'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'name'
name|'in'
op|'['
name|'tablename'
op|','
string|'"shadow_"'
op|'+'
name|'tablename'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
name|'name'
op|')'
newline|'\n'
name|'del_statement'
op|'='
name|'table'
op|'.'
name|'delete'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'ids'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'del_statement'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'tablename'
name|'in'
name|'self'
op|'.'
name|'uuid_tablenames_to_cleanup'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'name'
name|'in'
op|'['
name|'tablename'
op|','
string|'"shadow_"'
op|'+'
name|'tablename'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
name|'name'
op|')'
newline|'\n'
name|'del_statement'
op|'='
name|'table'
op|'.'
name|'delete'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'del_statement'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'tablename'
name|'in'
name|'self'
op|'.'
name|'domain_tablenames_to_cleanup'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'name'
name|'in'
op|'['
name|'tablename'
op|','
string|'"shadow_"'
op|'+'
name|'tablename'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
name|'name'
op|')'
newline|'\n'
name|'del_statement'
op|'='
name|'table'
op|'.'
name|'delete'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'del_statement'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shadow_tables
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_shadow_tables'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metadata'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'self'
op|'.'
name|'engine'
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'reflect'
op|'('
op|')'
newline|'\n'
name|'for'
name|'table_name'
name|'in'
name|'metadata'
op|'.'
name|'tables'
op|':'
newline|'\n'
comment|'# NOTE(rpodolyaka): migration 209 introduced a few new tables,'
nl|'\n'
comment|"#                   which don't have shadow tables and it's"
nl|'\n'
comment|'#                   completely OK, so we should skip them here'
nl|'\n'
indent|'            '
name|'if'
name|'table_name'
op|'.'
name|'startswith'
op|'('
string|'"dump_"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|"# NOTE(snikitin): migration 266 introduced a new table 'tags',"
nl|'\n'
comment|"#                 which have no shadow table and it's"
nl|'\n'
comment|'#                 completely OK, so we should skip it here'
nl|'\n'
dedent|''
name|'if'
name|'table_name'
op|'=='
string|"'tags'"
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'table_name'
op|'.'
name|'startswith'
op|'('
string|'"shadow_"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'table_name'
op|'['
number|'7'
op|':'
op|']'
op|','
name|'metadata'
op|'.'
name|'tables'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
nl|'\n'
name|'table_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows
dedent|''
dedent|''
name|'def'
name|'test_archive_deleted_rows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Add 6 rows to table'
nl|'\n'
indent|'        '
name|'for'
name|'uuidstr'
name|'in'
name|'self'
op|'.'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'            '
name|'ins_stmt'
op|'='
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
comment|'# Set 4 to deleted'
nl|'\n'
dedent|''
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'qiim'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'instance_id_mappings'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
nl|'\n'
name|'instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 6 in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'qsiim'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_instance_id_mappings'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'shadow_instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 0 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Archive 2 rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Archive 2 more rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Try to archive more, but there are no deleted rows left.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 2 left in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 4 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_for_every_uuid_table
dedent|''
name|'def'
name|'test_archive_deleted_rows_for_every_uuid_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tablenames'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'model_class'
name|'in'
name|'models'
op|'.'
name|'__dict__'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'model_class'
op|','
string|'"__tablename__"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'tablenames'
op|'.'
name|'append'
op|'('
name|'model_class'
op|'.'
name|'__tablename__'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'tablenames'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'tablename'
name|'in'
name|'tablenames'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
name|'self'
op|'.'
name|'_test_archive_deleted_rows_for_one_uuid_table'
op|'('
name|'tablename'
op|')'
newline|'\n'
name|'if'
name|'ret'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'uuid_tablenames_to_cleanup'
op|'.'
name|'add'
op|'('
name|'tablename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_archive_deleted_rows_for_one_uuid_table
dedent|''
dedent|''
dedent|''
name|'def'
name|'_test_archive_deleted_rows_for_one_uuid_table'
op|'('
name|'self'
op|','
name|'tablename'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""":returns: 0 on success, 1 if no uuid column, 2 if insert failed."""'
newline|'\n'
name|'main_table'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
name|'self'
op|'.'
name|'engine'
op|','
name|'tablename'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'main_table'
op|'.'
name|'c'
op|','
string|'"uuid"'
op|')'
op|':'
newline|'\n'
comment|'# Not a uuid table, so skip it.'
nl|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'shadow_table'
op|'='
name|'sqlalchemyutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'engine'
op|','
string|'"shadow_"'
op|'+'
name|'tablename'
op|')'
newline|'\n'
comment|'# Add 6 rows to table'
nl|'\n'
name|'for'
name|'uuidstr'
name|'in'
name|'self'
op|'.'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'            '
name|'ins_stmt'
op|'='
name|'main_table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
op|':'
newline|'\n'
comment|'# This table has constraints that require a table-specific'
nl|'\n'
comment|'# insert, so skip it.'
nl|'\n'
indent|'                '
name|'return'
number|'2'
newline|'\n'
comment|'# Set 4 to deleted'
nl|'\n'
dedent|''
dedent|''
name|'update_statement'
op|'='
name|'main_table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'main_table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'qmt'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'main_table'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'main_table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qmt'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 6 in main'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'qst'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'shadow_table'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'shadow_table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qst'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we have 0 in shadow'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Archive 2 rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
comment|'# Verify we have 4 left in main'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qmt'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Verify we have 2 in shadow'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qst'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Archive 2 more rows'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
comment|'# Verify we have 2 left in main'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qmt'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Verify we have 4 in shadow'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qst'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Try to archive more, but there are no deleted rows left.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'tablename'
op|','
name|'max_rows'
op|'='
number|'2'
op|')'
newline|'\n'
comment|'# Verify we still have 2 left in main'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qmt'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Verify we still have 4 in shadow'
nl|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qst'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_no_id_column
dedent|''
name|'def'
name|'test_archive_deleted_rows_no_id_column'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuidstr0'
op|'='
name|'self'
op|'.'
name|'uuidstrs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'ins_stmt'
op|'='
name|'self'
op|'.'
name|'dns_domains'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'domain'
op|'='
name|'uuidstr0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'dns_domains'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'dns_domains'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
name|'uuidstr0'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'qdd'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'dns_domains'
op|']'
op|','
name|'self'
op|'.'
name|'dns_domains'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
nl|'\n'
name|'uuidstr0'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qdd'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'qsdd'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_dns_domains'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'shadow_dns_domains'
op|'.'
name|'c'
op|'.'
name|'domain'
op|'=='
name|'uuidstr0'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsdd'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'1'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qdd'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsdd'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_fk_constraint
dedent|''
name|'def'
name|'test_archive_deleted_rows_fk_constraint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# consoles.pool_id depends on console_pools.id'
nl|'\n'
comment|"# SQLite doesn't enforce foreign key constraints without a pragma."
nl|'\n'
indent|'        '
name|'dialect'
op|'='
name|'self'
op|'.'
name|'engine'
op|'.'
name|'url'
op|'.'
name|'get_dialect'
op|'('
op|')'
newline|'\n'
name|'if'
name|'dialect'
op|'=='
name|'sqlite'
op|'.'
name|'dialect'
op|':'
newline|'\n'
comment|"# We're seeing issues with foreign key support in SQLite 3.6.20"
nl|'\n'
comment|"# SQLAlchemy doesn't support it at all with < SQLite 3.6.19"
nl|'\n'
comment|'# It works fine in SQLite 3.7.'
nl|'\n'
comment|'# So return early to skip this test if running SQLite < 3.7'
nl|'\n'
indent|'            '
name|'import'
name|'sqlite3'
newline|'\n'
name|'tup'
op|'='
name|'sqlite3'
op|'.'
name|'sqlite_version_info'
newline|'\n'
name|'if'
name|'tup'
op|'['
number|'0'
op|']'
op|'<'
number|'3'
name|'or'
op|'('
name|'tup'
op|'['
number|'0'
op|']'
op|'=='
number|'3'
name|'and'
name|'tup'
op|'['
number|'1'
op|']'
op|'<'
number|'7'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'skipTest'
op|'('
nl|'\n'
string|"'sqlite version too old for reliable SQLA foreign_keys'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'"PRAGMA foreign_keys = ON"'
op|')'
newline|'\n'
dedent|''
name|'ins_stmt'
op|'='
name|'self'
op|'.'
name|'console_pools'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
name|'id1'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ids'
op|'.'
name|'append'
op|'('
name|'id1'
op|')'
newline|'\n'
name|'ins_stmt'
op|'='
name|'self'
op|'.'
name|'consoles'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|','
nl|'\n'
name|'pool_id'
op|'='
name|'id1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
name|'id2'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ids'
op|'.'
name|'append'
op|'('
name|'id2'
op|')'
newline|'\n'
comment|'# The first try to archive console_pools should fail, due to FK.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Then archiving consoles should work.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"consoles"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# Then archiving console_pools should work.'
nl|'\n'
name|'num'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows_for_table'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"console_pools"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_2_tables
dedent|''
name|'def'
name|'test_archive_deleted_rows_2_tables'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Add 6 rows to each table'
nl|'\n'
indent|'        '
name|'for'
name|'uuidstr'
name|'in'
name|'self'
op|'.'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'            '
name|'ins_stmt'
op|'='
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
name|'ins_stmt2'
op|'='
name|'self'
op|'.'
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt2'
op|')'
newline|'\n'
comment|'# Set 4 of each to deleted'
nl|'\n'
dedent|''
name|'update_statement'
op|'='
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement'
op|')'
newline|'\n'
name|'update_statement2'
op|'='
name|'self'
op|'.'
name|'instances'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|')'
op|'.'
name|'values'
op|'('
name|'deleted'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'update_statement2'
op|')'
newline|'\n'
comment|'# Verify we have 6 in each main table'
nl|'\n'
name|'qiim'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'instance_id_mappings'
op|']'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'qi'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'instances'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
comment|'# Verify we have 0 in each shadow table'
nl|'\n'
name|'qsiim'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_instance_id_mappings'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'shadow_instance_id_mappings'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'qsi'
op|'='
name|'sql'
op|'.'
name|'select'
op|'('
op|'['
name|'self'
op|'.'
name|'shadow_instances'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'self'
op|'.'
name|'shadow_instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'self'
op|'.'
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Archive 7 rows, which should be 4 in one table and 3 in the other.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'7'
op|')'
newline|'\n'
comment|'# Verify we have 5 left in the two main tables combined'
nl|'\n'
name|'iim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'i_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'iim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'i_rows'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
comment|'# Verify we have 7 in the two shadow tables combined.'
nl|'\n'
name|'siim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'si_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'siim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'si_rows'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
comment|'# Archive the remaining deleted rows.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'1'
op|')'
newline|'\n'
comment|'# Verify we have 4 total left in both main tables.'
nl|'\n'
name|'iim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'i_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'iim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'i_rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Verify we have 8 in shadow'
nl|'\n'
name|'siim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'si_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'siim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'si_rows'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
comment|'# Try to archive more, but there are no deleted rows left.'
nl|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'max_rows'
op|'='
number|'500'
op|')'
newline|'\n'
comment|'# Verify we have 4 total left in both main tables.'
nl|'\n'
name|'iim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'i_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'iim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'i_rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
comment|'# Verify we have 8 in shadow'
nl|'\n'
name|'siim_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsiim'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'si_rows'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'qsi'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'siim_rows'
op|')'
op|'+'
name|'len'
op|'('
name|'si_rows'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceGroupDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceGroupDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceGroupDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake_user'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake_project'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_default_values
dedent|''
name|'def'
name|'_get_default_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_group
dedent|''
name|'def'
name|'_create_instance_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|','
name|'policies'
op|'='
name|'None'
op|','
nl|'\n'
name|'members'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'policies'
op|'='
name|'policies'
op|','
nl|'\n'
name|'members'
op|'='
name|'members'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_create_no_key
dedent|''
name|'def'
name|'test_instance_group_create_no_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'uuid'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'result'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_create_with_key
dedent|''
name|'def'
name|'test_instance_group_create_with_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_create_with_same_key
dedent|''
name|'def'
name|'test_instance_group_create_with_same_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupIdExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_instance_group'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_get
dedent|''
name|'def'
name|'test_instance_group_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result1'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'result2'
op|'='
name|'db'
op|'.'
name|'instance_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result1'
op|','
name|'result2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_update_simple
dedent|''
name|'def'
name|'test_instance_group_update_simple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result1'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'new_name'"
op|','
string|"'user_id'"
op|':'
string|"'new_user'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'new_project'"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result1'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
name|'result2'
op|'='
name|'db'
op|'.'
name|'instance_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'result2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'uuid'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result2'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_delete
dedent|''
name|'def'
name|'test_instance_group_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'result'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_get_nonexistent
dedent|''
name|'def'
name|'test_instance_group_get_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'nonexistent'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_delete_nonexistent
dedent|''
name|'def'
name|'test_instance_group_delete_nonexistent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'nonexistent'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_get_all
dedent|''
name|'def'
name|'test_instance_group_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'groups'
op|')'
op|')'
newline|'\n'
name|'value'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result1'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'value'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'groups'
op|')'
op|')'
newline|'\n'
name|'value'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result2'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'value'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'results'
op|'='
op|'['
name|'result1'
op|','
name|'result2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
name|'groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_get_all_by_project_id
dedent|''
name|'def'
name|'test_instance_group_get_all_by_project_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all_by_project_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'invalid_project_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'groups'
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result1'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all_by_project_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'groups'
op|')'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'new_project_id'"
newline|'\n'
name|'result2'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'results'
op|'='
op|'['
name|'result1'
op|','
name|'result2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
name|'groups'
op|')'
newline|'\n'
name|'projects'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake_project'"
op|','
string|"'value'"
op|':'
op|'['
name|'result1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'new_project_id'"
op|','
string|"'value'"
op|':'
op|'['
name|'result2'
op|']'
op|'}'
op|']'
newline|'\n'
name|'for'
name|'project'
name|'in'
name|'projects'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'='
name|'db'
op|'.'
name|'instance_group_get_all_by_project_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'project'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'project'
op|'['
string|"'value'"
op|']'
op|','
name|'groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_update
dedent|''
dedent|''
name|'def'
name|'test_instance_group_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'uuid'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'result'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'name'"
op|']'
op|'='
string|"'new_fake_name'"
newline|'\n'
name|'db'
op|'.'
name|'instance_group_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'name'"
op|']'
op|','
string|"'new_fake_name'"
op|')'
newline|'\n'
comment|'# update update members'
nl|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'members'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'values'
op|'['
string|"'members'"
op|']'
op|'='
name|'members'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'result'
op|'['
string|"'members'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
comment|'# update update policies'
nl|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'policies'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|']'
newline|'\n'
name|'values'
op|'['
string|"'policies'"
op|']'
op|'='
name|'policies'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'values'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'instance_group_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'result'
op|'['
string|"'policies'"
op|']'
op|','
name|'policies'
op|')'
newline|'\n'
comment|'# test invalid ID'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_update'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'invalid_id'"
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_get_by_instance
dedent|''
name|'def'
name|'test_instance_group_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'group1'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'members'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group1'
op|'.'
name|'uuid'
op|','
name|'members'
op|')'
newline|'\n'
nl|'\n'
name|'group2'
op|'='
name|'db'
op|'.'
name|'instance_group_get_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_id1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group2'
op|'.'
name|'uuid'
op|','
name|'group1'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceGroupMembersDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceGroupMembersDBApiTestCase'
op|'('
name|'InstanceGroupDBApiTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_instance_group_members_on_create
indent|'    '
name|'def'
name|'test_instance_group_members_on_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'members'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|','
nl|'\n'
name|'members'
op|'='
name|'members'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'result'
op|'['
string|"'members'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_members_add
dedent|''
name|'def'
name|'test_instance_group_members_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'members'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'members2'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'members2'
op|')'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'members'
op|','
name|'members2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_members_update
dedent|''
name|'def'
name|'test_instance_group_members_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'members2'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'members2'
op|')'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'members'
op|','
name|'members2'
op|')'
newline|'\n'
comment|'# check add with existing keys'
nl|'\n'
name|'members3'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|','
string|"'instance_id3'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'members3'
op|')'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'members'
op|','
name|'members3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_members_delete
dedent|''
name|'def'
name|'test_instance_group_members_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'members3'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|','
string|"'instance_id3'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'members3'
op|')'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'members'
op|','
name|'members3'
op|')'
newline|'\n'
name|'for'
name|'instance_id'
name|'in'
name|'members3'
op|'['
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_group_member_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'members3'
op|'.'
name|'remove'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'members'
op|'='
name|'db'
op|'.'
name|'instance_group_members_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'members'
op|','
name|'members3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_members_invalid_ids
dedent|''
dedent|''
name|'def'
name|'test_instance_group_members_invalid_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_members_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_member_delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'invalidid'"
op|','
string|"'instance_id1'"
op|')'
newline|'\n'
name|'members'
op|'='
op|'['
string|"'instance_id1'"
op|','
string|"'instance_id2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_members_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupMemberNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_member_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
string|"'invalid_id'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceGroupPoliciesDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceGroupPoliciesDBApiTestCase'
op|'('
name|'InstanceGroupDBApiTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_instance_group_policies_on_create
indent|'    '
name|'def'
name|'test_instance_group_policies_on_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'policies'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|','
nl|'\n'
name|'policies'
op|'='
name|'policies'
op|')'
newline|'\n'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'result'
op|','
name|'values'
op|','
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'result'
op|'['
string|"'policies'"
op|']'
op|','
name|'policies'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_policies_add
dedent|''
name|'def'
name|'test_instance_group_policies_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'policies2'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_policies_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policies2'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'policies'
op|','
name|'policies2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_policies_update
dedent|''
name|'def'
name|'test_instance_group_policies_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'policies2'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_policies_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policies2'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'policies'
op|','
name|'policies2'
op|')'
newline|'\n'
name|'policies3'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|','
string|"'policy3'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_policies_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policies3'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'policies'
op|','
name|'policies3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_policies_delete
dedent|''
name|'def'
name|'test_instance_group_policies_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'fake_id'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'policies3'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|','
string|"'policy3'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_policies_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policies3'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'policies'
op|','
name|'policies3'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'policies3'
op|'['
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_group_policy_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policy'
op|')'
newline|'\n'
name|'policies3'
op|'.'
name|'remove'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'db'
op|'.'
name|'instance_group_policies_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfPrimitivesAsSets'
op|'('
name|'policies'
op|','
name|'policies3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_group_policies_invalid_ids
dedent|''
dedent|''
name|'def'
name|'test_instance_group_policies_invalid_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
name|'self'
op|'.'
name|'_get_default_values'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_instance_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'id'
op|'='
name|'result'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_policies_get'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_policy_delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'invalidid'"
op|','
string|"'policy1'"
op|')'
newline|'\n'
name|'policies'
op|'='
op|'['
string|"'policy1'"
op|','
string|"'policy2'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_group_policies_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
name|'policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceGroupPolicyNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_group_policy_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|','
string|"'invalid_policy'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PciDeviceDBApiTestCase
dedent|''
dedent|''
name|'class'
name|'PciDeviceDBApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'ModelsObjectComparatorMixin'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PciDeviceDBApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake_user'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake_project'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ignored_keys'
op|'='
op|'['
string|"'id'"
op|','
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'created_at'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_fake_pci_devs
dedent|''
name|'def'
name|'_get_fake_pci_devs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'3353'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:0f:08.7'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'1520'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'dev_type'"
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|"'dev_id'"
op|':'
string|"'pci_0000:0f:08.7'"
op|','
nl|'\n'
string|"'extra_info'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-000000000010'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|','
op|'{'
string|"'id'"
op|':'
number|'3356'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:0f:03.7'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8083'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'1523'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'dev_type'"
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|"'dev_id'"
op|':'
string|"'pci_0000:0f:08.7'"
op|','
nl|'\n'
string|"'extra_info'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-000000000010'"
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_fake_pci_devs
dedent|''
name|'def'
name|'_create_fake_pci_devs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v2'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v2'
op|'['
string|"'address'"
op|']'
op|','
name|'v2'
op|')'
newline|'\n'
name|'return'
op|'('
name|'v1'
op|','
name|'v2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_addr
dedent|''
name|'def'
name|'test_pci_device_get_by_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'pci_device_get_by_addr'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|','
nl|'\n'
string|"'0000:0f:08.7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'v1'
op|','
name|'result'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_addr_not_found
dedent|''
name|'def'
name|'test_pci_device_get_by_addr_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_get_by_addr'
op|','
name|'self'
op|'.'
name|'admin_context'
op|','
nl|'\n'
number|'1'
op|','
string|"'0000:0f:08:09'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_addr_low_priv
dedent|''
name|'def'
name|'test_pci_device_get_by_addr_low_priv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_get_by_addr'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
string|"'0000:0f:08.7'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_id
dedent|''
name|'def'
name|'test_pci_device_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'pci_device_get_by_id'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'3353'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'v1'
op|','
name|'result'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_id_not_found
dedent|''
name|'def'
name|'test_pci_device_get_by_id_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceNotFoundById'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_get_by_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
number|'3354'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_id_low_priv
dedent|''
name|'def'
name|'test_pci_device_get_by_id_low_priv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_get_by_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
number|'3553'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_all_by_node
dedent|''
name|'def'
name|'test_pci_device_get_all_by_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v1'
op|','
name|'v2'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_all_by_node_empty
dedent|''
name|'def'
name|'test_pci_device_get_all_by_node_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'9'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_all_by_node_low_priv
dedent|''
name|'def'
name|'test_pci_device_get_all_by_node_low_priv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_instance_uuid
dedent|''
name|'def'
name|'test_pci_device_get_by_instance_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'v1'
op|'['
string|"'status'"
op|']'
op|'='
string|"'allocated'"
newline|'\n'
name|'v2'
op|'['
string|"'status'"
op|']'
op|'='
string|"'allocated'"
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v2'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v2'
op|'['
string|"'address'"
op|']'
op|','
name|'v2'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'00000000-0000-0000-0000-000000000010'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v1'
op|','
name|'v2'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_get_by_instance_uuid_check_status
dedent|''
name|'def'
name|'test_pci_device_get_by_instance_uuid_check_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'v1'
op|'['
string|"'status'"
op|']'
op|'='
string|"'allocated'"
newline|'\n'
name|'v2'
op|'['
string|"'status'"
op|']'
op|'='
string|"'claimed'"
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v2'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v2'
op|'['
string|"'address'"
op|']'
op|','
name|'v2'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'00000000-0000-0000-0000-000000000010'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v1'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_update
dedent|''
name|'def'
name|'test_pci_device_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'v1'
op|'['
string|"'status'"
op|']'
op|'='
string|"'allocated'"
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'pci_device_get_by_addr'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|','
string|"'0000:0f:08.7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'v1'
op|','
name|'result'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
name|'v1'
op|'['
string|"'status'"
op|']'
op|'='
string|"'claimed'"
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'pci_device_get_by_addr'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|','
string|"'0000:0f:08.7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualObjects'
op|'('
name|'v1'
op|','
name|'result'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_update_low_priv
dedent|''
name|'def'
name|'test_pci_device_update_low_priv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_destroy
dedent|''
name|'def'
name|'test_pci_device_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_create_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v1'
op|','
name|'v2'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_destroy'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v2'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_destroy_exception
dedent|''
name|'def'
name|'test_pci_device_destroy_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|','
name|'v2'
op|'='
name|'self'
op|'.'
name|'_get_fake_pci_devs'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
name|'v1'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v1'
op|'['
string|"'address'"
op|']'
op|','
name|'v1'
op|')'
newline|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'pci_device_get_all_by_node'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualListsOfObjects'
op|'('
name|'results'
op|','
op|'['
name|'v1'
op|']'
op|','
name|'self'
op|'.'
name|'ignored_keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'pci_device_destroy'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
nl|'\n'
name|'v2'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'v2'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RetryOnDeadlockTestCase
dedent|''
dedent|''
name|'class'
name|'RetryOnDeadlockTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_without_deadlock
indent|'    '
name|'def'
name|'test_without_deadlock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'sqlalchemy_api'
op|'.'
name|'_retry_on_deadlock'
newline|'\n'
DECL|function|call_api
name|'def'
name|'call_api'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'call_api'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_raise_deadlock
dedent|''
name|'def'
name|'test_raise_deadlock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'attempts'
op|'='
number|'2'
newline|'\n'
nl|'\n'
op|'@'
name|'sqlalchemy_api'
op|'.'
name|'_retry_on_deadlock'
newline|'\n'
DECL|function|call_api
name|'def'
name|'call_api'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'self'
op|'.'
name|'attempts'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attempts'
op|'='
name|'self'
op|'.'
name|'attempts'
op|'-'
number|'1'
newline|'\n'
name|'raise'
name|'db_exc'
op|'.'
name|'DBDeadlock'
op|'('
string|'"fake exception"'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'call_api'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSqlalchemyTypesRepr
dedent|''
dedent|''
name|'class'
name|'TestSqlalchemyTypesRepr'
op|'('
name|'test_base'
op|'.'
name|'DbTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSqlalchemyTypesRepr'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'self'
op|'.'
name|'engine'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'table'
op|'='
name|'Table'
op|'('
nl|'\n'
string|"'cidr_tbl'"
op|','
nl|'\n'
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'addr'"
op|','
name|'col_types'
op|'.'
name|'CIDR'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'meta'
op|'.'
name|'drop_all'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cidr_repr
dedent|''
name|'def'
name|'test_cidr_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addrs'
op|'='
op|'['
op|'('
string|"'192.168.3.0/24'"
op|','
string|"'192.168.3.0/24'"
op|')'
op|','
nl|'\n'
op|'('
string|"'2001:db8::/64'"
op|','
string|"'2001:db8::/64'"
op|')'
op|','
nl|'\n'
op|'('
string|"'192.168.3.0'"
op|','
string|"'192.168.3.0/32'"
op|')'
op|','
nl|'\n'
op|'('
string|"'2001:db8::'"
op|','
string|"'2001:db8::/128'"
op|')'
op|','
nl|'\n'
op|'('
name|'None'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'engine'
op|'.'
name|'begin'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'addrs'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
name|'self'
op|'.'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
op|'{'
string|"'addr'"
op|':'
name|'i'
op|'['
number|'0'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'query'
op|'='
name|'self'
op|'.'
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'order_by'
op|'('
name|'self'
op|'.'
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query'
op|')'
newline|'\n'
name|'for'
name|'idx'
op|','
name|'row'
name|'in'
name|'enumerate'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addrs'
op|'['
name|'idx'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'row'
op|'.'
name|'addr'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestMySQLSqlalchemyTypesRepr'
op|'('
name|'TestSqlalchemyTypesRepr'
op|','
nl|'\n'
DECL|class|TestMySQLSqlalchemyTypesRepr
name|'test_base'
op|'.'
name|'MySQLOpportunisticTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestPostgreSQLSqlalchemyTypesRepr'
op|'('
name|'TestSqlalchemyTypesRepr'
op|','
nl|'\n'
DECL|class|TestPostgreSQLSqlalchemyTypesRepr
name|'test_base'
op|'.'
name|'PostgreSQLOpportunisticTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDBInstanceTags
dedent|''
name|'class'
name|'TestDBInstanceTags'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|sample_data
indent|'    '
name|'sample_data'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'example.com'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'h1'"
op|','
nl|'\n'
string|"'node'"
op|':'
string|"'n1'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'mkey1'"
op|':'
string|"'mval1'"
op|','
string|"'mkey2'"
op|':'
string|"'mval2'"
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'smkey1'"
op|':'
string|"'smval1'"
op|','
string|"'smkey2'"
op|':'
string|"'smval2'"
op|'}'
op|','
nl|'\n'
string|"'info_cache'"
op|':'
op|'{'
string|"'ckey'"
op|':'
string|"'cvalue'"
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestDBInstanceTags'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'user1'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'project1'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'sample_data'
op|')'
newline|'\n'
name|'return'
name|'inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_tags_from_resp
dedent|''
name|'def'
name|'_get_tags_from_resp'
op|'('
name|'self'
op|','
name|'tag_refs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|'('
name|'t'
op|'.'
name|'resource_id'
op|','
name|'t'
op|'.'
name|'tag'
op|')'
name|'for'
name|'t'
name|'in'
name|'tag_refs'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_add
dedent|''
name|'def'
name|'test_instance_tag_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tag'
op|'='
string|"'tag'"
newline|'\n'
name|'tag_ref'
op|'='
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuid'
op|','
name|'tag_ref'
op|'.'
name|'resource_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tag'
op|','
name|'tag_ref'
op|'.'
name|'tag'
op|')'
newline|'\n'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the tag for the instance was added'
nl|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'uuid'
op|','
name|'tag'
op|')'
op|']'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_add_duplication
dedent|''
name|'def'
name|'test_instance_tag_add_duplication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'tag'
op|'='
string|"'tag'"
newline|'\n'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the only one tag for the instance was added'
nl|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'uuid'
op|','
name|'tag'
op|')'
op|']'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_set
dedent|''
name|'def'
name|'test_instance_tag_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tag1'
op|'='
string|"'tag1'"
newline|'\n'
name|'tag2'
op|'='
string|"'tag2'"
newline|'\n'
name|'tag3'
op|'='
string|"'tag3'"
newline|'\n'
name|'tag4'
op|'='
string|"'tag4'"
newline|'\n'
nl|'\n'
comment|'# Set tags to the instance'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
op|'['
name|'tag1'
op|','
name|'tag2'
op|']'
op|')'
newline|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the instance were set'
nl|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid'
op|','
name|'tag1'
op|')'
op|','
op|'('
name|'uuid'
op|','
name|'tag2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
comment|'# Set new tags to the instance'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_set'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
op|'['
name|'tag3'
op|','
name|'tag4'
op|','
name|'tag2'
op|']'
op|')'
newline|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the instance were replaced'
nl|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid'
op|','
name|'tag3'
op|')'
op|','
op|'('
name|'uuid'
op|','
name|'tag4'
op|')'
op|','
op|'('
name|'uuid'
op|','
name|'tag2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
name|'expected'
op|')'
op|','
name|'set'
op|'('
name|'tags'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_get_by_instance_uuid
dedent|''
name|'def'
name|'test_instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid1'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tag1'
op|'='
string|"'tag1'"
newline|'\n'
name|'tag2'
op|'='
string|"'tag2'"
newline|'\n'
name|'tag3'
op|'='
string|"'tag3'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid1'
op|','
name|'tag1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid2'
op|','
name|'tag1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid2'
op|','
name|'tag2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid2'
op|','
name|'tag3'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the first instance'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid1'
op|','
name|'tag1'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the second instance'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid2'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid2'
op|','
name|'tag1'
op|')'
op|','
op|'('
name|'uuid2'
op|','
name|'tag2'
op|')'
op|','
op|'('
name|'uuid2'
op|','
name|'tag3'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_get_by_instance_uuid_no_tags
dedent|''
name|'def'
name|'test_instance_tag_get_by_instance_uuid_no_tags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_delete
dedent|''
name|'def'
name|'test_instance_tag_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'tag1'
op|'='
string|"'tag1'"
newline|'\n'
name|'tag2'
op|'='
string|"'tag2'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag2'
op|')'
newline|'\n'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid'
op|','
name|'tag1'
op|')'
op|','
op|'('
name|'uuid'
op|','
name|'tag2'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the instance were added'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag1'
op|')'
newline|'\n'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid'
op|','
name|'tag2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_delete_non_existent
dedent|''
name|'def'
name|'test_instance_tag_delete_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceTagNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
string|"'tag'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_delete_all
dedent|''
name|'def'
name|'test_instance_tag_delete_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'tag1'
op|'='
string|"'tag1'"
newline|'\n'
name|'tag2'
op|'='
string|"'tag2'"
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_tag_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'tag2'
op|')'
newline|'\n'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'uuid'
op|','
name|'tag1'
op|')'
op|','
op|'('
name|'uuid'
op|','
name|'tag2'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# Check the tags for the instance were added'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_delete_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'tag_refs'
op|'='
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'tags'
op|'='
name|'self'
op|'.'
name|'_get_tags_from_resp'
op|'('
name|'tag_refs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'tags'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_add_to_non_existing_instance
dedent|''
name|'def'
name|'test_instance_tag_add_to_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_tag_add'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake_uuid'"
op|','
string|"'tag'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_set_to_non_existing_instance
dedent|''
name|'def'
name|'test_instance_tag_set_to_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_tag_set'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake_uuid'"
op|','
op|'['
string|"'tag1'"
op|','
string|"'tag2'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_get_from_non_existing_instance
dedent|''
name|'def'
name|'test_instance_tag_get_from_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_get_by_instance_uuid'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_delete_from_non_existing_instance
dedent|''
name|'def'
name|'test_instance_tag_delete_from_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'db'
op|'.'
name|'instance_tag_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake_uuid'"
op|','
string|"'tag'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_tag_delete_all_from_non_existing_instance
dedent|''
name|'def'
name|'test_instance_tag_delete_all_from_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_tag_delete_all'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake_uuid'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
