begin_unit
comment|'# Copyright 2010-2011 OpenStack Foundation'
nl|'\n'
comment|'# Copyright 2012-2013 IBM Corp.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTests for database migrations.\nThere are "opportunistic" tests which allows testing against all 3 databases\n(sqlite in memory, mysql, pg) in a properly configured unit test environment.\n\nFor the opportunistic testing you need to set up db\'s named \'openstack_citest\'\nwith user \'openstack_citest\' and password \'openstack_citest\' on localhost. The\ntest will then use that db and u/p combo to run the tests.\n\nFor postgres on Ubuntu this can be done with the following commands::\n\n| sudo -u postgres psql\n| postgres=# create user openstack_citest with createdb login password\n|       \'openstack_citest\';\n| postgres=# create database openstack_citest with owner openstack_citest;\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'glob'
newline|'\n'
comment|'# NOTE(dhellmann): Use stdlib logging instead of oslo.log because we'
nl|'\n'
comment|'# need to call methods on the logger that are not exposed through the'
nl|'\n'
comment|'# adapter provided by oslo.log.'
nl|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'migrate'
name|'import'
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'migrate'
op|'.'
name|'versioning'
name|'import'
name|'repository'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'test_migrations'
newline|'\n'
name|'from'
name|'oslo_db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'oslodbutils'
newline|'\n'
name|'import'
name|'sqlalchemy'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'engine'
name|'import'
name|'reflection'
newline|'\n'
name|'import'
name|'sqlalchemy'
op|'.'
name|'exc'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'null'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'migration'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'migrate_repo'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'migration'
name|'as'
name|'sa_migration'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'db_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fixtures'
name|'as'
name|'nova_fixtures'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
name|'class'
name|'NovaMigrationsCheckers'
op|'('
name|'test_migrations'
op|'.'
name|'ModelsMigrationsSync'
op|','
nl|'\n'
DECL|class|NovaMigrationsCheckers
name|'test_migrations'
op|'.'
name|'WalkVersionsMixin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test sqlalchemy-migrate migrations."""'
newline|'\n'
nl|'\n'
DECL|variable|TIMEOUT_SCALING_FACTOR
name|'TIMEOUT_SCALING_FACTOR'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|snake_walk
name|'snake_walk'
op|'='
name|'True'
newline|'\n'
DECL|variable|downgrade
name|'downgrade'
op|'='
name|'True'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|INIT_VERSION
name|'def'
name|'INIT_VERSION'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'migration'
op|'.'
name|'db_initial_version'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|REPOSITORY
name|'def'
name|'REPOSITORY'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'repository'
op|'.'
name|'Repository'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'migrate_repo'
op|'.'
name|'__file__'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|migration_api
name|'def'
name|'migration_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sa_migration'
op|'.'
name|'versioning_api'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|migrate_engine
name|'def'
name|'migrate_engine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'engine'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NovaMigrationsCheckers'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(viktors): We should reduce log output because it causes issues,'
nl|'\n'
comment|'#                when we run tests with testr'
nl|'\n'
name|'migrate_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'migrate'"
op|')'
newline|'\n'
name|'old_level'
op|'='
name|'migrate_log'
op|'.'
name|'level'
newline|'\n'
name|'migrate_log'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'WARN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'migrate_log'
op|'.'
name|'setLevel'
op|','
name|'old_level'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(rpodolyaka): we need to repeat the functionality of the base'
nl|'\n'
comment|'# test case a bit here as this gets overriden by oslotest base test'
nl|'\n'
comment|'# case and nova base test case cleanup must be the last one (as it'
nl|'\n'
comment|'# deletes attributes of test case instances)'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'Timeout'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'OS_TEST_TIMEOUT'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TIMEOUT_SCALING_FACTOR'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertColumnExists
dedent|''
name|'def'
name|'assertColumnExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table_name'
op|','
name|'column'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'oslodbutils'
op|'.'
name|'column_exists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'column'
op|')'
op|','
nl|'\n'
string|"'Column %s.%s does not exist'"
op|'%'
op|'('
name|'table_name'
op|','
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertColumnNotExists
dedent|''
name|'def'
name|'assertColumnNotExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table_name'
op|','
name|'column'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'oslodbutils'
op|'.'
name|'column_exists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'column'
op|')'
op|','
nl|'\n'
string|"'Column %s.%s should not exist'"
op|'%'
op|'('
name|'table_name'
op|','
name|'column'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertTableNotExists
dedent|''
name|'def'
name|'assertTableNotExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'oslodbutils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIndexExists
dedent|''
name|'def'
name|'assertIndexExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table_name'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'oslodbutils'
op|'.'
name|'index_exists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'index'
op|')'
op|','
nl|'\n'
string|"'Index %s on table %s does not exist'"
op|'%'
nl|'\n'
op|'('
name|'index'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIndexNotExists
dedent|''
name|'def'
name|'assertIndexNotExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table_name'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'oslodbutils'
op|'.'
name|'index_exists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'index'
op|')'
op|','
nl|'\n'
string|"'Index %s on table %s should not exist'"
op|'%'
nl|'\n'
op|'('
name|'index'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIndexMembers
dedent|''
name|'def'
name|'assertIndexMembers'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|','
name|'index'
op|','
name|'members'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(johannes): Order of columns can matter. Most SQL databases'
nl|'\n'
comment|"# can use the leading columns for optimizing queries that don't"
nl|'\n'
comment|'# include all of the covered columns.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexExists'
op|'('
name|'engine'
op|','
name|'table'
op|','
name|'index'
op|')'
newline|'\n'
nl|'\n'
name|'t'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
name|'index_columns'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'idx'
name|'in'
name|'t'
op|'.'
name|'indexes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'idx'
op|'.'
name|'name'
op|'=='
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'index_columns'
op|'='
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'idx'
op|'.'
name|'columns'
op|']'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'members'
op|','
name|'index_columns'
op|')'
newline|'\n'
nl|'\n'
comment|'# Implementations for ModelsMigrationsSync'
nl|'\n'
DECL|member|db_sync
dedent|''
name|'def'
name|'db_sync'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sa_migration'
op|','
string|"'get_engine'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sa_migration'
op|'.'
name|'db_sync'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_engine
dedent|''
dedent|''
name|'def'
name|'get_engine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'migrate_engine'
newline|'\n'
nl|'\n'
DECL|member|get_metadata
dedent|''
name|'def'
name|'get_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'models'
op|'.'
name|'BASE'
op|'.'
name|'metadata'
newline|'\n'
nl|'\n'
DECL|member|include_object
dedent|''
name|'def'
name|'include_object'
op|'('
name|'self'
op|','
name|'object_'
op|','
name|'name'
op|','
name|'type_'
op|','
name|'reflected'
op|','
name|'compare_to'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'type_'
op|'=='
string|"'table'"
op|':'
newline|'\n'
comment|'# migrate_version is a sqlalchemy-migrate control table and'
nl|'\n'
comment|"# isn't included in the model. shadow_* are generated from"
nl|'\n'
comment|"# the model and have their own tests to ensure they don't"
nl|'\n'
comment|'# drift.'
nl|'\n'
indent|'            '
name|'if'
name|'name'
op|'=='
string|"'migrate_version'"
name|'or'
name|'name'
op|'.'
name|'startswith'
op|'('
string|"'shadow_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_skippable_migrations
dedent|''
name|'def'
name|'_skippable_migrations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'special'
op|'='
op|'['
nl|'\n'
number|'216'
op|','
comment|'# Havana'
nl|'\n'
number|'272'
op|','
comment|'# NOOP migration due to revert'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'havana_placeholders'
op|'='
name|'range'
op|'('
number|'217'
op|','
number|'227'
op|')'
newline|'\n'
name|'icehouse_placeholders'
op|'='
name|'range'
op|'('
number|'235'
op|','
number|'244'
op|')'
newline|'\n'
name|'juno_placeholders'
op|'='
name|'range'
op|'('
number|'255'
op|','
number|'265'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'special'
op|'+'
nl|'\n'
name|'havana_placeholders'
op|'+'
nl|'\n'
name|'icehouse_placeholders'
op|'+'
nl|'\n'
name|'juno_placeholders'
op|')'
newline|'\n'
nl|'\n'
DECL|member|migrate_up
dedent|''
name|'def'
name|'migrate_up'
op|'('
name|'self'
op|','
name|'version'
op|','
name|'with_data'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'with_data'
op|':'
newline|'\n'
indent|'            '
name|'check'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|'"_check_%03d"'
op|'%'
name|'version'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'version'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_skippable_migrations'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'check'
op|','
nl|'\n'
op|'('
string|"'DB Migration %i does not have a '"
nl|'\n'
string|"'test. Please add one!'"
op|')'
op|'%'
name|'version'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'super'
op|'('
name|'NovaMigrationsCheckers'
op|','
name|'self'
op|')'
op|'.'
name|'migrate_up'
op|'('
name|'version'
op|','
name|'with_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_walk_versions
dedent|''
name|'def'
name|'test_walk_versions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'walk_versions'
op|'('
name|'self'
op|'.'
name|'snake_walk'
op|','
name|'self'
op|'.'
name|'downgrade'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_227
dedent|''
name|'def'
name|'_check_227'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Insert fake_quotas with the longest resource name.'
nl|'\n'
name|'fake_quotas'
op|'='
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake_user'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'injected_file_content_bytes'"
op|','
nl|'\n'
string|"'hard_limit'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check we can get the longest resource name.'
nl|'\n'
name|'quota'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'5'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'resource'"
op|']'
op|','
string|"'injected_file_content_bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_228
dedent|''
name|'def'
name|'_check_228'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'metrics'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'metrics'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_228
dedent|''
name|'def'
name|'_post_downgrade_228'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'metrics'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_229
dedent|''
name|'def'
name|'_check_229'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'extra_resources'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'extra_resources'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_229
dedent|''
name|'def'
name|'_post_downgrade_229'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'extra_resources'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_230
dedent|''
name|'def'
name|'_check_230'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'table_name'
name|'in'
op|'['
string|"'instance_actions_events'"
op|','
nl|'\n'
string|"'shadow_instance_actions_events'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
string|"'details'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'action_events'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'instance_actions_events'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'action_events'
op|'.'
name|'c'
op|'.'
name|'host'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'action_events'
op|'.'
name|'c'
op|'.'
name|'details'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_230
dedent|''
name|'def'
name|'_post_downgrade_230'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'table_name'
name|'in'
op|'['
string|"'instance_actions_events'"
op|','
nl|'\n'
string|"'shadow_instance_actions_events'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
string|"'details'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_231
dedent|''
dedent|''
name|'def'
name|'_check_231'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
string|"'ephemeral_key_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instances'
op|'.'
name|'c'
op|'.'
name|'ephemeral_key_uuid'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_231
dedent|''
name|'def'
name|'_post_downgrade_231'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
string|"'ephemeral_key_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_232
dedent|''
name|'def'
name|'_check_232'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_names'
op|'='
op|'['
string|"'compute_node_stats'"
op|','
string|"'compute_nodes'"
op|','
nl|'\n'
string|"'instance_actions'"
op|','
string|"'instance_actions_events'"
op|','
nl|'\n'
string|"'instance_faults'"
op|','
string|"'migrations'"
op|']'
newline|'\n'
name|'for'
name|'table_name'
name|'in'
name|'table_names'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'dump_'"
op|'+'
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_233
dedent|''
dedent|''
name|'def'
name|'_check_233'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'stats'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'stats'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'oslodbutils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
string|"'compute_node_stats'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_233
dedent|''
name|'def'
name|'_post_downgrade_233'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'stats'"
op|')'
newline|'\n'
nl|'\n'
comment|'# confirm compute_node_stats exists'
nl|'\n'
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_node_stats'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_234
dedent|''
name|'def'
name|'_check_234'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|','
nl|'\n'
string|"'reservations_deleted_expire_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'expire'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_244
dedent|''
name|'def'
name|'_check_244'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'64'
op|','
name|'volume_usage_cache'
op|'.'
name|'c'
op|'.'
name|'user_id'
op|'.'
name|'type'
op|'.'
name|'length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_244
dedent|''
name|'def'
name|'_post_downgrade_244'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'36'
op|','
name|'volume_usage_cache'
op|'.'
name|'c'
op|'.'
name|'user_id'
op|'.'
name|'type'
op|'.'
name|'length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_245
dedent|''
name|'def'
name|'_pre_upgrade_245'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# create a fake network'
nl|'\n'
indent|'        '
name|'networks'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
newline|'\n'
name|'fake_network'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'networks'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_network'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_245
dedent|''
name|'def'
name|'_check_245'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'networks'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
newline|'\n'
name|'network'
op|'='
name|'networks'
op|'.'
name|'select'
op|'('
name|'networks'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|'# mtu should default to None'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'network'
op|'.'
name|'mtu'
op|')'
newline|'\n'
comment|'# dhcp_server should default to None'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'network'
op|'.'
name|'dhcp_server'
op|')'
newline|'\n'
comment|'# enable dhcp should default to true'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'network'
op|'.'
name|'enable_dhcp'
op|')'
newline|'\n'
comment|'# share address should default to false'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'network'
op|'.'
name|'share_address'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_245
dedent|''
name|'def'
name|'_post_downgrade_245'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'networks'"
op|','
string|"'mtu'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'networks'"
op|','
string|"'dhcp_server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'networks'"
op|','
string|"'enable_dhcp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'networks'"
op|','
string|"'share_address'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_246
dedent|''
name|'def'
name|'_check_246'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'fk'
name|'for'
name|'fk'
name|'in'
name|'pci_devices'
op|'.'
name|'foreign_keys'
nl|'\n'
name|'if'
name|'fk'
op|'.'
name|'parent'
op|'.'
name|'name'
op|'=='
string|"'compute_node_id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_246
dedent|''
name|'def'
name|'_post_downgrade_246'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
op|'['
name|'fk'
name|'for'
name|'fk'
name|'in'
name|'pci_devices'
op|'.'
name|'foreign_keys'
nl|'\n'
name|'if'
name|'fk'
op|'.'
name|'parent'
op|'.'
name|'name'
op|'=='
string|"'compute_node_id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_247
dedent|''
name|'def'
name|'_check_247'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usages'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'resource'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'product_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'vendor_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'dev_type'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_247
dedent|''
name|'def'
name|'_post_downgrade_247'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usages'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'resource'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'product_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'vendor_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'dev_type'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_248
dedent|''
name|'def'
name|'_check_248'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|','
nl|'\n'
string|"'reservations_deleted_expire_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'expire'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_248
dedent|''
name|'def'
name|'_post_downgrade_248'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reservations'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|')'
newline|'\n'
name|'index_names'
op|'='
op|'['
name|'idx'
op|'.'
name|'name'
name|'for'
name|'idx'
name|'in'
name|'reservations'
op|'.'
name|'indexes'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'reservations_deleted_expire_idx'"
op|','
name|'index_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_249
dedent|''
name|'def'
name|'_check_249'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'# Assert that only one index exists that covers columns'
nl|'\n'
comment|'# instance_uuid and device_name'
nl|'\n'
indent|'        '
name|'bdm'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'bdm'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'instance_uuid'"
op|','
string|"'device_name'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_249
dedent|''
name|'def'
name|'_post_downgrade_249'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# The duplicate index is not created on downgrade, so this'
nl|'\n'
comment|'# asserts that only one index exists that covers columns'
nl|'\n'
comment|'# instance_uuid and device_name'
nl|'\n'
indent|'        '
name|'bdm'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'bdm'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'instance_uuid'"
op|','
string|"'device_name'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_250
dedent|''
name|'def'
name|'_check_250'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'instance_group_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_group_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_250
dedent|''
name|'def'
name|'_post_downgrade_250'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_group_metadata'"
op|')'
newline|'\n'
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_instance_group_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_251
dedent|''
name|'def'
name|'_check_251'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'numa_topology'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_compute_nodes'"
op|','
nl|'\n'
string|"'numa_topology'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'shadow_compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'shadow_compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'numa_topology'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_compute_nodes'
op|'.'
name|'c'
op|'.'
name|'numa_topology'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_251
dedent|''
name|'def'
name|'_post_downgrade_251'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'numa_topology'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_compute_nodes'"
op|','
nl|'\n'
string|"'numa_topology'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_252
dedent|''
name|'def'
name|'_check_252'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|')'
newline|'\n'
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
nl|'\n'
string|"'instance_extra_idx'"
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_252
dedent|''
name|'def'
name|'_post_downgrade_252'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_253
dedent|''
name|'def'
name|'_check_253'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'pci_requests'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
string|"'pci_requests'"
op|')'
newline|'\n'
name|'instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|')'
newline|'\n'
name|'shadow_instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'shadow_instance_extra'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance_extra'
op|'.'
name|'c'
op|'.'
name|'pci_requests'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_instance_extra'
op|'.'
name|'c'
op|'.'
name|'pci_requests'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_253
dedent|''
name|'def'
name|'_post_downgrade_253'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'pci_requests'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
nl|'\n'
string|"'pci_requests'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_254
dedent|''
name|'def'
name|'_check_254'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|','
string|"'request_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|','
string|"'request_id'"
op|')'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'shadow_pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'request_id'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_pci_devices'
op|'.'
name|'c'
op|'.'
name|'request_id'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_254
dedent|''
name|'def'
name|'_post_downgrade_254'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|','
string|"'request_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|','
string|"'request_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_265
dedent|''
name|'def'
name|'_check_265'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'# Assert that only one index exists that covers columns'
nl|'\n'
comment|'# host and deleted'
nl|'\n'
indent|'        '
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'instances'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'['
op|':'
number|'2'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'host'"
op|','
string|"'deleted'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
comment|'# and only one index covers host column'
nl|'\n'
name|'iscsi_targets'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'iscsi_targets'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'iscsi_targets'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'['
op|':'
number|'1'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'host'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_265
dedent|''
name|'def'
name|'_post_downgrade_265'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# The duplicated index is not created on downgrade, so this'
nl|'\n'
comment|'# asserts that only one index exists that covers columns'
nl|'\n'
comment|'# host and deleted'
nl|'\n'
indent|'        '
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'instances'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'['
op|':'
number|'2'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'host'"
op|','
string|"'deleted'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
comment|'# and only one index covers host column'
nl|'\n'
name|'iscsi_targets'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'iscsi_targets'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'iscsi_targets'
op|'.'
name|'indexes'
nl|'\n'
name|'if'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'i'
op|'.'
name|'columns'
op|']'
op|'['
op|':'
number|'1'
op|']'
op|'=='
nl|'\n'
op|'['
string|"'host'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_266
dedent|''
name|'def'
name|'_check_266'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'tags'"
op|','
string|"'resource_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'tags'"
op|','
string|"'tag'"
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'tags'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'resource_id'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'tag'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_266
dedent|''
name|'def'
name|'_post_downgrade_266'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTableNotExists'
op|'('
name|'engine'
op|','
string|"'tags'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_267
dedent|''
name|'def'
name|'_pre_upgrade_267'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Create a fixed_ips row with a null instance_uuid (if not already'
nl|'\n'
comment|"# there) to make sure that's not deleted."
nl|'\n'
indent|'        '
name|'fixed_ips'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|')'
newline|'\n'
name|'fake_fixed_ip'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'fixed_ips'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_fixed_ip'
op|')'
newline|'\n'
comment|'# Create an instance record with a valid (non-null) UUID so we make'
nl|'\n'
comment|"# sure we don't do something stupid and delete valid records."
nl|'\n'
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
string|"'fake-non-null-uuid'"
op|'}'
newline|'\n'
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
comment|'# Add a null instance_uuid entry for the volumes table'
nl|'\n'
comment|"# since it doesn't have a foreign key back to the instances table."
nl|'\n'
name|'volumes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volumes'"
op|')'
newline|'\n'
name|'fake_volume'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'9c3c317e-24db-4d57-9a6f-96e6d477c1da'"
op|'}'
newline|'\n'
name|'volumes'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_267
dedent|''
name|'def'
name|'_check_267'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'# Make sure the column is non-nullable and the UC exists.'
nl|'\n'
indent|'        '
name|'fixed_ips'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fixed_ips'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'fixed_ips'
op|'.'
name|'select'
op|'('
name|'fixed_ips'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fixed_ip'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
name|'inspector'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'inspector'
op|'.'
name|'get_unique_constraints'
op|'('
string|"'instances'"
op|')'
newline|'\n'
name|'constraint_names'
op|'='
op|'['
name|'constraint'
op|'['
string|"'name'"
op|']'
name|'for'
name|'constraint'
name|'in'
name|'constraints'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'uniq_instances0uuid'"
op|','
name|'constraint_names'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure the instances record with the valid uuid is still there.'
nl|'\n'
name|'instance'
op|'='
name|'instances'
op|'.'
name|'select'
op|'('
name|'instances'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the null entry in the volumes table is still there since'
nl|'\n'
comment|"# we skipped tables that don't have FK's back to the instances table."
nl|'\n'
name|'volumes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'fixed_ips'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'volumes'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
string|"'9c3c317e-24db-4d57-9a6f-96e6d477c1da'"
nl|'\n'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'volume'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_267
dedent|''
name|'def'
name|'_post_downgrade_267'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Make sure the UC is gone and the column is nullable again.'
nl|'\n'
indent|'        '
name|'instances'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
name|'inspector'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'inspector'
op|'.'
name|'get_unique_constraints'
op|'('
string|"'instances'"
op|')'
newline|'\n'
name|'constraint_names'
op|'='
op|'['
name|'constraint'
op|'['
string|"'name'"
op|']'
name|'for'
name|'constraint'
name|'in'
name|'constraints'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'uniq_instances0uuid'"
op|','
name|'constraint_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migration_267
dedent|''
name|'def'
name|'test_migration_267'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is separate from test_walk_versions so we can test the case'
nl|'\n'
comment|'# where there are non-null instance_uuid entries in the database which'
nl|'\n'
comment|'# cause the 267 migration to fail.'
nl|'\n'
indent|'        '
name|'engine'
op|'='
name|'self'
op|'.'
name|'migrate_engine'
newline|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'version_control'
op|'('
nl|'\n'
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
name|'self'
op|'.'
name|'INIT_VERSION'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'upgrade'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
number|'266'
op|')'
newline|'\n'
comment|'# Create a consoles record with a null instance_uuid so'
nl|'\n'
comment|'# we can test that the upgrade fails if that entry is found.'
nl|'\n'
comment|"# NOTE(mriedem): We use the consoles table since that's the only table"
nl|'\n'
comment|'# created in the 216 migration with a ForeignKey created on the'
nl|'\n'
comment|'# instance_uuid table for sqlite.'
nl|'\n'
name|'consoles'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'consoles'"
op|')'
newline|'\n'
name|'fake_console'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'consoles'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_console'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(mriedem): We handle the 267 migration where we expect to'
nl|'\n'
comment|'# hit a ValidationError on the consoles table to have'
nl|'\n'
comment|'# a null instance_uuid entry'
nl|'\n'
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'upgrade'
op|','
nl|'\n'
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
number|'267'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"There are 1 records in the "'
nl|'\n'
string|'"\'consoles\' table where the uuid or "'
nl|'\n'
string|'"instance_uuid column is NULL."'
op|','
nl|'\n'
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'detail'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Remove the consoles entry with the null instance_uuid column.'
nl|'\n'
name|'rows'
op|'='
name|'consoles'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'consoles'
op|'.'
name|'c'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'null'
op|'('
op|')'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'rowcount'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'rows'
op|')'
newline|'\n'
comment|'# Now run the 267 upgrade again.'
nl|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'upgrade'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
number|'267'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure the consoles entry with the null instance_uuid'
nl|'\n'
comment|'# was deleted.'
nl|'\n'
name|'console'
op|'='
name|'consoles'
op|'.'
name|'select'
op|'('
name|'consoles'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'console'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_268
dedent|''
name|'def'
name|'_check_268'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'# We can only assert that the col exists, not the unique constraint'
nl|'\n'
comment|'# as the engine is running sqlite'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_compute_nodes'"
op|','
string|"'host'"
op|')'
newline|'\n'
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'shadow_compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'host'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_compute_nodes'
op|'.'
name|'c'
op|'.'
name|'host'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_268
dedent|''
name|'def'
name|'_post_downgrade_268'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_compute_nodes'"
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_269
dedent|''
name|'def'
name|'_check_269'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|','
string|"'numa_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|','
string|"'numa_node'"
op|')'
newline|'\n'
name|'pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'shadow_pci_devices'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'numa_node'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Integer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pci_devices'
op|'.'
name|'c'
op|'.'
name|'numa_node'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_pci_devices'
op|'.'
name|'c'
op|'.'
name|'numa_node'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Integer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'shadow_pci_devices'
op|'.'
name|'c'
op|'.'
name|'numa_node'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_269
dedent|''
name|'def'
name|'_post_downgrade_269'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|','
string|"'numa_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_pci_devices'"
op|','
string|"'numa_node'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_270
dedent|''
name|'def'
name|'_check_270'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'flavor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
string|"'flavor'"
op|')'
newline|'\n'
nl|'\n'
name|'instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|')'
newline|'\n'
name|'shadow_instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance_extra'
op|'.'
name|'c'
op|'.'
name|'flavor'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_instance_extra'
op|'.'
name|'c'
op|'.'
name|'flavor'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_270
dedent|''
name|'def'
name|'_post_downgrade_270'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'flavor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
string|"'flavor'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_271
dedent|''
name|'def'
name|'_check_271'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|','
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|','
nl|'\n'
string|"'volume_id'"
op|','
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'dns_domains'"
op|','
nl|'\n'
string|"'dns_domains_project_id_idx'"
op|','
nl|'\n'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|','
nl|'\n'
string|"'network_id'"
op|','
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|','
nl|'\n'
string|"'fixed_ips_instance_uuid_fkey'"
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|','
nl|'\n'
string|"'fixed_ips_virtual_interface_id_fkey'"
op|','
nl|'\n'
op|'['
string|"'virtual_interface_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'floating_ips'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|','
op|'['
string|"'fixed_ip_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'iscsi_targets'"
op|','
nl|'\n'
string|"'iscsi_targets_volume_id_fkey'"
op|','
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
nl|'\n'
string|"'virtual_interfaces_network_id_idx'"
op|','
nl|'\n'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
nl|'\n'
string|"'virtual_interfaces_instance_uuid_fkey'"
op|','
nl|'\n'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Removed on MySQL, never existed on other databases'
nl|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'dns_domains'"
op|','
string|"'project_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
string|"'network_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_271
dedent|''
name|'def'
name|'_post_downgrade_271'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'dns_domains'"
op|','
nl|'\n'
string|"'dns_domains_project_id_idx'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
nl|'\n'
string|"'virtual_interfaces_network_id_idx'"
op|')'
newline|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'dns_domains'"
op|','
nl|'\n'
string|"'project_id'"
op|','
nl|'\n'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
nl|'\n'
string|"'network_id'"
op|','
nl|'\n'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
comment|'# Rest of indexes will still exist on MySQL'
nl|'\n'
name|'return'
newline|'\n'
nl|'\n'
comment|"# Never existed on non-MySQL databases, so shouldn't exist now"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'dns_domains'"
op|','
string|"'project_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|','
string|"'network_id'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'index_name'
name|'in'
op|'['
nl|'\n'
op|'('
string|"'block_device_mapping'"
op|','
string|"'snapshot_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping'"
op|','
string|"'volume_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'dns_domains'"
op|','
string|"'dns_domains_project_id_idx'"
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips'"
op|','
string|"'network_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips'"
op|','
string|"'fixed_ips_instance_uuid_fkey'"
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips'"
op|','
string|"'fixed_ips_virtual_interface_id_fkey'"
op|')'
op|','
nl|'\n'
op|'('
string|"'floating_ips'"
op|','
string|"'fixed_ip_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iscsi_targets'"
op|','
string|"'iscsi_targets_volume_id_fkey'"
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces'"
op|','
string|"'virtual_interfaces_network_id_idx'"
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces'"
op|','
nl|'\n'
string|"'virtual_interfaces_instance_uuid_fkey'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'index_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_273
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_273'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
comment|'# Drop a variety of unique constraints to ensure that the script'
nl|'\n'
comment|'# properly readds them back'
nl|'\n'
dedent|''
name|'for'
name|'table_name'
op|','
name|'constraint_name'
name|'in'
op|'['
nl|'\n'
op|'('
string|"'compute_nodes'"
op|','
string|"'uniq_compute_nodes0'"
nl|'\n'
string|"'host0hypervisor_hostname'"
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips'"
op|','
string|"'uniq_fixed_ips0address0deleted'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_info_caches'"
op|','
string|"'uniq_instance_info_caches0'"
nl|'\n'
string|"'instance_uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_type_projects'"
op|','
string|"'uniq_instance_type_projects0'"
nl|'\n'
string|"'instance_type_id0project_id0'"
nl|'\n'
string|"'deleted'"
op|')'
op|','
nl|'\n'
op|'('
string|"'pci_devices'"
op|','
string|"'uniq_pci_devices0compute_node_id0'"
nl|'\n'
string|"'address0deleted'"
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces'"
op|','
string|"'uniq_virtual_interfaces0'"
nl|'\n'
string|"'address0deleted'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'constraints'
op|'='
op|'['
name|'c'
name|'for'
name|'c'
name|'in'
name|'table'
op|'.'
name|'constraints'
nl|'\n'
name|'if'
name|'c'
op|'.'
name|'name'
op|'=='
name|'constraint_name'
op|']'
newline|'\n'
name|'for'
name|'cons'
name|'in'
name|'constraints'
op|':'
newline|'\n'
comment|'# Need to use sqlalchemy-migrate UniqueConstraint'
nl|'\n'
indent|'                '
name|'cons'
op|'='
name|'UniqueConstraint'
op|'('
op|'*'
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'cons'
op|'.'
name|'columns'
op|']'
op|','
nl|'\n'
name|'name'
op|'='
name|'cons'
op|'.'
name|'name'
op|','
nl|'\n'
name|'table'
op|'='
name|'table'
op|')'
newline|'\n'
name|'cons'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_273
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_273'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'src_table'
op|','
name|'src_column'
op|','
name|'dst_table'
op|','
name|'dst_column'
name|'in'
op|'['
nl|'\n'
op|'('
string|"'fixed_ips'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_info_caches'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_metadata'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_system_metadata'"
op|','
string|"'instance_uuid'"
op|','
nl|'\n'
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_type_projects'"
op|','
string|"'instance_type_id'"
op|','
nl|'\n'
string|"'instance_types'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iscsi_targets'"
op|','
string|"'volume_id'"
op|','
string|"'volumes'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'reservations'"
op|','
string|"'usage_id'"
op|','
string|"'quota_usages'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'security_group_instance_association'"
op|','
string|"'instance_uuid'"
op|','
nl|'\n'
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'security_group_instance_association'"
op|','
string|"'security_group_id'"
op|','
nl|'\n'
string|"'security_groups'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'compute_nodes'"
op|','
string|"'service_id'"
op|','
string|"'services'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_actions'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_faults'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
op|'('
string|"'migrations'"
op|','
string|"'instance_uuid'"
op|','
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'src_table'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'src_table'
op|')'
newline|'\n'
name|'fkeys'
op|'='
op|'{'
name|'fk'
op|'.'
name|'parent'
op|'.'
name|'name'
op|':'
name|'fk'
op|'.'
name|'column'
nl|'\n'
name|'for'
name|'fk'
name|'in'
name|'src_table'
op|'.'
name|'foreign_keys'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'src_column'
op|','
name|'fkeys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fkeys'
op|'['
name|'src_column'
op|']'
op|'.'
name|'table'
op|'.'
name|'name'
op|','
name|'dst_table'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fkeys'
op|'['
name|'src_column'
op|']'
op|'.'
name|'name'
op|','
name|'dst_column'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_273
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_273'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(johannes): No downgrade implemented, so nothing to check'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_check_274
dedent|''
name|'def'
name|'_check_274'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
nl|'\n'
string|"'instances_project_id_deleted_idx'"
op|','
nl|'\n'
op|'['
string|"'project_id'"
op|','
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
string|"'project_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_274
dedent|''
name|'def'
name|'_post_downgrade_274'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
nl|'\n'
string|"'project_id'"
op|','
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
nl|'\n'
string|"'instances_project_id_deleted_idx'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_275
dedent|''
name|'def'
name|'_pre_upgrade_275'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Create a keypair record so we can test that the upgrade will set'
nl|'\n'
comment|"# 'ssh' as default value in the new column for the previous keypair"
nl|'\n'
comment|'# entries.'
nl|'\n'
indent|'        '
name|'key_pairs'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|')'
newline|'\n'
name|'fake_keypair'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test-migr'"
op|'}'
newline|'\n'
name|'key_pairs'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_keypair'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_275
dedent|''
name|'def'
name|'_check_275'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|','
string|"'type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_key_pairs'"
op|','
string|"'type'"
op|')'
newline|'\n'
nl|'\n'
name|'key_pairs'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|')'
newline|'\n'
name|'shadow_key_pairs'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_key_pairs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'key_pairs'
op|'.'
name|'c'
op|'.'
name|'type'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_key_pairs'
op|'.'
name|'c'
op|'.'
name|'type'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
nl|'\n'
comment|"# Make sure the keypair entry will have the type 'ssh'"
nl|'\n'
name|'key_pairs'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|')'
newline|'\n'
name|'keypair'
op|'='
name|'key_pairs'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'key_pairs'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
string|"'test-migr'"
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ssh'"
op|','
name|'keypair'
op|'.'
name|'type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_275
dedent|''
name|'def'
name|'_post_downgrade_275'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|','
string|"'type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_key_pairs'"
op|','
string|"'type'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_276
dedent|''
name|'def'
name|'_check_276'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'vcpu_model'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
string|"'vcpu_model'"
op|')'
newline|'\n'
nl|'\n'
name|'instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|')'
newline|'\n'
name|'shadow_instance_extra'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
nl|'\n'
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance_extra'
op|'.'
name|'c'
op|'.'
name|'vcpu_model'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_instance_extra'
op|'.'
name|'c'
op|'.'
name|'vcpu_model'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_276
dedent|''
name|'def'
name|'_post_downgrade_276'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'instance_extra'"
op|','
string|"'vcpu_model'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instance_extra'"
op|','
nl|'\n'
string|"'vcpu_model'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_277
dedent|''
name|'def'
name|'_check_277'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|','
nl|'\n'
string|"'fixed_ips_deleted_allocated_updated_at_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'allocated'"
op|','
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_277
dedent|''
name|'def'
name|'_post_downgrade_277'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexNotExists'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|','
nl|'\n'
string|"'fixed_ips_deleted_allocated_updated_at_idx'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_278
dedent|''
name|'def'
name|'_check_278'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
op|'['
name|'fk'
name|'for'
name|'fk'
name|'in'
name|'compute_nodes'
op|'.'
name|'foreign_keys'
nl|'\n'
name|'if'
name|'fk'
op|'.'
name|'parent'
op|'.'
name|'name'
op|'=='
string|"'service_id'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'service_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_278
dedent|''
name|'def'
name|'_post_downgrade_278'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_nodes'
op|'='
name|'oslodbutils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'service_id_fks'
op|'='
op|'['
name|'fk'
name|'for'
name|'fk'
name|'in'
name|'compute_nodes'
op|'.'
name|'foreign_keys'
nl|'\n'
name|'if'
name|'fk'
op|'.'
name|'parent'
op|'.'
name|'name'
op|'=='
string|"'service_id'"
nl|'\n'
name|'and'
name|'fk'
op|'.'
name|'column'
op|'.'
name|'name'
op|'=='
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'service_id_fks'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'service_id'
op|'.'
name|'nullable'
op|')'
newline|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
comment|'# Only make sure that posgresql at least adds a name for the FK'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'service_id_fks'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
comment|"# Erm, SQLA<1.0 doesn't return FK names for sqlite so we need to"
nl|'\n'
comment|'# check only for other engines'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fk_compute_nodes_service_id'"
op|','
nl|'\n'
name|'service_id_fks'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_279
dedent|''
dedent|''
name|'def'
name|'_check_279'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inspector'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'inspector'
op|'.'
name|'get_unique_constraints'
op|'('
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'constraint_names'
op|'='
op|'['
name|'constraint'
op|'['
string|"'name'"
op|']'
name|'for'
name|'constraint'
name|'in'
name|'constraints'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'uniq_compute_nodes0host0hypervisor_hostname'"
op|','
nl|'\n'
name|'constraint_names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'uniq_compute_nodes0host0hypervisor_hostname0deleted'"
op|','
nl|'\n'
name|'constraint_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_279
dedent|''
name|'def'
name|'_post_downgrade_279'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inspector'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'inspector'
op|'.'
name|'get_unique_constraints'
op|'('
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'constraint_names'
op|'='
op|'['
name|'constraint'
op|'['
string|"'name'"
op|']'
name|'for'
name|'constraint'
name|'in'
name|'constraints'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'uniq_compute_nodes0host0hypervisor_hostname0deleted'"
op|','
nl|'\n'
name|'constraint_names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'uniq_compute_nodes0host0hypervisor_hostname'"
op|','
nl|'\n'
name|'constraint_names'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNovaMigrationsSQLite'
op|'('
name|'NovaMigrationsCheckers'
op|','
nl|'\n'
name|'test_base'
op|'.'
name|'DbTestCase'
op|','
nl|'\n'
DECL|class|TestNovaMigrationsSQLite
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestNovaMigrationsMySQL'
op|'('
name|'NovaMigrationsCheckers'
op|','
nl|'\n'
name|'test_base'
op|'.'
name|'MySQLOpportunisticTestCase'
op|','
nl|'\n'
DECL|class|TestNovaMigrationsMySQL
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_innodb_tables
indent|'    '
name|'def'
name|'test_innodb_tables'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sa_migration'
op|','
string|"'get_engine'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'migrate_engine'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sa_migration'
op|'.'
name|'db_sync'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'total'
op|'='
name|'self'
op|'.'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"SELECT count(*) "'
nl|'\n'
string|'"FROM information_schema.TABLES "'
nl|'\n'
string|'"WHERE TABLE_SCHEMA = \'%(database)s\'"'
op|'%'
nl|'\n'
op|'{'
string|"'database'"
op|':'
name|'self'
op|'.'
name|'migrate_engine'
op|'.'
name|'url'
op|'.'
name|'database'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'total'
op|'.'
name|'scalar'
op|'('
op|')'
op|'>'
number|'0'
op|','
string|'"No tables found. Wrong schema?"'
op|')'
newline|'\n'
nl|'\n'
name|'noninnodb'
op|'='
name|'self'
op|'.'
name|'migrate_engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|'"SELECT count(*) "'
nl|'\n'
string|'"FROM information_schema.TABLES "'
nl|'\n'
string|'"WHERE TABLE_SCHEMA=\'%(database)s\' "'
nl|'\n'
string|'"AND ENGINE != \'InnoDB\' "'
nl|'\n'
string|'"AND TABLE_NAME != \'migrate_version\'"'
op|'%'
nl|'\n'
op|'{'
string|"'database'"
op|':'
name|'self'
op|'.'
name|'migrate_engine'
op|'.'
name|'url'
op|'.'
name|'database'
op|'}'
op|')'
newline|'\n'
name|'count'
op|'='
name|'noninnodb'
op|'.'
name|'scalar'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'0'
op|','
string|'"%d non InnoDB tables created"'
op|'%'
name|'count'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNovaMigrationsPostgreSQL'
op|'('
name|'NovaMigrationsCheckers'
op|','
nl|'\n'
name|'test_base'
op|'.'
name|'PostgreSQLOpportunisticTestCase'
op|','
nl|'\n'
DECL|class|TestNovaMigrationsPostgreSQL
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProjectTestCase
dedent|''
name|'class'
name|'ProjectTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_all_migrations_have_downgrade
indent|'    '
name|'def'
name|'test_all_migrations_have_downgrade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|'+'
string|"'/../../../'"
op|')'
newline|'\n'
name|'py_glob'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'topdir'
op|','
string|'"nova"'
op|','
string|'"db"'
op|','
string|'"sqlalchemy"'
op|','
nl|'\n'
string|'"migrate_repo"'
op|','
string|'"versions"'
op|','
string|'"*.py"'
op|')'
newline|'\n'
nl|'\n'
name|'missing_downgrade'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'glob'
op|'.'
name|'iglob'
op|'('
name|'py_glob'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'has_upgrade'
op|'='
name|'False'
newline|'\n'
name|'has_downgrade'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'path'
op|','
string|'"r"'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'line'
name|'in'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'if'
string|"'def upgrade('"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                        '
name|'has_upgrade'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'def downgrade('"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                        '
name|'has_downgrade'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'has_upgrade'
name|'and'
name|'not'
name|'has_downgrade'
op|':'
newline|'\n'
indent|'                    '
name|'fname'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'missing_downgrade'
op|'.'
name|'append'
op|'('
name|'fname'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'helpful_msg'
op|'='
op|'('
string|'"The following migrations are missing a downgrade:"'
nl|'\n'
string|'"\\n\\t%s"'
op|'%'
string|"'\\n\\t'"
op|'.'
name|'join'
op|'('
name|'sorted'
op|'('
name|'missing_downgrade'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'missing_downgrade'
op|','
name|'helpful_msg'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
