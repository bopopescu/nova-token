begin_unit
comment|'#'
nl|'\n'
comment|'# Copyright 2013 - Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
string|'"""\nUnit tests for EC2 error responses.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'ec2'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'wsgi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestClientExceptionEC2
name|'class'
name|'TestClientExceptionEC2'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|variable|ec2_code
indent|'    '
name|'ec2_code'
op|'='
string|"'ClientException.Test'"
newline|'\n'
DECL|variable|message
name|'message'
op|'='
string|'"Test Client Exception."'
newline|'\n'
DECL|variable|code
name|'code'
op|'='
number|'400'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerExceptionEC2
dedent|''
name|'class'
name|'TestServerExceptionEC2'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|variable|ec2_code
indent|'    '
name|'ec2_code'
op|'='
string|"'ServerException.Test'"
newline|'\n'
DECL|variable|message
name|'message'
op|'='
string|'"Test Server Exception."'
newline|'\n'
DECL|variable|code
name|'code'
op|'='
number|'500'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Ec2ErrorResponseTestCase
dedent|''
name|'class'
name|'Ec2ErrorResponseTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test EC2 error responses.\n\n    This deals mostly with api/ec2/__init__.py code, especially\n    the ec2_error_ex helper.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Ec2ErrorResponseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'test_user_id'"
op|','
nl|'\n'
string|"'test_project_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
nl|'\n'
DECL|member|_validate_ec2_error
dedent|''
name|'def'
name|'_validate_ec2_error'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'http_status'
op|','
name|'ec2_code'
op|','
name|'msg'
op|'='
name|'None'
op|','
nl|'\n'
name|'unknown_msg'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
name|'http_status'
op|','
nl|'\n'
string|"'Expected HTTP status %s'"
op|'%'
name|'http_status'
op|')'
newline|'\n'
name|'root_e'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root_e'
op|'.'
name|'tag'
op|','
string|"'Response'"
op|','
nl|'\n'
string|'"Top element must be Response."'
op|')'
newline|'\n'
name|'errors_e'
op|'='
name|'root_e'
op|'.'
name|'find'
op|'('
string|"'Errors'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'errors_e'
op|')'
op|','
number|'1'
op|','
nl|'\n'
string|'"Expected exactly one Error element in Errors."'
op|')'
newline|'\n'
name|'error_e'
op|'='
name|'errors_e'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'error_e'
op|'.'
name|'tag'
op|','
string|"'Error'"
op|','
nl|'\n'
string|'"Expected Error element."'
op|')'
newline|'\n'
comment|'# Code'
nl|'\n'
name|'code_e'
op|'='
name|'error_e'
op|'.'
name|'find'
op|'('
string|"'Code'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'code_e'
op|','
string|'"Code element must be present."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'code_e'
op|'.'
name|'text'
op|','
name|'ec2_code'
op|')'
newline|'\n'
comment|'# Message'
nl|'\n'
name|'if'
name|'msg'
name|'or'
name|'unknown_msg'
op|':'
newline|'\n'
indent|'            '
name|'message_e'
op|'='
name|'error_e'
op|'.'
name|'find'
op|'('
string|"'Message'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'code_e'
op|','
string|'"Message element must be present."'
op|')'
newline|'\n'
name|'if'
name|'msg'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'message_e'
op|'.'
name|'text'
op|','
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'unknown_msg'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'message_e'
op|'.'
name|'text'
op|','
string|'"Unknown error occurred."'
op|','
nl|'\n'
string|'"Error message should be anonymous."'
op|')'
newline|'\n'
comment|'# RequestID'
nl|'\n'
dedent|''
dedent|''
name|'requestid_e'
op|'='
name|'root_e'
op|'.'
name|'find'
op|'('
string|"'RequestID'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'requestid_e'
op|','
nl|'\n'
string|"'RequestID element should be present.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'requestid_e'
op|'.'
name|'text'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'request_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exception_ec2_4xx
dedent|''
name|'def'
name|'test_exception_ec2_4xx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test response to EC2 exception with code = 400."""'
newline|'\n'
name|'msg'
op|'='
string|'"Test client failure."'
newline|'\n'
name|'err'
op|'='
name|'ec2'
op|'.'
name|'ec2_error_ex'
op|'('
name|'TestClientExceptionEC2'
op|'('
name|'msg'
op|')'
op|','
name|'self'
op|'.'
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_ec2_error'
op|'('
name|'err'
op|','
name|'TestClientExceptionEC2'
op|'.'
name|'code'
op|','
nl|'\n'
name|'TestClientExceptionEC2'
op|'.'
name|'ec2_code'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exception_ec2_5xx
dedent|''
name|'def'
name|'test_exception_ec2_5xx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test response to EC2 exception with code = 500.\n\n        Expected errors are treated as client ones even with 5xx code.\n        """'
newline|'\n'
name|'msg'
op|'='
string|'"Test client failure with 5xx error code."'
newline|'\n'
name|'err'
op|'='
name|'ec2'
op|'.'
name|'ec2_error_ex'
op|'('
name|'TestServerExceptionEC2'
op|'('
name|'msg'
op|')'
op|','
name|'self'
op|'.'
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_ec2_error'
op|'('
name|'err'
op|','
number|'400'
op|','
name|'TestServerExceptionEC2'
op|'.'
name|'ec2_code'
op|','
nl|'\n'
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unexpected_exception_ec2_4xx
dedent|''
name|'def'
name|'test_unexpected_exception_ec2_4xx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test response to unexpected EC2 exception with code = 400."""'
newline|'\n'
name|'msg'
op|'='
string|'"Test unexpected client failure."'
newline|'\n'
name|'err'
op|'='
name|'ec2'
op|'.'
name|'ec2_error_ex'
op|'('
name|'TestClientExceptionEC2'
op|'('
name|'msg'
op|')'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'unexpected'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_ec2_error'
op|'('
name|'err'
op|','
name|'TestClientExceptionEC2'
op|'.'
name|'code'
op|','
nl|'\n'
name|'TestClientExceptionEC2'
op|'.'
name|'ec2_code'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unexpected_exception_ec2_5xx
dedent|''
name|'def'
name|'test_unexpected_exception_ec2_5xx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test response to unexpected EC2 exception with code = 500.\n\n        Server exception messages (with code >= 500 or without code) should\n        be filtered as they might contain sensitive information.\n        """'
newline|'\n'
name|'msg'
op|'='
string|'"Test server failure."'
newline|'\n'
name|'err'
op|'='
name|'ec2'
op|'.'
name|'ec2_error_ex'
op|'('
name|'TestServerExceptionEC2'
op|'('
name|'msg'
op|')'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'unexpected'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_ec2_error'
op|'('
name|'err'
op|','
name|'TestServerExceptionEC2'
op|'.'
name|'code'
op|','
nl|'\n'
name|'TestServerExceptionEC2'
op|'.'
name|'ec2_code'
op|','
nl|'\n'
name|'unknown_msg'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unexpected_exception_builtin
dedent|''
name|'def'
name|'test_unexpected_exception_builtin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test response to builtin unexpected exception.\n\n        Server exception messages (with code >= 500 or without code) should\n        be filtered as they might contain sensitive information.\n        """'
newline|'\n'
name|'msg'
op|'='
string|'"Test server failure."'
newline|'\n'
name|'err'
op|'='
name|'ec2'
op|'.'
name|'ec2_error_ex'
op|'('
name|'RuntimeError'
op|'('
name|'msg'
op|')'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'unexpected'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_ec2_error'
op|'('
name|'err'
op|','
number|'500'
op|','
string|"'RuntimeError'"
op|','
name|'unknown_msg'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
