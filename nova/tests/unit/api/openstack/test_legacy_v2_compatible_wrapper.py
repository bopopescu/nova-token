begin_unit
comment|'# Copyright 2015 Intel Corporation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'jsonschema'
name|'import'
name|'exceptions'
name|'as'
name|'jsonschema_exc'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'import'
name|'webob'
op|'.'
name|'dec'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'validation'
name|'import'
name|'validators'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestLegacyV2CompatibleWrapper
name|'class'
name|'TestLegacyV2CompatibleWrapper'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_filter_out_microverions_request_header
indent|'    '
name|'def'
name|'test_filter_out_microverions_request_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
op|']'
op|'='
string|"'2.2'"
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
op|','
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_out_microverions_response_header
dedent|''
name|'def'
name|'test_filter_out_microverions_response_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
op|']'
op|'='
string|"'2.3'"
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'response'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_out_microverions_vary_header
dedent|''
name|'def'
name|'test_filter_out_microverions_vary_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Vary'"
op|']'
op|'='
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'response'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'Vary'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_out_microverions_vary_header_with_multi_fields
dedent|''
name|'def'
name|'test_filter_out_microverions_vary_header_with_multi_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Vary'"
op|']'
op|'='
string|"'%s, %s, %s'"
op|'%'
op|'('
nl|'\n'
name|'wsgi'
op|'.'
name|'API_VERSION_REQUEST_HEADER'
op|','
string|"'FAKE_HEADER1'"
op|','
nl|'\n'
string|"'FAKE_HEADER2'"
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'response'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'FAKE_HEADER1,FAKE_HEADER2'"
op|','
nl|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Vary'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_out_microverions_no_vary_header
dedent|''
name|'def'
name|'test_filter_out_microverions_no_vary_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'response'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'Vary'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_legacy_env_variable
dedent|''
name|'def'
name|'test_legacy_env_variable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
op|'('
name|'RequestClass'
op|'='
name|'wsgi'
op|'.'
name|'Request'
op|')'
newline|'\n'
DECL|function|fake_app
name|'def'
name|'fake_app'
op|'('
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'req'
op|'.'
name|'is_legacy_v2'
op|'('
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'webob'
op|'.'
name|'Response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status_int'
op|'='
number|'204'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'wrapper'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'LegacyV2CompatibleWrapper'
op|'('
name|'fake_app'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'wrapper'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSoftAddtionalPropertiesValidation
dedent|''
dedent|''
name|'class'
name|'TestSoftAddtionalPropertiesValidation'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSoftAddtionalPropertiesValidation'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
op|','
nl|'\n'
string|"'bar'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'schema_allow'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
op|','
nl|'\n'
string|"'bar'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'schema_with_pattern'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'patternProperties'"
op|':'
op|'{'
nl|'\n'
string|"'^[a-zA-Z0-9-_:. ]{1,255}$'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'schema_allow_with_pattern'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'patternProperties'"
op|':'
op|'{'
nl|'\n'
string|"'^[a-zA-Z0-9-_:. ]{1,255}$'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'True'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_strip_extra_properties_out_without_extra_props
dedent|''
name|'def'
name|'test_strip_extra_properties_out_without_extra_props'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
name|'self'
op|'.'
name|'schema'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'False'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'next'
op|','
name|'gen'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_strip_extra_properties_out_with_extra_props
dedent|''
name|'def'
name|'test_strip_extra_properties_out_with_extra_props'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
name|'self'
op|'.'
name|'schema'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'extra_foo'"
op|':'
string|"'extra'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'False'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'next'
op|','
name|'gen'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_not_strip_extra_properties_out_with_allow_extra_props
dedent|''
name|'def'
name|'test_not_strip_extra_properties_out_with_allow_extra_props'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
name|'self'
op|'.'
name|'schema_allow'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'extra_foo'"
op|':'
string|"'extra'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'True'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema_allow'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'next'
op|','
name|'gen'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'extra_foo'"
op|':'
string|"'extra'"
op|'}'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pattern_properties_with_invalid_property_and_allow_extra_props
dedent|''
name|'def'
name|'test_pattern_properties_with_invalid_property_and_allow_extra_props'
op|'('
nl|'\n'
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'b'"
op|'*'
number|'300'
op|':'
string|"'extra'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'True'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'next'
op|','
name|'gen'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pattern_properties
dedent|''
name|'def'
name|'test_pattern_properties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'False'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'next'
op|','
name|'gen'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pattern_properties_with_invalid_property
dedent|''
name|'def'
name|'test_pattern_properties_with_invalid_property'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'b'"
op|'*'
number|'300'
op|':'
string|"'extra'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'False'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'next'
op|'('
name|'gen'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'exc'
op|','
nl|'\n'
name|'jsonschema_exc'
op|'.'
name|'ValidationError'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'was'"
op|','
name|'exc'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pattern_properties_with_multiple_invalid_properties
dedent|''
name|'def'
name|'test_pattern_properties_with_multiple_invalid_properties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'validator'
op|'='
name|'validators'
op|'.'
name|'_SchemaValidator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
op|'.'
name|'validator'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'b'"
op|'*'
number|'300'
op|':'
string|"'extra'"
op|','
string|"'c'"
op|'*'
number|'300'
op|':'
string|"'extra'"
op|'}'
newline|'\n'
name|'gen'
op|'='
name|'validators'
op|'.'
name|'_soft_validate_additional_properties'
op|'('
nl|'\n'
name|'validator'
op|','
name|'False'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'schema_with_pattern'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'next'
op|'('
name|'gen'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'exc'
op|','
nl|'\n'
name|'jsonschema_exc'
op|'.'
name|'ValidationError'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'were'"
op|','
name|'exc'
op|'.'
name|'message'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
