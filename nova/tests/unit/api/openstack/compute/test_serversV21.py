begin_unit
comment|'# Copyright 2010-2011 OpenStack Foundation'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'iso8601'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'urllib'
op|'.'
name|'parse'
name|'as'
name|'urlparse'
newline|'\n'
name|'import'
name|'testtools'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'api_version_request'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'disk_config'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'extension_info'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'ips'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'keypairs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'schemas'
name|'import'
name|'disk_config'
name|'as'
name|'disk_config_schema'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'schemas'
name|'import'
name|'servers'
name|'as'
name|'servers_schema'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'views'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
name|'as'
name|'os_wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'neutronv2'
name|'import'
name|'api'
name|'as'
name|'neutron_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'policy'
name|'as'
name|'common_policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
name|'as'
name|'nova_utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'password_length'"
op|','
string|"'nova.utils'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
name|'fakes'
op|'.'
name|'FAKE_UUID'
newline|'\n'
nl|'\n'
DECL|variable|INSTANCE_IDS
name|'INSTANCE_IDS'
op|'='
op|'{'
name|'FAKE_UUID'
op|':'
number|'1'
op|'}'
newline|'\n'
DECL|variable|FIELDS
name|'FIELDS'
op|'='
name|'instance_obj'
op|'.'
name|'INSTANCE_DEFAULT_FIELDS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_gen_uuid
name|'def'
name|'fake_gen_uuid'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'FAKE_UUID'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_empty
dedent|''
name|'def'
name|'return_servers_empty'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
name|'objects'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update_and_get_original
dedent|''
name|'def'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'INSTANCE_IDS'
op|'.'
name|'get'
op|'('
name|'instance_uuid'
op|')'
op|','
nl|'\n'
name|'name'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'INSTANCE_IDS'
op|'.'
name|'get'
op|'('
name|'instance_uuid'
op|')'
op|','
nl|'\n'
name|'name'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_api
dedent|''
name|'def'
name|'fake_compute_api'
op|'('
name|'cls'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_start_stop_not_ready
dedent|''
name|'def'
name|'fake_start_stop_not_ready'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotReady'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'['
string|'"uuid"'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_start_stop_invalid_state
dedent|''
name|'def'
name|'fake_start_stop_invalid_state'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'attr'
op|'='
string|"'fake_attr'"
op|','
nl|'\n'
name|'method'
op|'='
string|"'fake_method'"
op|','
name|'state'
op|'='
string|"'fake_state'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_instance_get_by_uuid_not_found
dedent|''
name|'def'
name|'fake_instance_get_by_uuid_not_found'
op|'('
name|'context'
op|','
name|'uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_instance_get_all_with_locked
dedent|''
name|'def'
name|'fake_instance_get_all_with_locked'
op|'('
name|'context'
op|','
name|'list_locked'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'obj_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'s_id'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'locked'
name|'in'
name|'list_locked'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'locked'
op|')'
newline|'\n'
name|'s_id'
op|'='
name|'s_id'
op|'+'
number|'1'
newline|'\n'
name|'kwargs'
op|'['
string|"'locked_by'"
op|']'
op|'='
name|'None'
name|'if'
name|'locked'
op|'=='
string|"'not_locked'"
name|'else'
name|'locked'
newline|'\n'
name|'server'
op|'='
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
name|'context'
op|','
name|'id'
op|'='
name|'s_id'
op|','
name|'uuid'
op|'='
name|'uuid'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'obj_list'
op|'.'
name|'append'
op|'('
name|'server'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
name|'objects'
op|'='
name|'obj_list'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockSetAdminPassword
dedent|''
name|'class'
name|'MockSetAdminPassword'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Base64ValidationTest
dedent|''
dedent|''
name|'class'
name|'Base64ValidationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Base64ValidationTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64
dedent|''
name|'def'
name|'test_decode_base64'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_binary
dedent|''
name|'def'
name|'test_decode_base64_binary'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"\\x00\\x12\\x75\\x99"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_whitespace
dedent|''
name|'def'
name|'test_decode_base64_whitespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'encoded'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
newline|'\n'
name|'white'
op|'='
string|'"\\n \\n%s\\t%s\\n"'
op|'%'
op|'('
name|'encoded'
op|'['
op|':'
number|'2'
op|']'
op|','
name|'encoded'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'white'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_invalid
dedent|''
name|'def'
name|'test_decode_base64_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid'
op|'='
string|'"A random string"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'invalid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_illegal_bytes
dedent|''
name|'def'
name|'test_decode_base64_illegal_bytes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'encoded'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
newline|'\n'
name|'white'
op|'='
string|'">\\x01%s*%s()"'
op|'%'
op|'('
name|'encoded'
op|'['
op|':'
number|'2'
op|']'
op|','
name|'encoded'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'white'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NeutronV2Subclass
dedent|''
dedent|''
name|'class'
name|'NeutronV2Subclass'
op|'('
name|'neutron_api'
op|'.'
name|'API'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Used to ensure that API handles subclasses properly."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ControllerTest
dedent|''
name|'class'
name|'ControllerTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ControllerTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
op|')'
newline|'\n'
name|'return_servers'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get_all'
op|'('
op|')'
newline|'\n'
comment|'# Server sort keys extension is enabled in v21 so sort data is passed'
nl|'\n'
comment|'# to the instance API and the sorted DB API is invoked'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'return_servers'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'return_server'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'instance_update_and_get_original'
op|')'
newline|'\n'
nl|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ips_controller'
op|'='
name|'ips'
op|'.'
name|'IPsController'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
DECL|variable|wsgi_api_version
indent|'    '
name|'wsgi_api_version'
op|'='
name|'os_wsgi'
op|'.'
name|'DEFAULT_API_VERSION'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'host'"
op|','
string|"'localhost'"
op|','
name|'group'
op|'='
string|"'glance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|req
dedent|''
name|'def'
name|'req'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'use_admin_context'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
name|'url'
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'use_admin_context'
op|','
nl|'\n'
name|'version'
op|'='
name|'self'
op|'.'
name|'wsgi_api_version'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_prefix
dedent|''
name|'def'
name|'test_requested_networks_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
string|"'br-00000000-0000-0000-0000-000000000000'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
name|'uuid'
op|','
name|'None'
op|')'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_network
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'network'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_network_and_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_network_and_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_with_duplicate_networks
dedent|''
name|'def'
name|'test_requested_networks_with_duplicate_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# duplicate networks are allowed only for nova neutron v2.0'
nl|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_with_neutronv2_and_duplicate_networks
dedent|''
name|'def'
name|'test_requested_networks_with_neutronv2_and_duplicate_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# duplicate networks are allowed only for nova neutron v2.0'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'network'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|','
nl|'\n'
op|'('
name|'network'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_conflict_on_fixed_ip
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_conflict_on_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'addr'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
nl|'\n'
string|"'fixed_ip'"
op|':'
name|'addr'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_disabled_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_disabled_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_api_enabled_with_v2_subclass
dedent|''
name|'def'
name|'test_requested_networks_api_enabled_with_v2_subclass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_subclass_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_subclass_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'='
op|'('
string|"'nova.tests.unit.api.openstack.compute.test_serversV21.'"
nl|'\n'
string|"'NeutronV2Subclass'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
name|'cls'
op|')'
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|','
name|'None'
op|')'
op|']'
op|','
name|'res'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_uuid
dedent|''
name|'def'
name|'test_get_server_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_joins_pci_devices
dedent|''
name|'def'
name|'test_get_server_joins_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_get
indent|'        '
name|'def'
name|'fake_get'
op|'('
name|'_self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'expected_attrs'
op|'='
name|'kwargs'
op|'['
string|"'expected_attrs'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'flavor'"
op|','
string|"'info_cache'"
op|','
string|"'metadata'"
op|','
nl|'\n'
string|"'pci_devices'"
op|']'
op|','
name|'expected_attrs'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'return'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'expected_attrs'
op|'='
name|'expected_attrs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_get'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unique_host_id
dedent|''
name|'def'
name|'test_unique_host_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create two servers with the same host and different\n        project_ids and check that the host_id\'s are unique.\n        """'
newline|'\n'
DECL|function|return_instance_with_host
name|'def'
name|'return_instance_with_host'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'project_id'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
name|'context'
op|','
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'return_instance_with_host'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mock_get'
op|'.'
name|'side_effect'
op|'='
name|'return_instance_with_host'
newline|'\n'
name|'server1'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'server2'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'server1'
op|'['
string|"'server'"
op|']'
op|'['
string|"'hostId'"
op|']'
op|','
nl|'\n'
name|'server2'
op|'['
string|"'server'"
op|']'
op|'['
string|"'hostId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_data_dict
dedent|''
name|'def'
name|'_get_server_data_dict'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'image_bookmark'
op|','
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"ACTIVE"'
op|','
name|'progress'
op|'='
number|'100'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
name|'progress'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"server2"'
op|','
nl|'\n'
string|'"status"'
op|':'
name|'status'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"seq"'
op|':'
string|'"2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'uuid'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'uuid'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id
dedent|''
name|'def'
name|'test_get_server_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/2"'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/v2/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"BUILD"'
op|','
nl|'\n'
name|'progress'
op|'='
number|'0'
op|')'
newline|'\n'
name|'expected_server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'server1'"
newline|'\n'
name|'expected_server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'seq'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_active_status_by_id
dedent|''
name|'def'
name|'test_get_server_with_active_status_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/2"'
newline|'\n'
nl|'\n'
name|'new_return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'progress'
op|'='
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'new_return_server'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_id_image_ref_by_id
dedent|''
name|'def'
name|'test_get_server_with_id_image_ref_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_ref'
op|'='
string|'"10"'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/2"'
newline|'\n'
nl|'\n'
name|'new_return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'image_ref'
op|'='
name|'image_ref'
op|','
nl|'\n'
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
name|'progress'
op|'='
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'new_return_server'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_from_cache
dedent|''
name|'def'
name|'test_get_server_addresses_from_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pub0'
op|'='
op|'('
string|"'172.19.0.1'"
op|','
string|"'172.19.0.2'"
op|','
op|')'
newline|'\n'
name|'pub1'
op|'='
op|'('
string|"'1.2.3.4'"
op|','
op|')'
newline|'\n'
name|'pub2'
op|'='
op|'('
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|','
op|')'
newline|'\n'
name|'priv0'
op|'='
op|'('
string|"'192.168.0.3'"
op|','
string|"'192.168.0.4'"
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|function|_ip
name|'def'
name|'_ip'
op|'('
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'nw_cache'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'public'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'172.19.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub0'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'1.2.3.0/16'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'b33f::/64'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub2'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br1'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'priv0'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'nw_cache'
op|'='
name|'nw_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'return_server'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s/ips'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'index'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
nl|'\n'
string|"'private'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'public'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
comment|'# Make sure we kept the addresses in order'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'res_dict'
op|'['
string|"'addresses'"
op|']'
op|','
name|'collections'
op|'.'
name|'OrderedDict'
op|')'
newline|'\n'
name|'labels'
op|'='
op|'['
name|'vif'
op|'['
string|"'network'"
op|']'
op|'['
string|"'label'"
op|']'
name|'for'
name|'vif'
name|'in'
name|'nw_cache'
op|']'
newline|'\n'
name|'for'
name|'index'
op|','
name|'label'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'addresses'"
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'label'
op|','
name|'labels'
op|'['
name|'index'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistent_network
dedent|''
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistent_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers/%s/ips/network_0'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'show'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
string|"'network_0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistent_server
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistent_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_instance_get
indent|'        '
name|'def'
name|'fake_instance_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_instance_get'
op|')'
newline|'\n'
nl|'\n'
name|'server_id'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s/ips'"
op|'%'
name|'server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'index'
op|','
name|'req'
op|','
name|'server_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_empty
dedent|''
name|'def'
name|'test_get_server_list_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
nl|'\n'
name|'return_servers_empty'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'num_servers'
op|'='
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'num_servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_empty
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail?'"
nl|'\n'
string|"'reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_details
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail?'"
nl|'\n'
string|"'reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list
dedent|''
dedent|''
name|'def'
name|'test_get_server_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'image'"
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected_links'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'links'"
op|']'
op|','
name|'expected_links'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit
dedent|''
dedent|''
name|'def'
name|'test_get_servers_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?limit=3'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res_dict'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res_dict'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected_params'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
nl|'\n'
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_params'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_bad_value
dedent|''
name|'def'
name|'test_get_servers_with_limit_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?limit=aaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_empty
dedent|''
name|'def'
name|'test_get_server_details_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
nl|'\n'
name|'return_servers_empty'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'num_servers'
op|'='
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'num_servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit
dedent|''
name|'def'
name|'test_get_server_details_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail?limit=3'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers/detail'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit_bad_value
dedent|''
name|'def'
name|'test_get_server_details_with_limit_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail?limit=aaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit_and_other_params
dedent|''
name|'def'
name|'test_get_server_details_with_limit_and_other_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail'"
nl|'\n'
string|"'?limit=3&blah=2:t'"
nl|'\n'
string|"'&sort_key=id1&sort_dir=asc'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers/detail'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
string|"'blah'"
op|':'
op|'['
string|"'2:t'"
op|']'
op|','
nl|'\n'
string|"'sort_key'"
op|':'
op|'['
string|"'id1'"
op|']'
op|','
string|"'sort_dir'"
op|':'
op|'['
string|"'asc'"
op|']'
op|','
nl|'\n'
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_too_big_limit
dedent|''
name|'def'
name|'test_get_servers_with_too_big_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?limit=30'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'servers_links'"
op|','
name|'res_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_limit
dedent|''
name|'def'
name|'test_get_servers_with_bad_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?limit=asdf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_marker
dedent|''
name|'def'
name|'test_get_servers_with_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers?marker=%s'"
op|'%'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
name|'url'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|'"server4"'
op|','
string|'"server5"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_and_marker
dedent|''
name|'def'
name|'test_get_servers_with_limit_and_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
op|'('
string|"'/v2/fake/servers?limit=2&marker=%s'"
op|'%'
nl|'\n'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
name|'url'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|"'server3'"
op|','
string|"'server4'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_marker
dedent|''
name|'def'
name|'test_get_servers_with_bad_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?limit=2&marker=asdf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_option
dedent|''
name|'def'
name|'test_get_servers_with_bad_option'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'objects'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?unknownoption=whee'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_image
dedent|''
name|'def'
name|'test_get_servers_allows_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'image'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'image'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'objects'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?image=12345'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_tenant_id_filter_no_admin_context
dedent|''
name|'def'
name|'test_tenant_id_filter_no_admin_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'project_id'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?tenant_id=newfake'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mock_get'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_all'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_normal
dedent|''
name|'def'
name|'test_all_tenants_param_normal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mock_get'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_all'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_one
dedent|''
name|'def'
name|'test_all_tenants_param_one'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_zero
dedent|''
name|'def'
name|'test_all_tenants_param_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=0'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_false
dedent|''
name|'def'
name|'test_all_tenants_param_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=false'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_invalid
dedent|''
name|'def'
name|'test_all_tenants_param_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=xxx'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_admin_restricted_tenant
dedent|''
name|'def'
name|'test_admin_restricted_tenant'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'project_id'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_pass_policy
dedent|''
name|'def'
name|'test_all_tenants_pass_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'is_admin'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"os_compute_api:servers:index"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
op|','
nl|'\n'
string|'"os_compute_api:servers:index:get_all_tenants"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rules'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_fail_policy
dedent|''
name|'def'
name|'test_all_tenants_fail_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"os_compute_api:servers:index:get_all_tenants"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:non_fake"'
op|')'
op|','
nl|'\n'
string|'"os_compute_api:servers:get_all"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_flavor
dedent|''
name|'def'
name|'test_get_servers_allows_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'flavor'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# flavor is an integer ID'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'flavor'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?flavor=12345'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_flavor
dedent|''
name|'def'
name|'test_get_servers_with_bad_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?flavor=abcde'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
name|'objects'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_bad_flavor
dedent|''
name|'def'
name|'test_get_server_details_with_bad_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?flavor=abcde'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
name|'objects'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'servers'
op|','
name|'testtools'
op|'.'
name|'matchers'
op|'.'
name|'HasLength'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_status
dedent|''
name|'def'
name|'test_get_servers_allows_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|']'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=active'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_task_status
dedent|''
name|'def'
name|'test_get_servers_allows_task_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'task_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING'
op|']'
op|','
nl|'\n'
name|'search_opts'
op|'['
string|"'task_state'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=reboot'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_resize_status
dedent|''
name|'def'
name|'test_get_servers_resize_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test when resize status, it maps list of vm states.'
nl|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
nl|'\n'
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=resize'"
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_invalid_status
dedent|''
name|'def'
name|'test_get_servers_invalid_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test getting servers by invalid status.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=baloney'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'False'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_deleted_status_as_user
dedent|''
name|'def'
name|'test_get_servers_deleted_status_as_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=deleted'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_deleted_status_as_admin
dedent|''
name|'def'
name|'test_get_servers_deleted_status_as_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?status=deleted'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
newline|'\n'
DECL|member|test_get_servers_deleted_filter_str_to_bool
name|'def'
name|'test_get_servers_deleted_filter_str_to_bool'
op|'('
name|'self'
op|','
name|'mock_get_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|','
nl|'\n'
name|'vm_state'
op|'='
string|"'deleted'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'return_value'
op|'='
name|'db_list'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?deleted=true'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_uuid'
op|','
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# Assert that 'deleted' filter value is converted to boolean"
nl|'\n'
comment|'# while calling get_all() method.'
nl|'\n'
name|'expected_search_opts'
op|'='
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
name|'search_opts'
op|'='
name|'expected_search_opts'
op|','
name|'limit'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'flavor'"
op|','
string|"'info_cache'"
op|','
string|"'metadata'"
op|','
string|"'pci_devices'"
op|']'
op|','
nl|'\n'
name|'marker'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
name|'want_objects'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
name|'sort_dirs'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
newline|'\n'
DECL|member|test_get_servers_deleted_filter_invalid_str
name|'def'
name|'test_get_servers_deleted_filter_invalid_str'
op|'('
name|'self'
op|','
name|'mock_get_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'db_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'return_value'
op|'='
name|'db_list'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?deleted=abc'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_uuid'
op|','
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# Assert that invalid 'deleted' filter value is converted to boolean"
nl|'\n'
comment|'# False while calling get_all() method.'
nl|'\n'
name|'expected_search_opts'
op|'='
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
name|'search_opts'
op|'='
name|'expected_search_opts'
op|','
name|'limit'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'flavor'"
op|','
string|"'info_cache'"
op|','
string|"'metadata'"
op|','
string|"'pci_devices'"
op|']'
op|','
nl|'\n'
name|'marker'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
name|'want_objects'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
name|'sort_keys'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
name|'sort_dirs'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_name
dedent|''
name|'def'
name|'test_get_servers_allows_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'name'"
op|']'
op|','
string|"'whee.*'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'pci_devices'"
op|']'
op|','
name|'expected_attrs'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?name=whee.*'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
newline|'\n'
DECL|member|test_get_servers_flavor_not_found
name|'def'
name|'test_get_servers_flavor_not_found'
op|'('
name|'self'
op|','
name|'get_all_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_all_mock'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/fake/servers?status=active&flavor=abc'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_changes_since
dedent|''
name|'def'
name|'test_get_servers_allows_changes_since'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'changes-since'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'changes_since'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'24'
op|','
number|'17'
op|','
number|'8'
op|','
number|'1'
op|','
nl|'\n'
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'UTC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|','
name|'changes_since'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'deleted'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
string|"'changes-since=2011-01-24T17:08:01Z'"
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'params'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_changes_since_bad_value
dedent|''
name|'def'
name|'test_get_servers_allows_changes_since_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
string|"'changes-since=asdf'"
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_filters_as_user
dedent|''
name|'def'
name|'test_get_servers_admin_filters_as_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options when\n        context is not admin. Make sure the admin and unknown options\n        are stripped before they get to compute_api.get_all()\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# OSAPI converts status to vm_state'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'unknown_option'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'query_str'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_options_as_admin
dedent|''
name|'def'
name|'test_get_servers_admin_options_as_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options when\n        context is admin. All options should be passed\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# OSAPI converts status to vm_state'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'unknown_option'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'query_str'
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_ip
dedent|''
name|'def'
name|'test_get_servers_allows_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip."""'
newline|'\n'
nl|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip'"
op|']'
op|','
string|"'10\\..*'"
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?ip=10\\..*'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_allows_ip6
dedent|''
name|'def'
name|'test_get_servers_admin_allows_ip6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip6 with admin_api enabled and\n        admin context\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip6'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip6'"
op|']'
op|','
string|"'ffff.*'"
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?ip6=ffff.*'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_ip6_with_new_version
dedent|''
name|'def'
name|'test_get_servers_allows_ip6_with_new_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip6 with new version requested\n        and no admin context\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip6'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip6'"
op|']'
op|','
string|"'ffff.*'"
op|')'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers?ip6=ffff.*'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'api_version_request'
op|'='
name|'api_version_request'
op|'.'
name|'APIVersionRequest'
op|'('
string|"'2.5'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details
dedent|''
name|'def'
name|'test_get_all_server_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_flavor'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/flavors/2'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected_image'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/images/10'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'image'"
op|']'
op|','
name|'expected_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'flavor'"
op|']'
op|','
name|'expected_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'status'"
op|']'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'seq'"
op|']'
op|','
name|'str'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_with_host
dedent|''
dedent|''
name|'def'
name|'test_get_all_server_details_with_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""We want to make sure that if two instances are on the same host,\n        then they return the same hostId. If two instances are on different\n        hosts, they should return different hostIds. In this test,\n        there are 5 instances - 2 on one host and 3 on another.\n        """'
newline|'\n'
nl|'\n'
DECL|function|return_servers_with_host
name|'def'
name|'return_servers_with_host'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
name|'None'
op|','
nl|'\n'
name|'id'
op|'='
name|'i'
op|'+'
number|'1'
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'host'
op|'='
name|'i'
op|'%'
number|'2'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'return_servers_with_host'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'server_list'
op|'='
name|'res_dict'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'host_ids'
op|'='
op|'['
name|'server_list'
op|'['
number|'0'
op|']'
op|'['
string|"'hostId'"
op|']'
op|','
name|'server_list'
op|'['
number|'1'
op|']'
op|'['
string|"'hostId'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
name|'and'
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
op|','
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'server_list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
name|'host_ids'
op|'['
name|'i'
op|'%'
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_joins_pci_devices
dedent|''
dedent|''
name|'def'
name|'test_get_servers_joins_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|','
name|'sort_keys'
op|'='
name|'None'
op|','
name|'sort_dirs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'pci_devices'"
op|']'
op|','
name|'expected_attrs'
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers'"
op|','
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerTestV29
dedent|''
dedent|''
name|'class'
name|'ServersControllerTestV29'
op|'('
name|'ServersControllerTest'
op|')'
op|':'
newline|'\n'
DECL|variable|wsgi_api_version
indent|'    '
name|'wsgi_api_version'
op|'='
string|"'2.9'"
newline|'\n'
nl|'\n'
DECL|member|_get_server_data_dict
name|'def'
name|'_get_server_data_dict'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'image_bookmark'
op|','
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"ACTIVE"'
op|','
name|'progress'
op|'='
number|'100'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_dict'
op|'='
name|'super'
op|'('
name|'ServersControllerTestV29'
op|','
nl|'\n'
name|'self'
op|')'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|','
nl|'\n'
name|'progress'
op|')'
newline|'\n'
name|'server_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'locked'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'return'
name|'server_dict'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|')'
newline|'\n'
DECL|member|_test_get_server_with_lock
name|'def'
name|'_test_get_server_with_lock'
op|'('
name|'self'
op|','
name|'locked_by'
op|','
name|'get_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/2"'
newline|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'get_mock'
op|'.'
name|'side_effect'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'locked_by'
op|'='
name|'locked_by'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"BUILD"'
op|','
nl|'\n'
name|'progress'
op|'='
number|'0'
op|')'
newline|'\n'
name|'expected_server'
op|'['
string|"'server'"
op|']'
op|'['
string|"'locked'"
op|']'
op|'='
name|'True'
name|'if'
name|'locked_by'
name|'else'
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
name|'return'
name|'res_dict'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_locked_by_admin
dedent|''
name|'def'
name|'test_get_server_with_locked_by_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'_test_get_server_with_lock'
op|'('
string|"'admin'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'locked'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_locked_by_owner
dedent|''
name|'def'
name|'test_get_server_with_locked_by_owner'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'_test_get_server_with_lock'
op|'('
string|"'owner'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'locked'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_not_locked
dedent|''
name|'def'
name|'test_get_server_not_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'_test_get_server_with_lock'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'locked'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
newline|'\n'
DECL|member|_test_list_server_detail_with_lock
name|'def'
name|'_test_list_server_detail_with_lock'
op|'('
name|'self'
op|','
nl|'\n'
name|'s1_locked'
op|','
nl|'\n'
name|'s2_locked'
op|','
nl|'\n'
name|'get_all_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_all_mock'
op|'.'
name|'return_value'
op|'='
name|'fake_instance_get_all_with_locked'
op|'('
nl|'\n'
name|'context'
op|','
op|'['
name|'s1_locked'
op|','
name|'s2_locked'
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'servers_list'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
comment|"# Check that each returned server has the same 'locked' value"
nl|'\n'
comment|"# and 'id' as they were created."
nl|'\n'
name|'for'
name|'locked'
name|'in'
op|'['
name|'s1_locked'
op|','
name|'s2_locked'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'next'
op|'('
name|'server'
name|'for'
name|'server'
name|'in'
name|'servers_list'
op|'['
string|"'servers'"
op|']'
nl|'\n'
name|'if'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|'=='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'locked'
op|')'
op|')'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'False'
name|'if'
name|'locked'
op|'=='
string|"'not_locked'"
name|'else'
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'server'
op|'['
string|"'locked'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_server_detail_with_locked_s1_admin_s2_owner
dedent|''
dedent|''
name|'def'
name|'test_list_server_detail_with_locked_s1_admin_s2_owner'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_list_server_detail_with_lock'
op|'('
string|"'admin'"
op|','
string|"'owner'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_server_detail_with_locked_s1_owner_s2_admin
dedent|''
name|'def'
name|'test_list_server_detail_with_locked_s1_owner_s2_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_list_server_detail_with_lock'
op|'('
string|"'owner'"
op|','
string|"'admin'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_server_detail_with_locked_s1_admin_s2_admin
dedent|''
name|'def'
name|'test_list_server_detail_with_locked_s1_admin_s2_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_list_server_detail_with_lock'
op|'('
string|"'admin'"
op|','
string|"'admin'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_server_detail_with_locked_s1_admin_s2_not_locked
dedent|''
name|'def'
name|'test_list_server_detail_with_locked_s1_admin_s2_not_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_list_server_detail_with_lock'
op|'('
string|"'admin'"
op|','
string|"'not_locked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_server_detail_with_locked_s1_s2_not_locked
dedent|''
name|'def'
name|'test_list_server_detail_with_locked_s1_s2_not_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_list_server_detail_with_lock'
op|'('
string|"'not_locked'"
op|','
nl|'\n'
string|"'not_locked'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|')'
newline|'\n'
DECL|member|test_get_servers_remove_non_search_options
name|'def'
name|'test_get_servers_remove_non_search_options'
op|'('
name|'self'
op|','
name|'get_all_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/servers'"
nl|'\n'
string|"'?sort_key=id1&sort_dir=asc'"
nl|'\n'
string|"'&sort_key=id2&sort_dir=desc'"
nl|'\n'
string|"'&limit=1&marker=123'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'kwargs'
op|'='
name|'get_all_mock'
op|'.'
name|'call_args'
op|'['
number|'1'
op|']'
newline|'\n'
name|'search_opts'
op|'='
name|'kwargs'
op|'['
string|"'search_opts'"
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'('
string|"'sort_key'"
op|','
string|"'sort_dir'"
op|','
string|"'limit'"
op|','
string|"'marker'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'key'
op|','
name|'search_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerDeleteTest
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServersControllerDeleteTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerDeleteTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_delete
name|'def'
name|'fake_delete'
op|'('
name|'api'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'.'
name|'uuid'
op|'=='
string|"'non-existent-uuid'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'delete'"
op|','
name|'fake_delete'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_delete_request
dedent|''
name|'def'
name|'_create_delete_request'
op|'('
name|'self'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'0'
op|','
number|'10'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|_delete_server_instance
dedent|''
name|'def'
name|'_delete_server_instance'
op|'('
name|'self'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'fake_get'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance
dedent|''
name|'def'
name|'test_delete_server_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_delete_server_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_not_found
dedent|''
name|'def'
name|'test_delete_server_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_delete_server_instance'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'non-existent-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_while_building
dedent|''
name|'def'
name|'test_delete_server_instance_while_building'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_locked_server
dedent|''
name|'def'
name|'test_delete_locked_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'soft_delete'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_actions_to_locked_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'delete'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_actions_to_locked_server'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_while_resize
dedent|''
name|'def'
name|'test_delete_server_instance_while_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'fake_get'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_if_not_launched
dedent|''
name|'def'
name|'test_delete_server_instance_if_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'reclaim_instance_interval'
op|'='
number|'3600'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'fake_get'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instance_destroy_mock
name|'def'
name|'instance_destroy_mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
name|'deleted_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'return'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'deleted_at'
op|'='
name|'deleted_at'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'instance_destroy_mock'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
comment|'# delete() should be called for instance which has never been active,'
nl|'\n'
comment|'# even if reclaim_instance_interval has been set.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerRebuildInstanceTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerRebuildInstanceTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|image_uuid
indent|'    '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
DECL|variable|image_href
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerRebuildInstanceTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
name|'ctrl'
op|','
name|'ctxt'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'uuid'
op|'=='
string|"'test_inst'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
name|'explanation'
op|'='
string|"'fakeout'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'fakes'
op|'.'
name|'stub_instance_obj'
op|'('
name|'None'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'useFixture'
op|'('
nl|'\n'
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.api.openstack.compute.servers.'"
nl|'\n'
string|"'ServersController._get_instance'"
op|','
nl|'\n'
name|'fake_get'
op|')'
op|')'
newline|'\n'
name|'fake_get'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'rebuild'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'new_name'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_href'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/a/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_name_with_spaces_in_the_middle
dedent|''
name|'def'
name|'test_rebuild_instance_name_with_spaces_in_the_middle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'abc   def'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_blank_metadata_key
dedent|''
name|'def'
name|'test_rebuild_instance_with_blank_metadata_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"''"
op|']'
op|'='
string|"'world'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_metadata_key_too_long
dedent|''
name|'def'
name|'test_rebuild_instance_with_metadata_key_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|']'
op|'='
string|"'world'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_metadata_value_too_long
dedent|''
name|'def'
name|'test_rebuild_instance_with_metadata_value_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'key1'"
op|']'
op|'='
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_metadata_value_not_string
dedent|''
name|'def'
name|'test_rebuild_instance_with_metadata_value_not_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'key1'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_fails_when_min_ram_too_small
dedent|''
name|'def'
name|'test_rebuild_instance_fails_when_min_ram_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make min_ram larger than our instance ram size'
nl|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'properties'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
name|'min_ram'
op|'='
string|'"4096"'
op|','
name|'min_disk'
op|'='
string|'"10"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_fails_when_min_disk_too_small
dedent|''
name|'def'
name|'test_rebuild_instance_fails_when_min_disk_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make min_disk larger than our instance disk size'
nl|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'properties'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
name|'min_ram'
op|'='
string|'"128"'
op|','
name|'min_disk'
op|'='
string|'"100000"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_image_too_large
dedent|''
name|'def'
name|'test_rebuild_instance_image_too_large'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make image size larger than our instance disk size'
nl|'\n'
indent|'        '
name|'size'
op|'='
name|'str'
op|'('
number|'1000'
op|'*'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_image
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'size'
op|'='
name|'size'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_name_all_blank
dedent|''
name|'def'
name|'test_rebuild_instance_name_all_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
name|'status'
op|'='
string|"'active'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'     '"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_deleted_image
dedent|''
name|'def'
name|'test_rebuild_instance_with_deleted_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'DELETED'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_onset_file_limit_over_quota
dedent|''
name|'def'
name|'test_rebuild_instance_onset_file_limit_over_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
name|'status'
op|'='
string|"'active'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_get_image'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'compute_api'
op|','
string|"'rebuild'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'OnsetFileLimitExceeded'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'show_mock'
op|','
name|'rebuild_mock'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_bad_personality
dedent|''
dedent|''
name|'def'
name|'test_rebuild_bad_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
nl|'\n'
string|'"rebuild"'
op|':'
op|'{'
nl|'\n'
string|'"imageRef"'
op|':'
name|'self'
op|'.'
name|'image_href'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/path/to/file"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"INVALID b64"'
op|','
nl|'\n'
op|'}'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_personality
dedent|''
name|'def'
name|'test_rebuild_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
nl|'\n'
string|'"rebuild"'
op|':'
op|'{'
nl|'\n'
string|'"imageRef"'
op|':'
name|'self'
op|'.'
name|'image_href'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/path/to/file"'
op|','
nl|'\n'
string|'"contents"'
op|':'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|'"Test String"'
op|')'
op|','
nl|'\n'
op|'}'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
nl|'\n'
name|'body'
op|'='
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'personality'"
op|','
name|'body'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'start'"
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'start'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_policy_failed
dedent|''
name|'def'
name|'test_start_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"os_compute_api:servers:start"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:non_fake"'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rules'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"os_compute_api:servers:start"'
op|','
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_not_ready
dedent|''
name|'def'
name|'test_start_not_ready'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'start'"
op|','
name|'fake_start_stop_not_ready'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_locked_server
dedent|''
name|'def'
name|'test_start_locked_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'start'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_actions_to_locked_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_invalid
dedent|''
name|'def'
name|'test_start_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'start'"
op|','
name|'fake_start_stop_invalid_state'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'stop'"
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'stop'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'stop'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_policy_failed
dedent|''
name|'def'
name|'test_stop_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"os_compute_api:servers:stop"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:non_fake"'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rules'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'stop'
op|'='
string|"''"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"os_compute_api:servers:stop"'
op|','
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_not_ready
dedent|''
name|'def'
name|'test_stop_not_ready'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'stop'"
op|','
name|'fake_start_stop_not_ready'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'stop'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_locked_server
dedent|''
name|'def'
name|'test_stop_locked_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'stop'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_actions_to_locked_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'stop'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_invalid_state
dedent|''
name|'def'
name|'test_stop_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'stop'"
op|','
name|'fake_start_stop_invalid_state'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/action'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_with_bogus_id
dedent|''
name|'def'
name|'test_start_with_bogus_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fake_instance_get_by_uuid_not_found'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/test_inst/action'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'start'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
name|'req'
op|','
string|"'test_inst'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_with_bogus_id
dedent|''
name|'def'
name|'test_stop_with_bogus_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fake_instance_get_by_uuid_not_found'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/test_inst/action'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'stop'
op|'='
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
name|'req'
op|','
string|"'test_inst'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerUpdateTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerUpdateTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_get_request
indent|'    '
name|'def'
name|'_get_request'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'options'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'options'
op|':'
newline|'\n'
indent|'            '
name|'fake_get'
op|'='
name|'fakes'
op|'.'
name|'fake_compute_get'
op|'('
op|'**'
name|'options'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'lambda'
name|'api'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_all_attributes
dedent|''
name|'def'
name|'test_update_server_all_attributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server_test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name
dedent|''
name|'def'
name|'test_update_server_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server_test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_too_long
dedent|''
name|'def'
name|'test_update_server_name_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'x'"
op|'*'
number|'256'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_all_blank_spaces
dedent|''
name|'def'
name|'test_update_server_name_all_blank_spaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"' '"
op|'*'
number|'64'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_with_spaces_in_the_middle
dedent|''
name|'def'
name|'test_update_server_name_with_spaces_in_the_middle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'abc   def'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_admin_password_extra_arg
dedent|''
name|'def'
name|'test_update_server_admin_password_extra_arg'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'admin_password'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_host_id
dedent|''
name|'def'
name|'test_update_server_host_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'host_id'
op|'='
string|"'123'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_not_found
dedent|''
name|'def'
name|'test_update_server_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get
indent|'        '
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_get'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_not_found_on_update
dedent|''
name|'def'
name|'test_update_server_not_found_on_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_update
indent|'        '
name|'def'
name|'fake_update'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
name|'fake_update'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_policy_fail
dedent|''
name|'def'
name|'test_update_server_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
string|"'compute:update'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerStatusTest
dedent|''
dedent|''
name|'class'
name|'ServerStatusTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerStatusTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_with_state
dedent|''
name|'def'
name|'_get_with_state'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'request'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_active
dedent|''
name|'def'
name|'test_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REBOOT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard
dedent|''
name|'def'
name|'test_reboot_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING_HARD'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'HARD_REBOOT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_resize_policy_fail
dedent|''
name|'def'
name|'test_reboot_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_server
indent|'        '
name|'def'
name|'fake_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'_get_server'"
op|','
name|'fake_get_server'
op|')'
newline|'\n'
nl|'\n'
name|'rule'
op|'='
op|'{'
string|"'compute:reboot'"
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1234/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_reboot'
op|','
name|'req'
op|','
string|"'1234'"
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'reboot'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'HARD'"
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild
dedent|''
name|'def'
name|'test_rebuild'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBUILDING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REBUILD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_error
dedent|''
name|'def'
name|'test_rebuild_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'ERROR'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize
dedent|''
name|'def'
name|'test_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize_policy_fail
dedent|''
name|'def'
name|'test_confirm_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_server
indent|'        '
name|'def'
name|'fake_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'_get_server'"
op|','
name|'fake_get_server'
op|')'
newline|'\n'
nl|'\n'
name|'rule'
op|'='
op|'{'
string|"'compute:confirm_resize'"
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1234/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_confirm_resize'
op|','
name|'req'
op|','
string|"'1234'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_verify_resize
dedent|''
name|'def'
name|'test_verify_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'VERIFY_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize
dedent|''
name|'def'
name|'test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REVERT_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_policy_fail
dedent|''
name|'def'
name|'test_revert_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_server
indent|'        '
name|'def'
name|'fake_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'_get_server'"
op|','
name|'fake_get_server'
op|')'
newline|'\n'
nl|'\n'
name|'rule'
op|'='
op|'{'
string|"'compute:revert_resize'"
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rule'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1234/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_revert_resize'
op|','
name|'req'
op|','
string|"'1234'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_password_update
dedent|''
name|'def'
name|'test_password_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'PASSWORD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stopped
dedent|''
name|'def'
name|'test_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'SHUTOFF'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerCreateTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerCreateTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|image_uuid
indent|'    '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
DECL|variable|flavor_ref
name|'flavor_ref'
op|'='
string|"'http://localhost/123/flavors/3'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Shared implementation for tests below that create instance."""'
newline|'\n'
name|'super'
op|'('
name|'ServersControllerCreateTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
nl|'\n'
name|'enable_instance_password'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_num'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instance_create
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst_type'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
number|'3'
op|')'
newline|'\n'
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'def_image_ref'
op|'='
string|"'http://localhost/fake/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_num'
op|'+='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'self'
op|'.'
name|'instance_cache_num'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'inst'
op|'['
string|"'display_name'"
op|']'
name|'or'
string|"'test'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'inst_type'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'inst'
op|'.'
name|'get'
op|'('
string|"'image_ref'"
op|','
name|'def_image_ref'
op|')'
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'reservation_id'"
op|':'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|','
nl|'\n'
string|'"created_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"updated_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'11'
op|','
number|'11'
op|','
number|'11'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"config_drive"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"fixed_ips"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"task_state"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"vm_state"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"root_device_name"'
op|':'
name|'inst'
op|'.'
name|'get'
op|'('
string|"'root_device_name'"
op|','
string|"'vda'"
op|')'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'['
name|'instance'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|function|instance_get
dedent|''
name|'def'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Stub for compute/api create() pulling in instance after\n            scheduling\n            """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'['
name|'instance_id'
op|']'
newline|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'uuid'
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|function|server_update_and_get_original
dedent|''
name|'def'
name|'server_update_and_get_original'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'params'
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'instance_uuid'
op|']'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_method
dedent|''
name|'def'
name|'fake_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|project_get_networks
dedent|''
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'1'"
op|','
name|'host'
op|'='
string|"'localhost'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'uuid'
op|','
string|"'uuid4'"
op|','
name|'fake_gen_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'project_get_networks'"
op|','
nl|'\n'
name|'project_get_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|','
name|'instance_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_system_metadata_update'"
op|','
nl|'\n'
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
name|'instance_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update'"
op|','
name|'instance_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'server_update_and_get_original'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'manager'
op|'.'
name|'VlanManager'
op|','
string|"'allocate_fixed_ip'"
op|','
nl|'\n'
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'self'
op|'.'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"MQ=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'delete_on_termination'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11111111-1111-1111-1111-111111111111'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
DECL|member|_check_admin_password_len
dedent|''
name|'def'
name|'_check_admin_password_len'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""utility function - check server_dict for admin_password length."""'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'CONF'
op|'.'
name|'password_length'
op|','
nl|'\n'
name|'len'
op|'('
name|'server_dict'
op|'['
string|'"adminPass"'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_admin_password_missing
dedent|''
name|'def'
name|'_check_admin_password_missing'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""utility function - check server_dict for admin_password absence."""'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|'"adminPass"'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_instance
dedent|''
name|'def'
name|'_test_create_instance'
op|'('
name|'self'
op|','
name|'flavor'
op|'='
number|'2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_password_len'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_private_flavor
dedent|''
name|'def'
name|'test_create_instance_private_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'1324'"
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'0.5'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'flavor_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'_test_create_instance'
op|','
nl|'\n'
name|'flavor'
op|'='
number|'1324'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_bad_image_href
dedent|''
name|'def'
name|'test_create_server_bad_image_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'min_count'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
op|','
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
comment|'# TODO(cyeoh): bp-v3-api-unittests'
nl|'\n'
comment|'# This needs to be ported to the os-networks extension tests'
nl|'\n'
comment|'# def test_create_server_with_invalid_networks_parameter(self):'
nl|'\n'
comment|"#     self.ext_mgr.extensions = {'os-networks': 'fake'}"
nl|'\n'
comment|"#     image_href = '76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
nl|'\n'
comment|"#     flavor_ref = 'http://localhost/123/flavors/3'"
nl|'\n'
comment|'#     body = {'
nl|'\n'
comment|"#         'server': {"
nl|'\n'
comment|"#         'name': 'server_test',"
nl|'\n'
comment|"#         'imageRef': image_href,"
nl|'\n'
comment|"#         'flavorRef': flavor_ref,"
nl|'\n'
comment|"#         'networks': {'uuid': '76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'},"
nl|'\n'
comment|'#         }'
nl|'\n'
comment|'#     }'
nl|'\n'
comment|"#     req = fakes.HTTPRequest.blank('/fake/servers')"
nl|'\n'
comment|"#     req.method = 'POST'"
nl|'\n'
comment|'#     req.body = jsonutils.dumps(body)'
nl|'\n'
comment|'#     req.headers["content-type"] = "application/json"'
nl|'\n'
comment|'#     self.assertRaises(webob.exc.HTTPBadRequest,'
nl|'\n'
comment|'#                       self.controller.create,'
nl|'\n'
comment|'#                       req,'
nl|'\n'
comment|'#                       body)'
nl|'\n'
nl|'\n'
DECL|member|test_create_server_with_deleted_image
dedent|''
name|'def'
name|'test_create_server_with_deleted_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get the fake image service so we can set the status to deleted'
nl|'\n'
indent|'        '
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
op|'='
name|'glance'
op|'.'
name|'get_remote_image_service'
op|'('
nl|'\n'
name|'context'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'image_uuid'
op|','
op|'{'
string|"'status'"
op|':'
string|"'DELETED'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'image_service'
op|'.'
name|'update'
op|','
name|'context'
op|','
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'with'
name|'testtools'
op|'.'
name|'ExpectedException'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
string|"'Image 76fa36fc-c930-4bf3-8c8a-ea2a2420deb6 is not active.'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_image_too_large
dedent|''
dedent|''
name|'def'
name|'test_create_server_image_too_large'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get the fake image service so we can update the size of the image'
nl|'\n'
indent|'        '
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
op|'='
name|'glance'
op|'.'
name|'get_remote_image_service'
op|'('
nl|'\n'
name|'context'
op|','
name|'self'
op|'.'
name|'image_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
name|'orig_size'
op|'='
name|'image'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'new_size'
op|'='
name|'str'
op|'('
number|'1000'
op|'*'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
op|')'
newline|'\n'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'self'
op|'.'
name|'image_uuid'
op|','
op|'{'
string|"'size'"
op|':'
name|'new_size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'image_service'
op|'.'
name|'update'
op|','
name|'context'
op|','
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
op|'{'
string|"'size'"
op|':'
name|'orig_size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'testtools'
op|'.'
name|'ExpectedException'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
string|'"Flavor\'s disk is too small for requested image."'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_image_ref_is_bookmark
dedent|''
dedent|''
name|'def'
name|'test_create_instance_image_ref_is_bookmark'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_image_ref_is_invalid
dedent|''
name|'def'
name|'test_create_instance_image_ref_is_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'this_is_not_a_valid_uuid'"
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/fake/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/fake/flavors/3'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_no_key_pair
dedent|''
name|'def'
name|'test_create_instance_no_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'have_key_pair'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_extra
dedent|''
name|'def'
name|'_test_create_extra'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'no_image'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'if'
name|'no_image'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'pop'
op|'('
string|"'imageRef'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
comment|'# TODO(cyeoh): bp-v3-api-unittests'
nl|'\n'
comment|'# This needs to be ported to the os-keypairs extension tests'
nl|'\n'
comment|'# def test_create_instance_with_keypairs_enabled(self):'
nl|'\n'
comment|"#     self.ext_mgr.extensions = {'os-keypairs': 'fake'}"
nl|'\n'
comment|"#     key_name = 'green'"
nl|'\n'
comment|'#'
nl|'\n'
comment|"#     params = {'key_name': key_name}"
nl|'\n'
comment|'#     old_create = compute_api.API.create'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     # NOTE(sdague): key pair goes back to the database,'
nl|'\n'
comment|'#     # so we need to stub it out for tests'
nl|'\n'
comment|'#     def key_pair_get(context, user_id, name):'
nl|'\n'
comment|"#         return {'public_key': 'FAKE_KEY',"
nl|'\n'
comment|"#                 'fingerprint': 'FAKE_FINGERPRINT',"
nl|'\n'
comment|"#                 'name': name}"
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     def create(*args, **kwargs):'
nl|'\n'
comment|"#         self.assertEqual(kwargs['key_name'], key_name)"
nl|'\n'
comment|'#         return old_create(*args, **kwargs)'
nl|'\n'
comment|'#'
nl|'\n'
comment|"#     self.stubs.Set(db, 'key_pair_get', key_pair_get)"
nl|'\n'
comment|"#     self.stubs.Set(compute_api.API, 'create', create)"
nl|'\n'
comment|'#     self._test_create_extra(params)'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# TODO(cyeoh): bp-v3-api-unittests'
nl|'\n'
comment|'# This needs to be ported to the os-networks extension tests'
nl|'\n'
comment|'# def test_create_instance_with_networks_enabled(self):'
nl|'\n'
comment|"#     self.ext_mgr.extensions = {'os-networks': 'fake'}"
nl|'\n'
comment|"#     net_uuid = '76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
nl|'\n'
comment|"#     requested_networks = [{'uuid': net_uuid}]"
nl|'\n'
comment|"#     params = {'networks': requested_networks}"
nl|'\n'
comment|'#     old_create = compute_api.API.create'
nl|'\n'
nl|'\n'
comment|'#     def create(*args, **kwargs):'
nl|'\n'
comment|"#         result = [('76fa36fc-c930-4bf3-8c8a-ea2a2420deb6', None)]"
nl|'\n'
comment|"#         self.assertEqual(kwargs['requested_networks'], result)"
nl|'\n'
comment|'#         return old_create(*args, **kwargs)'
nl|'\n'
nl|'\n'
comment|"#     self.stubs.Set(compute_api.API, 'create', create)"
nl|'\n'
comment|'#     self._test_create_extra(params)'
nl|'\n'
nl|'\n'
DECL|member|test_create_instance_with_port_with_no_fixed_ips
dedent|''
name|'def'
name|'test_create_instance_with_port_with_no_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'port_id'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port_id'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PortRequiresFixedIP'
op|'('
name|'port_id'
op|'='
name|'port_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_raise_user_data_too_large
name|'def'
name|'test_create_instance_raise_user_data_too_large'
op|'('
name|'self'
op|','
name|'mock_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_create'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceUserDataTooLarge'
op|'('
nl|'\n'
name|'maxsize'
op|'='
number|'1'
op|','
name|'length'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_network_with_no_subnet
dedent|''
name|'def'
name|'test_create_instance_with_network_with_no_subnet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkRequiresSubnet'
op|'('
name|'network_uuid'
op|'='
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_non_unique_secgroup_name
dedent|''
name|'def'
name|'test_create_instance_with_non_unique_secgroup_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
string|"'dup'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'dup'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoUniqueMatch'
op|'('
string|'"No Unique match found for ..."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_networks_disabled_neutronv2
dedent|''
name|'def'
name|'test_create_instance_with_networks_disabled_neutronv2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'net_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'net_uuid'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
op|'['
op|'('
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'kwargs'
op|'['
string|"'requested_networks'"
op|']'
op|'.'
name|'as_tuples'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_networks_disabled
dedent|''
name|'def'
name|'test_create_instance_with_networks_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'net_uuid'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'requested_networks'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_with_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test with admin passwords disabled See lp bug 921814'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_password_missing'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_name_too_long
dedent|''
name|'def'
name|'test_create_instance_name_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'X'"
op|'*'
number|'256'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_name_with_spaces_in_the_middle
dedent|''
name|'def'
name|'test_create_instance_name_with_spaces_in_the_middle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'abc    def'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_name_all_blank_spaces
dedent|''
name|'def'
name|'test_create_instance_name_all_blank_spaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/fake/flavors/3'"
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"' '"
op|'*'
number|'64'
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'image_href'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance
dedent|''
name|'def'
name|'test_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_password_len'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_extension_create_exception
dedent|''
name|'def'
name|'test_create_instance_extension_create_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_keypair_server_create
indent|'        '
name|'def'
name|'fake_keypair_server_create'
op|'('
name|'self'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'create_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'KeyError'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'keypairs'
op|'.'
name|'Keypairs'
op|','
string|"'server_create'"
op|','
nl|'\n'
name|'fake_keypair_server_create'
op|')'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/123/flavors/3'"
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'image_href'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPInternalServerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_password_missing'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hardware.numa_get_constraints'"
op|')'
newline|'\n'
DECL|member|_test_create_instance_numa_topology_wrong
name|'def'
name|'_test_create_instance_numa_topology_wrong'
op|'('
name|'self'
op|','
name|'exc'
op|','
nl|'\n'
name|'numa_constraints_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'numa_constraints_mock'
op|'.'
name|'side_effect'
op|'='
name|'exc'
op|'('
op|'**'
op|'{'
string|"'name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cpunum'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'cpumax'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'cpuset'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'memsize'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memtotal'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_numa_topology_wrong
dedent|''
name|'def'
name|'test_create_instance_numa_topology_wrong'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'exc'
name|'in'
op|'['
name|'exception'
op|'.'
name|'ImageNUMATopologyIncomplete'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyForbidden'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyAsymmetric'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyCPUOutOfRange'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyCPUDuplicates'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyCPUsUnassigned'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ImageNUMATopologyMemoryOutOfRange'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_create_instance_numa_topology_wrong'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_too_much_metadata
dedent|''
dedent|''
name|'def'
name|'test_create_instance_too_much_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'vote'"
op|']'
op|'='
string|"'fiddletown'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_key_too_long
dedent|''
name|'def'
name|'test_create_instance_metadata_key_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|':'
string|"'12345'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_value_too_long
dedent|''
name|'def'
name|'test_create_instance_metadata_value_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"'key1'"
op|':'
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_key_blank
dedent|''
name|'def'
name|'test_create_instance_metadata_key_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"''"
op|':'
string|"'abcd'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_not_dict
dedent|''
name|'def'
name|'test_create_instance_metadata_not_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
string|"'string'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_key_not_string
dedent|''
name|'def'
name|'test_create_instance_metadata_key_not_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
number|'1'
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_value_not_string
dedent|''
name|'def'
name|'test_create_instance_metadata_value_not_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"'test'"
op|':'
op|'['
string|"'a'"
op|','
string|"'list'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_user_data_malformed_bad_request
dedent|''
name|'def'
name|'test_create_user_data_malformed_bad_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'user_data'"
op|':'
string|"'u1234'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_key_name
dedent|''
name|'def'
name|'test_create_instance_invalid_key_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'key_name'"
op|']'
op|'='
string|"'nonexistentkey'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_valid_key_name
dedent|''
name|'def'
name|'test_create_instance_valid_key_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'key_name'"
op|']'
op|'='
string|"'key'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'res'
op|'['
string|'"server"'
op|']'
op|'['
string|'"id"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_password_len'
op|'('
name|'res'
op|'['
string|'"server"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_flavor_href
dedent|''
name|'def'
name|'test_create_instance_invalid_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v2/flavors/asdf'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_flavor_id_int
dedent|''
name|'def'
name|'test_create_instance_invalid_flavor_id_int'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_flavor_id_empty
dedent|''
name|'def'
name|'test_create_instance_invalid_flavor_id_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_ref'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_flavor_href
dedent|''
name|'def'
name|'test_create_instance_bad_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v2/flavors/17'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_href
dedent|''
name|'def'
name|'test_create_instance_bad_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'asdf'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_local_href
dedent|''
name|'def'
name|'test_create_instance_local_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_password
dedent|''
name|'def'
name|'test_create_instance_admin_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"'testpass'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'['
string|"'adminPass'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_password_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_admin_password_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"'testpass'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'server'"
op|','
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'adminPass'"
op|','
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_password_empty
dedent|''
name|'def'
name|'test_create_instance_admin_password_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
comment|"# The fact that the action doesn't raise is enough validation"
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_location
dedent|''
name|'def'
name|'test_create_location'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'selfhref'
op|'='
string|"'http://localhost/v2/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'robj'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'robj'
op|'['
string|"'Location'"
op|']'
op|','
name|'selfhref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_instance_above_quota
dedent|''
name|'def'
name|'_do_test_create_instance_above_quota'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'allowed'
op|','
name|'quota'
op|','
nl|'\n'
name|'expected_msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'allowed'
op|','
name|'quota'
op|','
name|'resource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'expected quota to be exceeded'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'explanation'
op|','
name|'expected_msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_instances
dedent|''
dedent|''
name|'def'
name|'test_create_instance_above_quota_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
op|'('
string|"'Quota exceeded for instances: Requested 1, but'"
nl|'\n'
string|"' already used 10 of 10 instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'instances'"
op|','
number|'0'
op|','
number|'10'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_ram
dedent|''
name|'def'
name|'test_create_instance_above_quota_ram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
op|'('
string|"'Quota exceeded for ram: Requested 4096, but'"
nl|'\n'
string|"' already used 8192 of 10240 ram'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'ram'"
op|','
number|'2048'
op|','
number|'10'
op|'*'
number|'1024'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_cores
dedent|''
name|'def'
name|'test_create_instance_above_quota_cores'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
op|'('
string|"'Quota exceeded for cores: Requested 2, but'"
nl|'\n'
string|"' already used 9 of 10 cores'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'cores'"
op|','
number|'1'
op|','
number|'10'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_server_group_members
dedent|''
name|'def'
name|'test_create_instance_above_quota_server_group_members'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'fake_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'fake_group'
op|'.'
name|'project_id'
op|'='
name|'ctxt'
op|'.'
name|'project_id'
newline|'\n'
name|'fake_group'
op|'.'
name|'user_id'
op|'='
name|'ctxt'
op|'.'
name|'user_id'
newline|'\n'
name|'fake_group'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_count
name|'def'
name|'fake_count'
op|'('
name|'context'
op|','
name|'name'
op|','
name|'group'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'name'
op|','
string|'"server_group_members"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'uuid'
op|','
name|'fake_group'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'user_id'
op|')'
newline|'\n'
name|'return'
number|'10'
newline|'\n'
nl|'\n'
DECL|function|fake_limit_check
dedent|''
name|'def'
name|'fake_limit_check'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'server_group_members'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_destroy
dedent|''
dedent|''
name|'def'
name|'fake_instance_destroy'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'constraint'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fakes'
op|'.'
name|'QUOTAS'
op|','
string|"'count'"
op|','
name|'fake_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fakes'
op|'.'
name|'QUOTAS'
op|','
string|"'limit_check'"
op|','
name|'fake_limit_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'fake_instance_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'os:scheduler_hints'"
op|']'
op|'='
op|'{'
string|"'group'"
op|':'
name|'fake_group'
op|'.'
name|'uuid'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected_msg'
op|'='
string|'"Quota exceeded, too many servers in group"'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'expected quota to be exceeded'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'explanation'
op|','
name|'expected_msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_group_hint
dedent|''
dedent|''
name|'def'
name|'test_create_instance_with_group_hint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'test_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'test_group'
op|'.'
name|'project_id'
op|'='
name|'ctxt'
op|'.'
name|'project_id'
newline|'\n'
name|'test_group'
op|'.'
name|'user_id'
op|'='
name|'ctxt'
op|'.'
name|'user_id'
newline|'\n'
name|'test_group'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_destroy
name|'def'
name|'fake_instance_destroy'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'constraint'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'fake_instance_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'os:scheduler_hints'"
op|']'
op|'='
op|'{'
string|"'group'"
op|':'
name|'test_group'
op|'.'
name|'uuid'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
name|'test_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'.'
name|'get_by_uuid'
op|'('
name|'ctxt'
op|','
name|'test_group'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|','
name|'test_group'
op|'.'
name|'members'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neutronv2_port_in_use
dedent|''
name|'def'
name|'test_create_instance_with_neutronv2_port_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PortInUse'
op|'('
name|'port_id'
op|'='
name|'port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_public_network_non_admin
name|'def'
name|'test_create_instance_public_network_non_admin'
op|'('
name|'self'
op|','
name|'mock_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'public_network_uuid'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'public_network_uuid'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'mock_create'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ExternalNetworkAttachForbidden'
op|'('
nl|'\n'
name|'network_uuid'
op|'='
name|'public_network_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_multiple_instance_with_specified_ip_neutronv2
name|'def'
name|'test_create_multiple_instance_with_specified_ip_neutronv2'
op|'('
name|'self'
op|','
nl|'\n'
name|'_api_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_api_mock'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidFixedIpAndMaxCountRequest'
op|'('
nl|'\n'
name|'reason'
op|'='
string|'""'
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'address'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'fixed_ip'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instance_with_neutronv2_port
dedent|''
name|'def'
name|'test_create_multiple_instance_with_neutronv2_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
op|'('
string|'"Unable to launch multiple instances with"'
nl|'\n'
string|'" a single configured port ID. Please launch your"'
nl|'\n'
string|'" instance one by one with different ports."'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'MultiplePortsNotApplicable'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neutronv2_not_found_network
dedent|''
name|'def'
name|'test_create_instance_with_neutronv2_not_found_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neturonv2_network_duplicated
dedent|''
name|'def'
name|'test_create_instance_with_neturonv2_network_duplicated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|','
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkDuplicated'
op|'('
name|'network_id'
op|'='
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neutronv2_port_not_found
dedent|''
name|'def'
name|'test_create_instance_with_neutronv2_port_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PortNotFound'
op|'('
name|'port_id'
op|'='
name|'port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_with_network_ambiguous
name|'def'
name|'test_create_instance_with_network_ambiguous'
op|'('
name|'self'
op|','
name|'mock_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_create'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NetworkAmbiguous'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceExists'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'instance-name'"
op|')'
op|')'
newline|'\n'
DECL|member|test_create_instance_raise_instance_exists
name|'def'
name|'test_create_instance_raise_instance_exists'
op|'('
name|'self'
op|','
name|'mock_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_invalid_personality
name|'def'
name|'test_create_instance_invalid_personality'
op|'('
name|'self'
op|','
name|'mock_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'codec'
op|'='
string|"'utf8'"
newline|'\n'
name|'content'
op|'='
string|"'b25zLiINCg0KLVJpY2hhcmQgQ$$%QQmFjaA=='"
newline|'\n'
name|'start_position'
op|'='
number|'19'
newline|'\n'
name|'end_position'
op|'='
number|'20'
newline|'\n'
name|'msg'
op|'='
string|"'invalid start byte'"
newline|'\n'
name|'mock_create'
op|'.'
name|'side_effect'
op|'='
name|'UnicodeDecodeError'
op|'('
name|'codec'
op|','
name|'content'
op|','
nl|'\n'
name|'start_position'
op|','
nl|'\n'
name|'end_position'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"b25zLiINCg0KLVJpY2hhcmQgQ$$%QQmFjaA=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_extra_personality_arg
dedent|''
name|'def'
name|'test_create_instance_with_extra_personality_arg'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"b25zLiINCg0KLVJpY2hhcmQgQ$$%QQmFjaA=="'
op|','
nl|'\n'
string|'"extra_arg"'
op|':'
string|'"extra value"'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerCreateTestWithMock
dedent|''
dedent|''
name|'class'
name|'ServersControllerCreateTestWithMock'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|image_uuid
indent|'    '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
DECL|variable|flavor_ref
name|'flavor_ref'
op|'='
string|"'http://localhost/123/flavors/3'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Shared implementation for tests below that create instance."""'
newline|'\n'
name|'super'
op|'('
name|'ServersControllerCreateTestWithMock'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
nl|'\n'
name|'enable_instance_password'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_num'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'self'
op|'.'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
DECL|member|_test_create_extra
dedent|''
name|'def'
name|'_test_create_extra'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'no_image'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'if'
name|'no_image'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'pop'
op|'('
string|"'imageRef'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_with_neutronv2_fixed_ip_already_in_use
name|'def'
name|'test_create_instance_with_neutronv2_fixed_ip_already_in_use'
op|'('
name|'self'
op|','
nl|'\n'
name|'create_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'address'
op|'='
string|"'10.0.2.3'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'fixed_ip'"
op|':'
name|'address'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'create_mock'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'FixedIpAlreadyInUse'
op|'('
nl|'\n'
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'create_mock'
op|'.'
name|'call_args_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|')'
newline|'\n'
DECL|member|test_create_instance_with_neutronv2_invalid_fixed_ip
name|'def'
name|'test_create_instance_with_neutronv2_invalid_fixed_ip'
op|'('
name|'self'
op|','
nl|'\n'
name|'create_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'address'
op|'='
string|"'999.0.2.3'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'fixed_ip'"
op|':'
name|'address'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'create_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidVolume'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
DECL|member|test_create_instance_with_invalid_volume_error
name|'def'
name|'test_create_instance_with_invalid_volume_error'
op|'('
name|'self'
op|','
name|'create_mock'
op|')'
op|':'
newline|'\n'
comment|'# Tests that InvalidVolume is translated to a 400 error.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersViewBuilderTest
dedent|''
dedent|''
name|'class'
name|'ServersViewBuilderTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersViewBuilderTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'host'"
op|','
string|"'localhost'"
op|','
name|'group'
op|'='
string|"'glance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'nw_cache_info'
op|'='
name|'self'
op|'.'
name|'_generate_nw_cache_info'
op|'('
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'image_ref'
op|'='
string|'"5"'
op|','
nl|'\n'
name|'uuid'
op|'='
string|'"deadbeef-feed-edee-beef-d0ea7beefedd"'
op|','
nl|'\n'
name|'display_name'
op|'='
string|'"test_server"'
op|','
nl|'\n'
name|'include_fake_metadata'
op|'='
name|'False'
op|','
nl|'\n'
name|'nw_cache'
op|'='
name|'nw_cache_info'
op|')'
newline|'\n'
nl|'\n'
name|'privates'
op|'='
op|'['
string|"'172.19.0.1'"
op|']'
newline|'\n'
name|'publics'
op|'='
op|'['
string|"'192.168.0.3'"
op|']'
newline|'\n'
name|'public6s'
op|'='
op|'['
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|nw_info
name|'def'
name|'nw_info'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
name|'None'
op|','
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'publics'
op|']'
op|','
nl|'\n'
string|"'ip6s'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'public6s'
op|']'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'None'
op|','
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'privates'
op|']'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'view_builder'
op|'='
name|'views'
op|'.'
name|'servers'
op|'.'
name|'ViewBuilderV21'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|'"/fake"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'instance_obj'
op|'.'
name|'INSTANCE_DEFAULT_FIELDS'
op|','
nl|'\n'
op|'**'
name|'db_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'self_link'
op|'='
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'bookmark_link'
op|'='
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
DECL|member|_generate_nw_cache_info
dedent|''
name|'def'
name|'_generate_nw_cache_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ipv4'
op|'='
op|'('
string|"'192.168.1.100'"
op|','
string|"'192.168.2.100'"
op|','
string|"'192.168.3.100'"
op|')'
newline|'\n'
name|'fixed_ipv6'
op|'='
op|'('
string|"'2001:db8:0:1::1'"
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|function|_ip
name|'def'
name|'_ip'
op|'('
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'nw_cache'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'fixed_ipv4'
op|'['
number|'0'
op|']'
op|')'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'b33f::/64'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'fixed_ipv6'
op|'['
number|'0'
op|']'
op|')'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.2.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'fixed_ipv4'
op|'['
number|'1'
op|']'
op|')'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test2'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.3.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'fixed_ipv4'
op|'['
number|'2'
op|']'
op|')'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'return'
name|'nw_cache'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_valid_instance_type
dedent|''
name|'def'
name|'test_get_flavor_valid_instance_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
op|'{'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'_get_flavor'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server
dedent|''
name|'def'
name|'test_build_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'basic'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_with_project_id
dedent|''
name|'def'
name|'test_build_server_with_project_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'basic'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail
dedent|''
name|'def'
name|'test_build_server_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.2.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'test2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.3.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault
dedent|''
name|'def'
name|'test_build_server_detail_with_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ERROR"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.2.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'test2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.3.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"fault"'
op|':'
op|'{'
nl|'\n'
string|'"code"'
op|':'
number|'404'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"HTTPNotFound"'
op|','
nl|'\n'
string|'"details"'
op|':'
string|'"Stock details for test"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_that_has_been_deleted
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_that_has_been_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'fault'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|'"No valid host was found"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fault'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"No valid host was found"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
comment|'# Regardless of vm_state deleted servers sholud be DELETED'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"DELETED"'
op|','
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_no_details_not_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_no_details_not_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'Stock details for test'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_no_details_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_no_details_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|','
nl|'\n'
name|'details'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_but_active
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_but_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'progress'"
op|']'
op|'='
number|'100'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'fault'"
op|','
name|'output'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_active_status
dedent|''
name|'def'
name|'test_build_server_detail_active_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# set the power state of the instance to running'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'progress'"
op|']'
op|'='
number|'100'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.2.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'test2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.3.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_metadata
dedent|''
name|'def'
name|'test_build_server_detail_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'metadata'
op|'='
op|'['
op|']'
newline|'\n'
name|'metadata'
op|'.'
name|'append'
op|'('
name|'models'
op|'.'
name|'InstanceMetadata'
op|'('
name|'key'
op|'='
string|'"Open"'
op|','
name|'value'
op|'='
string|'"Stack"'
op|')'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'nova_utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.2.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'test2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.3.100'"
op|','
nl|'\n'
string|"'OS-EXT-IPS:type'"
op|':'
string|"'fixed'"
op|','
nl|'\n'
string|"'OS-EXT-IPS-MAC:mac_addr'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
string|'"Open"'
op|':'
string|'"Stack"'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersAllExtensionsTestCase
dedent|''
dedent|''
name|'class'
name|'ServersAllExtensionsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Servers tests using default API router with all extensions enabled.\n\n    The intent here is to catch cases where extensions end up throwing\n    an exception because of a malformed request before the core API\n    gets a chance to validate the request and return a 422 response.\n\n    For example, AccessIPsController extends servers.Controller::\n\n        |   @wsgi.extends\n        |   def create(self, req, resp_obj, body):\n        |       context = req.environ[\'nova.context\']\n        |       if authorize(context) and \'server\' in resp_obj.obj:\n        |           resp_obj.attach(xml=AccessIPTemplate())\n        |           server = resp_obj.obj[\'server\']\n        |           self._extend_server(req, server)\n\n    we want to ensure that the extension isn\'t barfing on an invalid\n    body.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersAllExtensionsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouterV21'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_missing_server
dedent|''
name|'def'
name|'test_create_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test create with malformed body.'
nl|'\n'
nl|'\n'
DECL|function|fake_create
indent|'        '
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"Should not reach the compute API."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_missing_server
dedent|''
name|'def'
name|'test_update_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test update with malformed body.'
nl|'\n'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersInvalidRequestTestCase
dedent|''
dedent|''
name|'class'
name|'ServersInvalidRequestTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests of places we throw 400 Bad Request from."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersInvalidRequestTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_invalid_server_create
dedent|''
name|'def'
name|'_invalid_server_create'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ValidationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_no_body
dedent|''
name|'def'
name|'test_create_server_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_missing_server
dedent|''
name|'def'
name|'test_create_server_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_malformed_entity
dedent|''
name|'def'
name|'test_create_server_malformed_entity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
string|"'string'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unprocessable_server_update
dedent|''
name|'def'
name|'_unprocessable_server_update'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequestV21'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_no_body
dedent|''
name|'def'
name|'test_update_server_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_missing_server
dedent|''
name|'def'
name|'test_update_server_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_update_malformed_entity
dedent|''
name|'def'
name|'test_create_update_malformed_entity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
string|"'string'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_invalid_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeExt
dedent|''
dedent|''
name|'class'
name|'FakeExt'
op|'('
name|'extensions'
op|'.'
name|'V21APIExtensionBase'
op|')'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|'"DiskConfig"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|"'os-disk-config'"
newline|'\n'
DECL|variable|version
name|'version'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|fake_extension_point
name|'def'
name|'fake_extension_point'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_controller_extensions
dedent|''
name|'def'
name|'get_controller_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_resources
dedent|''
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServersExtensionPoint
dedent|''
dedent|''
name|'class'
name|'TestServersExtensionPoint'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServersExtensionPoint'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'extensions_whitelist'"
op|','
op|'['
string|"'os-disk-config'"
op|']'
op|','
nl|'\n'
string|"'osapi_v21'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'disk_config'
op|','
string|"'DiskConfig'"
op|','
name|'FakeExt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_load_extension_point
dedent|''
name|'def'
name|'_test_load_extension_point'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'FakeExt'
op|','
string|"'server_%s'"
op|'%'
name|'name'
op|','
nl|'\n'
name|'FakeExt'
op|'.'
name|'fake_extension_point'
op|')'
newline|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"'os-disk-config'"
op|','
nl|'\n'
name|'list'
op|'('
name|'getattr'
op|'('
name|'controller'
op|','
nl|'\n'
string|"'%s_extension_manager'"
op|'%'
name|'name'
op|')'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'obj'
op|'.'
name|'alias'
op|')'
newline|'\n'
name|'delattr'
op|'('
name|'FakeExt'
op|','
string|"'server_%s'"
op|'%'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_update_extension_point
dedent|''
name|'def'
name|'test_load_update_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_load_extension_point'
op|'('
string|"'update'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_rebuild_extension_point
dedent|''
name|'def'
name|'test_load_rebuild_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_load_extension_point'
op|'('
string|"'rebuild'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_create_extension_point
dedent|''
name|'def'
name|'test_load_create_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_load_extension_point'
op|'('
string|"'create'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_resize_extension_point
dedent|''
name|'def'
name|'test_load_resize_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_load_extension_point'
op|'('
string|"'resize'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServersExtensionSchema
dedent|''
dedent|''
name|'class'
name|'TestServersExtensionSchema'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServersExtensionSchema'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'extensions_whitelist'"
op|','
op|'['
string|"'disk_config'"
op|']'
op|','
string|"'osapi_v21'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_load_extension_schema
dedent|''
name|'def'
name|'_test_load_extension_schema'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'FakeExt'
op|','
string|"'get_server_%s_schema'"
op|'%'
name|'name'
op|','
nl|'\n'
name|'FakeExt'
op|'.'
name|'fake_extension_point'
op|')'
newline|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'controller'
op|','
string|"'%s_schema_manager'"
op|'%'
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'delattr'
op|'('
name|'FakeExt'
op|','
string|"'get_server_%s_schema'"
op|'%'
name|'name'
op|')'
newline|'\n'
name|'return'
name|'getattr'
op|'('
name|'controller'
op|','
string|"'schema_server_%s'"
op|'%'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_create_extension_point
dedent|''
name|'def'
name|'test_load_create_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The expected is the schema combination of base and keypairs'
nl|'\n'
comment|'# because of the above extensions_whitelist.'
nl|'\n'
indent|'        '
name|'expected_schema'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'servers_schema'
op|'.'
name|'base_create'
op|')'
newline|'\n'
name|'expected_schema'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'server'"
op|']'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'update'
op|'('
nl|'\n'
name|'disk_config_schema'
op|'.'
name|'server_create'
op|')'
newline|'\n'
nl|'\n'
name|'actual_schema'
op|'='
name|'self'
op|'.'
name|'_test_load_extension_schema'
op|'('
string|"'create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_schema'
op|','
name|'actual_schema'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_update_extension_point
dedent|''
name|'def'
name|'test_load_update_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# keypair extension does not contain update_server() and'
nl|'\n'
comment|'# here checks that any extension is not added to the schema.'
nl|'\n'
indent|'        '
name|'expected_schema'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'servers_schema'
op|'.'
name|'base_update'
op|')'
newline|'\n'
name|'expected_schema'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'server'"
op|']'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'update'
op|'('
nl|'\n'
name|'disk_config_schema'
op|'.'
name|'server_create'
op|')'
newline|'\n'
nl|'\n'
name|'actual_schema'
op|'='
name|'self'
op|'.'
name|'_test_load_extension_schema'
op|'('
string|"'update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_schema'
op|','
name|'actual_schema'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_rebuild_extension_point
dedent|''
name|'def'
name|'test_load_rebuild_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# keypair extension does not contain rebuild_server() and'
nl|'\n'
comment|'# here checks that any extension is not added to the schema.'
nl|'\n'
indent|'        '
name|'expected_schema'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'servers_schema'
op|'.'
name|'base_rebuild'
op|')'
newline|'\n'
name|'expected_schema'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'update'
op|'('
nl|'\n'
name|'disk_config_schema'
op|'.'
name|'server_create'
op|')'
newline|'\n'
nl|'\n'
name|'actual_schema'
op|'='
name|'self'
op|'.'
name|'_test_load_extension_schema'
op|'('
string|"'rebuild'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_schema'
op|','
name|'actual_schema'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_resize_extension_point
dedent|''
name|'def'
name|'test_load_resize_extension_point'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# keypair extension does not contain resize_server() and'
nl|'\n'
comment|'# here checks that any extension is not added to the schema.'
nl|'\n'
indent|'        '
name|'expected_schema'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'servers_schema'
op|'.'
name|'base_resize'
op|')'
newline|'\n'
name|'expected_schema'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'resize'"
op|']'
op|'['
string|"'properties'"
op|']'
op|'.'
name|'update'
op|'('
nl|'\n'
name|'disk_config_schema'
op|'.'
name|'server_create'
op|')'
newline|'\n'
nl|'\n'
name|'actual_schema'
op|'='
name|'self'
op|'.'
name|'_test_load_extension_schema'
op|'('
string|"'resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_schema'
op|','
name|'actual_schema'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|"# TODO(alex_xu): There isn't specified file for ips extension. Most of"
nl|'\n'
comment|'# unittest related to ips extension is in this file. So put the ips policy'
nl|'\n'
comment|'# enforcement tests at here until there is specified file for ips extension.'
nl|'\n'
DECL|class|IPsPolicyEnforcementV21
dedent|''
dedent|''
name|'class'
name|'IPsPolicyEnforcementV21'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'IPsPolicyEnforcementV21'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'ips'
op|'.'
name|'IPsController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|'"/v2/fake"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_policy_failed
dedent|''
name|'def'
name|'test_index_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:ips:index"'
newline|'\n'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'set_rules'
op|'('
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'fakes'
op|'.'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|'"Policy doesn\'t allow %s to be performed."'
op|'%'
name|'rule_name'
op|','
nl|'\n'
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_policy_failed
dedent|''
name|'def'
name|'test_show_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:ips:show"'
newline|'\n'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'set_rules'
op|'('
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'fakes'
op|'.'
name|'FAKE_UUID'
op|','
name|'fakes'
op|'.'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|'"Policy doesn\'t allow %s to be performed."'
op|'%'
name|'rule_name'
op|','
nl|'\n'
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersPolicyEnforcementV21
dedent|''
dedent|''
name|'class'
name|'ServersPolicyEnforcementV21'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersPolicyEnforcementV21'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'ext_info'
op|'='
name|'extension_info'
op|'.'
name|'LoadedExtensionInfo'
op|'('
op|')'
newline|'\n'
name|'ext_info'
op|'.'
name|'extensions'
op|'.'
name|'update'
op|'('
op|'{'
string|"'os-networks'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'ServersController'
op|'('
name|'extension_info'
op|'='
name|'ext_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
nl|'\n'
DECL|member|_common_policy_check
dedent|''
name|'def'
name|'_common_policy_check'
op|'('
name|'self'
op|','
name|'rules'
op|','
name|'rule_name'
op|','
name|'func'
op|','
op|'*'
name|'arg'
op|','
op|'**'
name|'kwarg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'rules'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'func'
op|','
op|'*'
name|'arg'
op|','
op|'**'
name|'kwarg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|'"Policy doesn\'t allow %s to be performed."'
op|'%'
name|'rule_name'
op|','
nl|'\n'
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'servers'
op|'.'
name|'ServersController'
op|','
string|"'_get_instance'"
op|')'
newline|'\n'
DECL|member|test_start_policy_failed
name|'def'
name|'test_start_policy_failed'
op|'('
name|'self'
op|','
name|'_get_instance_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_get_instance_mock'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:start"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_start_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'servers'
op|'.'
name|'ServersController'
op|','
string|"'_get_instance'"
op|')'
newline|'\n'
DECL|member|test_stop_policy_failed
name|'def'
name|'test_stop_policy_failed'
op|'('
name|'self'
op|','
name|'_get_instance_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_get_instance_mock'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:stop"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_stop_server'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_policy_failed
dedent|''
name|'def'
name|'test_index_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:index"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'self'
op|'.'
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail_policy_failed
dedent|''
name|'def'
name|'test_detail_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:detail"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|','
name|'self'
op|'.'
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail_get_tenants_policy_failed
dedent|''
name|'def'
name|'test_detail_get_tenants_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"''"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'GET'
op|'['
string|'"all_tenants"'
op|']'
op|'='
string|'"True"'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:detail:get_all_tenants"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_servers'
op|','
name|'req'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_get_tenants_policy_failed
dedent|''
name|'def'
name|'test_index_get_tenants_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"''"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'GET'
op|'['
string|'"all_tenants"'
op|']'
op|'='
string|'"True"'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:index:get_all_tenants"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_servers'
op|','
name|'req'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'common'
op|','
string|"'get_instance'"
op|')'
newline|'\n'
DECL|member|test_show_policy_failed
name|'def'
name|'test_show_policy_failed'
op|'('
name|'self'
op|','
name|'get_instance_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_mock'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:show"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_policy_failed
dedent|''
name|'def'
name|'test_delete_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:delete"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_policy_failed
dedent|''
name|'def'
name|'test_update_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:update"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize_policy_failed
dedent|''
name|'def'
name|'test_confirm_resize_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:confirm_resize"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_confirm_resize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_policy_failed
dedent|''
name|'def'
name|'test_revert_resize_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:revert_resize"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_revert_resize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_policy_failed
dedent|''
name|'def'
name|'test_reboot_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:reboot"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'reboot'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'HARD'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_policy_failed
dedent|''
name|'def'
name|'test_resize_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:resize"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'flavor_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_resize'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_policy_failed
dedent|''
name|'def'
name|'test_create_image_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create_image"'
newline|'\n'
name|'rule'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'createImage'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'Snapshot 1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rule'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'servers'
op|'.'
name|'ServersController'
op|','
string|"'_get_server'"
op|')'
newline|'\n'
DECL|member|test_create_vol_backed_img_snapshotting_policy_blocks_project
name|'def'
name|'test_create_vol_backed_img_snapshotting_policy_blocks_project'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_is_vol_back'
op|','
nl|'\n'
name|'mock_get_uuidi'
op|','
nl|'\n'
name|'mock_get_server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Don\'t permit a snapshot of a volume backed instance if configured\n        not to based on project\n        """'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create_image:allow_volume_backed"'
newline|'\n'
name|'rules'
op|'='
op|'{'
nl|'\n'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|','
nl|'\n'
string|'"os_compute_api:servers:create_image"'
op|':'
string|'""'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'createImage'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'Snapshot 1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rules'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'servers'
op|'.'
name|'ServersController'
op|','
string|"'_get_server'"
op|')'
newline|'\n'
DECL|member|test_create_vol_backed_img_snapshotting_policy_blocks_role
name|'def'
name|'test_create_vol_backed_img_snapshotting_policy_blocks_role'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_is_vol_back'
op|','
nl|'\n'
name|'mock_get_uuidi'
op|','
nl|'\n'
name|'mock_get_server'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Don\'t permit a snapshot of a volume backed instance if configured\n        not to based on role\n        """'
newline|'\n'
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create_image:allow_volume_backed"'
newline|'\n'
name|'rules'
op|'='
op|'{'
nl|'\n'
name|'rule_name'
op|':'
string|'"role:non_fake"'
op|','
nl|'\n'
string|'"os_compute_api:servers:create_image"'
op|':'
string|'""'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'createImage'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'Snapshot 1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rules'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_create_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_policy_check
dedent|''
name|'def'
name|'_create_policy_check'
op|'('
name|'self'
op|','
name|'rules'
op|','
name|'rule_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_ref'
op|'='
string|"'http://localhost/123/flavors/3'"
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'flavor_ref'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|'"zone1:host1:node1"'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|'"/dev/sda1"'
op|'}'
op|']'
op|','
nl|'\n'
string|"'networks'"
op|':'
op|'['
op|'{'
string|"'uuid'"
op|':'
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_common_policy_check'
op|'('
nl|'\n'
name|'rules'
op|','
name|'rule_name'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_policy_failed
dedent|''
name|'def'
name|'test_create_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create"'
newline|'\n'
name|'rules'
op|'='
op|'{'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_policy_check'
op|'('
name|'rules'
op|','
name|'rule_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_forced_host_policy_failed
dedent|''
name|'def'
name|'test_create_forced_host_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create:forced_host"'
newline|'\n'
name|'rule'
op|'='
op|'{'
string|'"os_compute_api:servers:create"'
op|':'
string|'"@"'
op|','
nl|'\n'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_policy_check'
op|'('
name|'rule'
op|','
name|'rule_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_attach_volume_policy_failed
dedent|''
name|'def'
name|'test_create_attach_volume_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create:attach_volume"'
newline|'\n'
name|'rules'
op|'='
op|'{'
string|'"os_compute_api:servers:create"'
op|':'
string|'"@"'
op|','
nl|'\n'
string|'"os_compute_api:servers:create:forced_host"'
op|':'
string|'"@"'
op|','
nl|'\n'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_policy_check'
op|'('
name|'rules'
op|','
name|'rule_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_attach_attach_network_policy_failed
dedent|''
name|'def'
name|'test_create_attach_attach_network_policy_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule_name'
op|'='
string|'"os_compute_api:servers:create:attach_network"'
newline|'\n'
name|'rules'
op|'='
op|'{'
string|'"os_compute_api:servers:create"'
op|':'
string|'"@"'
op|','
nl|'\n'
string|'"os_compute_api:servers:create:forced_host"'
op|':'
string|'"@"'
op|','
nl|'\n'
string|'"os_compute_api:servers:create:attach_volume"'
op|':'
string|'"@"'
op|','
nl|'\n'
name|'rule_name'
op|':'
string|'"project:non_fake"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_policy_check'
op|'('
name|'rules'
op|','
name|'rule_name'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
