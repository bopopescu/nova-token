begin_unit
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for Serial Console."""'
newline|'\n'
nl|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'console'
name|'import'
name|'serial'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SerialTestCase
name|'class'
name|'SerialTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SerialTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_port_range
dedent|''
name|'def'
name|'test_get_port_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|','
name|'stop'
op|'='
name|'serial'
op|'.'
name|'_get_port_range'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_port_range_customized
dedent|''
name|'def'
name|'test_get_port_range_customized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'port_range'
op|'='
string|"'30000:40000'"
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'start'
op|','
name|'stop'
op|'='
name|'serial'
op|'.'
name|'_get_port_range'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'30000'
op|','
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'40000'
op|','
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_port_range_bad_range
dedent|''
name|'def'
name|'test_get_port_range_bad_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'port_range'
op|'='
string|"'40000:30000'"
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'start'
op|','
name|'stop'
op|'='
name|'serial'
op|'.'
name|'_get_port_range'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_port_range_not_numeric
dedent|''
name|'def'
name|'test_get_port_range_not_numeric'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'port_range'
op|'='
string|"'xxx:yyy'"
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'start'
op|','
name|'stop'
op|'='
name|'serial'
op|'.'
name|'_get_port_range'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_port_range_invalid_syntax
dedent|''
name|'def'
name|'test_get_port_range_invalid_syntax'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'port_range'
op|'='
string|"'10:20:30'"
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'start'
op|','
name|'stop'
op|'='
name|'serial'
op|'.'
name|'_get_port_range'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'stop'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'socket.socket'"
op|')'
newline|'\n'
DECL|member|test_verify_port
name|'def'
name|'test_verify_port'
op|'('
name|'self'
op|','
name|'fake_socket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'fake_socket'
op|'.'
name|'return_value'
op|'='
name|'s'
newline|'\n'
nl|'\n'
name|'serial'
op|'.'
name|'_verify_port'
op|'('
string|"'127.0.0.1'"
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'s'
op|'.'
name|'bind'
op|'.'
name|'assert_called_once_with'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'socket.socket'"
op|')'
newline|'\n'
DECL|member|test_verify_port_in_use
name|'def'
name|'test_verify_port_in_use'
op|'('
name|'self'
op|','
name|'fake_socket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'s'
op|'.'
name|'bind'
op|'.'
name|'side_effect'
op|'='
name|'socket'
op|'.'
name|'error'
op|'('
op|')'
newline|'\n'
name|'fake_socket'
op|'.'
name|'return_value'
op|'='
name|'s'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'SocketPortInUseException'
op|','
nl|'\n'
name|'serial'
op|'.'
name|'_verify_port'
op|','
string|"'127.0.0.1'"
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'s'
op|'.'
name|'bind'
op|'.'
name|'assert_called_once_with'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial._verify_port'"
op|','
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'None'
op|')'
newline|'\n'
DECL|member|test_acquire_port
name|'def'
name|'test_acquire_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|','
name|'stop'
op|'='
number|'15'
op|','
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
nl|'\n'
name|'port_range'
op|'='
string|"'%d:%d'"
op|'%'
op|'('
name|'start'
op|','
name|'stop'
op|')'
op|','
nl|'\n'
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'port'
name|'in'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'range'
op|'('
name|'start'
op|','
name|'stop'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'port'
op|','
name|'serial'
op|'.'
name|'acquire_port'
op|'('
string|"'127.0.0.1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'port'
name|'in'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'range'
op|'('
name|'start'
op|','
name|'stop'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'port'
op|','
name|'serial'
op|'.'
name|'acquire_port'
op|'('
string|"'127.0.0.2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial._verify_port'"
op|')'
newline|'\n'
DECL|member|test_acquire_port_in_use
name|'def'
name|'test_acquire_port_in_use'
op|'('
name|'self'
op|','
name|'fake_verify_port'
op|')'
op|':'
newline|'\n'
DECL|function|port_10000_already_used
indent|'        '
name|'def'
name|'port_10000_already_used'
op|'('
name|'host'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'port'
op|'=='
number|'10000'
name|'and'
name|'host'
op|'=='
string|"'127.0.0.1'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'SocketPortInUseException'
op|'('
nl|'\n'
name|'port'
op|'='
name|'port'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'error'
op|'='
string|'"already in use"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'fake_verify_port'
op|'.'
name|'side_effect'
op|'='
name|'port_10000_already_used'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10001'
op|','
name|'serial'
op|'.'
name|'acquire_port'
op|'('
string|"'127.0.0.1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'serial'
op|'.'
name|'acquire_port'
op|'('
string|"'127.0.0.2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|','
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'10001'
op|')'
op|','
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
string|"'127.0.0.2'"
op|','
number|'10000'
op|')'
op|','
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial._verify_port'"
op|')'
newline|'\n'
DECL|member|test_acquire_port_not_ble_to_bind_at_any_port
name|'def'
name|'test_acquire_port_not_ble_to_bind_at_any_port'
op|'('
name|'self'
op|','
name|'fake_verify_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|','
name|'stop'
op|'='
number|'15'
op|','
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
nl|'\n'
name|'port_range'
op|'='
string|"'%d:%d'"
op|'%'
op|'('
name|'start'
op|','
name|'stop'
op|')'
op|','
nl|'\n'
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_verify_port'
op|'.'
name|'side_effect'
op|'='
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'SocketPortRangeExhaustedException'
op|'('
name|'host'
op|'='
string|"'127.0.0.1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'SocketPortRangeExhaustedException'
op|','
nl|'\n'
name|'serial'
op|'.'
name|'acquire_port'
op|','
string|"'127.0.0.1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_port
dedent|''
name|'def'
name|'test_release_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|'.'
name|'add'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'100'
op|')'
op|')'
newline|'\n'
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|'.'
name|'add'
op|'('
op|'('
string|"'127.0.0.2'"
op|','
number|'100'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'serial'
op|'.'
name|'release_port'
op|'('
string|"'127.0.0.1'"
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'serial'
op|'.'
name|'release_port'
op|'('
string|"'127.0.0.2'"
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'serial'
op|'.'
name|'ALLOCATED_PORTS'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
