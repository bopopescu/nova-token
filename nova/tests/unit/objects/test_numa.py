begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
nl|'\n'
DECL|variable|fake_obj_numa
name|'fake_obj_numa'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
DECL|variable|cells
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'512'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'2'
op|','
name|'memory_usage'
op|'='
number|'256'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'512'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'1'
op|','
name|'memory_usage'
op|'='
number|'128'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestNUMA
name|'class'
name|'_TestNUMA'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_convert_wipe
indent|'    '
name|'def'
name|'test_convert_wipe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d1'
op|'='
name|'fake_obj_numa'
op|'.'
name|'_to_dict'
op|'('
op|')'
newline|'\n'
name|'d2'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_primitive'
op|'('
name|'d1'
op|')'
op|'.'
name|'_to_dict'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'d1'
op|','
name|'d2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_free_cpus
dedent|''
name|'def'
name|'test_free_cpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'512'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'2'
op|','
name|'memory_usage'
op|'='
number|'256'
op|','
nl|'\n'
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'512'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'1'
op|','
name|'memory_usage'
op|'='
number|'128'
op|','
nl|'\n'
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
nl|'\n'
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|']'
op|')'
op|','
name|'obj'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'free_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'obj'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'free_cpus'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pinning_logic
dedent|''
name|'def'
name|'test_pinning_logic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'numacell'
op|'='
name|'objects'
op|'.'
name|'NUMACell'
op|'('
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'512'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'2'
op|','
name|'memory_usage'
op|'='
number|'256'
op|','
nl|'\n'
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'numacell'
op|'.'
name|'pin_cpus'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'4'
op|']'
op|')'
op|','
name|'numacell'
op|'.'
name|'free_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CPUPinningInvalid'
op|','
nl|'\n'
name|'numacell'
op|'.'
name|'pin_cpus'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'4'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CPUPinningInvalid'
op|','
nl|'\n'
name|'numacell'
op|'.'
name|'pin_cpus'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'6'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CPUPinningInvalid'
op|','
nl|'\n'
name|'numacell'
op|'.'
name|'unpin_cpus'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'4'
op|']'
op|')'
op|')'
newline|'\n'
name|'numacell'
op|'.'
name|'unpin_cpus'
op|'('
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'numacell'
op|'.'
name|'free_cpus'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pages_topology_wipe
dedent|''
name|'def'
name|'test_pages_topology_wipe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pages_topology'
op|'='
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
nl|'\n'
name|'size_kb'
op|'='
number|'2048'
op|','
name|'total'
op|'='
number|'1024'
op|','
name|'used'
op|'='
number|'512'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2048'
op|','
name|'pages_topology'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1024'
op|','
name|'pages_topology'
op|'.'
name|'total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'512'
op|','
name|'pages_topology'
op|'.'
name|'used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'512'
op|','
name|'pages_topology'
op|'.'
name|'free'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1048576'
op|','
name|'pages_topology'
op|'.'
name|'free_kb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_can_fit_hugepages
dedent|''
name|'def'
name|'test_can_fit_hugepages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell'
op|'='
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'mempages'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
nl|'\n'
name|'size_kb'
op|'='
number|'4'
op|','
name|'total'
op|'='
number|'1548736'
op|','
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
nl|'\n'
name|'size_kb'
op|'='
number|'2048'
op|','
name|'total'
op|'='
number|'513'
op|','
name|'used'
op|'='
number|'0'
op|')'
op|']'
op|')'
comment|'# 1,002G'
newline|'\n'
nl|'\n'
name|'pagesize'
op|'='
number|'2048'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cell'
op|'.'
name|'can_fit_hugepages'
op|'('
name|'pagesize'
op|','
number|'2'
op|'**'
number|'20'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cell'
op|'.'
name|'can_fit_hugepages'
op|'('
name|'pagesize'
op|','
number|'2'
op|'**'
number|'21'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cell'
op|'.'
name|'can_fit_hugepages'
op|'('
name|'pagesize'
op|','
number|'2'
op|'**'
number|'19'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'MemoryPageSizeNotSupported'
op|','
nl|'\n'
name|'cell'
op|'.'
name|'can_fit_hugepages'
op|','
number|'12345'
op|','
number|'2'
op|'**'
number|'20'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNUMA'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestNUMA
name|'_TestNUMA'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestNUMARemote'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestNUMARemote
name|'_TestNUMA'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
