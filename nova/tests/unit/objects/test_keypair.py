begin_unit
comment|'#    Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'keypair'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
nl|'\n'
DECL|variable|NOW
name|'NOW'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
name|'microsecond'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|variable|fake_keypair
name|'fake_keypair'
op|'='
op|'{'
nl|'\n'
string|"'created_at'"
op|':'
name|'NOW'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'foo-keypair'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ssh'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
nl|'\n'
string|"'fingerprint'"
op|':'
string|"'fake-fingerprint'"
op|','
nl|'\n'
string|"'public_key'"
op|':'
string|"'fake\\npublic\\nkey'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestKeyPairObject
name|'class'
name|'_TestKeyPairObject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.key_pair_get'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPair._get_from_db'"
op|')'
newline|'\n'
DECL|member|test_get_by_name_main
name|'def'
name|'test_get_by_name_main'
op|'('
name|'self'
op|','
name|'mock_api_get'
op|','
name|'mock_kp_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_api_get'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'KeypairNotFound'
op|'('
name|'user_id'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'mock_kp_get'
op|'.'
name|'return_value'
op|'='
name|'fake_keypair'
newline|'\n'
nl|'\n'
name|'keypair_obj'
op|'='
name|'keypair'
op|'.'
name|'KeyPair'
op|'.'
name|'get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
nl|'\n'
string|"'foo-keypair'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compare_obj'
op|'('
name|'keypair_obj'
op|','
name|'fake_keypair'
op|')'
newline|'\n'
nl|'\n'
name|'mock_kp_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
nl|'\n'
string|"'foo-keypair'"
op|')'
newline|'\n'
name|'mock_api_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
nl|'\n'
string|"'foo-keypair'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPair._create_in_db'"
op|')'
newline|'\n'
DECL|member|test_create
name|'def'
name|'test_create'
op|'('
name|'self'
op|','
name|'mock_kp_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_kp_create'
op|'.'
name|'return_value'
op|'='
name|'fake_keypair'
newline|'\n'
nl|'\n'
name|'keypair_obj'
op|'='
name|'keypair'
op|'.'
name|'KeyPair'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'keypair_obj'
op|'.'
name|'name'
op|'='
string|"'foo-keypair'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'public_key'
op|'='
string|"'keydata'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'user_id'
op|'='
string|"'fake-user'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compare_obj'
op|'('
name|'keypair_obj'
op|','
name|'fake_keypair'
op|')'
newline|'\n'
nl|'\n'
name|'mock_kp_create'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'foo-keypair'"
op|','
string|"'public_key'"
op|':'
string|"'keydata'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPair._create_in_db'"
op|')'
newline|'\n'
DECL|member|test_recreate_fails
name|'def'
name|'test_recreate_fails'
op|'('
name|'self'
op|','
name|'mock_kp_create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_kp_create'
op|'.'
name|'return_value'
op|'='
name|'fake_keypair'
newline|'\n'
nl|'\n'
name|'keypair_obj'
op|'='
name|'keypair'
op|'.'
name|'KeyPair'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'keypair_obj'
op|'.'
name|'name'
op|'='
string|"'foo-keypair'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'public_key'
op|'='
string|"'keydata'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'user_id'
op|'='
string|"'fake-user'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
name|'keypair_obj'
op|'.'
name|'create'
op|')'
newline|'\n'
nl|'\n'
name|'mock_kp_create'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'foo-keypair'"
op|','
string|"'public_key'"
op|':'
string|"'keydata'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPair._destroy_in_db'"
op|')'
newline|'\n'
DECL|member|test_destroy
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|','
name|'mock_kp_destroy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keypair_obj'
op|'='
name|'keypair'
op|'.'
name|'KeyPair'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'keypair_obj'
op|'.'
name|'id'
op|'='
number|'123'
newline|'\n'
name|'keypair_obj'
op|'.'
name|'user_id'
op|'='
string|"'fake-user'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'name'
op|'='
string|"'foo-keypair'"
newline|'\n'
name|'keypair_obj'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_kp_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
string|"'foo-keypair'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPair._destroy_in_db'"
op|')'
newline|'\n'
DECL|member|test_destroy_by_name
name|'def'
name|'test_destroy_by_name'
op|'('
name|'self'
op|','
name|'mock_kp_destroy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keypair'
op|'.'
name|'KeyPair'
op|'.'
name|'destroy_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
nl|'\n'
string|"'foo-keypair'"
op|')'
newline|'\n'
nl|'\n'
name|'mock_kp_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|','
string|"'foo-keypair'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.key_pair_get_all_by_user'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.key_pair_count_by_user'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPairList._get_from_db'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.KeyPairList._get_count_from_db'"
op|')'
newline|'\n'
DECL|member|test_get_by_user
name|'def'
name|'test_get_by_user'
op|'('
name|'self'
op|','
name|'mock_api_count'
op|','
name|'mock_api_get'
op|','
name|'mock_kp_count'
op|','
nl|'\n'
name|'mock_kp_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_kp_get'
op|'.'
name|'return_value'
op|'='
op|'['
name|'fake_keypair'
op|']'
newline|'\n'
name|'mock_kp_count'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
name|'mock_api_get'
op|'.'
name|'return_value'
op|'='
op|'['
name|'fake_keypair'
op|']'
newline|'\n'
name|'mock_api_count'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'keypairs'
op|'='
name|'keypair'
op|'.'
name|'KeyPairList'
op|'.'
name|'get_by_user'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'keypairs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compare_obj'
op|'('
name|'keypairs'
op|'['
number|'0'
op|']'
op|','
name|'fake_keypair'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compare_obj'
op|'('
name|'keypairs'
op|'['
number|'1'
op|']'
op|','
name|'fake_keypair'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'keypair'
op|'.'
name|'KeyPairList'
op|'.'
name|'get_count_by_user'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-user'"
op|')'
op|')'
newline|'\n'
name|'mock_kp_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|')'
newline|'\n'
name|'mock_kp_count'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|')'
newline|'\n'
name|'mock_api_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|')'
newline|'\n'
name|'mock_api_count'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-user'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_obj_make_compatible
dedent|''
name|'def'
name|'test_obj_make_compatible'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keypair_obj'
op|'='
name|'keypair'
op|'.'
name|'KeyPair'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'fake_keypair_copy'
op|'='
name|'dict'
op|'('
name|'fake_keypair'
op|')'
newline|'\n'
nl|'\n'
name|'keypair_obj'
op|'.'
name|'obj_make_compatible'
op|'('
name|'fake_keypair_copy'
op|','
string|"'1.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'type'"
op|','
name|'fake_keypair_copy'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestMigrationObject'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestMigrationObject
name|'_TestKeyPairObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestRemoteMigrationObject'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteMigrationObject
name|'_TestKeyPairObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
