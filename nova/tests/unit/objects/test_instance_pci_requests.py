begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'serialization'
name|'import'
name|'jsonutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
string|"'79a53d6b-0893-4838-a971-15f4f382e7c2'"
newline|'\n'
DECL|variable|FAKE_REQUEST_UUID
name|'FAKE_REQUEST_UUID'
op|'='
string|"'69b53d6b-0793-4839-c981-f5c4f382e7d2'"
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): Yes, these are the same right now, but going forward,'
nl|'\n'
comment|'# we have changes to make which will be reflected in the format'
nl|'\n'
comment|'# in instance_extra, but not in system_metadata.'
nl|'\n'
DECL|variable|fake_pci_requests
name|'fake_pci_requests'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'device_id'"
op|':'
string|"'1502'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'alias_name'"
op|':'
string|"'alias_1'"
op|','
nl|'\n'
string|"'is_new'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'FAKE_REQUEST_UUID'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'6502'"
op|','
nl|'\n'
string|"'device_id'"
op|':'
string|"'07B5'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'alias_name'"
op|':'
string|"'alias_2'"
op|','
nl|'\n'
string|"'is_new'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'FAKE_REQUEST_UUID'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|fake_legacy_pci_requests
name|'fake_legacy_pci_requests'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'device_id'"
op|':'
string|"'1502'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'alias_name'"
op|':'
string|"'alias_1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'6502'"
op|','
nl|'\n'
string|"'device_id'"
op|':'
string|"'07B5'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'alias_name'"
op|':'
string|"'alias_2'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestInstancePCIRequests
name|'class'
name|'_TestInstancePCIRequests'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_get_by_instance_uuid
name|'def'
name|'test_get_by_instance_uuid'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get'
op|'.'
name|'return_value'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'fake_pci_requests'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'requests'
op|'.'
name|'requests'
op|')'
op|')'
newline|'\n'
name|'for'
name|'index'
op|','
name|'request'
name|'in'
name|'enumerate'
op|'('
name|'requests'
op|'.'
name|'requests'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_pci_requests'
op|'['
name|'index'
op|']'
op|'['
string|"'alias_name'"
op|']'
op|','
nl|'\n'
name|'request'
op|'.'
name|'alias_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_pci_requests'
op|'['
name|'index'
op|']'
op|'['
string|"'count'"
op|']'
op|','
nl|'\n'
name|'request'
op|'.'
name|'count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_pci_requests'
op|'['
name|'index'
op|']'
op|'['
string|"'spec'"
op|']'
op|','
nl|'\n'
op|'['
name|'dict'
op|'('
name|'x'
op|'.'
name|'items'
op|'('
op|')'
op|')'
name|'for'
name|'x'
name|'in'
name|'request'
op|'.'
name|'spec'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_get_by_instance_uuid_and_newness
name|'def'
name|'test_get_by_instance_uuid_and_newness'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pcir'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'requests'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
name|'is_new'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'2'
op|','
name|'is_new'
op|'='
name|'True'
op|')'
op|']'
op|')'
newline|'\n'
name|'old_req'
op|'='
name|'pcir'
op|'.'
name|'get_by_instance_uuid_and_newness'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'requests'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
name|'is_new'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'2'
op|','
name|'is_new'
op|'='
name|'True'
op|')'
op|']'
op|')'
newline|'\n'
name|'new_req'
op|'='
name|'pcir'
op|'.'
name|'get_by_instance_uuid_and_newness'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'old_req'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'new_req'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_get_by_instance_current
name|'def'
name|'test_get_by_instance_current'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'get_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_instance_legacy
dedent|''
name|'def'
name|'test_get_by_instance_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakesysmeta'
op|'='
op|'{'
nl|'\n'
string|"'pci_requests'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'['
name|'fake_legacy_pci_requests'
op|'['
number|'0'
op|']'
op|']'
op|')'
op|','
nl|'\n'
string|"'new_pci_requests'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'['
name|'fake_legacy_pci_requests'
op|'['
number|'1'
op|']'
op|']'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fakesysmeta'
op|')'
newline|'\n'
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'get_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'requests'
op|'.'
name|'requests'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'alias_1'"
op|','
name|'requests'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'alias_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'requests'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'is_new'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'alias_2'"
op|','
name|'requests'
op|'.'
name|'requests'
op|'['
number|'1'
op|']'
op|'.'
name|'alias_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'requests'
op|'.'
name|'requests'
op|'['
number|'1'
op|']'
op|'.'
name|'is_new'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_save
name|'def'
name|'test_save'
op|'('
name|'self'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'FAKE_UUID'
op|','
nl|'\n'
name|'requests'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
nl|'\n'
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
op|'{'
string|"'baz'"
op|':'
string|"'bat'"
op|'}'
op|']'
op|','
nl|'\n'
name|'alias_name'
op|'='
string|"'alias_1'"
op|','
nl|'\n'
name|'is_new'
op|'='
name|'False'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'FAKE_REQUEST_UUID'
op|')'
op|']'
op|')'
newline|'\n'
name|'requests'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'mock_update'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'count'"
op|':'
number|'1'
op|','
string|"'is_new'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'alias_name'"
op|':'
string|"'alias_1'"
op|','
nl|'\n'
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
op|'{'
string|"'baz'"
op|':'
string|"'bat'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'FAKE_REQUEST_UUID'
op|'}'
op|']'
op|','
nl|'\n'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
nl|'\n'
name|'mock_update'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'pci_requests'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_save_and_reload
name|'def'
name|'test_save_and_reload'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'database'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_save
name|'def'
name|'_save'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'database'
op|'.'
name|'setdefault'
op|'('
name|'uuid'
op|','
op|'{'
string|"'instance_uuid'"
op|':'
name|'uuid'
op|'}'
op|')'
newline|'\n'
name|'database'
op|'['
name|'uuid'
op|']'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get
dedent|''
name|'def'
name|'_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'columns'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'database'
op|'.'
name|'get'
op|'('
name|'uuid'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_update'
op|'.'
name|'side_effect'
op|'='
name|'_save'
newline|'\n'
name|'mock_get'
op|'.'
name|'side_effect'
op|'='
name|'_get'
newline|'\n'
nl|'\n'
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'FAKE_UUID'
op|','
nl|'\n'
name|'requests'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
nl|'\n'
name|'count'
op|'='
number|'1'
op|','
name|'is_new'
op|'='
name|'False'
op|','
name|'alias_name'
op|'='
string|"'alias_1'"
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'requests'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'_requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'requests'
op|'.'
name|'instance_uuid'
op|','
name|'_requests'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'requests'
op|'.'
name|'requests'
op|')'
op|','
name|'len'
op|'('
name|'_requests'
op|'.'
name|'requests'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'requests'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'alias_name'
op|','
nl|'\n'
name|'_requests'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'alias_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_new_compatibility
dedent|''
name|'def'
name|'test_new_compatibility'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'is_new'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'request'
op|'.'
name|'new'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backport_1_0
dedent|''
name|'def'
name|'test_backport_1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'requests'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'FAKE_UUID'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'2'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'FAKE_UUID'
op|')'
op|']'
op|')'
newline|'\n'
name|'primitive'
op|'='
name|'requests'
op|'.'
name|'obj_to_primitive'
op|'('
name|'target_version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
name|'backported'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'obj_from_primitive'
op|'('
nl|'\n'
name|'primitive'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1.0'"
op|','
name|'backported'
op|'.'
name|'VERSION'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'backported'
op|'.'
name|'requests'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'backported'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'request_id'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'backported'
op|'.'
name|'requests'
op|'['
number|'1'
op|']'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'request_id'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestInstancePCIRequests'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestInstancePCIRequests
name|'_TestInstancePCIRequests'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestRemoteInstancePCIRequests'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteInstancePCIRequests
name|'_TestInstancePCIRequests'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
