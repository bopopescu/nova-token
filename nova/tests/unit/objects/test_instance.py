begin_unit
comment|'#    Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'from'
name|'oslo_db'
name|'import'
name|'exception'
name|'as'
name|'db_exc'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'rpcapi'
name|'as'
name|'cells_rpcapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance_info_cache'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'pci_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'security_group'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_fault'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_info_cache'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_numa_topology'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_pci_requests'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_migration_context'
name|'as'
name|'test_mig_ctxt'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_security_group'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_vcpu_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'uuidsentinel'
name|'as'
name|'uuids'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestInstanceObject
name|'class'
name|'_TestInstanceObject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'property'
newline|'\n'
DECL|member|fake_instance
name|'def'
name|'fake_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'access_ip_v4'
op|'='
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'access_ip_v6'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuids'
op|'.'
name|'db_instance'
newline|'\n'
name|'db_inst'
op|'['
string|"'cell_name'"
op|']'
op|'='
string|"'api!child'"
newline|'\n'
name|'db_inst'
op|'['
string|"'terminated_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'deleted_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'updated_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'launched_at'"
op|']'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'12'
op|','
nl|'\n'
number|'22'
op|','
number|'4'
op|','
number|'0'
op|')'
newline|'\n'
name|'db_inst'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'db_inst'
op|'['
string|"'security_groups'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'db_inst'
op|'['
string|"'pci_devices'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'db_inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
newline|'\n'
name|'db_inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'db_inst'
op|'['
string|"'tags'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'db_inst'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'dict'
op|'('
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db_inst'
op|'['
string|"'system_metadata'"
op|']'
op|'='
op|'{'
nl|'\n'
string|"'image_name'"
op|':'
string|"'os2-warp'"
op|','
nl|'\n'
string|"'image_min_ram'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'image_hw_disk_bus'"
op|':'
string|"'ide'"
op|','
nl|'\n'
string|"'image_hw_vif_model'"
op|':'
string|"'ne2k_pci'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'db_inst'
newline|'\n'
nl|'\n'
DECL|member|test_datetime_deserialization
dedent|''
name|'def'
name|'test_datetime_deserialization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'red_letter_date'
op|'='
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'isotime'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|')'
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'red_letter_date'
op|')'
newline|'\n'
name|'primitive'
op|'='
name|'inst'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'nova_object.name'"
op|':'
string|"'Instance'"
op|','
nl|'\n'
string|"'nova_object.namespace'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'nova_object.version'"
op|':'
name|'inst'
op|'.'
name|'VERSION'
op|','
nl|'\n'
string|"'nova_object.data'"
op|':'
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'launched_at'"
op|':'
string|"'1955-11-05T00:00:00Z'"
op|'}'
op|','
nl|'\n'
string|"'nova_object.changes'"
op|':'
op|'['
string|"'launched_at'"
op|','
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertJsonEqual'
op|'('
name|'primitive'
op|','
name|'expected'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'obj_from_primitive'
op|'('
name|'primitive'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst2'
op|'.'
name|'launched_at'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'red_letter_date'
op|','
name|'inst2'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ip_deserialization
dedent|''
name|'def'
name|'test_ip_deserialization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
name|'access_ip_v4'
op|'='
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'access_ip_v6'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'primitive'
op|'='
name|'inst'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'nova_object.name'"
op|':'
string|"'Instance'"
op|','
nl|'\n'
string|"'nova_object.namespace'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'nova_object.version'"
op|':'
name|'inst'
op|'.'
name|'VERSION'
op|','
nl|'\n'
string|"'nova_object.data'"
op|':'
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'access_ip_v4'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
string|"'::1'"
op|'}'
op|','
nl|'\n'
string|"'nova_object.changes'"
op|':'
op|'['
string|"'uuid'"
op|','
string|"'access_ip_v6'"
op|','
nl|'\n'
string|"'access_ip_v4'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertJsonEqual'
op|'('
name|'primitive'
op|','
name|'expected'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'obj_from_primitive'
op|'('
name|'primitive'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst2'
op|'.'
name|'access_ip_v4'
op|','
name|'netaddr'
op|'.'
name|'IPAddress'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst2'
op|'.'
name|'access_ip_v6'
op|','
name|'netaddr'
op|'.'
name|'IPAddress'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'1.2.3.4'"
op|')'
op|','
name|'inst2'
op|'.'
name|'access_ip_v4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
string|"'::1'"
op|')'
op|','
name|'inst2'
op|'.'
name|'access_ip_v6'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_without_expected
dedent|''
name|'def'
name|'test_get_without_expected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'instance'
op|'.'
name|'INSTANCE_OPTIONAL_ATTRS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
name|'attr'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_with_expected
dedent|''
dedent|''
name|'def'
name|'test_get_with_expected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_get_by_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
nl|'\n'
name|'db'
op|','
string|"'instance_extra_get_by_instance_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'exp_cols'
op|'='
name|'instance'
op|'.'
name|'INSTANCE_OPTIONAL_ATTRS'
op|'['
op|':'
op|']'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'fault'"
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'numa_topology'"
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'pci_requests'"
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'vcpu_model'"
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'ec2_ids'"
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'remove'
op|'('
string|"'migration_context'"
op|')'
newline|'\n'
name|'exp_cols'
op|'='
name|'list'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'x'
op|':'
string|"'flavor'"
name|'not'
name|'in'
name|'x'
op|','
name|'exp_cols'
op|')'
op|')'
newline|'\n'
name|'exp_cols'
op|'.'
name|'extend'
op|'('
op|'['
string|"'extra'"
op|','
string|"'extra.numa_topology'"
op|','
string|"'extra.pci_requests'"
op|','
nl|'\n'
string|"'extra.flavor'"
op|','
string|"'extra.vcpu_model'"
op|','
nl|'\n'
string|"'extra.migration_context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fake_topology'
op|'='
op|'('
name|'test_instance_numa_topology'
op|'.'
nl|'\n'
name|'fake_db_topology'
op|'['
string|"'numa_topology'"
op|']'
op|')'
newline|'\n'
name|'fake_requests'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'test_instance_pci_requests'
op|'.'
nl|'\n'
name|'fake_pci_requests'
op|')'
newline|'\n'
name|'fake_flavor'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|')'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|','
nl|'\n'
string|"'old'"
op|':'
name|'None'
op|','
string|"'new'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
name|'fake_vcpu_model'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|')'
newline|'\n'
name|'fake_mig_context'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
name|'test_mig_ctxt'
op|'.'
name|'fake_migration_context_obj'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|')'
newline|'\n'
name|'fake_service'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'None'
op|','
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
string|"'deleted'"
op|':'
name|'False'
op|','
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake-host'"
op|','
string|"'binary'"
op|':'
string|"'nova-fake'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'fake-service-topic'"
op|','
string|"'report_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'forced_down'"
op|':'
name|'False'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disabled_reason'"
op|':'
name|'None'
op|','
string|"'last_seen_up'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'version'"
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'fake_instance'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
nl|'\n'
name|'services'
op|'='
op|'['
name|'fake_service'
op|']'
op|','
nl|'\n'
name|'extra'
op|'='
op|'{'
nl|'\n'
string|"'numa_topology'"
op|':'
name|'fake_topology'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'fake_requests'
op|','
nl|'\n'
string|"'flavor'"
op|':'
name|'fake_flavor'
op|','
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'fake_vcpu_model'
op|','
nl|'\n'
string|"'migration_context'"
op|':'
name|'fake_mig_context'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'exp_cols'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_faults'
op|'='
name|'test_instance_fault'
op|'.'
name|'fake_faults'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'fake_instance'
op|'['
string|"'uuid'"
op|']'
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_faults'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'uuid'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'instance'
op|'.'
name|'INSTANCE_OPTIONAL_ATTRS'
op|')'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'instance'
op|'.'
name|'INSTANCE_OPTIONAL_ATTRS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
name|'attr'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'123'
op|','
name|'inst'
op|'.'
name|'services'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_id
dedent|''
name|'def'
name|'test_get_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'instid'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'instid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load
dedent|''
name|'def'
name|'test_load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'self'
op|'.'
name|'fake_instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_inst2'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'['
op|'{'
string|"'key'"
op|':'
string|"'foo'"
op|','
string|"'value'"
op|':'
string|"'bar'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'hasattr'
op|'('
name|'inst'
op|','
string|"'_obj_metadata'"
op|')'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'inst'
op|'.'
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'inst'
op|','
string|"'_obj_metadata'"
op|')'
op|')'
newline|'\n'
comment|"# Make sure we don't run load again"
nl|'\n'
name|'meta2'
op|'='
name|'inst'
op|'.'
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'meta2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_invalid
dedent|''
name|'def'
name|'test_load_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'obj_load_attr'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_remote
dedent|''
name|'def'
name|'test_get_remote'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# isotime doesn't have microseconds and is always UTC"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'fake_instance'
op|'='
name|'self'
op|'.'
name|'fake_instance'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_instance'
op|'['
string|"'id'"
op|']'
op|','
name|'inst'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_instance'
op|'['
string|"'launched_at'"
op|']'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'launched_at'
op|'.'
name|'replace'
op|'('
name|'tzinfo'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_instance'
op|'['
string|"'access_ip_v4'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'inst'
op|'.'
name|'access_ip_v4'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_instance'
op|'['
string|"'access_ip_v6'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'inst'
op|'.'
name|'access_ip_v6'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh
dedent|''
name|'def'
name|'test_refresh'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'self'
op|'.'
name|'fake_instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
nl|'\n'
name|'host'
op|'='
string|"'orig-host'"
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
nl|'\n'
name|'host'
op|'='
string|"'new-host'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance_info_cache'
op|'.'
name|'InstanceInfoCache'
op|','
nl|'\n'
string|"'refresh'"
op|')'
newline|'\n'
name|'instance_info_cache'
op|'.'
name|'InstanceInfoCache'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'orig-host'"
op|','
name|'inst'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'new-host'"
op|','
name|'inst'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_does_not_recurse
dedent|''
name|'def'
name|'test_refresh_does_not_recurse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'inst_copy'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'inst_copy'
op|'.'
name|'uuid'
op|'='
name|'inst'
op|'.'
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'inst_copy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'OrphanedObjectError'
op|','
name|'inst'
op|'.'
name|'refresh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_save_test_helper
dedent|''
name|'def'
name|'_save_test_helper'
op|'('
name|'self'
op|','
name|'cell_type'
op|','
name|'save_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Common code for testing save() for cells/non-cells."""'
newline|'\n'
name|'if'
name|'cell_type'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'True'
op|','
name|'cell_type'
op|'='
name|'cell_type'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'old_ref'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'host'
op|'='
string|"'oldhost'"
op|','
name|'user_data'
op|'='
string|"'old'"
op|','
nl|'\n'
name|'vm_state'
op|'='
string|"'old'"
op|','
name|'task_state'
op|'='
string|"'old'"
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'old_ref'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'expected_updates'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
string|"'meow'"
op|','
name|'task_state'
op|'='
string|"'wuff'"
op|','
nl|'\n'
name|'user_data'
op|'='
string|"'new'"
op|')'
newline|'\n'
nl|'\n'
name|'new_ref'
op|'='
name|'dict'
op|'('
name|'old_ref'
op|','
name|'host'
op|'='
string|"'newhost'"
op|','
op|'**'
name|'expected_updates'
op|')'
newline|'\n'
name|'exp_vm_state'
op|'='
name|'save_kwargs'
op|'.'
name|'get'
op|'('
string|"'expected_vm_state'"
op|')'
newline|'\n'
name|'exp_task_state'
op|'='
name|'save_kwargs'
op|'.'
name|'get'
op|'('
string|"'expected_task_state'"
op|')'
newline|'\n'
name|'admin_reset'
op|'='
name|'save_kwargs'
op|'.'
name|'get'
op|'('
string|"'admin_state_reset'"
op|','
name|'False'
op|')'
newline|'\n'
name|'if'
name|'exp_vm_state'
op|':'
newline|'\n'
indent|'            '
name|'expected_updates'
op|'['
string|"'expected_vm_state'"
op|']'
op|'='
name|'exp_vm_state'
newline|'\n'
dedent|''
name|'if'
name|'exp_task_state'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'exp_task_state'
op|'=='
string|"'image_snapshot'"
name|'and'
nl|'\n'
string|"'instance_version'"
name|'in'
name|'save_kwargs'
name|'and'
nl|'\n'
name|'save_kwargs'
op|'['
string|"'instance_version'"
op|']'
op|'=='
string|"'1.9'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'expected_updates'
op|'['
string|"'expected_task_state'"
op|']'
op|'='
op|'['
nl|'\n'
string|"'image_snapshot'"
op|','
string|"'image_snapshot_pending'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'expected_updates'
op|'['
string|"'expected_task_state'"
op|']'
op|'='
name|'exp_task_state'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'cells_api_mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_api_mock'
op|','
nl|'\n'
string|"'instance_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_api_mock'
op|','
nl|'\n'
string|"'instance_update_from_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_rpcapi'
op|','
string|"'CellsAPI'"
op|','
nl|'\n'
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'notifications'
op|','
string|"'send_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'old_ref'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
name|'expected_updates'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'extra'"
op|','
string|"'extra.flavor'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|')'
newline|'\n'
name|'if'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'cells_api_mock'
op|')'
newline|'\n'
name|'cells_api_mock'
op|'.'
name|'instance_update_from_api'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
name|'exp_vm_state'
op|','
name|'exp_task_state'
op|','
name|'admin_reset'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'cell_type'
op|'=='
string|"'compute'"
op|':'
newline|'\n'
indent|'            '
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'cells_api_mock'
op|')'
newline|'\n'
name|'cells_api_mock'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
dedent|''
name|'notifications'
op|'.'
name|'send_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'old_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'if'
string|"'instance_version'"
name|'in'
name|'save_kwargs'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'VERSION'
op|'='
name|'save_kwargs'
op|'.'
name|'pop'
op|'('
string|"'instance_version'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'old'"
op|','
name|'inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'old'"
op|','
name|'inst'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'old'"
op|','
name|'inst'
op|'.'
name|'user_data'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'='
string|"'meow'"
newline|'\n'
name|'inst'
op|'.'
name|'task_state'
op|'='
string|"'wuff'"
newline|'\n'
name|'inst'
op|'.'
name|'user_data'
op|'='
string|"'new'"
newline|'\n'
name|'save_kwargs'
op|'.'
name|'pop'
op|'('
string|"'context'"
op|','
name|'None'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|'**'
name|'save_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'newhost'"
op|','
name|'inst'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meow'"
op|','
name|'inst'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'wuff'"
op|','
name|'inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'new'"
op|','
name|'inst'
op|'.'
name|'user_data'
op|')'
newline|'\n'
comment|'# NOTE(danms): Ignore flavor migrations for the moment'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|'-'
name|'set'
op|'('
op|'['
string|"'flavor'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save
dedent|''
name|'def'
name|'test_save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
name|'None'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_in_api_cell
dedent|''
name|'def'
name|'test_save_in_api_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
string|"'api'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_in_compute_cell
dedent|''
name|'def'
name|'test_save_in_compute_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_exp_vm_state
dedent|''
name|'def'
name|'test_save_exp_vm_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
name|'None'
op|','
op|'{'
string|"'expected_vm_state'"
op|':'
op|'['
string|"'meow'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_exp_task_state
dedent|''
name|'def'
name|'test_save_exp_task_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
name|'None'
op|','
op|'{'
string|"'expected_task_state'"
op|':'
op|'['
string|"'meow'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_exp_vm_state_api_cell
dedent|''
name|'def'
name|'test_save_exp_vm_state_api_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
string|"'api'"
op|','
op|'{'
string|"'expected_vm_state'"
op|':'
op|'['
string|"'meow'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_exp_task_state_api_cell
dedent|''
name|'def'
name|'test_save_exp_task_state_api_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
string|"'api'"
op|','
op|'{'
string|"'expected_task_state'"
op|':'
op|'['
string|"'meow'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_exp_task_state_api_cell_admin_reset
dedent|''
name|'def'
name|'test_save_exp_task_state_api_cell_admin_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_save_test_helper'
op|'('
string|"'api'"
op|','
op|'{'
string|"'admin_state_reset'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_rename_sends_notification
dedent|''
name|'def'
name|'test_save_rename_sends_notification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that simply changing the 'display_name' on the instance"
nl|'\n'
comment|'# will send a notification.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'old_ref'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'display_name'
op|'='
string|"'hello'"
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'old_ref'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'expected_updates'
op|'='
name|'dict'
op|'('
name|'display_name'
op|'='
string|"'goodbye'"
op|')'
newline|'\n'
name|'new_ref'
op|'='
name|'dict'
op|'('
name|'old_ref'
op|','
op|'**'
name|'expected_updates'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'notifications'
op|','
string|"'send_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'old_ref'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
name|'expected_updates'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'extra'"
op|','
string|"'extra.flavor'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|')'
newline|'\n'
name|'notifications'
op|'.'
name|'send_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'old_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hello'"
op|','
name|'inst'
op|'.'
name|'display_name'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'display_name'
op|'='
string|"'goodbye'"
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'goodbye'"
op|','
name|'inst'
op|'.'
name|'display_name'
op|')'
newline|'\n'
comment|'# NOTE(danms): Ignore flavor migrations for the moment'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|'-'
name|'set'
op|'('
op|'['
string|"'flavor'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_related_object_if_none
dedent|''
name|'def'
name|'test_save_related_object_if_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'_save_pci_requests'"
nl|'\n'
op|')'
name|'as'
name|'save_mock'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'pci_requests'
op|'='
name|'None'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'save_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_update_and_get_original'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|'.'
name|'Instance'
op|','
string|"'_from_db_object'"
op|')'
newline|'\n'
DECL|member|test_save_does_not_refresh_pci_devices
name|'def'
name|'test_save_does_not_refresh_pci_devices'
op|'('
name|'self'
op|','
name|'mock_fdo'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
comment|"# NOTE(danms): This tests that we don't update the pci_devices"
nl|'\n'
comment|'# field from the contents of the database. This is not because we'
nl|'\n'
comment|"# don't necessarily want to, but because the way pci_devices is"
nl|'\n'
comment|'# currently implemented it causes versioning issues. When that is'
nl|'\n'
comment|'# resolved, this test should go away.'
nl|'\n'
indent|'        '
name|'mock_update'
op|'.'
name|'return_value'
op|'='
name|'None'
op|','
name|'None'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'123'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'test_instance_not_refresh'
newline|'\n'
name|'inst'
op|'.'
name|'pci_devices'
op|'='
name|'pci_device'
op|'.'
name|'PciDeviceList'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'pci_devices'"
op|','
nl|'\n'
name|'mock_fdo'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'expected_attrs'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_update_and_get_original'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|'.'
name|'Instance'
op|','
string|"'_from_db_object'"
op|')'
newline|'\n'
DECL|member|test_save_updates_numa_topology
name|'def'
name|'test_save_updates_numa_topology'
op|'('
name|'self'
op|','
name|'mock_fdo'
op|','
name|'mock_update'
op|','
nl|'\n'
name|'mock_extra_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_obj_numa_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'128'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'128'
op|')'
op|']'
op|')'
newline|'\n'
name|'fake_obj_numa_topology'
op|'.'
name|'instance_uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
newline|'\n'
name|'jsonified'
op|'='
name|'fake_obj_numa_topology'
op|'.'
name|'_to_json'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_update'
op|'.'
name|'return_value'
op|'='
name|'None'
op|','
name|'None'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'123'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'numa_topology'
op|'='
name|'fake_obj_numa_topology'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(sdague): the json representation of nova object for'
nl|'\n'
comment|"# NUMA isn't stable from a string comparison"
nl|'\n'
comment|'# perspective. There are sets which get converted to lists,'
nl|'\n'
comment|'# and based on platform differences may show up in different'
nl|'\n'
comment|"# orders. So we can't have mock do the comparison. Instead"
nl|'\n'
comment|'# manually compare the final parameter using our json equality'
nl|'\n'
comment|'# operator which does the right thing here.'
nl|'\n'
name|'mock_extra_update'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'called_arg'
op|'='
name|'mock_extra_update'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'numa_topology'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertJsonEqual'
op|'('
name|'called_arg'
op|','
name|'jsonified'
op|')'
newline|'\n'
nl|'\n'
name|'mock_extra_update'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'numa_topology'
op|'='
name|'None'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'mock_extra_update'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
op|'{'
string|"'numa_topology'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_save_vcpu_model
name|'def'
name|'test_save_vcpu_model'
op|'('
name|'self'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_update'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mock_update'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'actual_args'
op|'='
name|'mock_update'
op|'.'
name|'call_args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'.'
name|'uuid'
op|','
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'vcpu_model'"
op|']'
op|','
name|'list'
op|'('
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertJsonEqual'
op|'('
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'vcpu_model'"
op|']'
op|')'
newline|'\n'
name|'mock_update'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vcpu_model'
op|'='
name|'None'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'mock_update'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
op|'{'
string|"'vcpu_model'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_save_migration_context_model
name|'def'
name|'test_save_migration_context_model'
op|'('
name|'self'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'='
name|'test_mig_ctxt'
op|'.'
name|'get_fake_migration_context_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_update'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mock_update'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'actual_args'
op|'='
name|'mock_update'
op|'.'
name|'call_args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'.'
name|'uuid'
op|','
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'migration_context'"
op|']'
op|','
name|'list'
op|'('
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'MigrationContext'
op|'.'
name|'obj_from_db_obj'
op|'('
nl|'\n'
name|'actual_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'migration_context'"
op|']'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'MigrationContext'
op|')'
newline|'\n'
name|'mock_update'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'='
name|'None'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'mock_update'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
op|'{'
string|"'migration_context'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_flavor_skips_unchanged_flavors
dedent|''
name|'def'
name|'test_save_flavor_skips_unchanged_flavors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|')'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
name|'as'
name|'mock_upd'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_upd'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'notifications'
op|','
string|"'send_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|','
string|"'instance_update_from_api'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|','
string|"'instance_update_at_top'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
DECL|member|_test_skip_cells_sync_helper
name|'def'
name|'_test_skip_cells_sync_helper'
op|'('
name|'self'
op|','
name|'mock_db_update'
op|','
name|'mock_update_at_top'
op|','
nl|'\n'
name|'mock_update_from_api'
op|','
name|'mock_notif_update'
op|','
name|'cell_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'True'
op|','
name|'cell_type'
op|'='
name|'cell_type'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'cell_name'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'='
string|"'foo'"
newline|'\n'
name|'inst'
op|'.'
name|'task_state'
op|'='
string|"'bar'"
newline|'\n'
name|'inst'
op|'.'
name|'cell_name'
op|'='
string|"'foo!bar@baz'"
newline|'\n'
nl|'\n'
name|'old_ref'
op|'='
name|'dict'
op|'('
name|'base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'inst'
op|')'
op|','
name|'vm_state'
op|'='
string|"'old'"
op|','
nl|'\n'
name|'task_state'
op|'='
string|"'old'"
op|')'
newline|'\n'
name|'new_ref'
op|'='
name|'dict'
op|'('
name|'old_ref'
op|','
name|'vm_state'
op|'='
string|"'foo'"
op|','
name|'task_state'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'newer_ref'
op|'='
name|'dict'
op|'('
name|'new_ref'
op|','
name|'vm_state'
op|'='
string|"'bar'"
op|','
name|'task_state'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'mock_db_update'
op|'.'
name|'side_effect'
op|'='
op|'['
op|'('
name|'old_ref'
op|','
name|'new_ref'
op|')'
op|','
op|'('
name|'new_ref'
op|','
name|'newer_ref'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'inst'
op|'.'
name|'skip_cells_sync'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_update_at_top'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'mock_update_from_api'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_notif_update'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'='
string|"'bar'"
newline|'\n'
name|'inst'
op|'.'
name|'task_state'
op|'='
string|"'foo'"
newline|'\n'
nl|'\n'
DECL|function|fake_update_from_api
name|'def'
name|'fake_update_from_api'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'expected_vm_state'
op|','
nl|'\n'
name|'expected_task_state'
op|','
name|'admin_state_reset'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo!bar@baz'"
op|','
name|'instance'
op|'.'
name|'cell_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# This is re-mocked so that cell_name can be checked above.  Since'
nl|'\n'
comment|'# instance objects have no equality testing assert_called_once_with'
nl|'\n'
comment|"# doesn't work."
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|','
nl|'\n'
string|"'instance_update_from_api'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_update_from_api'
op|')'
name|'as'
name|'fake_update_from_api'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo!bar@baz'"
op|','
name|'inst'
op|'.'
name|'cell_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_notif_update'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'if'
name|'cell_type'
op|'=='
string|"'compute'"
op|':'
newline|'\n'
indent|'            '
name|'mock_update_at_top'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
comment|"# Compare primitives since we can't check instance object equality"
nl|'\n'
name|'expected_inst_p'
op|'='
name|'base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'actual_inst'
op|'='
name|'mock_update_at_top'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'actual_inst_p'
op|'='
name|'base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'actual_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_inst_p'
op|','
name|'actual_inst_p'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'fake_update_from_api'
op|'.'
name|'called'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_update_at_top'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'fake_update_from_api'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
name|'None'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
string|"'foo'"
op|','
string|"'task_state'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'cell_name'"
op|':'
string|"'foo!bar@baz'"
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|','
string|"'extra'"
op|','
nl|'\n'
string|"'extra.flavor'"
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
string|"'bar'"
op|','
string|"'task_state'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_db_update'
op|'.'
name|'assert_has_calls'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_skip_cells_api
dedent|''
name|'def'
name|'test_skip_cells_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_skip_cells_sync_helper'
op|'('
name|'cell_type'
op|'='
string|"'api'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_skip_cells_compute
dedent|''
name|'def'
name|'test_skip_cells_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_skip_cells_sync_helper'
op|'('
name|'cell_type'
op|'='
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_deleted
dedent|''
name|'def'
name|'test_get_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'id'
op|'='
number|'123'
op|','
name|'deleted'
op|'='
number|'123'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
comment|"# NOTE(danms): Make sure it's actually a bool"
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inst'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_not_cleaned
dedent|''
name|'def'
name|'test_get_not_cleaned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'id'
op|'='
number|'123'
op|','
name|'cleaned'
op|'='
name|'None'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
comment|"# NOTE(mikal): Make sure it's actually a bool"
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cleaned
dedent|''
name|'def'
name|'test_get_cleaned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'id'
op|'='
number|'123'
op|','
name|'cleaned'
op|'='
number|'1'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
comment|"# NOTE(mikal): Make sure it's actually a bool"
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inst'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_info_cache
dedent|''
name|'def'
name|'test_with_info_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'nwinfo1'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'.'
name|'hydrate'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'foo'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'nwinfo2'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'.'
name|'hydrate'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'bar'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'nwinfo1_json'
op|'='
name|'nwinfo1'
op|'.'
name|'json'
op|'('
op|')'
newline|'\n'
name|'nwinfo2_json'
op|'='
name|'nwinfo2'
op|'.'
name|'json'
op|'('
op|')'
newline|'\n'
name|'fake_info_cache'
op|'='
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
newline|'\n'
name|'fake_inst'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'fake_info_cache'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'nwinfo1_json'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
op|'{'
string|"'network_info'"
op|':'
name|'nwinfo2_json'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_info_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'nwinfo1'
op|','
name|'inst'
op|'.'
name|'info_cache'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_uuid'
op|','
name|'inst'
op|'.'
name|'info_cache'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'info_cache'
op|'.'
name|'network_info'
op|'='
name|'nwinfo2'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_info_cache_none
dedent|''
name|'def'
name|'test_with_info_cache_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'info_cache'
op|'='
name|'None'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst'
op|'.'
name|'info_cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_security_groups
dedent|''
name|'def'
name|'test_with_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'fake_inst'
op|'['
string|"'security_groups'"
op|']'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'name'"
op|':'
string|"'secgroup1'"
op|','
string|"'description'"
op|':'
string|"'fake-desc'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
string|"'updated_at'"
op|':'
name|'None'
op|','
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'name'"
op|':'
string|"'secgroup2'"
op|','
string|"'description'"
op|':'
string|"'fake-desc'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
string|"'updated_at'"
op|':'
name|'None'
op|','
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'security_group_update'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
op|'{'
string|"'description'"
op|':'
string|"'changed'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|'['
string|"'security_groups'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'inst'
op|'.'
name|'security_groups'
op|')'
op|')'
newline|'\n'
name|'for'
name|'index'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'fake_inst'
op|'['
string|"'security_groups'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'group'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'['
name|'key'
op|']'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'security_groups'
op|'['
name|'index'
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst'
op|'.'
name|'security_groups'
op|'['
name|'index'
op|']'
op|','
nl|'\n'
name|'security_group'
op|'.'
name|'SecurityGroup'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'inst'
op|'.'
name|'security_groups'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'security_groups'
op|'['
number|'0'
op|']'
op|'.'
name|'description'
op|'='
string|"'changed'"
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'inst'
op|'.'
name|'security_groups'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_empty_security_groups
dedent|''
name|'def'
name|'test_with_empty_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'security_groups'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'inst'
op|'.'
name|'security_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_empty_pci_devices
dedent|''
name|'def'
name|'test_with_empty_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|','
name|'pci_devices'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'pci_devices'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'inst'
op|'.'
name|'pci_devices'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_pci_devices
dedent|''
name|'def'
name|'test_with_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'fake_inst'
op|'['
string|"'pci_devices'"
op|']'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'a1'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'STANDARD'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceStatus'
op|'.'
name|'ALLOCATED'
op|','
nl|'\n'
string|"'dev_id'"
op|':'
string|"'i'"
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'l'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'fake_uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'parent_addr'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'extra_info'"
op|':'
string|"'{}'"
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'STANDARD'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceStatus'
op|'.'
name|'ALLOCATED'
op|','
nl|'\n'
string|"'dev_id'"
op|':'
string|"'i'"
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'l'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'fake_uuid'
op|','
nl|'\n'
string|"'request_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'parent_addr'"
op|':'
string|"'a1'"
op|','
nl|'\n'
string|"'extra_info'"
op|':'
string|"'{}'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'pci_devices'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
op|'['
string|"'pci_devices'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'inst'
op|'.'
name|'pci_devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_uuid'
op|','
name|'inst'
op|'.'
name|'pci_devices'
op|'['
number|'0'
op|']'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_uuid'
op|','
name|'inst'
op|'.'
name|'pci_devices'
op|'['
number|'1'
op|']'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_fault
dedent|''
name|'def'
name|'test_with_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'fake_faults'
op|'='
op|'['
name|'dict'
op|'('
name|'x'
op|','
name|'instance_uuid'
op|'='
name|'fake_uuid'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_get_by_instance_uuids'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'fake_uuid'
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
name|'fake_uuid'
op|':'
name|'fake_faults'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'fault'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_faults'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|'('
name|'inst'
op|'.'
name|'fault'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.EC2Ids.get_by_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_with_ec2_ids
name|'def'
name|'test_with_ec2_ids'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_ec2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'fake_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
name|'fake_ec2_ids'
op|'='
name|'objects'
op|'.'
name|'EC2Ids'
op|'('
name|'instance_id'
op|'='
string|"'fake-inst'"
op|','
nl|'\n'
name|'ami_id'
op|'='
string|"'fake-ami'"
op|')'
newline|'\n'
name|'mock_ec2'
op|'.'
name|'return_value'
op|'='
name|'fake_ec2_ids'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_uuid'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'ec2_ids'"
op|']'
op|')'
newline|'\n'
name|'mock_ec2'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_ec2_ids'
op|'.'
name|'instance_id'
op|','
name|'inst'
op|'.'
name|'ec2_ids'
op|'.'
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_with_image_meta
name|'def'
name|'test_with_image_meta'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'image_meta'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
name|'inst'
op|'.'
name|'image_meta'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'image_meta'
op|','
name|'objects'
op|'.'
name|'ImageMeta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'100'
op|','
name|'image_meta'
op|'.'
name|'min_ram'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ide'"
op|','
name|'image_meta'
op|'.'
name|'properties'
op|'.'
name|'hw_disk_bus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ne2k_pci'"
op|','
name|'image_meta'
op|'.'
name|'properties'
op|'.'
name|'hw_vif_model'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iteritems_with_extra_attrs
dedent|''
name|'def'
name|'test_iteritems_with_extra_attrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'name'"
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'foo'"
op|','
nl|'\n'
op|'}'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|','
name|'sorted'
op|'('
name|'inst'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_metadata_change_tracking
dedent|''
name|'def'
name|'_test_metadata_change_tracking'
op|'('
name|'self'
op|','
name|'which'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'inst'
op|','
name|'which'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'inst'
op|','
name|'which'
op|')'
op|'['
string|"'foo'"
op|']'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
name|'which'
op|']'
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_skip_scheduled_at
dedent|''
name|'def'
name|'test_create_skip_scheduled_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|')'
newline|'\n'
name|'vals'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo-host'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'128'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
string|"'extra'"
op|':'
op|'{'
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
name|'vals'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vals'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
nl|'\n'
name|'scheduled_at'
op|'='
name|'None'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo-host'"
op|','
name|'inst'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_change_tracking
dedent|''
name|'def'
name|'test_metadata_change_tracking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_metadata_change_tracking'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_system_metadata_change_tracking
dedent|''
name|'def'
name|'test_system_metadata_change_tracking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_metadata_change_tracking'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_stubbed
dedent|''
name|'def'
name|'test_create_stubbed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|')'
newline|'\n'
name|'vals'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'foo-host'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'128'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
string|"'extra'"
op|':'
op|'{'
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
name|'vals'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vals'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|')'
newline|'\n'
name|'extras'
op|'='
op|'{'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'extra'"
op|':'
name|'extras'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'fake_instance'
op|'['
string|"'id'"
op|']'
op|','
name|'inst'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_values
dedent|''
name|'def'
name|'test_create_with_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|')'
newline|'\n'
name|'inst1'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo-host'"
op|','
name|'inst1'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo-host'"
op|','
name|'inst2'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_extras
dedent|''
name|'def'
name|'test_create_with_extras'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'fake_instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'test_instance_numa_topology'
op|'.'
name|'fake_obj_numa_topology'
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'requests'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'123'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|']'
op|')'
op|']'
op|')'
op|','
nl|'\n'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'inst'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'inst'
op|'.'
name|'pci_requests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'inst'
op|'.'
name|'pci_requests'
op|'.'
name|'requests'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'inst'
op|'.'
name|'vcpu_model'
op|')'
newline|'\n'
name|'got_numa_topo'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'.'
name|'numa_topology'
op|'.'
name|'instance_uuid'
op|','
nl|'\n'
name|'got_numa_topo'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'got_pci_requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'123'
op|','
name|'got_pci_requests'
op|'.'
name|'requests'
op|'['
number|'0'
op|']'
op|'.'
name|'count'
op|')'
newline|'\n'
name|'vcpu_model'
op|'='
name|'objects'
op|'.'
name|'VirtCPUModel'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-model'"
op|','
name|'vcpu_model'
op|'.'
name|'model'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recreate_fails
dedent|''
name|'def'
name|'test_recreate_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
name|'inst'
op|'.'
name|'create'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_special_things
dedent|''
name|'def'
name|'test_create_with_special_things'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'foo-host'"
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
string|"'foo'"
op|','
string|"'bar'"
op|']'
op|','
nl|'\n'
string|"'info_cache'"
op|':'
op|'{'
string|"'network_info'"
op|':'
string|"'[]'"
op|'}'
op|','
nl|'\n'
string|"'extra'"
op|':'
op|'{'
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'secgroups'
op|'='
name|'security_group'
op|'.'
name|'SecurityGroupList'
op|'('
op|')'
newline|'\n'
name|'secgroups'
op|'.'
name|'objects'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'foo'"
op|','
string|"'bar'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'secgroup'
op|'='
name|'security_group'
op|'.'
name|'SecurityGroup'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'secgroups'
op|'.'
name|'objects'
op|'.'
name|'append'
op|'('
name|'secgroup'
op|')'
newline|'\n'
dedent|''
name|'info_cache'
op|'='
name|'instance_info_cache'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'info_cache'
op|'.'
name|'network_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|','
name|'security_groups'
op|'='
name|'secgroups'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'info_cache'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_stubbed
dedent|''
name|'def'
name|'test_destroy_stubbed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'deleted_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'6'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'deleted_at'
op|'='
name|'deleted_at'
op|','
nl|'\n'
name|'deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'constraint'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
name|'host'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timeutils'
op|'.'
name|'normalize_time'
op|'('
name|'deleted_at'
op|')'
op|','
nl|'\n'
name|'timeutils'
op|'.'
name|'normalize_time'
op|'('
name|'inst'
op|'.'
name|'deleted_at'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inst'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'db_inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
name|'db_inst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_host_constraint
dedent|''
name|'def'
name|'test_destroy_host_constraint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'db_inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'destroy'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|','
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
DECL|member|test_destroy_cell_sync_to_top
name|'def'
name|'test_destroy_cell_sync_to_top'
op|'('
name|'self'
op|','
name|'mock_destroy'
op|','
name|'mock_destroy_at_top'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'True'
op|','
name|'cell_type'
op|'='
string|"'compute'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock_destroy_at_top'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'actual_inst'
op|'='
name|'mock_destroy_at_top'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'actual_inst'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|','
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
DECL|member|test_destroy_no_cell_sync_to_top
name|'def'
name|'test_destroy_no_cell_sync_to_top'
op|'('
name|'self'
op|','
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_destroy_at_top'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_destroy_at_top'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_name_does_not_trigger_lazy_loads
dedent|''
name|'def'
name|'test_name_does_not_trigger_lazy_loads'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'db_inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'fault'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'foo-%(uuid)s'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo-%s'"
op|'%'
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'fault'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_db_object_not_overwrite_info_cache
dedent|''
name|'def'
name|'test_from_db_object_not_overwrite_info_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info_cache'
op|'='
name|'instance_info_cache'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'info_cache'
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'db_inst'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'db_inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'info_cache'
op|','
name|'inst'
op|'.'
name|'info_cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_db_object_info_cache_not_set
dedent|''
name|'def'
name|'test_from_db_object_info_cache_not_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'db_inst'
op|'.'
name|'pop'
op|'('
string|"'info_cache'"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'db_inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst'
op|'.'
name|'info_cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_db_object_security_groups_net_set
dedent|''
name|'def'
name|'test_from_db_object_security_groups_net_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'None'
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'db_inst'
op|'.'
name|'pop'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'db_inst'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'security_groups'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'inst'
op|'.'
name|'security_groups'
op|'.'
name|'objects'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_get_with_pci_requests
name|'def'
name|'test_get_with_pci_requests'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
op|')'
newline|'\n'
name|'db_instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'db_instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'pci_requests'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'pci_requests'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|'.'
name|'pci_requests'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor
dedent|''
name|'def'
name|'test_get_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_flavor'
op|'='
name|'flavors'
op|'.'
name|'get_default_flavor'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'flavor'
op|'='
name|'db_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'get_flavor'
op|'('
op|')'
op|'.'
name|'flavorid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_namespace
dedent|''
name|'def'
name|'test_get_flavor_namespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_flavor'
op|'='
name|'flavors'
op|'.'
name|'get_default_flavor'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'old_flavor'
op|'='
name|'db_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_flavor'
op|'['
string|"'flavorid'"
op|']'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'get_flavor'
op|'('
string|"'old'"
op|')'
op|'.'
name|'flavorid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_metadata_delete'"
op|')'
newline|'\n'
DECL|member|test_delete_metadata_key
name|'def'
name|'test_delete_metadata_key'
op|'('
name|'self'
op|','
name|'db_delete'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|','
string|"'bar'"
op|':'
string|"'2'"
op|'}'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'delete_metadata_key'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'bar'"
op|':'
string|"'2'"
op|'}'
op|','
name|'inst'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'inst'
op|'.'
name|'obj_get_changes'
op|'('
op|')'
op|')'
newline|'\n'
name|'db_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset_changes
dedent|''
name|'def'
name|'test_reset_changes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'metadata'
op|'='
op|'{'
string|"'1985'"
op|':'
string|"'present'"
op|'}'
newline|'\n'
name|'inst'
op|'.'
name|'system_metadata'
op|'='
op|'{'
string|"'1955'"
op|':'
string|"'past'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'inst'
op|'.'
name|'_orig_metadata'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'1985'"
op|':'
string|"'present'"
op|'}'
op|','
name|'inst'
op|'.'
name|'_orig_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'inst'
op|'.'
name|'_orig_system_metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_generic_calls_handler
dedent|''
name|'def'
name|'test_load_generic_calls_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'inst'
op|','
string|"'_load_generic'"
op|')'
name|'as'
name|'mock_load'
op|':'
newline|'\n'
DECL|function|fake_load
indent|'            '
name|'def'
name|'fake_load'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'inst'
op|'.'
name|'system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_load'
op|'.'
name|'side_effect'
op|'='
name|'fake_load'
newline|'\n'
name|'inst'
op|'.'
name|'system_metadata'
newline|'\n'
name|'mock_load'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_fault_calls_handler
dedent|''
dedent|''
name|'def'
name|'test_load_fault_calls_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'inst'
op|','
string|"'_load_fault'"
op|')'
name|'as'
name|'mock_load'
op|':'
newline|'\n'
DECL|function|fake_load
indent|'            '
name|'def'
name|'fake_load'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'inst'
op|'.'
name|'fault'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_load'
op|'.'
name|'side_effect'
op|'='
name|'fake_load'
newline|'\n'
name|'inst'
op|'.'
name|'fault'
newline|'\n'
name|'mock_load'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_ec2_ids_calls_handler
dedent|''
dedent|''
name|'def'
name|'test_load_ec2_ids_calls_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'inst'
op|','
string|"'_load_ec2_ids'"
op|')'
name|'as'
name|'mock_load'
op|':'
newline|'\n'
DECL|function|fake_load
indent|'            '
name|'def'
name|'fake_load'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'inst'
op|'.'
name|'ec2_ids'
op|'='
name|'objects'
op|'.'
name|'EC2Ids'
op|'('
name|'instance_id'
op|'='
string|"'fake-inst'"
op|','
nl|'\n'
name|'ami_id'
op|'='
string|"'fake-ami'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_load'
op|'.'
name|'side_effect'
op|'='
name|'fake_load'
newline|'\n'
name|'inst'
op|'.'
name|'ec2_ids'
newline|'\n'
name|'mock_load'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_migration_context
dedent|''
dedent|''
name|'def'
name|'test_load_migration_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'MigrationContext'
op|','
string|"'get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'test_mig_ctxt'
op|'.'
name|'fake_migration_context_obj'
nl|'\n'
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'migration_context'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_migration_context_no_context
dedent|''
dedent|''
name|'def'
name|'test_load_migration_context_no_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'MigrationContext'
op|','
string|"'get_by_instance_uuid'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'MigrationContextNotFound'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'inst'
op|'.'
name|'uuid'
op|')'
nl|'\n'
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'mig_ctxt'
op|'='
name|'inst'
op|'.'
name|'migration_context'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'mig_ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_migration_context_no_data
dedent|''
dedent|''
name|'def'
name|'test_load_migration_context_no_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'MigrationContext'
op|','
string|"'get_by_instance_uuid'"
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'loaded_ctxt'
op|'='
name|'inst'
op|'.'
name|'_load_migration_context'
op|'('
name|'db_context'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_get'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'loaded_ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_apply_revert_migration_context
dedent|''
dedent|''
name|'def'
name|'test_apply_revert_migration_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'None'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'='
name|'test_mig_ctxt'
op|'.'
name|'get_fake_migration_context_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'apply_migration_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst'
op|'.'
name|'numa_topology'
op|','
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'revert_migration_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_drop_migration_context
dedent|''
name|'def'
name|'test_drop_migration_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'='
name|'test_mig_ctxt'
op|'.'
name|'get_fake_migration_context_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'.'
name|'instance_uuid'
op|'='
name|'inst'
op|'.'
name|'uuid'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'.'
name|'id'
op|'='
number|'7'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.db.instance_extra_update_by_uuid'"
op|')'
name|'as'
name|'update_extra'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'drop_migration_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst'
op|'.'
name|'migration_context'
op|')'
newline|'\n'
name|'update_extra'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|'{'
string|'"migration_context"'
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mutated_migration_context
dedent|''
dedent|''
name|'def'
name|'test_mutated_migration_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'numa_topology'
op|'='
op|'('
name|'test_instance_numa_topology'
op|'.'
nl|'\n'
name|'fake_obj_numa_topology'
op|'.'
name|'obj_clone'
op|'('
op|')'
op|')'
newline|'\n'
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'memory'
op|'='
number|'1024'
newline|'\n'
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'memory'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'numa_topology'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'='
name|'test_mig_ctxt'
op|'.'
name|'get_fake_migration_context_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'with'
name|'inst'
op|'.'
name|'mutated_migration_context'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'inst'
op|'.'
name|'numa_topology'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'migration_context'
op|'.'
name|'new_numa_topology'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'numa_topology'
op|','
name|'inst'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clear_numa_topology
dedent|''
name|'def'
name|'test_clear_numa_topology'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'numa_topology'
op|'='
op|'('
name|'test_instance_numa_topology'
op|'.'
nl|'\n'
name|'fake_obj_numa_topology'
op|'.'
name|'obj_clone'
op|'('
op|')'
op|')'
newline|'\n'
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|'='
number|'42'
newline|'\n'
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|'='
number|'43'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'numa_topology'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'clear_numa_topology'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'numa_topology'"
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'-'
number|'1'
op|','
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'-'
number|'1'
op|','
name|'numa_topology'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_load_generic
name|'def'
name|'test_load_generic'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst2'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'inst2'
newline|'\n'
name|'inst'
op|'='
name|'instance'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'metadata'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_fault_get_by_instance_uuids'"
op|')'
newline|'\n'
DECL|member|test_load_fault
name|'def'
name|'test_load_fault'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_fault'
op|'='
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
op|'{'
name|'uuids'
op|'.'
name|'load_fault_instance'
op|':'
op|'['
name|'fake_fault'
op|']'
op|'}'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'load_fault_instance'
op|')'
newline|'\n'
name|'fault'
op|'='
name|'inst'
op|'.'
name|'fault'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'uuids'
op|'.'
name|'load_fault_instance'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_fault'
op|'['
string|"'id'"
op|']'
op|','
name|'fault'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'metadata'"
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.EC2Ids.get_by_instance'"
op|')'
newline|'\n'
DECL|member|test_load_ec2_ids
name|'def'
name|'test_load_ec2_ids'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_ec2_ids'
op|'='
name|'objects'
op|'.'
name|'EC2Ids'
op|'('
name|'instance_id'
op|'='
string|"'fake-inst'"
op|','
nl|'\n'
name|'ami_id'
op|'='
string|"'fake-ami'"
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'fake_ec2_ids'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'ec2_ids'
op|'='
name|'inst'
op|'.'
name|'ec2_ids'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_ec2_ids'
op|','
name|'ec2_ids'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.SecurityGroupList.get_by_instance'"
op|')'
newline|'\n'
DECL|member|test_load_security_groups
name|'def'
name|'test_load_security_groups'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'secgroups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'foo'"
op|','
string|"'bar'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'secgroup'
op|'='
name|'security_group'
op|'.'
name|'SecurityGroup'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'secgroups'
op|'.'
name|'append'
op|'('
name|'secgroup'
op|')'
newline|'\n'
dedent|''
name|'fake_secgroups'
op|'='
name|'security_group'
op|'.'
name|'SecurityGroupList'
op|'('
name|'objects'
op|'='
name|'secgroups'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'fake_secgroups'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'secgroups'
op|'='
name|'inst'
op|'.'
name|'security_groups'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_secgroups'
op|','
name|'secgroups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_with_extras
dedent|''
name|'def'
name|'test_get_with_extras'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pci_requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'123'
op|','
name|'spec'
op|'='
op|'['
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'pci_requests'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'inst'
op|'.'
name|'uuid'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'pci_requests'"
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'pci_requests'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inst'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'pci_requests'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestInstanceObject'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestInstanceObject
name|'_TestInstanceObject'
op|')'
op|':'
newline|'\n'
DECL|member|_test_save_objectfield_fk_constraint_fails
indent|'    '
name|'def'
name|'_test_save_objectfield_fk_constraint_fails'
op|'('
name|'self'
op|','
name|'foreign_key'
op|','
nl|'\n'
name|'expected_exception'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): Do this here and not in the remote test because'
nl|'\n'
comment|"# we're mocking out obj_attr_is_set() without the thing actually"
nl|'\n'
comment|'# being set, which confuses the heck out of the serialization'
nl|'\n'
comment|'# stuff.'
nl|'\n'
indent|'        '
name|'error'
op|'='
name|'db_exc'
op|'.'
name|'DBReferenceError'
op|'('
string|"'table'"
op|','
string|"'constraint'"
op|','
name|'foreign_key'
op|','
nl|'\n'
string|"'key_table'"
op|')'
newline|'\n'
comment|'# Prevent lazy-loading any fields, results in InstanceNotFound'
nl|'\n'
name|'attrs'
op|'='
name|'objects'
op|'.'
name|'instance'
op|'.'
name|'INSTANCE_OPTIONAL_ATTRS'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'attrs'
op|')'
newline|'\n'
name|'fields_with_save_methods'
op|'='
op|'['
name|'field'
name|'for'
name|'field'
name|'in'
name|'instance'
op|'.'
name|'fields'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'instance'
op|','
string|"'_save_%s'"
op|'%'
name|'field'
op|')'
op|']'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'fields_with_save_methods'
op|':'
newline|'\n'
indent|'            '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'_save_%s'"
op|'%'
name|'field'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'obj_attr_is_set'"
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_is_set'
op|','
name|'mock_save_field'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_is_set'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_save_field'
op|'.'
name|'side_effect'
op|'='
name|'error'
newline|'\n'
name|'instance'
op|'.'
name|'obj_reset_changes'
op|'('
name|'fields'
op|'='
op|'['
name|'field'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'_changed_fields'
op|'.'
name|'add'
op|'('
name|'field'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected_exception'
op|','
name|'instance'
op|'.'
name|'save'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_reset_changes'
op|'('
name|'fields'
op|'='
op|'['
name|'field'
op|']'
op|')'
newline|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_objectfield_missing_instance_row
dedent|''
dedent|''
name|'def'
name|'test_save_objectfield_missing_instance_row'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_save_objectfield_fk_constraint_fails'
op|'('
nl|'\n'
string|"'instance_uuid'"
op|','
name|'exception'
op|'.'
name|'InstanceNotFound'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save_objectfield_reraises_if_not_instance_related
dedent|''
name|'def'
name|'test_save_objectfield_reraises_if_not_instance_related'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_save_objectfield_fk_constraint_fails'
op|'('
nl|'\n'
string|"'other_foreign_key'"
op|','
name|'db_exc'
op|'.'
name|'DBReferenceError'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestRemoteInstanceObject'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteInstanceObject
name|'_TestInstanceObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestInstanceListObject
dedent|''
name|'class'
name|'_TestInstanceListObject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|fake_instance
indent|'    '
name|'def'
name|'fake_instance'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'updates'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'access_ip_v4'
op|'='
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'access_ip_v6'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'db_inst'
op|'['
string|"'terminated_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'deleted_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'updated_at'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db_inst'
op|'['
string|"'launched_at'"
op|']'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'12'
op|','
nl|'\n'
number|'22'
op|','
number|'4'
op|','
number|'0'
op|')'
newline|'\n'
name|'db_inst'
op|'['
string|"'security_groups'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'db_inst'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'db_inst'
op|'['
string|"'info_cache'"
op|']'
op|'='
name|'dict'
op|'('
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'updates'
op|':'
newline|'\n'
indent|'            '
name|'db_inst'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'db_inst'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_filters
dedent|''
name|'def'
name|'test_get_all_by_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
string|"'uuid'"
op|','
nl|'\n'
string|"'asc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
string|"'uuid'"
op|','
string|"'asc'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|']'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_filters_sorted
dedent|''
dedent|''
name|'def'
name|'test_get_all_by_filters_sorted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters_sort'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters_sort'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
op|','
nl|'\n'
name|'sort_keys'
op|'='
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|','
name|'sort_keys'
op|'='
op|'['
string|"'uuid'"
op|']'
op|','
name|'sort_dirs'
op|'='
op|'['
string|"'asc'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters_sort'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
DECL|member|test_get_all_by_filters_calls_non_sort
name|'def'
name|'test_get_all_by_filters_calls_non_sort'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_by_filters'
op|','
nl|'\n'
name|'mock_get_by_filters_sort'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies InstanceList.get_by_filters calls correct DB function.'''"
newline|'\n'
comment|'# Single sort key/direction is set, call non-sorted DB function'
nl|'\n'
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'sort_key'
op|'='
string|"'key'"
op|','
name|'sort_dir'
op|'='
string|"'dir'"
op|','
nl|'\n'
name|'limit'
op|'='
number|'100'
op|','
name|'marker'
op|'='
string|"'uuid'"
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_get_by_filters'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
string|"'key'"
op|','
string|"'dir'"
op|','
name|'limit'
op|'='
number|'100'
op|','
nl|'\n'
name|'marker'
op|'='
string|"'uuid'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_by_filters_sort'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters_sort'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
DECL|member|test_get_all_by_filters_calls_sort
name|'def'
name|'test_get_all_by_filters_calls_sort'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_by_filters'
op|','
nl|'\n'
name|'mock_get_by_filters_sort'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Verifies InstanceList.get_by_filters calls correct DB function.'''"
newline|'\n'
comment|'# Multiple sort keys/directions are set, call sorted DB function'
nl|'\n'
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'limit'
op|'='
number|'100'
op|','
name|'marker'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|','
name|'sort_keys'
op|'='
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|']'
op|','
nl|'\n'
name|'sort_dirs'
op|'='
op|'['
string|"'dir1'"
op|','
string|"'dir2'"
op|']'
op|')'
newline|'\n'
name|'mock_get_by_filters_sort'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'limit'
op|'='
number|'100'
op|','
nl|'\n'
name|'marker'
op|'='
string|"'uuid'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_keys'
op|'='
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|']'
op|','
name|'sort_dirs'
op|'='
op|'['
string|"'dir1'"
op|','
string|"'dir2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_by_filters'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_by_filters_works_for_cleaned
dedent|''
name|'def'
name|'test_get_all_by_filters_works_for_cleaned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|','
name|'updates'
op|'='
op|'{'
string|"'deleted'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'cleaned'"
op|':'
name|'None'
op|'}'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'read_deleted'
op|'='
string|"'yes'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'cleaned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
string|"'uuid'"
op|','
string|"'asc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'metadata'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'fakes'
op|'['
number|'1'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'cleaned'"
op|':'
name|'False'
op|'}'
op|','
string|"'uuid'"
op|','
string|"'asc'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|']'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'inst_list'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_host
dedent|''
name|'def'
name|'test_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'_context'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'inst_list'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_host_and_node
dedent|''
name|'def'
name|'test_get_by_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host_and_node'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|','
string|"'bar'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_host_and_node'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'foo'"
op|','
string|"'bar'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_host_and_not_type
dedent|''
dedent|''
name|'def'
name|'test_get_by_host_and_not_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host_and_not_type'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host_and_not_type'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|','
nl|'\n'
name|'type_id'
op|'='
string|"'bar'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_host_and_not_type'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|','
string|"'bar'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance._expected_cols'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.instance_get_all'"
op|')'
newline|'\n'
DECL|member|test_get_all
name|'def'
name|'test_get_all'
op|'('
name|'self'
op|','
name|'mock_get_all'
op|','
name|'mock_exp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'return_value'
op|'='
name|'fakes'
newline|'\n'
name|'mock_exp'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'exp_att'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_all'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'expected_attrs'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'mock_get_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'columns_to_join'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'exp_att'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_hung_in_rebooting
dedent|''
dedent|''
name|'def'
name|'test_get_hung_in_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
name|'dt'
op|'='
name|'utils'
op|'.'
name|'isotime'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_hung_in_rebooting'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_hung_in_rebooting'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dt'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_hung_in_rebooting'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'dt'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'fakes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakes'
op|'['
name|'i'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|'['
name|'i'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_active_by_window_joined
dedent|''
dedent|''
name|'def'
name|'test_get_active_by_window_joined'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'='
op|'['
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'1'
op|')'
op|','
name|'self'
op|'.'
name|'fake_instance'
op|'('
number|'2'
op|')'
op|']'
newline|'\n'
comment|'# NOTE(mriedem): Send in a timezone-naive datetime since the'
nl|'\n'
comment|'# InstanceList.get_active_by_window_joined method should convert it'
nl|'\n'
comment|"# to tz-aware for the DB API call, which we'll assert with our stub."
nl|'\n'
name|'dt'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_get_active_by_window_joined
name|'def'
name|'fake_instance_get_active_by_window_joined'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|','
nl|'\n'
name|'columns_to_join'
op|')'
op|':'
newline|'\n'
comment|'# make sure begin is tz-aware'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'begin'
op|'.'
name|'utcoffset'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'end'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'metadata'"
op|']'
op|','
name|'columns_to_join'
op|')'
newline|'\n'
name|'return'
name|'fakes'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_get_active_by_window_joined'"
op|','
nl|'\n'
name|'fake_instance_get_active_by_window_joined'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_active_by_window_joined'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'dt'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'fake'
op|','
name|'obj'
name|'in'
name|'zip'
op|'('
name|'fakes'
op|','
name|'inst_list'
op|'.'
name|'objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'obj'
op|','
name|'instance'
op|'.'
name|'Instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake'
op|'['
string|"'uuid'"
op|']'
op|','
name|'obj'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_fault
dedent|''
dedent|''
name|'def'
name|'test_with_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_insts'
op|'='
op|'['
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'faults_instance'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'faults_instance_nonexist'
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'fake_faults'
op|'='
name|'test_instance_fault'
op|'.'
name|'fake_faults'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_get_by_instance_uuids'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host'"
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_insts'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'fake_insts'
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_faults'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'instances'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'fault'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instances'
op|'['
number|'1'
op|']'
op|'.'
name|'fault'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fill_faults
dedent|''
name|'def'
name|'test_fill_faults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_get_by_instance_uuids'"
op|')'
newline|'\n'
nl|'\n'
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'db_fault_1'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'db_fault_2'
op|')'
newline|'\n'
name|'insts'
op|'='
op|'['
name|'inst1'
op|','
name|'inst2'
op|']'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'insts'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
dedent|''
name|'db_faults'
op|'='
op|'{'
nl|'\n'
string|"'uuid1'"
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'uuids'
op|'.'
name|'db_fault_1'
op|','
nl|'\n'
string|"'code'"
op|':'
number|'456'
op|','
nl|'\n'
string|"'message'"
op|':'
string|"'Fake message'"
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'No details'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_fault_get_by_instance_uuids'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'x'
op|'.'
name|'uuid'
name|'for'
name|'x'
name|'in'
name|'insts'
op|']'
op|','
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'db_faults'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
op|')'
newline|'\n'
name|'inst_list'
op|'.'
name|'_context'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'inst_list'
op|'.'
name|'objects'
op|'='
name|'insts'
newline|'\n'
name|'faulty'
op|'='
name|'inst_list'
op|'.'
name|'fill_faults'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'uuids'
op|'.'
name|'db_fault_1'
op|']'
op|','
name|'list'
op|'('
name|'faulty'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_faults'
op|'['
string|"'uuid1'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
name|'inst_list'
op|'['
number|'0'
op|']'
op|'.'
name|'fault'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'inst_list'
op|'['
number|'1'
op|']'
op|'.'
name|'fault'
op|')'
newline|'\n'
name|'for'
name|'inst'
name|'in'
name|'inst_list'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.obj_make_compatible'"
op|')'
newline|'\n'
DECL|member|test_get_by_security_group
name|'def'
name|'test_get_by_security_group'
op|'('
name|'self'
op|','
name|'mock_compat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_secgroup'
op|'='
name|'dict'
op|'('
name|'test_security_group'
op|'.'
name|'fake_secgroup'
op|')'
newline|'\n'
name|'fake_secgroup'
op|'['
string|"'instances'"
op|']'
op|'='
op|'['
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'2'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'security_group_get'"
op|')'
name|'as'
name|'sgg'
op|':'
newline|'\n'
indent|'            '
name|'sgg'
op|'.'
name|'return_value'
op|'='
name|'fake_secgroup'
newline|'\n'
name|'secgroup'
op|'='
name|'security_group'
op|'.'
name|'SecurityGroup'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'.'
name|'id'
op|'='
name|'fake_secgroup'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instances'
op|'='
name|'instance'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_security_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'secgroup'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'instances'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|','
op|'['
name|'x'
op|'.'
name|'id'
name|'for'
name|'x'
name|'in'
name|'instances'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'obj_attr_is_set'
op|'('
string|"'system_metadata'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_by_grantee_security_group_ids
dedent|''
name|'def'
name|'test_get_by_grantee_security_group_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instances'
op|'='
op|'['
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'1'
op|')'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'id'
op|'='
number|'2'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'db'
op|','
string|"'instance_get_all_by_grantee_security_groups'"
op|')'
name|'as'
name|'igabgsg'
op|':'
newline|'\n'
indent|'            '
name|'igabgsg'
op|'.'
name|'return_value'
op|'='
name|'fake_instances'
newline|'\n'
name|'secgroup_ids'
op|'='
op|'['
number|'1'
op|']'
newline|'\n'
name|'instances'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_grantee_security_group_ids'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'secgroup_ids'
op|')'
newline|'\n'
name|'igabgsg'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'secgroup_ids'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'instances'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|','
op|'['
name|'x'
op|'.'
name|'id'
name|'for'
name|'x'
name|'in'
name|'instances'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestInstanceListObject'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestInstanceListObject
name|'_TestInstanceListObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestRemoteInstanceListObject'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteInstanceListObject
name|'_TestInstanceListObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestInstanceObjectMisc
dedent|''
name|'class'
name|'TestInstanceObjectMisc'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_expected_cols
indent|'    '
name|'def'
name|'test_expected_cols'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance'
op|','
string|"'_INSTANCE_OPTIONAL_JOINED_FIELDS'"
op|','
op|'['
string|"'bar'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'bar'"
op|']'
op|','
name|'instance'
op|'.'
name|'_expected_cols'
op|'('
op|'['
string|"'foo'"
op|','
string|"'bar'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'_expected_cols'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_expected_cols_extra
dedent|''
name|'def'
name|'test_expected_cols_extra'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'metadata'"
op|','
string|"'extra'"
op|','
string|"'extra.numa_topology'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'_expected_cols'
op|'('
op|'['
string|"'metadata'"
op|','
nl|'\n'
string|"'numa_topology'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
