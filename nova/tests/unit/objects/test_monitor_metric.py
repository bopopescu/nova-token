begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
nl|'\n'
DECL|variable|_ts_now
name|'_ts_now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_monitor_metric_spec
name|'_monitor_metric_spec'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'fields'
op|'.'
name|'MonitorMetricType'
op|'.'
name|'CPU_FREQUENCY'
op|','
nl|'\n'
string|"'value'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'timestamp'"
op|':'
name|'_ts_now'
op|'.'
name|'isoformat'
op|'('
op|')'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'nova.virt.libvirt.driver'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_monitor_metric_perc_spec
name|'_monitor_metric_perc_spec'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'fields'
op|'.'
name|'MonitorMetricType'
op|'.'
name|'CPU_PERCENT'
op|','
nl|'\n'
string|"'value'"
op|':'
number|'0.17'
op|','
nl|'\n'
string|"'timestamp'"
op|':'
name|'_ts_now'
op|'.'
name|'isoformat'
op|'('
op|')'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'nova.virt.libvirt.driver'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_monitor_numa_metric_spec
name|'_monitor_numa_metric_spec'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'fields'
op|'.'
name|'MonitorMetricType'
op|'.'
name|'NUMA_MEM_BW_CURRENT'
op|','
nl|'\n'
string|"'numa_membw_values'"
op|':'
op|'{'
string|'"0"'
op|':'
number|'10'
op|','
string|'"1"'
op|':'
number|'43'
op|'}'
op|','
nl|'\n'
string|"'timestamp'"
op|':'
name|'_ts_now'
op|'.'
name|'isoformat'
op|'('
op|')'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'nova.virt.libvirt.driver'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_monitor_metric_list_spec
name|'_monitor_metric_list_spec'
op|'='
op|'['
name|'_monitor_metric_spec'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestMonitorMetricObject
name|'class'
name|'_TestMonitorMetricObject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|test_monitor_metric_to_dict
indent|'    '
name|'def'
name|'test_monitor_metric_to_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'objects'
op|'.'
name|'MonitorMetric'
op|'('
name|'name'
op|'='
string|"'cpu.frequency'"
op|','
nl|'\n'
name|'value'
op|'='
number|'1000'
op|','
nl|'\n'
name|'timestamp'
op|'='
name|'_ts_now'
op|','
nl|'\n'
name|'source'
op|'='
string|"'nova.virt.libvirt.driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_monitor_metric_spec'
op|','
name|'obj'
op|'.'
name|'to_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_monitor_metric_perc_to_dict
dedent|''
name|'def'
name|'test_monitor_metric_perc_to_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test to ensure division by 100.0 occurs on percentage value."""'
newline|'\n'
name|'obj'
op|'='
name|'objects'
op|'.'
name|'MonitorMetric'
op|'('
name|'name'
op|'='
string|"'cpu.percent'"
op|','
nl|'\n'
name|'value'
op|'='
number|'17'
op|','
nl|'\n'
name|'timestamp'
op|'='
name|'_ts_now'
op|','
nl|'\n'
name|'source'
op|'='
string|"'nova.virt.libvirt.driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_monitor_metric_perc_spec'
op|','
name|'obj'
op|'.'
name|'to_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_monitor_metric_list_to_list
dedent|''
name|'def'
name|'test_monitor_metric_list_to_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'objects'
op|'.'
name|'MonitorMetric'
op|'('
name|'name'
op|'='
string|"'cpu.frequency'"
op|','
nl|'\n'
name|'value'
op|'='
number|'1000'
op|','
nl|'\n'
name|'timestamp'
op|'='
name|'_ts_now'
op|','
nl|'\n'
name|'source'
op|'='
string|"'nova.virt.libvirt.driver'"
op|')'
newline|'\n'
name|'list_obj'
op|'='
name|'objects'
op|'.'
name|'MonitorMetricList'
op|'('
name|'objects'
op|'='
op|'['
name|'obj'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_monitor_metric_list_spec'
op|','
name|'list_obj'
op|'.'
name|'to_list'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_monitor_NUMA_metric_to_dict
dedent|''
name|'def'
name|'test_monitor_NUMA_metric_to_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'objects'
op|'.'
name|'MonitorMetric'
op|'('
name|'name'
op|'='
string|"'numa.membw.current'"
op|','
nl|'\n'
name|'numa_membw_values'
op|'='
op|'{'
string|'"0"'
op|':'
number|'10'
op|','
string|'"1"'
op|':'
number|'43'
op|'}'
op|','
nl|'\n'
name|'timestamp'
op|'='
name|'_ts_now'
op|','
nl|'\n'
name|'source'
op|'='
string|"'nova.virt.libvirt.driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_monitor_numa_metric_spec'
op|','
name|'obj'
op|'.'
name|'to_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestMonitorMetricObject'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestMonitorMetricObject
name|'_TestMonitorMetricObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestRemoteMonitorMetricObject'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteMonitorMetricObject
name|'_TestMonitorMetricObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
