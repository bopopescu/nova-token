begin_unit
comment|'#    Copyright 2015 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'request_spec'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_request_spec'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_objects'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_TestRequestSpecObject
name|'class'
name|'_TestRequestSpecObject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_image_meta_from_image_as_object
indent|'    '
name|'def'
name|'test_image_meta_from_image_as_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Just isolating the test for the from_dict() method'
nl|'\n'
indent|'        '
name|'image_meta'
op|'='
name|'objects'
op|'.'
name|'ImageMeta'
op|'('
name|'name'
op|'='
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_image_meta_from_image'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image_meta'
op|','
name|'spec'
op|'.'
name|'image'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'ImageMeta'
op|','
string|"'from_dict'"
op|')'
newline|'\n'
DECL|member|test_image_meta_from_image_as_dict
name|'def'
name|'test_image_meta_from_image_as_dict'
op|'('
name|'self'
op|','
name|'from_dict'
op|')'
op|':'
newline|'\n'
comment|'# Just isolating the test for the from_dict() method'
nl|'\n'
indent|'        '
name|'image_meta'
op|'='
name|'objects'
op|'.'
name|'ImageMeta'
op|'('
name|'name'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'from_dict'
op|'.'
name|'return_value'
op|'='
name|'image_meta'
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_image_meta_from_image'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image_meta'
op|','
name|'spec'
op|'.'
name|'image'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_meta_from_image_as_none
dedent|''
name|'def'
name|'test_image_meta_from_image_as_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# just add a dumb check to have a full coverage'
nl|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_image_meta_from_image'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'image'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'base'
op|','
string|"'obj_to_primitive'"
op|')'
newline|'\n'
DECL|member|test_to_legacy_image
name|'def'
name|'test_to_legacy_image'
op|'('
name|'self'
op|','
name|'obj_to_primitive'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'image'
op|'='
name|'objects'
op|'.'
name|'ImageMeta'
op|'('
op|')'
op|')'
newline|'\n'
name|'fake_dict'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'obj_to_primitive'
op|'.'
name|'return_value'
op|'='
name|'fake_dict'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_dict'
op|','
name|'spec'
op|'.'
name|'_to_legacy_image'
op|'('
op|')'
op|')'
newline|'\n'
name|'obj_to_primitive'
op|'.'
name|'assert_called_once_with'
op|'('
name|'spec'
op|'.'
name|'image'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'base'
op|','
string|"'obj_to_primitive'"
op|')'
newline|'\n'
DECL|member|test_to_legacy_image_with_none
name|'def'
name|'test_to_legacy_image_with_none'
op|'('
name|'self'
op|','
name|'obj_to_primitive'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'image'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'spec'
op|'.'
name|'_to_legacy_image'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'obj_to_primitive'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_instance_as_object
dedent|''
name|'def'
name|'test_from_instance_as_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'pci_requests'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'project_id'
op|'='
string|"'1'"
newline|'\n'
name|'instance'
op|'.'
name|'availability_zone'
op|'='
string|"'nova'"
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'instance_fields'
op|'='
op|'['
string|"'numa_topology'"
op|','
string|"'pci_requests'"
op|','
string|"'uuid'"
op|','
nl|'\n'
string|"'project_id'"
op|','
string|"'availability_zone'"
op|']'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'instance_fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
op|'=='
string|"'uuid'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'getattr'
op|'('
name|'instance'
op|','
name|'field'
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'spec'
op|','
string|"'instance_uuid'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'getattr'
op|'('
name|'instance'
op|','
name|'field'
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'spec'
op|','
name|'field'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_instance_as_dict
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_from_instance_as_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'dict'
op|'('
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'None'
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'nova'"
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'instance_fields'
op|'='
op|'['
string|"'numa_topology'"
op|','
string|"'pci_requests'"
op|','
string|"'uuid'"
op|','
nl|'\n'
string|"'project_id'"
op|','
string|"'availability_zone'"
op|']'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'instance_fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
op|'=='
string|"'uuid'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'get'
op|'('
name|'field'
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'spec'
op|','
string|"'instance_uuid'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'get'
op|'('
name|'field'
op|')'
op|','
name|'getattr'
op|'('
name|'spec'
op|','
name|'field'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|','
nl|'\n'
string|"'from_request_spec_instance_props'"
op|')'
newline|'\n'
DECL|member|test_from_instance_with_pci_requests
name|'def'
name|'test_from_instance_with_pci_requests'
op|'('
name|'self'
op|','
name|'pci_from_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_pci_requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
op|')'
newline|'\n'
name|'pci_from_spec'
op|'.'
name|'return_value'
op|'='
name|'fake_pci_requests'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'10'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'nova'"
op|','
nl|'\n'
name|'pci_requests'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fakeid'"
op|','
nl|'\n'
string|"'requests'"
op|':'
op|'['
op|'{'
string|"'count'"
op|':'
number|'1'
op|','
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|'}'
op|']'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'.'
name|'_from_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'pci_from_spec'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|'['
string|"'pci_requests'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_pci_requests'
op|','
name|'spec'
op|'.'
name|'pci_requests'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_instance_with_numa_stuff
dedent|''
name|'def'
name|'test_from_instance_with_numa_stuff'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'10'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'nova'"
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'None'
op|','
nl|'\n'
name|'numa_topology'
op|'='
op|'{'
string|"'cells'"
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'cpuset'"
op|':'
op|'['
string|"'1'"
op|']'
op|','
string|"'memory'"
op|':'
number|'8192'
op|','
nl|'\n'
string|"'pagesize'"
op|':'
name|'None'
op|','
string|"'cpu_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cpu_pinning_raw'"
op|':'
name|'None'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'.'
name|'_from_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'numa_topology'
op|','
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|')'
newline|'\n'
name|'cells'
op|'='
name|'spec'
op|'.'
name|'numa_topology'
op|'.'
name|'cells'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'cells'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_flavor_as_object
dedent|''
name|'def'
name|'test_from_flavor_as_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_flavor'
op|'('
name|'flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'spec'
op|'.'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_flavor_as_dict
dedent|''
name|'def'
name|'test_from_flavor_as_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_dict'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'.'
name|'_from_flavor'
op|'('
name|'flavor_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'flavor'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
name|'spec'
op|'.'
name|'flavor'
op|'.'
name|'obj_get_changes'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_instance
dedent|''
name|'def'
name|'test_to_legacy_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'root_gb'
op|'='
number|'10'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'10'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'numa_topology'
op|'='
name|'None'
newline|'\n'
name|'spec'
op|'.'
name|'pci_requests'
op|'='
name|'None'
newline|'\n'
name|'spec'
op|'.'
name|'project_id'
op|'='
string|"'1'"
newline|'\n'
name|'spec'
op|'.'
name|'availability_zone'
op|'='
string|"'nova'"
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'spec'
op|'.'
name|'_to_legacy_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'nova'"
op|'}'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_instance_with_unset_values
dedent|''
name|'def'
name|'test_to_legacy_instance_with_unset_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'spec'
op|'.'
name|'_to_legacy_instance'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_retry
dedent|''
name|'def'
name|'test_from_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'retry_dict'
op|'='
op|'{'
string|"'num_attempts'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hosts'"
op|':'
op|'['
op|'['
string|"'fake1'"
op|','
string|"'node1'"
op|']'
op|']'
op|'}'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_retry'
op|'('
name|'retry_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'retry'
op|','
name|'objects'
op|'.'
name|'SchedulerRetries'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'spec'
op|'.'
name|'retry'
op|'.'
name|'num_attempts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'retry'
op|'.'
name|'hosts'
op|','
name|'objects'
op|'.'
name|'ComputeNodeList'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'spec'
op|'.'
name|'retry'
op|'.'
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake1'"
op|','
name|'spec'
op|'.'
name|'retry'
op|'.'
name|'hosts'
op|'['
number|'0'
op|']'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'node1'"
op|','
name|'spec'
op|'.'
name|'retry'
op|'.'
name|'hosts'
op|'['
number|'0'
op|']'
op|'.'
name|'hypervisor_hostname'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_retry_missing_values
dedent|''
name|'def'
name|'test_from_retry_missing_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'retry_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_retry'
op|'('
name|'retry_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'retry'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_populate_group_info
dedent|''
name|'def'
name|'test_populate_group_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_props'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'filt_props'
op|'['
string|"'group_updated'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'filt_props'
op|'['
string|"'group_policies'"
op|']'
op|'='
name|'set'
op|'('
op|'['
string|"'affinity'"
op|']'
op|')'
newline|'\n'
name|'filt_props'
op|'['
string|"'group_hosts'"
op|']'
op|'='
name|'set'
op|'('
op|'['
string|"'fake1'"
op|']'
op|')'
newline|'\n'
name|'filt_props'
op|'['
string|"'group_members'"
op|']'
op|'='
name|'set'
op|'('
op|'['
string|"'fake-instance1'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_populate_group_info'
op|'('
name|'filt_props'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'instance_group'
op|','
name|'objects'
op|'.'
name|'InstanceGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'affinity'"
op|']'
op|','
name|'spec'
op|'.'
name|'instance_group'
op|'.'
name|'policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake1'"
op|']'
op|','
name|'spec'
op|'.'
name|'instance_group'
op|'.'
name|'hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake-instance1'"
op|']'
op|','
name|'spec'
op|'.'
name|'instance_group'
op|'.'
name|'members'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_populate_group_info_missing_values
dedent|''
name|'def'
name|'test_populate_group_info_missing_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_props'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_populate_group_info'
op|'('
name|'filt_props'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'instance_group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_limits
dedent|''
name|'def'
name|'test_from_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits_dict'
op|'='
op|'{'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1.0'
op|'}'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_limits'
op|'('
name|'limits_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'limits'
op|','
name|'objects'
op|'.'
name|'SchedulerLimits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'vcpu'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'disk_gb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_limits_missing_values
dedent|''
name|'def'
name|'test_from_limits_missing_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_limits'
op|'('
name|'limits_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'spec'
op|'.'
name|'limits'
op|','
name|'objects'
op|'.'
name|'SchedulerLimits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'numa_topology'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'vcpu'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'disk_gb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'limits'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_hints
dedent|''
name|'def'
name|'test_from_hints'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hints_dict'
op|'='
op|'{'
string|"'foo_str'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'bar_list'"
op|':'
op|'['
string|"'2'"
op|']'
op|'}'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_hints'
op|'('
name|'hints_dict'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'foo_str'"
op|':'
op|'['
string|"'1'"
op|']'
op|','
nl|'\n'
string|"'bar_list'"
op|':'
op|'['
string|"'2'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'spec'
op|'.'
name|'scheduler_hints'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_hints_with_no_hints
dedent|''
name|'def'
name|'test_from_hints_with_no_hints'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'spec'
op|'.'
name|'_from_hints'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec'
op|'.'
name|'scheduler_hints'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'SchedulerLimits'
op|','
string|"'from_dict'"
op|')'
newline|'\n'
DECL|member|test_from_primitives
name|'def'
name|'test_from_primitives'
op|'('
name|'self'
op|','
name|'mock_limits'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec_dict'
op|'='
op|'{'
string|"'instance_type'"
op|':'
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|')'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
name|'objects'
op|'.'
name|'Instance'
op|'('
nl|'\n'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'None'
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'nova'"
op|')'
op|'}'
newline|'\n'
name|'filt_props'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|"# We seriously don't care about the return values, we just want to make"
nl|'\n'
comment|'# sure that all the fields are set'
nl|'\n'
name|'mock_limits'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'.'
name|'from_primitives'
op|'('
name|'ctxt'
op|','
name|'spec_dict'
op|','
name|'filt_props'
op|')'
newline|'\n'
name|'mock_limits'
op|'.'
name|'assert_called_once_with'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
comment|'# Make sure that all fields are set using that helper method'
nl|'\n'
name|'for'
name|'field'
name|'in'
op|'['
name|'f'
name|'for'
name|'f'
name|'in'
name|'spec'
op|'.'
name|'obj_fields'
name|'if'
name|'f'
op|'!='
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'spec'
op|'.'
name|'obj_attr_is_set'
op|'('
name|'field'
op|')'
op|','
nl|'\n'
string|"'Field: %s is not set'"
op|'%'
name|'field'
op|')'
newline|'\n'
comment|'# just making sure that the context is set by the method'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ctxt'
op|','
name|'spec'
op|'.'
name|'_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_scheduler_hint
dedent|''
name|'def'
name|'test_get_scheduler_hint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'scheduler_hints'
op|'='
op|'{'
string|"'foo_single'"
op|':'
op|'['
string|"'1'"
op|']'
op|','
nl|'\n'
string|"'foo_mul'"
op|':'
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1'"
op|','
name|'spec_obj'
op|'.'
name|'get_scheduler_hint'
op|'('
string|"'foo_single'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|','
name|'spec_obj'
op|'.'
name|'get_scheduler_hint'
op|'('
string|"'foo_mul'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'spec_obj'
op|'.'
name|'get_scheduler_hint'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'spec_obj'
op|'.'
name|'get_scheduler_hint'
op|'('
string|"'oops'"
op|','
nl|'\n'
name|'default'
op|'='
string|"'bar'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_scheduler_hint_with_no_hints
dedent|''
name|'def'
name|'test_get_scheduler_hint_with_no_hints'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'spec_obj'
op|'.'
name|'get_scheduler_hint'
op|'('
string|"'oops'"
op|','
nl|'\n'
name|'default'
op|'='
string|"'bar'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'RequestSpec'
op|','
string|"'_to_legacy_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'base'
op|','
string|"'obj_to_primitive'"
op|')'
newline|'\n'
DECL|member|test_to_legacy_request_spec_dict
name|'def'
name|'test_to_legacy_request_spec_dict'
op|'('
name|'self'
op|','
name|'image_to_primitive'
op|','
nl|'\n'
name|'spec_to_legacy_instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_image_dict'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'image_to_primitive'
op|'.'
name|'return_value'
op|'='
name|'fake_image_dict'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_requests'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'1'"
op|'}'
newline|'\n'
name|'spec_to_legacy_instance'
op|'.'
name|'return_value'
op|'='
name|'fake_instance'
newline|'\n'
nl|'\n'
name|'fake_flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'root_gb'
op|'='
number|'10'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'512'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'num_instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'image'
op|'='
name|'objects'
op|'.'
name|'ImageMeta'
op|'('
op|')'
op|','
nl|'\n'
comment|'# instance properties'
nl|'\n'
name|'numa_topology'
op|'='
name|'None'
op|','
nl|'\n'
name|'pci_requests'
op|'='
name|'None'
op|','
nl|'\n'
name|'project_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
string|"'nova'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'flavor'
op|'='
name|'fake_flavor'
op|')'
newline|'\n'
name|'spec_dict'
op|'='
name|'spec'
op|'.'
name|'to_legacy_request_spec_dict'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'num_instances'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'image'"
op|':'
name|'fake_image_dict'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
name|'fake_instance'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'fake_flavor'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'spec_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_request_spec_dict_with_unset_values
dedent|''
name|'def'
name|'test_to_legacy_request_spec_dict_with_unset_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'num_instances'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'image'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
op|'}'
op|'}'
op|','
nl|'\n'
name|'spec'
op|'.'
name|'to_legacy_request_spec_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_filter_properties_dict
dedent|''
name|'def'
name|'test_to_legacy_filter_properties_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_numa_limits'
op|'='
name|'objects'
op|'.'
name|'NUMATopologyLimits'
op|'('
op|')'
newline|'\n'
name|'fake_computes_obj'
op|'='
name|'objects'
op|'.'
name|'ComputeNodeList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'ComputeNode'
op|'('
name|'host'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'hypervisor_hostname'
op|'='
string|"'node1'"
op|')'
op|']'
op|')'
newline|'\n'
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'ignore_hosts'
op|'='
op|'['
string|"'ignoredhost'"
op|']'
op|','
nl|'\n'
name|'force_hosts'
op|'='
op|'['
string|"'fakehost'"
op|']'
op|','
nl|'\n'
name|'force_nodes'
op|'='
op|'['
string|"'fakenode'"
op|']'
op|','
nl|'\n'
name|'retry'
op|'='
name|'objects'
op|'.'
name|'SchedulerRetries'
op|'('
name|'num_attempts'
op|'='
number|'1'
op|','
nl|'\n'
name|'hosts'
op|'='
name|'fake_computes_obj'
op|')'
op|','
nl|'\n'
name|'limits'
op|'='
name|'objects'
op|'.'
name|'SchedulerLimits'
op|'('
name|'numa_topology'
op|'='
name|'fake_numa_limits'
op|','
nl|'\n'
name|'vcpu'
op|'='
number|'1.0'
op|','
nl|'\n'
name|'disk_gb'
op|'='
number|'10.0'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'8192.0'
op|')'
op|','
nl|'\n'
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
name|'hosts'
op|'='
op|'['
string|"'fake1'"
op|']'
op|','
nl|'\n'
name|'policies'
op|'='
op|'['
string|"'affinity'"
op|']'
op|')'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'['
string|"'bar'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'ignore_hosts'"
op|':'
op|'['
string|"'ignoredhost'"
op|']'
op|','
nl|'\n'
string|"'force_hosts'"
op|':'
op|'['
string|"'fakehost'"
op|']'
op|','
nl|'\n'
string|"'force_nodes'"
op|':'
op|'['
string|"'fakenode'"
op|']'
op|','
nl|'\n'
string|"'retry'"
op|':'
op|'{'
string|"'num_attempts'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hosts'"
op|':'
op|'['
op|'['
string|"'fake1'"
op|','
string|"'node1'"
op|']'
op|']'
op|'}'
op|','
nl|'\n'
string|"'limits'"
op|':'
op|'{'
string|"'numa_topology'"
op|':'
name|'fake_numa_limits'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'10.0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'8192.0'
op|'}'
op|','
nl|'\n'
string|"'group_updated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'group_hosts'"
op|':'
name|'set'
op|'('
op|'['
string|"'fake1'"
op|']'
op|')'
op|','
nl|'\n'
string|"'group_policies'"
op|':'
name|'set'
op|'('
op|'['
string|"'affinity'"
op|']'
op|')'
op|','
nl|'\n'
string|"'scheduler_hints'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'spec'
op|'.'
name|'to_legacy_filter_properties_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_filter_properties_dict_with_nullable_values
dedent|''
name|'def'
name|'test_to_legacy_filter_properties_dict_with_nullable_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'force_hosts'
op|'='
name|'None'
op|','
nl|'\n'
name|'force_nodes'
op|'='
name|'None'
op|','
nl|'\n'
name|'retry'
op|'='
name|'None'
op|','
nl|'\n'
name|'limits'
op|'='
name|'None'
op|','
nl|'\n'
name|'instance_group'
op|'='
name|'None'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'spec'
op|'.'
name|'to_legacy_filter_properties_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_to_legacy_filter_properties_dict_with_unset_values
dedent|''
name|'def'
name|'test_to_legacy_filter_properties_dict_with_unset_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'spec'
op|'.'
name|'to_legacy_filter_properties_dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'request_spec'
op|'.'
name|'RequestSpec'
op|','
nl|'\n'
string|"'_get_by_instance_uuid_from_db'"
op|')'
newline|'\n'
DECL|member|test_get_by_instance_uuid
name|'def'
name|'test_get_by_instance_uuid'
op|'('
name|'self'
op|','
name|'get_by_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_spec'
op|'='
name|'fake_request_spec'
op|'.'
name|'fake_db_spec'
op|'('
op|')'
newline|'\n'
name|'get_by_uuid'
op|'.'
name|'return_value'
op|'='
name|'fake_spec'
newline|'\n'
nl|'\n'
name|'req_obj'
op|'='
name|'request_spec'
op|'.'
name|'RequestSpec'
op|'.'
name|'get_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_spec'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'req_obj'
op|'.'
name|'num_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'host2'"
op|','
string|"'host4'"
op|']'
op|','
name|'req_obj'
op|'.'
name|'ignore_hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake'"
op|','
name|'req_obj'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'hint'"
op|':'
op|'['
string|"'over-there'"
op|']'
op|'}'
op|','
name|'req_obj'
op|'.'
name|'scheduler_hints'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'host1'"
op|','
string|"'host3'"
op|']'
op|','
name|'req_obj'
op|'.'
name|'force_hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'req_obj'
op|'.'
name|'availability_zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'node1'"
op|','
string|"'node2'"
op|']'
op|','
name|'req_obj'
op|'.'
name|'force_nodes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'image'
op|','
name|'objects'
op|'.'
name|'ImageMeta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'numa_topology'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'pci_requests'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'flavor'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'retry'
op|','
name|'objects'
op|'.'
name|'SchedulerRetries'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'limits'
op|','
name|'objects'
op|'.'
name|'SchedulerLimits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'req_obj'
op|'.'
name|'instance_group'
op|','
name|'objects'
op|'.'
name|'InstanceGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_update_primitive
dedent|''
name|'def'
name|'_check_update_primitive'
op|'('
name|'self'
op|','
name|'req_obj'
op|','
name|'changes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req_obj'
op|'.'
name|'instance_uuid'
op|','
name|'changes'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'serialized_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'.'
name|'obj_from_primitive'
op|'('
nl|'\n'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'changes'
op|'['
string|"'spec'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# primitive fields'
nl|'\n'
name|'for'
name|'field'
name|'in'
op|'['
string|"'instance_uuid'"
op|','
string|"'num_instances'"
op|','
string|"'ignore_hosts'"
op|','
nl|'\n'
string|"'project_id'"
op|','
string|"'scheduler_hints'"
op|','
string|"'force_hosts'"
op|','
nl|'\n'
string|"'availability_zone'"
op|','
string|"'force_nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'getattr'
op|'('
name|'req_obj'
op|','
name|'field'
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'serialized_obj'
op|','
name|'field'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# object fields'
nl|'\n'
dedent|''
name|'for'
name|'field'
name|'in'
op|'['
string|"'image'"
op|','
string|"'numa_topology'"
op|','
string|"'pci_requests'"
op|','
string|"'flavor'"
op|','
nl|'\n'
string|"'retry'"
op|','
string|"'limits'"
op|','
string|"'instance_group'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertDictEqual'
op|'('
nl|'\n'
name|'getattr'
op|'('
name|'req_obj'
op|','
name|'field'
op|')'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'serialized_obj'
op|','
name|'field'
op|')'
op|'.'
name|'obj_to_primitive'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req_obj'
op|'='
name|'fake_request_spec'
op|'.'
name|'fake_spec_obj'
op|'('
name|'remove_id'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_test_create_args
name|'def'
name|'_test_create_args'
op|'('
name|'self2'
op|','
name|'context'
op|','
name|'changes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_check_update_primitive'
op|'('
name|'req_obj'
op|','
name|'changes'
op|')'
newline|'\n'
comment|'# DB creation would have set an id'
nl|'\n'
name|'changes'
op|'['
string|"'id'"
op|']'
op|'='
number|'42'
newline|'\n'
name|'return'
name|'changes'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'request_spec'
op|'.'
name|'RequestSpec'
op|','
string|"'_create_in_db'"
op|','
nl|'\n'
name|'_test_create_args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req_obj'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_id_set
dedent|''
dedent|''
name|'def'
name|'test_create_id_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req_obj'
op|'='
name|'request_spec'
op|'.'
name|'RequestSpec'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'req_obj'
op|'.'
name|'id'
op|'='
number|'3'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
name|'req_obj'
op|'.'
name|'create'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_save
dedent|''
name|'def'
name|'test_save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req_obj'
op|'='
name|'fake_request_spec'
op|'.'
name|'fake_spec_obj'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_test_save_args
name|'def'
name|'_test_save_args'
op|'('
name|'self2'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
name|'changes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_check_update_primitive'
op|'('
name|'req_obj'
op|','
name|'changes'
op|')'
newline|'\n'
comment|'# DB creation would have set an id'
nl|'\n'
name|'changes'
op|'['
string|"'id'"
op|']'
op|'='
number|'42'
newline|'\n'
name|'return'
name|'changes'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'request_spec'
op|'.'
name|'RequestSpec'
op|','
string|"'_save_in_db'"
op|','
nl|'\n'
name|'_test_save_args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req_obj'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestRequestSpecObject'
op|'('
name|'test_objects'
op|'.'
name|'_LocalTest'
op|','
nl|'\n'
DECL|class|TestRequestSpecObject
name|'_TestRequestSpecObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestRemoteRequestSpecObject'
op|'('
name|'test_objects'
op|'.'
name|'_RemoteTest'
op|','
nl|'\n'
DECL|class|TestRemoteRequestSpecObject
name|'_TestRequestSpecObject'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
dedent|''
endmarker|''
end_unit
