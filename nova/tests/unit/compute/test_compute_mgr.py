begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for ComputeManager()."""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'cinderclient'
name|'import'
name|'exceptions'
name|'as'
name|'cinder_exception'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'event'
name|'as'
name|'eventlet_event'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'import'
name|'oslo_messaging'
name|'as'
name|'messaging'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'build_results'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'api'
name|'as'
name|'conductor_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'api'
name|'as'
name|'network_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'block_device'
name|'as'
name|'block_device_obj'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'compute'
name|'import'
name|'fake_resource_tracker'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network_cache_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_server_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_fault'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_instance_info_cache'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
name|'as'
name|'virt_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'event'
name|'as'
name|'virtevent'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'fake'
name|'as'
name|'fake_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'hardware'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerUnitTestCase
name|'class'
name|'ComputeManagerUnitTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'fake_server_actions'
op|'.'
name|'stub_out_action_events'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_get_power_state'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_sync_instance_power_state'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
DECL|member|_test_handle_lifecycle_event
name|'def'
name|'_test_handle_lifecycle_event'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_sync'
op|','
nl|'\n'
name|'mock_get_power_state'
op|','
name|'transition'
op|','
nl|'\n'
name|'event_pwr_state'
op|','
name|'current_pwr_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'event'
op|'.'
name|'get_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'uuid'
newline|'\n'
name|'event'
op|'.'
name|'get_transition'
op|'.'
name|'return_value'
op|'='
name|'transition'
newline|'\n'
name|'mock_get_power_state'
op|'.'
name|'return_value'
op|'='
name|'current_pwr_state'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'handle_lifecycle_event'
op|'('
name|'event'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get'
op|'.'
name|'assert_called_with'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'if'
name|'event_pwr_state'
op|'=='
name|'current_pwr_state'
op|':'
newline|'\n'
indent|'            '
name|'mock_sync'
op|'.'
name|'assert_called_with'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock_get'
op|'.'
name|'return_value'
op|','
nl|'\n'
name|'event_pwr_state'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_sync'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_handle_lifecycle_event
dedent|''
dedent|''
name|'def'
name|'test_handle_lifecycle_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event_map'
op|'='
op|'{'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STARTED'
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_PAUSED'
op|':'
name|'power_state'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_RESUMED'
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_SUSPENDED'
op|':'
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'transition'
op|','
name|'pwr_state'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'event_map'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_handle_lifecycle_event'
op|'('
name|'transition'
op|'='
name|'transition'
op|','
nl|'\n'
name|'event_pwr_state'
op|'='
name|'pwr_state'
op|','
nl|'\n'
name|'current_pwr_state'
op|'='
name|'pwr_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_handle_lifecycle_event_state_mismatch
dedent|''
dedent|''
name|'def'
name|'test_handle_lifecycle_event_state_mismatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_handle_lifecycle_event'
op|'('
nl|'\n'
name|'transition'
op|'='
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|','
nl|'\n'
name|'event_pwr_state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'current_pwr_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_info_cache_delete_ordering
dedent|''
name|'def'
name|'test_delete_instance_info_cache_delete_ordering'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'call_tracker'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'call_tracker'
op|'.'
name|'clear_events_for_instance'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'mgr_class'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'__class__'
newline|'\n'
name|'orig_delete'
op|'='
name|'mgr_class'
op|'.'
name|'_delete_instance'
newline|'\n'
name|'specd_compute'
op|'='
name|'mock'
op|'.'
name|'create_autospec'
op|'('
name|'mgr_class'
op|')'
newline|'\n'
comment|'# spec out everything except for the method we really want'
nl|'\n'
comment|'# to test, then use call_tracker to verify call sequence'
nl|'\n'
name|'specd_compute'
op|'.'
name|'_delete_instance'
op|'='
name|'orig_delete'
newline|'\n'
nl|'\n'
name|'mock_inst'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_inst'
op|'.'
name|'uuid'
op|'='
string|"'inst-1'"
newline|'\n'
name|'mock_inst'
op|'.'
name|'save'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_inst'
op|'.'
name|'destroy'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_inst'
op|'.'
name|'system_metadata'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_mark_notify
name|'def'
name|'_mark_notify'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_tracker'
op|'.'
name|'_notify_about_instance_usage'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_mark_shutdown
dedent|''
name|'def'
name|'_mark_shutdown'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_tracker'
op|'.'
name|'_shutdown_instance'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'specd_compute'
op|'.'
name|'instance_events'
op|'='
name|'call_tracker'
newline|'\n'
name|'specd_compute'
op|'.'
name|'_notify_about_instance_usage'
op|'='
name|'_mark_notify'
newline|'\n'
name|'specd_compute'
op|'.'
name|'_shutdown_instance'
op|'='
name|'_mark_shutdown'
newline|'\n'
name|'mock_inst'
op|'.'
name|'info_cache'
op|'='
name|'call_tracker'
newline|'\n'
nl|'\n'
name|'specd_compute'
op|'.'
name|'_delete_instance'
op|'('
name|'specd_compute'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock_inst'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'methods_called'
op|'='
op|'['
name|'n'
name|'for'
name|'n'
op|','
name|'a'
op|','
name|'k'
name|'in'
name|'call_tracker'
op|'.'
name|'mock_calls'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'clear_events_for_instance'"
op|','
nl|'\n'
string|"'_notify_about_instance_usage'"
op|','
nl|'\n'
string|"'_shutdown_instance'"
op|','
string|"'delete'"
op|']'
op|','
nl|'\n'
name|'methods_called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_get_resource_tracker'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_driver'
op|'.'
name|'FakeDriver'
op|','
string|"'get_available_nodes'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_get_compute_nodes_in_db'"
op|')'
newline|'\n'
DECL|member|test_update_available_resource
name|'def'
name|'test_update_available_resource'
op|'('
name|'self'
op|','
name|'get_db_nodes'
op|','
name|'get_avail_nodes'
op|','
nl|'\n'
name|'get_rt'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
op|'{'
string|"'cn_id'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_make_compute_node
name|'def'
name|'_make_compute_node'
op|'('
name|'hyp_hostname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'spec_set'
op|'='
op|'['
string|"'hypervisor_hostname'"
op|','
string|"'id'"
op|','
nl|'\n'
string|"'destroy'"
op|']'
op|')'
newline|'\n'
name|'cn'
op|'.'
name|'id'
op|'='
name|'info'
op|'['
string|"'cn_id'"
op|']'
newline|'\n'
name|'info'
op|'['
string|"'cn_id'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'cn'
op|'.'
name|'hypervisor_hostname'
op|'='
name|'hyp_hostname'
newline|'\n'
name|'return'
name|'cn'
newline|'\n'
nl|'\n'
DECL|function|_make_rt
dedent|''
name|'def'
name|'_make_rt'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'spec_set'
op|'='
op|'['
string|"'update_available_resource'"
op|','
nl|'\n'
string|"'nodename'"
op|']'
op|')'
newline|'\n'
name|'n'
op|'.'
name|'nodename'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'n'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'db_nodes'
op|'='
op|'['
name|'_make_compute_node'
op|'('
string|"'node1'"
op|')'
op|','
nl|'\n'
name|'_make_compute_node'
op|'('
string|"'node2'"
op|')'
op|','
nl|'\n'
name|'_make_compute_node'
op|'('
string|"'node3'"
op|')'
op|','
nl|'\n'
name|'_make_compute_node'
op|'('
string|"'node4'"
op|')'
op|']'
newline|'\n'
name|'avail_nodes'
op|'='
name|'set'
op|'('
op|'['
string|"'node2'"
op|','
string|"'node3'"
op|','
string|"'node4'"
op|','
string|"'node5'"
op|']'
op|')'
newline|'\n'
name|'avail_nodes_l'
op|'='
name|'list'
op|'('
name|'avail_nodes'
op|')'
newline|'\n'
name|'rts'
op|'='
op|'['
name|'_make_rt'
op|'('
name|'node'
op|')'
name|'for'
name|'node'
name|'in'
name|'avail_nodes_l'
op|']'
newline|'\n'
comment|'# Make the 2nd and 3rd ones raise'
nl|'\n'
name|'exc'
op|'='
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'rts'
op|'['
number|'1'
op|']'
op|'.'
name|'update_available_resource'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
name|'exc'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
name|'rts'
op|'['
number|'2'
op|']'
op|'.'
name|'update_available_resource'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
name|'rts_iter'
op|'='
name|'iter'
op|'('
name|'rts'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_rt_side_effect
name|'def'
name|'_get_rt_side_effect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'next'
op|'('
name|'rts_iter'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_rt_dict'
op|'='
op|'{'
name|'avail_nodes_l'
op|'['
number|'0'
op|']'
op|':'
name|'rts'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'avail_nodes_l'
op|'['
number|'2'
op|']'
op|':'
name|'rts'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'avail_nodes_l'
op|'['
number|'3'
op|']'
op|':'
name|'rts'
op|'['
number|'3'
op|']'
op|'}'
newline|'\n'
name|'get_db_nodes'
op|'.'
name|'return_value'
op|'='
name|'db_nodes'
newline|'\n'
name|'get_avail_nodes'
op|'.'
name|'return_value'
op|'='
name|'avail_nodes'
newline|'\n'
name|'get_rt'
op|'.'
name|'side_effect'
op|'='
name|'_get_rt_side_effect'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update_available_resource'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'get_db_nodes'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|')'
name|'for'
name|'node'
name|'in'
name|'avail_nodes'
op|']'
op|','
nl|'\n'
name|'get_rt'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
name|'for'
name|'rt'
name|'in'
name|'rts'
op|':'
newline|'\n'
indent|'            '
name|'rt'
op|'.'
name|'update_available_resource'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_rt_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_resource_tracker_dict'
op|')'
newline|'\n'
comment|'# First node in set should have been removed from DB'
nl|'\n'
name|'for'
name|'db_node'
name|'in'
name|'db_nodes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'db_node'
op|'.'
name|'hypervisor_hostname'
op|'=='
string|"'node1'"
op|':'
newline|'\n'
indent|'                '
name|'db_node'
op|'.'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'db_node'
op|'.'
name|'destroy'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_without_info_cache
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_delete_instance_without_info_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'quotas'
op|'='
name|'mock'
op|'.'
name|'create_autospec'
op|'('
name|'objects'
op|'.'
name|'Quotas'
op|','
name|'spec_set'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'obj_load_attr'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'destroy'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'compute_notify_about_instance_usage'
op|','
name|'comupte_shutdown_instance'
op|','
nl|'\n'
name|'instance_obj_load_attr'
op|','
name|'instance_save'
op|','
name|'instance_destroy'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
name|'quotas'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'network_api'
op|'.'
name|'API'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|"'sleep'"
op|')'
newline|'\n'
DECL|member|test_allocate_network_succeeds_after_retries
name|'def'
name|'test_allocate_network_succeeds_after_retries'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_sleep'
op|','
name|'mock_save'
op|','
name|'mock_allocate_for_instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'8'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'final_result'
op|'='
string|"'meow'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'mock_allocate_for_instance'
op|'.'
name|'side_effect'
op|'='
op|'['
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|']'
op|'*'
number|'7'
op|'+'
op|'['
name|'final_result'
op|']'
newline|'\n'
nl|'\n'
name|'expected_sleep_times'
op|'='
op|'['
number|'1'
op|','
number|'2'
op|','
number|'4'
op|','
number|'8'
op|','
number|'16'
op|','
number|'30'
op|','
number|'30'
op|','
number|'30'
op|']'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'req_networks'
op|','
nl|'\n'
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
nl|'\n'
name|'is_vpn'
op|','
nl|'\n'
name|'dhcp_options'
op|')'
newline|'\n'
nl|'\n'
name|'mock_sleep'
op|'.'
name|'has_calls'
op|'('
name|'expected_sleep_times'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'final_result'
op|','
name|'res'
op|')'
newline|'\n'
comment|'# Ensure save is not called in while allocating networks, the instance'
nl|'\n'
comment|'# is saved after the allocation.'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'True'"
op|','
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'network_allocated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_fails
dedent|''
name|'def'
name|'test_allocate_network_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|','
name|'dhcp_options'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_neg_conf_value_treated_as_zero
dedent|''
name|'def'
name|'test_allocate_network_neg_conf_value_treated_as_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Only attempted once.'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|','
name|'dhcp_options'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'network_api'
op|'.'
name|'API'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|"'sleep'"
op|')'
newline|'\n'
DECL|member|test_allocate_network_with_conf_value_is_one
name|'def'
name|'test_allocate_network_with_conf_value_is_one'
op|'('
nl|'\n'
name|'self'
op|','
name|'sleep'
op|','
name|'_instance_update'
op|','
name|'allocate_for_instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
name|'final_result'
op|'='
string|"'zhangtralon'"
newline|'\n'
nl|'\n'
name|'allocate_for_instance'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
nl|'\n'
name|'final_result'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'req_networks'
op|','
nl|'\n'
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
nl|'\n'
name|'is_vpn'
op|','
nl|'\n'
name|'dhcp_options'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'final_result'
op|','
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'sleep'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_do_build_and_run_instance'"
op|')'
newline|'\n'
DECL|member|_test_max_concurrent_builds
name|'def'
name|'_test_max_concurrent_builds'
op|'('
name|'self'
op|','
name|'mock_dbari'
op|','
name|'mock_spawn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_semaphore'"
op|')'
name|'as'
name|'mock_sem'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'image'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'request_spec'
op|','
nl|'\n'
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'mock_sem'
op|'.'
name|'__enter__'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_builds_limited
dedent|''
dedent|''
name|'def'
name|'test_max_concurrent_builds_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_builds'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_max_concurrent_builds'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_builds_unlimited
dedent|''
name|'def'
name|'test_max_concurrent_builds_unlimited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_builds'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_max_concurrent_builds'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_builds_semaphore_limited
dedent|''
name|'def'
name|'test_max_concurrent_builds_semaphore_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_builds'
op|'='
number|'123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'123'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
op|'.'
name|'_build_semaphore'
op|'.'
name|'balance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_builds_semaphore_unlimited
dedent|''
name|'def'
name|'test_max_concurrent_builds_semaphore_unlimited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_builds'
op|'='
number|'0'
op|')'
newline|'\n'
name|'compute'
op|'='
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'compute'
op|'.'
name|'_build_semaphore'
op|'.'
name|'balance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute'
op|'.'
name|'_build_semaphore'
op|','
nl|'\n'
name|'compute_utils'
op|'.'
name|'UnlimitedSemaphore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nil_out_inst_obj_host_and_node_sets_nil
dedent|''
name|'def'
name|'test_nil_out_inst_obj_host_and_node_sets_nil'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo-uuid'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'foo-host'"
op|','
nl|'\n'
name|'node'
op|'='
string|"'foo-node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'dict'
op|'('
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'None'
op|')'
newline|'\n'
name|'startup_instances'
op|'='
op|'['
name|'inst'
op|','
name|'inst'
op|','
name|'inst'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_do_mock_calls
name|'def'
name|'_do_mock_calls'
op|'('
name|'defer_iptables_apply'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'our_host'
op|','
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'startup_instances'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_on'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_destroy_evacuated_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_off'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_on'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_off'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_destroy_evacuated_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_init_instance'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Test with defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Test without defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ResetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'False'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstanceList'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.MigrationList.get_by_filters'"
op|')'
newline|'\n'
DECL|member|test_cleanup_host
name|'def'
name|'test_cleanup_host'
op|'('
name|'self'
op|','
name|'mock_miglist_get'
op|','
name|'mock_instance_list'
op|')'
op|':'
newline|'\n'
comment|'# just testing whether the cleanup_host method'
nl|'\n'
comment|"# when fired will invoke the underlying driver's"
nl|'\n'
comment|'# equivalent method.'
nl|'\n'
nl|'\n'
indent|'        '
name|'mock_miglist_get'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
name|'mock_instance_list'
op|'.'
name|'get_by_host'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'driver'"
op|')'
name|'as'
name|'mock_driver'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
name|'mock_driver'
op|'.'
name|'init_host'
op|'.'
name|'assert_called_once_with'
op|'('
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'cleanup_host'
op|'('
op|')'
newline|'\n'
comment|'# register_event_listener is called on startup (init_host) and'
nl|'\n'
comment|'# in cleanup_host'
nl|'\n'
name|'mock_driver'
op|'.'
name|'register_event_listener'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'handle_events'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
name|'None'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_driver'
op|'.'
name|'cleanup_host'
op|'.'
name|'assert_called_once_with'
op|'('
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_virt_events_disabled
dedent|''
dedent|''
name|'def'
name|'test_init_virt_events_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'handle_virt_lifecycle_events'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'workarounds'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'register_event_listener'"
op|')'
name|'as'
name|'mock_register'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_virt_events'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_register'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.MigrationList.get_by_filters'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Migration.save'"
op|')'
newline|'\n'
DECL|member|test_init_host_with_evacuated_instance
name|'def'
name|'test_init_host_with_evacuated_instance'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_mig_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'not_our_host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
nl|'\n'
name|'deleted_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'host'
op|'='
name|'not_our_host'
op|','
name|'uuid'
op|'='
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'instance_uuid'
op|'='
name|'deleted_instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_mig_get'
op|'.'
name|'return_value'
op|'='
op|'['
name|'migration'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'init_virt_events'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instances_on_driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_init_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'our_host'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_virt_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# simulate failed instance'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'deleted_instance'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'get_instance_nw_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'deleted_instance'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'deleted_instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# ensure driver.destroy is called so that driver may'
nl|'\n'
comment|'# clean up any dangling files'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'deleted_instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_with_binding_failed_vif_type
dedent|''
name|'def'
name|'test_init_instance_with_binding_failed_vif_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# this instance will plug a 'binding_failed' vif"
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'VirtualInterfacePlugException'
op|'('
nl|'\n'
string|'"Unexpected vif_type=binding_failed"'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'get_admin_context'
op|','
name|'get_nw_info'
op|','
name|'plug_vifs'
op|','
name|'set_error_state'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'set_error_state'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_power_state_InstanceNotFound
dedent|''
dedent|''
name|'def'
name|'test__get_power_state_InstanceNotFound'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
number|'1'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_power_state_NotFound
dedent|''
dedent|''
name|'def'
name|'test__get_power_state_NotFound'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NotFound'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_failed_resume_sets_error
dedent|''
dedent|''
name|'def'
name|'test_init_instance_failed_resume_sets_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'resume_guests_state_on_host_boot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'resume_state_on_host_boot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_block_device_info'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake-bdm'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
string|"'fake-context'"
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_stuck_in_deleting
dedent|''
name|'def'
name|'test_init_instance_stuck_in_deleting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'64'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_delete_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'obj_load_attr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_create_reservations'"
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'quotas'
op|'='
name|'objects'
op|'.'
name|'quotas'
op|'.'
name|'Quotas'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'bdms'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_create_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'user_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'quotas'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_init_instance_stuck_in_deleting_raises_exception
name|'def'
name|'test_init_instance_stuck_in_deleting_raises_exception'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_get_by_instance_uuid'
op|','
name|'mock_get_by_uuid'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'64'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'reservations'
op|'='
op|'['
string|"'fake-resv'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|_create_patch
name|'def'
name|'_create_patch'
op|'('
name|'name'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'name'
op|','
name|'attr'
op|')'
newline|'\n'
name|'mocked_obj'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'return'
name|'mocked_obj'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_delete_instance'
op|'='
name|'_create_patch'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_delete_instance'"
op|')'
newline|'\n'
name|'mock_set_instance_error_state'
op|'='
name|'_create_patch'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'mock_create_reservations'
op|'='
name|'_create_patch'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_create_reservations'"
op|')'
newline|'\n'
nl|'\n'
name|'mock_create_reservations'
op|'.'
name|'return_value'
op|'='
name|'reservations'
newline|'\n'
name|'mock_get_by_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'bdms'
newline|'\n'
name|'mock_get_by_uuid'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'mock_delete_instance'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'mock_set_instance_error_state'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_reverts_crashed_migrations
dedent|''
name|'def'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'self'
op|','
nl|'\n'
name|'old_vm_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'power_on'
op|'='
name|'True'
name|'if'
op|'('
name|'not'
name|'old_vm_state'
name|'or'
nl|'\n'
name|'old_vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
name|'else'
name|'False'
newline|'\n'
name|'sys_meta'
op|'='
op|'{'
nl|'\n'
string|"'old_vm_state'"
op|':'
name|'old_vm_state'
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'sys_meta'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'finish_revert_migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_retry_reboot'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'False'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'get_nw_info_for_instance'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'finish_revert_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_active
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_stopped
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_no_old_state
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_no_old_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'old_vm_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_resets_crashed_live_migration
dedent|''
name|'def'
name|'test_init_instance_resets_crashed_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'MIGRATING'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.utils.get_nw_info_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'save'
op|','
name|'get_nw_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
name|'expected_task_state'
op|'='
op|'['
string|"'migrating'"
op|']'
op|')'
newline|'\n'
name|'get_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_sets_building_error
dedent|''
name|'def'
name|'_test_init_instance_sets_building_error'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_error
dedent|''
name|'def'
name|'test_init_instance_sets_building_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_sets_building_error'
op|'('
name|'vm_states'
op|'.'
name|'BUILDING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_rebuilding_errors
dedent|''
name|'def'
name|'test_init_instance_sets_rebuilding_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tasks'
op|'='
op|'['
name|'task_states'
op|'.'
name|'REBUILDING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBUILD_BLOCK_DEVICE_MAPPING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBUILD_SPAWNING'
op|']'
newline|'\n'
name|'vms'
op|'='
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'vm_state'
name|'in'
name|'vms'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'task_state'
name|'in'
name|'tasks'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_init_instance_sets_building_error'
op|'('
nl|'\n'
name|'vm_state'
op|','
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_sets_building_tasks_error
dedent|''
dedent|''
dedent|''
name|'def'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_scheduling
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_scheduling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_block_device
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_block_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_networking
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_networking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'NETWORKING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_spawning
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_spawning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SPAWNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_cleans_image_states
dedent|''
name|'def'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'post_interrupted_snapshot_cleanup'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'post_interrupted_snapshot_cleanup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|_test_init_instance_cleans_task_states
name|'def'
name|'_test_init_instance_cleans_task_states'
op|'('
name|'self'
op|','
name|'powerstate'
op|','
name|'state'
op|','
nl|'\n'
name|'mock_get_uuid'
op|','
name|'mock_get_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'fake-uuid'"
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'state'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'mock_get_power_state'
op|'.'
name|'return_value'
op|'='
name|'powerstate'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_pending_upload
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_pending_upload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_uploading
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_uploading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_snapshot
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_snapshot_pending
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_snapshot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT_PENDING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_init_instance_cleans_running_pausing
name|'def'
name|'test_init_instance_cleans_running_pausing'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_test_init_instance_cleans_task_states'
op|'('
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'task_states'
op|'.'
name|'PAUSING'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_init_instance_cleans_running_unpausing
name|'def'
name|'test_init_instance_cleans_running_unpausing'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_test_init_instance_cleans_task_states'
op|'('
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'task_states'
op|'.'
name|'UNPAUSING'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.unpause_instance'"
op|')'
newline|'\n'
DECL|member|test_init_instance_cleans_paused_unpausing
name|'def'
name|'test_init_instance_cleans_paused_unpausing'
op|'('
name|'self'
op|','
name|'mock_unpause'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_unpause
indent|'        '
name|'def'
name|'fake_unpause'
op|'('
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_unpause'
op|'.'
name|'side_effect'
op|'='
name|'fake_unpause'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_test_init_instance_cleans_task_states'
op|'('
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'task_states'
op|'.'
name|'UNPAUSING'
op|')'
newline|'\n'
name|'mock_unpause'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_errors_when_not_migrating
dedent|''
name|'def'
name|'test_init_instance_errors_when_not_migrating'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_deletes_error_deleting_instance
dedent|''
name|'def'
name|'test_init_instance_deletes_error_deleting_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'64'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_delete_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'obj_load_attr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'quotas'
op|','
string|"'ids_from_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_create_reservations'"
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'quotas'
op|'='
name|'objects'
op|'.'
name|'quotas'
op|'.'
name|'Quotas'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'bdms'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'quotas'
op|'.'
name|'ids_from_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'instance'
op|'.'
name|'project_id'
op|','
name|'instance'
op|'.'
name|'user_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_create_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'user_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'quotas'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_resize_prep
dedent|''
name|'def'
name|'test_init_instance_resize_prep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get_power_state'
op|','
name|'mock_nw_info'
op|','
name|'mock_instance_save'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'mock_instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.context.RequestContext.elevated'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.utils.get_nw_info_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.compute.manager.ComputeManager._get_instance_block_device_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.ComputeDriver.destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.ComputeDriver.get_volume_connector'"
op|')'
newline|'\n'
DECL|member|_test_shutdown_instance_exception
name|'def'
name|'_test_shutdown_instance_exception'
op|'('
name|'self'
op|','
name|'exc'
op|','
name|'mock_connector'
op|','
nl|'\n'
name|'mock_destroy'
op|','
name|'mock_blk_device_info'
op|','
name|'mock_nw_info'
op|','
name|'mock_elevated'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_connector'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
name|'mock_elevated'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'is_volume'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'notify'
op|'='
name|'False'
op|','
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_instance_endpoint_not_found
dedent|''
name|'def'
name|'test_shutdown_instance_endpoint_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'cinder_exception'
op|'.'
name|'EndpointNotFound'
newline|'\n'
name|'self'
op|'.'
name|'_test_shutdown_instance_exception'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_instance_client_exception
dedent|''
name|'def'
name|'test_shutdown_instance_client_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'cinder_exception'
op|'.'
name|'ClientException'
newline|'\n'
name|'self'
op|'.'
name|'_test_shutdown_instance_exception'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_instance_volume_not_found
dedent|''
name|'def'
name|'test_shutdown_instance_volume_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'VolumeNotFound'
newline|'\n'
name|'self'
op|'.'
name|'_test_shutdown_instance_exception'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_instance_disk_not_found
dedent|''
name|'def'
name|'test_shutdown_instance_disk_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'DiskNotFound'
newline|'\n'
name|'self'
op|'.'
name|'_test_shutdown_instance_exception'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_retries_reboot
dedent|''
name|'def'
name|'_test_init_instance_retries_reboot'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'reboot_type'
op|','
nl|'\n'
name|'return_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'return_power_state'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'reboot_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'_get_power_state'
op|','
nl|'\n'
name|'reboot_instance'
op|','
nl|'\n'
name|'get_nw_info_for_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'reboot_type'
op|'='
name|'reboot_type'
op|')'
newline|'\n'
name|'reboot_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_pending
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'vm_states'
op|'.'
name|'ALLOW_SOFT_REBOOT'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'state'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'SOFT'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_pending_hard
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_pending_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING_HARD'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'vm_states'
op|'.'
name|'ALLOW_HARD_REBOOT'
op|':'
newline|'\n'
comment|'# NOTE(dave-mcnally) while a reboot of a vm in error state is'
nl|'\n'
comment|"# possible we don't attempt to recover an error during init"
nl|'\n'
indent|'            '
name|'if'
name|'state'
op|'=='
name|'vm_states'
op|'.'
name|'ERROR'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'state'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_started
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_started_hard
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_started_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_cleans_reboot_state
dedent|''
name|'def'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'_get_power_state'
op|','
nl|'\n'
name|'instance_save'
op|','
nl|'\n'
name|'get_nw_info_for_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_reboot_started
dedent|''
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_reboot_started_hard
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_reboot_started_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_off
dedent|''
name|'def'
name|'test_init_instance_retries_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'stop_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_on
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_ON'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'start_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'start_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_on_silent_exception
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_on_silent_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_ON'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'start_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'init_return'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'start_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'init_return'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_off_silent_exception
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_off_silent_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'stop_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'init_return'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'init_return'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver
dedent|''
dedent|''
name|'def'
name|'test_get_instances_on_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
nl|'\n'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|'}'
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'desc'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'driver_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'driver_instances'
op|']'
op|','
nl|'\n'
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.ComputeDriver.list_instance_uuids'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.api.instance_get_all_by_filters'"
op|')'
newline|'\n'
DECL|member|test_get_instances_on_driver_empty
name|'def'
name|'test_get_instances_on_driver_empty'
op|'('
name|'self'
op|','
name|'mock_list'
op|','
name|'mock_db'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# instance_get_all_by_filters should not be called'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_db'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
nl|'\n'
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver_fallback
dedent|''
name|'def'
name|'test_get_instances_on_driver_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Test getting instances when driver doesn't support"
nl|'\n'
comment|"# 'list_instance_uuids'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'='
string|"'host'"
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'inst-%i'"
op|')'
newline|'\n'
nl|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'name'
op|'='
string|"'inst-%i'"
op|'%'
name|'x'
op|','
nl|'\n'
name|'id'
op|'='
name|'x'
op|')'
newline|'\n'
name|'if'
name|'x'
op|'%'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'all_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'NotImplementedError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instances'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'name'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'desc'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'all_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'driver_instances'
op|']'
op|','
nl|'\n'
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_usage_audit
dedent|''
name|'def'
name|'test_instance_usage_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_task_log
name|'def'
name|'fake_task_log'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_usage_audit'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'TaskLog'
op|','
string|"'get'"
op|','
name|'fake_task_log'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
nl|'\n'
string|"'get_active_by_window_joined'"
op|','
name|'fake_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'TaskLog'
op|','
string|"'begin_task'"
op|','
name|'fake_task_log'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'TaskLog'
op|','
string|"'end_task'"
op|','
name|'fake_task_log'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'notify_usage_exists'"
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_usage_exists'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'notifier'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|','
name|'ignore_missing_network_data'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_usage_audit'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_host'"
op|')'
newline|'\n'
DECL|member|test_sync_power_states
name|'def'
name|'test_sync_power_states'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
op|'['
name|'instance'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_power_pool'
op|','
nl|'\n'
string|"'spawn_n'"
op|')'
name|'as'
name|'mock_spawn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_power_states'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
name|'expected_attrs'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_spawn'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_sync_instance
dedent|''
dedent|''
name|'def'
name|'_get_sync_instance'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'shutdown_terminate'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'fake-uuid'"
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'instance'
op|'.'
name|'shutdown_terminate'
op|'='
name|'shutdown_terminate'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_match
dedent|''
name|'def'
name|'test_sync_instance_power_state_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_running_stopped
dedent|''
name|'def'
name|'test_sync_instance_power_state_running_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'power_state'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_sync_to_stop
dedent|''
name|'def'
name|'_test_sync_to_stop'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'driver_power_state'
op|','
nl|'\n'
name|'stop'
op|'='
name|'True'
op|','
name|'force'
op|'='
name|'False'
op|','
name|'shutdown_terminate'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
nl|'\n'
name|'power_state'
op|','
name|'vm_state'
op|','
name|'shutdown_terminate'
op|'='
name|'shutdown_terminate'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'stop'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'force_stop'"
op|')'
newline|'\n'
name|'if'
name|'shutdown_terminate'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'stop'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'force'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'force_stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'driver_power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
name|'ps'
op|','
nl|'\n'
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_terminate
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_terminate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'force'
op|'='
name|'False'
op|','
name|'shutdown_terminate'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_no_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_no_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'vs'
name|'in'
op|'('
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
name|'vm_states'
op|'.'
name|'DELETED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vs'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_sync_instance_power_state'"
op|')'
newline|'\n'
DECL|member|test_query_driver_power_state_and_sync_pending_task
name|'def'
name|'test_query_driver_power_state_and_sync_pending_task'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_sync_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|')'
name|'as'
name|'mock_get_info'
op|':'
newline|'\n'
indent|'            '
name|'db_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_query_driver_power_state_and_sync'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_get_info'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_sync_power_state'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_sync_instance_power_state'"
op|')'
newline|'\n'
DECL|member|test_query_driver_power_state_and_sync_not_found_driver
name|'def'
name|'test_query_driver_power_state_and_sync_not_found_driver'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_sync_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|','
name|'side_effect'
op|'='
name|'error'
op|')'
name|'as'
name|'mock_get_info'
op|':'
newline|'\n'
indent|'            '
name|'db_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_query_driver_power_state_and_sync'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'db_instance'
op|')'
newline|'\n'
name|'mock_sync_power_state'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_pending_deletes
dedent|''
dedent|''
name|'def'
name|'test_run_pending_deletes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_delete_interval'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeInstance
name|'class'
name|'FakeInstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'name'
op|','
name|'smd'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'system_metadata'
op|'='
name|'smd'
newline|'\n'
name|'self'
op|'.'
name|'cleaned'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'a'
op|'='
name|'FakeInstance'
op|'('
string|"'123'"
op|','
string|"'apple'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'100'"
op|'}'
op|')'
newline|'\n'
name|'b'
op|'='
name|'FakeInstance'
op|'('
string|"'456'"
op|','
string|"'orange'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
name|'c'
op|'='
name|'FakeInstance'
op|'('
string|"'789'"
op|','
string|"'banana'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
nl|'\n'
string|"'get_by_filters'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
op|'{'
string|"'read_deleted'"
op|':'
string|"'yes'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'soft_deleted'"
op|':'
name|'False'
op|','
string|"'host'"
op|':'
string|"'fake-mini'"
op|','
nl|'\n'
string|"'cleaned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
DECL|variable|expected_attrs
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'system_metadata'"
op|']'
op|','
nl|'\n'
DECL|variable|use_slave
name|'use_slave'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'a'
op|','
name|'b'
op|','
name|'c'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'delete_instance_files'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_run_pending_deletes'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'a'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'100'"
op|','
name|'a'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'b'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'4'"
op|','
name|'b'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'c'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1'"
op|','
name|'c'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_failure
dedent|''
name|'def'
name|'test_attach_interface_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that the fault methods are invoked when an attach fails'
nl|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'e'
op|'='
name|'exception'
op|'.'
name|'InterfaceAttachFailed'
op|'('
name|'instance_uuid'
op|'='
name|'f_instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'allocate_port_for_instance'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'e'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'update'
op|','
name|'meth'
op|','
name|'add_fault'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InterfaceAttachFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'attach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
string|"'net_id'"
op|','
string|"'port_id'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'add_fault'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
name|'e'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_failure
dedent|''
name|'def'
name|'test_detach_interface_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that the fault methods are invoked when a detach fails'
nl|'\n'
nl|'\n'
comment|'# Build test data that will cause a PortNotFound exception'
nl|'\n'
indent|'        '
name|'f_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'.'
name|'info_cache'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'.'
name|'info_cache'
op|'.'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'meth'
op|','
name|'add_fault'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PortNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
string|"'port_id'"
op|')'
newline|'\n'
name|'add_fault'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume_volume_api_usage
dedent|''
name|'def'
name|'test_swap_volume_volume_api_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test ensures that volume_id arguments are passed to volume_api'
nl|'\n'
comment|'# and that volume states are OK'
nl|'\n'
indent|'        '
name|'volumes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'old_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'old_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'old_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'detaching'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'new_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'new_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'new_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'2'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_roll_detaching
name|'def'
name|'fake_vol_api_roll_detaching'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'detaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
string|"'instance_uuid'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'\'{"foo": "bar"}\''
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_func
name|'def'
name|'fake_vol_api_func'
op|'('
name|'context'
op|','
name|'volume'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume'
op|')'
op|')'
newline|'\n'
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_get
dedent|''
name|'def'
name|'fake_vol_get'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'return'
name|'volumes'
op|'['
name|'volume_id'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_unreserve
dedent|''
name|'def'
name|'fake_vol_unreserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'attaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_migrate_volume_completion
dedent|''
dedent|''
name|'def'
name|'fake_vol_migrate_volume_completion'
op|'('
name|'context'
op|','
name|'old_volume_id'
op|','
nl|'\n'
name|'new_volume_id'
op|','
name|'error'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'old_volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'new_volume_id'
op|')'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
name|'return'
op|'{'
string|"'save_volume_id'"
op|':'
name|'new_volume_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_func_exc
dedent|''
name|'def'
name|'fake_func_exc'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
comment|'# Random exception'
newline|'\n'
nl|'\n'
DECL|function|fake_swap_volume
dedent|''
name|'def'
name|'fake_swap_volume'
op|'('
name|'old_connection_info'
op|','
name|'new_connection_info'
op|','
nl|'\n'
name|'instance'
op|','
name|'mountpoint'
op|','
name|'resize_to'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resize_to'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_block_device_mapping_update
dedent|''
name|'def'
name|'fake_block_device_mapping_update'
op|'('
name|'ctxt'
op|','
name|'id'
op|','
name|'updates'
op|','
name|'legacy'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'updates'
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'fake_bdm'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'roll_detaching'"
op|','
nl|'\n'
name|'fake_vol_api_roll_detaching'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
name|'fake_vol_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'unreserve_volume'"
op|','
nl|'\n'
name|'fake_vol_unreserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'terminate_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_by_volume_id'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|','
name|'z'
op|':'
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_volume_connector'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'fake_swap_volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'migrate_volume_completion'"
op|','
nl|'\n'
name|'fake_vol_migrate_volume_completion'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update'"
op|','
nl|'\n'
name|'fake_block_device_mapping_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
nl|'\n'
string|"'instance_fault_create'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|','
nl|'\n'
name|'lambda'
name|'c'
op|','
name|'u'
op|','
op|'**'
name|'k'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Good path'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Error paths'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'EventReporter'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_source
name|'def'
name|'test_check_can_live_migrate_source'
op|'('
name|'self'
op|','
name|'event_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'is_volume_backed'
op|'='
string|"'volume_backed'"
newline|'\n'
name|'dest_check_data'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'db_instance'
op|')'
newline|'\n'
name|'expected_dest_check_data'
op|'='
name|'dict'
op|'('
name|'dest_check_data'
op|','
nl|'\n'
name|'is_volume_backed'
op|'='
name|'is_volume_backed'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'is_volume_backed_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_source'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'is_volume_backed_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'is_volume_backed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'refresh_conn_info'
op|'='
name|'True'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'block_device_mapping'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'expected_dest_check_data'
op|','
nl|'\n'
op|'{'
string|"'block_device_mapping'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'dest_check_data'
op|'='
name|'dest_check_data'
op|')'
newline|'\n'
name|'event_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'compute_check_can_live_migrate_source'"
op|','
nl|'\n'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'EventReporter'"
op|')'
newline|'\n'
DECL|member|_test_check_can_live_migrate_destination
name|'def'
name|'_test_check_can_live_migrate_destination'
op|'('
name|'self'
op|','
name|'event_mock'
op|','
nl|'\n'
name|'do_raise'
op|'='
name|'False'
op|','
nl|'\n'
name|'has_mig_data'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'host'
op|'='
string|"'fake-host'"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'db_instance'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
string|"'fake-host'"
newline|'\n'
name|'block_migration'
op|'='
string|"'block_migration'"
newline|'\n'
name|'disk_over_commit'
op|'='
string|"'disk_over_commit'"
newline|'\n'
name|'src_info'
op|'='
string|"'src_info'"
newline|'\n'
name|'dest_info'
op|'='
string|"'dest_info'"
newline|'\n'
name|'dest_check_data'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'mig_data'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|')'
newline|'\n'
name|'expected_result'
op|'='
name|'dict'
op|'('
name|'mig_data'
op|')'
newline|'\n'
name|'if'
name|'has_mig_data'
op|':'
newline|'\n'
indent|'            '
name|'dest_check_data'
op|'['
string|"'migrate_data'"
op|']'
op|'='
name|'dict'
op|'('
name|'cat'
op|'='
string|"'meow'"
op|')'
newline|'\n'
name|'expected_result'
op|'.'
name|'update'
op|'('
name|'cat'
op|'='
string|"'meow'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_compute_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_destination'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'check_can_live_migrate_source'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_destination_cleanup'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_compute_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-host'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'src_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_compute_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'host'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dest_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'src_info'
op|','
name|'dest_info'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
name|'mock_meth'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
name|'if'
name|'do_raise'
op|':'
newline|'\n'
indent|'            '
name|'mock_meth'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mock_meth'
op|'.'
name|'AndReturn'
op|'('
name|'mig_data'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_destination_cleanup'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'block_migration'
op|','
nl|'\n'
name|'disk_over_commit'
op|'='
name|'disk_over_commit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_result'
op|','
name|'result'
op|')'
newline|'\n'
name|'event_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'compute_check_can_live_migrate_destination'"
op|','
nl|'\n'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_success
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_success_w_mig_data
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_success_w_mig_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|'('
name|'has_mig_data'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_fail
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|','
nl|'\n'
name|'do_raise'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_prepare_for_instance_event
name|'def'
name|'test_prepare_for_instance_event'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'test-event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|'['
string|"'test-event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'result'
op|','
string|"'send'"
op|')'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_pop_instance_event
name|'def'
name|'test_pop_instance_event'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'network-vif-plugged'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'event_obj'
op|'='
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-plugged'"
op|','
nl|'\n'
name|'tag'
op|'='
name|'None'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'pop_instance_event'
op|'('
name|'inst_obj'
op|','
nl|'\n'
name|'event_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'event'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_clear_events_for_instance
name|'def'
name|'test_clear_events_for_instance'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'test-event'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'clear_events_for_instance'
op|'('
nl|'\n'
name|'inst_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
op|'{'
string|"'test-event'"
op|':'
name|'event'
op|'}'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_events_lock_name
dedent|''
name|'def'
name|'test_instance_events_lock_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_lock_name'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'foo-events'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prepare_for_instance_event_again
dedent|''
name|'def'
name|'test_prepare_for_instance_event_again'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
comment|'# A second attempt will avoid creating a new list; make sure we'
nl|'\n'
comment|'# get the current list'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'test-event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|'['
string|"'test-event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'result'
op|','
string|"'send'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_instance_event
dedent|''
name|'def'
name|'test_process_instance_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'network-vif-plugged'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'event_obj'
op|'='
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-plugged'"
op|','
nl|'\n'
name|'tag'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_process_instance_event'
op|'('
name|'inst_obj'
op|','
name|'event_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'event'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'event_obj'
op|','
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_instance_vif_deleted_event
dedent|''
name|'def'
name|'test_process_instance_vif_deleted_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif1'
op|'['
string|"'id'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'vif2'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif2'
op|'['
string|"'id'"
op|']'
op|'='
string|"'2'"
newline|'\n'
name|'nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'vif1'
op|','
name|'vif2'
op|']'
op|')'
newline|'\n'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
name|'network_info'
op|'='
name|'nw_info'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'uuid'
op|'='
string|"'uuid'"
op|','
name|'info_cache'
op|'='
name|'info_cache'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'base_net_api'
op|','
nl|'\n'
string|"'update_instance_cache_with_nw_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'detach_interface'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'detach_interface'
op|','
name|'update_instance_cache_with_nw_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_process_instance_vif_deleted_event'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst_obj'
op|','
nl|'\n'
name|'vif2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'update_instance_cache_with_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst_obj'
op|','
nl|'\n'
name|'nw_info'
op|'='
op|'['
name|'vif1'
op|']'
op|')'
newline|'\n'
name|'detach_interface'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|','
name|'vif2'
op|')'
newline|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_external_instance_event
dedent|''
name|'def'
name|'test_external_instance_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'uuid'
op|'='
string|"'uuid2'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'uuid'
op|'='
string|"'uuid3'"
op|')'
op|']'
newline|'\n'
name|'events'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-changed'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'tag1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-plugged'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid2'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'tag2'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-deleted'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid3'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'tag3'"
op|')'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_process_instance_vif_deleted_event'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_process_instance_event'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'_process_instance_event'
op|','
name|'get_instance_nw_info'
op|','
nl|'\n'
name|'_process_instance_vif_deleted_event'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'external_instance_event'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|','
name|'events'
op|')'
newline|'\n'
name|'get_instance_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'_process_instance_event'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'events'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'_process_instance_vif_deleted_event'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'2'
op|']'
op|','
name|'events'
op|'['
number|'2'
op|']'
op|'.'
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_external_instance_event_with_exception
dedent|''
name|'def'
name|'test_external_instance_event_with_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif1'
op|'['
string|"'id'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'vif2'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif2'
op|'['
string|"'id'"
op|']'
op|'='
string|"'2'"
newline|'\n'
name|'nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'vif1'
op|','
name|'vif2'
op|']'
op|')'
newline|'\n'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
name|'network_info'
op|'='
name|'nw_info'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid2'"
op|')'
newline|'\n'
name|'instances'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'uuid'
op|'='
string|"'uuid2'"
op|','
name|'info_cache'
op|'='
name|'info_cache'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'uuid'
op|'='
string|"'uuid3'"
op|')'
op|']'
newline|'\n'
name|'events'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-changed'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'tag1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-deleted'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid2'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'2'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-vif-plugged'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid3'"
op|','
nl|'\n'
name|'tag'
op|'='
string|"'tag3'"
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# Make sure all the three events are handled despite the exceptions in'
nl|'\n'
comment|'# processing events 1 and 2'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'base_net_api'
op|','
nl|'\n'
string|"'update_instance_cache_with_nw_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'detach_interface'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NovaException'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceInfoCacheNotFound'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid1'"
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_process_instance_event'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'_process_instance_event'
op|','
name|'get_instance_nw_info'
op|','
nl|'\n'
name|'detach_interface'
op|','
name|'update_instance_cache_with_nw_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'external_instance_event'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|','
name|'events'
op|')'
newline|'\n'
name|'get_instance_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'update_instance_cache_with_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'nw_info'
op|'='
op|'['
name|'vif1'
op|']'
op|')'
newline|'\n'
name|'detach_interface'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'['
number|'1'
op|']'
op|','
name|'vif2'
op|')'
newline|'\n'
name|'_process_instance_event'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'events'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cancel_all_events
dedent|''
name|'def'
name|'test_cancel_all_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid'"
op|')'
newline|'\n'
name|'fake_eventlet_event'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
name|'inst'
op|'.'
name|'uuid'
op|':'
op|'{'
nl|'\n'
string|"'network-vif-plugged-bar'"
op|':'
name|'fake_eventlet_event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'cancel_all_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_eventlet_event'
op|'.'
name|'send'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'event'
op|'='
name|'fake_eventlet_event'
op|'.'
name|'send'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'network-vif-plugged'"
op|','
name|'event'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'event'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'failed'"
op|','
name|'event'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_cancels_all_events
dedent|''
name|'def'
name|'test_cleanup_cancels_all_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'instance_events'"
op|')'
name|'as'
name|'mock_ev'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'cleanup_host'
op|'('
op|')'
newline|'\n'
name|'mock_ev'
op|'.'
name|'cancel_all_events'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_blocks_new_events
dedent|''
dedent|''
name|'def'
name|'test_cleanup_blocks_new_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'cancel_all_events'
op|'('
op|')'
newline|'\n'
name|'callback'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'virtapi'
op|'.'
name|'wait_for_instance_event'
op|'('
nl|'\n'
name|'instance'
op|','
op|'['
string|"'network-vif-plugged-bar'"
op|']'
op|','
nl|'\n'
name|'error_callback'
op|'='
name|'callback'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'body'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'callback'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'network-vif-plugged-bar'"
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pop_events_fails_gracefully
dedent|''
name|'def'
name|'test_pop_events_fails_gracefully'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid'"
op|')'
newline|'\n'
name|'event'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'pop_instance_event'
op|'('
name|'inst'
op|','
name|'event'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clear_events_fails_gracefully
dedent|''
name|'def'
name|'test_clear_events_fails_gracefully'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'clear_events_for_instance'
op|'('
name|'inst'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_pending_soft
dedent|''
name|'def'
name|'test_retry_reboot_pending_soft'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_pending_hard
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_pending_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING_HARD'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_soft_off
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_soft_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_hard_off
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_hard_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_hard_on
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_hard_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_no_reboot
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_no_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
string|"'bar'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.BlockDeviceMapping.get_by_volume_id'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._driver_detach_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance._from_db_object'"
op|')'
newline|'\n'
DECL|member|test_remove_volume_connection
name|'def'
name|'test_remove_volume_connection'
op|'('
name|'self'
op|','
name|'inst_from_db'
op|','
name|'detach'
op|','
name|'bdm_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'bdm'
newline|'\n'
name|'inst_obj'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'inst_obj'
newline|'\n'
name|'bdm_get'
op|'.'
name|'return_value'
op|'='
name|'bdm'
newline|'\n'
name|'inst_from_db'
op|'.'
name|'return_value'
op|'='
name|'inst_obj'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'volume_api'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'remove_volume_connection'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'vol'"
op|','
nl|'\n'
name|'inst_obj'
op|')'
newline|'\n'
dedent|''
name|'detach'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume
dedent|''
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_detach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume_not_destroy_bdm
dedent|''
name|'def'
name|'test_detach_volume_not_destroy_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_detach_volume'
op|'('
name|'destroy_bdm'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.BlockDeviceMapping.get_by_volume_id'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._driver_detach_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_notify_about_instance_usage'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.conductor.manager.ConductorManager.vol_usage_update'"
op|')'
newline|'\n'
DECL|member|_test_detach_volume
name|'def'
name|'_test_detach_volume'
op|'('
name|'self'
op|','
name|'vol_usage_update'
op|','
name|'notify_inst_usage'
op|','
name|'detach'
op|','
nl|'\n'
name|'bdm_get'
op|','
name|'destroy_bdm'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
string|"'123'"
newline|'\n'
name|'inst_obj'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'inst_obj'
newline|'\n'
nl|'\n'
name|'bdm'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'spec'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|')'
newline|'\n'
name|'bdm'
op|'.'
name|'device_name'
op|'='
string|"'vdb'"
newline|'\n'
name|'bdm_get'
op|'.'
name|'return_value'
op|'='
name|'bdm'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'volume_api'"
op|')'
name|'as'
name|'volume_api'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'driver'"
op|')'
name|'as'
name|'driver'
op|':'
newline|'\n'
indent|'                '
name|'connector_sentinel'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'connector'
newline|'\n'
name|'driver'
op|'.'
name|'get_volume_connector'
op|'.'
name|'return_value'
op|'='
name|'connector_sentinel'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_detach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'inst_obj'
op|','
nl|'\n'
name|'destroy_bdm'
op|'='
name|'destroy_bdm'
op|')'
newline|'\n'
nl|'\n'
name|'detach'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'get_volume_connector'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
name|'volume_api'
op|'.'
name|'terminate_connection'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
name|'connector_sentinel'
op|')'
newline|'\n'
name|'volume_api'
op|'.'
name|'detach'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'notify_inst_usage'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
string|'"volume.detach"'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'volume_id'"
op|':'
name|'volume_id'
op|'}'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'destroy_bdm'
op|':'
newline|'\n'
indent|'                    '
name|'bdm'
op|'.'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bdm'
op|'.'
name|'destroy'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_rescue
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_test_rescue'
op|'('
name|'self'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'fake_nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
name|'rescue_image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|','
string|"'name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_rescue_image'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'rescue_image_meta'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_power_off_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'rescue'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'notify_usage_exists'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'elevated_context'
op|','
name|'get_nw_info'
op|','
nl|'\n'
name|'get_rescue_image'
op|','
name|'notify_instance_usage'
op|','
name|'power_off_instance'
op|','
nl|'\n'
name|'driver_rescue'
op|','
name|'notify_usage_exists'
op|','
name|'get_power_state'
op|','
name|'instance_save'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'rescue_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'rescue_password'
op|'='
string|"'verybadpass'"
op|','
nl|'\n'
name|'rescue_image_ref'
op|'='
name|'None'
op|','
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert the field values on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'RESCUED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'instance'
op|'.'
name|'power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'get_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'get_rescue_image'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'rescue_image_name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'notify_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"rescue.start"'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'extra_usage_info'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"rescue.end"'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'extra_usage_info'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'notify_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
name|'notify_calls'
op|')'
newline|'\n'
nl|'\n'
name|'power_off_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
name|'driver_rescue'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'fake_nw_info'
op|','
name|'rescue_image_meta'
op|','
nl|'\n'
string|"'verybadpass'"
op|')'
newline|'\n'
nl|'\n'
name|'notify_usage_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'notifier'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'current_period'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'RESCUING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue
dedent|''
dedent|''
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_forced_shutdown
dedent|''
name|'def'
name|'test_rescue_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue
dedent|''
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
name|'fake_nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'unrescue'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'elevated_context'
op|','
name|'get_nw_info'
op|','
nl|'\n'
name|'notify_instance_usage'
op|','
name|'driver_unrescue'
op|','
name|'get_power_state'
op|','
nl|'\n'
name|'instance_save'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'unrescue_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert the field values on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'instance'
op|'.'
name|'power_state'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'get_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'notify_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"unrescue.start"'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"unrescue.end"'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'notify_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
name|'notify_calls'
op|')'
newline|'\n'
nl|'\n'
name|'driver_unrescue'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
name|'fake_nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UNRESCUING'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.generate_password'"
op|','
name|'return_value'
op|'='
string|"'fake-pass'"
op|')'
newline|'\n'
DECL|member|test_set_admin_password
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|','
name|'gen_password_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
name|'power_state_mock'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can have its admin password set.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'set_admin_password'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'driver_mock'
op|','
name|'elevated_mock'
op|')'
op|':'
newline|'\n'
comment|'# call the manager method'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# make our assertions'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'power_state_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'driver_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
string|"'fake-pass'"
op|')'
newline|'\n'
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
DECL|member|test_set_admin_password_bad_state
name|'def'
name|'test_set_admin_password_bad_state'
op|'('
name|'self'
op|','
name|'add_fault_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
nl|'\n'
name|'update_mock'
op|','
nl|'\n'
name|'power_state_mock'
op|')'
op|':'
newline|'\n'
comment|'# Test setting password while instance is rebuilding.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|':'
newline|'\n'
comment|'# call the manager method'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstancePasswordSetFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# make our assertions'
nl|'\n'
dedent|''
name|'power_state_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
name|'add_fault_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.generate_password'"
op|','
name|'return_value'
op|'='
string|"'fake-pass'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
DECL|member|_do_test_set_admin_password_driver_error
name|'def'
name|'_do_test_set_admin_password_driver_error'
op|'('
name|'self'
op|','
name|'exc'
op|','
nl|'\n'
name|'expected_vm_state'
op|','
nl|'\n'
name|'expected_task_state'
op|','
nl|'\n'
name|'expected_exception'
op|','
nl|'\n'
name|'add_fault_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
nl|'\n'
name|'update_mock'
op|','
nl|'\n'
name|'power_state_mock'
op|','
nl|'\n'
name|'gen_password_mock'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password fails.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'set_admin_password'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exc'
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'driver_mock'
op|','
name|'elevated_mock'
op|')'
op|':'
newline|'\n'
comment|'# error raised from the driver should not reveal internal'
nl|'\n'
comment|'# information so a new error is raised'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected_exception'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'new_pass'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expected_exception'
op|'=='
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'                '
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# setting the instance to error state'
nl|'\n'
indent|'                '
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vm_state'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
comment|'# check revert_task_state decorator'
nl|'\n'
name|'update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'task_state'
op|'='
name|'expected_task_state'
op|')'
newline|'\n'
comment|'# check wrap_instance_fault decorator'
nl|'\n'
name|'add_fault_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password_driver_not_authorized
dedent|''
name|'def'
name|'test_set_admin_password_driver_not_authorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password not'
nl|'\n'
comment|'# authorized.'
nl|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'Forbidden'
op|'('
string|"'Internal error'"
op|')'
newline|'\n'
name|'expected_exception'
op|'='
name|'exception'
op|'.'
name|'InstancePasswordSetFailed'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_set_admin_password_driver_error'
op|'('
nl|'\n'
name|'exc'
op|','
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'None'
op|','
name|'expected_exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password_driver_not_implemented
dedent|''
name|'def'
name|'test_set_admin_password_driver_not_implemented'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password not'
nl|'\n'
comment|'# implemented by driver.'
nl|'\n'
indent|'        '
name|'exc'
op|'='
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
name|'expected_exception'
op|'='
name|'NotImplementedError'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_set_admin_password_driver_error'
op|'('
nl|'\n'
name|'exc'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'None'
op|','
name|'expected_exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_evacuated_instances
dedent|''
name|'def'
name|'test_destroy_evacuated_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'instance_1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance_1'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance_1'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance_1'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance_1'
op|'.'
name|'host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
name|'instance_2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance_2'
op|'.'
name|'uuid'
op|'='
string|"'bar'"
newline|'\n'
name|'instance_2'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance_2'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance_2'
op|'.'
name|'host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
nl|'\n'
comment|'# Only instance 2 has a migration record'
nl|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'instance_uuid'
op|'='
name|'instance_2'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instances_on_driver'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
name|'instance_1'
op|','
nl|'\n'
name|'instance_2'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_block_device_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_is_instance_storage_shared'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.MigrationList.get_by_filters'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Migration.save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_get_instances_on_driver'
op|','
name|'get_instance_nw_info'
op|','
nl|'\n'
name|'_get_instance_block_device_info'
op|','
name|'_is_instance_storage_shared'
op|','
nl|'\n'
name|'destroy'
op|','
name|'migration_list'
op|','
name|'migration_save'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'migration_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'migration'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_destroy_evacuated_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# Only instance 2 should be deleted. Instance 1 is still running'
nl|'\n'
comment|'# here, but no migration from our host exists, so ignore it'
nl|'\n'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_2'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_destroy_evacuated_instances'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.LOG'"
op|')'
newline|'\n'
DECL|member|test_init_host_foreign_instance
name|'def'
name|'test_init_host_foreign_instance'
op|'('
name|'self'
op|','
name|'mock_log'
op|','
name|'mock_destroy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'+'
string|"'-alt'"
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inst'
op|'.'
name|'save'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_log'
op|'.'
name|'warning'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'mock_log'
op|'.'
name|'warning'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'appears to not be owned by this host'"
op|','
name|'msg'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_not_implemented_err
name|'def'
name|'test_error_out_instance_on_exception_not_implemented_err'
op|'('
name|'self'
op|','
nl|'\n'
name|'inst_update_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'NotImplementedError'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'inst_update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_inst_fault_rollback
name|'def'
name|'test_error_out_instance_on_exception_inst_fault_rollback'
op|'('
name|'self'
op|','
nl|'\n'
name|'inst_update_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|'('
nl|'\n'
name|'inner_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'test'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'inst_update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_unknown_with_quotas
name|'def'
name|'test_error_out_instance_on_exception_unknown_with_quotas'
op|'('
name|'self'
op|','
nl|'\n'
name|'set_error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'quotas'
op|'='
name|'mock'
op|'.'
name|'create_autospec'
op|'('
name|'objects'
op|'.'
name|'Quotas'
op|','
name|'spec_set'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'quotas'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'quotas'
op|'.'
name|'method_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock'
op|'.'
name|'call'
op|'.'
name|'rollback'
op|'('
op|')'
op|','
name|'quotas'
op|'.'
name|'method_calls'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'set_error'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes
dedent|''
name|'def'
name|'test_cleanup_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_do_not_delete_dict'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'bdm_delete_dict'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_do_not_delete_dict'
op|','
name|'bdm_delete_dict'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'bdms'
op|')'
newline|'\n'
name|'volume_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'bdms'
op|'['
number|'1'
op|']'
op|'.'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_exception_do_not_raise
dedent|''
dedent|''
name|'def'
name|'test_cleanup_volumes_exception_do_not_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_dict1'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdm_dict2'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_dict1'
op|','
name|'bdm_dict2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
name|'None'
op|']'
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'bdms'
op|','
nl|'\n'
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'.'
name|'volume_id'
op|')'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|','
name|'volume_delete'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_exception_raise
dedent|''
dedent|''
name|'def'
name|'test_cleanup_volumes_exception_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_dict1'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdm_dict2'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_dict1'
op|','
name|'bdm_dict2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
name|'None'
op|']'
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'bdms'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'.'
name|'volume_id'
op|')'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|','
name|'volume_delete'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_instance_task_state_none_power_state_shutdown
dedent|''
dedent|''
name|'def'
name|'test_stop_instance_task_state_none_power_state_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that stop_instance doesn't puke when the instance power_state"
nl|'\n'
comment|'# is shutdown and the task_state is None.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|','
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_power_off_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'save_mock'
op|','
name|'power_off_mock'
op|','
name|'notify_mock'
op|','
name|'get_state_mock'
op|')'
op|':'
newline|'\n'
comment|'# run the code'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
comment|'# assert the calls'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'get_state_mock'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'notify_mock'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'power_off.start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'power_off.end'"
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'power_off_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
op|'['
name|'task_states'
op|'.'
name|'POWERING_OFF'
op|','
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'instance'
op|'.'
name|'power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset_network_driver_not_implemented
dedent|''
name|'def'
name|'test_reset_network_driver_not_implemented'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'reset_network'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'NotImplementedError'
op|'('
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'mock_add_fault'
op|','
name|'mock_reset'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'messaging'
op|'.'
name|'ExpectedException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reset_network'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'utils'
op|'.'
name|'ExceptionHelper'
op|'('
name|'self'
op|'.'
name|'compute'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'reset_network'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_default_impl
dedent|''
name|'def'
name|'test_rebuild_default_impl'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|_detach
indent|'        '
name|'def'
name|'_detach'
op|'('
name|'context'
op|','
name|'bdms'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(rpodolyaka): check that instance has been powered off by'
nl|'\n'
comment|'# the time we detach block devices, exact calls arguments will be'
nl|'\n'
comment|'# checked below'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_power_off'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_destroy'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_attach
dedent|''
name|'def'
name|'_attach'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
name|'do_check_attach'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'block_device_mapping'"
op|':'
string|"'shared_block_storage'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_spawn
dedent|''
name|'def'
name|'_spawn'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|','
name|'network_info'
op|'='
name|'None'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
nl|'\n'
string|"'shared_block_storage'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'_spawn'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_power_off_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_spawn'
op|','
nl|'\n'
name|'mock_save'
op|','
nl|'\n'
name|'mock_power_off'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBUILDING'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'task_states'
op|'.'
name|'REBUILDING'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_rebuild_default_impl'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'admin_password'
op|'='
string|"'new_pass'"
op|','
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'detach_block_devices'
op|'='
name|'_detach'
op|','
nl|'\n'
name|'attach_block_devices'
op|'='
name|'_attach'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'recreate'
op|'='
name|'False'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_spawn'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
name|'mock_power_off'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'last_completed_audit_period'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
number|'0'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|"'time'"
op|','
name|'side_effect'
op|'='
op|'['
number|'10'
op|','
number|'20'
op|','
number|'21'
op|']'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_host'"
op|','
name|'return_value'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BandwidthUsage'
op|','
string|"'get_by_instance_uuid_and_mac'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
DECL|member|test_poll_bandwidth_usage
name|'def'
name|'test_poll_bandwidth_usage'
op|'('
name|'self'
op|','
name|'bw_usage_update'
op|','
name|'get_by_uuid_mac'
op|','
nl|'\n'
name|'get_by_host'
op|','
name|'time'
op|','
name|'last_completed_audit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bw_counters'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
string|"'mac_address'"
op|':'
string|"'fake-mac'"
op|','
nl|'\n'
string|"'bw_in'"
op|':'
number|'1'
op|','
string|"'bw_out'"
op|':'
number|'2'
op|'}'
op|']'
newline|'\n'
name|'usage'
op|'='
name|'objects'
op|'.'
name|'BandwidthUsage'
op|'('
op|')'
newline|'\n'
name|'usage'
op|'.'
name|'bw_in'
op|'='
number|'3'
newline|'\n'
name|'usage'
op|'.'
name|'bw_out'
op|'='
number|'4'
newline|'\n'
name|'usage'
op|'.'
name|'last_ctr_in'
op|'='
number|'0'
newline|'\n'
name|'usage'
op|'.'
name|'last_ctr_out'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'bandwidth_poll_interval'
op|'='
number|'1'
op|')'
newline|'\n'
name|'get_by_uuid_mac'
op|'.'
name|'return_value'
op|'='
name|'usage'
newline|'\n'
name|'_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'bw_usage_update'
op|'.'
name|'return_value'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"''"
op|','
string|"'mac'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'start_period'"
op|':'
name|'_time'
op|','
string|"'last_refreshed'"
op|':'
name|'_time'
op|','
string|"'bw_in'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'bw_out'"
op|':'
number|'0'
op|','
string|"'last_ctr_in'"
op|':'
number|'0'
op|','
string|"'last_ctr_out'"
op|':'
number|'0'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'_time'
op|','
string|"'updated_at'"
op|':'
name|'_time'
op|','
string|"'deleted_at'"
op|':'
name|'_time'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_all_bw_counters'"
op|','
name|'return_value'
op|'='
name|'bw_counters'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_poll_bandwidth_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'get_by_uuid_mac'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'fake-mac'"
op|','
name|'start_period'
op|'='
number|'0'
op|','
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# NOTE(sdague): bw_usage_update happens at some time in'
nl|'\n'
comment|'# the future, so what last_refreshed is is irrelevant.'
nl|'\n'
name|'bw_usage_update'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'fake-mac'"
op|','
number|'0'
op|','
number|'4'
op|','
number|'6'
op|','
number|'1'
op|','
number|'2'
op|','
nl|'\n'
name|'last_refreshed'
op|'='
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reverts_task_state_instance_not_found
dedent|''
dedent|''
name|'def'
name|'test_reverts_task_state_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the reverts_task_state decorator in the compute manager'
nl|'\n'
comment|'# will not trace when an InstanceNotFound is raised.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'instance_update_mock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_update'
op|'='
name|'instance_update_mock'
newline|'\n'
nl|'\n'
name|'log_mock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'LOG'
op|'='
name|'log_mock'
newline|'\n'
nl|'\n'
op|'@'
name|'manager'
op|'.'
name|'reverts_task_state'
newline|'\n'
DECL|function|fake_function
name|'def'
name|'fake_function'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'fake_function'
op|','
nl|'\n'
name|'self'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'log_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'update_instance_info'"
op|')'
newline|'\n'
DECL|member|test_update_scheduler_instance_info
name|'def'
name|'test_update_scheduler_instance_info'
op|'('
name|'self'
op|','
name|'mock_update'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_update_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_update'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'args'
op|'='
name|'mock_update'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'__class__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|'['
number|'1'
op|']'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
comment|'# Send a single instance; check that the method converts to an'
nl|'\n'
comment|'# InstanceList'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'args'
op|'['
number|'2'
op|']'
op|','
name|'objects'
op|'.'
name|'InstanceList'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|'['
number|'2'
op|']'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'delete_instance_info'"
op|')'
newline|'\n'
DECL|member|test_delete_scheduler_instance_info
name|'def'
name|'test_delete_scheduler_instance_info'
op|'('
name|'self'
op|','
name|'mock_delete'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'inst_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_delete'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'args'
op|'='
name|'mock_delete'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'__class__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|'['
number|'1'
op|']'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|'['
number|'2'
op|']'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'inst_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|','
string|"'elevated'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_host'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'sync_instance_info'"
op|')'
newline|'\n'
DECL|member|test_sync_scheduler_instance_info
name|'def'
name|'test_sync_scheduler_instance_info'
op|'('
name|'self'
op|','
name|'mock_sync'
op|','
name|'mock_get_by_host'
op|','
nl|'\n'
name|'mock_elevated'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake1'"
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake2'"
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake3'"
op|')'
newline|'\n'
name|'exp_uuids'
op|'='
op|'['
name|'inst'
op|'.'
name|'uuid'
name|'for'
name|'inst'
name|'in'
op|'['
name|'inst1'
op|','
name|'inst2'
op|','
name|'inst3'
op|']'
op|']'
newline|'\n'
name|'mock_get_by_host'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'inst1'
op|','
name|'inst2'
op|','
name|'inst3'
op|']'
op|')'
newline|'\n'
name|'fake_elevated'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'mock_elevated'
op|'.'
name|'return_value'
op|'='
name|'fake_elevated'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mock_get_by_host'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'fake_elevated'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
name|'expected_attrs'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_sync'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_elevated'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'exp_uuids'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'sync_instance_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'delete_instance_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'client'
op|'.'
name|'SchedulerClient'
op|','
nl|'\n'
string|"'update_instance_info'"
op|')'
newline|'\n'
DECL|member|test_scheduler_info_updates_off
name|'def'
name|'test_scheduler_info_updates_off'
op|'('
name|'self'
op|','
name|'mock_update'
op|','
name|'mock_delete'
op|','
nl|'\n'
name|'mock_sync'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mgr'
op|'='
name|'self'
op|'.'
name|'compute'
newline|'\n'
name|'mgr'
op|'.'
name|'send_instance_updates'
op|'='
name|'False'
newline|'\n'
name|'mgr'
op|'.'
name|'_update_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'mgr'
op|'.'
name|'_delete_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'mgr'
op|'.'
name|'_sync_scheduler_instance_info'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# None of the calls should have been made'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_update'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_delete'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_sync'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_instance_security_rules_takes_non_object
dedent|''
name|'def'
name|'test_refresh_instance_security_rules_takes_non_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'refresh_instance_security_rules'"
op|')'
name|'as'
name|'mock_r'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'refresh_instance_security_rules'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'mock_r'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_instance_obj_error_state_with_clean_task_state
dedent|''
dedent|''
name|'def'
name|'test_set_instance_obj_error_state_with_clean_task_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SPAWNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_task_state'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_instance_obj_error_state_by_default
dedent|''
dedent|''
name|'def'
name|'test_set_instance_obj_error_state_by_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SPAWNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'SPAWNING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_instance_update
name|'def'
name|'test_instance_update'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
op|')'
newline|'\n'
name|'updates'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'None'
op|','
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|'}'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_update_resource_tracker'"
op|')'
name|'as'
name|'mock_rt'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'**'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_rt'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerBuildInstanceTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ComputeManagerBuildInstanceTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerBuildInstanceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|'='
string|"'pass'"
newline|'\n'
name|'self'
op|'.'
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'node'
op|'='
string|"'fake-node'"
newline|'\n'
name|'self'
op|'.'
name|'limits'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|'='
op|'{'
string|"'retry'"
op|':'
op|'{'
string|"'num_attempts'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hosts'"
op|':'
op|'['
op|'['
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'fake-node'"
op|']'
op|']'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_network_info
name|'def'
name|'fake_network_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'network_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
nl|'\n'
name|'fake_network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_prep_block_device'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
comment|"# override tracker with a version that doesn't need the database:"
nl|'\n'
name|'fake_rt'
op|'='
name|'fake_resource_tracker'
op|'.'
name|'FakeResourceTracker'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
name|'self'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_resource_tracker_dict'
op|'['
name|'self'
op|'.'
name|'node'
op|']'
op|'='
name|'fake_rt'
newline|'\n'
nl|'\n'
DECL|member|_do_build_instance_update
dedent|''
name|'def'
name|'_do_build_instance_update'
op|'('
name|'self'
op|','
name|'reschedule_update'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
op|'('
name|'task_states'
op|'.'
name|'SCHEDULING'
op|','
name|'None'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'if'
name|'reschedule_update'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_and_run_instance_update
dedent|''
dedent|''
name|'def'
name|'_build_and_run_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
nl|'\n'
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_resources_instance_update
dedent|''
name|'def'
name|'_build_resources_instance_update'
op|'('
name|'self'
op|','
name|'stub'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'stub'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_notify_about_instance_usage
dedent|''
name|'def'
name|'_notify_about_instance_usage'
op|'('
name|'self'
op|','
name|'event'
op|','
name|'stub'
op|'='
name|'True'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'stub'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_notify_about_instance_usage'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_notify_about_instance_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'event'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_instance_action_events
dedent|''
name|'def'
name|'_instance_action_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|'.'
name|'event_start'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|'.'
name|'event_finish_with_failure'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'exc_val'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'exc_tb'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_assert_build_instance_hook_called
name|'def'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(coreywright): we want to test the return value of'
nl|'\n'
comment|"# _do_build_and_run_instance, but it doesn't bubble all the way up, so"
nl|'\n'
comment|'# mock the hooking, which allows us to test that too, though a little'
nl|'\n'
comment|'# too intimately'
nl|'\n'
indent|'        '
name|'mock_hooks'
op|'.'
name|'setdefault'
op|'('
op|')'
op|'.'
name|'run_post'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'build_instance'"
op|','
name|'result'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'f'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_build_and_run_instance_called_with_proper_args
name|'def'
name|'test_build_and_run_instance_called_with_proper_args'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
nl|'\n'
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
comment|'# This test when sending an icehouse compatible rpc call to juno compute'
nl|'\n'
comment|'# node, NetworkRequest object can load from three items tuple.'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._build_and_run_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_build_and_run_instance_with_icehouse_requested_network
name|'def'
name|'test_build_and_run_instance_with_icehouse_requested_network'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_spawn'
op|','
name|'mock_build_and_run'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_server_actions'
op|'.'
name|'stub_out_action_events'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'instance'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
op|'['
name|'objects'
op|'.'
name|'NetworkRequest'
op|'('
nl|'\n'
name|'network_id'
op|'='
string|"'fake_network_id'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'10.0.0.1'"
op|','
nl|'\n'
name|'port_id'
op|'='
string|"'fake_port_id'"
op|')'
op|']'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'requested_network'
op|'='
name|'mock_build_and_run'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'5'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_network_id'"
op|','
name|'requested_network'
op|'.'
name|'network_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'10.0.0.1'"
op|','
name|'str'
op|'('
name|'requested_network'
op|'.'
name|'address'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_port_id'"
op|','
name|'requested_network'
op|'.'
name|'port_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_build_abort_exception
name|'def'
name|'test_build_abort_exception'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
DECL|function|fake_spawn
indent|'        '
name|'def'
name|'fake_spawn'
op|'('
name|'f'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): Simulate the detached nature of spawn so that'
nl|'\n'
comment|'# we confirm that the inner task has the fault logic'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'fake_spawn'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'clean_task_state'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'FAILED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_rescheduled_exception
name|'def'
name|'test_rescheduled_exception'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'cleanup_instance_network_on_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'cleanup_instance_network_on_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'RESCHEDULED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescheduled_exception_with_non_ascii_exception
dedent|''
name|'def'
name|'test_rescheduled_exception_with_non_ascii_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"u's\\xe9quence'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RescheduledException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'expected_task_state'
op|'='
string|"'block_device_mapping'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conductor_api'
op|'.'
name|'ComputeTaskAPI'
op|','
string|"'build_instances'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'network_api'
op|'.'
name|'API'
op|','
string|"'cleanup_instance_network_on_host'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'virt_driver'
op|'.'
name|'ComputeDriver'
op|','
string|"'macs_for_instance'"
op|')'
newline|'\n'
DECL|member|test_rescheduled_exception_with_network_allocated
name|'def'
name|'test_rescheduled_exception_with_network_allocated'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_macs_for_instance'
op|','
name|'mock_event_finish'
op|','
nl|'\n'
name|'mock_event_start'
op|','
name|'mock_ins_save'
op|','
name|'mock_cleanup_network'
op|','
nl|'\n'
name|'mock_build_ins'
op|','
name|'mock_build_and_run'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'network_allocated'"
op|':'
string|"'True'"
op|'}'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'mock_ins_save'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'mock_macs_for_instance'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
name|'mock_build_and_run'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
nl|'\n'
name|'reason'
op|'='
string|"''"
op|','
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_do_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
name|'mock_build_and_run'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'mock_cleanup_network'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'mock_build_ins'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_rescheduled_exception_without_retry
name|'def'
name|'test_rescheduled_exception_without_retry'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
op|'{'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'clean_task_state'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'FAILED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_rescheduled_exception_do_not_deallocate_network
name|'def'
name|'test_rescheduled_exception_do_not_deallocate_network'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
nl|'\n'
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'deallocate_networks_on_reschedule'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'cleanup_instance_network_on_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'deallocate_networks_on_reschedule'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'cleanup_instance_network_on_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'RESCHEDULED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_rescheduled_exception_deallocate_network
name|'def'
name|'test_rescheduled_exception_deallocate_network'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|','
nl|'\n'
name|'mock_hooks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'deallocate_networks_on_reschedule'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'deallocate_networks_on_reschedule'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'RESCHEDULED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_build_and_run_exceptions
dedent|''
name|'def'
name|'_test_build_and_run_exceptions'
op|'('
name|'self'
op|','
name|'exc'
op|','
name|'set_error'
op|'='
name|'False'
op|','
nl|'\n'
name|'cleanup_volumes'
op|'='
name|'False'
op|','
name|'nil_out_host_and_node'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'if'
name|'cleanup_volumes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'nil_out_host_and_node'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'set_error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_set_instance_obj_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_obj_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'clean_task_state'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.hooks._HOOKS'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'mock_spawn'
op|','
nl|'\n'
name|'mock_hooks'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_build_instance_hook_called'
op|'('
name|'mock_hooks'
op|','
nl|'\n'
name|'build_results'
op|'.'
name|'FAILED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_notfound_exception
dedent|''
dedent|''
name|'def'
name|'test_build_and_run_notfound_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_unexpecteddeleting_exception
dedent|''
name|'def'
name|'test_build_and_run_unexpecteddeleting_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake_uuid'"
op|','
name|'expected'
op|'='
op|'{'
op|'}'
op|','
name|'actual'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_buildabort_exception
dedent|''
name|'def'
name|'test_build_and_run_buildabort_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
name|'instance_uuid'
op|'='
string|"''"
op|','
name|'reason'
op|'='
string|"''"
op|')'
op|','
nl|'\n'
name|'set_error'
op|'='
name|'True'
op|','
name|'cleanup_volumes'
op|'='
name|'True'
op|','
name|'nil_out_host_and_node'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_unhandled_exception
dedent|''
name|'def'
name|'test_build_and_run_unhandled_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
nl|'\n'
name|'set_error'
op|'='
name|'True'
op|','
name|'cleanup_volumes'
op|'='
name|'True'
op|','
nl|'\n'
name|'nil_out_host_and_node'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_not_found
dedent|''
name|'def'
name|'test_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.end'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'expected_task_state'
op|'='
string|"'block_device_mapping'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reschedule_on_exception
dedent|''
dedent|''
name|'def'
name|'test_reschedule_on_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RescheduledException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'expected_task_state'
op|'='
string|"'block_device_mapping'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_network_alloc_failure
dedent|''
dedent|''
name|'def'
name|'test_spawn_network_alloc_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Because network allocation is asynchronous, failures may not present'
nl|'\n'
comment|'# themselves until the virt spawn method is called.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
name|'exception'
op|'.'
name|'NoMoreNetworks'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_no_more_fixedips_exception
dedent|''
name|'def'
name|'test_build_and_run_no_more_fixedips_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'NoMoreFixedIps'
op|'('
string|'"error messge"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_flavor_disk_too_small_exception
dedent|''
name|'def'
name|'test_build_and_run_flavor_disk_too_small_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_flavor_memory_too_small_exception
dedent|''
name|'def'
name|'test_build_and_run_flavor_memory_too_small_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FlavorMemoryTooSmall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_image_not_active_exception
dedent|''
name|'def'
name|'test_build_and_run_image_not_active_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotActive'
op|'('
name|'image_id'
op|'='
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_image_unacceptable_exception
dedent|''
name|'def'
name|'test_build_and_run_image_unacceptable_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|','
nl|'\n'
name|'reason'
op|'='
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_build_and_run_spawn_exceptions
dedent|''
name|'def'
name|'_test_build_and_run_spawn_exceptions'
op|'('
name|'self'
op|','
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exc'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_shutdown_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_validate_instance_group_policy'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'spawn'
op|','
name|'save'
op|','
nl|'\n'
name|'_build_networks_for_instance'
op|','
name|'_notify_about_instance_usage'
op|','
nl|'\n'
name|'_shutdown_instance'
op|','
name|'_validate_instance_group_policy'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'BuildAbortException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
name|'_validate_instance_group_policy'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'_build_networks_for_instance'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'_notify_about_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'spawn'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'_shutdown_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'try_deallocate_networks'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
DECL|member|test_reschedule_on_resources_unavailable
name|'def'
name|'test_reschedule_on_resources_unavailable'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
name|'reason'
op|'='
string|"'resource unavailable'"
newline|'\n'
name|'exc'
op|'='
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeResourceTracker
name|'class'
name|'FakeResourceTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|instance_claim
indent|'            '
name|'def'
name|'instance_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exc'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_resource_tracker'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'cleanup_instance_network_on_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_nil_out_instance_obj_host_and_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_resource_tracker'
op|'('
name|'self'
op|'.'
name|'node'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'FakeResourceTracker'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
DECL|variable|extra_usage_info
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'cleanup_instance_network_on_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_nil_out_instance_obj_host_and_node'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_buildabort_reraise
dedent|''
name|'def'
name|'test_build_resources_buildabort_reraise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_resources'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'BuildAbortException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_reraises_on_failed_bdm_prep
dedent|''
dedent|''
name|'def'
name|'test_build_resources_reraises_on_failed_bdm_prep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_prep_block_device'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_prep_block_device'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_bdm_prep_from_delete_raises_unexpected
dedent|''
dedent|''
name|'def'
name|'test_failed_bdm_prep_from_delete_raises_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake_uuid'"
op|','
nl|'\n'
name|'actual'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'DELETING'
op|'}'
op|','
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|')'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'_build_networks_for_instance'
op|','
name|'save'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_build_networks_for_instance'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_aborts_on_failed_network_alloc
dedent|''
dedent|''
name|'def'
name|'test_build_resources_aborts_on_failed_network_alloc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_network_alloc_from_delete_raises_unexpected
dedent|''
dedent|''
name|'def'
name|'test_failed_network_alloc_from_delete_raises_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|')'
name|'as'
name|'_build_networks'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
newline|'\n'
name|'_build_networks'
op|'.'
name|'side_effect'
op|'='
name|'exc'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake_uuid'"
op|','
nl|'\n'
name|'actual'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'DELETING'
op|'}'
op|','
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_build_networks'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_with_network_info_obj_on_spawn_failure
dedent|''
dedent|''
name|'def'
name|'test_build_resources_with_network_info_obj_on_spawn_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'test_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test_exception'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_exception'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_cleans_up_and_reraises_on_spawn_failure
dedent|''
dedent|''
name|'def'
name|'test_build_resources_cleans_up_and_reraises_on_spawn_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'test_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test_exception'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_exception'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.network.model.NetworkInfoAsyncWrapper.wait'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.compute.manager.ComputeManager._build_networks_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_build_resources_instance_not_found_before_yield
name|'def'
name|'test_build_resources_instance_not_found_before_yield'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_build_network'
op|','
name|'mock_info_wait'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_build_network'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
newline|'\n'
name|'expected_exc'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'side_effect'
op|'='
name|'expected_exc'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_exc'
op|','
name|'e'
op|')'
newline|'\n'
dedent|''
name|'mock_build_network'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
name|'mock_info_wait'
op|'.'
name|'assert_called_once_with'
op|'('
name|'do_raise'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.network.model.NetworkInfoAsyncWrapper.wait'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.compute.manager.ComputeManager._build_networks_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_build_resources_unexpected_task_error_before_yield
name|'def'
name|'test_build_resources_unexpected_task_error_before_yield'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_build_network'
op|','
name|'mock_info_wait'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_build_network'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
newline|'\n'
name|'mock_save'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake_uuid'"
op|','
name|'expected'
op|'='
op|'{'
op|'}'
op|','
name|'actual'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'BuildAbortException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'mock_build_network'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
name|'mock_info_wait'
op|'.'
name|'assert_called_once_with'
op|'('
name|'do_raise'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.network.model.NetworkInfoAsyncWrapper.wait'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.compute.manager.ComputeManager._build_networks_for_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_build_resources_exception_before_yield
name|'def'
name|'test_build_resources_exception_before_yield'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_build_network'
op|','
name|'mock_info_wait'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_build_network'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
newline|'\n'
name|'mock_save'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'BuildAbortException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'mock_build_network'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
name|'mock_info_wait'
op|'.'
name|'assert_called_once_with'
op|'('
name|'do_raise'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_aborts_on_cleanup_failure
dedent|''
name|'def'
name|'test_build_resources_aborts_on_cleanup_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_networks_if_not_allocated
dedent|''
dedent|''
name|'def'
name|'test_build_networks_if_not_allocated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_networks_if_allocated_false
dedent|''
name|'def'
name|'test_build_networks_if_allocated_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'dict'
op|'('
name|'network_allocated'
op|'='
string|"'False'"
op|')'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_return_networks_if_found
dedent|''
name|'def'
name|'test_return_networks_if_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'dict'
op|'('
name|'network_allocated'
op|'='
string|"'True'"
op|')'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_info
name|'def'
name|'fake_network_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'123.123.123.123'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'setup_instance_network_on_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'setup_instance_network_on_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|'.'
name|'get_instance_nw_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'fake_network_info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_allocated_networks_instance_not_found
dedent|''
name|'def'
name|'test_cleanup_allocated_networks_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_deallocate_network'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"''"
op|')'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_deallocate_network'
op|','
name|'save'
op|')'
op|':'
newline|'\n'
comment|"# Testing that this doesn't raise an exeption"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'False'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'network_allocated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
DECL|member|test_launched_at_in_create_end_notification
name|'def'
name|'test_launched_at_in_create_end_notification'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_instance_update'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_notify
indent|'        '
name|'def'
name|'fake_notify'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'create.end'"
op|':'
newline|'\n'
comment|'# Check that launched_at is set on the instance'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'args'
op|'['
number|'1'
op|']'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_update_scheduler_instance_info'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
name|'return_value'
op|'='
op|'['
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_notify'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_upd'
op|','
name|'mock_spawn'
op|','
name|'mock_networks'
op|','
name|'mock_save'
op|','
name|'mock_notify'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'expected_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'create.end'"
op|','
name|'extra_usage_info'
op|'='
op|'{'
string|"'message'"
op|':'
string|"u'Success'"
op|'}'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'create_end_call'
op|'='
name|'mock_notify'
op|'.'
name|'call_args_list'
op|'['
nl|'\n'
name|'mock_notify'
op|'.'
name|'call_count'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_call'
op|','
name|'create_end_call'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'manager'
op|'.'
name|'ComputeManager'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
DECL|member|test_create_end_on_instance_delete
name|'def'
name|'test_create_end_on_instance_delete'
op|'('
name|'self'
op|','
name|'mock_instance_update'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_notify
indent|'        '
name|'def'
name|'fake_notify'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'create.end'"
op|':'
newline|'\n'
comment|'# Check that launched_at is set on the instance'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'args'
op|'['
number|'1'
op|']'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'exc'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
name|'return_value'
op|'='
op|'['
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'exc'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_notify'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_spawn'
op|','
name|'mock_networks'
op|','
name|'mock_save'
op|','
name|'mock_notify'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'expected_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'create.end'"
op|','
name|'fault'
op|'='
name|'exc'
op|')'
newline|'\n'
name|'create_end_call'
op|'='
name|'mock_notify'
op|'.'
name|'call_args_list'
op|'['
nl|'\n'
name|'mock_notify'
op|'.'
name|'call_count'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_call'
op|','
name|'create_end_call'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerMigrationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ComputeManagerMigrationTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerMigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'new_instance_type_id'
op|'='
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|'='
string|"'migrating'"
newline|'\n'
name|'fake_server_actions'
op|'.'
name|'stub_out_action_events'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
string|"'obj_as_admin'"
op|')'
newline|'\n'
DECL|member|test_errors_out_migration_decorator
name|'def'
name|'test_errors_out_migration_decorator'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
nl|'\n'
name|'mock_obj_as_admin'
op|')'
op|':'
newline|'\n'
comment|'# Tests that errors_out_migration decorator in compute manager'
nl|'\n'
comment|"# sets migration status to 'error' when an exception is raised"
nl|'\n'
comment|'# from decorated method'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
newline|'\n'
name|'migration'
op|'.'
name|'status'
op|'='
string|"'migrating'"
newline|'\n'
name|'migration'
op|'.'
name|'id'
op|'='
number|'0'
newline|'\n'
nl|'\n'
op|'@'
name|'manager'
op|'.'
name|'errors_out_migration'
newline|'\n'
DECL|function|fake_function
name|'def'
name|'fake_function'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_obj_as_admin'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'fake_function'
op|','
nl|'\n'
name|'self'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'error'"
op|','
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_obj_as_admin'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_resize_failure
dedent|''
name|'def'
name|'test_finish_resize_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_finish_resize'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ResizeError'
op|'('
name|'reason'
op|'='
string|"''"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'obj_as_admin'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'meth'
op|','
name|'fault_create'
op|','
name|'instance_update'
op|','
name|'instance_save'
op|','
nl|'\n'
name|'migration_save'
op|','
name|'migration_obj_as_admin'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fault_create'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ResizeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'finish_resize'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'disk_info'
op|'='
op|'['
op|']'
op|','
name|'image'
op|'='
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'reservations'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'migration'
op|'='
name|'self'
op|'.'
name|'migration'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"error"'
op|','
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'migration_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'migration_obj_as_admin'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance_failure
dedent|''
dedent|''
name|'def'
name|'test_resize_instance_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'migration'
op|'.'
name|'dest_host'
op|'='
name|'None'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'migrate_disk_and_power_off'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ResizeError'
op|'('
name|'reason'
op|'='
string|"''"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'obj_as_admin'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|','
nl|'\n'
string|"'get_by_id'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'meth'
op|','
name|'fault_create'
op|','
name|'instance_update'
op|','
nl|'\n'
name|'migration_save'
op|','
name|'migration_obj_as_admin'
op|','
name|'nw_info'
op|','
name|'save_inst'
op|','
nl|'\n'
name|'notify'
op|','
name|'vol_block_info'
op|','
name|'bdm'
op|','
name|'flavor'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fault_create'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ResizeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'resize_instance'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'image'
op|'='
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'reservations'
op|'='
op|'['
op|']'
op|','
name|'migration'
op|'='
name|'self'
op|'.'
name|'migration'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'type'"
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"error"'
op|','
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
name|'migration_save'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
name|'migration_obj_as_admin'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_revert_resize_instance_destroy_disks
dedent|''
dedent|''
name|'def'
name|'_test_revert_resize_instance_destroy_disks'
op|'('
name|'self'
op|','
name|'is_shared'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# This test asserts that _is_instance_storage_shared() is called from'
nl|'\n'
comment|'# revert_resize() and the return value is passed to driver.destroy().'
nl|'\n'
comment|'# Otherwise we could regress this.'
nl|'\n'
nl|'\n'
indent|'        '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_is_instance_storage_shared'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'finish_revert_resize'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_resource_tracker'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'setup_networks_on_host'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'migrate_instance_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'notify_usage_exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'get_by_instance_uuid'
op|','
nl|'\n'
name|'migration_save'
op|','
nl|'\n'
name|'notify_usage_exists'
op|','
nl|'\n'
name|'migrate_instance_start'
op|','
nl|'\n'
name|'setup_networks_on_host'
op|','
nl|'\n'
name|'destroy'
op|','
nl|'\n'
name|'_get_resource_tracker'
op|','
nl|'\n'
name|'_instance_update'
op|','
nl|'\n'
name|'finish_revert_resize'
op|','
nl|'\n'
name|'_is_instance_storage_shared'
op|','
nl|'\n'
name|'get_instance_nw_info'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'migration'
op|'.'
name|'source_compute'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Inform compute that instance uses non-shared or shared storage'
nl|'\n'
name|'_is_instance_storage_shared'
op|'.'
name|'return_value'
op|'='
name|'is_shared'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'revert_resize'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'migration'
op|'='
name|'self'
op|'.'
name|'migration'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'reservations'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'_is_instance_storage_shared'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'migration'
op|'.'
name|'source_compute'
op|')'
newline|'\n'
nl|'\n'
comment|'# If instance storage is shared, driver destroy method'
nl|'\n'
comment|'# should not destroy disks otherwise it should destroy disks.'
nl|'\n'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'not'
name|'is_shared'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_instance_destroy_disks_shared_storage
dedent|''
name|'def'
name|'test_revert_resize_instance_destroy_disks_shared_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_revert_resize_instance_destroy_disks'
op|'('
name|'is_shared'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_instance_destroy_disks_non_shared_storage
dedent|''
name|'def'
name|'test_revert_resize_instance_destroy_disks_non_shared_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_revert_resize_instance_destroy_disks'
op|'('
name|'is_shared'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_consoles_enabled
dedent|''
name|'def'
name|'test_consoles_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'rdp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_consoles_enabled'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_consoles_enabled'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'console'
name|'in'
op|'['
string|"'spice'"
op|','
string|"'rdp'"
op|','
string|"'serial_console'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
name|'console'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_consoles_enabled'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
name|'console'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.spawn_n'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_do_live_migration'"
op|')'
newline|'\n'
DECL|member|_test_max_concurrent_live
name|'def'
name|'_test_max_concurrent_live'
op|'('
name|'self'
op|','
name|'mock_lm'
op|','
name|'mock_spawn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_spawn'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'f'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'f'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Migration.save'"
op|')'
newline|'\n'
DECL|function|_do_it
name|'def'
name|'_do_it'
op|'('
name|'mock_mig_save'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'dest'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'block_migration'
op|','
nl|'\n'
name|'migration'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'migrate_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'queued'"
op|','
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_live_migration_semaphore'"
op|')'
name|'as'
name|'mock_sem'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_do_it'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'mock_sem'
op|'.'
name|'__enter__'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_live_limited
dedent|''
name|'def'
name|'test_max_concurrent_live_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_live_migrations'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_max_concurrent_live'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_live_unlimited
dedent|''
name|'def'
name|'test_max_concurrent_live_unlimited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_live_migrations'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_max_concurrent_live'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_live_semaphore_limited
dedent|''
name|'def'
name|'test_max_concurrent_live_semaphore_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_live_migrations'
op|'='
number|'123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'123'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
op|'.'
name|'_live_migration_semaphore'
op|'.'
name|'balance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_live_semaphore_unlimited
dedent|''
name|'def'
name|'test_max_concurrent_live_semaphore_unlimited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_live_migrations'
op|'='
number|'0'
op|')'
newline|'\n'
name|'compute'
op|'='
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'compute'
op|'.'
name|'_live_migration_semaphore'
op|'.'
name|'balance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute'
op|'.'
name|'_live_migration_semaphore'
op|','
nl|'\n'
name|'compute_utils'
op|'.'
name|'UnlimitedSemaphore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_max_concurrent_live_semaphore_negative
dedent|''
name|'def'
name|'test_max_concurrent_live_semaphore_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_concurrent_live_migrations'
op|'='
op|'-'
number|'2'
op|')'
newline|'\n'
name|'compute'
op|'='
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'compute'
op|'.'
name|'_live_migration_semaphore'
op|'.'
name|'balance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute'
op|'.'
name|'_live_migration_semaphore'
op|','
nl|'\n'
name|'compute_utils'
op|'.'
name|'UnlimitedSemaphore'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
