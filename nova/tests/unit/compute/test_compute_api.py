begin_unit
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for compute API."""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'import'
name|'iso8601'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'cells_api'
name|'as'
name|'compute_cells_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'rpcapi'
name|'as'
name|'compute_rpcapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_mode'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'conductor'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'quotas'
name|'as'
name|'quotas_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'policy'
name|'as'
name|'common_policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
name|'import'
name|'fake'
name|'as'
name|'fake_image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_flavor'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_migration'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_service'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'cinder'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_IMAGE_REF
name|'FAKE_IMAGE_REF'
op|'='
string|"'fake-image-ref'"
newline|'\n'
DECL|variable|NODENAME
name|'NODENAME'
op|'='
string|"'fakenode1'"
newline|'\n'
DECL|variable|SHELVED_IMAGE
name|'SHELVED_IMAGE'
op|'='
string|"'fake-shelved-image'"
newline|'\n'
DECL|variable|SHELVED_IMAGE_NOT_FOUND
name|'SHELVED_IMAGE_NOT_FOUND'
op|'='
string|"'fake-shelved-image-notfound'"
newline|'\n'
DECL|variable|SHELVED_IMAGE_NOT_AUTHORIZED
name|'SHELVED_IMAGE_NOT_AUTHORIZED'
op|'='
string|"'fake-shelved-image-not-authorized'"
newline|'\n'
DECL|variable|SHELVED_IMAGE_EXCEPTION
name|'SHELVED_IMAGE_EXCEPTION'
op|'='
string|"'fake-shelved-image-exception'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_ComputeAPIUnitTestMixIn
name|'class'
name|'_ComputeAPIUnitTestMixIn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vm_states
dedent|''
name|'def'
name|'_get_vm_states'
op|'('
name|'self'
op|','
name|'exclude_states'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm_state'
op|'='
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|','
name|'vm_states'
op|'.'
name|'RESCUED'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'DELETED'
op|','
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'exclude_states'
op|':'
newline|'\n'
indent|'            '
name|'exclude_states'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'vm_state'
op|'-'
name|'exclude_states'
newline|'\n'
nl|'\n'
DECL|member|_create_flavor
dedent|''
name|'def'
name|'_create_flavor'
op|'('
name|'self'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'m1.tiny'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'1'
op|','
number|'19'
op|','
number|'18'
op|','
nl|'\n'
number|'49'
op|','
number|'30'
op|','
number|'877329'
op|')'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'updates'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'objects'
op|'.'
name|'Flavor'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|')'
op|','
nl|'\n'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_obj
dedent|''
name|'def'
name|'_create_instance_obj'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|','
name|'flavor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance."""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'flavor'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'.'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'params'
op|'.'
name|'pop'
op|'('
string|"'metadata'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|'='
name|'params'
op|'.'
name|'pop'
op|'('
string|"'system_metadata'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'_context'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'cell_name'
op|'='
string|"'api!child'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'image_ref'
op|'='
name|'FAKE_IMAGE_REF'
newline|'\n'
name|'instance'
op|'.'
name|'reservation_id'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'instance'
op|'.'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'user_id'
newline|'\n'
name|'instance'
op|'.'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'project_id'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
string|"'fake_host'"
newline|'\n'
name|'instance'
op|'.'
name|'node'
op|'='
name|'NODENAME'
newline|'\n'
name|'instance'
op|'.'
name|'instance_type_id'
op|'='
name|'flavor'
op|'.'
name|'id'
newline|'\n'
name|'instance'
op|'.'
name|'ami_launch_index'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'memory_mb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'vcpus'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'root_gb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'ephemeral_gb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'architecture'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
name|'instance'
op|'.'
name|'os_type'
op|'='
string|"'Linux'"
newline|'\n'
name|'instance'
op|'.'
name|'locked'
op|'='
name|'False'
newline|'\n'
name|'instance'
op|'.'
name|'created_at'
op|'='
name|'now'
newline|'\n'
name|'instance'
op|'.'
name|'updated_at'
op|'='
name|'now'
newline|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'now'
newline|'\n'
name|'instance'
op|'.'
name|'disable_terminate'
op|'='
name|'False'
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
name|'instance'
op|'.'
name|'old_flavor'
op|'='
name|'instance'
op|'.'
name|'new_flavor'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'instance'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_create_quota_exceeded_messages
dedent|''
name|'def'
name|'test_create_quota_exceeded_messages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|'"image_href"'
newline|'\n'
name|'image_id'
op|'='
number|'0'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|'"_get_image"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|'"limit_check"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|'"reserve"'
op|')'
newline|'\n'
nl|'\n'
name|'quotas'
op|'='
op|'{'
string|"'instances'"
op|':'
number|'1'
op|','
string|"'cores'"
op|':'
number|'1'
op|','
string|"'ram'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'usages'
op|'='
op|'{'
name|'r'
op|':'
op|'{'
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'1'
op|'}'
name|'for'
name|'r'
name|'in'
nl|'\n'
op|'['
string|"'instances'"
op|','
string|"'cores'"
op|','
string|"'ram'"
op|']'
op|'}'
newline|'\n'
name|'quota_exception'
op|'='
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'quotas'
op|'='
name|'quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|','
name|'overs'
op|'='
op|'['
string|"'instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'_unused'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_href'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'image_id'
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'limit_check'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'metadata_items'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'reserve'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'='
number|'40'
op|','
nl|'\n'
name|'cores'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'expire'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'ram'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'quota_exception'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'min_count'
op|','
name|'message'
name|'in'
op|'['
op|'('
number|'20'
op|','
string|"'20-40'"
op|')'
op|','
op|'('
number|'40'
op|','
string|"'40'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_type'
op|','
nl|'\n'
string|'"image_href"'
op|','
name|'min_count'
op|'='
name|'min_count'
op|','
nl|'\n'
name|'max_count'
op|'='
number|'40'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'TooManyInstances'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'message'
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'req'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Exception not raised"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specified_port_and_multiple_instances_neutronv2
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_specified_port_and_multiple_instances_neutronv2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that if port is specified there is only one instance booting'
nl|'\n'
comment|"# (i.e max_count == 1) as we can't share the same port across multiple"
nl|'\n'
comment|'# instances.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'port'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'address'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'min_count'
op|'='
number|'1'
newline|'\n'
name|'max_count'
op|'='
number|'2'
newline|'\n'
name|'requested_networks'
op|'='
name|'objects'
op|'.'
name|'NetworkRequestList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'NetworkRequest'
op|'('
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'port_id'
op|'='
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MultiplePortsNotApplicable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'fake_flavor'"
op|','
string|"'image_id'"
op|','
nl|'\n'
name|'min_count'
op|'='
name|'min_count'
op|','
name|'max_count'
op|'='
name|'max_count'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_specified_ip_and_multiple_instances_helper
dedent|''
name|'def'
name|'_test_specified_ip_and_multiple_instances_helper'
op|'('
name|'self'
op|','
nl|'\n'
name|'requested_networks'
op|')'
op|':'
newline|'\n'
comment|'# Tests that if ip is specified there is only one instance booting'
nl|'\n'
comment|'# (i.e max_count == 1)'
nl|'\n'
indent|'        '
name|'min_count'
op|'='
number|'1'
newline|'\n'
name|'max_count'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidFixedIpAndMaxCountRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|'"fake_flavor"'
op|','
string|"'image_id'"
op|','
nl|'\n'
name|'min_count'
op|'='
name|'min_count'
op|','
name|'max_count'
op|'='
name|'max_count'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specified_ip_and_multiple_instances
dedent|''
name|'def'
name|'test_specified_ip_and_multiple_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'address'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'requested_networks'
op|'='
name|'objects'
op|'.'
name|'NetworkRequestList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'NetworkRequest'
op|'('
name|'network_id'
op|'='
name|'network'
op|','
nl|'\n'
name|'address'
op|'='
name|'address'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_specified_ip_and_multiple_instances_helper'
op|'('
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specified_ip_and_multiple_instances_neutronv2
dedent|''
name|'def'
name|'test_specified_ip_and_multiple_instances_neutronv2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'address'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'requested_networks'
op|'='
name|'objects'
op|'.'
name|'NetworkRequestList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'NetworkRequest'
op|'('
name|'network_id'
op|'='
name|'network'
op|','
nl|'\n'
name|'address'
op|'='
name|'address'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_specified_ip_and_multiple_instances_helper'
op|'('
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be suspended.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'suspend_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'SUSPEND'
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'suspend_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'SUSPENDING'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_suspend_fails
dedent|''
name|'def'
name|'_test_suspend_fails'
op|'('
name|'self'
op|','
name|'vm_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_fails_invalid_states
dedent|''
name|'def'
name|'test_suspend_fails_invalid_states'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_vm_states'
op|'='
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'invalid_vm_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_suspend_fails'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be resumed (if suspended).'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
nl|'\n'
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'resume_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'RESUME'
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'resume_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'RESUMING'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'START'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'start_instance'"
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'POWERING_ON'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_invalid_state
dedent|''
name|'def'
name|'test_start_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_no_host
dedent|''
name|'def'
name|'test_start_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'host'
op|'='
string|"''"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_stop
dedent|''
name|'def'
name|'_test_stop'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
name|'force'
op|'='
name|'False'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|"# Make sure 'progress' gets reset"
nl|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'task_state'
op|'='
name|'None'
op|','
name|'progress'
op|'='
number|'99'
op|','
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'STOP'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'stop_instance'"
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'do_cast'
op|'='
name|'True'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'force'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'force_stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'POWERING_OFF'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'instance'
op|'.'
name|'progress'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stop'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_stopped_instance_with_bypass
dedent|''
name|'def'
name|'test_stop_stopped_instance_with_bypass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stop'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_forced_shutdown
dedent|''
name|'def'
name|'test_stop_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stop'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_without_clean_shutdown
dedent|''
name|'def'
name|'test_stop_without_clean_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stop'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_forced_without_clean_shutdown
dedent|''
name|'def'
name|'test_stop_forced_without_clean_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_stop'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'force'
op|'='
name|'True'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_stop_invalid_state
dedent|''
name|'def'
name|'_test_stop_invalid_state'
op|'('
name|'self'
op|','
name|'vm_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_fails_invalid_states
dedent|''
name|'def'
name|'test_stop_fails_invalid_states'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_vm_states'
op|'='
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ERROR'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'invalid_vm_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_stop_invalid_state'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_a_stopped_inst
dedent|''
dedent|''
name|'def'
name|'test_stop_a_stopped_inst'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_no_host
dedent|''
name|'def'
name|'test_stop_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'host'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_shelve
dedent|''
name|'def'
name|'_test_shelve'
op|'('
name|'self'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'boot_from_volume'
op|'='
name|'False'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'task_state'
op|'='
name|'None'
op|','
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'display_name'
op|'='
string|"'fake-name'"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'boot_from_volume'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_create_image'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
string|"'fake-image-id'"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'shelve_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'shelve_offload_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'volume_backed_inst'
op|','
name|'create_image'
op|','
name|'instance_save'
op|','
nl|'\n'
name|'record_action_start'
op|','
name|'rpcapi_shelve_instance'
op|','
nl|'\n'
name|'rpcapi_shelve_offload_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'shelve'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
comment|'# assert field values set on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'SHELVING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'volume_backed_inst'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'record_action_start'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'SHELVE'
op|')'
newline|'\n'
name|'if'
name|'boot_from_volume'
op|':'
newline|'\n'
indent|'                '
name|'rpcapi_shelve_offload_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'rpcapi_shelve_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
name|'image_id'
op|'='
string|"'fake-image-id'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_shelve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_stopped
dedent|''
name|'def'
name|'test_shelve_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_paused
dedent|''
name|'def'
name|'test_shelve_paused'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_suspended
dedent|''
name|'def'
name|'test_shelve_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_boot_from_volume
dedent|''
name|'def'
name|'test_shelve_boot_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'boot_from_volume'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_forced_shutdown
dedent|''
name|'def'
name|'test_shelve_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_boot_from_volume_forced_shutdown
dedent|''
name|'def'
name|'test_shelve_boot_from_volume_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve'
op|'('
name|'boot_from_volume'
op|'='
name|'True'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_shelve_invalid_state
dedent|''
name|'def'
name|'_test_shelve_invalid_state'
op|'('
name|'self'
op|','
name|'vm_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'shelve'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_fails_invalid_states
dedent|''
name|'def'
name|'test_shelve_fails_invalid_states'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_vm_states'
op|'='
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'invalid_vm_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_shelve_invalid_state'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_shelve_offload
dedent|''
dedent|''
name|'def'
name|'_test_shelve_offload'
op|'('
name|'self'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'task_state'
op|'='
name|'None'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'shelve_offload_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'instance_save'
op|','
name|'rpcapi_shelve_offload_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'shelve_offload'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
comment|'# assert field values set on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'SHELVING_OFFLOADING'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'rpcapi_shelve_offload_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_offload
dedent|''
dedent|''
name|'def'
name|'test_shelve_offload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve_offload'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_offload_forced_shutdown
dedent|''
name|'def'
name|'test_shelve_offload_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_shelve_offload'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_shelve_offload_invalid_state
dedent|''
name|'def'
name|'_test_shelve_offload_invalid_state'
op|'('
name|'self'
op|','
name|'vm_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'shelve_offload'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shelve_offload_fails_invalid_states
dedent|''
name|'def'
name|'test_shelve_offload_fails_invalid_states'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_vm_states'
op|'='
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'SHELVED'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'invalid_vm_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_shelve_offload_invalid_state'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_reboot_type
dedent|''
dedent|''
name|'def'
name|'_test_reboot_type'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
name|'reboot_type'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be soft rebooted.'
nl|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'inst'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
name|'if'
name|'reboot_type'
op|'=='
string|"'HARD'"
op|':'
newline|'\n'
indent|'            '
name|'expected_task_state'
op|'.'
name|'extend'
op|'('
op|'['
name|'task_states'
op|'.'
name|'REBOOTING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING_HARD'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESUMING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'UNPAUSING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'SUSPENDING'
op|']'
op|')'
newline|'\n'
dedent|''
name|'inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'expected_task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'instance_actions'
op|'.'
name|'REBOOT'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'reboot_instance'"
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'reboot_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'inst'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'reboot_type'
op|'='
name|'reboot_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_reboot_type_fails
dedent|''
name|'def'
name|'_test_reboot_type_fails'
op|'('
name|'self'
op|','
name|'reboot_type'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_active
dedent|''
name|'def'
name|'test_reboot_hard_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_error
dedent|''
name|'def'
name|'test_reboot_hard_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_rebooting
dedent|''
name|'def'
name|'test_reboot_hard_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_reboot_started
dedent|''
name|'def'
name|'test_reboot_hard_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_reboot_pending
dedent|''
name|'def'
name|'test_reboot_hard_reboot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_rescued
dedent|''
name|'def'
name|'test_reboot_hard_rescued'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'HARD'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_resuming
dedent|''
name|'def'
name|'test_reboot_hard_resuming'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'HARD'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESUMING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_pausing
dedent|''
name|'def'
name|'test_reboot_hard_pausing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'HARD'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'PAUSING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_unpausing
dedent|''
name|'def'
name|'test_reboot_hard_unpausing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'HARD'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UNPAUSING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_suspending
dedent|''
name|'def'
name|'test_reboot_hard_suspending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'HARD'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SUSPENDING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_error_not_launched
dedent|''
name|'def'
name|'test_reboot_hard_error_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'HARD'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft
dedent|''
name|'def'
name|'test_reboot_soft'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_error
dedent|''
name|'def'
name|'test_reboot_soft_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_paused
dedent|''
name|'def'
name|'test_reboot_soft_paused'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_stopped
dedent|''
name|'def'
name|'test_reboot_soft_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_suspended
dedent|''
name|'def'
name|'test_reboot_soft_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_rebooting
dedent|''
name|'def'
name|'test_reboot_soft_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_rebooting_hard
dedent|''
name|'def'
name|'test_reboot_soft_rebooting_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING_HARD'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_reboot_started
dedent|''
name|'def'
name|'test_reboot_soft_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_reboot_pending
dedent|''
name|'def'
name|'test_reboot_soft_reboot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_rescued
dedent|''
name|'def'
name|'test_reboot_soft_rescued'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_error_not_launched
dedent|''
name|'def'
name|'test_reboot_soft_error_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_resuming
dedent|''
name|'def'
name|'test_reboot_soft_resuming'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESUMING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_pausing
dedent|''
name|'def'
name|'test_reboot_soft_pausing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'PAUSING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_unpausing
dedent|''
name|'def'
name|'test_reboot_soft_unpausing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UNPAUSING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_suspending
dedent|''
name|'def'
name|'test_reboot_soft_suspending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SUSPENDING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_delete_resizing_part
dedent|''
name|'def'
name|'_test_delete_resizing_part'
op|'('
name|'self'
op|','
name|'inst'
op|','
name|'deltas'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_db_migration'
op|'='
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_db_migration'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'instance_type_id'
op|'='
name|'migration'
op|'.'
name|'new_instance_type_id'
newline|'\n'
name|'old_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'vcpus'
op|'='
number|'1'
op|','
name|'memory_mb'
op|'='
number|'512'
op|')'
newline|'\n'
name|'deltas'
op|'['
string|"'cores'"
op|']'
op|'='
op|'-'
name|'old_flavor'
op|'.'
name|'vcpus'
newline|'\n'
name|'deltas'
op|'['
string|"'ram'"
op|']'
op|'='
op|'-'
name|'old_flavor'
op|'.'
name|'memory_mb'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
string|"'get_by_instance_and_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'get_inst_attrs_from_migration'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'get_by_instance_and_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
string|"'post-migrating'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migration'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'get_inst_attrs_from_migration'
op|'('
nl|'\n'
name|'migration'
op|','
name|'inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'old_flavor'
op|'.'
name|'vcpus'
op|','
nl|'\n'
name|'old_flavor'
op|'.'
name|'memory_mb'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_delete_resized_part
dedent|''
name|'def'
name|'_test_delete_resized_part'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
string|"'get_by_instance_and_status'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'get_by_instance_and_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
string|"'finished'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migration'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'downsize_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'deltas'"
op|')'
newline|'\n'
name|'fake_quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
string|"'rsvs'"
op|']'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'deltas'"
op|','
nl|'\n'
name|'inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'instance_actions'
op|'.'
name|'CONFIRM_RESIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'confirm_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'migration'
op|','
nl|'\n'
name|'migration'
op|'['
string|"'source_compute'"
op|']'
op|','
name|'fake_quotas'
op|'.'
name|'reservations'
op|','
name|'cast'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_delete_shelved_part
dedent|''
name|'def'
name|'_test_delete_shelved_part'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_api'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_id'
op|'='
name|'inst'
op|'.'
name|'system_metadata'
op|'.'
name|'get'
op|'('
string|"'shelved_image_id'"
op|')'
newline|'\n'
name|'if'
name|'snapshot_id'
op|'=='
name|'SHELVED_IMAGE'
op|':'
newline|'\n'
indent|'            '
name|'image_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_id'
op|'=='
name|'SHELVED_IMAGE_NOT_FOUND'
op|':'
newline|'\n'
indent|'            '
name|'image_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'snapshot_id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_id'
op|'=='
name|'SHELVED_IMAGE_NOT_AUTHORIZED'
op|':'
newline|'\n'
indent|'            '
name|'image_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotAuthorized'
op|'('
name|'image_id'
op|'='
name|'snapshot_id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_id'
op|'=='
name|'SHELVED_IMAGE_EXCEPTION'
op|':'
newline|'\n'
indent|'            '
name|'image_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"Unexpected error"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_downed_host_part
dedent|''
dedent|''
name|'def'
name|'_test_downed_host_part'
op|'('
name|'self'
op|','
name|'inst'
op|','
name|'updates'
op|','
name|'delete_time'
op|','
name|'delete_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
string|"'%s.start'"
op|'%'
name|'delete_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|'.'
name|'deallocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'state'
op|'='
op|'('
string|"'soft'"
name|'in'
name|'delete_type'
name|'and'
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
name|'or'
nl|'\n'
name|'vm_states'
op|'.'
name|'DELETED'
op|')'
newline|'\n'
name|'updates'
op|'.'
name|'update'
op|'('
op|'{'
string|"'vm_state'"
op|':'
name|'state'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'terminated_at'"
op|':'
name|'delete_time'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'updates'
op|'.'
name|'update'
op|'('
op|'{'
string|"'deleted_at'"
op|':'
name|'delete_time'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
name|'updates'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'constraint'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
string|"'%s.end'"
op|'%'
name|'delete_type'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'inst'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_delete
dedent|''
name|'def'
name|'_test_delete'
op|'('
name|'self'
op|','
name|'delete_type'
op|','
op|'**'
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reservations'
op|'='
op|'['
string|"'fake-resv'"
op|']'
newline|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'attrs'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_context'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'deltas'
op|'='
op|'{'
string|"'instances'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'cores'"
op|':'
op|'-'
name|'inst'
op|'.'
name|'vcpus'
op|','
nl|'\n'
string|"'ram'"
op|':'
op|'-'
name|'inst'
op|'.'
name|'memory_mb'
op|'}'
newline|'\n'
name|'delete_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'9'
op|','
number|'30'
op|','
nl|'\n'
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'delete_time'
op|')'
newline|'\n'
name|'task_state'
op|'='
op|'('
name|'delete_type'
op|'=='
string|"'soft_delete'"
name|'and'
nl|'\n'
name|'task_states'
op|'.'
name|'SOFT_DELETING'
name|'or'
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
name|'updates'
op|'='
op|'{'
string|"'progress'"
op|':'
number|'0'
op|','
string|"'task_state'"
op|':'
name|'task_state'
op|'}'
newline|'\n'
name|'if'
name|'delete_type'
op|'=='
string|"'soft_delete'"
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|'['
string|"'deleted_at'"
op|']'
op|'='
name|'delete_time'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'reserve'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'servicegroup_api'
op|','
nl|'\n'
string|"'service_is_up'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'downsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'deallocate_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_system_metadata_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'notify_about_instance_usage'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'commit'"
op|')'
newline|'\n'
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'confirm_resize'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
op|'('
name|'inst'
op|'.'
name|'vm_state'
name|'in'
nl|'\n'
op|'('
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_delete_shelved_part'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'terminate_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'soft_delete_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'if'
name|'inst'
op|'.'
name|'task_state'
op|'=='
name|'task_states'
op|'.'
name|'RESIZE_FINISH'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_delete_resizing_part'
op|'('
name|'inst'
op|','
name|'deltas'
op|')'
newline|'\n'
dedent|''
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'reserve'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'project_id'
op|'='
name|'inst'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'inst'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'expire'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
op|'**'
name|'deltas'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(comstud): This is getting messy.  But what we are wanting'
nl|'\n'
comment|'# to test is:'
nl|'\n'
comment|"# If cells is enabled and we're the API cell:"
nl|'\n'
comment|'#   * Cast to cells_rpcapi.<method> with reservations=None'
nl|'\n'
comment|'#   * Commit reservations'
nl|'\n'
comment|'# Otherwise:'
nl|'\n'
comment|'#   * Check for downed host'
nl|'\n'
comment|'#   * If downed host:'
nl|'\n'
comment|'#     * Clean up instance, destroying it, sending notifications.'
nl|'\n'
comment|'#       (Tested in _test_downed_host_part())'
nl|'\n'
comment|'#     * Commit reservations'
nl|'\n'
comment|'#   * If not downed host:'
nl|'\n'
comment|'#     * Record the action start.'
nl|'\n'
comment|'#     * Cast to compute_rpcapi.<method> with the reservations'
nl|'\n'
nl|'\n'
name|'cast'
op|'='
name|'True'
newline|'\n'
name|'commit_quotas'
op|'='
name|'True'
newline|'\n'
name|'soft_delete'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'!='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'inst'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'RESIZED'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_delete_resized_part'
op|'('
name|'inst'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'inst'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|':'
newline|'\n'
indent|'                '
name|'soft_delete'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'inst'
op|'.'
name|'vm_state'
op|'!='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'host'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'test_service'
op|'.'
name|'fake_service'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'servicegroup_api'
op|'.'
name|'service_is_up'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Service'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'inst'
op|'.'
name|'host'
op|'!='
string|"'down-host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'inst'
op|'.'
name|'host'
op|'=='
string|"'down-host'"
name|'or'
nl|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_downed_host_part'
op|'('
name|'inst'
op|','
name|'updates'
op|','
name|'delete_time'
op|','
nl|'\n'
name|'delete_type'
op|')'
newline|'\n'
name|'cast'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Happens on the manager side'
nl|'\n'
indent|'                '
name|'commit_quotas'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'cast'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'!='
string|"'api'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'instance_actions'
op|'.'
name|'DELETE'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'commit_quotas'
name|'or'
name|'soft_delete'
op|':'
newline|'\n'
indent|'                '
name|'cast_reservations'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'cast_reservations'
op|'='
name|'reservations'
newline|'\n'
dedent|''
name|'if'
name|'delete_type'
op|'=='
string|"'soft_delete'"
op|':'
newline|'\n'
indent|'                '
name|'rpcapi'
op|'.'
name|'soft_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'reservations'
op|'='
name|'cast_reservations'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'delete_type'
name|'in'
op|'['
string|"'delete'"
op|','
string|"'force_delete'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'rpcapi'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'reservations'
op|'='
name|'cast_reservations'
op|','
nl|'\n'
name|'delete_type'
op|'='
name|'delete_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'commit_quotas'
op|':'
newline|'\n'
comment|"# Local delete or when we're testing API cell."
nl|'\n'
indent|'            '
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'reservations'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'inst'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'inst'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
name|'delete_type'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'updates'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
name|'k'
op|']'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_if_not_launched
dedent|''
name|'def'
name|'test_delete_if_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_in_resizing
dedent|''
name|'def'
name|'test_delete_in_resizing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_FINISH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_in_resized
dedent|''
name|'def'
name|'test_delete_in_resized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_shelved
dedent|''
name|'def'
name|'test_delete_shelved'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_shelved_offloaded
dedent|''
name|'def'
name|'test_delete_shelved_offloaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_shelved_image_not_found
dedent|''
name|'def'
name|'test_delete_shelved_image_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE_NOT_FOUND'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_shelved_image_not_authorized
dedent|''
name|'def'
name|'test_delete_shelved_image_not_authorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE_NOT_AUTHORIZED'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_shelved_exception
dedent|''
name|'def'
name|'test_delete_shelved_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE_EXCEPTION'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_with_down_host
dedent|''
name|'def'
name|'test_delete_with_down_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'delete'"
op|','
name|'host'
op|'='
string|"'down-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_soft_with_down_host
dedent|''
name|'def'
name|'test_delete_soft_with_down_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'soft_delete'"
op|','
name|'host'
op|'='
string|"'down-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_soft
dedent|''
name|'def'
name|'test_delete_soft'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_forced
dedent|''
name|'def'
name|'test_delete_forced'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_sys_meta'
op|'='
op|'{'
string|"'shelved_image_id'"
op|':'
name|'SHELVED_IMAGE'
op|'}'
newline|'\n'
name|'for'
name|'vm_state'
name|'in'
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'vm_state'
name|'in'
op|'('
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'force_delete'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'fake_sys_meta'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_test_delete'
op|'('
string|"'force_delete'"
op|','
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_fast_if_host_not_set
dedent|''
dedent|''
name|'def'
name|'test_delete_fast_if_host_not_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'host'
op|'='
string|"''"
newline|'\n'
name|'quotas'
op|'='
name|'quotas_obj'
op|'.'
name|'Quotas'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'updates'
op|'='
op|'{'
string|"'progress'"
op|':'
number|'0'
op|','
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'DELETING'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'constraint'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_create_reservations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'notify_about_instance_usage'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'terminate_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_create_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
name|'inst'
op|'.'
name|'task_state'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'project_id'
op|','
name|'inst'
op|'.'
name|'user_id'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'quotas'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'.'
name|'terminate_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|')'
op|','
nl|'\n'
name|'reservations'
op|'='
name|'None'
op|','
name|'delete_type'
op|'='
string|"'delete'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.start'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'constraint'
op|'('
name|'host'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'constraint'"
op|')'
newline|'\n'
name|'delete_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'9'
op|','
number|'30'
op|','
nl|'\n'
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'updates'
op|'['
string|"'deleted_at'"
op|']'
op|'='
name|'delete_time'
newline|'\n'
name|'updates'
op|'['
string|"'deleted'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
name|'updates'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'constraint'
op|'='
string|"'constraint'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_inst'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.end'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'inst'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'deallocate_for_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'updates'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
name|'k'
op|']'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_do_delete
dedent|''
dedent|''
dedent|''
name|'def'
name|'_fake_do_delete'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'rservations'
op|'='
name|'None'
op|','
name|'local'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_local_delete_with_deleted_volume
dedent|''
name|'def'
name|'test_local_delete_with_deleted_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdms'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'42'
op|','
string|"'volume_id'"
op|':'
string|"'volume_id'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_context'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'deallocate_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_system_metadata_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'notify_about_instance_usage'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'terminate_connection'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|','
string|"'destroy'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'!='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|'.'
name|'deallocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|'.'
name|'terminate_connection'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
string|"'volume_id'"
op|')'
op|')'
newline|'\n'
name|'bdms'
op|'['
number|'0'
op|']'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.end'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'inst'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_local_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
name|'bdms'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_do_delete'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_local_delete_without_info_cache
dedent|''
name|'def'
name|'test_local_delete_without_info_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'inst'
op|','
string|"'destroy'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'deallocate_for_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_system_metadata_get'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'notify_about_instance_usage'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'inst_destroy'
op|','
name|'context_elevated'
op|','
name|'net_api_deallocate_for_instance'
op|','
nl|'\n'
name|'db_instance_system_metadata_get'
op|','
name|'notify_about_instance_usage'
nl|'\n'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'!='
string|"'api'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|'.'
name|'deallocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'notify_about_instance_usage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'notifier'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
string|"'delete.end'"
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'inst'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'info_cache'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_local_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
op|'['
op|']'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_do_delete'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_disabled
dedent|''
dedent|''
name|'def'
name|'test_delete_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'disable_terminate'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_soft_rollback
dedent|''
name|'def'
name|'test_delete_soft_rollback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
nl|'\n'
name|'delete_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'delete_time'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'soft_delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_confirm_resize
dedent|''
name|'def'
name|'_test_confirm_resize'
op|'('
name|'self'
op|','
name|'mig_ref_passed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'fake_mig'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
string|"'get_by_instance_and_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'downsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_mig'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'confirm_resize'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'mig_ref_passed'
op|':'
newline|'\n'
indent|'            '
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'get_by_instance_and_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'finished'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fake_mig'
op|')'
newline|'\n'
dedent|''
name|'compute_utils'
op|'.'
name|'downsize_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'deltas'"
op|')'
newline|'\n'
nl|'\n'
name|'resvs'
op|'='
op|'['
string|"'resvs'"
op|']'
newline|'\n'
name|'fake_quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'resvs'
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'deltas'"
op|','
nl|'\n'
name|'fake_inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_check_mig
name|'def'
name|'_check_mig'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'confirming'"
op|','
name|'fake_mig'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fake_mig'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'_check_mig'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|':'
newline|'\n'
indent|'            '
name|'fake_quotas'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
string|"'confirmResize'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'confirm_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
name|'fake_mig'
op|','
string|"'compute-source'"
op|','
nl|'\n'
op|'['
op|']'
name|'if'
name|'self'
op|'.'
name|'cell_type'
name|'else'
name|'fake_quotas'
op|'.'
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'mig_ref_passed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
name|'migration'
op|'='
name|'fake_mig'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'confirm_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize
dedent|''
dedent|''
name|'def'
name|'test_confirm_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_confirm_resize'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize_with_migration_ref
dedent|''
name|'def'
name|'test_confirm_resize_with_migration_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_confirm_resize'
op|'('
name|'mig_ref_passed'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_revert_resize
dedent|''
name|'def'
name|'_test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'fake_mig'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
string|"'get_by_instance_and_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'reverse_upsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_mig'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'revert_resize'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'get_by_instance_and_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'finished'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fake_mig'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'reverse_upsize_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_mig'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'deltas'"
op|')'
newline|'\n'
nl|'\n'
name|'resvs'
op|'='
op|'['
string|"'resvs'"
op|']'
newline|'\n'
name|'fake_quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'resvs'
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'deltas'"
op|','
nl|'\n'
name|'fake_inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_check_state
name|'def'
name|'_check_state'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|','
nl|'\n'
name|'fake_inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fake_inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
nl|'\n'
name|'_check_state'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_check_mig
name|'def'
name|'_check_mig'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'reverting'"
op|','
name|'fake_mig'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fake_mig'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'_check_mig'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|':'
newline|'\n'
indent|'            '
name|'fake_quotas'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
string|"'revertResize'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'revert_resize'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
name|'fake_mig'
op|','
string|"'compute-dest'"
op|','
nl|'\n'
op|'['
op|']'
name|'if'
name|'self'
op|'.'
name|'cell_type'
name|'else'
name|'fake_quotas'
op|'.'
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'revert_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize
dedent|''
name|'def'
name|'test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_revert_resize'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_concurrent_fail
dedent|''
name|'def'
name|'test_revert_resize_concurrent_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'fake_mig'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
op|','
nl|'\n'
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
nl|'\n'
string|"'get_by_instance_and_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
nl|'\n'
string|"'reverse_upsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'Migration'
op|'.'
name|'get_by_instance_and_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'finished'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_mig'
op|')'
newline|'\n'
nl|'\n'
name|'delta'
op|'='
op|'['
string|"'delta'"
op|']'
newline|'\n'
name|'compute_utils'
op|'.'
name|'reverse_upsize_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_mig'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'delta'
op|')'
newline|'\n'
name|'resvs'
op|'='
op|'['
string|"'resvs'"
op|']'
newline|'\n'
name|'fake_quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'resvs'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'delta'
op|','
name|'fake_inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
name|'exc'
op|'='
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'fake_inst'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'actual'
op|'='
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|'}'
op|','
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'task_state'"
op|':'
op|'['
name|'None'
op|']'
op|'}'
op|')'
newline|'\n'
name|'fake_inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
name|'fake_quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'revert_resize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_resize
dedent|''
name|'def'
name|'_test_resize'
op|'('
name|'self'
op|','
name|'flavor_id_passed'
op|'='
name|'True'
op|','
nl|'\n'
name|'same_host'
op|'='
name|'False'
op|','
name|'allow_same_host'
op|'='
name|'False'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_kwargs'
op|'='
name|'None'
op|','
nl|'\n'
name|'same_flavor'
op|'='
name|'False'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'extra_kwargs'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'extra_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_resize_to_same_host'
op|'='
name|'allow_same_host'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'project_id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
comment|'# To test instance w/ different project id than context (admin)'
nl|'\n'
indent|'            '
name|'params'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'project_id'
newline|'\n'
dedent|''
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'upsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'resize_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'current_flavor'
op|'='
name|'fake_inst'
op|'.'
name|'get_flavor'
op|'('
op|')'
newline|'\n'
name|'if'
name|'flavor_id_passed'
op|':'
newline|'\n'
indent|'            '
name|'new_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'200'
op|','
name|'flavorid'
op|'='
string|"'new-flavor-id'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'new_flavor'"
op|','
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'same_flavor'
op|':'
newline|'\n'
indent|'                '
name|'new_flavor'
op|'.'
name|'id'
op|'='
name|'current_flavor'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
nl|'\n'
string|"'new-flavor-id'"
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'new_flavor'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'new_flavor'
op|'='
name|'current_flavor'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'compute'"
name|'or'
nl|'\n'
name|'not'
op|'('
name|'flavor_id_passed'
name|'and'
name|'same_flavor'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resvs'
op|'='
op|'['
string|"'resvs'"
op|']'
newline|'\n'
name|'project_id'
op|','
name|'user_id'
op|'='
name|'quotas_obj'
op|'.'
name|'ids_from_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|')'
newline|'\n'
name|'fake_quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'resvs'
op|')'
newline|'\n'
name|'if'
name|'flavor_id_passed'
op|':'
newline|'\n'
indent|'                '
name|'compute_utils'
op|'.'
name|'upsize_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'deltas'"
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'deltas'"
op|','
name|'fake_inst'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_check_state
dedent|''
name|'def'
name|'_check_state'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|','
nl|'\n'
name|'fake_inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_inst'
op|'.'
name|'progress'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'extra_kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'getattr'
op|'('
name|'fake_inst'
op|','
name|'key'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
nl|'\n'
name|'_check_state'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'allow_same_host'
op|':'
newline|'\n'
indent|'                '
name|'filter_properties'
op|'='
op|'{'
string|"'ignore_hosts'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'filter_properties'
op|'='
op|'{'
string|"'ignore_hosts'"
op|':'
op|'['
name|'fake_inst'
op|'['
string|"'host'"
op|']'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'flavor_id_passed'
op|':'
newline|'\n'
indent|'                '
name|'expected_reservations'
op|'='
name|'fake_quotas'
op|'.'
name|'reservations'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'expected_reservations'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'                '
name|'fake_quotas'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
name|'expected_reservations'
op|'='
op|'['
op|']'
newline|'\n'
name|'mig'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_migration
name|'def'
name|'_get_migration'
op|'('
name|'context'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'mig'
newline|'\n'
nl|'\n'
DECL|function|_check_mig
dedent|''
name|'def'
name|'_check_mig'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_inst'
op|'.'
name|'uuid'
op|','
name|'mig'
op|'.'
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'current_flavor'
op|'.'
name|'id'
op|','
nl|'\n'
name|'mig'
op|'.'
name|'old_instance_type_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'new_flavor'
op|'.'
name|'id'
op|','
nl|'\n'
name|'mig'
op|'.'
name|'new_instance_type_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'finished'"
op|','
name|'mig'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'if'
name|'new_flavor'
op|'.'
name|'id'
op|'!='
name|'current_flavor'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'resize'"
op|','
name|'mig'
op|'.'
name|'migration_type'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'migration'"
op|','
name|'mig'
op|'.'
name|'migration_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|','
string|"'Migration'"
op|','
name|'_get_migration'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'mig'
op|','
string|"'create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mig'
op|'.'
name|'create'
op|'('
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'_check_mig'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'flavor_id_passed'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
string|"'resize'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
string|"'migrate'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'scheduler_hint'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
name|'filter_properties'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|'.'
name|'resize_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
name|'extra_kwargs'
op|','
nl|'\n'
name|'scheduler_hint'
op|'='
name|'scheduler_hint'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|','
nl|'\n'
name|'reservations'
op|'='
name|'expected_reservations'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'flavor_id_passed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
name|'flavor_id'
op|'='
string|"'new-flavor-id'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|','
nl|'\n'
op|'**'
name|'extra_kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|','
nl|'\n'
op|'**'
name|'extra_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_migrate
dedent|''
dedent|''
name|'def'
name|'_test_migrate'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
op|'*'
name|'args'
op|','
name|'flavor_id_passed'
op|'='
name|'False'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize
dedent|''
name|'def'
name|'test_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_with_kwargs
dedent|''
name|'def'
name|'test_resize_with_kwargs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'extra_kwargs'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_host_and_allowed
dedent|''
name|'def'
name|'test_resize_same_host_and_allowed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'same_host'
op|'='
name|'True'
op|','
name|'allow_same_host'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_host_and_not_allowed
dedent|''
name|'def'
name|'test_resize_same_host_and_not_allowed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'same_host'
op|'='
name|'True'
op|','
name|'allow_same_host'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_different_project_id
dedent|''
name|'def'
name|'test_resize_different_project_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'project_id'
op|'='
string|"'different'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_forced_shutdown
dedent|''
name|'def'
name|'test_resize_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate
dedent|''
name|'def'
name|'test_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_with_kwargs
dedent|''
name|'def'
name|'test_migrate_with_kwargs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate'
op|'('
name|'extra_kwargs'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_same_host_and_allowed
dedent|''
name|'def'
name|'test_migrate_same_host_and_allowed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate'
op|'('
name|'same_host'
op|'='
name|'True'
op|','
name|'allow_same_host'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_same_host_and_not_allowed
dedent|''
name|'def'
name|'test_migrate_same_host_and_not_allowed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate'
op|'('
name|'same_host'
op|'='
name|'True'
op|','
name|'allow_same_host'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_different_project_id
dedent|''
name|'def'
name|'test_migrate_different_project_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate'
op|'('
name|'project_id'
op|'='
string|"'different'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_invalid_flavor_fails
dedent|''
name|'def'
name|'test_resize_invalid_flavor_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
comment|'# Should never reach these.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'commit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'resize_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'exc'
op|'='
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
nl|'\n'
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
string|"'flavor-id'"
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_disabled_flavor_fails
dedent|''
dedent|''
name|'def'
name|'test_resize_disabled_flavor_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
comment|'# Should never reach these.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'commit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'resize_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'fake_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'200'
op|','
name|'flavorid'
op|'='
string|"'flavor-id'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'foo'"
op|','
name|'disabled'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
nl|'\n'
string|"'flavor-id'"
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_flavor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
DECL|member|test_resize_to_zero_disk_flavor_fails
name|'def'
name|'test_resize_to_zero_disk_flavor_fails'
op|'('
name|'self'
op|','
name|'get_flavor_by_flavor_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'fake_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'200'
op|','
name|'flavorid'
op|'='
string|"'flavor-id'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'foo'"
op|','
name|'root_gb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'get_flavor_by_flavor_id'
op|'.'
name|'return_value'
op|'='
name|'fake_flavor'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CannotResizeDisk'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.api.API._record_action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.api.API._resize_cells_support'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.conductor.conductor_api.ComputeTaskAPI.resize_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
DECL|member|test_resize_to_zero_disk_flavor_volume_backed
name|'def'
name|'test_resize_to_zero_disk_flavor_volume_backed'
op|'('
name|'self'
op|','
nl|'\n'
name|'get_flavor_by_flavor_id'
op|','
nl|'\n'
name|'resize_instance_mock'
op|','
nl|'\n'
name|'cells_support_mock'
op|','
nl|'\n'
name|'record_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'image_ref'
op|'='
string|"''"
op|')'
newline|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'fake_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'200'
op|','
name|'flavorid'
op|'='
string|"'flavor-id'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'foo'"
op|','
name|'root_gb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'get_flavor_by_flavor_id'
op|'.'
name|'return_value'
op|'='
name|'fake_flavor'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'mock_save'
op|','
name|'mock_volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
name|'mock_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_quota_exceeds_fails
dedent|''
name|'def'
name|'test_resize_quota_exceeds_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'upsize_quota_delta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
comment|'# Should never reach these.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'commit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'resize_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'fake_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'200'
op|','
name|'flavorid'
op|'='
string|"'flavor-id'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'foo'"
op|','
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
nl|'\n'
string|"'flavor-id'"
op|','
name|'read_deleted'
op|'='
string|"'no'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_flavor'
op|')'
newline|'\n'
name|'deltas'
op|'='
name|'dict'
op|'('
name|'resource'
op|'='
number|'0'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'upsize_quota_delta'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'deltas'
op|')'
newline|'\n'
name|'usage'
op|'='
name|'dict'
op|'('
name|'in_use'
op|'='
number|'0'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
newline|'\n'
name|'quotas'
op|'='
op|'{'
string|"'resource'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'usages'
op|'='
op|'{'
string|"'resource'"
op|':'
name|'usage'
op|'}'
newline|'\n'
name|'overs'
op|'='
op|'['
string|"'resource'"
op|']'
newline|'\n'
name|'over_quota_args'
op|'='
name|'dict'
op|'('
name|'quotas'
op|'='
name|'quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|','
nl|'\n'
name|'overs'
op|'='
name|'overs'
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'reserve_quota_delta'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'deltas'
op|','
nl|'\n'
name|'fake_inst'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
op|'**'
name|'over_quota_args'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_inst'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'TooManyInstances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
name|'flavor_id'
op|'='
string|"'flavor-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_save'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_instance_quota_exceeds_with_multiple_resources
dedent|''
dedent|''
name|'def'
name|'test_check_instance_quota_exceeds_with_multiple_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quotas'
op|'='
op|'{'
string|"'cores'"
op|':'
number|'1'
op|','
string|"'instances'"
op|':'
number|'1'
op|','
string|"'ram'"
op|':'
number|'512'
op|'}'
newline|'\n'
name|'usages'
op|'='
op|'{'
string|"'cores'"
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'1'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
string|"'instances'"
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'1'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
string|"'ram'"
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'512'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
op|'}'
newline|'\n'
name|'overs'
op|'='
op|'['
string|"'cores'"
op|','
string|"'instances'"
op|','
string|"'ram'"
op|']'
newline|'\n'
name|'over_quota_args'
op|'='
name|'dict'
op|'('
name|'quotas'
op|'='
name|'quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|','
nl|'\n'
name|'overs'
op|'='
name|'overs'
op|')'
newline|'\n'
name|'e'
op|'='
name|'exception'
op|'.'
name|'OverQuota'
op|'('
op|'**'
name|'over_quota_args'
op|')'
newline|'\n'
name|'fake_flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
name|'instance_num'
op|'='
number|'1'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Quotas'
op|','
string|"'reserve'"
op|','
name|'side_effect'
op|'='
name|'e'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_check_num_instances_quota'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_flavor'
op|','
nl|'\n'
name|'instance_num'
op|','
nl|'\n'
name|'instance_num'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'TooManyInstances'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'cores, instances, ram'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'overs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1, 1, 512'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'req'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1, 1, 512'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1, 1, 512'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'allowed'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Exception not raised"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'flavors'
op|','
string|"'get_flavor_by_flavor_id'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Quotas'
op|','
string|"'reserve'"
op|')'
newline|'\n'
DECL|member|test_resize_instance_quota_exceeds_with_multiple_resources
name|'def'
name|'test_resize_instance_quota_exceeds_with_multiple_resources'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_reserve'
op|','
name|'mock_get_flavor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quotas'
op|'='
op|'{'
string|"'cores'"
op|':'
number|'1'
op|','
string|"'ram'"
op|':'
number|'512'
op|'}'
newline|'\n'
name|'usages'
op|'='
op|'{'
string|"'cores'"
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'1'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
string|"'ram'"
op|':'
name|'dict'
op|'('
name|'in_use'
op|'='
number|'512'
op|','
name|'reserved'
op|'='
number|'0'
op|')'
op|'}'
newline|'\n'
name|'overs'
op|'='
op|'['
string|"'cores'"
op|','
string|"'ram'"
op|']'
newline|'\n'
name|'over_quota_args'
op|'='
name|'dict'
op|'('
name|'quotas'
op|'='
name|'quotas'
op|','
nl|'\n'
name|'usages'
op|'='
name|'usages'
op|','
nl|'\n'
name|'overs'
op|'='
name|'overs'
op|')'
newline|'\n'
nl|'\n'
name|'mock_reserve'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'OverQuota'
op|'('
op|'**'
name|'over_quota_args'
op|')'
newline|'\n'
name|'mock_get_flavor'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'id'
op|'='
number|'333'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'3'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'1536'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake_flavor_id'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'TooManyInstances'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'cores, ram'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'overs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'2, 1024'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'req'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1, 512'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1, 512'"
op|','
name|'e'
op|'.'
name|'kwargs'
op|'['
string|"'allowed'"
op|']'
op|')'
newline|'\n'
name|'mock_get_flavor'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'fake_flavor_id'"
op|','
nl|'\n'
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Exception not raised"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be paused.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'pause_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'PAUSE'
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'pause_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'pause'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'PAUSING'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_pause_fails
dedent|''
name|'def'
name|'_test_pause_fails'
op|'('
name|'self'
op|','
name|'vm_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'pause'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause_fails_invalid_states
dedent|''
name|'def'
name|'test_pause_fails_invalid_states'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_vm_states'
op|'='
name|'self'
op|'.'
name|'_get_vm_states'
op|'('
name|'set'
op|'('
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'invalid_vm_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_pause_fails'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be unpaused.'
nl|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'unpause_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'UNPAUSE'
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'unpause_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'unpause'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'UNPAUSING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migrate_active_vm_state
dedent|''
name|'def'
name|'test_live_migrate_active_vm_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_live_migrate_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migrate_paused_vm_state
dedent|''
name|'def'
name|'test_live_migrate_paused_vm_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'paused_state'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'paused_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_live_migrate_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceAction'
op|','
string|"'action_start'"
op|')'
newline|'\n'
DECL|member|_live_migrate_instance
name|'def'
name|'_live_migrate_instance'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'_save'
op|','
name|'_action'
op|')'
op|':'
newline|'\n'
comment|'# TODO(gilliard): This logic is upside-down (different'
nl|'\n'
comment|'# behaviour depending on which class this method is mixed-into. Once'
nl|'\n'
comment|'# we have cellsv2 we can remove this kind of logic from this test'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'cell_type'
op|'=='
string|"'api'"
op|':'
newline|'\n'
indent|'            '
name|'api'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'api'
op|'='
name|'conductor'
op|'.'
name|'api'
op|'.'
name|'ComputeTaskAPI'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'api'
op|','
string|"'live_migrate_instance'"
op|')'
name|'as'
name|'task'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'live_migrate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|','
nl|'\n'
name|'disk_over_commit'
op|'='
name|'True'
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake_dest_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'MIGRATING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'task'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'fake_dest_host'"
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|','
nl|'\n'
name|'disk_over_commit'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume_volume_api_usage
dedent|''
dedent|''
name|'def'
name|'test_swap_volume_volume_api_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test ensures that volume_id arguments are passed to volume_api'
nl|'\n'
comment|'# and that volumes return to previous states in case of error.'
nl|'\n'
DECL|function|fake_vol_api_begin_detaching
indent|'        '
name|'def'
name|'fake_vol_api_begin_detaching'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_roll_detaching
dedent|''
name|'def'
name|'fake_vol_api_roll_detaching'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'detaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_reserve
dedent|''
dedent|''
name|'def'
name|'fake_vol_api_reserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_unreserve
dedent|''
name|'def'
name|'fake_vol_api_unreserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'attaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_swap_volume_exc
dedent|''
dedent|''
name|'def'
name|'fake_swap_volume_exc'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'old_volume_id'
op|','
nl|'\n'
name|'new_volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
comment|'# Random exception'
newline|'\n'
nl|'\n'
comment|'# Should fail if VM state is not valid'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'None'
op|','
op|'**'
op|'{'
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
nl|'\n'
string|"'launched_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'locked'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'fake_az'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'volumes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'old_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'old_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'old_volume'"
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'attached'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'in-use'"
op|'}'
newline|'\n'
name|'new_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'new_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'new_volume'"
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Should fail if old volume is not attached'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|"'detached'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeUnattached'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|"'attached'"
newline|'\n'
nl|'\n'
comment|"# Should fail if old volume's instance_uuid is not that of the instance"
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
string|"'fake2'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
comment|'# Should fail if new volume is attached'
nl|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|"'attached'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|"'detached'"
newline|'\n'
nl|'\n'
comment|'# Should fail if new volume is smaller than the old volume'
nl|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'size'"
op|']'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'size'"
op|']'
op|'='
number|'5'
newline|'\n'
nl|'\n'
comment|'# Fail call to swap_volume'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'begin_detaching'"
op|','
nl|'\n'
name|'fake_vol_api_begin_detaching'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'roll_detaching'"
op|','
nl|'\n'
name|'fake_vol_api_roll_detaching'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'reserve_volume'"
op|','
nl|'\n'
name|'fake_vol_api_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'unreserve_volume'"
op|','
nl|'\n'
name|'fake_vol_api_unreserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'fake_swap_volume_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Should succeed'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'lambda'
name|'c'
op|','
name|'instance'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|','
nl|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_snapshot_and_backup
dedent|''
name|'def'
name|'_test_snapshot_and_backup'
op|'('
name|'self'
op|','
name|'is_snapshot'
op|'='
name|'True'
op|','
nl|'\n'
name|'with_base_ref'
op|'='
name|'False'
op|','
name|'min_ram'
op|'='
name|'None'
op|','
nl|'\n'
name|'min_disk'
op|'='
name|'None'
op|','
nl|'\n'
name|'create_fails'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'locked'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'instance_vm_state'
newline|'\n'
nl|'\n'
comment|"# 'cache_in_nova' is for testing non-inheritable properties"
nl|'\n'
comment|"# 'user_id' should also not be carried from sys_meta into"
nl|'\n'
comment|'# image property...since it should be set explicitly by'
nl|'\n'
comment|'# _create_image() in compute api.'
nl|'\n'
name|'fake_image_meta'
op|'='
op|'{'
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'base-name'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'user_id'"
op|':'
string|"'meow'"
op|','
nl|'\n'
string|"'foo'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'blah'"
op|':'
string|"'bug?'"
op|','
nl|'\n'
string|"'cache_in_nova'"
op|':'
string|"'dropped'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'image_type'
op|'='
name|'is_snapshot'
name|'and'
string|"'snapshot'"
name|'or'
string|"'backup'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake-name'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'image_type'"
op|':'
name|'image_type'
op|','
nl|'\n'
string|"'foo'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'blah'"
op|':'
string|"'bug?'"
op|','
nl|'\n'
string|"'cow'"
op|':'
string|"'moo'"
op|','
nl|'\n'
string|"'cat'"
op|':'
string|"'meow'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'is_snapshot'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'min_ram'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'fake_image_meta'
op|'['
string|"'min_ram'"
op|']'
op|'='
name|'min_ram'
newline|'\n'
name|'sent_meta'
op|'['
string|"'min_ram'"
op|']'
op|'='
name|'min_ram'
newline|'\n'
dedent|''
name|'if'
name|'min_disk'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'fake_image_meta'
op|'['
string|"'min_disk'"
op|']'
op|'='
name|'min_disk'
newline|'\n'
name|'sent_meta'
op|'['
string|"'min_disk'"
op|']'
op|'='
name|'min_disk'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'sent_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'backup_type'"
op|']'
op|'='
string|"'fake-backup-type'"
newline|'\n'
nl|'\n'
dedent|''
name|'extra_props'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|','
name|'cat'
op|'='
string|"'meow'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
op|','
nl|'\n'
string|"'create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'snapshot_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'backup_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'is_snapshot'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'is_volume_backed_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'is_volume_backed_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'utils'
op|'.'
name|'get_image_from_system_metadata'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'fake_image'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
string|"'fake-image-id'"
op|')'
newline|'\n'
name|'mock_method'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
name|'if'
name|'create_fails'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'.'
name|'AndReturn'
op|'('
name|'fake_image'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_state
dedent|''
name|'def'
name|'check_state'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'expected_state'
op|'='
op|'('
name|'is_snapshot'
name|'and'
nl|'\n'
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT_PENDING'
name|'or'
nl|'\n'
name|'task_states'
op|'.'
name|'IMAGE_BACKUP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_state'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'create_fails'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
nl|'\n'
name|'check_state'
op|')'
newline|'\n'
name|'if'
name|'is_snapshot'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'snapshot_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'fake_image'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'backup_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'fake_image'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'fake-backup-type'"
op|','
string|"'fake-rotation'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'is_snapshot'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'fake-name'"
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'extra_props'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'fake-name'"
op|','
nl|'\n'
string|"'fake-backup-type'"
op|','
nl|'\n'
string|"'fake-rotation'"
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'extra_props'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_image'
op|','
name|'res'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'test'
op|'.'
name|'TestingException'
op|':'
newline|'\n'
indent|'            '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'create_fails'
op|','
name|'got_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_fails
dedent|''
name|'def'
name|'test_snapshot_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'create_fails'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_invalid_state
dedent|''
name|'def'
name|'test_snapshot_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_BACKUP'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_with_base_image_ref
dedent|''
name|'def'
name|'test_snapshot_with_base_image_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'with_base_ref'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_min_ram
dedent|''
name|'def'
name|'test_snapshot_min_ram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'min_ram'
op|'='
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_min_disk
dedent|''
name|'def'
name|'test_snapshot_min_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'min_disk'
op|'='
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup
dedent|''
name|'def'
name|'test_backup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'state'
name|'in'
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'is_snapshot'
op|'='
name|'False'
op|','
nl|'\n'
name|'instance_vm_state'
op|'='
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_fails
dedent|''
dedent|''
name|'def'
name|'test_backup_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'is_snapshot'
op|'='
name|'False'
op|','
name|'create_fails'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_invalid_state
dedent|''
name|'def'
name|'test_backup_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|','
nl|'\n'
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_BACKUP'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|','
nl|'\n'
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'fake-name'"
op|','
nl|'\n'
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_with_base_image_ref
dedent|''
name|'def'
name|'test_backup_with_base_image_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_and_backup'
op|'('
name|'is_snapshot'
op|'='
name|'False'
op|','
nl|'\n'
name|'with_base_ref'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_volume_backed_instance
dedent|''
name|'def'
name|'test_backup_volume_backed_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
name|'as'
name|'mock_is_volume_backed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'backup'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
string|"'fake-name'"
op|','
string|"'weekly'"
op|','
nl|'\n'
number|'3'
op|','
name|'extra_properties'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'mock_is_volume_backed'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_snapshot_volume_backed
dedent|''
dedent|''
name|'def'
name|'_test_snapshot_volume_backed'
op|'('
name|'self'
op|','
name|'quiesce_required'
op|','
name|'quiesce_fails'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'locked'
op|'='
name|'True'
op|','
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'image_min_ram'"
op|':'
string|"'11'"
op|','
nl|'\n'
string|"'image_min_disk'"
op|':'
string|"'22'"
op|','
nl|'\n'
string|"'image_container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'image_disk_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'image_ram_disk'"
op|':'
string|"'fake_ram_disk_id'"
op|','
nl|'\n'
string|"'image_bdm_v2'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'image_block_device_mapping'"
op|':'
string|"'[]'"
op|','
nl|'\n'
string|"'image_mappings'"
op|':'
string|"'[]'"
op|','
nl|'\n'
string|"'image_cache_in_nova'"
op|':'
string|"'True'"
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'vda'"
newline|'\n'
nl|'\n'
name|'instance_bdms'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'expect_meta'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'test-snapshot'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'root_device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'ram_disk'"
op|':'
string|"'fake_ram_disk_id'"
op|'}'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'min_disk'"
op|':'
string|"'22'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'min_ram'"
op|':'
string|"'11'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'quiesced'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|']'
newline|'\n'
name|'quiesce_expected'
op|'='
name|'not'
name|'quiesce_fails'
name|'and'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
nl|'\n'
name|'if'
name|'quiesce_required'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'image_os_require_quiesce'"
op|']'
op|'='
string|"'yes'"
newline|'\n'
name|'expect_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'os_require_quiesce'"
op|']'
op|'='
string|"'yes'"
newline|'\n'
nl|'\n'
DECL|function|fake_get_all_by_instance
dedent|''
name|'def'
name|'fake_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'use_slave'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'instance_bdms'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_image_create
dedent|''
name|'def'
name|'fake_image_create'
op|'('
name|'context'
op|','
name|'image_meta'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'image_meta'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expect_meta'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_volume_get
dedent|''
name|'def'
name|'fake_volume_get'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'volume_id'
op|','
string|"'display_description'"
op|':'
string|"''"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_volume_create_snapshot
dedent|''
name|'def'
name|'fake_volume_create_snapshot'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'name'
op|','
name|'description'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'%s-snapshot'"
op|'%'
name|'volume_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_quiesce_instance
dedent|''
name|'def'
name|'fake_quiesce_instance'
op|'('
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'quiesce_fails'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceQuiesceNotSupported'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'reason'
op|'='
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'quiesced'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_unquiesce_instance
dedent|''
name|'def'
name|'fake_unquiesce_instance'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'mapping'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'quiesced'
op|'['
number|'1'
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_all_by_instance'"
op|','
nl|'\n'
name|'fake_get_all_by_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'image_api'
op|','
string|"'create'"
op|','
nl|'\n'
name|'fake_image_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
nl|'\n'
name|'fake_volume_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'create_snapshot_force'"
op|','
nl|'\n'
name|'fake_volume_create_snapshot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
string|"'quiesce_instance'"
op|','
nl|'\n'
name|'fake_quiesce_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
string|"'unquiesce_instance'"
op|','
nl|'\n'
name|'fake_unquiesce_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# No block devices defined'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot_volume_backed'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'test-snapshot'"
op|')'
newline|'\n'
nl|'\n'
name|'bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'no_device'"
op|':'
name|'False'
op|','
string|"'volume_id'"
op|':'
string|"'1'"
op|','
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|"'inf'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|'}'
op|')'
newline|'\n'
name|'instance_bdms'
op|'.'
name|'append'
op|'('
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
name|'expect_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'bdm_v2'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'expect_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'block_device_mapping'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'expect_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'block_device_mapping'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'{'
string|"'guest_format'"
op|':'
name|'None'
op|','
string|"'boot_index'"
op|':'
number|'0'
op|','
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'image_id'"
op|':'
name|'None'
op|','
string|"'volume_id'"
op|':'
name|'None'
op|','
string|"'disk_bus'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'None'
op|','
string|"'source_type'"
op|':'
string|"'snapshot'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
name|'None'
op|','
string|"'snapshot_id'"
op|':'
string|"'1-snapshot'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# All the db_only fields and the volume ones are removed'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot_volume_backed'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'test-snapshot'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quiesce_expected'
op|','
name|'quiesced'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quiesce_expected'
op|','
name|'quiesced'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'image_mappings'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'virtual'"
op|':'
string|"'ami'"
op|','
string|"'device'"
op|':'
string|"'vda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'vda'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'vdb'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'vdc'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral1'"
op|'}'
op|']'
op|')'
op|'['
op|':'
number|'255'
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'image_block_device_mapping'"
op|']'
op|'='
op|'('
nl|'\n'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'source_type'"
op|':'
string|"'snapshot'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
name|'None'
op|','
string|"'device_type'"
op|':'
string|"'disk'"
op|','
string|"'boot_index'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'ide'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/vdf'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
string|"'snapshot_id'"
op|':'
string|"'snapshot-2'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'None'
op|','
string|"'volume_size'"
op|':'
number|'100'
op|','
string|"'image_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|'}'
op|']'
op|')'
op|'['
op|':'
number|'255'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'no_device'"
op|':'
name|'False'
op|','
string|"'volume_id'"
op|':'
name|'None'
op|','
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|"'inf'"
op|','
string|"'device_name'"
op|':'
string|"'/dev/vdh'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
string|"'destination_type'"
op|':'
string|"'local'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'swap'"
op|','
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'instance_bdms'
op|'.'
name|'append'
op|'('
name|'bdm'
op|')'
newline|'\n'
name|'expect_meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'block_device_mapping'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'{'
string|"'guest_format'"
op|':'
string|"'swap'"
op|','
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|','
string|"'no_device'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'image_id'"
op|':'
name|'None'
op|','
string|"'volume_id'"
op|':'
name|'None'
op|','
string|"'disk_bus'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'None'
op|','
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
name|'None'
op|','
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdh'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|','
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'quiesced'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
comment|'# Check that the mappgins from the image properties are not included'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'snapshot_volume_backed'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"'test-snapshot'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quiesce_expected'
op|','
name|'quiesced'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quiesce_expected'
op|','
name|'quiesced'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_volume_backed
dedent|''
name|'def'
name|'test_snapshot_volume_backed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_volume_backed'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_volume_backed_with_quiesce
dedent|''
name|'def'
name|'test_snapshot_volume_backed_with_quiesce'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_volume_backed'
op|'('
name|'True'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_volume_backed_with_quiesce_skipped
dedent|''
name|'def'
name|'test_snapshot_volume_backed_with_quiesce_skipped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_volume_backed'
op|'('
name|'False'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_volume_backed_with_quiesce_exception
dedent|''
name|'def'
name|'test_snapshot_volume_backed_with_quiesce_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot_volume_backed'
op|','
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_volume_backed_with_quiesce_stopped
dedent|''
name|'def'
name|'test_snapshot_volume_backed_with_quiesce_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot_volume_backed'
op|'('
name|'True'
op|','
name|'True'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create
dedent|''
name|'def'
name|'test_volume_snapshot_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
string|"'1'"
newline|'\n'
name|'create_info'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'eyedee'"
op|'}'
newline|'\n'
name|'fake_bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda2'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'"{\'fake\': \'connection_info\'}"'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'fake_bdm'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'fake_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_bdm'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'instance'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|','
nl|'\n'
string|"'get_by_volume_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'volume_snapshot_create'"
op|')'
newline|'\n'
nl|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'get_by_volume_id'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'instance'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|','
name|'volume_id'
op|','
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|','
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
name|'expected_snapshot'
op|'='
op|'{'
nl|'\n'
string|"'snapshot'"
op|':'
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'create_info'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
name|'volume_id'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|','
name|'expected_snapshot'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete
dedent|''
name|'def'
name|'test_volume_snapshot_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
string|"'1'"
newline|'\n'
name|'snapshot_id'
op|'='
string|"'2'"
newline|'\n'
name|'fake_bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda2'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'"{\'fake\': \'connection_info\'}"'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'fake_bdm'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'fake_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_bdm'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'instance'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|','
nl|'\n'
string|"'get_by_volume_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'volume_snapshot_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'get_by_volume_id'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'instance'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_bdm'
op|'['
string|"'instance'"
op|']'
op|','
name|'volume_id'
op|','
name|'snapshot_id'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|','
nl|'\n'
name|'snapshot_id'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_boot_volume_bootable
dedent|''
name|'def'
name|'_test_boot_volume_bootable'
op|'('
name|'self'
op|','
name|'is_bootable'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
DECL|function|get_vol_data
indent|'        '
name|'def'
name|'get_vol_data'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'bootable'"
op|':'
name|'is_bootable'
op|'}'
newline|'\n'
dedent|''
name|'block_device_mapping'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'expected_meta'
op|'='
op|'{'
string|"'min_disk'"
op|':'
number|'0'
op|','
string|"'min_ram'"
op|':'
number|'0'
op|','
string|"'properties'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'0'
op|','
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'get_vol_data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'is_bootable'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMVolumeNotBootable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_bdm_image_metadata'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'meta'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_bdm_image_metadata'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_meta'
op|','
name|'meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_volume_non_bootable
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_boot_volume_non_bootable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_boot_volume_bootable'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_volume_bootable
dedent|''
name|'def'
name|'test_boot_volume_bootable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_boot_volume_bootable'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_volume_basic_property
dedent|''
name|'def'
name|'test_boot_volume_basic_property'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_mapping'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'fake_volume'
op|'='
op|'{'
string|'"volume_image_metadata"'
op|':'
nl|'\n'
op|'{'
string|'"min_ram"'
op|':'
number|'256'
op|','
string|'"min_disk"'
op|':'
number|'128'
op|','
string|'"foo"'
op|':'
string|'"bar"'
op|'}'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_bdm_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'256'
op|','
name|'meta'
op|'['
string|"'min_ram'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'128'
op|','
name|'meta'
op|'['
string|"'min_disk'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'active'"
op|','
name|'meta'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_volume_snapshot_basic_property
dedent|''
dedent|''
name|'def'
name|'test_boot_volume_snapshot_basic_property'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_mapping'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'fake_volume'
op|'='
op|'{'
string|'"volume_image_metadata"'
op|':'
nl|'\n'
op|'{'
string|'"min_ram"'
op|':'
number|'256'
op|','
string|'"min_disk"'
op|':'
number|'128'
op|','
string|'"foo"'
op|':'
string|'"bar"'
op|'}'
op|'}'
newline|'\n'
name|'fake_snapshot'
op|'='
op|'{'
string|'"volume_id"'
op|':'
string|'"1"'
op|'}'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_volume'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
string|"'get_snapshot'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_snapshot'
op|')'
op|')'
name|'as'
op|'('
nl|'\n'
name|'volume_get'
op|','
name|'volume_get_snapshot'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_bdm_image_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'256'
op|','
name|'meta'
op|'['
string|"'min_ram'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'128'
op|','
name|'meta'
op|'['
string|"'min_disk'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'active'"
op|','
name|'meta'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'meta'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'volume_get_snapshot'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'block_device_mapping'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
name|'volume_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_with_disabled_disk_config
dedent|''
dedent|''
name|'def'
name|'_create_instance_with_disabled_disk_config'
op|'('
name|'self'
op|','
name|'object'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sys_meta'
op|'='
op|'{'
string|'"image_auto_disk_config"'
op|':'
string|'"Disabled"'
op|'}'
newline|'\n'
name|'params'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
name|'sys_meta'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'if'
name|'object'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instance'
newline|'\n'
dedent|''
name|'return'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_fake_image_with_disabled_disk_config
dedent|''
name|'def'
name|'_setup_fake_image_with_disabled_disk_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fake_image'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|'"auto_disk_config"'
op|':'
string|'"Disabled"'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'obj'
op|','
name|'context'
op|','
name|'image_id'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'fake_image'
newline|'\n'
dedent|''
name|'fake_image'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_image'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'fake_image'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_resize_with_disabled_auto_disk_config_fails
dedent|''
name|'def'
name|'test_resize_with_disabled_auto_disk_config_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_disabled_disk_config'
op|'('
nl|'\n'
name|'object'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AutoDiskConfigDisabledByImage'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_inst'
op|','
nl|'\n'
name|'auto_disk_config'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_disabled_auto_disk_config_fails
dedent|''
name|'def'
name|'test_create_with_disabled_auto_disk_config_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_id'
op|'='
name|'self'
op|'.'
name|'_setup_fake_image_with_disabled_disk_config'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AutoDiskConfigDisabledByImage'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"fake_flavor"'
op|','
name|'image_id'
op|','
name|'auto_disk_config'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_with_disabled_auto_disk_config_fails
dedent|''
name|'def'
name|'test_rebuild_with_disabled_auto_disk_config_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_disabled_disk_config'
op|'('
nl|'\n'
name|'object'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'_setup_fake_image_with_disabled_disk_config'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AutoDiskConfigDisabledByImage'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst'
op|','
nl|'\n'
name|'image_id'
op|','
nl|'\n'
string|'"new password"'
op|','
nl|'\n'
name|'auto_disk_config'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_flavor'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_check_auto_disk_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_checks_for_create_and_rebuild'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
DECL|member|test_rebuild
name|'def'
name|'test_rebuild'
op|'('
name|'self'
op|','
name|'_record_action_start'
op|','
nl|'\n'
name|'_checks_for_create_and_rebuild'
op|','
name|'_check_auto_disk_config'
op|','
nl|'\n'
name|'_get_image'
op|','
name|'bdm_get_by_instance_uuid'
op|','
name|'get_flavor'
op|','
name|'instance_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'cell_name'
op|'='
string|"'fake-cell'"
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'orig_system_metadata'
op|','
nl|'\n'
name|'image_ref'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'get_flavor'
op|'.'
name|'return_value'
op|'='
name|'test_flavor'
op|'.'
name|'fake_flavor'
newline|'\n'
name|'flavor'
op|'='
name|'instance'
op|'.'
name|'get_flavor'
op|'('
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'foo'"
newline|'\n'
name|'image'
op|'='
op|'{'
string|'"min_ram"'
op|':'
number|'10'
op|','
string|'"min_disk"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"properties"'
op|':'
op|'{'
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|'}'
op|'}'
newline|'\n'
name|'admin_pass'
op|'='
string|"''"
newline|'\n'
name|'files_to_inject'
op|'='
op|'['
op|']'
newline|'\n'
name|'bdms'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'_get_image'
op|'.'
name|'return_value'
op|'='
op|'('
name|'None'
op|','
name|'image'
op|')'
newline|'\n'
name|'bdm_get_by_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'bdms'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'rebuild_instance'"
op|')'
name|'as'
name|'rebuild_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_href'
op|','
nl|'\n'
name|'admin_pass'
op|','
name|'files_to_inject'
op|')'
newline|'\n'
nl|'\n'
name|'rebuild_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
name|'new_pass'
op|'='
name|'admin_pass'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'files_to_inject'
op|','
name|'image_ref'
op|'='
name|'image_href'
op|','
nl|'\n'
name|'orig_image_ref'
op|'='
name|'image_href'
op|','
nl|'\n'
name|'orig_sys_metadata'
op|'='
name|'orig_system_metadata'
op|','
name|'bdms'
op|'='
name|'bdms'
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'False'
op|','
name|'host'
op|'='
name|'instance'
op|'.'
name|'host'
op|','
name|'kwargs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_check_auto_disk_config'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|'='
name|'image'
op|')'
newline|'\n'
name|'_checks_for_create_and_rebuild'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'None'
op|','
name|'image'
op|','
name|'flavor'
op|','
op|'{'
op|'}'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'orig_system_metadata'
op|','
name|'instance'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_flavor'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_check_auto_disk_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_checks_for_create_and_rebuild'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
DECL|member|test_rebuild_change_image
name|'def'
name|'test_rebuild_change_image'
op|'('
name|'self'
op|','
name|'_record_action_start'
op|','
nl|'\n'
name|'_checks_for_create_and_rebuild'
op|','
name|'_check_auto_disk_config'
op|','
nl|'\n'
name|'_get_image'
op|','
name|'bdm_get_by_instance_uuid'
op|','
name|'get_flavor'
op|','
name|'instance_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'get_flavor'
op|'.'
name|'return_value'
op|'='
name|'test_flavor'
op|'.'
name|'fake_flavor'
newline|'\n'
name|'orig_image_href'
op|'='
string|"'orig_image'"
newline|'\n'
name|'orig_image'
op|'='
op|'{'
string|'"min_ram"'
op|':'
number|'10'
op|','
string|'"min_disk"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"properties"'
op|':'
op|'{'
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
string|"'vm_mode'"
op|':'
string|"'hvm'"
op|'}'
op|'}'
newline|'\n'
name|'new_image_href'
op|'='
string|"'new_image'"
newline|'\n'
name|'new_image'
op|'='
op|'{'
string|'"min_ram"'
op|':'
number|'10'
op|','
string|'"min_disk"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"properties"'
op|':'
op|'{'
string|"'architecture'"
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
string|"'vm_mode'"
op|':'
string|"'xen'"
op|'}'
op|'}'
newline|'\n'
name|'admin_pass'
op|'='
string|"''"
newline|'\n'
name|'files_to_inject'
op|'='
op|'['
op|']'
newline|'\n'
name|'bdms'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'cell_name'
op|'='
string|"'fake-cell'"
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'orig_system_metadata'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|','
nl|'\n'
name|'image_ref'
op|'='
name|'orig_image_href'
op|','
nl|'\n'
name|'vm_mode'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'instance'
op|'.'
name|'get_flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_image
name|'def'
name|'get_image'
op|'('
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'image_href'
op|'=='
name|'new_image_href'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
name|'None'
op|','
name|'new_image'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'image_href'
op|'=='
name|'orig_image_href'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
name|'None'
op|','
name|'orig_image'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'_get_image'
op|'.'
name|'side_effect'
op|'='
name|'get_image'
newline|'\n'
name|'bdm_get_by_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'bdms'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'rebuild_instance'"
op|')'
name|'as'
name|'rebuild_instance'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'new_image_href'
op|','
nl|'\n'
name|'admin_pass'
op|','
name|'files_to_inject'
op|')'
newline|'\n'
nl|'\n'
name|'rebuild_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
name|'new_pass'
op|'='
name|'admin_pass'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'files_to_inject'
op|','
name|'image_ref'
op|'='
name|'new_image_href'
op|','
nl|'\n'
name|'orig_image_ref'
op|'='
name|'orig_image_href'
op|','
nl|'\n'
name|'orig_sys_metadata'
op|'='
name|'orig_system_metadata'
op|','
name|'bdms'
op|'='
name|'bdms'
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'False'
op|','
name|'host'
op|'='
name|'instance'
op|'.'
name|'host'
op|','
name|'kwargs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_check_auto_disk_config'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|'='
name|'new_image'
op|')'
newline|'\n'
name|'_checks_for_create_and_rebuild'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'None'
op|','
name|'new_image'
op|','
name|'flavor'
op|','
op|'{'
op|'}'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_mode'
op|'.'
name|'XEN'
op|','
name|'instance'
op|'.'
name|'vm_mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_check_injected_file_quota_onset_file_limit_exceeded
dedent|''
name|'def'
name|'_test_check_injected_file_quota_onset_file_limit_exceeded'
op|'('
name|'self'
op|','
nl|'\n'
name|'side_effect'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'injected_files'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"foo"'
nl|'\n'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'limit_check'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'side_effect'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_check_injected_file_quota'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'injected_files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_injected_file_quota_onset_file_limit_exceeded
dedent|''
dedent|''
name|'def'
name|'test_check_injected_file_quota_onset_file_limit_exceeded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is the first call to limit_check.'
nl|'\n'
indent|'        '
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
string|"'injected_files'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'OnsetFileLimitExceeded'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_check_injected_file_quota_onset_file_limit_exceeded'
op|','
nl|'\n'
name|'side_effect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_injected_file_quota_onset_file_path_limit
dedent|''
name|'def'
name|'test_check_injected_file_quota_onset_file_path_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is the second call to limit_check.'
nl|'\n'
indent|'        '
name|'side_effect'
op|'='
op|'('
name|'mock'
op|'.'
name|'DEFAULT'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
string|"'injected_file_path_bytes'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'OnsetFilePathLimitExceeded'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_check_injected_file_quota_onset_file_limit_exceeded'
op|','
nl|'\n'
name|'side_effect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_injected_file_quota_onset_file_content_limit
dedent|''
name|'def'
name|'test_check_injected_file_quota_onset_file_content_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is the second call to limit_check but with different overs.'
nl|'\n'
indent|'        '
name|'side_effect'
op|'='
op|'('
name|'mock'
op|'.'
name|'DEFAULT'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'OverQuota'
op|'('
name|'overs'
op|'='
string|"'injected_file_content_bytes'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'OnsetFileContentLimitExceeded'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_check_injected_file_quota_onset_file_limit_exceeded'
op|','
nl|'\n'
name|'side_effect'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Quotas.commit'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Quotas.reserve'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstanceAction.action_start'"
op|')'
newline|'\n'
DECL|member|test_restore_by_admin
name|'def'
name|'test_restore_by_admin'
op|'('
name|'self'
op|','
name|'action_start'
op|','
name|'instance_save'
op|','
nl|'\n'
name|'quota_reserve'
op|','
name|'quota_commit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'admin_user'"
op|','
nl|'\n'
string|"'admin_project'"
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'compute_rpcapi'"
op|')'
name|'as'
name|'rpc'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'restore'
op|'('
name|'admin_context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'restore_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'admin_context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|','
name|'task_states'
op|'.'
name|'RESTORING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'quota_commit'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'quota_reserve'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'cores'
op|'='
name|'instance'
op|'.'
name|'flavor'
op|'.'
name|'vcpus'
op|','
name|'ram'
op|'='
name|'instance'
op|'.'
name|'flavor'
op|'.'
name|'memory_mb'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'instance'
op|'.'
name|'project_id'
op|','
name|'user_id'
op|'='
name|'instance'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Quotas.commit'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Quotas.reserve'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstanceAction.action_start'"
op|')'
newline|'\n'
DECL|member|test_restore_by_instance_owner
name|'def'
name|'test_restore_by_instance_owner'
op|'('
name|'self'
op|','
name|'action_start'
op|','
name|'instance_save'
op|','
nl|'\n'
name|'quota_reserve'
op|','
name|'quota_commit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'compute_rpcapi'"
op|')'
name|'as'
name|'rpc'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'restore'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'restore_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'project_id'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|','
name|'task_states'
op|'.'
name|'RESTORING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'quota_commit'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'quota_reserve'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'cores'
op|'='
name|'instance'
op|'.'
name|'flavor'
op|'.'
name|'vcpus'
op|','
name|'ram'
op|'='
name|'instance'
op|'.'
name|'flavor'
op|'.'
name|'memory_mb'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'instance'
op|'.'
name|'project_id'
op|','
name|'user_id'
op|'='
name|'instance'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_external_instance_event
dedent|''
name|'def'
name|'test_external_instance_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid1'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid2'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid3'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'events'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'instance_uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'instance_uuid'
op|'='
string|"'uuid2'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'instance_uuid'
op|'='
string|"'uuid3'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'external_instance_event'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|','
name|'events'
op|')'
newline|'\n'
name|'method'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'external_instance_event'
newline|'\n'
name|'method'
op|'.'
name|'assert_any_call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'0'
op|':'
number|'2'
op|']'
op|','
name|'events'
op|'['
number|'0'
op|':'
number|'2'
op|']'
op|')'
newline|'\n'
name|'method'
op|'.'
name|'assert_any_call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'2'
op|':'
op|']'
op|','
name|'events'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'method'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_ops_invalid_task_state
dedent|''
name|'def'
name|'test_volume_ops_invalid_task_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
string|"'Any'"
newline|'\n'
name|'volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'detach_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'new_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'volume_id'
op|','
name|'new_volume_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
DECL|member|test_get_bdm_image_metadata_with_cinder_down
name|'def'
name|'test_get_bdm_image_metadata_with_cinder_down'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdms'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_bdm_image_metadata'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'bdms'
op|','
name|'legacy_bdm'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'check_attach'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidVolume'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
DECL|member|test_validate_bdm_with_error_volume
name|'def'
name|'test_validate_bdm_with_error_volume'
op|'('
name|'self'
op|','
name|'mock_check_attach'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
comment|'# Tests that an InvalidVolume exception raised from'
nl|'\n'
comment|'# volume_api.check_attach due to the volume status not being'
nl|'\n'
comment|"# 'available' results in _validate_bdm re-raising InvalidVolume."
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
name|'volume_id'
op|'='
string|"'e856840e-9f5b-4894-8bde-58c6e29ac1e8'"
newline|'\n'
name|'volume_info'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'error'"
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|','
nl|'\n'
string|"'id'"
op|':'
name|'volume_id'
op|'}'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'volume_info'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'volume_id'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_validate_bdm'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_type'
op|','
name|'bdms'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'mock_check_attach'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'volume_info'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get_snapshot'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
DECL|member|test_validate_bdm_with_cinder_down
name|'def'
name|'test_validate_bdm_with_cinder_down'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_get_snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
name|'bdm'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_validate_bdm'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_type'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_validate_bdm'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_type'
op|','
name|'bdms'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_db_entry_for_new_instance_with_cinder_error
dedent|''
name|'def'
name|'_test_create_db_entry_for_new_instance_with_cinder_error'
op|'('
name|'self'
op|','
nl|'\n'
name|'expected_exception'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'create'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'SecurityGroupAPI'
op|','
string|"'ensure_default'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_populate_instance_names'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_populate_instance_for_create'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'self'
op|','
name|'mock_create'
op|','
name|'mock_names'
op|','
name|'mock_ensure'
op|','
nl|'\n'
name|'mock_inst_create'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'display_name'"
op|']'
op|'='
string|"'FAKE_DISPLAY_NAME'"
newline|'\n'
name|'instance'
op|'['
string|"'shutdown_terminate'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
name|'fake_image'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'fake-image-id'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'mappings'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'fake-status'"
op|','
nl|'\n'
string|"'location'"
op|':'
string|"'far-away'"
op|'}'
newline|'\n'
name|'fake_security_group'
op|'='
name|'None'
newline|'\n'
name|'fake_num_instances'
op|'='
number|'1'
newline|'\n'
name|'fake_index'
op|'='
number|'1'
newline|'\n'
name|'bdm'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|'"destroy"'
op|')'
name|'as'
name|'destroy'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected_exception'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
nl|'\n'
name|'create_db_entry_for_new_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_type'
op|','
nl|'\n'
name|'fake_image'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'fake_security_group'
op|','
nl|'\n'
name|'bdm'
op|','
nl|'\n'
name|'fake_num_instances'
op|','
nl|'\n'
name|'fake_index'
op|')'
newline|'\n'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# We use a nested method so we can decorate with the mocks.'
nl|'\n'
dedent|''
dedent|''
name|'do_test'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|'('
name|'reason'
op|'='
string|"'error'"
op|')'
op|')'
newline|'\n'
DECL|member|test_create_db_entry_for_new_instancewith_cinder_down
name|'def'
name|'test_create_db_entry_for_new_instancewith_cinder_down'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_db_entry_for_new_instance_with_cinder_error'
op|'('
nl|'\n'
name|'expected_exception'
op|'='
name|'exception'
op|'.'
name|'CinderConnectionFailed'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'error'"
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|'}'
op|')'
newline|'\n'
DECL|member|test_create_db_entry_for_new_instancewith_error_volume
name|'def'
name|'test_create_db_entry_for_new_instancewith_error_volume'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_db_entry_for_new_instance_with_cinder_error'
op|'('
nl|'\n'
name|'expected_exception'
op|'='
name|'exception'
op|'.'
name|'InvalidVolume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_rescue
dedent|''
name|'def'
name|'_test_rescue'
op|'('
name|'self'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'rescue_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'rescue_image'
op|'='
name|'None'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_state'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|','
name|'return_value'
op|'='
name|'bdms'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'is_volume_backed_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'rescue_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'bdm_get_by_instance_uuid'
op|','
name|'volume_backed_inst'
op|','
name|'instance_save'
op|','
nl|'\n'
name|'record_action_start'
op|','
name|'rpcapi_rescue_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'rescue_password'
op|'='
name|'rescue_password'
op|','
nl|'\n'
name|'rescue_image_ref'
op|'='
name|'rescue_image'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
comment|'# assert field values set on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'RESCUING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'bdm_get_by_instance_uuid'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'volume_backed_inst'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|')'
newline|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'record_action_start'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'RESCUE'
op|')'
newline|'\n'
name|'rpcapi_rescue_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'rescue_password'
op|'='
name|'rescue_password'
op|','
nl|'\n'
name|'rescue_image_ref'
op|'='
name|'rescue_image'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_active
dedent|''
dedent|''
name|'def'
name|'test_rescue_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_stopped
dedent|''
name|'def'
name|'test_rescue_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_error
dedent|''
name|'def'
name|'test_rescue_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_with_password
dedent|''
name|'def'
name|'test_rescue_with_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'rescue_password'
op|'='
string|"'fake-password'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_with_image
dedent|''
name|'def'
name|'test_rescue_with_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'rescue_image'
op|'='
string|"'fake-image'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_forced_shutdown
dedent|''
name|'def'
name|'test_rescue_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_rescue'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue
dedent|''
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'RESCUED'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'unrescue_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'instance_save'
op|','
name|'record_action_start'
op|','
name|'rpcapi_unrescue_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'unrescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
comment|'# assert field values set on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'UNRESCUING'
op|','
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'record_action_start'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'UNRESCUE'
op|')'
newline|'\n'
name|'rpcapi_unrescue_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password_invalid_state
dedent|''
dedent|''
name|'def'
name|'test_set_admin_password_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that InstanceInvalidState is raised when not ACTIVE.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'set_admin_password'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password
dedent|''
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can have its admin password set.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'set_admin_password'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'compute_rpcapi_mock'
op|','
name|'record_mock'
op|','
name|'instance_save_mock'
op|')'
op|':'
newline|'\n'
comment|'# call the API'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'set_admin_password'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
comment|'# make our assertions'
nl|'\n'
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|']'
op|')'
newline|'\n'
name|'record_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'CHANGE_PASSWORD'
op|')'
newline|'\n'
name|'compute_rpcapi_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
name|'new_pass'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_attach_interface_invalid_state
dedent|''
name|'def'
name|'_test_attach_interface_invalid_state'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'state'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'attach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_invalid_state
dedent|''
name|'def'
name|'test_attach_interface_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'state'
name|'in'
op|'['
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'vm_states'
op|'.'
name|'DELETED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'vm_states'
op|'.'
name|'RESCUED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|','
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_attach_interface_invalid_state'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_detach_interface_invalid_state
dedent|''
dedent|''
name|'def'
name|'_test_detach_interface_invalid_state'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'state'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_invalid_state
dedent|''
name|'def'
name|'test_detach_interface_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'state'
name|'in'
op|'['
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'vm_states'
op|'.'
name|'DELETED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'vm_states'
op|'.'
name|'RESCUED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SUSPENDED'
op|','
name|'vm_states'
op|'.'
name|'SHELVED'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_detach_interface_invalid_state'
op|'('
name|'state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_and_transform_bdm
dedent|''
dedent|''
name|'def'
name|'test_check_and_transform_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
name|'base_options'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'fake_image_ref'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'image_name'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'bare'"
op|','
nl|'\n'
string|"'id'"
op|':'
string|"'image_id'"
op|'}'
newline|'\n'
name|'legacy_bdm'
op|'='
name|'False'
newline|'\n'
name|'block_device_mapping'
op|'='
op|'['
op|'{'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'device_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'image_id'"
op|':'
string|"'image_id'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'image'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'volume_id'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_check_and_transform_bdm'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'base_options'
op|','
name|'instance_type'
op|','
nl|'\n'
name|'image_meta'
op|','
number|'1'
op|','
number|'1'
op|','
name|'block_device_mapping'
op|','
name|'legacy_bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceAction'
op|','
string|"'action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_rpcapi'
op|'.'
name|'ComputeAPI'
op|','
string|"'pause_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_instances_by_filters'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_create_instance'"
op|')'
newline|'\n'
DECL|member|test_skip_policy_check
name|'def'
name|'test_skip_policy_check'
op|'('
name|'self'
op|','
name|'mock_create'
op|','
name|'mock_get_ins_by_filters'
op|','
nl|'\n'
name|'mock_get'
op|','
name|'mock_pause'
op|','
name|'mock_action'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'{'
string|"'compute:pause'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'!'"
op|')'
op|','
nl|'\n'
string|"'compute:get'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'!'"
op|')'
op|','
nl|'\n'
string|"'compute:get_all'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'!'"
op|')'
op|','
nl|'\n'
string|"'compute:create'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'!'"
op|')'
op|'}'
newline|'\n'
name|'policy'
op|'.'
name|'set_rules'
op|'('
name|'common_policy'
op|'.'
name|'Rules'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'pause'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
name|'skip_policy_check'
op|'='
name|'True'
op|')'
newline|'\n'
name|'api'
op|'.'
name|'pause'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
name|'skip_policy_check'
op|'='
name|'True'
op|')'
newline|'\n'
name|'api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_all'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
name|'skip_policy_check'
op|'='
name|'True'
op|')'
newline|'\n'
name|'api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
name|'skip_policy_check'
op|'='
name|'True'
op|')'
newline|'\n'
name|'api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_instances_by_filters'"
op|')'
newline|'\n'
DECL|member|test_tenant_to_project_conversion
name|'def'
name|'test_tenant_to_project_conversion'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
name|'api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'search_opts'
op|'='
op|'{'
string|"'tenant_id'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'filters'
op|'='
name|'mock_get'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'project_id'"
op|':'
string|"'foo'"
op|'}'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeAPIUnitTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeAPIUnitTestCase'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeAPIUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cell_type'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_flavor_fails
dedent|''
name|'def'
name|'test_resize_same_flavor_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CannotResizeToSameFlavor'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_resize'
op|','
name|'same_flavor'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.context.RequestContext.elevated'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quota'
op|'.'
name|'QUOTAS'
op|','
string|"'reserve'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|','
string|"'destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'destroy'"
op|')'
newline|'\n'
DECL|member|test_delete_volume_backed_instance_in_error_state
name|'def'
name|'test_delete_volume_backed_instance_in_error_state'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_instance_destroy'
op|','
name|'bdm_destroy'
op|','
nl|'\n'
name|'notify_about_instance_usage'
op|','
name|'mock_reserve'
op|','
nl|'\n'
name|'mock_save'
op|','
name|'mock_elevated'
op|','
name|'bdm_get_by_instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'42'
op|','
string|"'volume_id'"
op|':'
name|'volume_id'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'reservations'
op|'='
op|'['
string|"'fake-resv'"
op|']'
newline|'\n'
nl|'\n'
name|'delete_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'9'
op|','
number|'30'
op|','
nl|'\n'
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'Utc'
op|'('
op|')'
op|')'
newline|'\n'
name|'updates'
op|'='
op|'{'
string|"'deleted_at'"
op|':'
name|'delete_time'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'fake_inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'updates'
op|')'
newline|'\n'
name|'mock_instance_destroy'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
name|'bdm_get_by_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'bdms'
newline|'\n'
name|'mock_reserve'
op|'.'
name|'return_value'
op|'='
name|'reservations'
newline|'\n'
name|'mock_elevated'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'host'"
op|':'
string|"''"
op|','
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|'}'
newline|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'_context'
op|'='
name|'self'
op|'.'
name|'context'
newline|'\n'
name|'connector'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'initiator'"
op|':'
string|"'iqn.fake'"
op|'}'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'deallocate_for_instance'"
op|')'
name|'as'
name|'mock_deallocate'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'terminate_connection'"
op|')'
name|'as'
name|'mock_terminate_conn'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'detach'"
op|')'
name|'as'
name|'mock_detach'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_deallocate'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'mock_detach'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'mock_terminate_conn'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|','
name|'connector'
op|')'
newline|'\n'
name|'bdm_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'ComputeAPIAPICellUnitTestCase'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
nl|'\n'
DECL|class|ComputeAPIAPICellUnitTestCase
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeAPIAPICellUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cell_type'
op|'='
string|"'api'"
op|','
name|'enable'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_cells_api'
op|'.'
name|'ComputeCellsAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cell_type'
op|'='
string|"'api'"
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_flavor_fails
dedent|''
name|'def'
name|'test_resize_same_flavor_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CannotResizeToSameFlavor'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_resize'
op|','
name|'same_flavor'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'ComputeAPIComputeCellUnitTestCase'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
nl|'\n'
DECL|class|ComputeAPIComputeCellUnitTestCase
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeAPIComputeCellUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cell_type'
op|'='
string|"'compute'"
op|','
name|'enable'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cell_type'
op|'='
string|"'compute'"
newline|'\n'
nl|'\n'
DECL|member|test_resize_same_flavor_passes
dedent|''
name|'def'
name|'test_resize_same_flavor_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize'
op|'('
name|'same_flavor'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DiffDictTestCase
dedent|''
dedent|''
name|'class'
name|'DiffDictTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for _diff_dict()."""'
newline|'\n'
nl|'\n'
DECL|member|test_no_change
name|'def'
name|'test_no_change'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'new'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'diff'
op|'='
name|'compute_api'
op|'.'
name|'_diff_dict'
op|'('
name|'old'
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diff'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_new_key
dedent|''
name|'def'
name|'test_new_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'new'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|','
name|'d'
op|'='
number|'4'
op|')'
newline|'\n'
name|'diff'
op|'='
name|'compute_api'
op|'.'
name|'_diff_dict'
op|'('
name|'old'
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diff'
op|','
name|'dict'
op|'('
name|'d'
op|'='
op|'['
string|"'+'"
op|','
number|'4'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_changed_key
dedent|''
name|'def'
name|'test_changed_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'new'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'4'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'diff'
op|'='
name|'compute_api'
op|'.'
name|'_diff_dict'
op|'('
name|'old'
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diff'
op|','
name|'dict'
op|'('
name|'b'
op|'='
op|'['
string|"'+'"
op|','
number|'4'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_removed_key
dedent|''
name|'def'
name|'test_removed_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'new'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'c'
op|'='
number|'3'
op|')'
newline|'\n'
name|'diff'
op|'='
name|'compute_api'
op|'.'
name|'_diff_dict'
op|'('
name|'old'
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diff'
op|','
name|'dict'
op|'('
name|'b'
op|'='
op|'['
string|"'-'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupAPITest
dedent|''
dedent|''
name|'class'
name|'SecurityGroupAPITest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SecurityGroupAPITest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'secgroup_api'
op|'='
name|'compute_api'
op|'.'
name|'SecurityGroupAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.security_group.SecurityGroupList.'"
nl|'\n'
string|"'get_by_instance'"
op|')'
newline|'\n'
DECL|member|test_get_instance_security_groups
name|'def'
name|'test_get_instance_security_groups'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
name|'objects'
op|'.'
name|'SecurityGroupList'
op|'('
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'SecurityGroup'
op|'('
name|'name'
op|'='
string|"'foo'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'SecurityGroup'
op|'('
name|'name'
op|'='
string|"'bar'"
op|')'
op|']'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'groups'
newline|'\n'
name|'names'
op|'='
name|'self'
op|'.'
name|'secgroup_api'
op|'.'
name|'get_instance_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'{'
string|"'name'"
op|':'
string|"'bar'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|']'
op|','
name|'sorted'
op|'('
name|'names'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mock_get'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-uuid'"
op|','
name|'mock_get'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
