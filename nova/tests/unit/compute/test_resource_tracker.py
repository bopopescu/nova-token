begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for compute resource tracking."""'
newline|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'monitors'
name|'import'
name|'base'
name|'as'
name|'monitor_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'resource_tracker'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'resources'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'fields'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'pci_device_pool'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'pci'
name|'import'
name|'fakes'
name|'as'
name|'pci_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_VIRT_MEMORY_MB
name|'FAKE_VIRT_MEMORY_MB'
op|'='
number|'5'
newline|'\n'
DECL|variable|FAKE_VIRT_MEMORY_OVERHEAD
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|'='
number|'1'
newline|'\n'
DECL|variable|FAKE_VIRT_MEMORY_WITH_OVERHEAD
name|'FAKE_VIRT_MEMORY_WITH_OVERHEAD'
op|'='
op|'('
nl|'\n'
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|')'
newline|'\n'
DECL|variable|FAKE_VIRT_NUMA_TOPOLOGY
name|'FAKE_VIRT_NUMA_TOPOLOGY'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
DECL|variable|cells
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'NUMACell'
op|'('
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'3072'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'0'
op|','
name|'memory_usage'
op|'='
number|'0'
op|','
name|'mempages'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'siblings'
op|'='
op|'['
op|']'
op|','
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'3072'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'0'
op|','
name|'memory_usage'
op|'='
number|'0'
op|','
name|'mempages'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'siblings'
op|'='
op|'['
op|']'
op|','
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|variable|FAKE_VIRT_NUMA_TOPOLOGY_OVERHEAD
name|'FAKE_VIRT_NUMA_TOPOLOGY_OVERHEAD'
op|'='
name|'objects'
op|'.'
name|'NUMATopologyLimits'
op|'('
nl|'\n'
name|'cpu_allocation_ratio'
op|'='
number|'2'
op|','
name|'ram_allocation_ratio'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ROOT_GB
name|'ROOT_GB'
op|'='
number|'5'
newline|'\n'
DECL|variable|EPHEMERAL_GB
name|'EPHEMERAL_GB'
op|'='
number|'1'
newline|'\n'
DECL|variable|FAKE_VIRT_LOCAL_GB
name|'FAKE_VIRT_LOCAL_GB'
op|'='
name|'ROOT_GB'
op|'+'
name|'EPHEMERAL_GB'
newline|'\n'
DECL|variable|FAKE_VIRT_VCPUS
name|'FAKE_VIRT_VCPUS'
op|'='
number|'1'
newline|'\n'
DECL|variable|FAKE_VIRT_STATS
name|'FAKE_VIRT_STATS'
op|'='
op|'{'
string|"'virt_stat'"
op|':'
number|'10'
op|'}'
newline|'\n'
DECL|variable|FAKE_VIRT_STATS_COERCED
name|'FAKE_VIRT_STATS_COERCED'
op|'='
op|'{'
string|"'virt_stat'"
op|':'
string|"'10'"
op|'}'
newline|'\n'
DECL|variable|FAKE_VIRT_STATS_JSON
name|'FAKE_VIRT_STATS_JSON'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'FAKE_VIRT_STATS'
op|')'
newline|'\n'
DECL|variable|RESOURCE_NAMES
name|'RESOURCE_NAMES'
op|'='
op|'['
string|"'vcpu'"
op|']'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnsupportedVirtDriver
name|'class'
name|'UnsupportedVirtDriver'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Pretend version of a lame virt driver."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UnsupportedVirtDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_host_ip_addr
dedent|''
name|'def'
name|'get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'127.0.0.1'"
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
comment|'# no support for getting resource usage info'
nl|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtDriver
dedent|''
dedent|''
name|'class'
name|'FakeVirtDriver'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pci_support'
op|'='
name|'False'
op|','
name|'stats'
op|'='
name|'None'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'FAKE_VIRT_NUMA_TOPOLOGY'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeVirtDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
newline|'\n'
name|'self'
op|'.'
name|'local_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
newline|'\n'
name|'self'
op|'.'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
newline|'\n'
name|'self'
op|'.'
name|'numa_topology'
op|'='
name|'numa_topology'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'memory_mb_used'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'local_gb_used'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'pci_support'
op|'='
name|'pci_support'
newline|'\n'
name|'self'
op|'.'
name|'pci_devices'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_0443'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_VF'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:01.1'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0443'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'parent_addr'"
op|':'
string|"'0000:00:01.0'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_0443'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_VF'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:01.2'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0443'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'parent_addr'"
op|':'
string|"'0000:00:01.0'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_0443'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_PF'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:01.0'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0443'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_0123'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
string|"'type-PCI'"
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:01.0'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0123'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_7891'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_VF'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:01.0'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'7891'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'parent_addr'"
op|':'
string|"'0000:08:01.0'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
name|'if'
name|'self'
op|'.'
name|'pci_support'
name|'else'
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'pci_stats'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0443'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_VF'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'0443'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_PF'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'7891'"
op|','
nl|'\n'
string|"'numa_node'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'dev_type'"
op|':'
name|'fields'
op|'.'
name|'PciDeviceType'
op|'.'
name|'SRIOV_VF'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
name|'if'
name|'self'
op|'.'
name|'pci_support'
name|'else'
op|'['
op|']'
newline|'\n'
name|'if'
name|'stats'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats'
op|'='
name|'stats'
newline|'\n'
nl|'\n'
DECL|member|get_host_ip_addr
dedent|''
dedent|''
name|'def'
name|'get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'127.0.0.1'"
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'vcpus'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'memory_mb'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'self'
op|'.'
name|'local_gb'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'self'
op|'.'
name|'memory_mb_used'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'self'
op|'.'
name|'local_gb_used'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hypervisor_hostname'"
op|':'
string|"'fakehost'"
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'numa_topology'
op|'.'
name|'_to_json'
op|'('
op|')'
name|'if'
name|'self'
op|'.'
name|'numa_topology'
name|'else'
name|'None'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'pci_support'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
string|"'pci_passthrough_devices'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'pci_devices'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'stats'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
string|"'stats'"
op|']'
op|'='
name|'self'
op|'.'
name|'stats'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|estimate_instance_overhead
dedent|''
name|'def'
name|'estimate_instance_overhead'
op|'('
name|'self'
op|','
name|'instance_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_info'
op|'['
string|"'memory_mb'"
op|']'
comment|'# make sure memory value is present'
newline|'\n'
name|'overhead'
op|'='
op|'{'
nl|'\n'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'overhead'
comment|'# just return a constant value for testing'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTestCase
dedent|''
dedent|''
name|'class'
name|'BaseTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'stevedore.enabled.EnabledExtensionManager'"
op|')'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
name|'_mock_ext_mgr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|','
nl|'\n'
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_set_pci_passthrough_whitelist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'conductor'"
op|','
nl|'\n'
name|'manager'
op|'='
name|'CONF'
op|'.'
name|'conductor'
op|'.'
name|'manager'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instances'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_instance_types'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_host_and_node'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_get_by_host_and_node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'db'
op|','
nl|'\n'
string|"'flavor_get'"
op|','
name|'self'
op|'.'
name|'_fake_flavor_get'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'fakehost'"
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'updated'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'update_call_count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_set_pci_passthrough_whitelist
dedent|''
name|'def'
name|'_set_pci_passthrough_whitelist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'pci_passthrough_whitelist'
op|'='
op|'['
nl|'\n'
string|'\'{"vendor_id": "8086", "product_id": "0443"}\''
op|','
nl|'\n'
string|'\'{"vendor_id": "8086", "product_id": "7891"}\''
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_compute_node
dedent|''
name|'def'
name|'_create_compute_node'
op|'('
name|'self'
op|','
name|'values'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# This creates a db representation of a compute_node.'
nl|'\n'
indent|'        '
name|'compute'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"service_id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"host"'
op|':'
string|'"fakehost"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"vcpus_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"memory_mb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"free_ram_mb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"free_disk_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"current_workload"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"running_vms"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"cpu_info"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"numa_topology"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"stats"'
op|':'
string|'\'{"num_instances": "1"}\''
op|','
nl|'\n'
string|'"hypervisor_hostname"'
op|':'
string|'"fakenode"'
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'fake-hyp'"
op|','
nl|'\n'
string|"'disk_available_least'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host_ip'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'metrics'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_allocation_ratio'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ram_allocation_ratio'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'compute'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_create_compute_node_obj
dedent|''
name|'def'
name|'_create_compute_node_obj'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
comment|'# Use the db representation of a compute node returned'
nl|'\n'
comment|'# by _create_compute_node() to create an equivalent compute'
nl|'\n'
comment|'# node object.'
nl|'\n'
indent|'        '
name|'compute'
op|'='
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
op|')'
newline|'\n'
name|'compute_obj'
op|'='
name|'objects'
op|'.'
name|'ComputeNode'
op|'('
op|')'
newline|'\n'
name|'compute_obj'
op|'='
name|'objects'
op|'.'
name|'ComputeNode'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'context'
op|','
name|'compute_obj'
op|','
name|'compute'
op|')'
newline|'\n'
name|'return'
name|'compute_obj'
newline|'\n'
nl|'\n'
DECL|member|_create_service
dedent|''
name|'def'
name|'_create_service'
op|'('
name|'self'
op|','
name|'host'
op|'='
string|'"fakehost"'
op|','
name|'compute'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'compute'
op|':'
newline|'\n'
indent|'            '
name|'compute'
op|'='
op|'['
name|'compute'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'service'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"host"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"binary"'
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|'"topic"'
op|':'
string|'"compute"'
op|','
nl|'\n'
string|'"compute_node"'
op|':'
name|'compute'
op|','
nl|'\n'
string|'"report_count"'
op|':'
number|'0'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disabled_reason'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'last_seen_up'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'forced_down'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'version'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_obj
dedent|''
name|'def'
name|'_fake_instance_obj'
op|'('
name|'self'
op|','
name|'stash'
op|'='
name|'True'
op|','
name|'flavor'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Default to an instance ready to resize to or from the same'
nl|'\n'
comment|'# instance_type'
nl|'\n'
indent|'        '
name|'flavor'
op|'='
name|'flavor'
name|'or'
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'flavor'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid1'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|'='
name|'instance_uuid'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ephemeral_key_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'os_type'"
op|':'
string|"'Linux'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'123456'"
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
name|'flavor'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'flavor'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'flavor'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'flavor'
op|'['
string|"'root_gb'"
op|']'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'flavor'
op|'['
string|"'ephemeral_gb'"
op|']'
op|','
nl|'\n'
string|"'launched_on'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vm_mode'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'reservation_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'default_swap_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'access_ip_v4'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'key_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cell_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'locked'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'locked_by'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'launch_index'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_disk_config'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'terminated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'user_data'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cleaned'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'333'
op|','
nl|'\n'
string|"'disable_terminate'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_description'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'key_data'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'default_ephemeral_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'progress'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'launched_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'config_drive'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'shutdown_terminate'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'stash'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'old_flavor'
op|'='
name|'flavor'
newline|'\n'
name|'instance'
op|'.'
name|'new_flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'.'
name|'numa_topology'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'numa_topology'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instances'
op|'['
name|'instance_uuid'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_fake_flavor_create
dedent|''
name|'def'
name|'_fake_flavor_create'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fakeitype'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_MB'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'FAKE_VIRT_VCPUS'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'ROOT_GB'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'EPHEMERAL_GB'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'fakeflavor'"
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance_type'
op|'.'
name|'update'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'instance_type'
op|')'
newline|'\n'
nl|'\n'
name|'id_'
op|'='
name|'instance_type'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_instance_types'
op|'['
name|'id_'
op|']'
op|'='
name|'instance_type'
newline|'\n'
name|'return'
name|'instance_type'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_get_by_host_and_node
dedent|''
name|'def'
name|'_fake_instance_get_by_host_and_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|','
name|'nodename'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'_instances'
op|'.'
name|'values'
op|'('
op|')'
name|'if'
name|'i'
op|'['
string|"'host'"
op|']'
op|'=='
name|'host'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_flavor_get
dedent|''
name|'def'
name|'_fake_flavor_get'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'id_'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_instance_types'
op|'['
name|'id_'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_update
dedent|''
name|'def'
name|'_fake_compute_node_update'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'compute_node_id'
op|','
name|'values'
op|','
nl|'\n'
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'update_call_count'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'updated'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tracker
dedent|''
name|'def'
name|'_tracker'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
nl|'\n'
dedent|''
name|'node'
op|'='
string|'"fakenode"'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'_driver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tracker'
op|'='
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|'('
name|'host'
op|','
name|'driver'
op|','
name|'node'
op|')'
newline|'\n'
name|'tracker'
op|'.'
name|'compute_node'
op|'='
name|'self'
op|'.'
name|'_create_compute_node_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|'='
name|'resources'
op|'.'
name|'ResourceHandler'
op|'('
name|'RESOURCE_NAMES'
op|','
name|'True'
op|')'
newline|'\n'
name|'return'
name|'tracker'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnsupportedDriverTestCase
dedent|''
dedent|''
name|'class'
name|'UnsupportedDriverTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Resource tracking should be disabled when the virt driver doesn\'t\n    support it.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UnsupportedDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
comment|'# seed tracker with data:'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'UnsupportedVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled
dedent|''
name|'def'
name|'test_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# disabled = no compute node stats'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_claim
dedent|''
name|'def'
name|'test_disabled_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# basic claim:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_instance_claim
dedent|''
name|'def'
name|'test_disabled_instance_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# instance variation:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_disabled_instance_context_claim
name|'def'
name|'test_disabled_instance_context_claim'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
comment|'# instance context manager variation:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
name|'as'
name|'claim'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_updated_usage
dedent|''
dedent|''
name|'def'
name|'test_disabled_updated_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'host'
op|'='
string|"'fakehost'"
op|','
name|'memory_mb'
op|'='
number|'5'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_resize_claim
dedent|''
name|'def'
name|'test_disabled_resize_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'claim'
op|'.'
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_type'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'claim'
op|'.'
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_resize_context_claim
dedent|''
name|'def'
name|'test_disabled_resize_context_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_type'
op|')'
name|'as'
name|'claim'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MissingComputeNodeTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'MissingComputeNodeTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MissingComputeNodeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_service_get_by_compute_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_get_by_host_and_nodename'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_get_by_host_and_nodename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_create'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_create_compute_node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'scheduler_client'
op|'.'
name|'update_resource_stats'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_create_compute_node
dedent|''
name|'def'
name|'_fake_create_compute_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'created'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_service_get_by_compute_host
dedent|''
name|'def'
name|'_fake_service_get_by_compute_host'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
comment|'# return a service with no joined compute'
nl|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|')'
newline|'\n'
name|'return'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_get_by_host_and_nodename
dedent|''
name|'def'
name|'_fake_compute_node_get_by_host_and_nodename'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
comment|'# return no compute node'
nl|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_compute_node
dedent|''
name|'def'
name|'test_create_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'created'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enabled
dedent|''
name|'def'
name|'test_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTrackerTestCase
dedent|''
dedent|''
name|'class'
name|'BaseTrackerTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# setup plumbing for a working resource tracker with required'
nl|'\n'
comment|'# database models and a compatible compute driver:'
nl|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTrackerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_migrations'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_service_get_by_compute_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_get_by_host_and_nodename'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_get_by_host_and_nodename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_update'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_delete'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'migration_update'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_migration_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'migration_get_in_progress_by_host_and_node'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_migration_get_in_progress_by_host_and_node'
op|')'
newline|'\n'
nl|'\n'
comment|'# Note that this must be called before the call to _init_tracker()'
nl|'\n'
name|'patcher'
op|'='
name|'pci_fakes'
op|'.'
name|'fake_pci_whitelist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_init_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'limits'
op|'='
name|'self'
op|'.'
name|'_limits'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_service_get_by_compute_host
dedent|''
name|'def'
name|'_fake_service_get_by_compute_host'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'host'
op|','
name|'compute'
op|'='
name|'self'
op|'.'
name|'compute'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_get_by_host_and_nodename
dedent|''
name|'def'
name|'_fake_compute_node_get_by_host_and_nodename'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_update
dedent|''
name|'def'
name|'_fake_compute_node_update'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'compute_node_id'
op|','
name|'values'
op|','
nl|'\n'
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'update_call_count'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'updated'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_delete
dedent|''
name|'def'
name|'_fake_compute_node_delete'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'compute_node_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deleted'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update'
op|'('
op|'{'
string|"'deleted'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_fake_migration_get_in_progress_by_host_and_node
dedent|''
name|'def'
name|'_fake_migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'host'
op|','
nl|'\n'
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|'='
op|'['
string|"'confirmed'"
op|','
string|"'reverted'"
op|','
string|"'error'"
op|']'
newline|'\n'
name|'migrations'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'migration'
name|'in'
name|'self'
op|'.'
name|'_migrations'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'migration'
op|'='
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'migration'
op|')'
newline|'\n'
name|'if'
name|'migration'
op|'['
string|"'status'"
op|']'
name|'in'
name|'status'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'uuid'
op|'='
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'migration'
op|'['
string|"'instance'"
op|']'
op|'='
name|'self'
op|'.'
name|'_instances'
op|'['
name|'uuid'
op|']'
newline|'\n'
name|'migrations'
op|'.'
name|'append'
op|'('
name|'migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'migrations'
newline|'\n'
nl|'\n'
DECL|member|_fake_migration_update
dedent|''
name|'def'
name|'_fake_migration_update'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'migration_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
comment|"# cheat and assume there's only 1 migration present"
nl|'\n'
indent|'        '
name|'migration'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_migrations'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
DECL|member|_init_tracker
dedent|''
name|'def'
name|'_init_tracker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_limits
dedent|''
name|'def'
name|'_limits'
op|'('
name|'self'
op|','
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_WITH_OVERHEAD'
op|','
nl|'\n'
name|'disk_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
op|','
nl|'\n'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'FAKE_VIRT_NUMA_TOPOLOGY_OVERHEAD'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create limits dictionary used for oversubscribing resources."""'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'memory_mb'"
op|':'
name|'memory_mb'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
name|'disk_gb'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
name|'vcpus'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'numa_topology'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|assertEqualNUMAHostTopology
dedent|''
name|'def'
name|'assertEqualNUMAHostTopology'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'got'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'attrs'
op|'='
op|'('
string|"'cpuset'"
op|','
string|"'memory'"
op|','
string|"'id'"
op|','
string|"'cpu_usage'"
op|','
string|"'memory_usage'"
op|')'
newline|'\n'
name|'if'
name|'None'
name|'in'
op|'('
name|'expected'
op|','
name|'got'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'expected'
op|'!='
name|'got'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'AssertionError'
op|'('
string|'"Topologies don\'t match. Expected: "'
nl|'\n'
string|'"%(expected)s, but got: %(got)s"'
op|'%'
nl|'\n'
op|'{'
string|"'expected'"
op|':'
name|'expected'
op|','
string|"'got'"
op|':'
name|'got'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'expected'
op|')'
op|'!='
name|'len'
op|'('
name|'got'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|'"Topologies don\'t match due to different "'
nl|'\n'
string|'"number of cells. Expected: "'
nl|'\n'
string|'"%(expected)s, but got: %(got)s"'
op|'%'
nl|'\n'
op|'{'
string|"'expected'"
op|':'
name|'expected'
op|','
string|"'got'"
op|':'
name|'got'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'exp_cell'
op|','
name|'got_cell'
name|'in'
name|'zip'
op|'('
name|'expected'
op|'.'
name|'cells'
op|','
name|'got'
op|'.'
name|'cells'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'attr'
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'getattr'
op|'('
name|'exp_cell'
op|','
name|'attr'
op|')'
op|'!='
name|'getattr'
op|'('
name|'got_cell'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'AssertionError'
op|'('
string|'"Topologies don\'t match. Expected: "'
nl|'\n'
string|'"%(expected)s, but got: %(got)s"'
op|'%'
nl|'\n'
op|'{'
string|"'expected'"
op|':'
name|'expected'
op|','
string|"'got'"
op|':'
name|'got'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertEqualPciDevicePool
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'assertEqualPciDevicePool'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'observed'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'product_id'
op|','
name|'observed'
op|'.'
name|'product_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'vendor_id'
op|','
name|'observed'
op|'.'
name|'vendor_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'tags'
op|','
name|'observed'
op|'.'
name|'tags'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'count'
op|','
name|'observed'
op|'.'
name|'count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertEqualPciDevicePoolList
dedent|''
name|'def'
name|'assertEqualPciDevicePoolList'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'observed'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex_objs'
op|'='
name|'expected'
op|'.'
name|'objects'
newline|'\n'
name|'ob_objs'
op|'='
name|'observed'
op|'.'
name|'objects'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'ex_objs'
op|')'
op|','
name|'len'
op|'('
name|'ob_objs'
op|')'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'ex_objs'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqualPciDevicePool'
op|'('
name|'ex_objs'
op|'['
name|'i'
op|']'
op|','
name|'ob_objs'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert
dedent|''
dedent|''
name|'def'
name|'_assert'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'field'
op|','
name|'tracker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'tracker'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'tracker'
op|'='
name|'self'
op|'.'
name|'tracker'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'field'
name|'not'
name|'in'
name|'tracker'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
nl|'\n'
string|'"\'%(field)s\' not in compute node."'
op|'%'
op|'{'
string|"'field'"
op|':'
name|'field'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'x'
op|'='
name|'tracker'
op|'.'
name|'compute_node'
op|'['
name|'field'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'field'
op|'=='
string|"'numa_topology'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqualNUMAHostTopology'
op|'('
nl|'\n'
name|'value'
op|','
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_db_obj'
op|'('
name|'x'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'x'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'TrackerTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_free_ram_resource_value
indent|'    '
name|'def'
name|'test_free_ram_resource_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
name|'mem_free'
op|'='
name|'driver'
op|'.'
name|'memory_mb'
op|'-'
name|'driver'
op|'.'
name|'memory_mb_used'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mem_free'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'free_ram_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_free_disk_resource_value
dedent|''
name|'def'
name|'test_free_disk_resource_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
name|'mem_free'
op|'='
name|'driver'
op|'.'
name|'local_gb'
op|'-'
name|'driver'
op|'.'
name|'local_gb_used'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mem_free'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'free_disk_gb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_compute_node
dedent|''
name|'def'
name|'test_update_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'updated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'self'
op|'.'
name|'_driver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'memory_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_NUMA_TOPOLOGY'
op|','
string|"'numa_topology'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'running_vms'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'free_ram_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'free_disk_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'current_workload'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'pci_device_pool'
op|'.'
name|'from_pci_stats'
op|'('
name|'driver'
op|'.'
name|'pci_stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
nl|'\n'
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'pci_device_pools'
op|')'
op|')'
newline|'\n'
name|'for'
name|'expected_pool'
op|','
name|'actual_pool'
name|'in'
name|'zip'
op|'('
nl|'\n'
name|'expected'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'pci_device_pools'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_pool'
op|','
name|'actual_pool'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_instance_host_and_node
dedent|''
dedent|''
name|'def'
name|'test_set_instance_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_set_instance_host_and_node'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'host'
op|','
name|'inst'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'nodename'
op|','
name|'inst'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'host'
op|','
name|'inst'
op|'.'
name|'launched_on'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerClientTrackerTestCase
dedent|''
dedent|''
name|'class'
name|'SchedulerClientTrackerTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerClientTrackerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'scheduler_client'
op|'.'
name|'update_resource_stats'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_resource
dedent|''
name|'def'
name|'test_update_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(pmurray): we are not doing a full pass through the resource'
nl|'\n'
comment|'# trackers update path, so safest to do two updates and look for'
nl|'\n'
comment|'# differences then to rely on the initial state being the same'
nl|'\n'
comment|'# as an update'
nl|'\n'
indent|'        '
name|'urs_mock'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'scheduler_client'
op|'.'
name|'update_resource_stats'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'urs_mock'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
comment|'# change a compute node value to simulate a change'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'urs_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_update_resource
dedent|''
name|'def'
name|'test_no_update_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(pmurray): we are not doing a full pass through the resource'
nl|'\n'
comment|'# trackers update path, so safest to do two updates and look for'
nl|'\n'
comment|'# differences then to rely on the initial state being the same'
nl|'\n'
comment|'# as an update'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'update'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'scheduler_client'
op|'.'
name|'update_resource_stats'
newline|'\n'
name|'update'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'update'
op|'.'
name|'called'
op|','
string|'"update_resource_stats should not be "'
nl|'\n'
string|'"called when there is no change"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerPciStatsTestCase
dedent|''
dedent|''
name|'class'
name|'TrackerPciStatsTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_update_compute_node
indent|'    '
name|'def'
name|'test_update_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'updated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'self'
op|'.'
name|'_driver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'memory_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_NUMA_TOPOLOGY'
op|','
string|"'numa_topology'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'running_vms'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'free_ram_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'free_disk_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'current_workload'
op|')'
newline|'\n'
name|'expected_pools'
op|'='
name|'pci_device_pool'
op|'.'
name|'from_pci_stats'
op|'('
name|'driver'
op|'.'
name|'pci_stats'
op|')'
newline|'\n'
name|'observed_pools'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'pci_device_pools'
newline|'\n'
name|'self'
op|'.'
name|'assertEqualPciDevicePoolList'
op|'('
name|'expected_pools'
op|','
name|'observed_pools'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
name|'pci_support'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerExtraResourcesTestCase
dedent|''
dedent|''
name|'class'
name|'TrackerExtraResourcesTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_set_empty_ext_resources
indent|'    '
name|'def'
name|'test_set_empty_ext_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
name|'self'
op|'.'
name|'_create_compute_node_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'del'
name|'resources'
op|'.'
name|'stats'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_write_ext_resources'
op|'('
name|'resources'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'resources'
op|'.'
name|'stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_extra_resources
dedent|''
name|'def'
name|'test_set_extra_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_write_resources
indent|'        '
name|'def'
name|'fake_write_resources'
op|'('
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resources'
op|'['
string|"'stats'"
op|']'
op|'['
string|"'resA'"
op|']'
op|'='
string|"'123'"
newline|'\n'
name|'resources'
op|'['
string|"'stats'"
op|']'
op|'['
string|"'resB'"
op|']'
op|'='
number|'12'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|','
nl|'\n'
string|"'write_resources'"
op|','
nl|'\n'
name|'fake_write_resources'
op|')'
newline|'\n'
nl|'\n'
name|'resources'
op|'='
name|'self'
op|'.'
name|'_create_compute_node_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'del'
name|'resources'
op|'.'
name|'stats'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_write_ext_resources'
op|'('
name|'resources'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|'"resA"'
op|':'
string|'"123"'
op|','
string|'"resB"'
op|':'
string|'"12"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'expected'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'resources'
op|'.'
name|'stats'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceClaimTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceClaimTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_instance_topology
indent|'    '
name|'def'
name|'_instance_topology'
op|'('
name|'self'
op|','
name|'mem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mem'
op|'='
name|'mem'
op|'*'
number|'1024'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
name|'mem'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
name|'memory'
op|'='
name|'mem'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_claim_topology
dedent|''
name|'def'
name|'_claim_topology'
op|'('
name|'self'
op|','
name|'mem'
op|','
name|'cpus'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'driver'
op|'.'
name|'numa_topology'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'mem'
op|'='
name|'mem'
op|'*'
number|'1024'
newline|'\n'
name|'return'
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'3072'
op|','
name|'cpu_usage'
op|'='
name|'cpus'
op|','
nl|'\n'
name|'memory_usage'
op|'='
name|'mem'
op|','
name|'mempages'
op|'='
op|'['
op|']'
op|','
name|'siblings'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'3072'
op|','
name|'cpu_usage'
op|'='
name|'cpus'
op|','
nl|'\n'
name|'memory_usage'
op|'='
name|'mem'
op|','
name|'mempages'
op|'='
op|'['
op|']'
op|','
name|'siblings'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_instance_claim_with_oversubscription
name|'def'
name|'test_instance_claim_with_oversubscription'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
op|'*'
number|'2'
newline|'\n'
name|'root_gb'
op|'='
name|'ephemeral_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
newline|'\n'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
op|'*'
number|'2'
newline|'\n'
name|'claim_topology'
op|'='
name|'self'
op|'.'
name|'_claim_topology'
op|'('
number|'3'
op|')'
newline|'\n'
name|'instance_topology'
op|'='
name|'self'
op|'.'
name|'_instance_topology'
op|'('
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'limits'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
name|'memory_mb'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
name|'root_gb'
op|'*'
number|'2'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
name|'vcpus'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'FAKE_VIRT_NUMA_TOPOLOGY_OVERHEAD'
op|'}'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'memory_mb'
op|'='
name|'memory_mb'
op|','
nl|'\n'
name|'root_gb'
op|'='
name|'root_gb'
op|','
name|'ephemeral_gb'
op|'='
name|'ephemeral_gb'
op|','
nl|'\n'
name|'numa_topology'
op|'='
name|'instance_topology'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memory_mb'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqualNUMAHostTopology'
op|'('
nl|'\n'
name|'claim_topology'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_db_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'numa_topology'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root_gb'
op|'*'
number|'2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_additive_claims
name|'def'
name|'test_additive_claims'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'claim_topology'
op|'='
name|'self'
op|'.'
name|'_claim_topology'
op|'('
number|'2'
op|','
name|'cpus'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
nl|'\n'
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'instance_topology'
op|'='
name|'self'
op|'.'
name|'_instance_topology'
op|'('
number|'1'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|','
name|'numa_topology'
op|'='
name|'instance_topology'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|','
name|'numa_topology'
op|'='
name|'instance_topology'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
op|'('
name|'flavor'
op|'['
string|"'memory_mb'"
op|']'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
op|'('
name|'flavor'
op|'['
string|"'root_gb'"
op|']'
op|'+'
name|'flavor'
op|'['
string|"'ephemeral_gb'"
op|']'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'flavor'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqualNUMAHostTopology'
op|'('
nl|'\n'
name|'claim_topology'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_db_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'numa_topology'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_context_claim_with_exception
name|'def'
name|'test_context_claim_with_exception'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'1'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
comment|'# <insert exciting things that utilize resources>'
nl|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'test'
op|'.'
name|'TestingException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqualNUMAHostTopology'
op|'('
nl|'\n'
name|'FAKE_VIRT_NUMA_TOPOLOGY'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_db_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'numa_topology'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_update_load_stats_for_instance
name|'def'
name|'test_update_load_stats_for_instance'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'current_workload'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'['
string|"'host'"
op|']'
op|'='
string|"'fakehost'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'current_workload'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_cpu_stats
name|'def'
name|'test_cpu_stats'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'disk_gb'"
op|':'
number|'100'
op|','
string|"'memory_mb'"
op|':'
number|'100'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
name|'vcpus'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'vcpus'
op|'='
name|'vcpus'
op|')'
newline|'\n'
nl|'\n'
comment|'# should not do anything until a claim is made:'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vcpus'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance state can change without modifying vcpus in use:'
nl|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vcpus'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
name|'add_vcpus'
op|'='
number|'10'
newline|'\n'
name|'vcpus'
op|'+='
name|'add_vcpus'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'vcpus'
op|'='
name|'add_vcpus'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vcpus'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'vcpus'
op|'-='
name|'add_vcpus'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vcpus'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'vcpus_used'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_skip_deleted_instances
dedent|''
name|'def'
name|'test_skip_deleted_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure that the audit process skips instances that have vm_state'
nl|'\n'
comment|'# DELETED, but the DB record is not yet deleted.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.MigrationList.get_in_progress_by_host_and_node'"
op|')'
newline|'\n'
DECL|member|test_deleted_instances_with_migrations
name|'def'
name|'test_deleted_instances_with_migrations'
op|'('
name|'self'
op|','
name|'mock_migration_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'migration_type'
op|'='
string|"'resize'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'invalid'"
op|')'
newline|'\n'
name|'mock_migration_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'migration'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'local_gb_used'
op|')'
newline|'\n'
name|'mock_migration_list'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"fakehost"'
op|','
nl|'\n'
string|'"fakenode"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.MigrationList.get_in_progress_by_host_and_node'"
op|')'
newline|'\n'
DECL|member|test_instances_with_live_migrations
name|'def'
name|'test_instances_with_live_migrations'
op|'('
name|'self'
op|','
name|'mock_migration_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'migration_type'
op|'='
string|"'live-migration'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_migration_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'migration'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'mock_migration_list'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"fakehost"'
op|','
nl|'\n'
string|'"fakenode"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.claims.Claim'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
DECL|member|test_claim_saves_numa_topology
name|'def'
name|'test_claim_saves_numa_topology'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_claim'
op|')'
op|':'
newline|'\n'
DECL|function|fake_save
indent|'        '
name|'def'
name|'fake_save'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
string|"'numa_topology'"
op|','
string|"'host'"
op|','
string|"'node'"
op|','
nl|'\n'
string|"'launched_on'"
op|']'
op|')'
op|','
nl|'\n'
name|'inst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_save'
op|'.'
name|'side_effect'
op|'='
name|'fake_save'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'host'
op|'='
name|'None'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'memory_mb'
op|'='
number|'1024'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'numa'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'.'
name|'claimed_numa_topology'
op|'='
name|'numa'
newline|'\n'
name|'mock_claim'
op|'.'
name|'return_value'
op|'='
name|'claim'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'tracker'
op|','
string|"'_update_usage_from_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
dedent|''
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_claim_sets_instance_host_and_node
name|'def'
name|'test_claim_sets_instance_host_and_node'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'launched_on'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakehost'"
op|','
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakehost'"
op|','
name|'instance'
op|'['
string|"'launched_on'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakenode'"
op|','
name|'instance'
op|'['
string|"'node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_MoveClaimTestCase
dedent|''
dedent|''
name|'class'
name|'_MoveClaimTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_MoveClaimTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claim_method'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_move_claim'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_additive_claims
name|'def'
name|'test_additive_claims'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'limits'
op|'='
name|'self'
op|'.'
name|'_limits'
op|'('
nl|'\n'
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_WITH_OVERHEAD'
op|','
nl|'\n'
number|'2'
op|'*'
name|'FAKE_VIRT_LOCAL_GB'
op|','
nl|'\n'
number|'2'
op|'*'
name|'FAKE_VIRT_VCPUS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claim_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance_type'
op|','
name|'limits'
op|'='
name|'limits'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claim_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance2'
op|','
name|'self'
op|'.'
name|'instance_type'
op|','
name|'limits'
op|'='
name|'limits'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_WITH_OVERHEAD'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_move_type_not_tracked
name|'def'
name|'test_move_type_not_tracked'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'claim_method'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance_type'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|','
name|'move_type'
op|'='
string|'"live-migration"'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Migration'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_existing_migration
name|'def'
name|'test_existing_migration'
op|'('
name|'self'
op|','
name|'save_mock'
op|','
name|'save_inst_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|'='
number|'42'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'source_compute'
op|'='
string|"'fake-other-compute'"
op|','
nl|'\n'
name|'source_node'
op|'='
string|"'fake-other-node'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'accepted'"
op|','
nl|'\n'
name|'migration_type'
op|'='
string|"'evacuation'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'claim_method'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance_type'
op|','
nl|'\n'
name|'migration'
op|'='
name|'migration'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'host'
op|','
name|'migration'
op|'.'
name|'dest_compute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'nodename'
op|','
name|'migration'
op|'.'
name|'dest_node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pre-migrating"'
op|','
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
name|'save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'save_inst_mock'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResizeClaimTestCase
dedent|''
dedent|''
name|'class'
name|'ResizeClaimTestCase'
op|'('
name|'_MoveClaimTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ResizeClaimTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'claim_method'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
newline|'\n'
nl|'\n'
DECL|member|test_move_type_not_tracked
dedent|''
name|'def'
name|'test_move_type_not_tracked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Resize_claim does already sets the move_type."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_existing_migration
dedent|''
name|'def'
name|'test_existing_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Resize_claim does not support having existing "'
nl|'\n'
string|'"migration record."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|OrphanTestCase
dedent|''
dedent|''
name|'class'
name|'OrphanTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_driver
indent|'    '
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|OrphanVirtDriver
indent|'        '
name|'class'
name|'OrphanVirtDriver'
op|'('
name|'FakeVirtDriver'
op|')'
op|':'
newline|'\n'
DECL|member|get_per_instance_usage
indent|'            '
name|'def'
name|'get_per_instance_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'1-2-3-4-5'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_MB'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'1-2-3-4-5'"
op|'}'
op|','
nl|'\n'
string|"'2-3-4-5-6'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_MB'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'2-3-4-5-6'"
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'OrphanVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usage
dedent|''
name|'def'
name|'test_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_WITH_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'memory_mb_used'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find
dedent|''
name|'def'
name|'test_find'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# create one legit instance and verify the 2 orphans remain'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'orphans'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_find_orphaned_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'orphans'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeMonitorTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeMonitorTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeMonitorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
string|"'nodename'"
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_metrics_none
dedent|''
name|'def'
name|'test_get_host_metrics_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
op|']'
newline|'\n'
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'metrics'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'LOG'
op|','
string|"'warning'"
op|')'
newline|'\n'
DECL|member|test_get_host_metrics_exception
name|'def'
name|'test_get_host_metrics_exception'
op|'('
name|'self'
op|','
name|'mock_LOG_warning'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'monitor'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'monitor'
op|'.'
name|'add_metrics_to_list'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
name|'monitor'
op|']'
newline|'\n'
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'mock_LOG_warning'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"u'Cannot get the metrics from %s.'"
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'metrics'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_metrics
dedent|''
name|'def'
name|'test_get_host_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|FakeCPUMonitor
indent|'        '
name|'class'
name|'FakeCPUMonitor'
op|'('
name|'monitor_base'
op|'.'
name|'MonitorBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|NOW_TS
indent|'            '
name|'NOW_TS'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeCPUMonitor'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'source'
op|'='
string|"'FakeCPUMonitor'"
newline|'\n'
nl|'\n'
DECL|member|get_metric_names
dedent|''
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'set'
op|'('
op|'['
string|'"cpu.frequency"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_metrics
dedent|''
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|'('
string|'"cpu.frequency"'
op|','
number|'100'
op|','
name|'self'
op|'.'
name|'NOW_TS'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
name|'FakeCPUMonitor'
op|'('
name|'None'
op|')'
op|']'
newline|'\n'
name|'mock_notifier'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpc'
op|','
string|"'get_notifier'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_notifier'
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
DECL|variable|metrics
indent|'            '
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'service'
op|'='
string|"'compute'"
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_metrics'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'timestamp'"
op|':'
name|'FakeCPUMonitor'
op|'.'
name|'NOW_TS'
op|'.'
name|'isoformat'
op|'('
op|')'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'cpu.frequency'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'FakeCPUMonitor'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'payload'
op|'='
op|'{'
nl|'\n'
string|"'metrics'"
op|':'
name|'expected_metrics'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'host_ip'"
op|':'
name|'CONF'
op|'.'
name|'my_ip'
op|','
nl|'\n'
string|"'nodename'"
op|':'
name|'self'
op|'.'
name|'node_name'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mock_notifier'
op|'.'
name|'info'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'compute.metrics.update'"
op|','
name|'payload'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|','
name|'expected_metrics'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerPeriodicTestCase
dedent|''
dedent|''
name|'class'
name|'TrackerPeriodicTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_periodic_status_update
indent|'    '
name|'def'
name|'test_periodic_status_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# verify update called on instantiation'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'update_call_count'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify update not called if no change to resources'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'update_call_count'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify update is called when resources change'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'driver'
newline|'\n'
name|'driver'
op|'.'
name|'memory_mb'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'update_call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_available_resource_calls_locked_inner
dedent|''
name|'def'
name|'test_update_available_resource_calls_locked_inner'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'tracker'
op|','
string|"'driver'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'tracker'
op|','
nl|'\n'
string|"'_update_available_resource'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'tracker'
op|','
string|"'_verify_resources'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'tracker'
op|','
string|"'_report_hypervisor_resource_view'"
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_rhrv'
op|','
name|'mock_vr'
op|','
name|'mock_uar'
op|','
name|'mock_driver'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resources'
op|'='
op|'{'
string|"'there is someone in my head'"
op|':'
string|"'but it\\'s not me'"
op|'}'
newline|'\n'
name|'mock_driver'
op|'.'
name|'get_available_resource'
op|'.'
name|'return_value'
op|'='
name|'resources'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mock_uar'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'resources'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StatsDictTestCase
dedent|''
dedent|''
name|'class'
name|'StatsDictTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test stats handling for a virt driver that provides\n    stats as a dictionary.\n    """'
newline|'\n'
DECL|member|_driver
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
name|'stats'
op|'='
name|'FAKE_VIRT_STATS'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_virt_stats
dedent|''
name|'def'
name|'test_virt_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# start with virt driver stats'
nl|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'stats'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_VIRT_STATS_COERCED'
op|','
name|'stats'
op|')'
newline|'\n'
nl|'\n'
comment|'# adding an instance should keep virt driver stats'
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'stats'
newline|'\n'
comment|'# compute node stats are coerced to strings'
nl|'\n'
name|'expected_stats'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'FAKE_VIRT_STATS_COERCED'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'stats'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'expected_stats'
op|'['
name|'k'
op|']'
op|'='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_stats'
op|','
name|'stats'
op|')'
newline|'\n'
nl|'\n'
comment|'# removing the instances should keep only virt driver stats'
nl|'\n'
name|'self'
op|'.'
name|'_instances'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'.'
name|'stats'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_VIRT_STATS_COERCED'
op|','
name|'stats'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StatsInvalidTypeTestCase
dedent|''
dedent|''
name|'class'
name|'StatsInvalidTypeTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test stats handling for a virt driver that provides\n    an invalid type for stats.\n    """'
newline|'\n'
DECL|member|_driver
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
name|'stats'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_init_tracker
dedent|''
name|'def'
name|'_init_tracker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# do not do initial update in setup'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_virt_stats
dedent|''
name|'def'
name|'test_virt_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# should throw exception for incorrect stats value type'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UpdateUsageFromMigrationsTestCase
dedent|''
dedent|''
name|'class'
name|'UpdateUsageFromMigrationsTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
DECL|member|test_no_migrations
name|'def'
name|'test_no_migrations'
op|'('
name|'self'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'migrations'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_update_usage'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_instance_not_found
name|'def'
name|'test_instance_not_found'
op|'('
name|'self'
op|','
name|'mock_get_instance'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_instance'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"'some_id'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'some_uuid'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'migration'
op|']'
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'some_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_update_usage'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_update_usage_called
name|'def'
name|'test_update_usage_called'
op|'('
name|'self'
op|','
name|'mock_get_instance'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'migration'
op|']'
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_update_usage'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
name|'migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_flavor_not_found
name|'def'
name|'test_flavor_not_found'
op|'('
name|'self'
op|','
name|'mock_get_instance'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_update_usage'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
string|"''"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'migration'
op|']'
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_update_usage'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
name|'migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_not_resizing_state
name|'def'
name|'test_not_resizing_state'
op|'('
name|'self'
op|','
name|'mock_get_instance'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SUSPENDING'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'migration'
op|']'
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_update_usage'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|','
nl|'\n'
string|"'_update_usage_from_migration'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.instance.Instance.get_by_uuid'"
op|')'
newline|'\n'
DECL|member|test_use_most_recent
name|'def'
name|'test_use_most_recent'
op|'('
name|'self'
op|','
name|'mock_get_instance'
op|','
name|'mock_update_usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'migration_2002'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2002'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2002'
op|','
number|'1'
op|','
number|'1'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'migration_2003'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2003'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2003'
op|','
number|'1'
op|','
number|'1'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'migration_2001'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2001'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2001'
op|','
number|'1'
op|','
number|'1'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_update_usage_from_migrations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'migration_2002'
op|','
name|'migration_2003'
op|','
name|'migration_2001'
op|']'
op|')'
newline|'\n'
name|'mock_get_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'mock_update_usage'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
name|'migration_2003'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
