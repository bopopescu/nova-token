begin_unit
comment|'# Copyright 2013 Intel Corporation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for Compute Driver CPU resource monitor."""'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'monitors'
name|'import'
name|'virt'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeLibvirt
name|'class'
name|'FakeLibvirt'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|getCPUStats
indent|'    '
name|'def'
name|'getCPUStats'
op|'('
name|'self'
op|','
name|'cpuNum'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'cpuNum'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'kernel'"
op|':'
number|'5664160000000L'
op|','
nl|'\n'
string|"'idle'"
op|':'
number|'1592705190000000L'
op|','
nl|'\n'
string|"'user'"
op|':'
number|'26728850000000L'
op|','
nl|'\n'
string|"'iowait'"
op|':'
number|'6121490000000L'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"invalid argument: Invalid cpu number"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getInfo
dedent|''
dedent|''
name|'def'
name|'getInfo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'800'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeDriverCPUMonitorTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeDriverCPUMonitorTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeDriverCPUMonitorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.libvirt.LibvirtDriver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.LibvirtDriver._conn'"
op|','
nl|'\n'
name|'FakeLibvirt'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'cm'
op|'='
name|'manager'
op|'.'
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'monitor'
op|'='
name|'virt'
op|'.'
name|'ComputeDriverCPUMonitor'
op|'('
name|'cm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_metric_names
dedent|''
name|'def'
name|'test_get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'names'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metric_names'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'names'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.frequency"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.user.time"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.kernel.time"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.idle.time"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.iowait.time"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.user.percent"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.kernel.percent"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.idle.percent"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.iowait.percent"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"cpu.percent"'
op|','
name|'names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_metrics
dedent|''
name|'def'
name|'test_get_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metrics_raw'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metrics'
op|'('
op|')'
newline|'\n'
name|'names'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metric_names'
op|'('
op|')'
newline|'\n'
name|'metrics'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'metric'
name|'in'
name|'metrics_raw'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'metric'
op|'['
string|"'name'"
op|']'
op|','
name|'names'
op|')'
newline|'\n'
name|'metrics'
op|'['
name|'metric'
op|'['
string|"'name'"
op|']'
op|']'
op|'='
name|'metric'
op|'['
string|"'value'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|'['
string|'"cpu.frequency"'
op|']'
op|','
number|'800'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|'['
string|'"cpu.user.time"'
op|']'
op|','
number|'26728850000000L'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|'['
string|'"cpu.kernel.time"'
op|']'
op|','
number|'5664160000000L'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|'['
string|'"cpu.idle.time"'
op|']'
op|','
number|'1592705190000000L'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|'['
string|'"cpu.iowait.time"'
op|']'
op|','
number|'6121490000000L'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metrics'
op|'['
string|'"cpu.user.percent"'
op|']'
op|'<='
number|'1'
nl|'\n'
name|'and'
name|'metrics'
op|'['
string|'"cpu.user.percent"'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metrics'
op|'['
string|'"cpu.kernel.percent"'
op|']'
op|'<='
number|'1'
nl|'\n'
name|'and'
name|'metrics'
op|'['
string|'"cpu.kernel.percent"'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metrics'
op|'['
string|'"cpu.idle.percent"'
op|']'
op|'<='
number|'1'
nl|'\n'
name|'and'
name|'metrics'
op|'['
string|'"cpu.idle.percent"'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metrics'
op|'['
string|'"cpu.iowait.percent"'
op|']'
op|'<='
number|'1'
nl|'\n'
name|'and'
name|'metrics'
op|'['
string|'"cpu.iowait.percent"'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metrics'
op|'['
string|'"cpu.percent"'
op|']'
op|'<='
number|'1'
nl|'\n'
name|'and'
name|'metrics'
op|'['
string|'"cpu.percent"'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
