begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for the compute extra resources framework."""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'stevedore'
name|'import'
name|'extension'
newline|'\n'
name|'from'
name|'stevedore'
name|'import'
name|'named'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'resources'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'resources'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'resources'
name|'import'
name|'vcpu'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'flavor'
name|'as'
name|'flavor_obj'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResourceHandler
name|'class'
name|'FakeResourceHandler'
op|'('
name|'resources'
op|'.'
name|'ResourceHandler'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'extensions'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mgr'
op|'='
name|'named'
op|'.'
name|'NamedExtensionManager'
op|'.'
name|'make_test_instance'
op|'('
name|'extensions'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResource
dedent|''
dedent|''
name|'class'
name|'FakeResource'
op|'('
name|'base'
op|'.'
name|'Resource'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'total_res'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'used_res'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_requested
dedent|''
name|'def'
name|'_get_requested'
op|'('
name|'self'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'extra_specs'"
name|'not'
name|'in'
name|'usage'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'resource_name'
name|'not'
name|'in'
name|'usage'
op|'['
string|"'extra_specs'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'usage'
op|'['
string|"'extra_specs'"
op|']'
op|'['
name|'self'
op|'.'
name|'resource_name'
op|']'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_limit
dedent|''
name|'def'
name|'_get_limit'
op|'('
name|'self'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'resource_name'
name|'not'
name|'in'
name|'limits'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'limit'
op|'='
name|'limits'
op|'['
name|'self'
op|'.'
name|'resource_name'
op|']'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'limit'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'total_res'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'used_res'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|test
dedent|''
name|'def'
name|'test'
op|'('
name|'self'
op|','
name|'usage'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested'
op|'='
name|'self'
op|'.'
name|'_get_requested'
op|'('
name|'usage'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'requested'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'limit'
op|'='
name|'self'
op|'.'
name|'_get_limit'
op|'('
name|'limits'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'limit'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'free'
op|'='
name|'limit'
op|'-'
name|'self'
op|'.'
name|'used_res'
newline|'\n'
name|'if'
name|'requested'
op|'<='
name|'free'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
string|"'Free %(free)d < requested %(requested)d '"
op|'%'
nl|'\n'
op|'{'
string|"'free'"
op|':'
name|'free'
op|','
string|"'requested'"
op|':'
name|'requested'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_instance
dedent|''
dedent|''
name|'def'
name|'add_instance'
op|'('
name|'self'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested'
op|'='
name|'self'
op|'.'
name|'_get_requested'
op|'('
name|'usage'
op|')'
newline|'\n'
name|'if'
name|'requested'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'used_res'
op|'+='
name|'requested'
newline|'\n'
nl|'\n'
DECL|member|remove_instance
dedent|''
dedent|''
name|'def'
name|'remove_instance'
op|'('
name|'self'
op|','
name|'usage'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested'
op|'='
name|'self'
op|'.'
name|'_get_requested'
op|'('
name|'usage'
op|')'
newline|'\n'
name|'if'
name|'requested'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'used_res'
op|'-='
name|'requested'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|report_free
dedent|''
name|'def'
name|'report_free'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"Free %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'total_res'
op|'-'
name|'self'
op|'.'
name|'used_res'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceA
dedent|''
dedent|''
name|'class'
name|'ResourceA'
op|'('
name|'FakeResource'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|reset
indent|'    '
name|'def'
name|'reset'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
comment|'# ResourceA uses a configuration option'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'total_res'
op|'='
name|'int'
op|'('
name|'CONF'
op|'.'
name|'resA'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'used_res'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'resource_name'
op|'='
string|"'resource:resA'"
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'['
string|"'resA'"
op|']'
op|'='
name|'self'
op|'.'
name|'total_res'
newline|'\n'
name|'resources'
op|'['
string|"'used_resA'"
op|']'
op|'='
name|'self'
op|'.'
name|'used_res'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceB
dedent|''
dedent|''
name|'class'
name|'ResourceB'
op|'('
name|'FakeResource'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|reset
indent|'    '
name|'def'
name|'reset'
op|'('
name|'self'
op|','
name|'resources'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
comment|'# ResourceB uses resource details passed in parameter resources'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'total_res'
op|'='
name|'resources'
op|'['
string|"'resB'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'used_res'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'resource_name'
op|'='
string|"'resource:resB'"
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'resources'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'['
string|"'resB'"
op|']'
op|'='
name|'self'
op|'.'
name|'total_res'
newline|'\n'
name|'resources'
op|'['
string|"'used_resB'"
op|']'
op|'='
name|'self'
op|'.'
name|'used_res'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_flavor_obj
dedent|''
dedent|''
name|'def'
name|'fake_flavor_obj'
op|'('
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'flavor'
op|'='
name|'flavor_obj'
op|'.'
name|'Flavor'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'flavor'
op|'.'
name|'name'
op|'='
string|"'fakeflavor'"
newline|'\n'
name|'flavor'
op|'.'
name|'memory_mb'
op|'='
number|'8000'
newline|'\n'
name|'flavor'
op|'.'
name|'vcpus'
op|'='
number|'3'
newline|'\n'
name|'flavor'
op|'.'
name|'root_gb'
op|'='
number|'11'
newline|'\n'
name|'flavor'
op|'.'
name|'ephemeral_gb'
op|'='
number|'4'
newline|'\n'
name|'flavor'
op|'.'
name|'swap'
op|'='
number|'0'
newline|'\n'
name|'flavor'
op|'.'
name|'rxtx_factor'
op|'='
number|'1.0'
newline|'\n'
name|'flavor'
op|'.'
name|'vcpu_weight'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'updates'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'flavor'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTestCase
dedent|''
name|'class'
name|'BaseTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_initialize_used_res_counter
indent|'    '
name|'def'
name|'_initialize_used_res_counter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Initialize the value for the used resource'
nl|'\n'
indent|'        '
name|'for'
name|'ext'
name|'in'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'_mgr'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'            '
name|'ext'
op|'.'
name|'obj'
op|'.'
name|'used_res'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# initialize flavors and stub get_by_id to'
nl|'\n'
comment|'# get flavors from here'
nl|'\n'
name|'self'
op|'.'
name|'_flavors'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a flavor without extra_specs defined'
nl|'\n'
name|'_flavor_id'
op|'='
number|'1'
newline|'\n'
name|'_flavor'
op|'='
name|'fake_flavor_obj'
op|'('
name|'id'
op|'='
name|'_flavor_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|'='
name|'_flavor'
newline|'\n'
nl|'\n'
comment|'# Create a flavor with extra_specs defined'
nl|'\n'
name|'_flavor_id'
op|'='
number|'2'
newline|'\n'
name|'requested_resA'
op|'='
number|'5'
newline|'\n'
name|'requested_resB'
op|'='
number|'7'
newline|'\n'
name|'requested_resC'
op|'='
number|'7'
newline|'\n'
name|'_extra_specs'
op|'='
op|'{'
string|"'resource:resA'"
op|':'
name|'requested_resA'
op|','
nl|'\n'
string|"'resource:resB'"
op|':'
name|'requested_resB'
op|','
nl|'\n'
string|"'resource:resC'"
op|':'
name|'requested_resC'
op|'}'
newline|'\n'
name|'_flavor'
op|'='
name|'fake_flavor_obj'
op|'('
name|'id'
op|'='
name|'_flavor_id'
op|','
nl|'\n'
name|'extra_specs'
op|'='
name|'_extra_specs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|'='
name|'_flavor'
newline|'\n'
nl|'\n'
comment|'# create fake resource extensions and resource handler'
nl|'\n'
name|'_extensions'
op|'='
op|'['
nl|'\n'
name|'extension'
op|'.'
name|'Extension'
op|'('
string|"'resA'"
op|','
name|'None'
op|','
name|'ResourceA'
op|','
name|'ResourceA'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'extension'
op|'.'
name|'Extension'
op|'('
string|"'resB'"
op|','
name|'None'
op|','
name|'ResourceB'
op|','
name|'ResourceB'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'='
name|'FakeResourceHandler'
op|'('
name|'_extensions'
op|')'
newline|'\n'
nl|'\n'
comment|'# Resources details can be passed to each plugin or can be specified as'
nl|'\n'
comment|'# configuration options'
nl|'\n'
name|'driver_resources'
op|'='
op|'{'
string|"'resB'"
op|':'
number|'5'
op|'}'
newline|'\n'
name|'CONF'
op|'.'
name|'resA'
op|'='
string|"'10'"
newline|'\n'
nl|'\n'
comment|'# initialise the resources'
nl|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'reset_resources'
op|'('
name|'driver_resources'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_from_instance_with_extra_specs
dedent|''
name|'def'
name|'test_update_from_instance_with_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Flavor with extra_specs'
nl|'\n'
indent|'        '
name|'_flavor_id'
op|'='
number|'2'
newline|'\n'
name|'sign'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'update_from_instance'
op|'('
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|','
name|'sign'
op|')'
newline|'\n'
nl|'\n'
name|'expected_resA'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|'.'
name|'extra_specs'
op|'['
string|"'resource:resA'"
op|']'
newline|'\n'
name|'expected_resB'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|'.'
name|'extra_specs'
op|'['
string|"'resource:resB'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'expected_resA'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'_mgr'
op|'['
string|"'resA'"
op|']'
op|'.'
name|'obj'
op|'.'
name|'used_res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'expected_resB'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'_mgr'
op|'['
string|"'resB'"
op|']'
op|'.'
name|'obj'
op|'.'
name|'used_res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_from_instance_without_extra_specs
dedent|''
name|'def'
name|'test_update_from_instance_without_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Flavor id without extra spec'
nl|'\n'
indent|'        '
name|'_flavor_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'_initialize_used_res_counter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'resource_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'sign'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'update_from_instance'
op|'('
name|'self'
op|'.'
name|'_flavors'
op|'['
name|'_flavor_id'
op|']'
op|','
name|'sign'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'_mgr'
op|'['
string|"'resA'"
op|']'
op|'.'
name|'obj'
op|'.'
name|'used_res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'_mgr'
op|'['
string|"'resB'"
op|']'
op|'.'
name|'obj'
op|'.'
name|'used_res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write_resources
dedent|''
name|'def'
name|'test_write_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_initialize_used_res_counter'
op|'('
op|')'
newline|'\n'
name|'extra_resources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'resA'"
op|':'
number|'10'
op|','
string|"'used_resA'"
op|':'
number|'0'
op|','
string|"'resB'"
op|':'
number|'5'
op|','
string|"'used_resB'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'write_resources'
op|'('
name|'extra_resources'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'extra_resources'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_test_resources_without_extra_specs
dedent|''
name|'def'
name|'test_test_resources_without_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# Flavor id without extra_specs'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
number|'1'
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'test_resources'
op|'('
name|'flavor'
op|','
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'None'
op|','
name|'None'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_test_resources_with_limits_for_different_resource
dedent|''
name|'def'
name|'test_test_resources_with_limits_for_different_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'resource:resC'"
op|':'
number|'20'
op|'}'
newline|'\n'
comment|'# Flavor id with extra_specs'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
number|'2'
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'test_resources'
op|'('
name|'flavor'
op|','
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'None'
op|','
name|'None'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_passing_test_resources
dedent|''
name|'def'
name|'test_passing_test_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'resource:resA'"
op|':'
number|'10'
op|','
string|"'resource:resB'"
op|':'
number|'20'
op|'}'
newline|'\n'
comment|'# Flavor id with extra_specs'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_initialize_used_res_counter'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'test_resources'
op|'('
name|'flavor'
op|','
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'None'
op|','
name|'None'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failing_test_resources_for_single_resource
dedent|''
name|'def'
name|'test_failing_test_resources_for_single_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'resource:resA'"
op|':'
number|'4'
op|','
string|"'resource:resB'"
op|':'
number|'20'
op|'}'
newline|'\n'
comment|'# Flavor id with extra_specs'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_initialize_used_res_counter'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'r_handler'
op|'.'
name|'test_resources'
op|'('
name|'flavor'
op|','
name|'limits'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'Free 4 < requested 5 '"
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'expected'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_resource_handler
dedent|''
name|'def'
name|'test_empty_resource_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""An empty resource handler has no resource extensions,\n        should have no effect, and should raise no exceptions.\n        """'
newline|'\n'
name|'empty_r_handler'
op|'='
name|'FakeResourceHandler'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'resources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'empty_r_handler'
op|'.'
name|'reset_resources'
op|'('
name|'resources'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_flavors'
op|'['
number|'1'
op|']'
newline|'\n'
name|'sign'
op|'='
number|'1'
newline|'\n'
name|'empty_r_handler'
op|'.'
name|'update_from_instance'
op|'('
name|'flavor'
op|','
name|'sign'
op|')'
newline|'\n'
nl|'\n'
name|'limits'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'test_result'
op|'='
name|'empty_r_handler'
op|'.'
name|'test_resources'
op|'('
name|'flavor'
op|','
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'test_result'
op|')'
newline|'\n'
nl|'\n'
name|'sign'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'empty_r_handler'
op|'.'
name|'update_from_instance'
op|'('
name|'flavor'
op|','
name|'sign'
op|')'
newline|'\n'
nl|'\n'
name|'extra_resources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'expected_extra_resources'
op|'='
name|'extra_resources'
newline|'\n'
name|'empty_r_handler'
op|'.'
name|'write_resources'
op|'('
name|'extra_resources'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_extra_resources'
op|','
name|'extra_resources'
op|')'
newline|'\n'
nl|'\n'
name|'empty_r_handler'
op|'.'
name|'report_free_resources'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vcpu_resource_load
dedent|''
name|'def'
name|'test_vcpu_resource_load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# load the vcpu example'
nl|'\n'
indent|'        '
name|'names'
op|'='
op|'['
string|"'vcpu'"
op|']'
newline|'\n'
name|'real_r_handler'
op|'='
name|'resources'
op|'.'
name|'ResourceHandler'
op|'('
name|'names'
op|')'
newline|'\n'
name|'ext_names'
op|'='
name|'real_r_handler'
op|'.'
name|'_mgr'
op|'.'
name|'names'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|','
name|'ext_names'
op|')'
newline|'\n'
nl|'\n'
comment|'# check the extension loaded is the one we expect'
nl|'\n'
comment|'# and an instance of the object has been created'
nl|'\n'
name|'ext'
op|'='
name|'real_r_handler'
op|'.'
name|'_mgr'
op|'['
string|"'vcpu'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'ext'
op|'.'
name|'obj'
op|','
name|'vcpu'
op|'.'
name|'VCPU'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestVCPU
dedent|''
dedent|''
name|'class'
name|'TestVCPU'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestVCPU'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'='
name|'vcpu'
op|'.'
name|'VCPU'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_total'
op|'='
number|'10'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_used'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'_flavor'
op|'='
name|'fake_flavor_obj'
op|'('
name|'vcpus'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_big_flavor'
op|'='
name|'fake_flavor_obj'
op|'('
name|'vcpus'
op|'='
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset
dedent|''
name|'def'
name|'test_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# set vcpu values to something different to test reset'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_total'
op|'='
number|'10'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_used'
op|'='
number|'5'
newline|'\n'
nl|'\n'
name|'driver_resources'
op|'='
op|'{'
string|"'vcpus'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'reset'
op|'('
name|'driver_resources'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_used'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_and_remove_instance
dedent|''
name|'def'
name|'test_add_and_remove_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'add_instance'
op|'('
name|'self'
op|'.'
name|'_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_used'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'remove_instance'
op|'('
name|'self'
op|'.'
name|'_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'_used'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_test_pass_limited
dedent|''
name|'def'
name|'test_test_pass_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'test'
op|'('
name|'self'
op|'.'
name|'_flavor'
op|','
op|'{'
string|"'vcpu'"
op|':'
number|'10'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|','
string|"'vcpu test failed when it should pass'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_test_pass_unlimited
dedent|''
name|'def'
name|'test_test_pass_unlimited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'test'
op|'('
name|'self'
op|'.'
name|'_big_flavor'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|','
string|"'vcpu test failed when it should pass'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_test_fail
dedent|''
name|'def'
name|'test_test_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'test'
op|'('
name|'self'
op|'.'
name|'_flavor'
op|','
op|'{'
string|"'vcpu'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'expected'
op|'='
string|"'Free CPUs 2.00 VCPUs < requested 5 VCPUs'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write
dedent|''
name|'def'
name|'test_write'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_vcpu'
op|'.'
name|'write'
op|'('
name|'resources'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'stats'"
op|':'
op|'{'
nl|'\n'
string|"'num_vcpus'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'num_vcpus_used'"
op|':'
number|'0'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'expected'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'resources'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
