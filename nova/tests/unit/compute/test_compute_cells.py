begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Compute w/ Cells\n"""'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'inspect'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'cells_api'
name|'as'
name|'compute_cells_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'compute'
name|'import'
name|'test_compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_flavor'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'uuidsentinel'
name|'as'
name|'uuids'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ORIG_COMPUTE_API
name|'ORIG_COMPUTE_API'
op|'='
name|'None'
newline|'\n'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'enable'"
op|','
string|"'nova.cells.opts'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|stub_call_to_cells
name|'def'
name|'stub_call_to_cells'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fn'
op|'='
name|'getattr'
op|'('
name|'ORIG_COMPUTE_API'
op|','
name|'method'
op|')'
newline|'\n'
name|'original_instance'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'original_instance'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'original_instance'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'original_instance'
newline|'\n'
comment|"# Restore this in 'child cell DB'"
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Use NoopQuotaDriver in child cells.'
nl|'\n'
dedent|''
name|'saved_quotas'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QuotaEngine'
op|'('
nl|'\n'
name|'quota_driver_class'
op|'='
name|'quota'
op|'.'
name|'NoopQuotaDriver'
op|'('
op|')'
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'fn'
op|'('
name|'context'
op|','
name|'instance'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'.'
name|'QUOTAS'
op|'='
name|'saved_quotas'
newline|'\n'
name|'compute_api'
op|'.'
name|'QUOTAS'
op|'='
name|'saved_quotas'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|stub_cast_to_cells
dedent|''
dedent|''
name|'def'
name|'stub_cast_to_cells'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fn'
op|'='
name|'getattr'
op|'('
name|'ORIG_COMPUTE_API'
op|','
name|'method'
op|')'
newline|'\n'
name|'original_instance'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'original_instance'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'original_instance'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'original_instance'
newline|'\n'
comment|"# Restore this in 'child cell DB'"
nl|'\n'
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Use NoopQuotaDriver in child cells.'
nl|'\n'
dedent|''
name|'saved_quotas'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
name|'quota'
op|'.'
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QuotaEngine'
op|'('
nl|'\n'
name|'quota_driver_class'
op|'='
name|'quota'
op|'.'
name|'NoopQuotaDriver'
op|'('
op|')'
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'('
name|'context'
op|','
name|'instance'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'.'
name|'QUOTAS'
op|'='
name|'saved_quotas'
newline|'\n'
name|'compute_api'
op|'.'
name|'QUOTAS'
op|'='
name|'saved_quotas'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|deploy_stubs
dedent|''
dedent|''
name|'def'
name|'deploy_stubs'
op|'('
name|'stubs'
op|','
name|'api'
op|','
name|'original_instance'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'call'
op|'='
name|'stub_call_to_cells'
newline|'\n'
name|'cast'
op|'='
name|'stub_cast_to_cells'
newline|'\n'
nl|'\n'
name|'if'
name|'original_instance'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'original_instance'
op|'='
name|'original_instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'stub_call_to_cells'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'cast'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'stub_cast_to_cells'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|','
string|"'_call_to_cells'"
op|','
name|'call'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|','
string|"'_cast_to_cells'"
op|','
name|'cast'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsComputeAPITestCase
dedent|''
name|'class'
name|'CellsComputeAPITestCase'
op|'('
name|'test_compute'
op|'.'
name|'ComputeAPITestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsComputeAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'global'
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'ORIG_COMPUTE_API'
op|'='
name|'self'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_validate_cell
name|'def'
name|'_fake_validate_cell'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|_nop_update
dedent|''
name|'def'
name|'_nop_update'
op|'('
name|'context'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_cells_api'
op|'.'
name|'ComputeCellsAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_validate_cell'"
op|','
nl|'\n'
name|'_fake_validate_cell'
op|')'
newline|'\n'
nl|'\n'
name|'deploy_stubs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'self'
op|'.'
name|'compute_api'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'super'
op|'('
name|'CellsComputeAPITestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_metadata
dedent|''
name|'def'
name|'test_instance_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Test is incompatible with cells."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate
dedent|''
name|'def'
name|'test_evacuate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Test is incompatible with cells."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_evacuate
dedent|''
name|'def'
name|'test_error_evacuate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Test is incompatible with cells."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_delete_instance_no_cell
dedent|''
name|'def'
name|'_test_delete_instance_no_cell'
op|'('
name|'self'
op|','
name|'method_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells_rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_local_delete'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'delete_type'
op|'='
name|'method_name'
op|'=='
string|"'soft_delete'"
name|'and'
string|"'soft'"
name|'or'
string|"'hard'"
newline|'\n'
name|'cells_rpcapi'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'inst'
op|','
name|'delete_type'
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'_local_delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|')'
op|','
nl|'\n'
name|'method_name'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'network_api'
op|','
string|"'deallocate_for_instance'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
name|'method_name'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_no_cell_constraint_failure_does_not_loop
dedent|''
name|'def'
name|'test_delete_instance_no_cell_constraint_failure_does_not_loop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'cell_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ObjectActionError'
op|'('
name|'action'
op|'='
string|"''"
op|','
nl|'\n'
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'refresh'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ObjectActionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_no_cell_constraint_failure_corrects_itself
dedent|''
dedent|''
name|'def'
name|'test_delete_instance_no_cell_constraint_failure_corrects_itself'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|add_cell_name
indent|'        '
name|'def'
name|'add_cell_name'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'delete_type'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'cell_name'
op|'='
string|"'fake_cell_name'"
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'delete'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|','
name|'side_effect'
op|'='
name|'add_cell_name'
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_delete_everywhere'
op|','
name|'mock_compute_delete'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'cell_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ObjectActionError'
op|'('
name|'action'
op|'='
string|"''"
op|','
nl|'\n'
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'refresh'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_compute_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_no_cell_destroy_fails_already_deleted
dedent|''
name|'def'
name|'test_delete_instance_no_cell_destroy_fails_already_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# If the instance.destroy() is reached during _local_delete,'
nl|'\n'
comment|'# it will raise ObjectActionError if the instance has already'
nl|'\n'
comment|'# been deleted by a instance_destroy_at_top, and instance.refresh()'
nl|'\n'
comment|'# will raise InstanceNotFound'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'destroy_instance'
op|','
nl|'\n'
name|'cell_name'
op|'='
name|'None'
op|')'
newline|'\n'
name|'actionerror'
op|'='
name|'exception'
op|'.'
name|'ObjectActionError'
op|'('
name|'action'
op|'='
string|"'destroy'"
op|','
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'delete'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_local_delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'actionerror'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|','
name|'side_effect'
op|'='
name|'notfound'
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_refresh'
op|','
name|'mock_local_delete'
op|','
name|'mock_delete_everywhere'
op|','
nl|'\n'
name|'mock_compute_delete'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'mock_delete_everywhere'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
string|"'hard'"
op|')'
newline|'\n'
name|'mock_local_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
string|"'delete'"
op|','
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_do_delete'
op|')'
newline|'\n'
name|'mock_refresh'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_compute_delete'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_no_cell_instance_not_found_already_deleted
dedent|''
name|'def'
name|'test_delete_instance_no_cell_instance_not_found_already_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# If anything in _local_delete accesses the instance causing a db'
nl|'\n'
comment|'# lookup before instance.destroy() is reached, if the instance has'
nl|'\n'
comment|'# already been deleted by a instance_destroy_at_top,'
nl|'\n'
comment|'# InstanceNotFound will be raised'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'uuids'
op|'.'
name|'delete_instance'
op|','
name|'cell_name'
op|'='
name|'None'
op|')'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'delete'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_local_delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'notfound'
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_local_delete'
op|','
name|'mock_delete_everywhere'
op|','
nl|'\n'
name|'mock_compute_delete'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'mock_delete_everywhere'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
string|"'hard'"
op|')'
newline|'\n'
name|'mock_local_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
string|"'delete'"
op|','
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_do_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_compute_delete'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_soft_delete_instance_no_cell
dedent|''
name|'def'
name|'test_soft_delete_instance_no_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete_instance_no_cell'
op|'('
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_no_cell
dedent|''
name|'def'
name|'test_delete_instance_no_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete_instance_no_cell'
op|'('
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_force_delete_instance_no_cell
dedent|''
name|'def'
name|'test_force_delete_instance_no_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_delete_instance_no_cell'
op|'('
string|"'force_delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations
dedent|''
name|'def'
name|'test_get_migrations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'cell_name'"
op|':'
string|"'ChildCell'"
op|','
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
newline|'\n'
name|'migrations'
op|'='
op|'{'
string|"'migrations'"
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1234'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'cells_rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_rpcapi'
op|','
string|"'get_migrations'"
op|')'
newline|'\n'
name|'cells_rpcapi'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migrations'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migrations'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_block_device_mapping
dedent|''
name|'def'
name|'test_create_block_device_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
op|'{'
string|"'swap'"
op|':'
number|'1'
op|','
string|"'ephemeral_gb'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'bdms'
op|'='
op|'['
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|'('
op|'{'
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|','
nl|'\n'
string|"'image_id'"
op|':'
string|"'fake-image'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_create_block_device_mapping'
op|'('
nl|'\n'
name|'instance_type'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'bdms'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'bdms'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_bdm_from_flavor
dedent|''
name|'def'
name|'test_create_bdm_from_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Test is incompatible with cells."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cells.messaging._TargetedMessage'"
op|')'
newline|'\n'
DECL|member|test_rebuild_sig
name|'def'
name|'test_rebuild_sig'
op|'('
name|'self'
op|','
name|'mock_msg'
op|')'
op|':'
newline|'\n'
comment|'# TODO(belliott) Cells could benefit from better testing to ensure API'
nl|'\n'
comment|'# and manager signatures stay up to date'
nl|'\n'
nl|'\n'
DECL|function|wire
indent|'        '
name|'def'
name|'wire'
op|'('
name|'version'
op|')'
op|':'
newline|'\n'
comment|'# wire the rpc cast directly to the manager method to make sure'
nl|'\n'
comment|'# the signature matches'
nl|'\n'
indent|'            '
name|'cells_mgr'
op|'='
name|'manager'
op|'.'
name|'CellsManager'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cast
name|'def'
name|'cast'
op|'('
name|'context'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fn'
op|'='
name|'getattr'
op|'('
name|'cells_mgr'
op|','
name|'method'
op|')'
newline|'\n'
name|'fn'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cells_mgr'
op|'.'
name|'cast'
op|'='
name|'cast'
newline|'\n'
name|'return'
name|'cells_mgr'
newline|'\n'
nl|'\n'
dedent|''
name|'cells_rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
name|'client'
op|'='
name|'cells_rpcapi'
op|'.'
name|'client'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'client'
op|','
string|"'prepare'"
op|','
name|'side_effect'
op|'='
name|'wire'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_fake_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'cell_name'
op|'='
string|"'mycell'"
newline|'\n'
nl|'\n'
name|'cells_rpcapi'
op|'.'
name|'rebuild_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
string|"'pass'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'recreate'
op|'='
name|'False'
op|','
nl|'\n'
name|'on_shared_storage'
op|'='
name|'False'
op|','
name|'host'
op|'='
string|"'host'"
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'True'
op|','
name|'kwargs'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# one targeted message should have been created'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mock_msg'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsConductorAPIRPCRedirect
dedent|''
dedent|''
name|'class'
name|'CellsConductorAPIRPCRedirect'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsConductorAPIRPCRedirect'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_cells_api'
op|'.'
name|'ComputeCellsAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_rpcapi'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
op|'.'
name|'cells_rpcapi'
op|'='
name|'self'
op|'.'
name|'cells_rpcapi'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_provision_instances'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_check_and_transform_bdm'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_and_build_base_options'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_checks_for_create_and_rebuild'"
op|')'
newline|'\n'
DECL|member|test_build_instances
name|'def'
name|'test_build_instances'
op|'('
name|'self'
op|','
name|'_checks_for_create_and_rebuild'
op|','
nl|'\n'
name|'_validate'
op|','
name|'_get_image'
op|','
name|'_check_bdm'
op|','
nl|'\n'
name|'_provision'
op|','
name|'_record_action_start'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_get_image'
op|'.'
name|'return_value'
op|'='
op|'('
name|'None'
op|','
string|"'fake-image'"
op|')'
newline|'\n'
name|'_validate'
op|'.'
name|'return_value'
op|'='
op|'('
op|'{'
op|'}'
op|','
number|'1'
op|')'
newline|'\n'
name|'_check_bdm'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'('
op|')'
newline|'\n'
name|'_provision'
op|'.'
name|'return_value'
op|'='
string|"'instances'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-flavor'"
op|','
string|"'fake-image'"
op|')'
newline|'\n'
nl|'\n'
comment|"# Subsequent tests in class are verifying the hooking.  We don't check"
nl|'\n'
comment|'# args since this is verified in compute test code.'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cells_rpcapi'
op|'.'
name|'build_instances'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_resize_cells_support'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'reserve_quota_delta'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'upsize_quota_delta'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'flavors'
op|','
string|"'extract_flavor'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_check_auto_disk_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_resize_instance
name|'def'
name|'test_resize_instance'
op|'('
name|'self'
op|','
name|'_bdms'
op|','
name|'_check'
op|','
name|'_extract'
op|','
name|'_save'
op|','
name|'_upsize'
op|','
nl|'\n'
name|'_reserve'
op|','
name|'_cells'
op|','
name|'_record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'test_flavor'
op|'.'
name|'fake_flavor'
op|')'
newline|'\n'
name|'_extract'
op|'.'
name|'return_value'
op|'='
name|'flavor'
newline|'\n'
name|'orig_system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'cell_name'
op|'='
string|"'fake-cell'"
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'orig_system_metadata'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
name|'instance'
op|'.'
name|'old_flavor'
op|'='
name|'instance'
op|'.'
name|'new_flavor'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cells_rpcapi'
op|'.'
name|'resize_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'RequestSpec'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_live_migrate_instance
name|'def'
name|'test_live_migrate_instance'
op|'('
name|'self'
op|','
name|'instance_save'
op|','
name|'_record'
op|','
name|'_get_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'cell_name'
op|'='
string|"'fake-cell'"
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'orig_system_metadata'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'live_migrate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'True'
op|','
name|'True'
op|','
string|"'fake_dest_host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cells_rpcapi'
op|'.'
name|'live_migrate_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_flavor'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_check_auto_disk_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_checks_for_create_and_rebuild'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
DECL|member|test_rebuild_instance
name|'def'
name|'test_rebuild_instance'
op|'('
name|'self'
op|','
name|'_record_action_start'
op|','
nl|'\n'
name|'_checks_for_create_and_rebuild'
op|','
name|'_check_auto_disk_config'
op|','
nl|'\n'
name|'_get_image'
op|','
name|'bdm_get_by_instance_uuid'
op|','
name|'get_flavor'
op|','
name|'instance_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_system_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'cell_name'
op|'='
string|"'fake-cell'"
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'orig_system_metadata'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'get_flavor'
op|'.'
name|'return_value'
op|'='
string|"''"
newline|'\n'
name|'image_href'
op|'='
string|"''"
newline|'\n'
name|'image'
op|'='
op|'{'
string|'"min_ram"'
op|':'
number|'10'
op|','
string|'"min_disk"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"properties"'
op|':'
op|'{'
string|"'architecture'"
op|':'
string|"'x86_64'"
op|'}'
op|'}'
newline|'\n'
name|'admin_pass'
op|'='
string|"''"
newline|'\n'
name|'files_to_inject'
op|'='
op|'['
op|']'
newline|'\n'
name|'bdms'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'_get_image'
op|'.'
name|'return_value'
op|'='
op|'('
name|'None'
op|','
name|'image'
op|')'
newline|'\n'
name|'bdm_get_by_instance_uuid'
op|'.'
name|'return_value'
op|'='
name|'bdms'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'rebuild'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_href'
op|','
nl|'\n'
name|'admin_pass'
op|','
name|'files_to_inject'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cells_rpcapi'
op|'.'
name|'rebuild_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_equal
dedent|''
name|'def'
name|'test_check_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'task_api'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_task_api'
newline|'\n'
name|'tests'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'value'
op|')'
name|'in'
name|'inspect'
op|'.'
name|'getmembers'
op|'('
name|'self'
op|','
name|'inspect'
op|'.'
name|'ismethod'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
op|'.'
name|'startswith'
op|'('
string|"'test_'"
op|')'
name|'and'
name|'name'
op|'!='
string|"'test_check_equal'"
op|':'
newline|'\n'
indent|'                '
name|'tests'
op|'.'
name|'add'
op|'('
name|'name'
op|'['
number|'5'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'tests'
op|'!='
name|'set'
op|'('
name|'task_api'
op|'.'
name|'cells_compatible'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Testcases not equivalent to cells_compatible list"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsComputePolicyTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'CellsComputePolicyTestCase'
op|'('
name|'test_compute'
op|'.'
name|'ComputePolicyTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsComputePolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'global'
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'ORIG_COMPUTE_API'
op|'='
name|'self'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_cells_api'
op|'.'
name|'ComputeCellsAPI'
op|'('
op|')'
newline|'\n'
name|'deploy_stubs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'self'
op|'.'
name|'compute_api'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'ORIG_COMPUTE_API'
newline|'\n'
name|'super'
op|'('
name|'CellsComputePolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
