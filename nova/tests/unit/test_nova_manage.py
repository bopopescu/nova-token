begin_unit
comment|'#    Copyright 2011 OpenStack Foundation'
nl|'\n'
comment|'#    Copyright 2011 Ilya Alekseyev'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cmd'
name|'import'
name|'manage'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'migration'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'migration'
name|'as'
name|'sqla_migration'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'db'
name|'import'
name|'fakes'
name|'as'
name|'db_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'test_flavors'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIpCommandsTestCase
name|'class'
name|'FixedIpCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FixedIpCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_network_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'FixedIpCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reserve
dedent|''
name|'def'
name|'test_reserve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'reserve'
op|'('
string|"'192.168.0.100'"
op|')'
newline|'\n'
name|'address'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
string|"'192.168.0.100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'address'
op|'['
string|"'reserved'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reserve_nonexistent_address
dedent|''
name|'def'
name|'test_reserve_nonexistent_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'reserve'
op|'('
string|"'55.55.55.55'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unreserve
dedent|''
name|'def'
name|'test_unreserve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'unreserve'
op|'('
string|"'192.168.0.100'"
op|')'
newline|'\n'
name|'address'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
string|"'192.168.0.100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'address'
op|'['
string|"'reserved'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unreserve_nonexistent_address
dedent|''
name|'def'
name|'test_unreserve_nonexistent_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'unreserve'
op|'('
string|"'55.55.55.55'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list
dedent|''
name|'def'
name|'test_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'sys.stdout'"
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'1'
op|','
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
op|'.'
name|'find'
op|'('
string|"'192.168.0.100'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_just_one_host
dedent|''
name|'def'
name|'test_list_just_one_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_fixed_ip_get_by_host
indent|'        '
name|'def'
name|'fake_fixed_ip_get_by_host'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'db_fakes'
op|'.'
name|'fixed_ip_fields'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.db.fixed_ip_get_by_host'"
op|','
nl|'\n'
name|'fake_fixed_ip_get_by_host'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'sys.stdout'"
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
string|"'banana'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'1'
op|','
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
op|'.'
name|'find'
op|'('
string|"'192.168.0.100'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIpCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'FloatingIpCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FloatingIpCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_network_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'FloatingIpCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_address_to_hosts
dedent|''
name|'def'
name|'test_address_to_hosts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|assert_loop
indent|'        '
name|'def'
name|'assert_loop'
op|'('
name|'result'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ip'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'str'
op|'('
name|'ip'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'address_to_hosts'
op|'='
name|'self'
op|'.'
name|'commands'
op|'.'
name|'address_to_hosts'
newline|'\n'
comment|'# /32 and /31'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
name|'address_to_hosts'
op|','
nl|'\n'
string|"'192.168.100.1/32'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
name|'address_to_hosts'
op|','
nl|'\n'
string|"'192.168.100.1/31'"
op|')'
newline|'\n'
comment|'# /30'
nl|'\n'
name|'expected'
op|'='
op|'['
string|'"192.168.100.%s"'
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'3'
op|')'
op|']'
newline|'\n'
name|'result'
op|'='
name|'address_to_hosts'
op|'('
string|"'192.168.100.0/30'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'list'
op|'('
name|'result'
op|')'
op|')'
op|')'
newline|'\n'
name|'assert_loop'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# /29'
nl|'\n'
name|'expected'
op|'='
op|'['
string|'"192.168.100.%s"'
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'7'
op|')'
op|']'
newline|'\n'
name|'result'
op|'='
name|'address_to_hosts'
op|'('
string|"'192.168.100.0/29'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'len'
op|'('
name|'list'
op|'('
name|'result'
op|')'
op|')'
op|')'
newline|'\n'
name|'assert_loop'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# /28'
nl|'\n'
name|'expected'
op|'='
op|'['
string|'"192.168.100.%s"'
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'15'
op|')'
op|']'
newline|'\n'
name|'result'
op|'='
name|'address_to_hosts'
op|'('
string|"'192.168.100.0/28'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'14'
op|','
name|'len'
op|'('
name|'list'
op|'('
name|'result'
op|')'
op|')'
op|')'
newline|'\n'
name|'assert_loop'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# /16'
nl|'\n'
name|'result'
op|'='
name|'address_to_hosts'
op|'('
string|"'192.168.100.0/16'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'65534'
op|','
name|'len'
op|'('
name|'list'
op|'('
name|'result'
op|')'
op|')'
op|')'
newline|'\n'
comment|"# NOTE(dripton): I don't test /13 because it makes the test take 3s."
nl|'\n'
comment|'# /12 gives over a million IPs, which is ridiculous.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
name|'address_to_hosts'
op|','
nl|'\n'
string|"'192.168.100.1/12'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'NetworkCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NetworkCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'NetworkCommands'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'net'
op|'='
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'dead:beef::/64'"
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'dead:beef::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa0'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.0.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'8.8.8.8'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'8.8.4.4'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'vlan_start'"
op|':'
number|'201'
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'10.0.0.2'"
op|','
nl|'\n'
string|"'vpn_public_port'"
op|':'
string|"'2222'"
op|','
nl|'\n'
string|"'vpn_private_address'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.0.3'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_network_get_by_cidr
name|'def'
name|'fake_network_get_by_cidr'
op|'('
name|'context'
op|','
name|'cidr'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cidr'
op|','
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'cidr'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'db_fakes'
op|'.'
name|'FakeModel'
op|'('
name|'dict'
op|'('
name|'test_network'
op|'.'
name|'fake_network'
op|','
nl|'\n'
op|'**'
name|'self'
op|'.'
name|'fake_net'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_get_by_uuid
dedent|''
name|'def'
name|'fake_network_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuid'
op|','
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'db_fakes'
op|'.'
name|'FakeModel'
op|'('
name|'dict'
op|'('
name|'test_network'
op|'.'
name|'fake_network'
op|','
nl|'\n'
op|'**'
name|'self'
op|'.'
name|'fake_net'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_update
dedent|''
name|'def'
name|'fake_network_update'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network_id'
op|','
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'values'
op|','
name|'self'
op|'.'
name|'fake_update_value'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'fake_network_get_by_cidr'
op|'='
name|'fake_network_get_by_cidr'
newline|'\n'
name|'self'
op|'.'
name|'fake_network_get_by_uuid'
op|'='
name|'fake_network_get_by_uuid'
newline|'\n'
name|'self'
op|'.'
name|'fake_network_update'
op|'='
name|'fake_network_update'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_create_networks
indent|'        '
name|'def'
name|'fake_create_networks'
op|'('
name|'obj'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'label'"
op|']'
op|','
string|"'Test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'cidr'"
op|']'
op|','
string|"'10.2.0.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'multi_host'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'num_networks'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'network_size'"
op|']'
op|','
number|'256'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'vlan'"
op|']'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'vlan_start'"
op|']'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'vpn_start'"
op|']'
op|','
number|'2000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'cidr_v6'"
op|']'
op|','
string|"'fd00:2::/120'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'gateway'"
op|']'
op|','
string|"'10.2.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'gateway_v6'"
op|']'
op|','
string|"'fd00:2::22'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'bridge'"
op|']'
op|','
string|"'br200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'bridge_interface'"
op|']'
op|','
string|"'eth0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'dns1'"
op|']'
op|','
string|"'8.8.8.8'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'dns2'"
op|']'
op|','
string|"'8.8.4.4'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_manager'
op|'='
string|"'nova.network.manager.VlanManager'"
op|')'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'manager'
name|'as'
name|'net_manager'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'net_manager'
op|'.'
name|'VlanManager'
op|','
string|"'create_networks'"
op|','
nl|'\n'
name|'fake_create_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'create'
op|'('
nl|'\n'
name|'label'
op|'='
string|"'Test'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.0.0/24'"
op|','
nl|'\n'
name|'num_networks'
op|'='
number|'1'
op|','
nl|'\n'
name|'network_size'
op|'='
number|'256'
op|','
nl|'\n'
name|'multi_host'
op|'='
string|"'F'"
op|','
nl|'\n'
name|'vlan'
op|'='
number|'200'
op|','
nl|'\n'
name|'vlan_start'
op|'='
number|'201'
op|','
nl|'\n'
name|'vpn_start'
op|'='
number|'2000'
op|','
nl|'\n'
name|'cidr_v6'
op|'='
string|"'fd00:2::/120'"
op|','
nl|'\n'
name|'gateway'
op|'='
string|"'10.2.0.1'"
op|','
nl|'\n'
name|'gateway_v6'
op|'='
string|"'fd00:2::22'"
op|','
nl|'\n'
name|'bridge'
op|'='
string|"'br200'"
op|','
nl|'\n'
name|'bridge_interface'
op|'='
string|"'eth0'"
op|','
nl|'\n'
name|'dns1'
op|'='
string|"'8.8.8.8'"
op|','
nl|'\n'
name|'dns2'
op|'='
string|"'8.8.4.4'"
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list
dedent|''
name|'def'
name|'test_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_network_get_all
indent|'        '
name|'def'
name|'fake_network_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'db_fakes'
op|'.'
name|'FakeModel'
op|'('
name|'self'
op|'.'
name|'net'
op|')'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_all'"
op|','
name|'fake_network_get_all'
op|')'
newline|'\n'
name|'output'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'output'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'__stdout__'
newline|'\n'
name|'result'
op|'='
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'_fmt'
op|'='
string|'"\\t"'
op|'.'
name|'join'
op|'('
op|'['
string|'"%(id)-5s"'
op|','
string|'"%(cidr)-18s"'
op|','
string|'"%(cidr_v6)-15s"'
op|','
nl|'\n'
string|'"%(dhcp_start)-15s"'
op|','
string|'"%(dns1)-15s"'
op|','
string|'"%(dns2)-15s"'
op|','
nl|'\n'
string|'"%(vlan)-15s"'
op|','
string|'"%(project_id)-15s"'
op|','
string|'"%(uuid)-15s"'
op|']'
op|')'
newline|'\n'
name|'head'
op|'='
name|'_fmt'
op|'%'
op|'{'
string|"'id'"
op|':'
string|"'id'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'IPv4'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'IPv6'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'start address'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'DNS1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'DNS2'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
string|"'VlanID'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'project'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"uuid"'
op|'}'
newline|'\n'
name|'body'
op|'='
name|'_fmt'
op|'%'
op|'{'
string|"'id'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'cidr'"
op|']'
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'cidr_v6'"
op|']'
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'dhcp_start'"
op|']'
op|','
nl|'\n'
string|"'dns1'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'dns1'"
op|']'
op|','
nl|'\n'
string|"'dns2'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'dns2'"
op|']'
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'vlan'"
op|']'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'net'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'answer'
op|'='
string|"'%s\\n%s\\n'"
op|'%'
op|'('
name|'head'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'answer'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fake_net'
op|'='
name|'self'
op|'.'
name|'net'
newline|'\n'
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'host'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_by_uuid'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_get_by_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_delete_safe
name|'def'
name|'fake_network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network_id'
op|','
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_delete_safe'"
op|','
name|'fake_network_delete_safe'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'delete'
op|'('
name|'uuid'
op|'='
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_by_cidr
dedent|''
name|'def'
name|'test_delete_by_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fake_net'
op|'='
name|'self'
op|'.'
name|'net'
newline|'\n'
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'host'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_by_cidr'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_get_by_cidr'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_delete_safe
name|'def'
name|'fake_network_delete_safe'
op|'('
name|'context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'context'
op|'.'
name|'to_dict'
op|'('
op|')'
op|'['
string|"'is_admin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network_id'
op|','
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_delete_safe'"
op|','
name|'fake_network_delete_safe'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'delete'
op|'('
name|'fixed_range'
op|'='
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'cidr'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_modify_base
dedent|''
name|'def'
name|'_test_modify_base'
op|'('
name|'self'
op|','
name|'update_value'
op|','
name|'project'
op|','
name|'host'
op|','
name|'dis_project'
op|'='
name|'None'
op|','
nl|'\n'
name|'dis_host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fake_net'
op|'='
name|'self'
op|'.'
name|'net'
newline|'\n'
name|'self'
op|'.'
name|'fake_update_value'
op|'='
name|'update_value'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_by_cidr'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_get_by_cidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_update'"
op|','
name|'self'
op|'.'
name|'fake_network_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'modify'
op|'('
name|'self'
op|'.'
name|'fake_net'
op|'['
string|"'cidr'"
op|']'
op|','
name|'project'
op|'='
name|'project'
op|','
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'dis_project'
op|'='
name|'dis_project'
op|','
name|'dis_host'
op|'='
name|'dis_host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_associate
dedent|''
name|'def'
name|'test_modify_associate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_modify_base'
op|'('
name|'update_value'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'test_project'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'test_host'"
op|'}'
op|','
nl|'\n'
name|'project'
op|'='
string|"'test_project'"
op|','
name|'host'
op|'='
string|"'test_host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_unchanged
dedent|''
name|'def'
name|'test_modify_unchanged'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_modify_base'
op|'('
name|'update_value'
op|'='
op|'{'
op|'}'
op|','
name|'project'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_disassociate
dedent|''
name|'def'
name|'test_modify_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_modify_base'
op|'('
name|'update_value'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'None'
op|','
string|"'host'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'project'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'dis_project'
op|'='
name|'True'
op|','
nl|'\n'
name|'dis_host'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NeutronV2NetworkCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'NeutronV2NetworkCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NeutronV2NetworkCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'NetworkCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list
dedent|''
name|'def'
name|'test_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify
dedent|''
name|'def'
name|'test_modify'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'modify'
op|'('
string|"'192.168.0.1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProjectCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'ProjectCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ProjectCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'ProjectCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota
dedent|''
name|'def'
name|'test_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'output'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'quota'
op|'('
name|'project_id'
op|'='
string|"'admin'"
op|','
nl|'\n'
name|'key'
op|'='
string|"'instances'"
op|','
nl|'\n'
name|'value'
op|'='
string|"'unlimited'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'__stdout__'
newline|'\n'
name|'result'
op|'='
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'print_format'
op|'='
string|'"%-36s %-10s"'
op|'%'
op|'('
string|"'instances'"
op|','
string|"'unlimited'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'print_format'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quota_update_invalid_key
dedent|''
name|'def'
name|'test_quota_update_invalid_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'quota'
op|'('
string|"'admin'"
op|','
string|"'volumes1'"
op|','
string|"'10'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VmCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'VmCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VmCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'VmCommands'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'test_flavors'
op|'.'
name|'DEFAULT_FLAVORS'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_without_host
dedent|''
name|'def'
name|'test_list_without_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'output'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_filters'"
op|')'
name|'as'
name|'get'
op|':'
newline|'\n'
indent|'            '
name|'get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'host'
op|'='
string|"'foo-host'"
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'fake_flavor'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'('
string|"'flavor'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'__stdout__'
newline|'\n'
name|'result'
op|'='
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'node'"
op|','
name|'result'
op|')'
comment|'# check the header line'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'m1.tiny'"
op|','
name|'result'
op|')'
comment|'# flavor.name'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'foo-host'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_with_host
dedent|''
name|'def'
name|'test_list_with_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'output'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
string|"'get_by_host'"
op|')'
name|'as'
name|'get'
op|':'
newline|'\n'
indent|'            '
name|'get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstanceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'fake_flavor'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'('
string|"'flavor'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'list'
op|'('
name|'host'
op|'='
string|"'fake-host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'__stdout__'
newline|'\n'
name|'result'
op|'='
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'node'"
op|','
name|'result'
op|')'
comment|'# check the header line'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'m1.tiny'"
op|','
name|'result'
op|')'
comment|'# flavor.name'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'fake-host'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DBCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'DBCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DBCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'DbCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows_negative
dedent|''
name|'def'
name|'test_archive_deleted_rows_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'archive_deleted_rows'
op|'('
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'migration'
op|','
string|"'db_null_instance_uuid_scan'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
DECL|member|test_null_instance_uuid_scan_no_records_found
name|'def'
name|'test_null_instance_uuid_scan_no_records_found'
op|'('
name|'self'
op|','
name|'mock_scan'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'sys.stdout'"
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'null_instance_uuid_scan'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"There were no records found"'
op|','
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'migration'
op|','
string|"'db_null_instance_uuid_scan'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|','
string|"'bar'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
DECL|member|_test_null_instance_uuid_scan
name|'def'
name|'_test_null_instance_uuid_scan'
op|'('
name|'self'
op|','
name|'mock_scan'
op|','
name|'delete'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'sys.stdout'"
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'null_instance_uuid_scan'
op|'('
name|'delete'
op|')'
newline|'\n'
name|'output'
op|'='
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"Deleted 1 records from table \'foo\'."'
op|','
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|'"Deleted 0 records from table \'bar\'."'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"1 records in the \'foo\' table"'
op|','
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|'"0 records in the \'bar\' table"'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|'"There were no records found"'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_null_instance_uuid_scan_readonly
dedent|''
name|'def'
name|'test_null_instance_uuid_scan_readonly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_null_instance_uuid_scan'
op|'('
name|'delete'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_null_instance_uuid_scan_delete
dedent|''
name|'def'
name|'test_null_instance_uuid_scan_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_null_instance_uuid_scan'
op|'('
name|'delete'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_flavor_data_negative
dedent|''
name|'def'
name|'test_migrate_flavor_data_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'migrate_flavor_data'
op|'('
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqla_migration'
op|','
string|"'db_version'"
op|','
name|'return_value'
op|'='
number|'2'
op|')'
newline|'\n'
DECL|member|test_version
name|'def'
name|'test_version'
op|'('
name|'self'
op|','
name|'sqla_migrate'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'version'
op|'('
op|')'
newline|'\n'
name|'sqla_migrate'
op|'.'
name|'assert_called_once_with'
op|'('
name|'database'
op|'='
string|"'main'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqla_migration'
op|','
string|"'db_sync'"
op|')'
newline|'\n'
DECL|member|test_sync
name|'def'
name|'test_sync'
op|'('
name|'self'
op|','
name|'sqla_sync'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'sync'
op|'('
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'sqla_sync'
op|'.'
name|'assert_called_once_with'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'database'
op|'='
string|"'main'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ApiDbCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'ApiDbCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ApiDbCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'ApiDbCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqla_migration'
op|','
string|"'db_version'"
op|','
name|'return_value'
op|'='
number|'2'
op|')'
newline|'\n'
DECL|member|test_version
name|'def'
name|'test_version'
op|'('
name|'self'
op|','
name|'sqla_migrate'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'version'
op|'('
op|')'
newline|'\n'
name|'sqla_migrate'
op|'.'
name|'assert_called_once_with'
op|'('
name|'database'
op|'='
string|"'api'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'sqla_migration'
op|','
string|"'db_sync'"
op|')'
newline|'\n'
DECL|member|test_sync
name|'def'
name|'test_sync'
op|'('
name|'self'
op|','
name|'sqla_sync'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'commands'
op|'.'
name|'sync'
op|'('
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'sqla_sync'
op|'.'
name|'assert_called_once_with'
op|'('
name|'version'
op|'='
number|'4'
op|','
name|'database'
op|'='
string|"'api'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServiceCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'ServiceCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServiceCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'ServiceCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_enable_invalid_params
dedent|''
name|'def'
name|'test_service_enable_invalid_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'enable'
op|'('
string|"'nohost'"
op|','
string|"'noservice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_disable_invalid_params
dedent|''
name|'def'
name|'test_service_disable_invalid_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'commands'
op|'.'
name|'disable'
op|'('
string|"'nohost'"
op|','
string|"'noservice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellCommandsTestCase
dedent|''
dedent|''
name|'class'
name|'CellCommandsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellCommandsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'='
name|'manage'
op|'.'
name|'CellCommands'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_multiple
dedent|''
name|'def'
name|'test_create_transport_hosts_multiple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method\n        when broker_hosts is set.\n        """'
newline|'\n'
name|'brokers'
op|'='
string|'"127.0.0.1:5672,127.0.0.2:5671"'
newline|'\n'
name|'thosts'
op|'='
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|'('
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'broker_hosts'
op|'='
name|'brokers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'thosts'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'127.0.0.1'"
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'hostname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5672'
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'127.0.0.2'"
op|','
name|'thosts'
op|'['
number|'1'
op|']'
op|'.'
name|'hostname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5671'
op|','
name|'thosts'
op|'['
number|'1'
op|']'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_single
dedent|''
name|'def'
name|'test_create_transport_hosts_single'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method when hostname is passed."""'
newline|'\n'
name|'thosts'
op|'='
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|'('
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'port'
op|'='
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'thosts'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'127.0.0.1'"
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'hostname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'80'
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_single_broker
dedent|''
name|'def'
name|'test_create_transport_hosts_single_broker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method for single broker_hosts."""'
newline|'\n'
name|'thosts'
op|'='
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|'('
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:5672'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'thosts'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'127.0.0.1'"
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'hostname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5672'
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_both
dedent|''
name|'def'
name|'test_create_transport_hosts_both'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method when both broker_hosts\n        and hostname/port are passed.\n        """'
newline|'\n'
name|'thosts'
op|'='
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|'('
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:5672'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'127.0.0.2'"
op|','
name|'port'
op|'='
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'thosts'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'127.0.0.1'"
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'hostname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5672'
op|','
name|'thosts'
op|'['
number|'0'
op|']'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_wrong_val
dedent|''
name|'def'
name|'test_create_transport_hosts_wrong_val'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method when broker_hosts\n        is wrongly sepcified\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|','
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:5672,127.0.0.1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_wrong_port_val
dedent|''
name|'def'
name|'test_create_transport_hosts_wrong_port_val'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method when port in\n        broker_hosts is wrongly sepcified\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|','
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_transport_hosts_wrong_port_arg
dedent|''
name|'def'
name|'test_create_transport_hosts_wrong_port_arg'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the _create_transport_hosts method when port\n        argument is wrongly sepcified\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'_create_transport_hosts'
op|','
nl|'\n'
string|"'guest'"
op|','
string|"'devstack'"
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'127.0.0.1'"
op|','
name|'port'
op|'='
string|"'ab'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'cell_create'"
op|')'
newline|'\n'
DECL|member|test_create_broker_hosts
name|'def'
name|'test_create_broker_hosts'
op|'('
name|'self'
op|','
name|'mock_db_cell_create'
op|','
name|'mock_ctxt'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the create function when broker_hosts is\n        passed\n        """'
newline|'\n'
name|'cell_tp_url'
op|'='
string|'"fake://guest:devstack@127.0.0.1:5432"'
newline|'\n'
name|'cell_tp_url'
op|'+='
string|'",guest:devstack@127.0.0.2:9999/"'
newline|'\n'
name|'ctxt'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'mock_ctxt'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'create'
op|'('
string|'"test"'
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:5432,127.0.0.2:9999'"
op|','
nl|'\n'
name|'woffset'
op|'='
number|'0'
op|','
name|'wscale'
op|'='
number|'0'
op|','
nl|'\n'
name|'username'
op|'='
string|'"guest"'
op|','
name|'password'
op|'='
string|'"devstack"'
op|')'
newline|'\n'
name|'exp_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|'"test"'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'transport_url'"
op|':'
name|'cell_tp_url'
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
number|'0.0'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
number|'0.0'
op|'}'
newline|'\n'
name|'mock_db_cell_create'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'exp_values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'cell_create'"
op|')'
newline|'\n'
DECL|member|test_create_broker_hosts_with_url_decoding_fix
name|'def'
name|'test_create_broker_hosts_with_url_decoding_fix'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_db_cell_create'
op|','
nl|'\n'
name|'mock_ctxt'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the create function when broker_hosts is\n        passed\n        """'
newline|'\n'
name|'cell_tp_url'
op|'='
string|'"fake://the=user:the=password@127.0.0.1:5432/"'
newline|'\n'
name|'ctxt'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'mock_ctxt'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'create'
op|'('
string|'"test"'
op|','
nl|'\n'
name|'broker_hosts'
op|'='
string|"'127.0.0.1:5432'"
op|','
nl|'\n'
name|'woffset'
op|'='
number|'0'
op|','
name|'wscale'
op|'='
number|'0'
op|','
nl|'\n'
name|'username'
op|'='
string|'"the=user"'
op|','
nl|'\n'
name|'password'
op|'='
string|'"the=password"'
op|')'
newline|'\n'
name|'exp_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|'"test"'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'transport_url'"
op|':'
name|'cell_tp_url'
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
number|'0.0'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
number|'0.0'
op|'}'
newline|'\n'
name|'mock_db_cell_create'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'exp_values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'cell_create'"
op|')'
newline|'\n'
DECL|member|test_create_hostname
name|'def'
name|'test_create_hostname'
op|'('
name|'self'
op|','
name|'mock_db_cell_create'
op|','
name|'mock_ctxt'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test the create function when hostname and port is\n        passed\n        """'
newline|'\n'
name|'cell_tp_url'
op|'='
string|'"fake://guest:devstack@127.0.0.1:9999/"'
newline|'\n'
name|'ctxt'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'mock_ctxt'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
newline|'\n'
name|'self'
op|'.'
name|'commands'
op|'.'
name|'create'
op|'('
string|'"test"'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'127.0.0.1'"
op|','
name|'port'
op|'='
string|'"9999"'
op|','
nl|'\n'
name|'woffset'
op|'='
number|'0'
op|','
name|'wscale'
op|'='
number|'0'
op|','
nl|'\n'
name|'username'
op|'='
string|'"guest"'
op|','
name|'password'
op|'='
string|'"devstack"'
op|')'
newline|'\n'
name|'exp_values'
op|'='
op|'{'
string|"'name'"
op|':'
string|'"test"'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'transport_url'"
op|':'
name|'cell_tp_url'
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
number|'0.0'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
number|'0.0'
op|'}'
newline|'\n'
name|'mock_db_cell_create'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'exp_values'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
