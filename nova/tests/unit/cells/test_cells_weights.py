begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nUnit Tests for testing the cells weight algorithms.\n\nCells with higher weights should be given priority for new builds.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'weights'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeCellState
name|'class'
name|'FakeCellState'
op|'('
name|'state'
op|'.'
name|'CellState'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeCellState'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'cell_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'capacities'
op|'['
string|"'ram_free'"
op|']'
op|'='
op|'{'
string|"'total_mb'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'units_by_mb'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'db_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_update_ram_free
dedent|''
name|'def'
name|'_update_ram_free'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ram_free'
op|'='
name|'self'
op|'.'
name|'capacities'
op|'['
string|"'ram_free'"
op|']'
newline|'\n'
name|'for'
name|'ram_size'
op|','
name|'units'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'ram_free'
op|'['
string|"'total_mb'"
op|']'
op|'+='
name|'units'
op|'*'
name|'ram_size'
newline|'\n'
name|'ram_free'
op|'['
string|"'units_by_mb'"
op|']'
op|'['
name|'str'
op|'('
name|'ram_size'
op|')'
op|']'
op|'='
name|'units'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_fake_cells
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_fake_cells'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'cell1'
op|'='
name|'FakeCellState'
op|'('
string|"'cell1'"
op|')'
newline|'\n'
name|'cell1'
op|'.'
name|'_update_ram_free'
op|'('
op|'('
number|'512'
op|','
number|'1'
op|')'
op|','
op|'('
number|'1024'
op|','
number|'4'
op|')'
op|','
op|'('
number|'2048'
op|','
number|'3'
op|')'
op|')'
newline|'\n'
name|'cell1'
op|'.'
name|'db_info'
op|'['
string|"'weight_offset'"
op|']'
op|'='
op|'-'
number|'200.0'
newline|'\n'
name|'cell2'
op|'='
name|'FakeCellState'
op|'('
string|"'cell2'"
op|')'
newline|'\n'
name|'cell2'
op|'.'
name|'_update_ram_free'
op|'('
op|'('
number|'512'
op|','
number|'2'
op|')'
op|','
op|'('
number|'1024'
op|','
number|'3'
op|')'
op|','
op|'('
number|'2048'
op|','
number|'4'
op|')'
op|')'
newline|'\n'
name|'cell2'
op|'.'
name|'db_info'
op|'['
string|"'weight_offset'"
op|']'
op|'='
op|'-'
number|'200.1'
newline|'\n'
name|'cell3'
op|'='
name|'FakeCellState'
op|'('
string|"'cell3'"
op|')'
newline|'\n'
name|'cell3'
op|'.'
name|'_update_ram_free'
op|'('
op|'('
number|'512'
op|','
number|'3'
op|')'
op|','
op|'('
number|'1024'
op|','
number|'2'
op|')'
op|','
op|'('
number|'2048'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
name|'cell3'
op|'.'
name|'db_info'
op|'['
string|"'weight_offset'"
op|']'
op|'='
number|'400.0'
newline|'\n'
name|'cell4'
op|'='
name|'FakeCellState'
op|'('
string|"'cell4'"
op|')'
newline|'\n'
name|'cell4'
op|'.'
name|'_update_ram_free'
op|'('
op|'('
number|'512'
op|','
number|'4'
op|')'
op|','
op|'('
number|'1024'
op|','
number|'1'
op|')'
op|','
op|'('
number|'2048'
op|','
number|'2'
op|')'
op|')'
newline|'\n'
name|'cell4'
op|'.'
name|'db_info'
op|'['
string|"'weight_offset'"
op|']'
op|'='
number|'300.0'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'cell1'
op|','
name|'cell2'
op|','
name|'cell3'
op|','
name|'cell4'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsWeightsTestCase
dedent|''
name|'class'
name|'CellsWeightsTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Makes sure the proper weighers are in the directory."""'
newline|'\n'
nl|'\n'
DECL|member|test_all_weighers
name|'def'
name|'test_all_weighers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'weighers'
op|'='
name|'weights'
op|'.'
name|'all_weighers'
op|'('
op|')'
newline|'\n'
comment|'# Check at least a couple that we expect are there'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'weighers'
op|')'
op|'>='
number|'2'
op|')'
newline|'\n'
name|'class_names'
op|'='
op|'['
name|'cls'
op|'.'
name|'__name__'
name|'for'
name|'cls'
name|'in'
name|'weighers'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'WeightOffsetWeigher'"
op|','
name|'class_names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'RamByInstanceTypeWeigher'"
op|','
name|'class_names'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_WeigherTestClass
dedent|''
dedent|''
name|'class'
name|'_WeigherTestClass'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for testing individual weigher plugins."""'
newline|'\n'
DECL|variable|weigher_cls_name
name|'weigher_cls_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_WeigherTestClass'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'weight_handler'
op|'='
name|'weights'
op|'.'
name|'CellWeightHandler'
op|'('
op|')'
newline|'\n'
name|'weigher_classes'
op|'='
name|'self'
op|'.'
name|'weight_handler'
op|'.'
name|'get_matching_classes'
op|'('
nl|'\n'
op|'['
name|'self'
op|'.'
name|'weigher_cls_name'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'weighers'
op|'='
op|'['
name|'cls'
op|'('
op|')'
name|'for'
name|'cls'
name|'in'
name|'weigher_classes'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_weighed_cells
dedent|''
name|'def'
name|'_get_weighed_cells'
op|'('
name|'self'
op|','
name|'cells'
op|','
name|'weight_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'weight_handler'
op|'.'
name|'get_weighed_objects'
op|'('
name|'self'
op|'.'
name|'weighers'
op|','
nl|'\n'
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RAMByInstanceTypeWeigherTestClass
dedent|''
dedent|''
name|'class'
name|'RAMByInstanceTypeWeigherTestClass'
op|'('
name|'_WeigherTestClass'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|weigher_cls_name
indent|'    '
name|'weigher_cls_name'
op|'='
op|'('
string|"'nova.cells.weights.ram_by_instance_type.'"
nl|'\n'
string|"'RamByInstanceTypeWeigher'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_spreading
name|'def'
name|'test_default_spreading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cells with more ram available return a higher weight."""'
newline|'\n'
name|'cells'
op|'='
name|'_get_fake_cells'
op|'('
op|')'
newline|'\n'
comment|'# Simulate building a new 512MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'512'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'3'
op|']'
op|','
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|','
name|'cells'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
comment|'# Simulate building a new 1024MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|','
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'3'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
comment|'# Simulate building a new 2048MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'2048'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'1'
op|']'
op|','
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'cells'
op|'['
number|'3'
op|']'
op|','
name|'cells'
op|'['
number|'2'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_negative_multiplier
dedent|''
name|'def'
name|'test_negative_multiplier'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cells with less ram available return a higher weight."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'ram_weight_multiplier'
op|'='
op|'-'
number|'1.0'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'cells'
op|'='
name|'_get_fake_cells'
op|'('
op|')'
newline|'\n'
comment|'# Simulate building a new 512MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'512'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|','
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'3'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
comment|'# Simulate building a new 1024MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'3'
op|']'
op|','
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|','
name|'cells'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
comment|'# Simulate building a new 2048MB instance.'
nl|'\n'
name|'instance_type'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'2048'
op|'}'
newline|'\n'
name|'weight_properties'
op|'='
op|'{'
string|"'request_spec'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'instance_type'
op|'}'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'3'
op|']'
op|','
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WeightOffsetWeigherTestClass
dedent|''
dedent|''
name|'class'
name|'WeightOffsetWeigherTestClass'
op|'('
name|'_WeigherTestClass'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test the RAMWeigher class."""'
newline|'\n'
DECL|variable|weigher_cls_name
name|'weigher_cls_name'
op|'='
string|"'nova.cells.weights.weight_offset.WeightOffsetWeigher'"
newline|'\n'
nl|'\n'
DECL|member|test_weight_offset
name|'def'
name|'test_weight_offset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cells with higher weight_offsets return higher\n        weights.\n        """'
newline|'\n'
name|'cells'
op|'='
name|'_get_fake_cells'
op|'('
op|')'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'cells'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'expected_cells'
op|'='
op|'['
name|'cells'
op|'['
number|'2'
op|']'
op|','
name|'cells'
op|'['
number|'3'
op|']'
op|','
name|'cells'
op|'['
number|'0'
op|']'
op|','
name|'cells'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'resulting_cells'
op|'='
op|'['
name|'weighed_cell'
op|'.'
name|'obj'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_cells'
op|','
name|'resulting_cells'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MuteWeigherTestClass
dedent|''
dedent|''
name|'class'
name|'MuteWeigherTestClass'
op|'('
name|'_WeigherTestClass'
op|')'
op|':'
newline|'\n'
DECL|variable|weigher_cls_name
indent|'    '
name|'weigher_cls_name'
op|'='
string|"'nova.cells.weights.mute_child.MuteChildWeigher'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MuteWeigherTestClass'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'mute_weight_multiplier'
op|'='
op|'-'
number|'10.0'
op|','
name|'mute_child_interval'
op|'='
number|'100'
op|','
nl|'\n'
name|'mute_weight_value'
op|'='
number|'1000.0'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'self'
op|'.'
name|'now'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cells'
op|'='
name|'_get_fake_cells'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'self'
op|'.'
name|'cells'
op|':'
newline|'\n'
indent|'            '
name|'cell'
op|'.'
name|'last_seen'
op|'='
name|'self'
op|'.'
name|'now'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MuteWeigherTestClass'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'clear_time_override'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_non_mute
dedent|''
name|'def'
name|'test_non_mute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'weight_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'self'
op|'.'
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'weighed_cell'
name|'in'
name|'weighed_cells'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'weighed_cell'
op|'.'
name|'weight'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mutes
dedent|''
dedent|''
name|'def'
name|'test_mutes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make 2 of them mute:'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'last_seen'
op|'='
op|'('
name|'self'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'last_seen'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'200'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'last_seen'
op|'='
op|'('
name|'self'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'last_seen'
op|'-'
nl|'\n'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'200'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'weight_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'weighed_cells'
op|'='
name|'self'
op|'.'
name|'_get_weighed_cells'
op|'('
name|'self'
op|'.'
name|'cells'
op|','
name|'weight_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'weighed_cells'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'weighed_cell'
op|'='
name|'weighed_cells'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'weighed_cell'
op|'.'
name|'weight'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'weighed_cell'
op|'.'
name|'obj'
op|'.'
name|'name'
op|','
op|'['
string|"'cell3'"
op|','
string|"'cell4'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'weighed_cell'
op|'='
name|'weighed_cells'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'-'
number|'10.0'
op|','
name|'weighed_cell'
op|'.'
name|'weight'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'weighed_cell'
op|'.'
name|'obj'
op|'.'
name|'name'
op|','
op|'['
string|"'cell1'"
op|','
string|"'cell2'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
