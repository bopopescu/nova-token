begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For CellsManager\n"""'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'messaging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'utils'
name|'as'
name|'cells_utils'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'conf'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'cells'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_server_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_flavor'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'nova'
op|'.'
name|'conf'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_topic'"
op|','
string|"'nova.compute.rpcapi'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_COMPUTE_NODES
name|'FAKE_COMPUTE_NODES'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
op|']'
newline|'\n'
DECL|variable|FAKE_SERVICES
name|'FAKE_SERVICES'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'host'
op|'='
string|"'host3'"
op|')'
op|']'
newline|'\n'
DECL|variable|FAKE_TASK_LOGS
name|'FAKE_TASK_LOGS'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsManagerClassTestCase
name|'class'
name|'CellsManagerClassTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for CellsManager class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsManagerClassTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# pick a child cell to use for tests.'
nl|'\n'
name|'self'
op|'.'
name|'our_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
name|'self'
op|'.'
name|'our_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'msg_runner'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'='
name|'fakes'
op|'.'
name|'get_state_manager'
op|'('
name|'self'
op|'.'
name|'our_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
string|"'fake_context'"
newline|'\n'
nl|'\n'
DECL|member|_get_fake_response
dedent|''
name|'def'
name|'_get_fake_response'
op|'('
name|'self'
op|','
name|'raw_response'
op|'='
name|'None'
op|','
name|'exc'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake'"
op|','
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'raw_response'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raw_response'
op|'='
string|"'fake-response'"
newline|'\n'
dedent|''
name|'return'
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake'"
op|','
name|'raw_response'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cell_info_for_neighbors
dedent|''
name|'def'
name|'test_get_cell_info_for_neighbors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'get_cell_info_for_neighbors'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'state_manager'
op|'.'
name|'get_cell_info_for_neighbors'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_cell_info_for_neighbors'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_start_hook_child_cell
dedent|''
name|'def'
name|'test_post_start_hook_child_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'start_servers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|','
string|"'_update_our_parents'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'start_servers'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_update_our_parents'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'post_start_hook'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_start_hook_middle_cell
dedent|''
name|'def'
name|'test_post_start_hook_middle_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells_manager'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'msg_runner'
op|'='
name|'cells_manager'
op|'.'
name|'msg_runner'
newline|'\n'
name|'driver'
op|'='
name|'cells_manager'
op|'.'
name|'driver'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'start_servers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'msg_runner'
op|','
nl|'\n'
string|"'ask_children_for_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'msg_runner'
op|','
nl|'\n'
string|"'ask_children_for_capacities'"
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'start_servers'
op|'('
name|'msg_runner'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'msg_runner'
op|'.'
name|'ask_children_for_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'msg_runner'
op|'.'
name|'ask_children_for_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'cells_manager'
op|'.'
name|'post_start_hook'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_our_parents
dedent|''
name|'def'
name|'test_update_our_parents'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_update_our_parents'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_instances
dedent|''
name|'def'
name|'test_build_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'build_inst_kwargs'
op|'='
op|'{'
string|"'instances'"
op|':'
op|'['
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'build_instances'"
op|')'
newline|'\n'
name|'our_cell'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'our_cell'
op|','
name|'build_inst_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'build_inst_kwargs'
op|'='
name|'build_inst_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_instances_old_flavor
dedent|''
name|'def'
name|'test_build_instances_old_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor_dict'
op|'='
name|'test_flavor'
op|'.'
name|'fake_flavor'
newline|'\n'
name|'args'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
op|'{'
string|"'instance_type'"
op|':'
name|'flavor_dict'
op|'}'
op|','
nl|'\n'
string|"'instances'"
op|':'
op|'['
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'build_instances'"
op|')'
name|'as'
name|'mock_bi'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'build_inst_kwargs'
op|'='
name|'args'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
name|'mock_bi'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'filter_properties'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'filter_properties'
op|'['
string|"'instance_type'"
op|']'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Flavor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_instances_old_instances
dedent|''
dedent|''
name|'def'
name|'test_build_instances_old_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'{'
string|"'instances'"
op|':'
op|'['
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'build_instances'"
op|')'
name|'as'
name|'mock_bi'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'build_inst_kwargs'
op|'='
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'mock_bi'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'instances'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_compute_api_method
dedent|''
dedent|''
name|'def'
name|'test_run_compute_api_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Args should just be silently passed through'
nl|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'fake-cell-name'"
newline|'\n'
name|'method_info'
op|'='
string|"'fake-method-info'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'run_compute_api_method'"
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|'='
name|'cell_name'
op|','
name|'method_info'
op|'='
name|'method_info'
op|','
nl|'\n'
name|'call'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-response'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_at_top
dedent|''
name|'def'
name|'test_instance_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy_at_top
dedent|''
name|'def'
name|'test_instance_destroy_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_delete_everywhere
dedent|''
name|'def'
name|'test_instance_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_delete_everywhere'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'delete_type'
op|'='
string|"'fake-type'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create_at_top
dedent|''
name|'def'
name|'test_instance_fault_create_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'instance_fault_create_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_fault_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-fault'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_fault_create_at_top'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_fault'
op|'='
string|"'fake-fault'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_update_at_top
dedent|''
name|'def'
name|'test_bw_usage_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'bw_usage_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'bw_usage_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-bw-info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'bw_usage_update_at_top'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bw_update_info'
op|'='
string|"'fake-bw-info'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_heal_instances
dedent|''
name|'def'
name|'test_heal_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_updated_at_threshold'
op|'='
number|'1000'
op|','
nl|'\n'
name|'instance_update_num_instances'
op|'='
number|'2'
op|','
nl|'\n'
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'stalled_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'updated_since'
op|'='
name|'stalled_time'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'1000'
op|')'
newline|'\n'
nl|'\n'
DECL|function|utcnow
name|'def'
name|'utcnow'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'stalled_time'
newline|'\n'
nl|'\n'
dedent|''
name|'call_info'
op|'='
op|'{'
string|"'get_instances'"
op|':'
number|'0'
op|','
string|"'sync_instances'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
op|'['
string|"'instance1'"
op|','
string|"'instance2'"
op|','
string|"'instance3'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|get_instances_to_sync
name|'def'
name|'get_instances_to_sync'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_context'
op|','
name|'context'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'shuffle'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'project_id'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'updated_since'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'iter'
op|'('
name|'instances'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|instance_get_by_uuid
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
op|'['
name|'int'
op|'('
name|'uuid'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|sync_instance
dedent|''
name|'def'
name|'sync_instance'
op|'('
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_context'
op|','
name|'context'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cells_utils'
op|','
string|"'get_instances_to_sync'"
op|','
nl|'\n'
name|'get_instances_to_sync'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|','
nl|'\n'
name|'instance_get_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|','
string|"'_sync_instance'"
op|','
nl|'\n'
name|'sync_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'timeutils'
op|','
string|"'utcnow'"
op|','
name|'utcnow'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_heal_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'updated_since'
op|','
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|')'
newline|'\n'
comment|'# Only first 2'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
op|':'
number|'2'
op|']'
op|','
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_heal_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'updated_since'
op|','
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|')'
newline|'\n'
comment|'# Now the last 1 and the first 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'instances'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|']'
op|','
nl|'\n'
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instances
dedent|''
name|'def'
name|'test_sync_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'sync_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'sync_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-project'"
op|','
nl|'\n'
string|"'fake-time'"
op|','
string|"'fake-deleted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'sync_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project'"
op|','
nl|'\n'
name|'updated_since'
op|'='
string|"'fake-time'"
op|','
nl|'\n'
name|'deleted'
op|'='
string|"'fake-deleted'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of services.'
nl|'\n'
comment|'# Manager should turn these into a single list of responses.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'services'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'service'
name|'in'
name|'FAKE_SERVICES'
op|':'
newline|'\n'
indent|'                '
name|'fake_service'
op|'='
name|'objects'
op|'.'
name|'Service'
op|'('
op|'**'
name|'service'
op|')'
newline|'\n'
name|'services'
op|'.'
name|'append'
op|'('
name|'fake_service'
op|')'
newline|'\n'
name|'expected_service'
op|'='
name|'cells_utils'
op|'.'
name|'ServiceProxy'
op|'('
name|'fake_service'
op|','
nl|'\n'
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'cell_name'
op|','
name|'expected_service'
op|','
name|'fake_service'
op|')'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
name|'services'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'add_cell_to_service'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-filters'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
comment|'# Calls are done by cells, so we need to sort the list by the cell name'
nl|'\n'
name|'expected_response'
op|'.'
name|'sort'
op|'('
name|'key'
op|'='
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'for'
name|'cell_name'
op|','
name|'service_proxy'
op|','
name|'service'
name|'in'
name|'expected_response'
op|':'
newline|'\n'
indent|'            '
name|'cells_utils'
op|'.'
name|'add_cell_to_service'
op|'('
nl|'\n'
name|'service'
op|','
name|'cell_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'service_proxy'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'filters'
op|'='
string|"'fake-filters'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'proxy'
name|'for'
name|'cell'
op|','
name|'proxy'
op|','
name|'service'
name|'in'
name|'expected_response'
op|']'
op|','
nl|'\n'
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'fake_service'
op|'='
name|'objects'
op|'.'
name|'Service'
op|'('
op|'**'
name|'FAKE_SERVICES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
nl|'\n'
name|'fake_service'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'cells_utils'
op|'.'
name|'ServiceProxy'
op|'('
name|'fake_service'
op|','
name|'fake_cell'
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'add_cell_to_service'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_cell'
op|','
string|"'fake-host'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_service'
op|'('
name|'fake_service'
op|','
name|'fake_cell'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'expected_response'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'host_name'
op|'='
name|'cell_and_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_uptime
dedent|''
name|'def'
name|'test_get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'parent!fake-cell'"
newline|'\n'
name|'fake_host'
op|'='
string|"'fake-host'"
newline|'\n'
name|'fake_cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
name|'fake_cell'
op|','
name|'fake_host'
op|')'
newline|'\n'
name|'host_uptime'
op|'='
op|'('
string|'" 08:32:11 up 93 days, 18:25, 12 users,  load average:"'
nl|'\n'
string|'" 0.20, 0.12, 0.14"'
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
name|'host_uptime'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'get_host_uptime'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'get_host_uptime'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
name|'fake_host'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_host_uptime'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_cell_and_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host_uptime'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update
dedent|''
name|'def'
name|'test_service_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'fake_service'
op|'='
name|'objects'
op|'.'
name|'Service'
op|'('
op|'**'
name|'FAKE_SERVICES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
name|'fake_service'
op|','
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'cells_utils'
op|'.'
name|'ServiceProxy'
op|'('
name|'fake_service'
op|','
name|'fake_cell'
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'params_to_update'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'service_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'add_cell_to_service'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_cell'
op|','
string|"'fake-host'"
op|','
string|"'nova-api'"
op|','
nl|'\n'
name|'params_to_update'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_service'
op|'('
name|'fake_service'
op|','
name|'fake_cell'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'expected_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host_name'
op|'='
name|'cell_and_host'
op|','
name|'binary'
op|'='
string|"'nova-api'"
op|','
nl|'\n'
name|'params_to_update'
op|'='
name|'params_to_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_delete
dedent|''
name|'def'
name|'test_service_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'service_id'
op|'='
string|"'1'"
newline|'\n'
name|'cell_service_id'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
name|'fake_cell'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'service_delete'"
op|')'
name|'as'
name|'service_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_service_id'
op|')'
newline|'\n'
name|'service_delete'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_rpc_to_manager
dedent|''
dedent|''
name|'def'
name|'test_proxy_rpc_to_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'proxy_rpc_to_manager'"
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'topic'
op|'='
string|'"%s.%s"'
op|'%'
op|'('
name|'CONF'
op|'.'
name|'compute_topic'
op|','
name|'cell_and_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-host'"
op|','
name|'topic'
op|','
string|"'fake-rpc-msg'"
op|','
nl|'\n'
name|'True'
op|','
op|'-'
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'topic'
op|'='
name|'topic'
op|','
name|'rpc_message'
op|'='
string|"'fake-rpc-msg'"
op|','
name|'call'
op|'='
name|'True'
op|','
nl|'\n'
name|'timeout'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-response'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_task_log_responses
dedent|''
name|'def'
name|'_build_task_log_responses'
op|'('
name|'self'
op|','
name|'num'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of task log'
nl|'\n'
comment|'# entries. Manager should turn these into a single list of'
nl|'\n'
comment|'# task log entries.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'num'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'task_logs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'task_log'
name|'in'
name|'FAKE_TASK_LOGS'
op|':'
newline|'\n'
indent|'                '
name|'task_logs'
op|'.'
name|'append'
op|'('
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'task_log'
op|')'
op|')'
newline|'\n'
name|'expected_task_log'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'task_log'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_task_log'
op|'('
name|'expected_task_log'
op|','
nl|'\n'
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
name|'expected_task_log'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
name|'task_logs'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'expected_response'
op|','
name|'responses'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all
dedent|''
name|'def'
name|'test_task_log_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
nl|'\n'
string|"'fake-end'"
op|','
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_with_filters
dedent|''
name|'def'
name|'test_task_log_get_all_with_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'1'
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
string|"'fake-end'"
op|','
name|'host'
op|'='
string|"'fake-host'"
op|','
nl|'\n'
name|'state'
op|'='
string|"'fake-state'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|','
nl|'\n'
name|'host'
op|'='
name|'cell_and_host'
op|','
name|'state'
op|'='
string|"'fake-state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_with_cell_but_no_host_filters
dedent|''
name|'def'
name|'test_task_log_get_all_with_cell_but_no_host_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'1'
op|')'
newline|'\n'
comment|'# Host filter only has cell name.'
nl|'\n'
name|'cell_and_host'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
string|"'fake-end'"
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'state'
op|'='
string|"'fake-state'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|','
nl|'\n'
name|'host'
op|'='
name|'cell_and_host'
op|','
name|'state'
op|'='
string|"'fake-state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all
dedent|''
name|'def'
name|'test_compute_node_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of computes.'
nl|'\n'
comment|'# Manager should turn these into a single list of responses.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'compute_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'compute_node'
name|'in'
name|'FAKE_COMPUTE_NODES'
op|':'
newline|'\n'
indent|'                '
name|'fake_compute'
op|'='
name|'objects'
op|'.'
name|'ComputeNode'
op|'('
op|'**'
name|'compute_node'
op|')'
newline|'\n'
name|'fake_compute'
op|'.'
name|'_cached_service'
op|'='
name|'None'
newline|'\n'
name|'compute_nodes'
op|'.'
name|'append'
op|'('
name|'fake_compute'
op|')'
newline|'\n'
name|'expected_compute_node'
op|'='
name|'cells_utils'
op|'.'
name|'ComputeNodeProxy'
op|'('
nl|'\n'
name|'fake_compute'
op|','
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'cell_name'
op|','
name|'expected_compute_node'
op|','
name|'fake_compute'
op|')'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
name|'compute_nodes'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'add_cell_to_compute_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|'='
string|"'fake-match'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
comment|'# Calls are done by cells, so we need to sort the list by the cell name'
nl|'\n'
name|'expected_response'
op|'.'
name|'sort'
op|'('
name|'key'
op|'='
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'for'
name|'cell_name'
op|','
name|'compute_proxy'
op|','
name|'compute_node'
name|'in'
name|'expected_response'
op|':'
newline|'\n'
indent|'            '
name|'cells_utils'
op|'.'
name|'add_cell_to_compute_node'
op|'('
nl|'\n'
name|'compute_node'
op|','
name|'cell_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'compute_proxy'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|'='
string|"'fake-match'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'proxy'
name|'for'
name|'cell'
op|','
name|'proxy'
op|','
name|'compute'
name|'in'
name|'expected_response'
op|']'
op|','
nl|'\n'
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_stats
dedent|''
name|'def'
name|'test_compute_node_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raw_resp1'
op|'='
op|'{'
string|"'key1'"
op|':'
number|'1'
op|','
string|"'key2'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'raw_resp2'
op|'='
op|'{'
string|"'key2'"
op|':'
number|'1'
op|','
string|"'key3'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'raw_resp3'
op|'='
op|'{'
string|"'key3'"
op|':'
number|'1'
op|','
string|"'key4'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'responses'
op|'='
op|'['
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'cell1'"
op|','
name|'raw_resp1'
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'cell2'"
op|','
name|'raw_resp2'
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'cell2'"
op|','
name|'raw_resp3'
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'expected_resp'
op|'='
op|'{'
string|"'key1'"
op|':'
number|'1'
op|','
string|"'key2'"
op|':'
number|'3'
op|','
string|"'key3'"
op|':'
number|'3'
op|','
string|"'key4'"
op|':'
number|'2'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_stats'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_stats'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_stats'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_resp'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get
dedent|''
name|'def'
name|'test_compute_node_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'fake_compute'
op|'='
name|'objects'
op|'.'
name|'ComputeNode'
op|'('
op|'**'
name|'FAKE_COMPUTE_NODES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'fake_compute'
op|'.'
name|'_cached_service'
op|'='
name|'None'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_cell'
op|','
nl|'\n'
name|'fake_compute'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'expected_response'
op|'='
name|'cells_utils'
op|'.'
name|'ComputeNodeProxy'
op|'('
name|'fake_compute'
op|','
nl|'\n'
name|'fake_cell'
op|')'
newline|'\n'
name|'cell_and_id'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
name|'fake_cell'
op|','
string|"'fake-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'add_cell_to_compute_node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-cell'"
op|','
string|"'fake-id'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_compute_node'
op|'('
nl|'\n'
name|'fake_compute'
op|','
name|'fake_cell'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'expected_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'cell_and_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_actions_get
dedent|''
name|'def'
name|'test_actions_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
op|'['
name|'fake_act'
op|']'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
op|'['
name|'fake_act'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'actions_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_get_by_request_id
dedent|''
name|'def'
name|'test_action_get_by_request_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
name|'fake_act'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'fake_act'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'action_get_by_request_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
string|"'req-fake'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'req-fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_events_get
dedent|''
name|'def'
name|'test_action_events_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_action_id'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_ACTION_ID1'
newline|'\n'
name|'fake_events'
op|'='
name|'fake_server_actions'
op|'.'
name|'FAKE_EVENTS'
op|'['
name|'fake_action_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
name|'fake_events'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'fake_events'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'action_events_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-action'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_consoleauth_delete_tokens
dedent|''
name|'def'
name|'test_consoleauth_delete_tokens'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake-instance-uuid'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'consoleauth_delete_tokens'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'consoleauth_delete_tokens'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'consoleauth_delete_tokens'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_capacities
dedent|''
name|'def'
name|'test_get_capacities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'cell_name'"
newline|'\n'
name|'response'
op|'='
op|'{'
string|'"ram_free"'
op|':'
nl|'\n'
op|'{'
string|'"units_by_mb"'
op|':'
op|'{'
string|'"64"'
op|':'
number|'20'
op|','
string|'"128"'
op|':'
number|'10'
op|'}'
op|','
string|'"total_mb"'
op|':'
number|'1491'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'get_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_capacities'
op|'('
name|'cell_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_console_port
dedent|''
name|'def'
name|'test_validate_console_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake-instance-uuid'"
newline|'\n'
name|'cell_name'
op|'='
string|"'fake-cell-name'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'cell_name'
op|'='
name|'cell_name'
op|')'
newline|'\n'
name|'console_port'
op|'='
string|"'fake-console-port'"
newline|'\n'
name|'console_type'
op|'='
string|"'fake-console-type'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'validate_console_port'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'validate_console_port'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'console_port'
op|','
nl|'\n'
name|'console_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'validate_console_port'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_uuid'
op|','
name|'console_port'
op|'='
name|'console_port'
op|','
nl|'\n'
name|'console_type'
op|'='
name|'console_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-response'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_update_or_create_at_top
dedent|''
name|'def'
name|'test_bdm_update_or_create_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'bdm_update_or_create_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-bdm'"
op|','
nl|'\n'
name|'create'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-bdm'"
op|','
nl|'\n'
name|'create'
op|'='
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_destroy_at_top
dedent|''
name|'def'
name|'test_bdm_destroy_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'bdm_destroy_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'bdm_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_instance_uuid'"
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'fake_device_name'"
op|','
nl|'\n'
name|'volume_id'
op|'='
string|"'fake_volume_id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'bdm_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_instance_uuid'"
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'fake_device_name'"
op|','
nl|'\n'
name|'volume_id'
op|'='
string|"'fake_volume_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations
dedent|''
name|'def'
name|'test_get_migrations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
newline|'\n'
name|'cell1_migrations'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'123'
op|'}'
op|']'
newline|'\n'
name|'cell2_migrations'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'456'
op|'}'
op|']'
newline|'\n'
name|'fake_responses'
op|'='
op|'['
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
name|'cell1_migrations'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
name|'cell2_migrations'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'get_migrations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
name|'False'
op|','
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'cell1_migrations'
op|'['
number|'0'
op|']'
op|','
name|'cell2_migrations'
op|'['
number|'0'
op|']'
op|']'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations_for_a_given_cell
dedent|''
name|'def'
name|'test_get_migrations_for_a_given_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'confirmed'"
op|','
string|"'cell_name'"
op|':'
string|"'ChildCell1'"
op|'}'
newline|'\n'
name|'target_cell'
op|'='
string|"'%s%s%s'"
op|'%'
op|'('
name|'CONF'
op|'.'
name|'cells'
op|'.'
name|'name'
op|','
string|"'!'"
op|','
name|'filters'
op|'['
string|"'cell_name'"
op|']'
op|')'
newline|'\n'
name|'migrations'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'123'
op|'}'
op|']'
newline|'\n'
name|'fake_responses'
op|'='
op|'['
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
name|'migrations'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'get_migrations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'target_cell'
op|','
name|'False'
op|','
nl|'\n'
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migrations'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_from_api
dedent|''
name|'def'
name|'test_instance_update_from_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'instance_update_from_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_update_from_api'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-instance'"
op|','
nl|'\n'
string|"'exp_vm'"
op|','
string|"'exp_task'"
op|','
nl|'\n'
string|"'admin_reset'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_update_from_api'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'expected_vm_state'
op|'='
string|"'exp_vm'"
op|','
nl|'\n'
name|'expected_task_state'
op|'='
string|"'exp_task'"
op|','
nl|'\n'
name|'admin_state_reset'
op|'='
string|"'admin_reset'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_instance
dedent|''
name|'def'
name|'test_start_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'start_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_instance
dedent|''
name|'def'
name|'test_stop_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'stop_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
name|'do_cast'
op|'='
string|"'meow'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
string|"'purr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'do_cast'
op|'='
string|"'meow'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
string|"'purr'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_create
dedent|''
name|'def'
name|'test_cell_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
string|"'values'"
newline|'\n'
name|'response'
op|'='
string|"'created_cell'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'cell_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'cell_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'values'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_update
dedent|''
name|'def'
name|'test_cell_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'cell_name'"
newline|'\n'
name|'values'
op|'='
string|"'values'"
newline|'\n'
name|'response'
op|'='
string|"'updated_cell'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'cell_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'cell_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
name|'values'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'cell_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|','
nl|'\n'
name|'values'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_delete
dedent|''
name|'def'
name|'test_cell_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'cell_name'"
newline|'\n'
name|'response'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'cell_delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'cell_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'cell_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cell_get
dedent|''
name|'def'
name|'test_cell_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'cell_name'"
newline|'\n'
name|'response'
op|'='
string|"'cell_info'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'cell_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'cell_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'cell_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_instance
dedent|''
name|'def'
name|'test_reboot_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'reboot_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'reboot_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
string|"'HARD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'reboot_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'reboot_type'
op|'='
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_instance
dedent|''
name|'def'
name|'test_suspend_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'suspend_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'suspend_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'suspend_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_instance
dedent|''
name|'def'
name|'test_resume_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'resume_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'resume_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'resume_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instance
dedent|''
name|'def'
name|'test_terminate_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'terminate_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
name|'delete_type'
op|'='
string|"'delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'delete_type'
op|'='
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_soft_delete_instance
dedent|''
name|'def'
name|'test_soft_delete_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'soft_delete_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'soft_delete_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'soft_delete_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_resize_instance
dedent|''
name|'def'
name|'_test_resize_instance'
op|'('
name|'self'
op|','
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'resize_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'resize_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-flavor'"
op|','
string|"'fake-updates'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'resize_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|','
name|'flavor'
op|'='
string|"'fake-flavor'"
op|','
nl|'\n'
name|'extra_instance_updates'
op|'='
string|"'fake-updates'"
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance
dedent|''
name|'def'
name|'test_resize_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance_forced_shutdown
dedent|''
name|'def'
name|'test_resize_instance_forced_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resize_instance'
op|'('
name|'clean_shutdown'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migrate_instance
dedent|''
name|'def'
name|'test_live_migrate_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'live_migrate_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'live_migrate_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-block'"
op|','
string|"'fake-commit'"
op|','
nl|'\n'
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'live_migrate_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'block_migration'
op|'='
string|"'fake-block'"
op|','
name|'disk_over_commit'
op|'='
string|"'fake-commit'"
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake-host'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize
dedent|''
name|'def'
name|'test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'revert_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'revert_resize'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'revert_resize'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize
dedent|''
name|'def'
name|'test_confirm_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'confirm_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'confirm_resize'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'confirm_resize'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset_network
dedent|''
name|'def'
name|'test_reset_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'reset_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'reset_network'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'reset_network'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_network_info
dedent|''
name|'def'
name|'test_inject_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'inject_network_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'inject_network_info'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'inject_network_info'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_instance
dedent|''
name|'def'
name|'test_snapshot_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'snapshot_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'snapshot_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'snapshot_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'image_id'
op|'='
string|"'fake-id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_instance
dedent|''
name|'def'
name|'test_backup_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'backup_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'backup_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-id'"
op|','
string|"'backup-type'"
op|','
nl|'\n'
string|"'rotation'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'backup_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'image_id'
op|'='
string|"'fake-id'"
op|','
nl|'\n'
name|'backup_type'
op|'='
string|"'backup-type'"
op|','
nl|'\n'
name|'rotation'
op|'='
string|"'rotation'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password
dedent|''
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'set_admin_password'"
op|')'
name|'as'
name|'set_admin_password'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'set_admin_password'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|','
name|'new_pass'
op|'='
string|"'fake-password'"
op|')'
newline|'\n'
name|'set_admin_password'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-instance'"
op|','
string|"'fake-password'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_keypair_at_top
dedent|''
dedent|''
name|'def'
name|'test_get_keypair_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keypairs'
op|'='
op|'['
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
string|"'fake_keypair'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
string|"'fake_keypair2'"
op|')'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'get_keypair_at_top'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'keypairs'
op|')'
name|'as'
name|'fake_get_keypair'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_keypair_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_user_id'"
op|','
nl|'\n'
string|"'fake_name'"
op|')'
newline|'\n'
name|'fake_get_keypair'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_user_id'"
op|','
nl|'\n'
string|"'fake_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_keypair'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_keypair_at_top_with_empty_responses
dedent|''
dedent|''
name|'def'
name|'test_get_keypair_at_top_with_empty_responses'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'get_keypair_at_top'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
op|']'
op|')'
name|'as'
name|'fake_get_keypair'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_keypair_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_user_id'"
op|','
nl|'\n'
string|"'fake_name'"
op|')'
op|')'
newline|'\n'
name|'fake_get_keypair'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_user_id'"
op|','
nl|'\n'
string|"'fake_name'"
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
