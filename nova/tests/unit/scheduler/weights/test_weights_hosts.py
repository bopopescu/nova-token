begin_unit
comment|'# Copyright 2011-2014 IBM'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler weights.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'weights'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'weights'
name|'import'
name|'io_ops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'weights'
name|'import'
name|'metrics'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'weights'
name|'import'
name|'ram'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'scheduler'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestWeighedHost
name|'class'
name|'TestWeighedHost'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_dict_conversion
indent|'    '
name|'def'
name|'test_dict_conversion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_state'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'somehost'"
op|','
name|'None'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'='
name|'weights'
op|'.'
name|'WeighedHost'
op|'('
name|'host_state'
op|','
string|"'someweight'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'weight'"
op|':'
string|"'someweight'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'somehost'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'host'
op|'.'
name|'to_dict'
op|'('
op|')'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_weighers
dedent|''
name|'def'
name|'test_all_weighers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'classes'
op|'='
name|'weights'
op|'.'
name|'all_weighers'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'ram'
op|'.'
name|'RAMWeigher'
op|','
name|'classes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'metrics'
op|'.'
name|'MetricsWeigher'
op|','
name|'classes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'io_ops'
op|'.'
name|'IoOpsWeigher'
op|','
name|'classes'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
