begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'conf'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'filters'
name|'import'
name|'affinity_filter'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'scheduler'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'nova'
op|'.'
name|'conf'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDifferentHostFilter
name|'class'
name|'TestDifferentHostFilter'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestDifferentHostFilter'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filt_cls'
op|'='
name|'affinity_filter'
op|'.'
name|'DifferentHostFilter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_different_filter_passes
dedent|''
name|'def'
name|'test_affinity_different_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'different'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
name|'different_host'
op|'='
op|'['
string|"'same'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_different_filter_fails
dedent|''
name|'def'
name|'test_affinity_different_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'same'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
name|'different_host'
op|'='
op|'['
string|"'same'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_different_filter_handles_none
dedent|''
name|'def'
name|'test_affinity_different_filter_handles_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'same'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSameHostFilter
dedent|''
dedent|''
name|'class'
name|'TestSameHostFilter'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSameHostFilter'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filt_cls'
op|'='
name|'affinity_filter'
op|'.'
name|'SameHostFilter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_same_filter_passes
dedent|''
name|'def'
name|'test_affinity_same_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'same'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
name|'same_host'
op|'='
op|'['
string|"'same'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_same_filter_no_list_passes
dedent|''
name|'def'
name|'test_affinity_same_filter_no_list_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
name|'same_host'
op|'='
op|'['
string|"'same'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_same_filter_fails
dedent|''
name|'def'
name|'test_affinity_same_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'different'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
name|'same_host'
op|'='
op|'['
string|"'same'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_same_filter_handles_none
dedent|''
name|'def'
name|'test_affinity_same_filter_handles_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'different'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'instances'
op|'='
op|'{'
name|'inst1'
op|'.'
name|'uuid'
op|':'
name|'inst1'
op|'}'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSimpleCIDRAffinityFilter
dedent|''
dedent|''
name|'class'
name|'TestSimpleCIDRAffinityFilter'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSimpleCIDRAffinityFilter'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filt_cls'
op|'='
name|'affinity_filter'
op|'.'
name|'SimpleCIDRAffinityFilter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_simple_cidr_filter_passes
dedent|''
name|'def'
name|'test_affinity_simple_cidr_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'host_ip'
op|'='
string|"'10.8.1.1'"
newline|'\n'
nl|'\n'
name|'affinity_ip'
op|'='
string|'"10.8.1.100"'
newline|'\n'
nl|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'cidr'
op|'='
op|'['
string|"'/24'"
op|']'
op|','
nl|'\n'
name|'build_near_host_ip'
op|'='
op|'['
name|'affinity_ip'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_simple_cidr_filter_fails
dedent|''
name|'def'
name|'test_affinity_simple_cidr_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'host_ip'
op|'='
string|"'10.8.1.1'"
newline|'\n'
nl|'\n'
name|'affinity_ip'
op|'='
string|'"10.8.1.100"'
newline|'\n'
nl|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'cidr'
op|'='
op|'['
string|"'/32'"
op|']'
op|','
nl|'\n'
name|'build_near_host_ip'
op|'='
op|'['
name|'affinity_ip'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_affinity_simple_cidr_filter_handles_none
dedent|''
name|'def'
name|'test_affinity_simple_cidr_filter_handles_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
nl|'\n'
name|'context'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'ctx'
op|','
nl|'\n'
name|'scheduler_hints'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestGroupAffinityFilter
dedent|''
dedent|''
name|'class'
name|'TestGroupAffinityFilter'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_test_group_anti_affinity_filter_passes
indent|'    '
name|'def'
name|'_test_group_anti_affinity_filter_passes'
op|'('
name|'self'
op|','
name|'filt_cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
string|"'affinity'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
name|'policy'
op|']'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'.'
name|'instance_group'
op|'.'
name|'hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'.'
name|'instance_group'
op|'.'
name|'hosts'
op|'='
op|'['
string|"'host2'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_passes
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_passes'
op|'('
nl|'\n'
name|'affinity_filter'
op|'.'
name|'ServerGroupAntiAffinityFilter'
op|'('
op|')'
op|','
nl|'\n'
string|"'anti-affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_anti_affinity_filter_fails
dedent|''
name|'def'
name|'_test_group_anti_affinity_filter_fails'
op|'('
name|'self'
op|','
name|'filt_cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
name|'policy'
op|']'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_fails
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_fails'
op|'('
nl|'\n'
name|'affinity_filter'
op|'.'
name|'ServerGroupAntiAffinityFilter'
op|'('
op|')'
op|','
nl|'\n'
string|"'anti-affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_affinity_filter_passes
dedent|''
name|'def'
name|'_test_group_affinity_filter_passes'
op|'('
name|'self'
op|','
name|'filt_cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
string|"'anti-affinity'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
string|"'affinity'"
op|']'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_passes
dedent|''
name|'def'
name|'test_group_affinity_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_passes'
op|'('
nl|'\n'
name|'affinity_filter'
op|'.'
name|'ServerGroupAffinityFilter'
op|'('
op|')'
op|','
string|"'affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_affinity_filter_fails
dedent|''
name|'def'
name|'_test_group_affinity_filter_fails'
op|'('
name|'self'
op|','
name|'filt_cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'spec_obj'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
name|'instance_group'
op|'='
name|'objects'
op|'.'
name|'InstanceGroup'
op|'('
nl|'\n'
name|'policies'
op|'='
op|'['
name|'policy'
op|']'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host2'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'spec_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_fails
dedent|''
name|'def'
name|'test_group_affinity_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_fails'
op|'('
nl|'\n'
name|'affinity_filter'
op|'.'
name|'ServerGroupAffinityFilter'
op|'('
op|')'
op|','
string|"'affinity'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
