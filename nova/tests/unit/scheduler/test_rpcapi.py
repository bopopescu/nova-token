begin_unit
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUnit Tests for nova.scheduler.rpcapi\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'rpcapi'
name|'as'
name|'scheduler_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerRpcAPITestCase
name|'class'
name|'SchedulerRpcAPITestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_test_scheduler_api
indent|'    '
name|'def'
name|'_test_scheduler_api'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'rpc_method'
op|','
name|'expected_args'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
nl|'\n'
name|'rpcapi'
op|'='
name|'scheduler_rpcapi'
op|'.'
name|'SchedulerAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|'.'
name|'target'
op|'.'
name|'topic'
op|','
name|'CONF'
op|'.'
name|'scheduler_topic'
op|')'
newline|'\n'
nl|'\n'
name|'expected_retval'
op|'='
string|"'foo'"
name|'if'
name|'rpc_method'
op|'=='
string|"'call'"
name|'else'
name|'None'
newline|'\n'
name|'expected_version'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'version'"
op|','
name|'None'
op|')'
newline|'\n'
name|'expected_fanout'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'fanout'"
op|','
name|'None'
op|')'
newline|'\n'
name|'expected_kwargs'
op|'='
name|'kwargs'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expected_args'
op|':'
newline|'\n'
indent|'            '
name|'expected_kwargs'
op|'='
name|'expected_args'
newline|'\n'
nl|'\n'
dedent|''
name|'prepare_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'expected_fanout'
op|':'
newline|'\n'
indent|'            '
name|'prepare_kwargs'
op|'['
string|"'fanout'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'expected_version'
op|':'
newline|'\n'
indent|'            '
name|'prepare_kwargs'
op|'['
string|"'version'"
op|']'
op|'='
name|'expected_version'
newline|'\n'
nl|'\n'
comment|'# NOTE(sbauza): We need to persist the method before mocking it'
nl|'\n'
dedent|''
name|'orig_prepare'
op|'='
name|'rpcapi'
op|'.'
name|'client'
op|'.'
name|'prepare'
newline|'\n'
nl|'\n'
DECL|function|fake_can_send_version
name|'def'
name|'fake_can_send_version'
op|'('
name|'version'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'orig_prepare'
op|'('
name|'version'
op|'='
name|'version'
op|')'
op|'.'
name|'can_send_version'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
name|'rpc_method'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'expected_retval'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
string|"'prepare'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'rpcapi'
op|'.'
name|'client'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
string|"'can_send_version'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_can_send_version'
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'mock_csv'
op|','
name|'mock_prepare'
op|','
name|'mock_rpc_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'retval'
op|'='
name|'getattr'
op|'('
name|'rpcapi'
op|','
name|'method'
op|')'
op|'('
name|'ctxt'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'retval'
op|','
name|'expected_retval'
op|')'
newline|'\n'
name|'mock_prepare'
op|'.'
name|'assert_called_once_with'
op|'('
op|'**'
name|'prepare_kwargs'
op|')'
newline|'\n'
name|'mock_rpc_method'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
op|'**'
name|'expected_kwargs'
op|')'
newline|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_select_destinations
dedent|''
name|'def'
name|'test_select_destinations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'select_destinations'"
op|','
name|'rpc_method'
op|'='
string|"'call'"
op|','
nl|'\n'
name|'spec_obj'
op|'='
name|'fake_spec'
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.3'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'RequestSpec'
op|','
string|"'to_legacy_filter_properties_dict'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'RequestSpec'
op|','
string|"'to_legacy_request_spec_dict'"
op|')'
newline|'\n'
DECL|member|test_select_destinations_with_old_manager
name|'def'
name|'test_select_destinations_with_old_manager'
op|'('
name|'self'
op|','
name|'to_spec'
op|','
name|'to_props'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler'
op|'='
string|"'4.0'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
nl|'\n'
name|'to_spec'
op|'.'
name|'return_value'
op|'='
string|"'fake_request_spec'"
newline|'\n'
name|'to_props'
op|'.'
name|'return_value'
op|'='
string|"'fake_prop'"
newline|'\n'
name|'fake_spec'
op|'='
name|'objects'
op|'.'
name|'RequestSpec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'select_destinations'"
op|','
name|'rpc_method'
op|'='
string|"'call'"
op|','
nl|'\n'
name|'expected_args'
op|'='
op|'{'
string|"'request_spec'"
op|':'
string|"'fake_request_spec'"
op|','
nl|'\n'
string|"'filter_properties'"
op|':'
string|"'fake_prop'"
op|'}'
op|','
nl|'\n'
name|'spec_obj'
op|'='
name|'fake_spec'
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_aggregates
dedent|''
name|'def'
name|'test_update_aggregates'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'update_aggregates'"
op|','
name|'rpc_method'
op|'='
string|"'cast'"
op|','
nl|'\n'
name|'aggregates'
op|'='
string|"'aggregates'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.1'"
op|','
nl|'\n'
name|'fanout'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_aggregate
dedent|''
name|'def'
name|'test_delete_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'delete_aggregate'"
op|','
name|'rpc_method'
op|'='
string|"'cast'"
op|','
nl|'\n'
name|'aggregate'
op|'='
string|"'aggregate'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.1'"
op|','
nl|'\n'
name|'fanout'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_instance_info
dedent|''
name|'def'
name|'test_update_instance_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'update_instance_info'"
op|','
name|'rpc_method'
op|'='
string|"'cast'"
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake_host'"
op|','
nl|'\n'
name|'instance_info'
op|'='
string|"'fake_instance'"
op|','
nl|'\n'
name|'fanout'
op|'='
name|'True'
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_info
dedent|''
name|'def'
name|'test_delete_instance_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'delete_instance_info'"
op|','
name|'rpc_method'
op|'='
string|"'cast'"
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake_host'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'fake_uuid'"
op|','
nl|'\n'
name|'fanout'
op|'='
name|'True'
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_info
dedent|''
name|'def'
name|'test_sync_instance_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_scheduler_api'
op|'('
string|"'sync_instance_info'"
op|','
name|'rpc_method'
op|'='
string|"'cast'"
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake_host'"
op|','
nl|'\n'
name|'instance_uuids'
op|'='
op|'['
string|"'fake1'"
op|','
string|"'fake2'"
op|']'
op|','
nl|'\n'
name|'fanout'
op|'='
name|'True'
op|','
nl|'\n'
name|'version'
op|'='
string|"'4.2'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
