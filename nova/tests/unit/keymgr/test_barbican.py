begin_unit
comment|'# Copyright (c) 2015 The Johns Hopkins University/Applied Physics Laboratory'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for the barbican key manager.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'array'
newline|'\n'
name|'import'
name|'binascii'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'barbican'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'key'
name|'as'
name|'keymgr_key'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'keymgr'
name|'import'
name|'test_key_mgr'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BarbicanKeyManagerTestCase
name|'class'
name|'BarbicanKeyManagerTestCase'
op|'('
name|'test_key_mgr'
op|'.'
name|'KeyManagerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_create_key_manager
indent|'    '
name|'def'
name|'_create_key_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'barbican'
op|'.'
name|'BarbicanKeyManager'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BarbicanKeyManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create fake auth_token'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'auth_token'
op|'='
string|'"fake_token"'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project'
op|'='
string|'"fake_project"'
newline|'\n'
nl|'\n'
comment|'# Create mock barbican client'
nl|'\n'
name|'self'
op|'.'
name|'_build_mock_barbican'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a key_id, secret_ref, pre_hex, and hex to use'
nl|'\n'
name|'self'
op|'.'
name|'key_id'
op|'='
string|'"d152fa13-2b41-42ca-a934-6c21566c0f40"'
newline|'\n'
name|'self'
op|'.'
name|'secret_ref'
op|'='
op|'('
string|'"http://host:9311/v1/secrets/"'
op|'+'
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'pre_hex'
op|'='
string|'"AIDxQp2++uAbKaTVDMXFYIu8PIugJGqkK0JLqkU0rhY="'
newline|'\n'
name|'self'
op|'.'
name|'hex'
op|'='
op|'('
string|'"0080f1429dbefae01b29a4d50cc5c5608bbc3c8ba0246aa42b424baa4"'
nl|'\n'
string|'"534ae16"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_current_context'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_base_url'
op|'='
string|'"http://host:9311/v1"'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'self'
op|'.'
name|'_restore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_restore
dedent|''
name|'def'
name|'_restore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'original_key'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'keymgr_key'
op|'.'
name|'SymmetricKey'
op|'='
name|'self'
op|'.'
name|'original_key'
newline|'\n'
nl|'\n'
DECL|member|_build_mock_barbican
dedent|''
dedent|''
name|'def'
name|'_build_mock_barbican'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_barbican'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'name'
op|'='
string|"'mock_barbican'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Set commonly used methods'
nl|'\n'
name|'self'
op|'.'
name|'get'
op|'='
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'secrets'
op|'.'
name|'get'
newline|'\n'
name|'self'
op|'.'
name|'delete'
op|'='
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'secrets'
op|'.'
name|'delete'
newline|'\n'
name|'self'
op|'.'
name|'store'
op|'='
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'secrets'
op|'.'
name|'store'
newline|'\n'
name|'self'
op|'.'
name|'create'
op|'='
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'secrets'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'self'
op|'.'
name|'mock_barbican'
newline|'\n'
nl|'\n'
DECL|member|_build_mock_symKey
dedent|''
name|'def'
name|'_build_mock_symKey'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_symKey'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_sym_key
name|'def'
name|'fake_sym_key'
op|'('
name|'alg'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mock_symKey'
op|'.'
name|'get_encoded'
op|'.'
name|'return_value'
op|'='
name|'key'
newline|'\n'
name|'self'
op|'.'
name|'mock_symKey'
op|'.'
name|'get_algorithm'
op|'.'
name|'return_value'
op|'='
name|'alg'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'mock_symKey'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'original_key'
op|'='
name|'keymgr_key'
op|'.'
name|'SymmetricKey'
newline|'\n'
name|'keymgr_key'
op|'.'
name|'SymmetricKey'
op|'='
name|'fake_sym_key'
newline|'\n'
nl|'\n'
DECL|member|test_copy_key
dedent|''
name|'def'
name|'test_copy_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create metadata for original secret'
nl|'\n'
indent|'        '
name|'original_secret_metadata'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'algorithm'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'alg'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'bit_length'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'bit'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'name'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'name'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'expiration'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'expiration'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'mode'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'mode'
newline|'\n'
name|'content_types'
op|'='
op|'{'
string|"'default'"
op|':'
string|"'fake_type'"
op|'}'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'content_types'
op|'='
name|'content_types'
newline|'\n'
name|'original_secret_data'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'original_secret_metadata'
op|'.'
name|'payload'
op|'='
name|'original_secret_data'
newline|'\n'
nl|'\n'
comment|'# Create href for copied secret'
nl|'\n'
name|'copied_secret'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'copied_secret'
op|'.'
name|'store'
op|'.'
name|'return_value'
op|'='
string|"'http://test/uuid'"
newline|'\n'
nl|'\n'
comment|'# Set get and create return values'
nl|'\n'
name|'self'
op|'.'
name|'get'
op|'.'
name|'return_value'
op|'='
name|'original_secret_metadata'
newline|'\n'
name|'self'
op|'.'
name|'create'
op|'.'
name|'return_value'
op|'='
name|'copied_secret'
newline|'\n'
nl|'\n'
comment|'# Create the mock key'
nl|'\n'
name|'self'
op|'.'
name|'_build_mock_symKey'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Copy the original'
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'copy_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert proper methods were called'
nl|'\n'
name|'self'
op|'.'
name|'get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'secret_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'mock_symKey'
op|'.'
name|'get_encoded'
op|'('
op|')'
op|','
nl|'\n'
name|'content_types'
op|'['
string|"'default'"
op|']'
op|','
nl|'\n'
string|"'base64'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'alg'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'bit'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'mode'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'expiration'
op|')'
newline|'\n'
name|'copied_secret'
op|'.'
name|'store'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_null_context
dedent|''
name|'def'
name|'test_copy_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'copy_key'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key
dedent|''
name|'def'
name|'test_create_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create order_ref_url and assign return value'
nl|'\n'
indent|'        '
name|'order_ref_url'
op|'='
op|'('
string|'"http://localhost:9311/v1/None/orders/"'
nl|'\n'
string|'"4fe939b7-72bc-49aa-bd1e-e979589858af"'
op|')'
newline|'\n'
name|'key_order'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'orders'
op|'.'
name|'create_key'
op|'.'
name|'return_value'
op|'='
name|'key_order'
newline|'\n'
name|'key_order'
op|'.'
name|'submit'
op|'.'
name|'return_value'
op|'='
name|'order_ref_url'
newline|'\n'
nl|'\n'
comment|'# Create order and assign return value'
nl|'\n'
name|'order'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'order'
op|'.'
name|'secret_ref'
op|'='
name|'self'
op|'.'
name|'secret_ref'
newline|'\n'
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'orders'
op|'.'
name|'get'
op|'.'
name|'return_value'
op|'='
name|'order'
newline|'\n'
nl|'\n'
comment|'# Create the key, get the UUID'
nl|'\n'
name|'returned_uuid'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_barbican'
op|'.'
name|'orders'
op|'.'
name|'get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'order_ref_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'returned_uuid'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_null_context
dedent|''
name|'def'
name|'test_create_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_null_context
dedent|''
name|'def'
name|'test_delete_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete_key'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_key
dedent|''
name|'def'
name|'test_delete_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'secret_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_unknown_key
dedent|''
name|'def'
name|'test_delete_unknown_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete_key'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'base64.b64encode'"
op|')'
newline|'\n'
DECL|member|test_get_key
name|'def'
name|'test_get_key'
op|'('
name|'self'
op|','
name|'b64_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'b64_mock'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'pre_hex'
newline|'\n'
name|'content_type'
op|'='
string|"'application/octet-stream'"
newline|'\n'
nl|'\n'
name|'key'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'key_id'
op|','
name|'content_type'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'secret_ref'
op|')'
newline|'\n'
name|'encoded'
op|'='
name|'array'
op|'.'
name|'array'
op|'('
string|"'B'"
op|','
name|'binascii'
op|'.'
name|'unhexlify'
op|'('
name|'self'
op|'.'
name|'hex'
op|')'
op|')'
op|'.'
name|'tolist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key'
op|'.'
name|'get_encoded'
op|'('
op|')'
op|','
name|'encoded'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_null_context
dedent|''
name|'def'
name|'test_get_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_unknown_key
dedent|''
name|'def'
name|'test_get_unknown_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_key_base64
dedent|''
name|'def'
name|'test_store_key_base64'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create Key to store'
nl|'\n'
indent|'        '
name|'secret_key'
op|'='
name|'array'
op|'.'
name|'array'
op|'('
string|"'B'"
op|','
op|'['
number|'0x01'
op|','
number|'0x02'
op|','
number|'0xA0'
op|','
number|'0xB3'
op|']'
op|')'
op|'.'
name|'tolist'
op|'('
op|')'
newline|'\n'
name|'_key'
op|'='
name|'keymgr_key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'secret_key'
op|')'
newline|'\n'
nl|'\n'
comment|'# Define the return values'
nl|'\n'
name|'secret'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create'
op|'.'
name|'return_value'
op|'='
name|'secret'
newline|'\n'
name|'secret'
op|'.'
name|'store'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'secret_ref'
newline|'\n'
nl|'\n'
comment|'# Store the Key'
nl|'\n'
name|'returned_uuid'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'_key'
op|','
name|'bit_length'
op|'='
number|'32'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'Nova Compute Key'"
op|','
nl|'\n'
string|"'AQKgsw=='"
op|','
nl|'\n'
string|"'application/octet-stream'"
op|','
nl|'\n'
string|"'base64'"
op|','
nl|'\n'
string|"'AES'"
op|','
number|'32'
op|','
string|"'CBC'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'returned_uuid'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_key_plaintext
dedent|''
name|'def'
name|'test_store_key_plaintext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create the plaintext key'
nl|'\n'
indent|'        '
name|'secret_key_text'
op|'='
string|'"This is a test text key."'
newline|'\n'
name|'_key'
op|'='
name|'keymgr_key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'secret_key_text'
op|')'
newline|'\n'
nl|'\n'
comment|'# Store the Key'
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'_key'
op|','
nl|'\n'
name|'payload_content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'payload_content_encoding'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'Nova Compute Key'"
op|','
nl|'\n'
name|'secret_key_text'
op|','
nl|'\n'
string|"'text/plain'"
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
string|"'AES'"
op|','
number|'256'
op|','
string|"'CBC'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'store'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_null_context
dedent|''
name|'def'
name|'test_store_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_barbican_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store_key'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'keystoneauth1.session.Session'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'barbicanclient.client.Client'"
op|')'
newline|'\n'
DECL|member|test_get_barbican_client_new
name|'def'
name|'test_get_barbican_client_new'
op|'('
name|'self'
op|','
name|'mock_barbican'
op|','
name|'mock_keystone'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'self'
op|'.'
name|'_create_key_manager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_get_barbican_client'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_barbican'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'keystoneauth1.session.Session'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'barbicanclient.client.Client'"
op|')'
newline|'\n'
DECL|member|test_get_barbican_client_reused
name|'def'
name|'test_get_barbican_client_reused'
op|'('
name|'self'
op|','
name|'mock_barbican'
op|','
name|'mock_keystone'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'self'
op|'.'
name|'_create_key_manager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_get_barbican_client'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_barbican'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_get_barbican_client'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_barbican'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'keystoneauth1.session.Session'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'barbicanclient.client.Client'"
op|')'
newline|'\n'
DECL|member|test_get_barbican_client_not_reused
name|'def'
name|'test_get_barbican_client_not_reused'
op|'('
name|'self'
op|','
name|'mock_barbican'
op|','
nl|'\n'
name|'mock_keystone'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'self'
op|'.'
name|'_create_key_manager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_get_barbican_client'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_barbican'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'ctxt2'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'ctxt2'
op|'.'
name|'auth_token'
op|'='
string|'"fake_token2"'
newline|'\n'
name|'ctxt2'
op|'.'
name|'project'
op|'='
string|'"fake_project2"'
newline|'\n'
name|'manager'
op|'.'
name|'_get_barbican_client'
op|'('
name|'ctxt2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_barbican'
op|'.'
name|'call_count'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_barbican_client_null_context
dedent|''
name|'def'
name|'test_get_barbican_client_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_get_barbican_client'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_barbican_client_missing_project
dedent|''
name|'def'
name|'test_get_barbican_client_missing_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_get_barbican_client'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_barbican_client_none_project
dedent|''
name|'def'
name|'test_get_barbican_client_none_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'_get_barbican_client'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
