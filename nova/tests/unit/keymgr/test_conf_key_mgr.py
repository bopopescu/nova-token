begin_unit
comment|'# Copyright (c) 2013 The Johns Hopkins University/Applied Physics Laboratory'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for the conf key manager.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'binascii'
newline|'\n'
name|'import'
name|'codecs'
newline|'\n'
nl|'\n'
name|'from'
name|'castellan'
op|'.'
name|'common'
op|'.'
name|'objects'
name|'import'
name|'symmetric_key'
name|'as'
name|'key'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'conf_key_mgr'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'fixed_key'"
op|','
string|"'nova.keymgr.conf_key_mgr'"
op|','
name|'group'
op|'='
string|"'key_manager'"
op|')'
newline|'\n'
DECL|variable|decode_hex
name|'decode_hex'
op|'='
name|'codecs'
op|'.'
name|'getdecoder'
op|'('
string|'"hex_codec"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConfKeyManagerTestCase
name|'class'
name|'ConfKeyManagerTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConfKeyManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_hex_key'
op|'='
string|"'0'"
op|'*'
number|'64'
newline|'\n'
nl|'\n'
DECL|member|_create_key_manager
dedent|''
name|'def'
name|'_create_key_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_default'
op|'('
string|"'fixed_key'"
op|','
name|'default'
op|'='
name|'self'
op|'.'
name|'_hex_key'
op|','
nl|'\n'
name|'group'
op|'='
string|"'key_manager'"
op|')'
newline|'\n'
name|'return'
name|'conf_key_mgr'
op|'.'
name|'ConfKeyManager'
op|'('
name|'CONF'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConfKeyManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'='
name|'self'
op|'.'
name|'_create_key_manager'
op|'('
op|')'
newline|'\n'
name|'encoded_key'
op|'='
name|'bytes'
op|'('
name|'binascii'
op|'.'
name|'unhexlify'
op|'('
name|'self'
op|'.'
name|'_hex_key'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key'
op|'='
name|'key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'len'
op|'('
name|'encoded_key'
op|')'
op|'*'
number|'8'
op|','
name|'encoded_key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key_id'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'key_id'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_manager'
op|'='
name|'self'
op|'.'
name|'_create_key_manager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_hex_key'
op|','
name|'key_manager'
op|'.'
name|'_hex_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_value_error
dedent|''
name|'def'
name|'test_init_value_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_default'
op|'('
string|"'fixed_key'"
op|','
name|'default'
op|'='
name|'None'
op|','
name|'group'
op|'='
string|"'key_manager'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'conf_key_mgr'
op|'.'
name|'ConfKeyManager'
op|','
name|'CONF'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key
dedent|''
name|'def'
name|'test_create_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_id_1'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'AES'"
op|','
number|'256'
op|')'
newline|'\n'
name|'key_id_2'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'AES'"
op|','
number|'256'
op|')'
newline|'\n'
comment|'# ensure that the UUIDs are the same'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key_id_1'
op|','
name|'key_id_2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_null_context
dedent|''
name|'def'
name|'test_create_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|','
name|'None'
op|','
string|"'AES'"
op|','
number|'256'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_key
dedent|''
name|'def'
name|'test_store_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_bytes'
op|'='
name|'bytes'
op|'('
name|'binascii'
op|'.'
name|'unhexlify'
op|'('
string|"'0'"
op|'*'
number|'64'
op|')'
op|')'
newline|'\n'
name|'_key'
op|'='
name|'key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'len'
op|'('
name|'key_bytes'
op|')'
op|'*'
number|'8'
op|','
name|'key_bytes'
op|')'
newline|'\n'
name|'key_id'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'_key'
op|')'
newline|'\n'
nl|'\n'
name|'actual_key'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_key'
op|','
name|'actual_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_null_context
dedent|''
name|'def'
name|'test_store_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_null_context
dedent|''
name|'def'
name|'test_get_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_unknown_key
dedent|''
name|'def'
name|'test_get_unknown_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'KeyError'
op|','
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get
dedent|''
name|'def'
name|'test_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'key'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_key
dedent|''
name|'def'
name|'test_delete_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_id'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'AES'"
op|','
number|'256'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
comment|"# key won't acutally be deleted"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'key'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_null_context
dedent|''
name|'def'
name|'test_delete_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_unknown_key
dedent|''
name|'def'
name|'test_delete_unknown_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
