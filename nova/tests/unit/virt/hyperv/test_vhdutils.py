begin_unit
comment|'#  Copyright 2013 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'utils'
name|'import'
name|'units'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vhdutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VHDUtilsBaseTestCase
name|'class'
name|'VHDUtilsBaseTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"Base Class unit test classes of Hyper-V VHD Utils classes."'
newline|'\n'
nl|'\n'
DECL|variable|_FAKE_VHD_PATH
name|'_FAKE_VHD_PATH'
op|'='
string|'"C:\\\\fake_path.vhdx"'
newline|'\n'
DECL|variable|_FAKE_PARENT_PATH
name|'_FAKE_PARENT_PATH'
op|'='
string|'"C:\\\\fake_parent_path.vhdx"'
newline|'\n'
DECL|variable|_FAKE_FORMAT
name|'_FAKE_FORMAT'
op|'='
number|'3'
newline|'\n'
DECL|variable|_FAKE_TYPE
name|'_FAKE_TYPE'
op|'='
number|'3'
newline|'\n'
DECL|variable|_FAKE_MAX_INTERNAL_SIZE
name|'_FAKE_MAX_INTERNAL_SIZE'
op|'='
name|'units'
op|'.'
name|'Gi'
newline|'\n'
DECL|variable|_FAKE_DYNAMIC_BLK_SIZE
name|'_FAKE_DYNAMIC_BLK_SIZE'
op|'='
number|'2097152L'
newline|'\n'
DECL|variable|_FAKE_BAD_TYPE
name|'_FAKE_BAD_TYPE'
op|'='
number|'5'
newline|'\n'
nl|'\n'
DECL|variable|_FAKE_JOB_PATH
name|'_FAKE_JOB_PATH'
op|'='
string|"'fake_job_path'"
newline|'\n'
DECL|variable|_FAKE_RET_VAL
name|'_FAKE_RET_VAL'
op|'='
number|'0'
newline|'\n'
DECL|variable|_FAKE_VHD_INFO_XML
name|'_FAKE_VHD_INFO_XML'
op|'='
op|'('
nl|'\n'
string|'"""<INSTANCE CLASSNAME="Msvm_VirtualHardDiskSettingData">\n<PROPERTY NAME="BlockSize" TYPE="uint32">\n<VALUE>33554432</VALUE>\n</PROPERTY>\n<PROPERTY NAME="Caption" TYPE="string">\n<VALUE>Virtual Hard Disk Setting Data</VALUE>\n</PROPERTY>\n<PROPERTY NAME="Description" TYPE="string">\n<VALUE>Setting Data for a Virtual Hard Disk.</VALUE>\n</PROPERTY>\n<PROPERTY NAME="ElementName" TYPE="string">\n<VALUE>fake_path.vhdx</VALUE>\n</PROPERTY>\n<PROPERTY NAME="Format" TYPE="uint16">\n<VALUE>%(format)s</VALUE>\n</PROPERTY>\n<PROPERTY NAME="InstanceID" TYPE="string">\n<VALUE>52794B89-AC06-4349-AC57-486CAAD52F69</VALUE>\n</PROPERTY>\n<PROPERTY NAME="LogicalSectorSize" TYPE="uint32">\n<VALUE>4096</VALUE>\n</PROPERTY>\n<PROPERTY NAME="MaxInternalSize" TYPE="uint64">\n<VALUE>%(max_internal_size)s</VALUE>\n</PROPERTY>\n<PROPERTY NAME="ParentPath" TYPE="string">\n<VALUE>%(parent_path)s</VALUE>\n</PROPERTY>\n<PROPERTY NAME="Path" TYPE="string">\n<VALUE>%(path)s</VALUE>\n</PROPERTY>\n<PROPERTY NAME="PhysicalSectorSize" TYPE="uint32">\n<VALUE>4096</VALUE>\n</PROPERTY>\n<PROPERTY NAME="Type" TYPE="uint16">\n<VALUE>%(type)s</VALUE>\n</PROPERTY>\n</INSTANCE>"""'
op|'%'
op|'{'
string|"'path'"
op|':'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
string|"'parent_path'"
op|':'
name|'_FAKE_PARENT_PATH'
op|','
nl|'\n'
string|"'format'"
op|':'
name|'_FAKE_FORMAT'
op|','
nl|'\n'
string|"'max_internal_size'"
op|':'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|','
nl|'\n'
string|"'type'"
op|':'
name|'_FAKE_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VHDUtilsTestCase
dedent|''
name|'class'
name|'VHDUtilsTestCase'
op|'('
name|'VHDUtilsBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V VHDUtils class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VHDUtilsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_vmutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_fake_vhd_info'
op|'='
op|'{'
nl|'\n'
string|"'ParentPath'"
op|':'
name|'self'
op|'.'
name|'_FAKE_PARENT_PATH'
op|','
nl|'\n'
string|"'MaxInternalSize'"
op|':'
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|','
nl|'\n'
string|"'Type'"
op|':'
name|'self'
op|'.'
name|'_FAKE_TYPE'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_validate_vhd
dedent|''
name|'def'
name|'test_validate_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'ValidateVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'validate_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'ValidateVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vhd_info
dedent|''
name|'def'
name|'test_get_vhd_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mock_get_vhd_info'
op|'('
op|')'
newline|'\n'
name|'vhd_info'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_info'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_fake_vhd_info'
op|','
name|'vhd_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_get_vhd_info
dedent|''
name|'def'
name|'_mock_get_vhd_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'GetVirtualHardDiskInfo'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_VHD_INFO_XML'
op|','
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_dynamic_vhd
dedent|''
name|'def'
name|'test_create_dynamic_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'return_value'
op|'='
op|'{'
string|"'Format'"
op|':'
name|'self'
op|'.'
name|'_FAKE_FORMAT'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'CreateDynamicVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'create_dynamic_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|')'
newline|'\n'
nl|'\n'
name|'mock_img_svc'
op|'.'
name|'CreateDynamicVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'MaxInternalSize'
op|'='
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_vmutils'
op|'.'
name|'check_ret_val'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|','
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reconnect_parent_vhd
dedent|''
name|'def'
name|'test_reconnect_parent_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'ReconnectParentVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'reconnect_parent_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_PARENT_PATH'
op|')'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'ReconnectParentVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'ChildPath'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'ParentPath'
op|'='
name|'self'
op|'.'
name|'_FAKE_PARENT_PATH'
op|','
nl|'\n'
name|'Force'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_vmutils'
op|'.'
name|'check_ret_val'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|','
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_vhd
dedent|''
name|'def'
name|'test_merge_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'MergeVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'merge_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'mock_img_svc'
op|'.'
name|'MergeVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'SourcePath'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'DestinationPath'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_vmutils'
op|'.'
name|'check_ret_val'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|','
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_vhd
dedent|''
name|'def'
name|'test_resize_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'ExpandVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'resize_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'mock_img_svc'
op|'.'
name|'ExpandVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'MaxInternalSize'
op|'='
name|'self'
op|'.'
name|'_FAKE_MAX_INTERNAL_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_vmutils'
op|'.'
name|'check_ret_val'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|','
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mocked_get_internal_vhd_size
dedent|''
name|'def'
name|'_mocked_get_internal_vhd_size'
op|'('
name|'self'
op|','
name|'root_vhd_size'
op|','
name|'vhd_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_vhd_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'return_value'
op|'='
op|'{'
string|"'Type'"
op|':'
name|'vhd_type'
op|'}'
op|')'
newline|'\n'
name|'mock_get_blk_size'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_FAKE_DYNAMIC_BLK_SIZE'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'multiple'
op|'('
name|'self'
op|'.'
name|'_vhdutils'
op|','
nl|'\n'
name|'get_vhd_info'
op|'='
name|'mock_get_vhd_info'
op|','
nl|'\n'
name|'_get_vhd_dynamic_blk_size'
op|'='
name|'mock_get_blk_size'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'('
nl|'\n'
name|'None'
op|','
name|'root_vhd_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_differencing_vhd
dedent|''
dedent|''
name|'def'
name|'test_create_differencing_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_img_svc'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'mock_img_svc'
op|'.'
name|'CreateDifferencingVirtualHardDisk'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_JOB_PATH'
op|','
name|'self'
op|'.'
name|'_FAKE_RET_VAL'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'create_differencing_vhd'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_PARENT_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'mock_img_svc'
op|'.'
name|'CreateDifferencingVirtualHardDisk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|','
nl|'\n'
name|'ParentPath'
op|'='
name|'self'
op|'.'
name|'_FAKE_PARENT_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_internal_vhd_size_by_file_size_fixed
dedent|''
name|'def'
name|'test_get_internal_vhd_size_by_file_size_fixed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root_vhd_size'
op|'='
number|'1'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'real_size'
op|'='
name|'self'
op|'.'
name|'_mocked_get_internal_vhd_size'
op|'('
nl|'\n'
name|'root_vhd_size'
op|','
name|'constants'
op|'.'
name|'VHD_TYPE_FIXED'
op|')'
newline|'\n'
nl|'\n'
name|'expected_vhd_size'
op|'='
number|'1'
op|'*'
number|'1024'
op|'**'
number|'3'
op|'-'
number|'512'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vhd_size'
op|','
name|'real_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_internal_vhd_size_by_file_size_dynamic
dedent|''
name|'def'
name|'test_get_internal_vhd_size_by_file_size_dynamic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root_vhd_size'
op|'='
number|'20'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'real_size'
op|'='
name|'self'
op|'.'
name|'_mocked_get_internal_vhd_size'
op|'('
nl|'\n'
name|'root_vhd_size'
op|','
name|'constants'
op|'.'
name|'VHD_TYPE_DYNAMIC'
op|')'
newline|'\n'
nl|'\n'
name|'expected_vhd_size'
op|'='
number|'20'
op|'*'
number|'1024'
op|'**'
number|'3'
op|'-'
number|'43008'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vhd_size'
op|','
name|'real_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_internal_vhd_size_by_file_size_differencing
dedent|''
name|'def'
name|'test_get_internal_vhd_size_by_file_size_differencing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# For differencing images, the internal size of the parent vhd'
nl|'\n'
comment|'# is returned'
nl|'\n'
indent|'        '
name|'vhdutil'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'('
op|')'
newline|'\n'
name|'root_vhd_size'
op|'='
number|'20'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'vhdutil'
op|'.'
name|'get_vhd_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'vhdutil'
op|'.'
name|'get_vhd_parent_path'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'vhdutil'
op|'.'
name|'get_vhd_parent_path'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
newline|'\n'
name|'vhdutil'
op|'.'
name|'get_vhd_info'
op|'.'
name|'side_effect'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'Type'"
op|':'
number|'4'
op|'}'
op|','
op|'{'
string|"'Type'"
op|':'
name|'constants'
op|'.'
name|'VHD_TYPE_DYNAMIC'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'vhdutil'
op|'.'
name|'_get_vhd_dynamic_blk_size'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'vhdutil'
op|'.'
name|'_get_vhd_dynamic_blk_size'
op|'.'
name|'return_value'
op|'='
number|'2097152'
newline|'\n'
nl|'\n'
name|'real_size'
op|'='
name|'vhdutil'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'('
name|'None'
op|','
nl|'\n'
name|'root_vhd_size'
op|')'
newline|'\n'
name|'expected_vhd_size'
op|'='
number|'20'
op|'*'
number|'1024'
op|'**'
number|'3'
op|'-'
number|'43008'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vhd_size'
op|','
name|'real_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vhd_format_vhdx
dedent|''
name|'def'
name|'test_get_vhd_format_vhdx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vhdutils.open'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
name|'vhdutils'
op|'.'
name|'VHDX_SIGNATURE'
op|')'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'format'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'constants'
op|'.'
name|'DISK_FORMAT_VHDX'
op|','
name|'format'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vhd_format_vhd
dedent|''
dedent|''
name|'def'
name|'test_get_vhd_format_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vhdutils.open'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
name|'vhdutils'
op|'.'
name|'VHD_SIGNATURE'
op|')'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
name|'as'
name|'mock_open'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'mock_open'
op|'.'
name|'return_value'
newline|'\n'
name|'f'
op|'.'
name|'tell'
op|'.'
name|'return_value'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
name|'format'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|'('
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|','
name|'format'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vhd_format_invalid_format
dedent|''
dedent|''
name|'def'
name|'test_get_vhd_format_invalid_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vhdutils.open'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
string|"'invalid'"
op|')'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
name|'as'
name|'mock_open'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'mock_open'
op|'.'
name|'return_value'
newline|'\n'
name|'f'
op|'.'
name|'tell'
op|'.'
name|'return_value'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vhd_format_zero_length_file
dedent|''
dedent|''
name|'def'
name|'test_get_vhd_format_zero_length_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vhdutils.open'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
string|"''"
op|')'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
name|'as'
name|'mock_open'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'mock_open'
op|'.'
name|'return_value'
newline|'\n'
name|'f'
op|'.'
name|'tell'
op|'.'
name|'return_value'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_VHD_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'f'
op|'.'
name|'seek'
op|'.'
name|'assert_called_once_with'
op|'('
number|'0'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_supported_vhd_format
dedent|''
dedent|''
name|'def'
name|'test_get_supported_vhd_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fmt'
op|'='
name|'self'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_best_supported_vhd_format'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|','
name|'fmt'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
