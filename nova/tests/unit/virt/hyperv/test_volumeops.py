begin_unit
comment|'# Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'db_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'pathutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeops'
newline|'\n'
nl|'\n'
DECL|variable|FAKE_TARGET_PORTAL
name|'FAKE_TARGET_PORTAL'
op|'='
string|"'fakeportal:3260'"
newline|'\n'
DECL|variable|FAKE_VOLUME_ID
name|'FAKE_VOLUME_ID'
op|'='
string|"'fake_volume_id'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeOpsTestCase
name|'class'
name|'VolumeOpsTestCase'
op|'('
name|'test_base'
op|'.'
name|'HyperVBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for VolumeOps class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeOpsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'='
name|'volumeops'
op|'.'
name|'VolumeOps'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_driver_exception
dedent|''
name|'def'
name|'test_get_volume_driver_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake_driver'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'_get_volume_driver'
op|','
nl|'\n'
name|'connection_info'
op|'='
name|'fake_conn_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fix_instance_volume_disk_paths
dedent|''
name|'def'
name|'test_fix_instance_volume_disk_paths'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'FAKE_TARGET_PORTAL'
op|','
name|'FAKE_VOLUME_ID'
op|')'
newline|'\n'
name|'fake_vol_conn_info'
op|'='
op|'('
nl|'\n'
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volumeops'
op|','
nl|'\n'
string|"'_get_volume_driver'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volumeops'
op|','
nl|'\n'
string|"'ebs_root_in_block_devices'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get_volume_driver'
op|','
nl|'\n'
name|'mock_ebs_in_block_devices'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'fake_vol_driver'
op|'='
name|'mock_get_volume_driver'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_ebs_in_block_devices'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'fix_instance_volume_disk_paths'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'func'
op|'='
name|'fake_vol_driver'
op|'.'
name|'fix_instance_volume_disk_path'
newline|'\n'
name|'func'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
nl|'\n'
name|'fake_vol_conn_info'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'VolumeOps'
op|','
string|"'_get_volume_driver'"
op|')'
newline|'\n'
DECL|member|test_disconnect_volumes
name|'def'
name|'test_disconnect_volumes'
op|'('
name|'self'
op|','
name|'mock_get_volume_driver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'FAKE_TARGET_PORTAL'
op|','
name|'FAKE_VOLUME_ID'
op|')'
newline|'\n'
name|'block_device_mapping'
op|'='
op|'('
nl|'\n'
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'fake_volume_driver'
op|'='
name|'mock_get_volume_driver'
op|'.'
name|'return_value'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volumeops'
op|'.'
name|'disconnect_volumes'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'fake_volume_driver'
op|'.'
name|'disconnect_volumes'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ISCSIVolumeDriverTestCase
dedent|''
dedent|''
name|'class'
name|'ISCSIVolumeDriverTestCase'
op|'('
name|'test_base'
op|'.'
name|'HyperVBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Hyper-V ISCSIVolumeDriver class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ISCSIVolumeDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'='
name|'volumeops'
op|'.'
name|'ISCSIVolumeDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_mounted_disk_from_lun
dedent|''
name|'def'
name|'test_get_mounted_disk_from_lun'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_volutils'
op|','
nl|'\n'
string|"'get_device_number_for_target'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_vmutils'
op|','
nl|'\n'
string|"'get_mounted_disk_by_drive_number'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get_device_number_for_target'
op|','
nl|'\n'
name|'mock_get_mounted_disk_by_drive_number'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'mock_get_device_number_for_target'
op|'.'
name|'return_value'
op|'='
number|'0'
newline|'\n'
name|'mock_get_mounted_disk_by_drive_number'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|')'
newline|'\n'
nl|'\n'
name|'disk'
op|'='
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_get_mounted_disk_from_lun'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'target_iqn'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'target_lun'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fix_instace_volume_disk_path
dedent|''
dedent|''
name|'def'
name|'test_fix_instace_volume_disk_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'FAKE_TARGET_PORTAL'
op|','
name|'FAKE_VOLUME_ID'
op|')'
newline|'\n'
name|'fake_vol_conn_info'
op|'='
op|'('
nl|'\n'
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|','
nl|'\n'
string|"'_get_mounted_disk_from_lun'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_vmutils'
op|','
nl|'\n'
string|"'get_vm_scsi_controller'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_vmutils'
op|','
nl|'\n'
string|"'set_disk_host_resource'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get_mounted_disk_from_lun'
op|','
nl|'\n'
name|'mock_get_vm_scsi_controller'
op|','
nl|'\n'
name|'mock_set_disk_host_resource'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'mock_get_mounted_disk_from_lun'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'mounted_path'
op|')'
newline|'\n'
name|'mock_get_vm_scsi_controller'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'fix_instance_volume_disk_path'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
nl|'\n'
name|'fake_vol_conn_info'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_address'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_mounted_disk_from_lun'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
string|"'iqn.2010-10.org.openstack:volume-'"
op|'+'
name|'FAKE_VOLUME_ID'
op|','
nl|'\n'
number|'1'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_get_vm_scsi_controller'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|')'
newline|'\n'
name|'mock_set_disk_host_resource'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_path'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_address'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'mounted_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.sleep'"
op|')'
newline|'\n'
DECL|member|test_get_mounted_disk_from_lun_failure
name|'def'
name|'test_get_mounted_disk_from_lun_failure'
op|'('
name|'self'
op|','
name|'fake_sleep'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'mounted_disk_query_retry_count'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_volutils'
op|','
nl|'\n'
string|"'get_device_number_for_target'"
op|')'
name|'as'
name|'m_device_num'
op|':'
newline|'\n'
indent|'            '
name|'m_device_num'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'None'
op|','
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_get_mounted_disk_from_lun'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'target_iqn'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'target_lun'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'ISCSIVolumeDriver'
op|','
string|"'logout_storage_target'"
op|')'
newline|'\n'
DECL|member|test_disconnect_volumes
name|'def'
name|'test_disconnect_volumes'
op|'('
name|'self'
op|','
name|'mock_logout_storage_target'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'FAKE_TARGET_PORTAL'
op|','
name|'FAKE_VOLUME_ID'
op|')'
newline|'\n'
name|'block_device_mapping'
op|'='
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
newline|'\n'
name|'fake_target_iqn'
op|'='
string|"'iqn.2010-10.org.openstack:volume-'"
op|'+'
name|'FAKE_VOLUME_ID'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'disconnect_volumes'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
name|'mock_logout_storage_target'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_target_iqn'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SMBFSVolumeDriverTestCase
dedent|''
dedent|''
name|'class'
name|'SMBFSVolumeDriverTestCase'
op|'('
name|'test_base'
op|'.'
name|'HyperVBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V SMBFSVolumeDriver class."""'
newline|'\n'
nl|'\n'
DECL|variable|_FAKE_SHARE
name|'_FAKE_SHARE'
op|'='
string|"'//1.2.3.4/fake_share'"
newline|'\n'
DECL|variable|_FAKE_SHARE_NORMALIZED
name|'_FAKE_SHARE_NORMALIZED'
op|'='
name|'_FAKE_SHARE'
op|'.'
name|'replace'
op|'('
string|"'/'"
op|','
string|"'\\\\'"
op|')'
newline|'\n'
DECL|variable|_FAKE_DISK_NAME
name|'_FAKE_DISK_NAME'
op|'='
string|"'fake_volume_name.vhdx'"
newline|'\n'
DECL|variable|_FAKE_USERNAME
name|'_FAKE_USERNAME'
op|'='
string|"'fake_username'"
newline|'\n'
DECL|variable|_FAKE_PASSWORD
name|'_FAKE_PASSWORD'
op|'='
string|"'fake_password'"
newline|'\n'
name|'_FAKE_SMB_OPTIONS'
op|'='
string|"'-o username=%s,password=%s'"
op|'%'
op|'('
name|'_FAKE_USERNAME'
op|','
nl|'\n'
name|'_FAKE_PASSWORD'
op|')'
newline|'\n'
DECL|variable|_FAKE_CONNECTION_INFO
name|'_FAKE_CONNECTION_INFO'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'_FAKE_SHARE'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'_FAKE_DISK_NAME'
op|','
nl|'\n'
string|"'options'"
op|':'
name|'_FAKE_SMB_OPTIONS'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SMBFSVolumeDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'='
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|','
string|"'_parse_credentials'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|','
string|"'ensure_share_mounted'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|','
string|"'_get_disk_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_scsi_controller'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_free_controller_slot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'attach_drive'"
op|')'
newline|'\n'
DECL|member|_test_attach_volume
name|'def'
name|'_test_attach_volume'
op|'('
name|'self'
op|','
name|'mock_attach_drive'
op|','
nl|'\n'
name|'mock_get_free_controller_slot'
op|','
nl|'\n'
name|'mock_get_vm_scsi_controller'
op|','
nl|'\n'
name|'mock_get_disk_path'
op|','
nl|'\n'
name|'mock_ensure_share_mounted'
op|','
nl|'\n'
name|'mock_parse_credentials'
op|','
nl|'\n'
name|'image_exists'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parse_credentials'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'username'
op|','
name|'self'
op|'.'
name|'_FAKE_PASSWORD'
op|')'
newline|'\n'
name|'mock_get_vm_scsi_controller'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_path'
op|')'
newline|'\n'
name|'mock_get_free_controller_slot'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_slot'
op|')'
newline|'\n'
name|'mock_get_disk_path'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'image_exists'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'attach_volume'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
name|'mock_ensure_share_mounted'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|')'
newline|'\n'
name|'mock_get_disk_path'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|')'
newline|'\n'
name|'mock_get_vm_scsi_controller'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|')'
newline|'\n'
name|'mock_get_free_controller_slot'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_path'
op|')'
newline|'\n'
name|'mock_attach_drive'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_path'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'controller_slot'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mock_attach_drive'
op|'.'
name|'side_effect'
op|'='
op|'('
nl|'\n'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_non_existing_image
dedent|''
name|'def'
name|'test_attach_non_existing_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_volume'
op|'('
name|'image_exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|','
string|"'_get_disk_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'detach_vm_disk'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pathutils'
op|'.'
name|'PathUtils'
op|','
string|"'unmount_smb_share'"
op|')'
newline|'\n'
DECL|member|test_detach_volume
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|','
name|'mock_unmount_smb_share'
op|','
name|'mock_detach_vm_disk'
op|','
nl|'\n'
name|'mock_get_disk_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_disk_path'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'detach_volume'
op|'('
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
name|'mock_detach_vm_disk'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_name'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'disk_path'
op|','
nl|'\n'
name|'is_physical'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_credentials
dedent|''
name|'def'
name|'test_parse_credentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'username'
op|','
name|'password'
op|'='
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_parse_credentials'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_SMB_OPTIONS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_FAKE_USERNAME'
op|','
name|'username'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_FAKE_PASSWORD'
op|','
name|'password'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_disk_path
dedent|''
name|'def'
name|'test_get_disk_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_FAKE_SHARE_NORMALIZED'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_DISK_NAME'
op|')'
newline|'\n'
nl|'\n'
name|'disk_path'
op|'='
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'_get_disk_path'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'disk_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'SMBFSVolumeDriver'
op|','
string|"'_parse_credentials'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pathutils'
op|'.'
name|'PathUtils'
op|','
string|"'check_smb_mapping'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pathutils'
op|'.'
name|'PathUtils'
op|','
string|"'mount_smb_share'"
op|')'
newline|'\n'
DECL|member|_test_ensure_mounted
name|'def'
name|'_test_ensure_mounted'
op|'('
name|'self'
op|','
name|'mock_mount_smb_share'
op|','
nl|'\n'
name|'mock_check_smb_mapping'
op|','
name|'mock_parse_credentials'
op|','
nl|'\n'
name|'is_mounted'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_check_smb_mapping'
op|'.'
name|'return_value'
op|'='
name|'is_mounted'
newline|'\n'
name|'mock_parse_credentials'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_USERNAME'
op|','
name|'self'
op|'.'
name|'_FAKE_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'ensure_share_mounted'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'is_mounted'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'mock_mount_smb_share'
op|'.'
name|'called'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mock_mount_smb_share'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_SHARE_NORMALIZED'
op|','
nl|'\n'
name|'username'
op|'='
name|'self'
op|'.'
name|'_FAKE_USERNAME'
op|','
nl|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'_FAKE_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_mounted_new_share
dedent|''
dedent|''
name|'def'
name|'test_ensure_mounted_new_share'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_ensure_mounted'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_already_mounted
dedent|''
name|'def'
name|'test_ensure_already_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_ensure_mounted'
op|'('
name|'is_mounted'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pathutils'
op|'.'
name|'PathUtils'
op|','
string|"'unmount_smb_share'"
op|')'
newline|'\n'
DECL|member|test_disconnect_volumes
name|'def'
name|'test_disconnect_volumes'
op|'('
name|'self'
op|','
name|'mock_unmount_smb_share'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_mapping'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'self'
op|'.'
name|'_FAKE_CONNECTION_INFO'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_volume_driver'
op|'.'
name|'disconnect_volumes'
op|'('
name|'block_device_mapping'
op|')'
newline|'\n'
name|'mock_unmount_smb_share'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_SHARE_NORMALIZED'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
