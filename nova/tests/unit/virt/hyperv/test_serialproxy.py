begin_unit
comment|'# Copyright 2016 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'serialproxy'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SerialProxyTestCase
name|'class'
name|'SerialProxyTestCase'
op|'('
name|'test_base'
op|'.'
name|'HyperVBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'socket'
op|','
string|"'socket'"
op|')'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
name|'mock_socket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SerialProxyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_socket'
op|'='
name|'mock_socket'
newline|'\n'
name|'self'
op|'.'
name|'_mock_input_queue'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mock_output_queue'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mock_client_connected'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'threading_patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'serialproxy'
op|','
string|"'threading'"
op|')'
newline|'\n'
name|'threading_patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'threading_patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'='
name|'serialproxy'
op|'.'
name|'SerialProxy'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_nane'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'host'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'port'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_mock_input_queue'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_mock_output_queue'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_mock_client_connected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'socket'
op|','
string|"'socket'"
op|')'
newline|'\n'
DECL|member|test_setup_socket_exception
name|'def'
name|'test_setup_socket_exception'
op|'('
name|'self'
op|','
name|'mock_socket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_socket'
op|'='
name|'mock_socket'
op|'.'
name|'return_value'
newline|'\n'
nl|'\n'
name|'fake_socket'
op|'.'
name|'listen'
op|'.'
name|'side_effect'
op|'='
name|'socket'
op|'.'
name|'error'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_setup_socket'
op|')'
newline|'\n'
nl|'\n'
name|'fake_socket'
op|'.'
name|'setsockopt'
op|'.'
name|'assert_called_once_with'
op|'('
name|'socket'
op|'.'
name|'SOL_SOCKET'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'SO_REUSEADDR'
op|','
nl|'\n'
number|'1'
op|')'
newline|'\n'
name|'fake_socket'
op|'.'
name|'bind'
op|'.'
name|'assert_called_once_with'
op|'('
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'host'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'port'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_serial_proxy
dedent|''
name|'def'
name|'test_stop_serial_proxy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_sock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_stopped'
op|'.'
name|'set'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_client_connected'
op|'.'
name|'clear'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'.'
name|'shutdown'
op|'.'
name|'assert_called_once_with'
op|'('
name|'socket'
op|'.'
name|'SHUT_RDWR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_sock'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'serialproxy'
op|'.'
name|'SerialProxy'
op|','
string|"'_accept_conn'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'serialproxy'
op|'.'
name|'SerialProxy'
op|','
string|"'_setup_socket'"
op|')'
newline|'\n'
DECL|member|test_run
name|'def'
name|'test_run'
op|'('
name|'self'
op|','
name|'mock_setup_socket'
op|','
name|'mock_accept_con'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_stopped'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_stopped'
op|'.'
name|'isSet'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_setup_socket'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_accept_con'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accept_connection
dedent|''
name|'def'
name|'test_accept_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_conn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_sock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_sock'
op|'.'
name|'accept'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'mock_conn'
op|','
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'client_addr'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'client_port'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_accept_conn'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_client_connected'
op|'.'
name|'set'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_conn'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|')'
newline|'\n'
nl|'\n'
name|'thread'
op|'='
name|'serialproxy'
op|'.'
name|'threading'
op|'.'
name|'Thread'
newline|'\n'
name|'for'
name|'job'
name|'in'
op|'['
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_get_data'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_send_data'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'assert_any_call'
op|'('
name|'target'
op|'='
name|'job'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_data
dedent|''
dedent|''
name|'def'
name|'test_get_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mock_client_connected'
op|'.'
name|'isSet'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'.'
name|'recv'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'data'
op|','
name|'None'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_get_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_client_connected'
op|'.'
name|'clear'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mock_input_queue'
op|'.'
name|'put'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_send_data
dedent|''
name|'def'
name|'_test_send_data'
op|'('
name|'self'
op|','
name|'exception'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mock_client_connected'
op|'.'
name|'isSet'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_mock_output_queue'
op|'.'
name|'get_burst'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'data'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'.'
name|'sendall'
op|'.'
name|'side_effect'
op|'='
name|'exception'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_send_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_conn'
op|'.'
name|'sendall'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'data'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_proxy'
op|'.'
name|'_client_connected'
op|'.'
name|'clear'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_data
dedent|''
dedent|''
name|'def'
name|'test_send_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_send_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_data_exception
dedent|''
name|'def'
name|'test_send_data_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_send_data'
op|'('
name|'exception'
op|'='
name|'socket'
op|'.'
name|'error'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
