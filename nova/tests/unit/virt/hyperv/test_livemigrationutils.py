begin_unit
comment|'# Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'livemigrationutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LiveMigrationUtilsTestCase
name|'class'
name|'LiveMigrationUtilsTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V LiveMigrationUtils class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'liveutils'
op|'='
name|'livemigrationutils'
op|'.'
name|'LiveMigrationUtils'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_volutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'super'
op|'('
name|'LiveMigrationUtilsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_physical_disk_paths
dedent|''
name|'def'
name|'test_get_physical_disk_paths'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ide_path'
op|'='
op|'{'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'IDE_PATH'
op|':'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'IDE_HOST_RESOURCE'
op|'}'
newline|'\n'
name|'scsi_path'
op|'='
op|'{'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'SCSI_PATH'
op|':'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'SCSI_HOST_RESOURCE'
op|'}'
newline|'\n'
name|'ide_ctrl'
op|'='
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_vm_ide_controller'
op|'.'
name|'return_value'
newline|'\n'
name|'scsi_ctrl'
op|'='
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_vm_scsi_controller'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_get_controller_paths'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_controller_volume_paths'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_controller_paths'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'ide_path'
op|','
name|'scsi_path'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_get_physical_disk_paths'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'VM_NAME'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'dict'
op|'('
name|'ide_path'
op|')'
newline|'\n'
name|'expected'
op|'.'
name|'update'
op|'('
name|'scsi_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictContainsSubset'
op|'('
name|'expected'
op|','
name|'result'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'ide_ctrl'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
name|'scsi_ctrl'
op|')'
op|']'
newline|'\n'
name|'mock_get_controller_paths'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_physical_disk_paths_no_ide
dedent|''
name|'def'
name|'test_get_physical_disk_paths_no_ide'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scsi_path'
op|'='
op|'{'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'SCSI_PATH'
op|':'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'SCSI_HOST_RESOURCE'
op|'}'
newline|'\n'
name|'scsi_ctrl'
op|'='
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_vm_scsi_controller'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_get_controller_paths'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_controller_volume_paths'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_vmutils'
op|'.'
name|'get_vm_ide_controller'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'mock_get_controller_paths'
op|'.'
name|'return_value'
op|'='
name|'scsi_path'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'liveutils'
op|'.'
name|'_get_physical_disk_paths'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'VM_NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scsi_path'
op|','
name|'result'
op|')'
newline|'\n'
name|'mock_get_controller_paths'
op|'.'
name|'assert_called_once_with'
op|'('
name|'scsi_ctrl'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
