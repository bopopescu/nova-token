begin_unit
comment|'# Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_flavor'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'imagecache'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ImageCacheTestCase
name|'class'
name|'ImageCacheTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V ImageCache class."""'
newline|'\n'
nl|'\n'
DECL|variable|FAKE_BASE_DIR
name|'FAKE_BASE_DIR'
op|'='
string|"'fake/base/dir'"
newline|'\n'
DECL|variable|FAKE_FORMAT
name|'FAKE_FORMAT'
op|'='
string|"'fake_format'"
newline|'\n'
DECL|variable|FAKE_IMAGE_REF
name|'FAKE_IMAGE_REF'
op|'='
string|"'fake_image_ref'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ImageCacheTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
string|"'fake-context'"
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
comment|'# utilsfactory will check the host OS version via get_hostutils,'
nl|'\n'
comment|'# in order to return the proper Utils Class, so it must be mocked.'
nl|'\n'
name|'patched_func'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagecache'
op|'.'
name|'utilsfactory'
op|','
nl|'\n'
string|'"get_hostutils"'
op|')'
newline|'\n'
name|'patched_get_pathutils'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagecache'
op|'.'
name|'utilsfactory'
op|','
nl|'\n'
string|'"get_pathutils"'
op|')'
newline|'\n'
name|'patched_func'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'patched_get_pathutils'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patched_func'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patched_get_pathutils'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'='
name|'imagecache'
op|'.'
name|'ImageCache'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_vhdutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_root_vhd_size_gb
dedent|''
name|'def'
name|'_test_get_root_vhd_size_gb'
op|'('
name|'self'
op|','
name|'old_flavor'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'old_flavor'
op|':'
newline|'\n'
indent|'            '
name|'mock_flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'test_flavor'
op|'.'
name|'fake_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'old_flavor'
op|'='
name|'mock_flavor'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance'
op|'.'
name|'old_flavor'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_get_root_vhd_size_gb'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_root_vhd_size_gb_old_flavor
dedent|''
name|'def'
name|'test_get_root_vhd_size_gb_old_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret_val'
op|'='
name|'self'
op|'.'
name|'_test_get_root_vhd_size_gb'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_flavor'
op|'.'
name|'fake_flavor'
op|'['
string|"'root_gb'"
op|']'
op|','
name|'ret_val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_root_vhd_size_gb
dedent|''
name|'def'
name|'test_get_root_vhd_size_gb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret_val'
op|'='
name|'self'
op|'.'
name|'_test_get_root_vhd_size_gb'
op|'('
name|'old_flavor'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance'
op|'.'
name|'root_gb'
op|','
name|'ret_val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_prepare_get_cached_image
dedent|''
name|'def'
name|'_prepare_get_cached_image'
op|'('
name|'self'
op|','
name|'path_exists'
op|','
name|'use_cow'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'.'
name|'image_ref'
op|'='
name|'self'
op|'.'
name|'FAKE_IMAGE_REF'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'.'
name|'get_base_vhd_dir'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'FAKE_BASE_DIR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'path_exists'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|')'
newline|'\n'
nl|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'use_cow_images'"
op|','
name|'use_cow'
op|')'
newline|'\n'
nl|'\n'
name|'expected_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'FAKE_BASE_DIR'
op|','
nl|'\n'
name|'self'
op|'.'
name|'FAKE_IMAGE_REF'
op|')'
newline|'\n'
name|'expected_vhd_path'
op|'='
string|'"%s.%s"'
op|'%'
op|'('
name|'expected_path'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
op|'('
name|'expected_path'
op|','
name|'expected_vhd_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagecache'
op|'.'
name|'images'
op|','
string|"'fetch'"
op|')'
newline|'\n'
DECL|member|test_get_cached_image_with_fetch
name|'def'
name|'test_get_cached_image_with_fetch'
op|'('
name|'self'
op|','
name|'mock_fetch'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'expected_path'
op|','
nl|'\n'
name|'expected_vhd_path'
op|')'
op|'='
name|'self'
op|'.'
name|'_prepare_get_cached_image'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'get_cached_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vhd_path'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'mock_fetch'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'FAKE_IMAGE_REF'
op|','
nl|'\n'
name|'expected_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_vhdutils'
op|'.'
name|'get_vhd_format'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'.'
name|'rename'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_path'
op|','
name|'expected_vhd_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagecache'
op|'.'
name|'images'
op|','
string|"'fetch'"
op|')'
newline|'\n'
DECL|member|test_get_cached_image_with_fetch_exception
name|'def'
name|'test_get_cached_image_with_fetch_exception'
op|'('
name|'self'
op|','
name|'mock_fetch'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'expected_path'
op|','
nl|'\n'
name|'expected_vhd_path'
op|')'
op|'='
name|'self'
op|'.'
name|'_prepare_get_cached_image'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|"# path doesn't exist until fetched."
nl|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'.'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|']'
newline|'\n'
name|'mock_fetch'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidImageRef'
op|'('
nl|'\n'
name|'image_href'
op|'='
name|'self'
op|'.'
name|'FAKE_IMAGE_REF'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidImageRef'
op|','
nl|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'get_cached_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'_pathutils'
op|'.'
name|'remove'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagecache'
op|'.'
name|'ImageCache'
op|','
string|"'_resize_and_cache_vhd'"
op|')'
newline|'\n'
DECL|member|test_get_cached_image_use_cow
name|'def'
name|'test_get_cached_image_use_cow'
op|'('
name|'self'
op|','
name|'mock_resize'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'expected_path'
op|','
nl|'\n'
name|'expected_vhd_path'
op|')'
op|'='
name|'self'
op|'.'
name|'_prepare_get_cached_image'
op|'('
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'expected_resized_vhd_path'
op|'='
name|'expected_vhd_path'
op|'+'
string|"'x'"
newline|'\n'
name|'mock_resize'
op|'.'
name|'return_value'
op|'='
name|'expected_resized_vhd_path'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'imagecache'
op|'.'
name|'get_cached_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_resized_vhd_path'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'mock_resize'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'expected_vhd_path'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
