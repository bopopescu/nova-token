begin_unit
comment|'#  Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeutilsv2'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'volume_attach_retry_count'"
op|','
string|"'nova.virt.hyperv.volumeops'"
op|','
nl|'\n'
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeUtilsV2TestCase
name|'class'
name|'VolumeUtilsV2TestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V VolumeUtilsV2 class."""'
newline|'\n'
nl|'\n'
DECL|variable|_FAKE_PORTAL_ADDR
name|'_FAKE_PORTAL_ADDR'
op|'='
string|"'10.1.1.1'"
newline|'\n'
DECL|variable|_FAKE_PORTAL_PORT
name|'_FAKE_PORTAL_PORT'
op|'='
string|"'3260'"
newline|'\n'
DECL|variable|_FAKE_LUN
name|'_FAKE_LUN'
op|'='
number|'0'
newline|'\n'
DECL|variable|_FAKE_TARGET
name|'_FAKE_TARGET'
op|'='
string|"'iqn.2010-10.org.openstack:fake_target'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeUtilsV2TestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'='
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_wmi'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'volume_attach_retry_count'
op|'='
number|'4'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'volume_attach_retry_interval'
op|'='
number|'0'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_login_target_portal
dedent|''
name|'def'
name|'_test_login_target_portal'
op|'('
name|'self'
op|','
name|'portal_connected'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_portal'
op|'='
string|"'%s:%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'_FAKE_PORTAL_ADDR'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_PORTAL_PORT'
op|')'
newline|'\n'
name|'fake_portal_object'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'_query'
op|'='
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'query'
newline|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'MSFT_iSCSITargetPortal'
op|'='
op|'('
nl|'\n'
name|'fake_portal_object'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'portal_connected'
op|':'
newline|'\n'
indent|'            '
name|'_query'
op|'.'
name|'return_value'
op|'='
op|'['
name|'fake_portal_object'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'_query'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_login_target_portal'
op|'('
name|'fake_portal'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'portal_connected'
op|':'
newline|'\n'
indent|'            '
name|'fake_portal_object'
op|'.'
name|'Update'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fake_portal_object'
op|'.'
name|'New'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'TargetPortalAddress'
op|'='
name|'self'
op|'.'
name|'_FAKE_PORTAL_ADDR'
op|','
nl|'\n'
name|'TargetPortalPortNumber'
op|'='
name|'self'
op|'.'
name|'_FAKE_PORTAL_PORT'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_connected_portal
dedent|''
dedent|''
name|'def'
name|'test_login_connected_portal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target_portal'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_new_portal
dedent|''
name|'def'
name|'test_login_new_portal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target_portal'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_login_target
dedent|''
name|'def'
name|'_test_login_target'
op|'('
name|'self'
op|','
name|'target_connected'
op|'='
name|'False'
op|','
name|'raise_exception'
op|'='
name|'False'
op|','
nl|'\n'
name|'use_chap'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_portal'
op|'='
string|"'%s:%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'_FAKE_PORTAL_ADDR'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_PORTAL_PORT'
op|')'
newline|'\n'
nl|'\n'
name|'fake_target_object'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'target_connected'
op|':'
newline|'\n'
indent|'            '
name|'fake_target_object'
op|'.'
name|'IsConnected'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'raise_exception'
op|':'
newline|'\n'
indent|'            '
name|'type'
op|'('
name|'fake_target_object'
op|')'
op|'.'
name|'IsConnected'
op|'='
name|'mock'
op|'.'
name|'PropertyMock'
op|'('
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fake_target_object'
op|'.'
name|'IsConnected'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'_query'
op|'='
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'query'
newline|'\n'
name|'_query'
op|'.'
name|'return_value'
op|'='
op|'['
name|'fake_target_object'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'MSFT_iSCSITarget'
op|'='
op|'('
nl|'\n'
name|'fake_target_object'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'use_chap'
op|':'
newline|'\n'
indent|'            '
name|'username'
op|','
name|'password'
op|'='
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'username'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'password'
op|')'
newline|'\n'
name|'auth'
op|'='
op|'{'
nl|'\n'
string|"'AuthenticationType'"
op|':'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_CHAP_AUTH_TYPE'
op|','
nl|'\n'
string|"'ChapUsername'"
op|':'
name|'username'
op|','
nl|'\n'
string|"'ChapSecret'"
op|':'
name|'password'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'username'
op|','
name|'password'
op|'='
name|'None'
op|','
name|'None'
newline|'\n'
name|'auth'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'raise_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'login_storage_target'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_LUN'
op|','
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|','
name|'fake_portal'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'login_storage_target'
op|'('
name|'self'
op|'.'
name|'_FAKE_LUN'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|','
nl|'\n'
name|'fake_portal'
op|','
nl|'\n'
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'target_connected'
op|':'
newline|'\n'
indent|'                '
name|'fake_target_object'
op|'.'
name|'Update'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'fake_target_object'
op|'.'
name|'Connect'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'IsPersistent'
op|'='
name|'True'
op|','
name|'NodeAddress'
op|'='
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|','
op|'**'
name|'auth'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_connected_target
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_login_connected_target'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target'
op|'('
name|'target_connected'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_disconncted_target
dedent|''
name|'def'
name|'test_login_disconncted_target'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_target_exception
dedent|''
name|'def'
name|'test_login_target_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target'
op|'('
name|'raise_exception'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_target_using_chap
dedent|''
name|'def'
name|'test_login_target_using_chap'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_login_target'
op|'('
name|'use_chap'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_logout_storage_target
dedent|''
name|'def'
name|'test_logout_storage_target'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_msft_target'
op|'='
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'MSFT_iSCSITarget'
newline|'\n'
name|'mock_msft_session'
op|'='
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_storage'
op|'.'
name|'MSFT_iSCSISession'
newline|'\n'
nl|'\n'
name|'mock_target'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_target'
op|'.'
name|'IsConnected'
op|'='
name|'True'
newline|'\n'
name|'mock_msft_target'
op|'.'
name|'return_value'
op|'='
op|'['
name|'mock_target'
op|']'
newline|'\n'
nl|'\n'
name|'mock_session'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_session'
op|'.'
name|'IsPersistent'
op|'='
name|'True'
newline|'\n'
name|'mock_msft_session'
op|'.'
name|'return_value'
op|'='
op|'['
name|'mock_session'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'logout_storage_target'
op|'('
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|')'
newline|'\n'
nl|'\n'
name|'mock_msft_target'
op|'.'
name|'assert_called_once_with'
op|'('
name|'NodeAddress'
op|'='
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|')'
newline|'\n'
name|'mock_msft_session'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'TargetNodeAddress'
op|'='
name|'self'
op|'.'
name|'_FAKE_TARGET'
op|')'
newline|'\n'
nl|'\n'
name|'mock_session'
op|'.'
name|'Unregister'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_target'
op|'.'
name|'Disconnect'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
string|"'logout_storage_target'"
op|')'
newline|'\n'
DECL|member|test_execute_log_out
name|'def'
name|'test_execute_log_out'
op|'('
name|'self'
op|','
name|'mock_logout_target'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sess_class'
op|'='
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'_conn_wmi'
op|'.'
name|'MSiSCSIInitiator_SessionClass'
newline|'\n'
nl|'\n'
name|'mock_session'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'sess_class'
op|'.'
name|'return_value'
op|'='
op|'['
name|'mock_session'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_volutilsv2'
op|'.'
name|'execute_log_out'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'FAKE_SESSION_ID'
op|')'
newline|'\n'
nl|'\n'
name|'sess_class'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'SessionId'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'FAKE_SESSION_ID'
op|')'
newline|'\n'
name|'mock_logout_target'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock_session'
op|'.'
name|'TargetName'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
