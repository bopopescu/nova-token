begin_unit
comment|'# Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'livemigrationops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LiveMigrationOpsTestCase
name|'class'
name|'LiveMigrationOpsTestCase'
op|'('
name|'test_base'
op|'.'
name|'HyperVBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the Hyper-V LiveMigrationOps class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LiveMigrationOpsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
string|"'fake_context'"
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'='
name|'livemigrationops'
op|'.'
name|'LiveMigrationOps'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_livemigrutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_pathutils'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vmops.VMOps.copy_vm_console_logs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vmops.VMOps.copy_vm_dvd_disks'"
op|')'
newline|'\n'
DECL|member|_test_live_migration
name|'def'
name|'_test_live_migration'
op|'('
name|'self'
op|','
name|'mock_get_vm_dvd_paths'
op|','
nl|'\n'
name|'mock_copy_logs'
op|','
name|'side_effect'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mock_post'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_recover'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'fake_dest'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'DESTINATION'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_livemigrutils'
op|'.'
name|'live_migrate_vm'
op|'.'
name|'side_effect'
op|'='
op|'['
nl|'\n'
name|'side_effect'
op|']'
newline|'\n'
name|'if'
name|'side_effect'
name|'is'
name|'vmutils'
op|'.'
name|'HyperVException'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mock_instance'
op|','
name|'fake_dest'
op|','
nl|'\n'
name|'mock_post'
op|','
name|'mock_recover'
op|','
name|'False'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_recover'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mock_instance'
op|','
nl|'\n'
name|'fake_dest'
op|','
name|'False'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'live_migration'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|'='
name|'mock_instance'
op|','
nl|'\n'
name|'dest'
op|'='
name|'fake_dest'
op|','
nl|'\n'
name|'post_method'
op|'='
name|'mock_post'
op|','
nl|'\n'
name|'recover_method'
op|'='
name|'mock_recover'
op|')'
newline|'\n'
nl|'\n'
name|'mock_copy_logs'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock_instance'
op|'.'
name|'name'
op|','
nl|'\n'
name|'fake_dest'
op|')'
newline|'\n'
name|'mock_live_migr'
op|'='
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_livemigrutils'
op|'.'
name|'live_migrate_vm'
newline|'\n'
name|'mock_live_migr'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock_instance'
op|'.'
name|'name'
op|','
nl|'\n'
name|'fake_dest'
op|')'
newline|'\n'
name|'mock_post'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mock_instance'
op|','
nl|'\n'
name|'fake_dest'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration
dedent|''
dedent|''
name|'def'
name|'test_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
name|'side_effect'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_exception
dedent|''
name|'def'
name|'test_live_migration_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
name|'side_effect'
op|'='
name|'vmutils'
op|'.'
name|'HyperVException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_wrong_os_version
dedent|''
name|'def'
name|'test_live_migration_wrong_os_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_livemigrutils'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'live_migration'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|'='
name|'mock'
op|'.'
name|'DEFAULT'
op|','
nl|'\n'
name|'dest'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'DESTINATION'
op|','
nl|'\n'
name|'post_method'
op|'='
name|'mock'
op|'.'
name|'DEFAULT'
op|','
nl|'\n'
name|'recover_method'
op|'='
name|'mock'
op|'.'
name|'DEFAULT'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.volumeops.VolumeOps'"
nl|'\n'
string|"'.ebs_root_in_block_devices'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.imagecache.ImageCache.get_cached_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.volumeops.VolumeOps'"
nl|'\n'
string|"'.initialize_volumes_connection'"
op|')'
newline|'\n'
DECL|member|test_pre_live_migration
name|'def'
name|'test_pre_live_migration'
op|'('
name|'self'
op|','
name|'mock_initialize_connection'
op|','
nl|'\n'
name|'mock_get_cached_image'
op|','
nl|'\n'
name|'mock_ebs_root_in_block_devices'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'mock_instance'
op|'.'
name|'image_ref'
op|'='
string|'"fake_image_ref"'
newline|'\n'
name|'mock_ebs_root_in_block_devices'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'use_cow_images'"
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'pre_live_migration'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mock_instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'BLOCK_INFO'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'NET_INFO'
op|')'
newline|'\n'
nl|'\n'
name|'check_config'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_livemigrutils'
op|'.'
name|'check_live_migration_config'
op|')'
newline|'\n'
name|'check_config'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_ebs_root_in_block_devices'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'BLOCK_INFO'
op|')'
newline|'\n'
name|'mock_get_cached_image'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'mock_instance'
op|')'
newline|'\n'
name|'mock_initialize_connection'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'BLOCK_INFO'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.volumeops.VolumeOps.disconnect_volumes'"
op|')'
newline|'\n'
DECL|member|test_post_live_migration
name|'def'
name|'test_post_live_migration'
op|'('
name|'self'
op|','
name|'mock_disconnect_volumes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'post_live_migration'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'block_device_info'
op|')'
newline|'\n'
name|'mock_disconnect_volumes'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'_pathutils'
op|'.'
name|'get_instance_dir'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance'
op|'.'
name|'name'
op|','
name|'create_dir'
op|'='
name|'False'
op|','
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hyperv.vmops.VMOps.log_vm_serial_output'"
op|')'
newline|'\n'
DECL|member|test_post_live_migration_at_destination
name|'def'
name|'test_post_live_migration_at_destination'
op|'('
name|'self'
op|','
name|'mock_log_vm'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_livemigrops'
op|'.'
name|'post_live_migration_at_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mock_instance'
op|','
name|'network_info'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'NET_INFO'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'BLOCK_INFO'
op|')'
newline|'\n'
name|'mock_log_vm'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock_instance'
op|'.'
name|'name'
op|','
nl|'\n'
name|'mock_instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
