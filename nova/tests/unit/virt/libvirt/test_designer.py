begin_unit
comment|'# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'pci'
name|'import'
name|'utils'
name|'as'
name|'pci_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'designer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DesignerTestCase
name|'class'
name|'DesignerTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_bandwidth_config_no_extra_specs
indent|'    '
name|'def'
name|'test_set_vif_bandwidth_config_no_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test whether test_set_vif_bandwidth_config_no_extra_specs fails when'
nl|'\n'
comment|"# its second parameter has no 'extra_specs' field."
nl|'\n'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
comment|"# The conf will never be user be used, so we can use 'None'."
nl|'\n'
comment|'# An empty dictionary is fine: all that matters it that there is no'
nl|'\n'
comment|"# 'extra_specs' field."
nl|'\n'
indent|'            '
name|'designer'
op|'.'
name|'set_vif_bandwidth_config'
op|'('
name|'None'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'KeyError: %s'"
op|'%'
name|'e'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_guest_frontend_config
dedent|''
dedent|''
name|'def'
name|'test_set_vif_guest_frontend_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_guest_frontend_config'
op|'('
name|'conf'
op|','
string|"'fake-mac'"
op|','
nl|'\n'
string|"'fake-model'"
op|','
string|"'fake-driver'"
op|','
nl|'\n'
string|"'fake-queues'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-mac'"
op|','
name|'conf'
op|'.'
name|'mac_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-model'"
op|','
name|'conf'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-driver'"
op|','
name|'conf'
op|'.'
name|'driver_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-queues'"
op|','
name|'conf'
op|'.'
name|'vhost_queues'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_bridge_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_bridge_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_bridge_config'
op|'('
name|'conf'
op|','
string|"'fake-bridge'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bridge'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-bridge'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_ethernet_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_ethernet_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_ethernet_config'
op|'('
name|'conf'
op|','
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ethernet'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'conf'
op|'.'
name|'script'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_ovs_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_ovs_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_ovs_config'
op|'('
name|'conf'
op|','
string|"'fake-bridge'"
op|','
nl|'\n'
string|"'fake-interface'"
op|','
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bridge'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-bridge'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'openvswitch'"
op|','
name|'conf'
op|'.'
name|'vporttype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_802qbg_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_802qbg_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_802qbg_config'
op|'('
name|'conf'
op|','
string|"'fake-devname'"
op|','
nl|'\n'
string|"'fake-managerid'"
op|','
nl|'\n'
string|"'fake-typeid'"
op|','
nl|'\n'
string|"'fake-typeidversion'"
op|','
nl|'\n'
string|"'fake-instanceid'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'direct'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'vepa'"
op|','
name|'conf'
op|'.'
name|'source_mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'802.1Qbg'"
op|','
name|'conf'
op|'.'
name|'vporttype'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|"'key'"
op|':'
string|"'managerid'"
op|','
string|"'value'"
op|':'
string|"'fake-managerid'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'typeid'"
op|','
string|"'value'"
op|':'
string|"'fake-typeid'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'typeidversion'"
op|','
string|"'value'"
op|':'
string|"'fake-typeidversion'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
string|"'instanceid'"
op|','
string|"'value'"
op|':'
string|"'fake-instanceid'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected'
op|','
name|'matchers'
op|'.'
name|'DictListMatches'
op|'('
name|'conf'
op|'.'
name|'vportparams'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_utils'
op|','
string|"'get_ifname_by_pci_address'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake-devname'"
op|')'
newline|'\n'
DECL|member|test_set_vif_host_backend_802qbh_config_direct
name|'def'
name|'test_set_vif_host_backend_802qbh_config_direct'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_pci'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_802qbh_config'
op|'('
name|'conf'
op|','
string|"'direct'"
op|','
nl|'\n'
string|"'fake-pci-dev'"
op|','
nl|'\n'
string|"'fake-profileid'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'direct'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'passthrough'"
op|','
name|'conf'
op|'.'
name|'source_mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'vhost'"
op|','
name|'conf'
op|'.'
name|'driver_name'
op|')'
newline|'\n'
name|'mock_pci'
op|'.'
name|'assert_called_with'
op|'('
string|"'fake-pci-dev'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'802.1Qbh'"
op|','
name|'conf'
op|'.'
name|'vporttype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_802qbh_config_hostdev
dedent|''
name|'def'
name|'test_set_vif_host_backend_802qbh_config_hostdev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_802qbh_config'
op|'('
name|'conf'
op|','
string|"'hostdev'"
op|','
nl|'\n'
string|"'fake-devname'"
op|','
nl|'\n'
string|"'fake-profileid'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hostdev'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'802.1Qbh'"
op|','
name|'conf'
op|'.'
name|'vporttype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_utils'
op|','
string|"'get_ifname_by_pci_address'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake-devname'"
op|')'
newline|'\n'
DECL|member|test_set_vif_host_backend_hw_veb_direct
name|'def'
name|'test_set_vif_host_backend_hw_veb_direct'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_pci'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_hw_veb'
op|'('
name|'conf'
op|','
string|"'direct'"
op|','
nl|'\n'
string|"'fake-pci-dev'"
op|','
nl|'\n'
string|"'fake-vlan'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'direct'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'passthrough'"
op|','
name|'conf'
op|'.'
name|'source_mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'vhost'"
op|','
name|'conf'
op|'.'
name|'driver_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
name|'mock_pci'
op|'.'
name|'assert_called_with'
op|'('
string|"'fake-pci-dev'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_hw_veb_hostdev
dedent|''
name|'def'
name|'test_set_vif_host_backend_hw_veb_hostdev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_hw_veb'
op|'('
name|'conf'
op|','
string|"'hostdev'"
op|','
nl|'\n'
string|"'fake-devname'"
op|','
nl|'\n'
string|"'fake-vlan'"
op|','
nl|'\n'
string|"'fake-tap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hostdev'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-vlan'"
op|','
name|'conf'
op|'.'
name|'vlan'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-tap'"
op|','
name|'conf'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_utils'
op|','
string|"'get_pci_address_fields'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
string|"'fake-domain'"
op|','
string|"'fake-bus'"
op|','
nl|'\n'
string|"'fake-slot'"
op|','
string|"'fake-function'"
op|')'
op|')'
newline|'\n'
DECL|member|test_set_vif_host_backend_hostdev_pci_config
name|'def'
name|'test_set_vif_host_backend_hostdev_pci_config'
op|'('
name|'self'
op|','
name|'mock_pci_fields'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_hostdev_pci_config'
op|'('
name|'conf'
op|','
nl|'\n'
string|"'fake-pci-slot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-domain'"
op|','
name|'conf'
op|'.'
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-bus'"
op|','
name|'conf'
op|'.'
name|'bus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-slot'"
op|','
name|'conf'
op|'.'
name|'slot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-function'"
op|','
name|'conf'
op|'.'
name|'function'
op|')'
newline|'\n'
name|'mock_pci_fields'
op|'.'
name|'assert_called_with'
op|'('
string|"'fake-pci-slot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_direct_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_direct_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_direct_config'
op|'('
name|'conf'
op|','
string|"'fake-devname'"
op|','
nl|'\n'
name|'mode'
op|'='
string|'"passthrough"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'direct'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-devname'"
op|','
name|'conf'
op|'.'
name|'source_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'passthrough'"
op|','
name|'conf'
op|'.'
name|'source_mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtio'"
op|','
name|'conf'
op|'.'
name|'model'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vif_host_backend_vhostuser_config
dedent|''
name|'def'
name|'test_set_vif_host_backend_vhostuser_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'config'
op|'.'
name|'LibvirtConfigGuestInterface'
op|'('
op|')'
newline|'\n'
name|'designer'
op|'.'
name|'set_vif_host_backend_vhostuser_config'
op|'('
name|'conf'
op|','
string|"'fake-mode'"
op|','
nl|'\n'
string|"'fake-path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'vhostuser'"
op|','
name|'conf'
op|'.'
name|'net_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'unix'"
op|','
name|'conf'
op|'.'
name|'vhostuser_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-mode'"
op|','
name|'conf'
op|'.'
name|'vhostuser_mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-path'"
op|','
name|'conf'
op|'.'
name|'vhostuser_path'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
