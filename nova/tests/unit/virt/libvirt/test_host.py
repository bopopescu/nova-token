begin_unit
comment|'#    Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#    Copyright 2012 University Of Minho'
nl|'\n'
comment|'#    Copyright 2014 Red Hat, Inc'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fakelibvirt'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'event'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
name|'as'
name|'vconfig'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'host'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtDomain
name|'class'
name|'FakeVirtDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|'='
op|'-'
number|'1'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'_name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_name'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_id'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_uuid'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostTestCase
dedent|''
dedent|''
name|'class'
name|'HostTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fakelibvirt'
op|'.'
name|'FakeLibvirtFixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"qemu:///system"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"registerCloseCallback"'
op|')'
newline|'\n'
DECL|member|test_close_callback
name|'def'
name|'test_close_callback'
op|'('
name|'self'
op|','
name|'mock_close'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'close_callback'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|set_close_callback
name|'def'
name|'set_close_callback'
op|'('
name|'cb'
op|','
name|'opaque'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close_callback'
op|'='
name|'cb'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_close'
op|'.'
name|'side_effect'
op|'='
name|'set_close_callback'
newline|'\n'
comment|'# verify that the driver registers for the close callback'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'close_callback'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"registerCloseCallback"'
op|')'
newline|'\n'
DECL|member|test_close_callback_bad_signature
name|'def'
name|'test_close_callback_bad_signature'
op|'('
name|'self'
op|','
name|'mock_close'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Validates that a connection to libvirt exist,\n           even when registerCloseCallback method has a different\n           number of arguments in the libvirt python library.\n        '''"
newline|'\n'
name|'mock_close'
op|'.'
name|'side_effect'
op|'='
name|'TypeError'
op|'('
string|"'dd'"
op|')'
newline|'\n'
name|'connection'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'connection'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"registerCloseCallback"'
op|')'
newline|'\n'
DECL|member|test_close_callback_not_defined
name|'def'
name|'test_close_callback_not_defined'
op|'('
name|'self'
op|','
name|'mock_close'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''Validates that a connection to libvirt exist,\n           even when registerCloseCallback method missing from\n           the libvirt python library.\n        '''"
newline|'\n'
name|'mock_close'
op|'.'
name|'side_effect'
op|'='
name|'AttributeError'
op|'('
string|"'dd'"
op|')'
newline|'\n'
nl|'\n'
name|'connection'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'connection'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getLibVersion"'
op|')'
newline|'\n'
DECL|member|test_broken_connection
name|'def'
name|'test_broken_connection'
op|'('
name|'self'
op|','
name|'mock_ver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
op|'('
name|'error'
op|','
name|'domain'
op|')'
name|'in'
op|'('
nl|'\n'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_FROM_REMOTE'
op|')'
op|','
nl|'\n'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_FROM_RPC'
op|')'
op|','
nl|'\n'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_FROM_RPC'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'conn'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'_connect'
op|'('
string|'"qemu:///system"'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_ver'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"Connection broken"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'error'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'_test_connection'
op|'('
name|'conn'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|','
string|"'LOG'"
op|')'
newline|'\n'
DECL|member|test_connect_auth_cb_exception
name|'def'
name|'test_connect_auth_cb_exception'
op|'('
name|'self'
op|','
name|'log_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'creds'
op|'='
name|'dict'
op|'('
name|'authname'
op|'='
string|"'nova'"
op|','
name|'password'
op|'='
string|"'verybadpass'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'_connect_auth_cb'
op|','
name|'creds'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'log_mock'
op|'.'
name|'method_calls'
op|')'
op|','
nl|'\n'
string|"'LOG should not be used in _connect_auth_cb.'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'spawn_after'"
op|')'
newline|'\n'
DECL|member|test_event_dispatch
name|'def'
name|'test_event_dispatch'
op|'('
name|'self'
op|','
name|'mock_spawn_after'
op|')'
op|':'
newline|'\n'
comment|'# Validate that the libvirt self-pipe for forwarding'
nl|'\n'
comment|'# events between threads is working sanely'
nl|'\n'
DECL|function|handler
indent|'        '
name|'def'
name|'handler'
op|'('
name|'event'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_events'
op|'.'
name|'append'
op|'('
name|'event'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'hostimpl'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"qemu:///system"'
op|','
nl|'\n'
name|'lifecycle_event_handler'
op|'='
name|'handler'
op|')'
newline|'\n'
name|'got_events'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'hostimpl'
op|'.'
name|'_init_events_pipe'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'event1'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STARTED'
op|')'
newline|'\n'
name|'event2'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_PAUSED'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_queue_event'
op|'('
name|'event1'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_queue_event'
op|'('
name|'event2'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'want_events'
op|'='
op|'['
name|'event1'
op|','
name|'event2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want_events'
op|','
name|'got_events'
op|')'
newline|'\n'
nl|'\n'
name|'event3'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_RESUMED'
op|')'
newline|'\n'
name|'event4'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
nl|'\n'
name|'hostimpl'
op|'.'
name|'_queue_event'
op|'('
name|'event3'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_queue_event'
op|'('
name|'event4'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'want_events'
op|'='
op|'['
name|'event1'
op|','
name|'event2'
op|','
name|'event3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want_events'
op|','
name|'got_events'
op|')'
newline|'\n'
nl|'\n'
comment|"# STOPPED is delayed so it's handled separately"
nl|'\n'
name|'mock_spawn_after'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'hostimpl'
op|'.'
name|'_lifecycle_delay'
op|','
name|'hostimpl'
op|'.'
name|'_event_emit'
op|','
name|'event4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_event_lifecycle
dedent|''
name|'def'
name|'test_event_lifecycle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'got_events'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Validate that libvirt events are correctly translated'
nl|'\n'
comment|'# to Nova events'
nl|'\n'
DECL|function|spawn_after
name|'def'
name|'spawn_after'
op|'('
name|'seconds'
op|','
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_events'
op|'.'
name|'append'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'spec'
op|'='
name|'greenthread'
op|'.'
name|'GreenThread'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'greenthread'
op|'.'
name|'spawn_after'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'spawn_after'
op|')'
newline|'\n'
name|'hostimpl'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"qemu:///system"'
op|','
nl|'\n'
name|'lifecycle_event_handler'
op|'='
name|'lambda'
name|'e'
op|':'
name|'None'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'hostimpl'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'hostimpl'
op|'.'
name|'_init_events_pipe'
op|'('
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                  <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                  <devices>\n                    <disk type=\'file\'>\n                      <source file=\'filename\'/>\n                    </disk>\n                  </devices>\n                </domain>\n            """'
newline|'\n'
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'Domain'
op|'('
name|'conn'
op|','
nl|'\n'
name|'fake_dom_xml'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'hostimpl'
op|'.'
name|'_event_lifecycle_callback'
op|'('
nl|'\n'
name|'conn'
op|','
name|'dom'
op|','
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_EVENT_STOPPED'
op|','
number|'0'
op|','
name|'hostimpl'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_events'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|','
name|'event'
op|'.'
name|'LifecycleEvent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|'.'
name|'transition'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_event_emit_delayed_call_delayed
dedent|''
name|'def'
name|'test_event_emit_delayed_call_delayed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ev'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
name|'for'
name|'uri'
name|'in'
op|'('
string|'"qemu:///system"'
op|','
string|'"xen:///"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'spawn_after_mock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'spawn_after'
op|'='
name|'spawn_after_mock'
newline|'\n'
name|'hostimpl'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
name|'uri'
op|','
nl|'\n'
name|'lifecycle_event_handler'
op|'='
name|'lambda'
name|'e'
op|':'
name|'None'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_event_emit_delayed'
op|'('
name|'ev'
op|')'
newline|'\n'
name|'spawn_after_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
number|'15'
op|','
name|'hostimpl'
op|'.'
name|'_event_emit'
op|','
name|'ev'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'spawn_after'"
op|')'
newline|'\n'
DECL|member|test_event_emit_delayed_call_delayed_pending
name|'def'
name|'test_event_emit_delayed_call_delayed_pending'
op|'('
name|'self'
op|','
name|'spawn_after_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hostimpl'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"xen:///"'
op|','
nl|'\n'
name|'lifecycle_event_handler'
op|'='
name|'lambda'
name|'e'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
newline|'\n'
name|'gt_mock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_events_delayed'
op|'['
name|'uuid'
op|']'
op|'='
name|'gt_mock'
newline|'\n'
name|'ev'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
name|'uuid'
op|','
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_event_emit_delayed'
op|'('
name|'ev'
op|')'
newline|'\n'
name|'gt_mock'
op|'.'
name|'cancel'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'spawn_after_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_event_delayed_cleanup
dedent|''
name|'def'
name|'test_event_delayed_cleanup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hostimpl'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"xen:///"'
op|','
nl|'\n'
name|'lifecycle_event_handler'
op|'='
name|'lambda'
name|'e'
op|':'
name|'None'
op|')'
newline|'\n'
name|'uuid'
op|'='
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
newline|'\n'
name|'ev'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
name|'uuid'
op|','
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_STARTED'
op|')'
newline|'\n'
name|'gt_mock'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_events_delayed'
op|'['
name|'uuid'
op|']'
op|'='
name|'gt_mock'
newline|'\n'
name|'hostimpl'
op|'.'
name|'_event_emit_delayed'
op|'('
name|'ev'
op|')'
newline|'\n'
name|'gt_mock'
op|'.'
name|'cancel'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'uuid'
op|','
name|'hostimpl'
op|'.'
name|'_events_delayed'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"domainEventRegisterAny"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_connect"'
op|')'
newline|'\n'
DECL|member|test_get_connection_serial
name|'def'
name|'test_get_connection_serial'
op|'('
name|'self'
op|','
name|'mock_conn'
op|','
name|'mock_event'
op|')'
op|':'
newline|'\n'
DECL|function|get_conn_currency
indent|'        '
name|'def'
name|'get_conn_currency'
op|'('
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
op|'.'
name|'getLibVersion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|connect_with_block
dedent|''
name|'def'
name|'connect_with_block'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
comment|'# enough to allow another connect to run'
nl|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connect_calls'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'fakelibvirt'
op|'.'
name|'openAuth'
op|'('
string|'"qemu:///system"'
op|','
nl|'\n'
op|'['
op|'['
op|']'
op|','
name|'lambda'
op|':'
number|'1'
op|','
name|'None'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_register
dedent|''
name|'def'
name|'fake_register'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'register_calls'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'connect_calls'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'register_calls'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'mock_conn'
op|'.'
name|'side_effect'
op|'='
name|'connect_with_block'
newline|'\n'
name|'mock_event'
op|'.'
name|'side_effect'
op|'='
name|'fake_register'
newline|'\n'
nl|'\n'
comment|'# call serially'
nl|'\n'
name|'get_conn_currency'
op|'('
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'get_conn_currency'
op|'('
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'connect_calls'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'register_calls'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"domainEventRegisterAny"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_connect"'
op|')'
newline|'\n'
DECL|member|test_get_connection_concurrency
name|'def'
name|'test_get_connection_concurrency'
op|'('
name|'self'
op|','
name|'mock_conn'
op|','
name|'mock_event'
op|')'
op|':'
newline|'\n'
DECL|function|get_conn_currency
indent|'        '
name|'def'
name|'get_conn_currency'
op|'('
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
op|'.'
name|'getLibVersion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|connect_with_block
dedent|''
name|'def'
name|'connect_with_block'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
comment|'# enough to allow another connect to run'
nl|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connect_calls'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'fakelibvirt'
op|'.'
name|'openAuth'
op|'('
string|'"qemu:///system"'
op|','
nl|'\n'
op|'['
op|'['
op|']'
op|','
name|'lambda'
op|':'
number|'1'
op|','
name|'None'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_register
dedent|''
name|'def'
name|'fake_register'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'register_calls'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'connect_calls'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'register_calls'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'mock_conn'
op|'.'
name|'side_effect'
op|'='
name|'connect_with_block'
newline|'\n'
name|'mock_event'
op|'.'
name|'side_effect'
op|'='
name|'fake_register'
newline|'\n'
nl|'\n'
comment|'# call concurrently'
nl|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'get_conn_currency'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'get_conn_currency'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|'# let threads run'
nl|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'connect_calls'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'register_calls'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getLibVersion"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getVersion"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getType"'
op|')'
newline|'\n'
DECL|member|test_has_min_version
name|'def'
name|'test_has_min_version'
op|'('
name|'self'
op|','
name|'fake_hv_type'
op|','
name|'fake_hv_ver'
op|','
name|'fake_lv_ver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_lv_ver'
op|'.'
name|'return_value'
op|'='
number|'1002003'
newline|'\n'
name|'fake_hv_ver'
op|'.'
name|'return_value'
op|'='
number|'4005006'
newline|'\n'
name|'fake_hv_type'
op|'.'
name|'return_value'
op|'='
string|"'xyz'"
newline|'\n'
nl|'\n'
name|'lv_ver'
op|'='
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
name|'hv_ver'
op|'='
op|'('
number|'4'
op|','
number|'5'
op|','
number|'6'
op|')'
newline|'\n'
name|'hv_type'
op|'='
string|"'xyz'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
string|"'abc'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
op|'('
number|'4'
op|','
number|'5'
op|','
number|'7'
op|')'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
op|'('
number|'1'
op|','
number|'3'
op|','
number|'3'
op|')'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'None'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'None'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getLibVersion"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getVersion"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getType"'
op|')'
newline|'\n'
DECL|member|test_has_version
name|'def'
name|'test_has_version'
op|'('
name|'self'
op|','
name|'fake_hv_type'
op|','
name|'fake_hv_ver'
op|','
name|'fake_lv_ver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_lv_ver'
op|'.'
name|'return_value'
op|'='
number|'1002003'
newline|'\n'
name|'fake_hv_ver'
op|'.'
name|'return_value'
op|'='
number|'4005006'
newline|'\n'
name|'fake_hv_type'
op|'.'
name|'return_value'
op|'='
string|"'xyz'"
newline|'\n'
nl|'\n'
name|'lv_ver'
op|'='
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
name|'hv_ver'
op|'='
op|'('
number|'4'
op|','
number|'5'
op|','
number|'6'
op|')'
newline|'\n'
name|'hv_type'
op|'='
string|"'xyz'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'lv_ver_'
name|'in'
op|'['
op|'('
number|'1'
op|','
number|'2'
op|','
number|'2'
op|')'
op|','
op|'('
number|'1'
op|','
number|'2'
op|','
number|'4'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_version'
op|'('
name|'lv_ver_'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'hv_ver_'
name|'in'
op|'['
op|'('
number|'4'
op|','
number|'4'
op|','
number|'6'
op|')'
op|','
op|'('
number|'4'
op|','
number|'6'
op|','
number|'6'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver_'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
string|"'abc'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'hv_ver'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'lv_ver'
op|','
name|'None'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'has_min_version'
op|'('
name|'None'
op|','
name|'hv_ver'
op|','
name|'hv_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"lookupByID"'
op|')'
newline|'\n'
DECL|member|test_get_domain_by_id
name|'def'
name|'test_get_domain_by_id'
op|'('
name|'self'
op|','
name|'fake_lookup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
op|','
nl|'\n'
string|'"<domain id=\'7\'/>"'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'return_value'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dom'
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'_get_domain_by_id'
op|'('
number|'7'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
number|'7'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"lookupByID"'
op|')'
newline|'\n'
DECL|member|test_get_domain_by_id_raises
name|'def'
name|'test_get_domain_by_id_raises'
op|'('
name|'self'
op|','
name|'fake_lookup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_lookup'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'Domain not found: no domain with matching id 7'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'_get_domain_by_id'
op|','
nl|'\n'
number|'7'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
number|'7'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"lookupByName"'
op|')'
newline|'\n'
DECL|member|test_get_domain_by_name
name|'def'
name|'test_get_domain_by_name'
op|'('
name|'self'
op|','
name|'fake_lookup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
op|','
nl|'\n'
string|'"<domain id=\'7\'/>"'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'return_value'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dom'
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'_get_domain_by_name'
op|'('
string|'"wibble"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"wibble"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"lookupByName"'
op|')'
newline|'\n'
DECL|member|test_get_domain_by_name_raises
name|'def'
name|'test_get_domain_by_name_raises'
op|'('
name|'self'
op|','
name|'fake_lookup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_lookup'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'Domain not found: no domain with matching name'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'_get_domain_by_name'
op|','
nl|'\n'
string|'"wibble"'
op|')'
newline|'\n'
nl|'\n'
name|'fake_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"wibble"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_get_domain_by_name"'
op|')'
newline|'\n'
DECL|member|test_get_domain
name|'def'
name|'test_get_domain'
op|'('
name|'self'
op|','
name|'fake_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
op|','
nl|'\n'
string|'"<domain id=\'7\'/>"'
op|')'
newline|'\n'
nl|'\n'
name|'fake_get_domain'
op|'.'
name|'return_value'
op|'='
name|'dom'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
string|'"124"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dom'
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fake_get_domain'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"instance-0000007c"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"listAllDomains"'
op|')'
newline|'\n'
DECL|member|test_list_instance_domains_fast
name|'def'
name|'test_list_instance_domains_fast'
op|'('
name|'self'
op|','
name|'mock_list_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vm3'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000003"'
op|')'
newline|'\n'
name|'vm4'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000004"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_list_all
name|'def'
name|'fake_list_all'
op|'('
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vms'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'flags'
op|'&'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|':'
newline|'\n'
indent|'                '
name|'vms'
op|'.'
name|'extend'
op|'('
op|'['
name|'vm1'
op|','
name|'vm2'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'flags'
op|'&'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_INACTIVE'
op|':'
newline|'\n'
indent|'                '
name|'vms'
op|'.'
name|'extend'
op|'('
op|'['
name|'vm3'
op|','
name|'vm4'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'vms'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_list_all'
op|'.'
name|'side_effect'
op|'='
name|'fake_list_all'
newline|'\n'
nl|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'_list_instance_domains_fast'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_list_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|')'
newline|'\n'
name|'mock_list_all'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'_list_instance_domains_fast'
op|'('
name|'only_running'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_INACTIVE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm3'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'3'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm4'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"numOfDomains"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"listDefinedDomains"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"listDomainsID"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_get_domain_by_name"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_get_domain_by_id"'
op|')'
newline|'\n'
DECL|member|test_list_instance_domains_slow
name|'def'
name|'test_list_instance_domains_slow'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_id'
op|','
name|'mock_get_name'
op|','
nl|'\n'
name|'mock_list_ids'
op|','
name|'mock_list_names'
op|','
nl|'\n'
name|'mock_num_ids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vm3'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000003"'
op|')'
newline|'\n'
name|'vm4'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000004"'
op|')'
newline|'\n'
name|'vms'
op|'='
op|'['
name|'vm1'
op|','
name|'vm2'
op|','
name|'vm3'
op|','
name|'vm4'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain_by_id
name|'def'
name|'fake_get_domain_by_id'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'vm'
name|'in'
name|'vms'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vm'
op|'.'
name|'ID'
op|'('
op|')'
op|'=='
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'vm'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain_by_name
dedent|''
name|'def'
name|'fake_get_domain_by_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'vm'
name|'in'
name|'vms'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vm'
op|'.'
name|'name'
op|'('
op|')'
op|'=='
name|'name'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'vm'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_list_ids
dedent|''
name|'def'
name|'fake_list_ids'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Include one ID that no longer exists'
nl|'\n'
indent|'            '
name|'return'
op|'['
name|'vm1'
op|'.'
name|'ID'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'ID'
op|'('
op|')'
op|','
number|'666'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_list_names
dedent|''
name|'def'
name|'fake_list_names'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Include one name that no longer exists and'
nl|'\n'
comment|'# one dup from running list to show race in'
nl|'\n'
comment|'# transition from inactive -> running'
nl|'\n'
indent|'            '
name|'return'
op|'['
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm3'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm4'
op|'.'
name|'name'
op|'('
op|')'
op|','
string|'"fishfood"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_get_id'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_domain_by_id'
newline|'\n'
name|'mock_get_name'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_domain_by_name'
newline|'\n'
name|'mock_list_ids'
op|'.'
name|'side_effect'
op|'='
name|'fake_list_ids'
newline|'\n'
name|'mock_list_names'
op|'.'
name|'side_effect'
op|'='
name|'fake_list_names'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'return_value'
op|'='
number|'2'
newline|'\n'
nl|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'_list_instance_domains_slow'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_list_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_list_names'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_list_ids'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_list_names'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'_list_instance_domains_slow'
op|'('
name|'only_running'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_list_names'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm3'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'3'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm4'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"listAllDomains"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"numOfDomains"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"listDomainsID"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_get_domain_by_id"'
op|')'
newline|'\n'
DECL|member|test_list_instance_domains_fallback
name|'def'
name|'test_list_instance_domains_fallback'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_id'
op|','
name|'mock_list_ids'
op|','
nl|'\n'
name|'mock_num_ids'
op|','
name|'mock_list_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vms'
op|'='
op|'['
name|'vm1'
op|','
name|'vm2'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain_by_id
name|'def'
name|'fake_get_domain_by_id'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'vm'
name|'in'
name|'vms'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vm'
op|'.'
name|'ID'
op|'('
op|')'
op|'=='
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'vm'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_list_doms
dedent|''
name|'def'
name|'fake_list_doms'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'vm1'
op|'.'
name|'ID'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'ID'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_list_all
dedent|''
name|'def'
name|'fake_list_all'
op|'('
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"API is not supported"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
name|'raise'
name|'ex'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_get_id'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_domain_by_id'
newline|'\n'
name|'mock_list_ids'
op|'.'
name|'side_effect'
op|'='
name|'fake_list_doms'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'return_value'
op|'='
number|'2'
newline|'\n'
name|'mock_list_all'
op|'.'
name|'side_effect'
op|'='
name|'fake_list_all'
newline|'\n'
nl|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'list_instance_domains'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_list_all'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|')'
newline|'\n'
name|'mock_list_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_num_ids'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'ID'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'ID'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'ID'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'ID'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"_list_instance_domains_fast"'
op|')'
newline|'\n'
DECL|member|test_list_instance_domains_filtering
name|'def'
name|'test_list_instance_domains_filtering'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm0'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'0'
op|','
name|'name'
op|'='
string|'"Domain-0"'
op|')'
comment|'# Xen dom-0'
newline|'\n'
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vm3'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000003"'
op|')'
newline|'\n'
name|'vm4'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000004"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'vm0'
op|','
name|'vm1'
op|','
name|'vm2'
op|']'
newline|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'list_instance_domains'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'vm0'
op|','
name|'vm1'
op|','
name|'vm2'
op|','
name|'vm3'
op|','
name|'vm4'
op|']'
newline|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'list_instance_domains'
op|'('
name|'only_running'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm3'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'3'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm4'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'vm0'
op|','
name|'vm1'
op|','
name|'vm2'
op|']'
newline|'\n'
name|'doms'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'list_instance_domains'
op|'('
name|'only_guests'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'doms'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm0'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'doms'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|'('
op|')'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cpu_features_bug_1217630
dedent|''
name|'def'
name|'test_cpu_features_bug_1217630'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Test old version of libvirt, it shouldn't see the `aes' feature"
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.libvirt'"
op|')'
name|'as'
name|'mock_libvirt'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'mock_libvirt'
op|'.'
name|'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'
newline|'\n'
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'aes'"
op|','
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Cleanup the capabilities cache firstly'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|'.'
name|'_caps'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|"# Test new version of libvirt, should find the `aes' feature"
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.libvirt'"
op|')'
name|'as'
name|'mock_libvirt'
op|':'
newline|'\n'
indent|'            '
name|'mock_libvirt'
op|'['
string|"'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'aes'"
op|','
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cpu_features_are_not_duplicated
dedent|''
dedent|''
name|'def'
name|'test_cpu_features_are_not_duplicated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Test old version of libvirt. Should return single 'hypervisor'"
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.libvirt'"
op|')'
name|'as'
name|'mock_libvirt'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'mock_libvirt'
op|'.'
name|'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'
newline|'\n'
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'cnt'
op|'='
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|'.'
name|'count'
op|'('
string|"'xtpr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cnt'
op|')'
newline|'\n'
nl|'\n'
comment|'# Cleanup the capabilities cache firstly'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|'.'
name|'_caps'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|"# Test new version of libvirt. Should still return single 'hypervisor'"
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.libvirt'"
op|')'
name|'as'
name|'mock_libvirt'
op|':'
newline|'\n'
indent|'            '
name|'mock_libvirt'
op|'['
string|"'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'cnt'
op|'='
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|'.'
name|'count'
op|'('
string|"'xtpr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cnt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_baseline_cpu_not_supported
dedent|''
dedent|''
name|'def'
name|'test_baseline_cpu_not_supported'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Handle just the NO_SUPPORT error'
nl|'\n'
indent|'        '
name|'not_supported_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'this function is not supported by the connection driver:'"
nl|'\n'
string|"' virConnectBaselineCPU'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|"'baselineCPU'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'not_supported_exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|','
name|'type'
op|'('
name|'caps'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'aes'"
op|','
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Clear cached result so we can test again...'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|'.'
name|'_caps'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Other errors should not be caught'
nl|'\n'
name|'other_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'other exc'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|"'baselineCPU'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'other_exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_get_host_capabilities_failed
dedent|''
dedent|''
name|'def'
name|'test_lxc_get_host_capabilities_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|"'baselineCPU'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'caps'
op|'='
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|','
name|'type'
op|'('
name|'caps'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'aes'"
op|','
op|'['
name|'x'
op|'.'
name|'name'
name|'for'
name|'x'
name|'in'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getHostname"'
op|')'
newline|'\n'
DECL|member|test_get_hostname_caching
name|'def'
name|'test_get_hostname_caching'
op|'('
name|'self'
op|','
name|'mock_hostname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_hostname'
op|'.'
name|'return_value'
op|'='
string|'"foo"'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_hostname'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_hostname'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_hostname'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_hostname'
op|'.'
name|'return_value'
op|'='
string|'"bar"'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_hostname'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_hostname'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getType"'
op|')'
newline|'\n'
DECL|member|test_get_driver_type
name|'def'
name|'test_get_driver_type'
op|'('
name|'self'
op|','
name|'mock_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_type'
op|'.'
name|'return_value'
op|'='
string|'"qemu"'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"qemu"'
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_driver_type'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_type'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getVersion"'
op|')'
newline|'\n'
DECL|member|test_get_version
name|'def'
name|'test_get_version'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
number|'1005001'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1005001'
op|','
name|'self'
op|'.'
name|'host'
op|'.'
name|'get_version'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_version'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"secretLookupByUsage"'
op|')'
newline|'\n'
DECL|member|test_find_secret
name|'def'
name|'test_find_secret'
op|'('
name|'self'
op|','
name|'mock_sec'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""finding secrets with various usage_type."""'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_SECRET_USAGE_TYPE_CEPH'
op|','
string|"'rbdvol'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_SECRET_USAGE_TYPE_CEPH'
op|','
string|"'cephvol'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_SECRET_USAGE_TYPE_ISCSI'
op|','
string|"'iscsivol'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_SECRET_USAGE_TYPE_VOLUME'
op|','
string|"'vol'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|'('
string|"'rbd'"
op|','
string|"'rbdvol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|'('
string|"'ceph'"
op|','
string|"'cephvol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|'('
string|"'iscsi'"
op|','
string|"'iscsivol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|'('
string|"'volume'"
op|','
string|"'vol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'mock_sec'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|','
string|'"foo"'
op|','
string|'"foovol"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_sec'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'""'
op|')'
newline|'\n'
name|'mock_sec'
op|'.'
name|'side_effect'
op|'.'
name|'err'
op|'='
op|'('
number|'66'
op|','
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'host'
op|'.'
name|'find_secret'
op|'('
string|"'rbd'"
op|','
string|"'rbdvol'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"secretDefineXML"'
op|')'
newline|'\n'
DECL|member|test_create_secret
name|'def'
name|'test_create_secret'
op|'('
name|'self'
op|','
name|'mock_sec'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""creating secrets with various usage_type."""'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|'('
string|"'rbd'"
op|','
string|"'rbdvol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|'('
string|"'ceph'"
op|','
string|"'cephvol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|'('
string|"'iscsi'"
op|','
string|"'iscsivol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|'('
string|"'volume'"
op|','
string|"'vol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|','
string|'"foo"'
op|','
string|'"foovol"'
op|')'
newline|'\n'
nl|'\n'
name|'secret'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_sec'
op|'.'
name|'return_value'
op|'='
name|'secret'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'create_secret'
op|'('
string|"'iscsi'"
op|','
string|"'iscsivol'"
op|','
name|'password'
op|'='
string|'"foo"'
op|')'
newline|'\n'
name|'secret'
op|'.'
name|'setValue'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"foo"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.find_secret'"
op|')'
newline|'\n'
DECL|member|test_delete_secret
name|'def'
name|'test_delete_secret'
op|'('
name|'self'
op|','
name|'mock_find_secret'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""deleting secret."""'
newline|'\n'
name|'secret'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_find_secret'
op|'.'
name|'return_value'
op|'='
name|'secret'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'rbd'"
op|','
string|"'rbdvol'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|'.'
name|'undefine'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'delete_secret'
op|'('
string|"'rbd'"
op|','
string|"'rbdvol'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'mock_find_secret'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'mock_find_secret'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'.'
name|'delete_secret'
op|'('
string|'"rbd"'
op|','
string|'"rbdvol"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DomainJobInfoTestCase
dedent|''
dedent|''
name|'class'
name|'DomainJobInfoTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DomainJobInfoTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fakelibvirt'
op|'.'
name|'FakeLibvirtFixture'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'fakelibvirt'
op|'.'
name|'openAuth'
op|'('
string|'"qemu:///system"'
op|','
nl|'\n'
op|'['
op|'['
op|']'
op|','
name|'lambda'
op|':'
name|'True'
op|']'
op|')'
newline|'\n'
name|'xml'
op|'='
op|'('
string|'"<domain type=\'kvm\'>"'
nl|'\n'
string|'"  <name>instance-0000000a</name>"'
nl|'\n'
string|'"</domain>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dom'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'createXML'
op|'('
name|'xml'
op|','
number|'0'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'_have_job_stats'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_stats
name|'def'
name|'test_job_stats'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'return_value'
op|'='
op|'{'
nl|'\n'
string|'"type"'
op|':'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
nl|'\n'
string|'"memory_total"'
op|':'
number|'75'
op|','
nl|'\n'
string|'"memory_processed"'
op|':'
number|'50'
op|','
nl|'\n'
string|'"memory_remaining"'
op|':'
number|'33'
op|','
nl|'\n'
string|'"some_new_libvirt_stat_we_dont_know_about"'
op|':'
number|'83'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'75'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'50'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'33'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'disk_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'disk_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'disk_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_info'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_info_no_support
name|'def'
name|'test_job_info_no_support'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"virDomainGetJobStats not implemented"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
nl|'\n'
name|'mock_info'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
nl|'\n'
number|'100'
op|','
number|'99'
op|','
number|'10'
op|','
number|'11'
op|','
number|'12'
op|','
number|'75'
op|','
number|'50'
op|','
number|'33'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'100'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'info'
op|'.'
name|'data_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'11'
op|','
name|'info'
op|'.'
name|'data_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'12'
op|','
name|'info'
op|'.'
name|'data_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'75'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'50'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'33'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'info'
op|'.'
name|'disk_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'info'
op|'.'
name|'disk_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'info'
op|'.'
name|'disk_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_info_attr_error
name|'def'
name|'test_job_info_attr_error'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'AttributeError'
op|'('
string|'"No such API"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_info'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
nl|'\n'
number|'100'
op|','
number|'99'
op|','
number|'10'
op|','
number|'11'
op|','
number|'12'
op|','
number|'75'
op|','
number|'50'
op|','
number|'33'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'100'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'info'
op|'.'
name|'data_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'11'
op|','
name|'info'
op|'.'
name|'data_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'12'
op|','
name|'info'
op|'.'
name|'data_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'75'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'50'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'33'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'info'
op|'.'
name|'disk_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'info'
op|'.'
name|'disk_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'info'
op|'.'
name|'disk_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_stats_no_domain
name|'def'
name|'test_job_stats_no_domain'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"No such domain with UUID blah"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_COMPLETED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_info'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_info_no_domain
name|'def'
name|'test_job_info_no_domain'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"virDomainGetJobStats not implemented"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
nl|'\n'
name|'mock_info'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"No such domain with UUID blah"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_COMPLETED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_stats_operation_invalid
name|'def'
name|'test_job_stats_operation_invalid'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"Domain is not running"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_OPERATION_INVALID'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_COMPLETED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_info'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobInfo"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|'"jobStats"'
op|')'
newline|'\n'
DECL|member|test_job_info_operation_invalid
name|'def'
name|'test_job_info_operation_invalid'
op|'('
name|'self'
op|','
name|'mock_stats'
op|','
name|'mock_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_stats'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"virDomainGetJobStats not implemented"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
nl|'\n'
name|'mock_info'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"Domain is not running"'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_OPERATION_INVALID'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'host'
op|'.'
name|'DomainJobInfo'
op|'.'
name|'for_domain'
op|'('
name|'self'
op|'.'
name|'dom'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'info'
op|','
name|'host'
op|'.'
name|'DomainJobInfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_COMPLETED'
op|','
name|'info'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_elapsed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'time_remaining'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_processed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'info'
op|'.'
name|'memory_remaining'
op|')'
newline|'\n'
nl|'\n'
name|'mock_stats'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
