begin_unit
comment|'#    Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#    Copyright 2012 University Of Minho'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'glob'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'signal'
newline|'\n'
name|'import'
name|'threading'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'os_brick'
op|'.'
name|'initiator'
name|'import'
name|'connector'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'lockutils'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_service'
name|'import'
name|'loopingcall'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'encodeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'fileutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'builtins'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'metadata'
name|'import'
name|'base'
name|'as'
name|'instance_metadata'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'cpumodel'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_mode'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'pci'
name|'import'
name|'manager'
name|'as'
name|'pci_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_pci_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_vcpu_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fake_imagebackend'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fake_libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fakelibvirt'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'version'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'block_device'
name|'as'
name|'driver_block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'configdrive'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
name|'import'
name|'api'
name|'as'
name|'disk'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'firewall'
name|'as'
name|'base_firewall'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'hardware'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'image'
name|'import'
name|'model'
name|'as'
name|'imgmodel'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'blockinfo'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
name|'as'
name|'vconfig'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'driver'
name|'as'
name|'libvirt_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'firewall'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'guest'
name|'as'
name|'libvirt_guest'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'host'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'imagebackend'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'storage'
name|'import'
name|'lvm'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'storage'
name|'import'
name|'rbd_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'volume'
name|'as'
name|'volume_drivers'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
name|'host'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
name|'libvirt_guest'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'my_ip'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'image_cache_subdirectory_name'"
op|','
string|"'nova.virt.imagecache'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'instances_path'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'iscsi_use_multipath'"
op|','
string|"'nova.virt.libvirt.volume'"
op|','
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_fake_network_info
name|'_fake_network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
newline|'\n'
nl|'\n'
name|'_fake_NodeDevXml'
op|'='
op|'{'
string|'"pci_0000_04_00_3"'
op|':'
string|'"""\n        <device>\n        <name>pci_0000_04_00_3</name>\n        <parent>pci_0000_00_01_1</parent>\n        <driver>\n            <name>igb</name>\n        </driver>\n        <capability type=\'pci\'>\n            <domain>0</domain>\n            <bus>4</bus>\n            <slot>0</slot>\n            <function>3</function>\n            <product id=\'0x1521\'>I350 Gigabit Network Connection</product>\n            <vendor id=\'0x8086\'>Intel Corporation</vendor>\n            <capability type=\'virt_functions\'>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x10\' function=\'0x3\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x10\' function=\'0x7\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x11\' function=\'0x3\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x11\' function=\'0x7\'/>\n            </capability>\n        </capability>\n      </device>"""'
op|','
nl|'\n'
string|'"pci_0000_04_10_7"'
op|':'
string|'"""\n      <device>\n         <name>pci_0000_04_10_7</name>\n         <parent>pci_0000_00_01_1</parent>\n         <driver>\n         <name>igbvf</name>\n         </driver>\n         <capability type=\'pci\'>\n          <domain>0</domain>\n          <bus>4</bus>\n          <slot>16</slot>\n          <function>7</function>\n          <product id=\'0x1520\'>I350 Ethernet Controller Virtual Function\n            </product>\n          <vendor id=\'0x8086\'>Intel Corporation</vendor>\n          <capability type=\'phys_function\'>\n             <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x00\' function=\'0x3\'/>\n          </capability>\n          <capability type=\'virt_functions\'>\n          </capability>\n        </capability>\n    </device>"""'
op|','
nl|'\n'
string|'"pci_0000_04_11_7"'
op|':'
string|'"""\n      <device>\n         <name>pci_0000_04_11_7</name>\n         <parent>pci_0000_00_01_1</parent>\n         <driver>\n         <name>igbvf</name>\n         </driver>\n         <capability type=\'pci\'>\n          <domain>0</domain>\n          <bus>4</bus>\n          <slot>17</slot>\n          <function>7</function>\n          <product id=\'0x1520\'>I350 Ethernet Controller Virtual Function\n            </product>\n          <vendor id=\'0x8086\'>Intel Corporation</vendor>\n          <numa node=\'0\'/>\n          <capability type=\'phys_function\'>\n             <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x00\' function=\'0x3\'/>\n          </capability>\n          <capability type=\'virt_functions\'>\n          </capability>\n        </capability>\n    </device>"""'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_fake_cpu_info
name|'_fake_cpu_info'
op|'='
op|'{'
nl|'\n'
string|'"arch"'
op|':'
string|'"test_arch"'
op|','
nl|'\n'
string|'"model"'
op|':'
string|'"test_model"'
op|','
nl|'\n'
string|'"vendor"'
op|':'
string|'"test_vendor"'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
nl|'\n'
string|'"sockets"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"cores"'
op|':'
number|'8'
op|','
nl|'\n'
string|'"threads"'
op|':'
number|'16'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"feature1"'
op|','
string|'"feature2"'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_concurrency
name|'def'
name|'_concurrency'
op|'('
name|'signal'
op|','
name|'wait'
op|','
name|'done'
op|','
name|'target'
op|','
name|'is_block_dev'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'signal'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'wait'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'done'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirDomainSnapshot
dedent|''
name|'class'
name|'FakeVirDomainSnapshot'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'dom'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dom'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtDomain
dedent|''
dedent|''
name|'class'
name|'FakeVirtDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fake_xml'
op|'='
name|'None'
op|','
name|'uuidstr'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'None'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uuidstr'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'uuidstr'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'uuidstr'
op|'='
name|'uuidstr'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'domname'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'_info'
op|'='
op|'['
name|'power_state'
op|'.'
name|'RUNNING'
op|','
number|'2048'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
number|'1234'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
name|'if'
name|'fake_xml'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dom_xml'
op|'='
name|'fake_xml'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'domname'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"fake-domain %s"'
op|'%'
name|'self'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'domname'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
DECL|member|info
dedent|''
name|'def'
name|'info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_info'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|managedSave
dedent|''
name|'def'
name|'managedSave'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|createWithFlags
dedent|''
name|'def'
name|'createWithFlags'
op|'('
name|'self'
op|','
name|'launch_flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_fake_dom_xml'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'uuidstr'
newline|'\n'
nl|'\n'
DECL|member|attachDeviceFlags
dedent|''
name|'def'
name|'attachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|attachDevice
dedent|''
name|'def'
name|'attachDevice'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|detachDeviceFlags
dedent|''
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|snapshotCreateXML
dedent|''
name|'def'
name|'snapshotCreateXML'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockCommit
dedent|''
name|'def'
name|'blockCommit'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'base'
op|','
name|'top'
op|','
name|'bandwidth'
op|'='
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockRebase
dedent|''
name|'def'
name|'blockRebase'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'base'
op|','
name|'bandwidth'
op|'='
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockJobInfo
dedent|''
name|'def'
name|'blockJobInfo'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|destroy
dedent|''
name|'def'
name|'destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|fsFreeze
dedent|''
name|'def'
name|'fsFreeze'
op|'('
name|'self'
op|','
name|'disks'
op|'='
name|'None'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|fsThaw
dedent|''
name|'def'
name|'fsThaw'
op|'('
name|'self'
op|','
name|'disks'
op|'='
name|'None'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CacheConcurrencyTestCase
dedent|''
dedent|''
name|'class'
name|'CacheConcurrencyTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CacheConcurrencyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
comment|'# utils.synchronized() will create the lock_path for us if it'
nl|'\n'
comment|"# doesn't already exist. It will also delete it when it's done,"
nl|'\n'
comment|'# which can cause race conditions with the multiple threads we'
nl|'\n'
comment|'# use for tests. So, create the path here so utils.synchronized()'
nl|'\n'
comment|"# won't delete it out from under one of the threads."
nl|'\n'
name|'self'
op|'.'
name|'lock_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
string|"'locks'"
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'lock_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_exists
name|'def'
name|'fake_exists'
op|'('
name|'fname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'basedir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'image_cache_subdirectory_name'
op|')'
newline|'\n'
name|'if'
name|'fname'
op|'=='
name|'basedir'
name|'or'
name|'fname'
op|'=='
name|'self'
op|'.'
name|'lock_path'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
dedent|''
name|'def'
name|'fake_extend'
op|'('
name|'image'
op|','
name|'size'
op|','
name|'use_cow'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance
dedent|''
name|'def'
name|'_fake_instance'
op|'('
name|'self'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_same_fname_concurrency
dedent|''
name|'def'
name|'test_same_fname_concurrency'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensures that the same fname cache runs at a sequentially.'
nl|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'backend'
op|'='
name|'imagebackend'
op|'.'
name|'Backend'
op|'('
name|'False'
op|')'
newline|'\n'
name|'wait1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'uuid'
op|')'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig1'
op|','
name|'wait'
op|'='
name|'wait1'
op|','
name|'done'
op|'='
name|'done1'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Thread 1 should run before thread 2.'
nl|'\n'
name|'sig1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'uuid'
op|')'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig2'
op|','
name|'wait'
op|'='
name|'wait2'
op|','
name|'done'
op|'='
name|'done2'
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wait1'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
dedent|''
name|'done1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# Wait on greenthreads to assert they didn't raise exceptions"
nl|'\n'
comment|'# during execution'
nl|'\n'
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_different_fname_concurrency
dedent|''
name|'def'
name|'test_different_fname_concurrency'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensures that two different fname caches are concurrent.'
nl|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'backend'
op|'='
name|'imagebackend'
op|'.'
name|'Backend'
op|'('
name|'False'
op|')'
newline|'\n'
name|'wait1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'uuid'
op|')'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname2'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig1'
op|','
name|'wait'
op|'='
name|'wait1'
op|','
name|'done'
op|'='
name|'done1'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Thread 1 should run before thread 2.'
nl|'\n'
name|'sig1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'uuid'
op|')'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname1'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig2'
op|','
name|'wait'
op|'='
name|'wait2'
op|','
name|'done'
op|'='
name|'done2'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Wait for thread 2 to start.'
nl|'\n'
name|'sig2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'tries'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'not'
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
name|'and'
name|'tries'
op|'<'
number|'10'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'tries'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wait1'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|"# Wait on greenthreads to assert they didn't raise exceptions"
nl|'\n'
comment|'# during execution'
nl|'\n'
dedent|''
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVolumeDriver
dedent|''
dedent|''
name|'class'
name|'FakeVolumeDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_xml
dedent|''
name|'def'
name|'get_xml'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
DECL|member|get_config
dedent|''
name|'def'
name|'get_config'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Connect the volume to a fake device."""'
newline|'\n'
name|'conf'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'source_type'
op|'='
string|'"network"'
newline|'\n'
name|'conf'
op|'.'
name|'source_protocol'
op|'='
string|'"fake"'
newline|'\n'
name|'conf'
op|'.'
name|'source_name'
op|'='
string|'"fake"'
newline|'\n'
name|'conf'
op|'.'
name|'target_dev'
op|'='
string|'"fake"'
newline|'\n'
name|'conf'
op|'.'
name|'target_bus'
op|'='
string|'"fake"'
newline|'\n'
name|'return'
name|'conf'
newline|'\n'
nl|'\n'
DECL|member|connect_volume
dedent|''
name|'def'
name|'connect_volume'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Connect the volume to a fake device."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_config'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConfigGuestDisk
dedent|''
dedent|''
name|'class'
name|'FakeConfigGuestDisk'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'source_type'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'driver_cache'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConfigGuest
dedent|''
dedent|''
name|'class'
name|'FakeConfigGuest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver_cache'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeNodeDevice
dedent|''
dedent|''
name|'class'
name|'FakeNodeDevice'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fakexml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'xml'
op|'='
name|'fakexml'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'xml'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_test_instance
dedent|''
dedent|''
name|'def'
name|'_create_test_instance'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'2048'
op|','
nl|'\n'
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'vcpu_weight'
op|'='
name|'None'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'name'
op|'='
string|"u'm1.small'"
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
nl|'\n'
name|'flavorid'
op|'='
string|"u'1'"
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'32dfcb37-5af1-552b-357c-be8c3aa38310'"
op|','
nl|'\n'
string|"'memory_kb'"
op|':'
string|"'1024000'"
op|','
nl|'\n'
string|"'basepath'"
op|':'
string|"'/some/path'"
op|','
nl|'\n'
string|"'bridge_name'"
op|':'
string|"'br100'"
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|'"Acme webserver"'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'br101'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'155d900f-4e14-4e4c-a73d-069cbf4541e6'"
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'5'"
op|','
comment|'# m1.small'
nl|'\n'
string|"'extra_specs'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'flavor'"
op|':'
name|'flavor'
op|','
nl|'\n'
string|"'new_flavor'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'old_flavor'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'pci_devices'"
op|':'
name|'objects'
op|'.'
name|'PciDeviceList'
op|'('
op|')'
op|','
nl|'\n'
string|"'numa_topology'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'config_drive'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vm_mode'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'838a72b0-0d54-4827-8fd6-fb1227633ceb'"
op|','
nl|'\n'
string|"'ephemeral_key_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vcpu_model'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake-host'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtConnTestCase
dedent|''
name|'class'
name|'LibvirtConnTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|REQUIRES_LOCKING
indent|'    '
name|'REQUIRES_LOCKING'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|variable|_EPHEMERAL_20_DEFAULT
name|'_EPHEMERAL_20_DEFAULT'
op|'='
op|'('
string|"'ephemeral_20_%s'"
op|'%'
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'disk'
op|'.'
name|'_DEFAULT_FILE_SYSTEM'
op|')'
op|'['
op|':'
number|'7'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_call'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'temp_dir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'temp_dir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'snapshots_directory'
op|'='
name|'temp_dir'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"hardware"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
name|'def'
name|'fake_extend'
op|'('
name|'image'
op|','
name|'size'
op|','
name|'use_cow'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'resolve_driver_format'"
op|','
nl|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'_get_driver_format'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fakelibvirt'
op|'.'
name|'FakeLibvirtFixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'='
name|'_create_test_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'='
string|'"""\n        <domain type=\'kvm\'>\n          <devices>\n            <disk type=\'block\' device=\'disk\'>\n              <driver name=\'qemu\' type=\'raw\' cache=\'none\'/>\n              <source dev=\'{device_path}\'/>\n              <target bus=\'virtio\' dev=\'vdb\'/>\n              <serial>58a84f6d-3f0c-4e19-a0af-eb657b790657</serial>\n              <address type=\'pci\' domain=\'0x0\' bus=\'0x0\' slot=\'0x04\' \\\n              function=\'0x0\'/>\n            </disk>\n          </devices>\n        </domain>\n        """'
newline|'\n'
nl|'\n'
DECL|member|relpath
dedent|''
name|'def'
name|'relpath'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'relpath'
op|'('
name|'path'
op|','
name|'CONF'
op|'.'
name|'instances_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_driver_capabilities
dedent|''
name|'def'
name|'test_driver_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'capabilities'
op|'['
string|"'has_imagecache'"
op|']'
op|','
nl|'\n'
string|"'Driver capabilities for \\'has_imagecache\\''"
nl|'\n'
string|"'is invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'capabilities'
op|'['
string|"'supports_recreate'"
op|']'
op|','
nl|'\n'
string|"'Driver capabilities for \\'supports_recreate\\''"
nl|'\n'
string|"'is invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_fake_libvirt_mock
dedent|''
name|'def'
name|'create_fake_libvirt_mock'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Defining mocks for LibvirtDriver(libvirt is not used)."""'
newline|'\n'
nl|'\n'
comment|'# A fake libvirt.virConnect'
nl|'\n'
DECL|class|FakeLibvirtDriver
name|'class'
name|'FakeLibvirtDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|defineXML
indent|'            '
name|'def'
name|'defineXML'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Creating mocks'
nl|'\n'
dedent|''
dedent|''
name|'volume_driver'
op|'='
op|'['
string|"'iscsi=nova.tests.unit.virt.libvirt.test_driver'"
nl|'\n'
string|"'.FakeVolumeDriver'"
op|']'
newline|'\n'
name|'fake'
op|'='
name|'FakeLibvirtDriver'
op|'('
op|')'
newline|'\n'
comment|'# Customizing above fake if necessary'
nl|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake'
op|'.'
name|'__setattr__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|','
name|'fake'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_get_volume_drivers'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'volume_driver'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_connection'"
op|','
name|'lambda'
name|'x'
op|':'
name|'fake'
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_lookup
dedent|''
name|'def'
name|'fake_lookup'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'open'
op|'('
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
string|'"a"'
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_service
dedent|''
name|'def'
name|'_create_service'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'='
op|'{'
string|"'host'"
op|':'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'host'"
op|','
string|"'dummy'"
op|')'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'disabled'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'objects'
op|'.'
name|'Service'
op|'('
op|'**'
name|'service_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_pause_flag
dedent|''
name|'def'
name|'_get_pause_flag'
op|'('
name|'self'
op|','
name|'drvr'
op|','
name|'network_info'
op|','
name|'power_on'
op|'='
name|'True'
op|','
nl|'\n'
name|'vifs_already_plugged'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timeout'
op|'='
name|'CONF'
op|'.'
name|'vif_plugging_timeout'
newline|'\n'
nl|'\n'
name|'events'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
op|'('
name|'drvr'
op|'.'
name|'_conn_supports_start_paused'
name|'and'
nl|'\n'
name|'utils'
op|'.'
name|'is_neutron'
op|'('
op|')'
name|'and'
nl|'\n'
name|'not'
name|'vifs_already_plugged'
name|'and'
nl|'\n'
name|'power_on'
name|'and'
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'events'
op|'='
name|'drvr'
op|'.'
name|'_get_neutron_events'
op|'('
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'bool'
op|'('
name|'events'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_public_api_signatures
dedent|''
name|'def'
name|'test_public_api_signatures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseinst'
op|'='
name|'driver'
op|'.'
name|'ComputeDriver'
op|'('
name|'None'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublicAPISignatures'
op|'('
name|'baseinst'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_legacy_block_device_info
dedent|''
name|'def'
name|'test_legacy_block_device_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'need_legacy_block_device_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|')'
newline|'\n'
DECL|member|test_min_version_start_ok
name|'def'
name|'test_min_version_start_ok'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"dummyhost"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|')'
newline|'\n'
DECL|member|test_min_version_start_abort
name|'def'
name|'test_min_version_start_abort'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|','
nl|'\n'
string|'"dummyhost"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'NEXT_MIN_LIBVIRT_VERSION'
op|')'
op|'-'
number|'1'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LOG'
op|','
string|"'warning'"
op|')'
newline|'\n'
DECL|member|test_next_min_version_deprecation_warning
name|'def'
name|'test_next_min_version_deprecation_warning'
op|'('
name|'self'
op|','
name|'mock_warning'
op|','
nl|'\n'
name|'mock_get_libversion'
op|')'
op|':'
newline|'\n'
comment|'# Test that a warning is logged if the libvirt version is less than'
nl|'\n'
comment|'# the next required minimum version.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"dummyhost"'
op|')'
newline|'\n'
comment|'# assert that the next min version is in a warning message'
nl|'\n'
name|'expected_arg'
op|'='
op|'{'
string|"'version'"
op|':'
string|"'0.10.2'"
op|'}'
newline|'\n'
name|'version_arg_found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'call'
name|'in'
name|'mock_warning'
op|'.'
name|'call_args_list'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'call'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'=='
name|'expected_arg'
op|':'
newline|'\n'
indent|'                '
name|'version_arg_found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'version_arg_found'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'NEXT_MIN_LIBVIRT_VERSION'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LOG'
op|','
string|"'warning'"
op|')'
newline|'\n'
DECL|member|test_next_min_version_ok
name|'def'
name|'test_next_min_version_ok'
op|'('
name|'self'
op|','
name|'mock_warning'
op|','
name|'mock_get_libversion'
op|')'
op|':'
newline|'\n'
comment|'# Test that a warning is not logged if the libvirt version is greater'
nl|'\n'
comment|'# than or equal to NEXT_MIN_LIBVIRT_VERSION.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"dummyhost"'
op|')'
newline|'\n'
comment|'# assert that the next min version is in a warning message'
nl|'\n'
name|'expected_arg'
op|'='
op|'{'
string|"'version'"
op|':'
string|"'0.10.2'"
op|'}'
newline|'\n'
name|'version_arg_found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'call'
name|'in'
name|'mock_warning'
op|'.'
name|'call_args_list'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'call'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'=='
name|'expected_arg'
op|':'
newline|'\n'
indent|'                '
name|'version_arg_found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'version_arg_found'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|"'get_by_compute_host'"
op|')'
newline|'\n'
DECL|member|test_set_host_enabled_with_disable
name|'def'
name|'test_set_host_enabled_with_disable'
op|'('
name|'self'
op|','
name|'mock_svc'
op|')'
op|':'
newline|'\n'
comment|'# Tests disabling an enabled host.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'svc'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
name|'mock_svc'
op|'.'
name|'return_value'
op|'='
name|'svc'
newline|'\n'
name|'drvr'
op|'.'
name|'_set_host_enabled'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'svc'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|"'get_by_compute_host'"
op|')'
newline|'\n'
DECL|member|test_set_host_enabled_with_enable
name|'def'
name|'test_set_host_enabled_with_enable'
op|'('
name|'self'
op|','
name|'mock_svc'
op|')'
op|':'
newline|'\n'
comment|'# Tests enabling a disabled host.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'svc'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'disabled'
op|'='
name|'True'
op|','
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
name|'mock_svc'
op|'.'
name|'return_value'
op|'='
name|'svc'
newline|'\n'
name|'drvr'
op|'.'
name|'_set_host_enabled'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'svc'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|"'get_by_compute_host'"
op|')'
newline|'\n'
DECL|member|test_set_host_enabled_with_enable_state_enabled
name|'def'
name|'test_set_host_enabled_with_enable_state_enabled'
op|'('
name|'self'
op|','
name|'mock_svc'
op|')'
op|':'
newline|'\n'
comment|'# Tests enabling an enabled host.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'svc'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'disabled'
op|'='
name|'False'
op|','
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
name|'mock_svc'
op|'.'
name|'return_value'
op|'='
name|'svc'
newline|'\n'
name|'drvr'
op|'.'
name|'_set_host_enabled'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'svc'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|"'get_by_compute_host'"
op|')'
newline|'\n'
DECL|member|test_set_host_enabled_with_disable_state_disabled
name|'def'
name|'test_set_host_enabled_with_disable_state_disabled'
op|'('
name|'self'
op|','
name|'mock_svc'
op|')'
op|':'
newline|'\n'
comment|'# Tests disabling a disabled host.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'svc'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'disabled'
op|'='
name|'True'
op|','
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
name|'mock_svc'
op|'.'
name|'return_value'
op|'='
name|'svc'
newline|'\n'
name|'drvr'
op|'.'
name|'_set_host_enabled'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'svc'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_host_enabled_swallows_exceptions
dedent|''
name|'def'
name|'test_set_host_enabled_swallows_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that set_host_enabled will swallow exceptions coming from the'
nl|'\n'
comment|"# db_api code so they don't break anything calling it, e.g. the"
nl|'\n'
comment|'# _get_new_connection method.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|')'
name|'as'
name|'db_mock'
op|':'
newline|'\n'
comment|'# Make db.service_get_by_compute_host raise NovaException; this'
nl|'\n'
comment|'# is more robust than just raising ComputeHostNotFound.'
nl|'\n'
indent|'            '
name|'db_mock'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NovaException'
newline|'\n'
name|'drvr'
op|'.'
name|'_set_host_enabled'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"nodeDeviceLookupByName"'
op|')'
newline|'\n'
DECL|member|test_prepare_pci_device
name|'def'
name|'test_prepare_pci_device'
op|'('
name|'self'
op|','
name|'mock_lookup'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_lookup'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'x'
op|':'
name|'fakelibvirt'
op|'.'
name|'NodeDevice'
op|'('
name|'conn'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_prepare_pci_devices_for_use'
op|'('
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"nodeDeviceLookupByName"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virNodeDevice'
op|','
string|'"dettach"'
op|')'
newline|'\n'
DECL|member|test_prepare_pci_device_exception
name|'def'
name|'test_prepare_pci_device_exception'
op|'('
name|'self'
op|','
name|'mock_detach'
op|','
name|'mock_lookup'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_lookup'
op|'.'
name|'side_effect'
op|'='
name|'lambda'
name|'x'
op|':'
name|'fakelibvirt'
op|'.'
name|'NodeDevice'
op|'('
name|'conn'
op|')'
newline|'\n'
name|'mock_detach'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"xxxx"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDevicePrepareFailed'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_prepare_pci_devices_for_use'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices_exception
dedent|''
name|'def'
name|'test_detach_pci_devices_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'False'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceDetachFailed'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_detach_pci_devices'
op|','
name|'None'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices
dedent|''
name|'def'
name|'test_detach_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'fake_domXML1'
op|'='
string|'"""<domain> <devices>\n            <disk type=\'file\' device=\'disk\'>\n            <driver name=\'qemu\' type=\'qcow2\' cache=\'none\'/>\n            <source file=\'xxx\'/>\n            <target dev=\'vda\' bus=\'virtio\'/>\n            <alias name=\'virtio-disk0\'/>\n            <address type=\'pci\' domain=\'0x0000\' bus=\'0x00\'\n            slot=\'0x04\' function=\'0x0\'/>\n            </disk>\n            <hostdev mode="subsystem" type="pci" managed="yes">\n            <source>\n            <address function="0x1" slot="0x10" domain="0x0000"\n             bus="0x04"/>\n            </source>\n            </hostdev></devices></domain>"""'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'address'
op|'='
string|'"0001:04:10:1"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_get_guest_pci_device'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|to_xml
indent|'            '
name|'def'
name|'to_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_get_guest_pci_device'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'FakeDev'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDomain
name|'class'
name|'FakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|detachDeviceFlags
indent|'            '
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pci_devices'
op|'['
number|'0'
op|']'
op|'['
string|"'hypervisor_name'"
op|']'
op|'='
string|"'marked'"
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fake_domXML1'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'FakeDomain'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_detach_pci_devices'
op|'('
name|'guest'
op|','
name|'pci_devices'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pci_devices'
op|'['
number|'0'
op|']'
op|'['
string|"'hypervisor_name'"
op|']'
op|','
string|"'marked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices_timeout
dedent|''
name|'def'
name|'test_detach_pci_devices_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'fake_domXML1'
op|'='
string|'"""<domain>\n                <devices>\n                  <hostdev mode="subsystem" type="pci" managed="yes">\n                    <source>\n            <address function="0x1" slot="0x10" domain="0x0000" bus="0x04"/>\n                    </source>\n                  </hostdev>\n                </devices>\n            </domain>"""'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'address'
op|'='
string|'"0000:04:10:1"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_get_guest_pci_device'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|to_xml
indent|'            '
name|'def'
name|'to_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_get_guest_pci_device'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'FakeDev'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDomain
name|'class'
name|'FakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|detachDeviceFlags
indent|'            '
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fake_domXML1'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'FakeDomain'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceDetachFailed'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_detach_pci_devices'
op|','
name|'guest'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'connector'
op|','
string|"'get_connector_properties'"
op|')'
newline|'\n'
DECL|member|test_get_connector
name|'def'
name|'test_get_connector'
op|'('
name|'self'
op|','
name|'fake_get_connector'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'initiator'
op|'='
string|"'fake.initiator.iqn'"
newline|'\n'
name|'ip'
op|'='
string|"'fakeip'"
newline|'\n'
name|'host'
op|'='
string|"'fakehost'"
newline|'\n'
name|'wwpns'
op|'='
op|'['
string|"'100010604b019419'"
op|']'
newline|'\n'
name|'wwnns'
op|'='
op|'['
string|"'200010604b019419'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'my_ip'
op|'='
name|'ip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'ip'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'initiator'"
op|':'
name|'initiator'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'wwpns'"
op|':'
name|'wwpns'
op|','
nl|'\n'
string|"'wwnns'"
op|':'
name|'wwnns'
nl|'\n'
op|'}'
newline|'\n'
name|'volume'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'fake'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# TODO(walter-boring) add the fake in os-brick'
nl|'\n'
name|'fake_get_connector'
op|'.'
name|'return_value'
op|'='
name|'expected'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'get_volume_connector'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'connector'
op|','
string|"'get_connector_properties'"
op|')'
newline|'\n'
DECL|member|test_get_connector_storage_ip
name|'def'
name|'test_get_connector_storage_ip'
op|'('
name|'self'
op|','
name|'fake_get_connector'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip'
op|'='
string|"'100.100.100.100'"
newline|'\n'
name|'storage_ip'
op|'='
string|"'101.101.101.101'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'my_block_storage_ip'
op|'='
name|'storage_ip'
op|','
name|'my_ip'
op|'='
name|'ip'
op|')'
newline|'\n'
name|'volume'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'fake'"
nl|'\n'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'ip'"
op|':'
name|'storage_ip'
nl|'\n'
op|'}'
newline|'\n'
comment|'# TODO(walter-boring) add the fake in os-brick'
nl|'\n'
name|'fake_get_connector'
op|'.'
name|'return_value'
op|'='
name|'expected'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'get_volume_connector'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'storage_ip'
op|','
name|'result'
op|'['
string|"'ip'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lifecycle_event_registration
dedent|''
name|'def'
name|'test_lifecycle_event_registration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_registerErrorHandler
name|'def'
name|'fake_registerErrorHandler'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'.'
name|'append'
op|'('
string|"'fake_registerErrorHandler'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_capabilities
dedent|''
name|'def'
name|'fake_get_host_capabilities'
op|'('
op|'**'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'ARMV7'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
name|'calls'
op|'.'
name|'append'
op|'('
string|"'fake_get_host_capabilities'"
op|')'
newline|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|','
string|"'registerErrorHandler'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_registerErrorHandler'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_get_host_capabilities'
op|')'
newline|'\n'
DECL|function|test_init_host
name|'def'
name|'test_init_host'
op|'('
name|'get_host_capabilities'
op|','
name|'register_error_handler'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"test_host"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_init_host'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(dkliban): Will fail if get_host_capabilities is called before'
nl|'\n'
comment|'# registerErrorHandler'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake_registerErrorHandler'"
op|','
nl|'\n'
string|"'fake_get_host_capabilities'"
op|']'
op|','
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sanitize_log_to_xml
dedent|''
name|'def'
name|'test_sanitize_log_to_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# setup fake data'
nl|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|"'auth_password'"
op|':'
string|"'scrubme'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"'data'"
op|':'
name|'data'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Tests that the parameters to the _get_guest_xml method'
nl|'\n'
comment|'# are sanitized for passwords when logged.'
nl|'\n'
DECL|function|fake_debug
name|'def'
name|'fake_debug'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'auth_password'"
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'scrubme'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LOG'
op|','
string|"'debug'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_debug'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_guest_config'"
op|','
name|'return_value'
op|'='
name|'conf'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'debug_mock'
op|','
name|'conf_mock'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'{'
op|'}'
op|','
name|'disk_info'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
op|','
name|'block_device_info'
op|'='
name|'bdi'
op|')'
newline|'\n'
comment|"# we don't care what the log message is, we just want to make sure"
nl|'\n'
comment|'# our stub method is called which asserts the password is scrubbed'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'debug_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|'"time"'
op|')'
newline|'\n'
DECL|member|test_get_guest_config
name|'def'
name|'test_get_guest_config'
op|'('
name|'self'
op|','
name|'time_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'time_mock'
op|'.'
name|'return_value'
op|'='
number|'1234567.89'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"display_name"'
op|']'
op|'='
string|'"purple tomatoes"'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'project_id'
op|'='
number|'123'
op|','
nl|'\n'
name|'project_name'
op|'='
string|'"aubergine"'
op|','
nl|'\n'
name|'user_id'
op|'='
number|'456'
op|','
nl|'\n'
name|'user_name'
op|'='
string|'"pie"'
op|')'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'name'
op|'='
string|"'m1.small'"
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'6'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'28'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
nl|'\n'
name|'swap'
op|'='
number|'33550336'
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'context'
op|'='
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'uuid'
op|','
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'6'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'28'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
string|'"hd"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'9'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'metadata'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestMetaNovaInstance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|'.'
name|'version_string_with_package'
op|'('
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'package'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"purple tomatoes"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1234567.89'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'creationTime'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"image"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'roottype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'instance_ref'
op|'['
string|'"image_ref"'
op|']'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'rootid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'owner'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestMetaNovaOwner'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'456'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'owner'
op|'.'
name|'userid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pie"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'owner'
op|'.'
name|'username'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'123'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'owner'
op|'.'
name|'projectid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"aubergine"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'owner'
op|'.'
name|'projectname'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestMetaNovaFlavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"m1.small"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'28'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'496'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'disk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8128'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'ephemeral'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'33550336'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'metadata'
op|'['
number|'0'
op|']'
op|'.'
name|'flavor'
op|'.'
name|'swap'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_lxc
dedent|''
name|'def'
name|'test_get_guest_config_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
op|'{'
string|"'mapping'"
op|':'
op|'{'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|','
name|'cfg'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
name|'cfg'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_mode'
op|'.'
name|'EXE'
op|','
name|'cfg'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"/sbin/init"'
op|','
name|'cfg'
op|'.'
name|'os_init_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"console=tty0 console=ttyS0"'
op|','
name|'cfg'
op|'.'
name|'os_cmdline'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFilesys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_lxc_with_id_maps
dedent|''
name|'def'
name|'test_get_guest_config_lxc_with_id_maps'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'uid_maps'
op|'='
op|'['
string|"'0:1000:100'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'gid_maps'
op|'='
op|'['
string|"'0:1000:100'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
op|'{'
string|"'mapping'"
op|':'
op|'{'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|','
name|'cfg'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
name|'cfg'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_mode'
op|'.'
name|'EXE'
op|','
name|'cfg'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"/sbin/init"'
op|','
name|'cfg'
op|'.'
name|'os_init_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"console=tty0 console=ttyS0"'
op|','
name|'cfg'
op|'.'
name|'os_cmdline'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFilesys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'idmaps'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'idmaps'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'idmaps'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_fits
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_fits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_no_fit
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_no_fit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'4096'
op|','
name|'vcpus'
op|'='
number|'4'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'random'
op|','
string|"'choice'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'get_host_cap_mock'
op|','
nl|'\n'
name|'get_vcpu_pin_set_mock'
op|','
name|'choice_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'choice_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_memory_backing_config
dedent|''
dedent|''
name|'def'
name|'_test_get_guest_memory_backing_config'
op|'('
nl|'\n'
name|'self'
op|','
name|'host_topology'
op|','
name|'inst_topology'
op|','
name|'numatune'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'drvr'
op|','
string|'"_get_host_numa_topology"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'host_topology'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'drvr'
op|'.'
name|'_get_guest_memory_backing_config'
op|'('
nl|'\n'
name|'inst_topology'
op|','
name|'numatune'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_get_guest_memory_backing_config_large_success
name|'def'
name|'test_get_guest_memory_backing_config_large_success'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_topology'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
name|'mempages'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'4'
op|','
name|'total'
op|'='
number|'2000'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'2048'
op|','
name|'total'
op|'='
number|'512'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'1048576'
op|','
name|'total'
op|'='
number|'0'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'inst_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
name|'pagesize'
op|'='
number|'2048'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'numa_tune'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestNUMATune'
op|'('
op|')'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'='
op|'['
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestNUMATuneMemNode'
op|'('
op|')'
op|']'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'['
number|'0'
op|']'
op|'.'
name|'cellid'
op|'='
number|'0'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'['
number|'0'
op|']'
op|'.'
name|'nodeset'
op|'='
op|'['
number|'3'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_memory_backing_config'
op|'('
nl|'\n'
name|'host_topology'
op|','
name|'inst_topology'
op|','
name|'numa_tune'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|'.'
name|'hugepages'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2048'
op|','
name|'result'
op|'.'
name|'hugepages'
op|'['
number|'0'
op|']'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'0'
op|']'
op|','
name|'result'
op|'.'
name|'hugepages'
op|'['
number|'0'
op|']'
op|'.'
name|'nodeset'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_get_guest_memory_backing_config_smallest
name|'def'
name|'test_get_guest_memory_backing_config_smallest'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_topology'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
name|'mempages'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'4'
op|','
name|'total'
op|'='
number|'2000'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'2048'
op|','
name|'total'
op|'='
number|'512'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMAPagesTopology'
op|'('
name|'size_kb'
op|'='
number|'1048576'
op|','
name|'total'
op|'='
number|'0'
op|','
nl|'\n'
name|'used'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'inst_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
name|'pagesize'
op|'='
number|'4'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'numa_tune'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestNUMATune'
op|'('
op|')'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'='
op|'['
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestNUMATuneMemNode'
op|'('
op|')'
op|']'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'['
number|'0'
op|']'
op|'.'
name|'cellid'
op|'='
number|'0'
newline|'\n'
name|'numa_tune'
op|'.'
name|'memnodes'
op|'['
number|'0'
op|']'
op|'.'
name|'nodeset'
op|'='
op|'['
number|'3'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_memory_backing_config'
op|'('
nl|'\n'
name|'host_topology'
op|','
name|'inst_topology'
op|','
name|'numa_tune'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_pci_no_numa_info
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_pci_no_numa_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'available'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_info'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'numa_node'
op|'='
name|'None'
op|')'
newline|'\n'
name|'pci_device'
op|'='
name|'objects'
op|'.'
name|'PciDevice'
op|'('
op|'**'
name|'pci_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
name|'range'
op|'('
number|'8'
op|')'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_manager'
op|','
string|'"get_instance_pci_devs"'
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
name|'pci_device'
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_2pci_no_fit
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_2pci_no_fit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'4096'
op|','
name|'vcpus'
op|'='
number|'4'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'available'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_info'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'numa_node'
op|'='
number|'1'
op|')'
newline|'\n'
name|'pci_device'
op|'='
name|'objects'
op|'.'
name|'PciDevice'
op|'('
op|'**'
name|'pci_device_info'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'numa_node'
op|'='
number|'0'
op|','
name|'address'
op|'='
string|"'0000:00:00.2'"
op|')'
newline|'\n'
name|'pci_device2'
op|'='
name|'objects'
op|'.'
name|'PciDevice'
op|'('
op|'**'
name|'pci_device_info'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'random'
op|','
string|"'choice'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_manager'
op|','
string|'"get_instance_pci_devs"'
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
name|'pci_device'
op|','
name|'pci_device2'
op|']'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'get_host_cap_mock'
op|','
nl|'\n'
name|'get_vcpu_pin_set_mock'
op|','
name|'choice_mock'
op|','
name|'pci_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'choice_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getType'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getVersion'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_capabilities'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_set_host_enabled'"
op|')'
newline|'\n'
DECL|member|_test_get_guest_config_numa_unsupported
name|'def'
name|'_test_get_guest_config_numa_unsupported'
op|'('
name|'self'
op|','
name|'fake_lib_version'
op|','
nl|'\n'
name|'fake_version'
op|','
name|'fake_type'
op|','
nl|'\n'
name|'fake_arch'
op|','
name|'exception_class'
op|','
nl|'\n'
name|'pagesize'
op|','
name|'mock_host'
op|','
nl|'\n'
name|'mock_caps'
op|','
name|'mock_lib_version'
op|','
nl|'\n'
name|'mock_version'
op|','
name|'mock_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'memory'
op|'='
number|'1024'
op|','
name|'pagesize'
op|'='
name|'pagesize'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'numa_topology'
op|'='
name|'instance_topology'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'fake_arch'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_type'
op|'.'
name|'return_value'
op|'='
name|'fake_type'
newline|'\n'
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'fake_version'
newline|'\n'
name|'mock_lib_version'
op|'.'
name|'return_value'
op|'='
name|'fake_lib_version'
newline|'\n'
name|'mock_caps'
op|'.'
name|'return_value'
op|'='
name|'caps'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception_class'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_old_version_libvirt
dedent|''
name|'def'
name|'test_get_guest_config_numa_old_version_libvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_bad_version_libvirt
dedent|''
name|'def'
name|'test_get_guest_config_numa_bad_version_libvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'BAD_LIBVIRT_NUMA_VERSIONS'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_old_version_qemu
dedent|''
name|'def'
name|'test_get_guest_config_numa_old_version_qemu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_other_arch_qemu
dedent|''
name|'def'
name|'test_get_guest_config_numa_other_arch_qemu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'PPC64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_xen
dedent|''
name|'def'
name|'test_get_guest_config_numa_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
op|'('
number|'4'
op|','
number|'5'
op|','
number|'0'
op|')'
op|')'
op|','
nl|'\n'
string|"'XEN'"
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_old_pages_libvirt
dedent|''
name|'def'
name|'test_get_guest_config_numa_old_pages_libvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_HUGEPAGE_VERSION'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'MemoryPagesUnsupported'
op|','
nl|'\n'
number|'2048'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_old_pages_qemu
dedent|''
name|'def'
name|'test_get_guest_config_numa_old_pages_qemu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_numa_unsupported'
op|'('
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_HUGEPAGE_VERSION'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NUMATopologyUnsupported'
op|','
nl|'\n'
number|'2048'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_fit_w_cpu_pinset
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_fit_w_cpu_pinset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'1024'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
name|'kb_mem'
op|'='
number|'4194304'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
name|'range'
op|'('
number|'8'
op|')'
op|')'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'has_min_version_mock'
op|','
name|'get_host_cap_mock'
op|','
nl|'\n'
name|'get_vcpu_pin_set_mock'
op|','
name|'get_online_cpus_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
comment|'# NOTE(ndipanov): we make sure that pin_set was taken into account'
nl|'\n'
comment|'# when choosing viable cells'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_non_numa_host_instance_topo
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_non_numa_host_instance_topo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'numa_topology'
op|'='
name|'instance_topology'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'2048'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|','
string|'"get_by_instance_uuid"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'instance_topology'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'numatune'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
name|'for'
name|'instance_cell'
op|','
name|'numa_cfg_cell'
name|'in'
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|'.'
name|'cells'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'id'
op|','
name|'numa_cfg_cell'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'cpuset'
op|','
name|'numa_cfg_cell'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'memory'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'numa_cfg_cell'
op|'.'
name|'memory'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_topo
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_topo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
name|'pagesize'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'pagesize'
op|'='
name|'None'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'numa_topology'
op|'='
name|'instance_topology'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'2048'
op|','
name|'vcpus'
op|'='
number|'4'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|','
string|'"get_by_instance_uuid"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'instance_topology'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
name|'range'
op|'('
number|'8'
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
comment|'# Test that the pinning is correct and limited to allowed only'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUTuneEmulatorPin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'instance_cell'
op|','
name|'numa_cfg_cell'
op|','
name|'index'
name|'in'
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|'.'
name|'cells'
op|','
nl|'\n'
name|'range'
op|'('
name|'len'
op|'('
name|'instance_topology'
op|'.'
name|'cells'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'index'
op|','
name|'numa_cfg_cell'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'cpuset'
op|','
name|'numa_cfg_cell'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'memory'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'numa_cfg_cell'
op|'.'
name|'memory'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'allnodes'
op|'='
op|'['
name|'cell'
op|'.'
name|'id'
name|'for'
name|'cell'
name|'in'
name|'instance_topology'
op|'.'
name|'cells'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'allnodes'
op|','
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'nodeset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'instance_cell'
op|','
name|'memnode'
op|','
name|'index'
name|'in'
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memnodes'
op|','
nl|'\n'
name|'range'
op|'('
name|'len'
op|'('
name|'instance_topology'
op|'.'
name|'cells'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'index'
op|','
name|'memnode'
op|'.'
name|'cellid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'instance_cell'
op|'.'
name|'id'
op|']'
op|','
name|'memnode'
op|'.'
name|'nodeset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'memnode'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_topo_reordered
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_topo_reordered'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'numa_topology'
op|'='
name|'instance_topology'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'2048'
op|','
name|'vcpus'
op|'='
number|'4'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|','
string|'"get_by_instance_uuid"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'instance_topology'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
name|'range'
op|'('
number|'8'
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
comment|'# Test that the pinning is correct and limited to allowed only'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'6'
op|','
number|'7'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'6'
op|','
number|'7'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUTuneEmulatorPin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|','
number|'6'
op|','
number|'7'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
op|','
op|'('
name|'instance_cell'
op|','
name|'numa_cfg_cell'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|'.'
name|'cells'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'index'
op|','
name|'numa_cfg_cell'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'cpuset'
op|','
name|'numa_cfg_cell'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'memory'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'numa_cfg_cell'
op|'.'
name|'memory'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'allnodes'
op|'='
name|'set'
op|'('
op|'['
name|'cell'
op|'.'
name|'id'
name|'for'
name|'cell'
name|'in'
name|'instance_topology'
op|'.'
name|'cells'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'allnodes'
op|','
name|'set'
op|'('
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'nodeset'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
op|','
op|'('
name|'instance_cell'
op|','
name|'memnode'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memnodes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'index'
op|','
name|'memnode'
op|'.'
name|'cellid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'instance_cell'
op|'.'
name|'id'
op|']'
op|','
name|'memnode'
op|'.'
name|'nodeset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'memnode'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_numa_host_instance_topo_cpu_pinning
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_numa_host_instance_topo_cpu_pinning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'cpu_pinning'
op|'='
op|'{'
number|'0'
op|':'
number|'24'
op|','
number|'1'
op|':'
number|'25'
op|'}'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'cpu_pinning'
op|'='
op|'{'
number|'2'
op|':'
number|'0'
op|','
number|'3'
op|':'
number|'1'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'numa_topology'
op|'='
name|'instance_topology'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'2048'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'root_gb'
op|'='
number|'496'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'8128'
op|','
name|'swap'
op|'='
number|'33550336'
op|','
name|'name'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'extra_specs'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'='
name|'flavor'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
nl|'\n'
name|'sockets_per_cell'
op|'='
number|'4'
op|','
name|'cores_per_socket'
op|'='
number|'3'
op|','
name|'threads_per_core'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|','
string|'"get_by_instance_uuid"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'instance_topology'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
name|'range'
op|'('
number|'8'
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
comment|'# Test that the pinning is correct and limited to allowed only'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'24'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'0'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'25'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'1'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'0'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'2'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'vcpupin'
op|'['
number|'3'
op|']'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|')'
newline|'\n'
nl|'\n'
comment|'# Emulator must be pinned to union of cfg.cputune.vcpupin[*].cpuset'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUTuneEmulatorPin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|','
number|'24'
op|','
number|'25'
op|']'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'emulatorpin'
op|'.'
name|'cpuset'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'instance_cell'
op|','
name|'numa_cfg_cell'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
name|'cfg'
op|'.'
name|'cpu'
op|'.'
name|'numa'
op|'.'
name|'cells'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'i'
op|','
name|'numa_cfg_cell'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'cpuset'
op|','
name|'numa_cfg_cell'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_cell'
op|'.'
name|'memory'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'numa_cfg_cell'
op|'.'
name|'memory'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'allnodes'
op|'='
name|'set'
op|'('
op|'['
name|'cell'
op|'.'
name|'id'
name|'for'
name|'cell'
name|'in'
name|'instance_topology'
op|'.'
name|'cells'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'allnodes'
op|','
name|'set'
op|'('
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'nodeset'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memory'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'instance_cell'
op|','
name|'memnode'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'zip'
op|'('
nl|'\n'
name|'instance_topology'
op|'.'
name|'cells'
op|','
name|'cfg'
op|'.'
name|'numatune'
op|'.'
name|'memnodes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'i'
op|','
name|'memnode'
op|'.'
name|'cellid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'instance_cell'
op|'.'
name|'id'
op|']'
op|','
name|'memnode'
op|'.'
name|'nodeset'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"strict"'
op|','
name|'memnode'
op|'.'
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cpu_numa_config_from_instance
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_cpu_numa_config_from_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topology'
op|'='
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'('
name|'cells'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
name|'id'
op|'='
number|'0'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'128'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMACell'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'128'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_cpu_numa_config_from_instance'
op|'('
name|'topology'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUNUMA'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'131072'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'131072'
op|','
name|'conf'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'memory'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cpu_numa_config_from_instance_none
dedent|''
name|'def'
name|'test_get_cpu_numa_config_from_instance_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_cpu_numa_config_from_instance'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_has_cpu_policy_support
name|'def'
name|'test_has_cpu_policy_support'
op|'('
name|'self'
op|','
name|'mock_has_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CPUPinningNotSupported'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_has_cpu_policy_support'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_clock
dedent|''
name|'def'
name|'test_get_guest_config_clock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'hpet_map'
op|'='
op|'{'
nl|'\n'
name|'arch'
op|'.'
name|'X86_64'
op|':'
name|'True'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'I686'
op|':'
name|'True'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'PPC'
op|':'
name|'False'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'PPC64'
op|':'
name|'False'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'ARMV7'
op|':'
name|'False'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'AARCH64'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'guestarch'
op|','
name|'expect_hpet'
name|'in'
name|'hpet_map'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'get_arch'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'guestarch'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"utc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|','
string|'"pit"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'tickpolicy'
op|','
nl|'\n'
string|'"delay"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|','
string|'"rtc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'tickpolicy'
op|','
nl|'\n'
string|'"catchup"'
op|')'
newline|'\n'
name|'if'
name|'expect_hpet'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hpet'"
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'present'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'get_arch'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_windows
name|'def'
name|'test_get_guest_config_windows'
op|'('
name|'self'
op|','
name|'mock_version'
op|','
name|'mock_get_arch'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'mock_get_arch'
op|'.'
name|'return_value'
op|'='
name|'arch'
op|'.'
name|'I686'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'windows'"
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"localtime"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pit"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"rtc"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"hpet"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'present'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'get_arch'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_windows_timer
name|'def'
name|'test_get_guest_config_windows_timer'
op|'('
name|'self'
op|','
name|'mock_version'
op|','
name|'mock_get_arch'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_get_arch'
op|'.'
name|'return_value'
op|'='
name|'arch'
op|'.'
name|'I686'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'windows'"
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"localtime"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pit"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"rtc"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"hpet"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'2'
op|']'
op|'.'
name|'present'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"hypervclock"'
op|','
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'3'
op|']'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'3'
op|']'
op|'.'
name|'present'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureHyperV'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_windows_hyperv_feature1
name|'def'
name|'test_get_guest_config_windows_hyperv_feature1'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
DECL|function|fake_version
indent|'        '
name|'def'
name|'fake_version'
op|'('
name|'lv_ver'
op|'='
name|'None'
op|','
name|'hv_ver'
op|'='
name|'None'
op|','
name|'hv_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'lv_ver'
op|'=='
op|'('
number|'1'
op|','
number|'0'
op|','
number|'0'
op|')'
name|'and'
name|'hv_ver'
op|'=='
op|'('
number|'1'
op|','
number|'1'
op|','
number|'0'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_version'
op|'.'
name|'side_effect'
op|'='
name|'fake_version'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'windows'"
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"localtime"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureHyperV'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'relaxed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'spinlocks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'vapic'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_windows_hyperv_feature2
name|'def'
name|'test_get_guest_config_windows_hyperv_feature2'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'windows'"
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"localtime"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureHyperV'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'relaxed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'spinlocks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8191'
op|','
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'spinlock_retries'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|'.'
name|'vapic'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_two_nics
dedent|''
name|'def'
name|'test_get_guest_config_with_two_nics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
string|'"hd"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'9'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_bug_1118829
dedent|''
name|'def'
name|'test_get_guest_config_bug_1118829'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'uml'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'cdrom_bus'"
op|':'
string|"'ide'"
op|','
nl|'\n'
string|"'mapping'"
op|':'
op|'{'
string|"u'vda'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"u'vda'"
op|'}'
op|','
nl|'\n'
string|"'root'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vda'"
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
comment|'# NOTE(jdg): For this specific test leave this blank'
nl|'\n'
comment|'# This will exercise the failed code path still,'
nl|'\n'
comment|"# and won't require fakes and stubs of the iscsi discovery"
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_root_device_name
dedent|''
name|'def'
name|'test_get_guest_config_with_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'uml'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'root_device_name'"
op|':'
string|"'/dev/vdb'"
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
string|'"uml"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_block_device
dedent|''
name|'def'
name|'test_get_guest_config_with_block_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdd'"
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'info'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
string|"'save'"
nl|'\n'
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdd'"
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_lxc_with_attached_volume
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_lxc_with_attached_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'mount_device'"
op|']'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'mount_device'"
op|']'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'2'
op|']'
op|'['
string|"'mount_device'"
op|']'
op|'='
string|"'/dev/vdd'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
string|"'save'"
nl|'\n'
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'info'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdd'"
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_configdrive
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_with_configdrive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# It's necessary to check if the architecture is power, because"
nl|'\n'
comment|"# power doesn't have support to ide, and so libvirt translate"
nl|'\n'
comment|'# all ide calls to scsi'
nl|'\n'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# make configdrive.required_by() return True'
nl|'\n'
name|'instance_ref'
op|'['
string|"'config_drive'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
comment|'# The last device is selected for this. on x86 is the last ide'
nl|'\n'
comment|'# device (hdd). Since power only support scsi, the last device'
nl|'\n'
comment|'# is sdz'
nl|'\n'
nl|'\n'
name|'expect'
op|'='
op|'{'
string|'"ppc"'
op|':'
string|'"sdz"'
op|','
string|'"ppc64"'
op|':'
string|'"sdz"'
op|'}'
newline|'\n'
name|'disk'
op|'='
name|'expect'
op|'.'
name|'get'
op|'('
name|'blockinfo'
op|'.'
name|'libvirt_utils'
op|'.'
name|'get_arch'
op|'('
op|'{'
op|'}'
op|')'
op|','
string|'"hdd"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
name|'disk'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_virtio_scsi_bus
dedent|''
name|'def'
name|'test_get_guest_config_with_virtio_scsi_bus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_scsi_model"'
op|':'
string|'"virtio-scsi"'
op|'}'
op|'}'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
op|'['
op|']'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestController'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'model'
op|','
string|"'virtio-scsi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_virtio_scsi_bus_bdm
dedent|''
name|'def'
name|'test_get_guest_config_with_virtio_scsi_bus_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_scsi_model"'
op|':'
string|'"virtio-scsi"'
op|'}'
op|'}'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bd_info'
op|'='
op|'{'
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdc'"
op|','
string|"'disk_bus'"
op|':'
string|"'scsi'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdd'"
op|','
string|"'disk_bus'"
op|':'
string|"'scsi'"
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
name|'bd_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'bd_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'bd_info'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
string|"'save'"
nl|'\n'
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|','
op|'['
op|']'
op|','
name|'bd_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'sdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_bus'
op|','
string|"'scsi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'sdd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'target_bus'
op|','
string|"'scsi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestController'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'model'
op|','
string|"'virtio-scsi'"
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc_and_tablet
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc_and_tablet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_spice_and_tablet
dedent|''
name|'def'
name|'test_get_guest_config_with_spice_and_tablet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_spice_and_agent
dedent|''
name|'def'
name|'test_get_guest_config_with_spice_and_agent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'target_name'
op|','
string|'"com.redhat.spice.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"qxl"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial.acquire_port'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.hardware.get_number_of_serial_ports'"
op|','
nl|'\n'
name|'return_value'
op|'='
number|'1'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'get_arch'"
op|','
op|')'
newline|'\n'
DECL|member|test_create_serial_console_devices_based_on_arch
name|'def'
name|'test_create_serial_console_devices_based_on_arch'
op|'('
name|'self'
op|','
name|'mock_get_arch'
op|','
nl|'\n'
name|'mock_get_port_number'
op|','
nl|'\n'
name|'mock_acquire_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
name|'arch'
op|'.'
name|'X86_64'
op|':'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'S390'
op|':'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'S390X'
op|':'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'guest_arch'
op|','
name|'device_type'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_get_arch'
op|'.'
name|'return_value'
op|'='
name|'guest_arch'
newline|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_serial_console_devices'
op|'('
name|'guest'
op|','
name|'instance'
op|'='
name|'None'
op|','
nl|'\n'
name|'flavor'
op|'='
op|'{'
op|'}'
op|','
name|'image_meta'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'guest'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'console_device'
op|'='
name|'guest'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'console_device'
op|','
name|'device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'console_device'
op|'.'
name|'type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial.acquire_port'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_serial_console
name|'def'
name|'test_get_guest_config_serial_console'
op|'('
name|'self'
op|','
name|'acquire_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'acquire_port'
op|'.'
name|'return_value'
op|'='
number|'11111'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'11111'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'listen_port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_serial_console_through_flavor
dedent|''
name|'def'
name|'test_get_guest_config_serial_console_through_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw:serial_port_count'"
op|':'
number|'3'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'9'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_serial_console_invalid_flavor
dedent|''
name|'def'
name|'test_get_guest_config_serial_console_invalid_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw:serial_port_count'"
op|':'
string|'"a"'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageSerialPortNumberInvalid'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_serial_console_image_and_flavor
dedent|''
name|'def'
name|'test_get_guest_config_serial_console_image_and_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_serial_port_count"'
op|':'
string|'"3"'
op|'}'
op|'}'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw:serial_port_count'"
op|':'
number|'4'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
name|'cfg'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'9'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"tcp"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.console.serial.acquire_port'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_serial_console_through_port_rng_exhausted
name|'def'
name|'test_get_guest_config_serial_console_through_port_rng_exhausted'
op|'('
nl|'\n'
name|'self'
op|','
name|'acquire_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'acquire_port'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'SocketPortRangeExhaustedException'
op|'('
nl|'\n'
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'SocketPortRangeExhaustedException'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
DECL|member|test_get_serial_ports_from_instance
name|'def'
name|'test_get_serial_ports_from_instance'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_test_get_serial_ports_from_instance'
op|'('
name|'None'
op|','
nl|'\n'
name|'mock_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'101'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'101'
op|')'
op|']'
op|','
name|'list'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
DECL|member|test_get_serial_ports_from_instance_bind_only
name|'def'
name|'test_get_serial_ports_from_instance_bind_only'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_test_get_serial_ports_from_instance'
op|'('
string|"'bind'"
op|','
nl|'\n'
name|'mock_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'101'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'100'
op|')'
op|']'
op|','
name|'list'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
DECL|member|test_get_serial_ports_from_instance_connect_only
name|'def'
name|'test_get_serial_ports_from_instance_connect_only'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_test_get_serial_ports_from_instance'
op|'('
string|"'connect'"
op|','
nl|'\n'
name|'mock_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'101'
op|')'
op|']'
op|','
name|'list'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
DECL|member|test_get_serial_ports_from_instance_on_s390
name|'def'
name|'test_get_serial_ports_from_instance_on_s390'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'_test_get_serial_ports_from_instance'
op|'('
name|'None'
op|','
nl|'\n'
name|'mock_get_domain'
op|','
nl|'\n'
string|"'console'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'101'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.2'"
op|','
number|'101'
op|')'
op|']'
op|','
name|'list'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_serial_ports_from_instance
dedent|''
name|'def'
name|'_test_get_serial_ports_from_instance'
op|'('
name|'self'
op|','
name|'mode'
op|','
name|'mock_get_domain'
op|','
nl|'\n'
name|'dev_name'
op|'='
string|"'serial'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n        <domain type=\'kvm\'>\n          <devices>\n            <%(dev_name)s type="tcp">\n              <source host="127.0.0.1" service="100" mode="connect"/>\n            </%(dev_name)s>\n            <%(dev_name)s type="tcp">\n              <source host="127.0.0.1" service="101" mode="bind"/>\n            </%(dev_name)s>\n            <%(dev_name)s type="tcp">\n              <source host="127.0.0.2" service="100" mode="bind"/>\n            </%(dev_name)s>\n            <%(dev_name)s type="tcp">\n              <source host="127.0.0.2" service="101" mode="connect"/>\n            </%(dev_name)s>\n          </devices>\n        </domain>"""'
op|'%'
op|'{'
string|"'dev_name'"
op|':'
name|'dev_name'
op|'}'
newline|'\n'
nl|'\n'
name|'dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'xml'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'return'
name|'drvr'
op|'.'
name|'_get_serial_ports_from_instance'
op|'('
nl|'\n'
name|'instance'
op|','
name|'mode'
op|'='
name|'mode'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_type_xen
dedent|''
name|'def'
name|'test_get_guest_config_with_type_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"xen"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'get_arch'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'arch'
op|'.'
name|'S390X'
op|')'
newline|'\n'
DECL|member|test_get_guest_config_with_type_kvm_on_s390
name|'def'
name|'test_get_guest_config_with_type_kvm_on_s390'
op|'('
name|'self'
op|','
name|'mock_get_arch'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_stub_host_capabilities_cpu_arch'
op|'('
name|'arch'
op|'.'
name|'S390X'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'self'
op|'.'
name|'_get_guest_config_via_fake_api'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'log_file_device'
op|'='
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'log_file_device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"sclplm"'
op|','
name|'log_file_device'
op|'.'
name|'target_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"file"'
op|','
name|'log_file_device'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'terminal_device'
op|'='
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'terminal_device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"sclp"'
op|','
name|'terminal_device'
op|'.'
name|'target_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pty"'
op|','
name|'terminal_device'
op|'.'
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"s390-ccw-virtio"'
op|','
name|'cfg'
op|'.'
name|'os_mach_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_stub_host_capabilities_cpu_arch
dedent|''
name|'def'
name|'_stub_host_capabilities_cpu_arch'
op|'('
name|'self'
op|','
name|'cpu_arch'
op|')'
op|':'
newline|'\n'
DECL|function|get_host_capabilities_stub
indent|'        '
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'cpu_arch'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_guest_config_via_fake_api
dedent|''
name|'def'
name|'_get_guest_config_via_fake_api'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'return'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_type_xen_pae_hvm
dedent|''
name|'def'
name|'test_get_guest_config_with_type_xen_pae_hvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'vm_mode'"
op|']'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_loader'
op|','
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'xen_hvmloader_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeaturePAE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureACPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeatureAPIC'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_type_xen_pae_pvm
dedent|''
name|'def'
name|'test_get_guest_config_with_type_xen_pae_pvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'XEN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFeaturePAE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc_and_spice
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc_and_spice'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'9'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'target_name'
op|','
string|'"com.redhat.spice.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_watchdog_action_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_with_watchdog_action_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_watchdog_action"'
op|':'
string|'"none"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'9'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestWatchdog'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"none"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'action'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_usb_tablet
dedent|''
name|'def'
name|'_test_get_guest_usb_tablet'
op|'('
name|'self'
op|','
name|'vnc_enabled'
op|','
name|'spice_enabled'
op|','
name|'os_type'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'vnc_enabled'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'spice_enabled'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'agent_enabled'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'return'
name|'drvr'
op|'.'
name|'_get_guest_usb_tablet'
op|'('
name|'os_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_usb_tablet_wipe
dedent|''
name|'def'
name|'test_get_guest_usb_tablet_wipe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_usb_tablet'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
name|'True'
op|','
name|'True'
op|','
string|'"foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
name|'tablet'
op|'='
name|'self'
op|'.'
name|'_test_get_guest_usb_tablet'
op|'('
nl|'\n'
name|'False'
op|','
name|'True'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tablet'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_config_with_watchdog_action_flavor
dedent|''
name|'def'
name|'_test_get_guest_config_with_watchdog_action_flavor'
op|'('
name|'self'
op|','
nl|'\n'
name|'hw_watchdog_action'
op|'='
string|'"hw:watchdog_action"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
name|'hw_watchdog_action'
op|':'
string|"'none'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'9'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestWatchdog'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"none"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'action'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_watchdog_action_through_flavor
dedent|''
name|'def'
name|'test_get_guest_config_with_watchdog_action_through_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_guest_config_with_watchdog_action_flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# TODO(pkholkin): the test accepting old property name 'hw_watchdog_action'"
nl|'\n'
comment|'#                should be removed in the next release'
nl|'\n'
DECL|member|test_get_guest_config_with_watchdog_action_through_flavor_no_scope
dedent|''
name|'def'
name|'test_get_guest_config_with_watchdog_action_through_flavor_no_scope'
op|'('
nl|'\n'
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_guest_config_with_watchdog_action_flavor'
op|'('
nl|'\n'
name|'hw_watchdog_action'
op|'='
string|'"hw_watchdog_action"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_watchdog_overrides_flavor
dedent|''
name|'def'
name|'test_get_guest_config_with_watchdog_overrides_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_watchdog_action'"
op|':'
string|"'none'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_watchdog_action"'
op|':'
string|'"pause"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'9'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestWatchdog'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"pause"'
op|','
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'action'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_video_driver_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_with_video_driver_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_video_model"'
op|':'
string|'"vmvga"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"vmvga"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_qga_through_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_with_qga_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"yes"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'9'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'8'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'type'
op|','
string|'"unix"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'target_name'
op|','
string|'"org.qemu.guest_agent.0"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_video_driver_vram
dedent|''
name|'def'
name|'test_get_guest_config_with_video_driver_vram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_video:ram_max_mb'"
op|':'
string|'"100"'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_video_model"'
op|':'
string|'"qxl"'
op|','
nl|'\n'
string|'"hw_video_ram"'
op|':'
string|'"64"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"qxl"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'vram'
op|','
number|'64'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|'/'
name|'units'
op|'.'
name|'Ki'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.teardown_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.setup_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_utils.fileutils.ensure_tree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_unmount_fs_if_error_during_lxc_create_domain
name|'def'
name|'test_unmount_fs_if_error_during_lxc_create_domain'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_inst_path'
op|','
name|'mock_ensure_tree'
op|','
name|'mock_setup_container'
op|','
nl|'\n'
name|'mock_get_info'
op|','
name|'mock_teardown'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""If we hit an error during a `_create_domain` call to `libvirt+lxc`\n        we need to ensure the guest FS is unmounted from the host so that any\n        future `lvremove` calls will work.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'return_value'
op|'='
string|"'/tmp/'"
newline|'\n'
name|'mock_image_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'='
name|'mock_image_backend'
newline|'\n'
name|'mock_image'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_image'
op|'.'
name|'path'
op|'='
string|"'/tmp/test.img'"
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'return_value'
op|'='
name|'mock_image'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'return_value'
op|'='
string|"'/dev/nbd0'"
newline|'\n'
name|'mock_get_info'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_conn'
op|'.'
name|'defineXML'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_conn'
op|'.'
name|'defineXML'
op|'.'
name|'side_effect'
op|'='
name|'ValueError'
op|'('
string|"'somethingbad'"
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_is_booted_from_volume'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'firewall_driver'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'cleanup'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'xml'"
op|','
nl|'\n'
name|'mock_instance'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'mock_teardown'
op|'.'
name|'assert_called_with'
op|'('
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_video_driver_flavor_limit_not_set
dedent|''
dedent|''
name|'def'
name|'test_video_driver_flavor_limit_not_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_video_model"'
op|':'
string|'"qxl"'
op|','
nl|'\n'
string|'"hw_video_ram"'
op|':'
string|'"64"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RequestedVRamTooHigh'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_video_driver_ram_above_flavor_limit
dedent|''
dedent|''
name|'def'
name|'test_video_driver_ram_above_flavor_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'instance_ref'
op|'.'
name|'get_flavor'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_video:ram_max_mb'"
op|':'
string|'"50"'
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_video_model"'
op|':'
string|'"qxl"'
op|','
nl|'\n'
string|'"hw_video_ram"'
op|':'
string|'"64"'
op|'}'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RequestedVRamTooHigh'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_without_qga_through_image_meta
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_without_qga_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"no"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"no"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_rng_device
dedent|''
name|'def'
name|'test_get_guest_config_with_rng_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_rng:allowed'"
op|':'
string|"'True'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_rng_model"'
op|':'
string|'"virtio"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestRng'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'model'
op|','
string|"'random'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'backend'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_rng_not_allowed
dedent|''
name|'def'
name|'test_get_guest_config_with_rng_not_allowed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_rng_model"'
op|':'
string|'"virtio"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_rng_limits
dedent|''
name|'def'
name|'test_get_guest_config_with_rng_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_rng:allowed'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'hw_rng:rate_bytes'"
op|':'
string|"'1024'"
op|','
nl|'\n'
string|"'hw_rng:rate_period'"
op|':'
string|"'2'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_rng_model"'
op|':'
string|'"virtio"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestRng'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'model'
op|','
string|"'random'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'backend'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_bytes'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_period'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.os.path.exists'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_with_rng_backend
name|'def'
name|'test_get_guest_config_with_rng_backend'
op|'('
name|'self'
op|','
name|'mock_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'rng_dev_path'
op|'='
string|"'/dev/hw_rng'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'mock_path'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_rng:allowed'"
op|':'
string|"'True'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_rng_model"'
op|':'
string|'"virtio"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestRng'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'model'
op|','
string|"'random'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'backend'
op|','
string|"'/dev/hw_rng'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'rate_period'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.os.path.exists'"
op|')'
newline|'\n'
DECL|member|test_get_guest_config_with_rng_dev_not_present
name|'def'
name|'test_get_guest_config_with_rng_dev_not_present'
op|'('
name|'self'
op|','
name|'mock_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|','
nl|'\n'
name|'rng_dev_path'
op|'='
string|"'/dev/hw_rng'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'mock_path'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw_rng:allowed'"
op|':'
string|"'True'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_rng_model"'
op|':'
string|'"virtio"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RngDeviceNotExist'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_guest_cpu_shares_with_multi_vcpu
dedent|''
name|'def'
name|'test_guest_cpu_shares_with_multi_vcpu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'vcpus'
op|'='
number|'4'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4096'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'shares'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_cpu_quota
dedent|''
name|'def'
name|'test_get_guest_config_with_cpu_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'quota:cpu_shares'"
op|':'
string|"'10000'"
op|','
nl|'\n'
string|"'quota:cpu_period'"
op|':'
string|"'20000'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'shares'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'cfg'
op|'.'
name|'cputune'
op|'.'
name|'period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_bogus_cpu_quota
dedent|''
name|'def'
name|'test_get_guest_config_with_bogus_cpu_quota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'quota:cpu_shares'"
op|':'
string|"'fishfood'"
op|','
nl|'\n'
string|"'quota:cpu_period'"
op|':'
string|"'20000'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_config_sysinfo_serial
dedent|''
name|'def'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'self'
op|','
name|'expected_serial'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config_sysinfo'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSysinfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|'.'
name|'vendor_string'
op|'('
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_manufacturer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|'.'
name|'product_string'
op|'('
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_product'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|'.'
name|'version_string_with_package'
op|'('
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_serial'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_serial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"Virtual Machine"'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'system_family'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_none
dedent|''
name|'def'
name|'test_get_guest_config_sysinfo_serial_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"none"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|'"_get_host_sysinfo_serial_hardware"'
op|')'
newline|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_hardware
name|'def'
name|'test_get_guest_config_sysinfo_serial_hardware'
op|'('
name|'self'
op|','
name|'mock_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"hardware"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'theuuid'
op|'='
string|'"56b40135-a973-4eb3-87bb-a2382a3e6dbc"'
newline|'\n'
name|'mock_uuid'
op|'.'
name|'return_value'
op|'='
name|'theuuid'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'theuuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_os
dedent|''
name|'def'
name|'test_get_guest_config_sysinfo_serial_os'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"os"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'real_open'
op|'='
name|'builtins'
op|'.'
name|'open'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'builtins'
op|','
string|'"open"'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_open'
op|','
op|')'
op|':'
newline|'\n'
indent|'            '
name|'theuuid'
op|'='
string|'"56b40135-a973-4eb3-87bb-a2382a3e6dbc"'
newline|'\n'
nl|'\n'
DECL|function|fake_open
name|'def'
name|'fake_open'
op|'('
name|'filename'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'filename'
op|'=='
string|'"/etc/machine-id"'
op|':'
newline|'\n'
indent|'                    '
name|'h'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'h'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'theuuid'
newline|'\n'
name|'h'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'h'
newline|'\n'
name|'return'
name|'h'
newline|'\n'
dedent|''
name|'return'
name|'real_open'
op|'('
name|'filename'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_open'
op|'.'
name|'side_effect'
op|'='
name|'fake_open'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'theuuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_auto_hardware
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_sysinfo_serial_auto_hardware'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"auto"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'real_exists'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|'"_get_host_sysinfo_serial_hardware"'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_exists'
op|','
name|'mock_uuid'
op|')'
op|':'
newline|'\n'
DECL|function|fake_exists
indent|'            '
name|'def'
name|'fake_exists'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'filename'
op|'=='
string|'"/etc/machine-id"'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'real_exists'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_exists'
op|'.'
name|'side_effect'
op|'='
name|'fake_exists'
newline|'\n'
nl|'\n'
name|'theuuid'
op|'='
string|'"56b40135-a973-4eb3-87bb-a2382a3e6dbc"'
newline|'\n'
name|'mock_uuid'
op|'.'
name|'return_value'
op|'='
name|'theuuid'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'theuuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_auto_os
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_sysinfo_serial_auto_os'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"auto"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'real_exists'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'real_open'
op|'='
name|'builtins'
op|'.'
name|'open'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'builtins'
op|','
string|'"open"'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_exists'
op|','
name|'mock_open'
op|')'
op|':'
newline|'\n'
DECL|function|fake_exists
indent|'            '
name|'def'
name|'fake_exists'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'filename'
op|'=='
string|'"/etc/machine-id"'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'real_exists'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_exists'
op|'.'
name|'side_effect'
op|'='
name|'fake_exists'
newline|'\n'
nl|'\n'
name|'theuuid'
op|'='
string|'"56b40135-a973-4eb3-87bb-a2382a3e6dbc"'
newline|'\n'
nl|'\n'
DECL|function|fake_open
name|'def'
name|'fake_open'
op|'('
name|'filename'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'filename'
op|'=='
string|'"/etc/machine-id"'
op|':'
newline|'\n'
indent|'                    '
name|'h'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'h'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'theuuid'
newline|'\n'
name|'h'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'h'
newline|'\n'
name|'return'
name|'h'
newline|'\n'
dedent|''
name|'return'
name|'real_open'
op|'('
name|'filename'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_open'
op|'.'
name|'side_effect'
op|'='
name|'fake_open'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_sysinfo_serial'
op|'('
name|'theuuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_sysinfo_serial_invalid
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_sysinfo_serial_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sysinfo_serial'
op|'='
string|'"invalid"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fake_service_compute
dedent|''
name|'def'
name|'_create_fake_service_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_info'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1729'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'objects'
op|'.'
name|'Service'
op|'('
op|'**'
name|'service_info'
op|')'
newline|'\n'
nl|'\n'
name|'compute_info'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1729'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'free_disk_gb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'xen'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'running_vms'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'current_workload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'service_id'"
op|':'
name|'service_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'service_ref'
op|'['
string|"'host'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'compute_ref'
op|'='
name|'objects'
op|'.'
name|'ComputeNode'
op|'('
op|'**'
name|'compute_info'
op|')'
newline|'\n'
name|'return'
op|'('
name|'service_ref'
op|','
name|'compute_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_pci_passthrough_kvm
dedent|''
name|'def'
name|'test_get_guest_config_with_pci_passthrough_kvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'service_ref'
op|','
name|'compute_ref'
op|'='
name|'self'
op|'.'
name|'_create_fake_service_compute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'allocated'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.1'"
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'compute_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_info'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'pci_device'
op|'='
name|'objects'
op|'.'
name|'PciDevice'
op|'('
op|'**'
name|'pci_device_info'
op|')'
newline|'\n'
name|'pci_list'
op|'='
name|'objects'
op|'.'
name|'PciDeviceList'
op|'('
op|')'
newline|'\n'
name|'pci_list'
op|'.'
name|'objects'
op|'.'
name|'append'
op|'('
name|'pci_device'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'pci_devices'
op|'='
name|'pci_list'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'had_pci'
op|'='
number|'0'
newline|'\n'
comment|'# care only about the PCI devices'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'type'
op|'('
name|'dev'
op|')'
op|'=='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestHostdevPCI'
op|':'
newline|'\n'
indent|'                '
name|'had_pci'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'type'
op|','
string|"'pci'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'managed'
op|','
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'mode'
op|','
string|"'subsystem'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'domain'
op|','
string|'"0000"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'bus'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'slot'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'function'
op|','
string|'"1"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'had_pci'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_pci_passthrough_xen
dedent|''
name|'def'
name|'test_get_guest_config_with_pci_passthrough_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'service_ref'
op|','
name|'compute_ref'
op|'='
name|'self'
op|'.'
name|'_create_fake_service_compute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'allocated'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.2'"
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'compute_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'request_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_info'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'pci_device'
op|'='
name|'objects'
op|'.'
name|'PciDevice'
op|'('
op|'**'
name|'pci_device_info'
op|')'
newline|'\n'
name|'pci_list'
op|'='
name|'objects'
op|'.'
name|'PciDeviceList'
op|'('
op|')'
newline|'\n'
name|'pci_list'
op|'.'
name|'objects'
op|'.'
name|'append'
op|'('
name|'pci_device'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'pci_devices'
op|'='
name|'pci_list'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'had_pci'
op|'='
number|'0'
newline|'\n'
comment|'# care only about the PCI devices'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'type'
op|'('
name|'dev'
op|')'
op|'=='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestHostdevPCI'
op|':'
newline|'\n'
indent|'                '
name|'had_pci'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'type'
op|','
string|"'pci'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'managed'
op|','
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'mode'
op|','
string|"'subsystem'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'domain'
op|','
string|'"0000"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'bus'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'slot'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'function'
op|','
string|'"2"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'had_pci'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_os_command_line_through_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_os_command_line_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|'"fake_kernel_id"'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"os_command_line"'
op|':'
nl|'\n'
string|'"fake_os_command_line"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_cmdline'
op|','
string|'"fake_os_command_line"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_os_command_line_without_kernel_id
dedent|''
name|'def'
name|'test_get_guest_config_os_command_line_without_kernel_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"os_command_line"'
op|':'
nl|'\n'
string|'"fake_os_command_line"'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_cmdline'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_os_command_empty
dedent|''
name|'def'
name|'test_get_guest_config_os_command_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|'"fake_kernel_id"'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"os_command_line"'
op|':'
string|'""'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
comment|"# the instance has 'root=/dev/vda console=tty0 console=ttyS0' set by"
nl|'\n'
comment|'# default, so testing an empty string and None value in the'
nl|'\n'
comment|'# os_command_line image property must pass'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'cfg'
op|'.'
name|'os_cmdline'
op|','
string|'""'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_armv7
dedent|''
name|'def'
name|'test_get_guest_config_armv7'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_host_capabilities_stub
indent|'        '
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'ARMV7'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_mach_type'
op|','
string|'"vexpress-a15"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_aarch64
dedent|''
name|'def'
name|'test_get_guest_config_aarch64'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_host_capabilities_stub
indent|'        '
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'AARCH64'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_mach_type'
op|','
string|'"virt"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_machine_type_s390
dedent|''
name|'def'
name|'test_get_guest_config_machine_type_s390'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'host_cpu_archs'
op|'='
op|'('
name|'arch'
op|'.'
name|'S390'
op|','
name|'arch'
op|'.'
name|'S390X'
op|')'
newline|'\n'
name|'for'
name|'host_cpu_arch'
name|'in'
name|'host_cpu_archs'
op|':'
newline|'\n'
indent|'            '
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'host_cpu_arch'
newline|'\n'
name|'os_mach_type'
op|'='
name|'drvr'
op|'.'
name|'_get_machine_type'
op|'('
name|'None'
op|','
name|'caps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'s390-ccw-virtio'"
op|','
name|'os_mach_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_machine_type_through_image_meta
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_machine_type_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_machine_type"'
op|':'
nl|'\n'
string|'"fake_machine_type"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_mach_type'
op|','
string|'"fake_machine_type"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_machine_type_from_config
dedent|''
name|'def'
name|'test_get_guest_config_machine_type_from_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'hw_machine_type'
op|'='
op|'['
string|"'x86_64=fake_machine_type'"
op|']'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_getCapabilities
name|'def'
name|'fake_getCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""\n            <capabilities>\n                <host>\n                    <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                    <cpu>\n                      <arch>x86_64</arch>\n                      <model>Penryn</model>\n                      <vendor>Intel</vendor>\n                      <topology sockets=\'1\' cores=\'2\' threads=\'1\'/>\n                      <feature name=\'xtpr\'/>\n                    </cpu>\n                </host>\n            </capabilities>\n            """'
newline|'\n'
nl|'\n'
DECL|function|fake_baselineCPU
dedent|''
name|'def'
name|'fake_baselineCPU'
op|'('
name|'cpu'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""<cpu mode=\'custom\' match=\'exact\'>\n                        <model fallback=\'allow\'>Penryn</model>\n                        <vendor>Intel</vendor>\n                        <feature policy=\'require\' name=\'xtpr\'/>\n                      </cpu>\n                   """'
newline|'\n'
nl|'\n'
comment|'# Make sure the host arch is mocked as x86_64'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'getCapabilities'
op|'='
name|'fake_getCapabilities'
op|','
nl|'\n'
name|'baselineCPU'
op|'='
name|'fake_baselineCPU'
op|','
nl|'\n'
name|'getVersion'
op|'='
name|'lambda'
op|':'
number|'1005001'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_mach_type'
op|','
string|'"fake_machine_type"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_config_ppc64
dedent|''
name|'def'
name|'_test_get_guest_config_ppc64'
op|'('
name|'self'
op|','
name|'device_index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.driver.LibvirtDriver._get_guest_config.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'('
name|'arch'
op|'.'
name|'PPC64'
op|','
name|'arch'
op|'.'
name|'PPC'
op|')'
newline|'\n'
name|'for'
name|'guestarch'
name|'in'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'get_arch'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'guestarch'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
name|'device_index'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
name|'device_index'
op|']'
op|'.'
name|'type'
op|','
string|"'vga'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_ppc64_through_image_meta_vnc_enabled
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_ppc64_through_image_meta_vnc_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_ppc64'
op|'('
number|'6'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_ppc64_through_image_meta_spice_enabled
dedent|''
name|'def'
name|'test_get_guest_config_ppc64_through_image_meta_spice_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_ppc64'
op|'('
number|'8'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_config_bootmenu
dedent|''
name|'def'
name|'_test_get_guest_config_bootmenu'
op|'('
name|'self'
op|','
name|'image_meta'
op|','
name|'extra_specs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
name|'extra_specs'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conf'
op|'.'
name|'os_bootmenu'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_bootmenu_via_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_bootmenu_via_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_guest_config_bootmenu'
op|'('
nl|'\n'
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_boot_menu"'
op|':'
string|'"True"'
op|'}'
op|'}'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_bootmenu_via_extra_specs
dedent|''
name|'def'
name|'test_get_guest_config_bootmenu_via_extra_specs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_guest_config_bootmenu'
op|'('
op|'{'
op|'}'
op|','
op|'{'
string|"'hw:boot_menu'"
op|':'
string|"'True'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_none
dedent|''
name|'def'
name|'test_get_guest_cpu_config_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_mode'
op|'='
string|'"none"'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_kvm
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_kvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-model"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_uml
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_uml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"uml"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_lxc
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"lxc"'
op|','
nl|'\n'
name|'cpu_mode'
op|'='
name|'None'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_passthrough
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_mode'
op|'='
string|'"host-passthrough"'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-passthrough"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_model
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_mode'
op|'='
string|'"host-model"'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-model"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_custom
dedent|''
name|'def'
name|'test_get_guest_cpu_config_custom'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_mode'
op|'='
string|'"custom"'
op|','
nl|'\n'
name|'cpu_model'
op|'='
string|'"Penryn"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"custom"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
string|'"Penryn"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_topology
dedent|''
name|'def'
name|'test_get_guest_cpu_topology'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'vcpus'
op|'='
number|'8'
newline|'\n'
name|'instance_ref'
op|'.'
name|'flavor'
op|'.'
name|'extra_specs'
op|'='
op|'{'
string|"'hw:cpu_max_sockets'"
op|':'
string|"'4'"
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-model"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'sockets'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'cores'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'threads'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_by_default
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_by_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtio'"
op|','
name|'device'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'device'
op|'.'
name|'period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_disable
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_disable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'mem_stats_period_seconds'
op|'='
number|'0'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'no_exist'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'no_exist'
op|'='
name|'False'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'no_exist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_period_value
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_period_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'mem_stats_period_seconds'
op|'='
number|'21'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtio'"
op|','
name|'device'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'21'
op|','
name|'device'
op|'.'
name|'period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_qemu
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_qemu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'qemu'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtio'"
op|','
name|'device'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'device'
op|'.'
name|'period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_xen
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'device'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigMemoryBalloon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'xen'"
op|','
name|'device'
op|'.'
name|'model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'device'
op|'.'
name|'period'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_memory_balloon_config_lxc
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_guest_memory_balloon_config_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
op|'{'
op|'}'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'no_exist'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'.'
name|'root_name'
op|'=='
string|"'memballoon'"
op|':'
newline|'\n'
indent|'                '
name|'no_exist'
op|'='
name|'False'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'no_exist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'False'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel_xen_hvm
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel_xen_hvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'.'
name|'update'
op|'('
op|'{'
string|"'vm_mode'"
op|':'
name|'vm_mode'
op|'.'
name|'HVM'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'expect_xen_hvm'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel_xen_pv
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel_xen_pv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'.'
name|'update'
op|'('
op|'{'
string|"'vm_mode'"
op|':'
name|'vm_mode'
op|'.'
name|'XEN'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'expect_xen_hvm'
op|'='
name|'False'
op|','
nl|'\n'
name|'xen_only'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'True'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'False'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri
dedent|''
name|'def'
name|'test_xml_and_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'True'
op|','
name|'expect_ramdisk'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue
dedent|''
name|'def'
name|'test_xml_and_uri_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'True'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'True'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_kernel_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_kernel_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'True'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'True'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_uuid
dedent|''
name|'def'
name|'test_xml_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_xml_and_uuid'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"raw"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_container_and_uri
dedent|''
name|'def'
name|'test_lxc_container_and_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_container'
op|'('
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_prefix
dedent|''
name|'def'
name|'test_xml_disk_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_prefix'
op|'('
name|'instance_data'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_user_specified_disk_prefix
dedent|''
name|'def'
name|'test_xml_user_specified_disk_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_prefix'
op|'('
name|'instance_data'
op|','
string|"'sd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_driver
dedent|''
name|'def'
name|'test_xml_disk_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_driver'
op|'('
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_virtio
dedent|''
name|'def'
name|'test_xml_disk_bus_virtio'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"raw"'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'('
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vda"'
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_ide
dedent|''
name|'def'
name|'test_xml_disk_bus_ide'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# It's necessary to check if the architecture is power, because"
nl|'\n'
comment|"# power doesn't have support to ide, and so libvirt translate"
nl|'\n'
comment|'# all ide calls to scsi'
nl|'\n'
nl|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
name|'arch'
op|'.'
name|'PPC'
op|':'
op|'('
string|'"cdrom"'
op|','
string|'"scsi"'
op|','
string|'"sda"'
op|')'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'PPC64'
op|':'
op|'('
string|'"cdrom"'
op|','
string|'"scsi"'
op|','
string|'"sda"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'expec_val'
op|'='
name|'expected'
op|'.'
name|'get'
op|'('
name|'blockinfo'
op|'.'
name|'libvirt_utils'
op|'.'
name|'get_arch'
op|'('
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"cdrom"'
op|','
string|'"ide"'
op|','
string|'"hda"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"iso"'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'('
name|'expec_val'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_ide_and_virtio
dedent|''
name|'def'
name|'test_xml_disk_bus_ide_and_virtio'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# It's necessary to check if the architecture is power, because"
nl|'\n'
comment|"# power doesn't have support to ide, and so libvirt translate"
nl|'\n'
comment|'# all ide calls to scsi'
nl|'\n'
nl|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
name|'arch'
op|'.'
name|'PPC'
op|':'
op|'('
string|'"cdrom"'
op|','
string|'"scsi"'
op|','
string|'"sda"'
op|')'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'PPC64'
op|':'
op|'('
string|'"cdrom"'
op|','
string|'"scsi"'
op|','
string|'"sda"'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'swap'
op|'='
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'swap_size'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ephemerals'
op|'='
op|'['
op|'{'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
nl|'\n'
string|"'swap'"
op|':'
name|'swap'
op|','
nl|'\n'
string|"'ephemerals'"
op|':'
name|'ephemerals'
op|'}'
newline|'\n'
name|'expec_val'
op|'='
name|'expected'
op|'.'
name|'get'
op|'('
name|'blockinfo'
op|'.'
name|'libvirt_utils'
op|'.'
name|'get_arch'
op|'('
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"cdrom"'
op|','
string|'"ide"'
op|','
string|'"hda"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"iso"'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|','
nl|'\n'
op|'('
name|'expec_val'
op|','
nl|'\n'
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vdb"'
op|')'
op|','
nl|'\n'
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vdc"'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_list_instances
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vm3'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000003"'
op|')'
newline|'\n'
name|'vm4'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000004"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'vm1'
op|','
name|'vm2'
op|','
name|'vm3'
op|','
name|'vm4'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'names'
op|'='
name|'drvr'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|'['
number|'0'
op|']'
op|','
name|'vm1'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|'['
number|'1'
op|']'
op|','
name|'vm2'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|'['
number|'2'
op|']'
op|','
name|'vm3'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|'['
number|'3'
op|']'
op|','
name|'vm4'
op|'.'
name|'name'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
name|'only_running'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_list_instance_uuids
name|'def'
name|'test_list_instance_uuids'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm1'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
newline|'\n'
name|'vm2'
op|'='
name|'FakeVirtDomain'
op|'('
name|'id'
op|'='
number|'17'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
newline|'\n'
name|'vm3'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000003"'
op|')'
newline|'\n'
name|'vm4'
op|'='
name|'FakeVirtDomain'
op|'('
name|'name'
op|'='
string|'"instance00000004"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'vm1'
op|','
name|'vm2'
op|','
name|'vm3'
op|','
name|'vm4'
op|']'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'uuids'
op|'='
name|'drvr'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuids'
op|'['
number|'0'
op|']'
op|','
name|'vm1'
op|'.'
name|'UUIDString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuids'
op|'['
number|'1'
op|']'
op|','
name|'vm2'
op|'.'
name|'UUIDString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuids'
op|'['
number|'2'
op|']'
op|','
name|'vm3'
op|'.'
name|'UUIDString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'uuids'
op|'['
number|'3'
op|']'
op|','
name|'vm4'
op|'.'
name|'UUIDString'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
name|'only_running'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_get_all_block_devices
name|'def'
name|'test_get_all_block_devices'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
op|'['
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/3\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
number|'0'
op|']'
op|','
name|'id'
op|'='
number|'3'
op|','
name|'name'
op|'='
string|'"instance00000001"'
op|')'
op|','
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
number|'1'
op|']'
op|','
name|'id'
op|'='
number|'1'
op|','
name|'name'
op|'='
string|'"instance00000002"'
op|')'
op|','
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
number|'2'
op|']'
op|','
name|'id'
op|'='
number|'5'
op|','
name|'name'
op|'='
string|'"instance00000003"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'devices'
op|'='
name|'drvr'
op|'.'
name|'_get_all_block_devices'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'devices'
op|','
op|'['
string|"'/path/to/dev/1'"
op|','
string|"'/path/to/dev/3'"
op|']'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_online_cpus'"
op|')'
newline|'\n'
DECL|member|test_get_host_vcpus
name|'def'
name|'test_get_host_vcpus'
op|'('
name|'self'
op|','
name|'get_online_cpus'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"4-5"'
op|')'
newline|'\n'
name|'get_online_cpus'
op|'.'
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|','
number|'6'
op|']'
op|')'
newline|'\n'
name|'expected_vcpus'
op|'='
number|'2'
newline|'\n'
name|'vcpus'
op|'='
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vcpus'
op|','
name|'vcpus'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_online_cpus'"
op|')'
newline|'\n'
DECL|member|test_get_host_vcpus_out_of_range
name|'def'
name|'test_get_host_vcpus_out_of_range'
op|'('
name|'self'
op|','
name|'get_online_cpus'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"4-6"'
op|')'
newline|'\n'
name|'get_online_cpus'
op|'.'
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_online_cpus'"
op|')'
newline|'\n'
DECL|member|test_get_host_vcpus_libvirt_error
name|'def'
name|'test_get_host_vcpus_libvirt_error'
op|'('
name|'self'
op|','
name|'get_online_cpus'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'not_supported_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'this function is not supported by the connection driver:'"
nl|'\n'
string|"' virNodeNumOfDevices'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"4-6"'
op|')'
newline|'\n'
name|'get_online_cpus'
op|'.'
name|'side_effect'
op|'='
name|'not_supported_exc'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_online_cpus'"
op|')'
newline|'\n'
DECL|member|test_get_host_vcpus_libvirt_error_success
name|'def'
name|'test_get_host_vcpus_libvirt_error_success'
op|'('
name|'self'
op|','
name|'get_online_cpus'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'not_supported_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'this function is not supported by the connection driver:'"
nl|'\n'
string|"' virNodeNumOfDevices'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1"'
op|')'
newline|'\n'
name|'get_online_cpus'
op|'.'
name|'side_effect'
op|'='
name|'not_supported_exc'
newline|'\n'
name|'expected_vcpus'
op|'='
number|'1'
newline|'\n'
name|'vcpus'
op|'='
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vcpus'
op|','
name|'vcpus'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_cpu_count'"
op|')'
newline|'\n'
DECL|member|test_get_host_vcpus_after_hotplug
name|'def'
name|'test_get_host_vcpus_after_hotplug'
op|'('
name|'self'
op|','
name|'get_cpu_count'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'get_cpu_count'
op|'.'
name|'return_value'
op|'='
number|'2'
newline|'\n'
name|'expected_vcpus'
op|'='
number|'2'
newline|'\n'
name|'vcpus'
op|'='
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vcpus'
op|','
name|'vcpus'
op|')'
newline|'\n'
name|'get_cpu_count'
op|'.'
name|'return_value'
op|'='
number|'3'
newline|'\n'
name|'expected_vcpus'
op|'='
number|'3'
newline|'\n'
name|'vcpus'
op|'='
name|'drvr'
op|'.'
name|'_get_vcpu_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vcpus'
op|','
name|'vcpus'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_quiesce
name|'def'
name|'test_quiesce'
op|'('
name|'self'
op|','
name|'mock_has_min_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|'"fsFreeze"'
op|')'
name|'as'
name|'mock_fsfreeze'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'img_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"yes"'
op|','
nl|'\n'
string|'"os_require_quiesce"'
op|':'
string|'"yes"'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'drvr'
op|'.'
name|'quiesce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'img_meta'
op|')'
op|')'
newline|'\n'
name|'mock_fsfreeze'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quiesce_not_supported
dedent|''
dedent|''
name|'def'
name|'test_quiesce_not_supported'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceQuiesceNotSupported'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'quiesce'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_unquiesce
name|'def'
name|'test_unquiesce'
op|'('
name|'self'
op|','
name|'mock_has_min_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'getLibVersion'
op|'='
name|'lambda'
op|':'
number|'1002005'
op|','
nl|'\n'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|'"fsThaw"'
op|')'
name|'as'
name|'mock_fsthaw'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'img_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"yes"'
op|','
nl|'\n'
string|'"os_require_quiesce"'
op|':'
string|'"yes"'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'drvr'
op|'.'
name|'unquiesce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'img_meta'
op|')'
op|')'
newline|'\n'
name|'mock_fsthaw'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__create_snapshot_metadata
dedent|''
dedent|''
name|'def'
name|'test__create_snapshot_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance_data'
op|'='
op|'{'
string|"'kernel_id'"
op|':'
string|"'kernel'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'prj_id'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'ram_id'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_data'
op|')'
newline|'\n'
name|'img_fmt'
op|'='
string|"'raw'"
newline|'\n'
name|'snp_name'
op|'='
string|"'snapshot_name'"
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'drvr'
op|'.'
name|'_create_snapshot_metadata'
op|'('
name|'base'
op|','
name|'instance'
op|','
name|'img_fmt'
op|','
name|'snp_name'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'name'"
op|':'
name|'snp_name'
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
name|'instance'
op|'['
string|"'kernel_id'"
op|']'
op|','
nl|'\n'
string|"'image_location'"
op|':'
string|"'snapshot'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'owner_id'"
op|':'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'instance'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
name|'img_fmt'
op|','
nl|'\n'
string|"'container_format'"
op|':'
name|'base'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|','
string|"'bare'"
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# simulate an instance with os_type field defined'
nl|'\n'
comment|'# disk format equals to ami'
nl|'\n'
comment|'# container format not equals to bare'
nl|'\n'
name|'instance'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'linux'"
newline|'\n'
name|'base'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'ami'"
newline|'\n'
name|'base'
op|'['
string|"'container_format'"
op|']'
op|'='
string|"'test_container'"
newline|'\n'
name|'expected'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'os_type'"
op|']'
op|'='
name|'instance'
op|'['
string|"'os_type'"
op|']'
newline|'\n'
name|'expected'
op|'['
string|"'disk_format'"
op|']'
op|'='
name|'base'
op|'['
string|"'disk_format'"
op|']'
newline|'\n'
name|'expected'
op|'['
string|"'container_format'"
op|']'
op|'='
name|'base'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|','
string|"'bare'"
op|')'
newline|'\n'
name|'ret'
op|'='
name|'drvr'
op|'.'
name|'_create_snapshot_metadata'
op|'('
name|'base'
op|','
name|'instance'
op|','
name|'img_fmt'
op|','
name|'snp_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_driver
dedent|''
name|'def'
name|'test_get_volume_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
string|"'/fake'"
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|'}'
op|'}'
newline|'\n'
name|'driver'
op|'='
name|'conn'
op|'.'
name|'_get_volume_driver'
op|'('
name|'connection_info'
op|')'
newline|'\n'
name|'result'
op|'='
name|'isinstance'
op|'('
name|'driver'
op|','
name|'volume_drivers'
op|'.'
name|'LibvirtFakeVolumeDriver'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_driver_unknown
dedent|''
name|'def'
name|'test_get_volume_driver_unknown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'unknown'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
string|"'/fake'"
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_get_volume_driver'
op|','
nl|'\n'
name|'connection_info'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume_drivers'
op|'.'
name|'LibvirtFakeVolumeDriver'
op|','
nl|'\n'
string|"'connect_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume_drivers'
op|'.'
name|'LibvirtFakeVolumeDriver'
op|','
string|"'get_config'"
op|')'
newline|'\n'
DECL|member|test_get_volume_config
name|'def'
name|'test_get_volume_config'
op|'('
name|'self'
op|','
name|'get_config'
op|','
name|'connect_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
string|"'/fake'"
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|'}'
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'{'
string|"'device_name'"
op|':'
string|"'vdb'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'fake-bus'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'fake-type'"
op|'}'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'bus'"
op|':'
name|'bdm'
op|'['
string|"'disk_bus'"
op|']'
op|','
string|"'type'"
op|':'
name|'bdm'
op|'['
string|"'device_type'"
op|']'
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vdb'"
op|'}'
newline|'\n'
name|'mock_config'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'get_config'
op|'.'
name|'return_value'
op|'='
name|'mock_config'
newline|'\n'
name|'config'
op|'='
name|'drvr'
op|'.'
name|'_get_volume_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'get_config'
op|'.'
name|'assert_called_once_with'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_config'
op|','
name|'config'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_invalid_volume_type
dedent|''
name|'def'
name|'test_attach_invalid_volume_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"badtype"'
op|'}'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_blockio_invalid_hypervisor
dedent|''
name|'def'
name|'test_attach_blockio_invalid_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'fake_type'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidHypervisorType'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"logical_block_size"'
op|':'
string|'"4096"'
op|','
nl|'\n'
string|'"physical_block_size"'
op|':'
string|'"4096"'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|'"getLibVersion"'
op|')'
newline|'\n'
DECL|member|test_attach_blockio_invalid_version
name|'def'
name|'test_attach_blockio_invalid_version'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_version'
op|'.'
name|'return_value'
op|'='
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'8'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'qemu'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"logical_block_size"'
op|':'
string|'"4096"'
op|','
nl|'\n'
string|'"physical_block_size"'
op|':'
string|'"4096"'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.get_image_from_system_metadata'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.blockinfo.get_info_from_bdm'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_domain'"
op|')'
newline|'\n'
DECL|member|test_attach_volume_with_vir_domain_affect_live_flag
name|'def'
name|'test_attach_volume_with_vir_domain_affect_live_flag'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_domain'
op|','
name|'mock_get_info'
op|','
name|'get_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'get_image'
op|'.'
name|'return_value'
op|'='
name|'image_meta'
newline|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_dom'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"device_path"'
op|':'
string|'"/fake"'
op|','
nl|'\n'
string|'"access_mode"'
op|':'
string|'"rw"'
op|'}'
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'{'
string|"'device_name'"
op|':'
string|"'vdb'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'fake-bus'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'fake-type'"
op|'}'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'bus'"
op|':'
name|'bdm'
op|'['
string|"'disk_bus'"
op|']'
op|','
string|"'type'"
op|':'
name|'bdm'
op|'['
string|"'device_type'"
op|']'
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vdb'"
op|'}'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'disk_info'
newline|'\n'
name|'mock_conf'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_connect_volume'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_conf'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_set_cache_mode'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_connect_volume'
op|','
name|'mock_get_volume_config'
op|','
nl|'\n'
name|'mock_set_cache_mode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'state'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_dom'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'='
op|'['
name|'state'
op|','
number|'512'
op|','
number|'512'
op|','
number|'2'
op|','
number|'1234'
op|','
number|'5678'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'connection_info'
op|','
name|'instance'
op|','
nl|'\n'
string|'"/dev/vdb"'
op|','
name|'disk_bus'
op|'='
name|'bdm'
op|'['
string|"'disk_bus'"
op|']'
op|','
nl|'\n'
name|'device_type'
op|'='
name|'bdm'
op|'['
string|"'device_type'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_domain'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_called_with'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'mock_connect_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'mock_get_volume_config'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'mock_set_cache_mode'
op|'.'
name|'assert_called_with'
op|'('
name|'mock_conf'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'attachDeviceFlags'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'mock_conf'
op|'.'
name|'to_xml'
op|'('
op|')'
op|','
name|'flags'
op|'='
name|'flags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_domain'"
op|')'
newline|'\n'
DECL|member|test_detach_volume_with_vir_domain_affect_live_flag
name|'def'
name|'test_detach_volume_with_vir_domain_affect_live_flag'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_xml'
op|'='
string|'"""<domain>\n  <devices>\n    <disk type=\'file\'>\n      <source file=\'/path/to/fake-volume\'/>\n      <target dev=\'vdc\' bus=\'virtio\'/>\n    </disk>\n  </devices>\n</domain>"""'
newline|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'mock_xml'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"device_path"'
op|':'
string|'"/fake"'
op|','
nl|'\n'
string|'"access_mode"'
op|':'
string|'"rw"'
op|'}'
op|'}'
newline|'\n'
name|'flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_disconnect_volume'"
op|')'
name|'as'
name|'mock_disconnect_volume'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'state'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_dom'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'='
op|'['
name|'state'
op|','
number|'512'
op|','
number|'512'
op|','
number|'2'
op|','
number|'1234'
op|','
number|'5678'
op|']'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_dom'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'instance'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_domain'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'detachDeviceFlags'
op|'.'
name|'assert_called_with'
op|'('
string|'"""<disk type="file" device="disk">\n  <source file="/path/to/fake-volume"/>\n  <target bus="virtio" dev="vdc"/>\n</disk>\n"""'
op|','
name|'flags'
op|'='
name|'flags'
op|')'
newline|'\n'
name|'mock_disconnect_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'connection_info'
op|','
string|"'vdc'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_nic
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_multi_nic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'2'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'interfaces'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|'"./devices/interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'interfaces'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'interfaces'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'bridge'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_behave_supports_direct_io
dedent|''
name|'def'
name|'_behave_supports_direct_io'
op|'('
name|'self'
op|','
name|'raise_open'
op|'='
name|'False'
op|','
name|'raise_write'
op|'='
name|'False'
op|','
nl|'\n'
name|'exc'
op|'='
name|'ValueError'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'open_behavior'
op|'='
name|'os'
op|'.'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'.'"
op|','
string|"'.directio.test'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'O_CREAT'
op|'|'
name|'os'
op|'.'
name|'O_WRONLY'
op|'|'
name|'os'
op|'.'
name|'O_DIRECT'
op|')'
newline|'\n'
name|'if'
name|'raise_open'
op|':'
newline|'\n'
indent|'            '
name|'open_behavior'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'open_behavior'
op|'.'
name|'AndReturn'
op|'('
number|'3'
op|')'
newline|'\n'
name|'write_bahavior'
op|'='
name|'os'
op|'.'
name|'write'
op|'('
number|'3'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'raise_write'
op|':'
newline|'\n'
indent|'                '
name|'write_bahavior'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'close'
op|'('
number|'3'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'os'
op|'.'
name|'unlink'
op|'('
number|'3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_supports_direct_io
dedent|''
name|'def'
name|'test_supports_direct_io'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# O_DIRECT is not supported on all Python runtimes, so on platforms'
nl|'\n'
comment|"# where it's not supported (e.g. Mac), we can still test the code-path"
nl|'\n'
comment|'# by stubbing out the value.'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'os'
op|','
string|"'O_DIRECT'"
op|')'
op|':'
newline|'\n'
comment|"# `mock` seems to have trouble stubbing an attr that doesn't"
nl|'\n'
comment|'# originally exist, so falling back to stubbing out the attribute'
nl|'\n'
comment|'# directly.'
nl|'\n'
indent|'            '
name|'os'
op|'.'
name|'O_DIRECT'
op|'='
number|'16384'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'delattr'
op|','
name|'os'
op|','
string|"'O_DIRECT'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'einval'
op|'='
name|'OSError'
op|'('
op|')'
newline|'\n'
name|'einval'
op|'.'
name|'errno'
op|'='
name|'errno'
op|'.'
name|'EINVAL'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'open'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'write'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'close'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'unlink'"
op|')'
newline|'\n'
name|'_supports_direct_io'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_supports_direct_io'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_behave_supports_direct_io'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_behave_supports_direct_io'
op|'('
name|'raise_write'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_behave_supports_direct_io'
op|'('
name|'raise_open'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_behave_supports_direct_io'
op|'('
name|'raise_write'
op|'='
name|'True'
op|','
name|'exc'
op|'='
name|'einval'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_behave_supports_direct_io'
op|'('
name|'raise_open'
op|'='
name|'True'
op|','
name|'exc'
op|'='
name|'einval'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_supports_direct_io'
op|'('
string|"'.'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_supports_direct_io'
op|','
string|"'.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_supports_direct_io'
op|','
string|"'.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'_supports_direct_io'
op|'('
string|"'.'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'_supports_direct_io'
op|'('
string|"'.'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_container
dedent|''
name|'def'
name|'_check_xml_and_container'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'drvr'
op|'.'
name|'_uri'
op|'('
op|')'
op|','
string|"'lxc:///'"
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'lxc'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
string|"'exe'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/filesystem/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dir'"
op|')'
op|','
string|"'/'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'check'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s failed common check %d'"
op|'%'
op|'('
name|'xml'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'target'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./devices/filesystem/source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'target'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_prefix
dedent|''
name|'def'
name|'_check_xml_and_disk_prefix'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'prefix'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_get_prefix
name|'def'
name|'_get_prefix'
op|'('
name|'p'
op|','
name|'default'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'p'
op|'+'
string|"'a'"
newline|'\n'
dedent|''
name|'return'
name|'default'
newline|'\n'
nl|'\n'
dedent|''
name|'type_disk_map'
op|'='
op|'{'
nl|'\n'
string|"'qemu'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'qemu'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'vda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'xen'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'xen'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'xvda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'kvm'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'kvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'vda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'uml'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'ubda'"
op|')'
op|')'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'virt_type'
op|','
name|'checks'
op|')'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'type_disk_map'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
name|'virt_type'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_prefix'
op|'='
name|'prefix'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'checks'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_driver
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_disk_driver'
op|'('
name|'self'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os_open'
op|'='
name|'os'
op|'.'
name|'open'
newline|'\n'
name|'directio_supported'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|os_open_stub
name|'def'
name|'os_open_stub'
op|'('
name|'path'
op|','
name|'flags'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'flags'
op|'&'
name|'os'
op|'.'
name|'O_DIRECT'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'directio_supported'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EINVAL'
op|','
nl|'\n'
string|"'%s: %s'"
op|'%'
op|'('
name|'os'
op|'.'
name|'strerror'
op|'('
name|'errno'
op|'.'
name|'EINVAL'
op|')'
op|','
name|'path'
op|')'
op|')'
newline|'\n'
dedent|''
name|'flags'
op|'&='
op|'~'
name|'os'
op|'.'
name|'O_DIRECT'
newline|'\n'
dedent|''
name|'return'
name|'os_open'
op|'('
name|'path'
op|','
name|'flags'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'open'"
op|','
name|'os_open_stub'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|connection_supports_direct_io_stub
name|'def'
name|'connection_supports_direct_io_stub'
op|'('
name|'dirpath'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'directio_supported'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_supports_direct_io'"
op|','
name|'connection_supports_direct_io_stub'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/driver'"
op|')'
newline|'\n'
name|'for'
name|'guest_disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'guest_disk'
op|'.'
name|'get'
op|'('
string|'"cache"'
op|')'
op|','
string|'"none"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'directio_supported'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# The O_DIRECT availability is cached on first use in'
nl|'\n'
comment|'# LibvirtDriver, hence we re-create it here'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/driver'"
op|')'
newline|'\n'
name|'for'
name|'guest_disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'guest_disk'
op|'.'
name|'get'
op|'('
string|'"cache"'
op|')'
op|','
string|'"writethrough"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_bus
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_disk_bus'
op|'('
name|'self'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|','
name|'wantConfig'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'got_disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk'"
op|')'
newline|'\n'
name|'got_disk_targets'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/target'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'wantConfig'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'want_device_type'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'want_device_bus'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'want_device_dev'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'2'
op|']'
newline|'\n'
nl|'\n'
name|'got_device_type'
op|'='
name|'got_disks'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'device'"
op|')'
newline|'\n'
name|'got_device_bus'
op|'='
name|'got_disk_targets'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'bus'"
op|')'
newline|'\n'
name|'got_device_dev'
op|'='
name|'got_disk_targets'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_type'
op|','
name|'want_device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_bus'
op|','
name|'want_device_bus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_dev'
op|','
name|'want_device_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_uuid
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_uuid'
op|'('
name|'self'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./uuid'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|'"_get_host_sysinfo_serial_hardware"'
op|','
op|')'
newline|'\n'
DECL|member|_check_xml_and_uri
name|'def'
name|'_check_xml_and_uri'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'mock_serial'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'rescue'
op|'='
name|'None'
op|','
name|'expect_xen_hvm'
op|'='
name|'False'
op|','
name|'xen_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_serial'
op|'.'
name|'return_value'
op|'='
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'xen_vm_mode'
op|'='
name|'vm_mode'
op|'.'
name|'XEN'
newline|'\n'
name|'if'
name|'expect_xen_hvm'
op|':'
newline|'\n'
indent|'            '
name|'xen_vm_mode'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
nl|'\n'
dedent|''
name|'type_uri_map'
op|'='
op|'{'
string|"'qemu'"
op|':'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'qemu'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/emulator'"
op|')'
op|','
name|'None'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'kvm'"
op|':'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'kvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/emulator'"
op|')'
op|','
name|'None'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'('
string|"'uml:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'uml'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'UML'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'xen'"
op|':'
op|'('
string|"'xen:///'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'xen'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'xen_vm_mode'
op|')'
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'expect_xen_hvm'
name|'or'
name|'xen_only'
op|':'
newline|'\n'
indent|'            '
name|'hypervisors_to_check'
op|'='
op|'['
string|"'xen'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'hypervisors_to_check'
op|'='
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|','
string|"'xen'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'hypervisor_type'
name|'in'
name|'hypervisors_to_check'
op|':'
newline|'\n'
indent|'            '
name|'check_list'
op|'='
name|'type_uri_map'
op|'['
name|'hypervisor_type'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'rescue'
op|':'
newline|'\n'
indent|'                '
name|'suffix'
op|'='
string|"'.rescue'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'suffix'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'expect_kernel'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/kernel'"
op|')'
op|'.'
name|'text'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'kernel'"
op|'+'
name|'suffix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/kernel'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expect_kernel'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
string|'"no_timer_check"'
name|'in'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/cmdline'"
op|')'
op|'.'
nl|'\n'
name|'text'
op|','
name|'hypervisor_type'
op|'=='
string|'"qemu"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
comment|'# Hypervisors that only support vm_mode.HVM and Xen'
nl|'\n'
comment|'# should not produce configuration that results in kernel'
nl|'\n'
comment|'# arguments'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'expect_kernel'
name|'and'
op|'('
name|'hypervisor_type'
name|'in'
nl|'\n'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|','
string|"'xen'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/root'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/cmdline'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'expect_ramdisk'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/initrd'"
op|')'
op|'.'
name|'text'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'ramdisk'"
op|'+'
name|'suffix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/initrd'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'hypervisor_type'
name|'in'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'xpath'
op|'='
string|'"./sysinfo/system/entry"'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"manufacturer"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'version'
op|'.'
name|'vendor_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"product"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'version'
op|'.'
name|'product_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"version"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
comment|"# NOTE(sirp): empty strings don't roundtrip in lxml (they are"
nl|'\n'
comment|"# converted to None), so we need an `or ''` to correct for that"
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'text'
name|'or'
string|"''"
op|','
nl|'\n'
name|'version'
op|'.'
name|'version_string_with_package'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'3'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"serial"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'3'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'4'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"uuid"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'4'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hypervisor_type'
name|'in'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/serial'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'file'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/serial'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'pty'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/serial/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'console.log'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/console'"
op|')'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'pty'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'common_checks'
op|'='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'tag'
op|','
string|"'domain'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./memory'"
op|')'
op|'.'
name|'text'
op|','
string|"'2097152'"
op|')'
op|']'
newline|'\n'
name|'if'
name|'rescue'
op|':'
newline|'\n'
indent|'            '
name|'common_checks'
op|'+='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'disk.rescue'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/source'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'disk'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'common_checks'
op|'+='
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/disk/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|']'
newline|'\n'
name|'common_checks'
op|'+='
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/disk/source'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'disk.local'"
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'virt_type'
name|'in'
name|'hypervisors_to_check'
op|':'
newline|'\n'
indent|'            '
name|'expected_uri'
op|'='
name|'type_uri_map'
op|'['
name|'virt_type'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'checks'
op|'='
name|'type_uri_map'
op|'['
name|'virt_type'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
name|'virt_type'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.libvirt'"
op|')'
name|'as'
name|'old_virt'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'old_virt'
op|'.'
name|'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'drvr'
op|'.'
name|'_uri'
op|'('
op|')'
op|','
name|'expected_uri'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'rescue'
op|'='
name|'rescue'
op|')'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'rescue'
op|'='
name|'rescue'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'checks'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'common_checks'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed common check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'filterref'
op|'='
string|"'./devices/interface/filterref'"
newline|'\n'
name|'vif'
op|'='
name|'network_info'
op|'['
number|'0'
op|']'
newline|'\n'
name|'nic_id'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"''"
op|')'
newline|'\n'
name|'fw'
op|'='
name|'firewall'
op|'.'
name|'NWFilterFirewall'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'drvr'
op|')'
newline|'\n'
name|'instance_filter_name'
op|'='
name|'fw'
op|'.'
name|'_instance_filter_name'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'nic_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
name|'filterref'
op|')'
op|'.'
name|'get'
op|'('
string|"'filter'"
op|')'
op|','
nl|'\n'
name|'instance_filter_name'
op|')'
newline|'\n'
nl|'\n'
comment|"# This test is supposed to make sure we don't"
nl|'\n'
comment|'# override a specifically set uri'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Deliberately not just assigning this string to CONF.connection_uri'
nl|'\n'
comment|'# and checking against that later on. This way we make sure the'
nl|'\n'
comment|"# implementation doesn't fiddle around with the CONF."
nl|'\n'
dedent|''
dedent|''
name|'testuri'
op|'='
string|"'something completely different'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_uri'
op|'='
name|'testuri'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'virt_type'
op|','
op|'('
name|'expected_uri'
op|','
name|'checks'
op|')'
op|')'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'type_uri_map'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
name|'virt_type'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'drvr'
op|'.'
name|'_uri'
op|'('
op|')'
op|','
name|'testuri'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_filtering_rules_for_instance_timeout
dedent|''
dedent|''
name|'def'
name|'test_ensure_filtering_rules_for_instance_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure_filtering_fules_for_instance() finishes with timeout.'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|class|FakeTime
dedent|''
name|'class'
name|'FakeTime'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|sleep
dedent|''
name|'def'
name|'sleep'
op|'('
name|'self'
op|','
name|'t'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'counter'
op|'+='
name|'t'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_timer'
op|'='
name|'FakeTime'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
name|'def'
name|'fake_sleep'
op|'('
name|'t'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_timer'
op|'.'
name|'sleep'
op|'('
name|'t'
op|')'
newline|'\n'
nl|'\n'
comment|'# _fake_network_info must be called before create_fake_libvirt_mock(),'
nl|'\n'
comment|'# as _fake_network_info calls importutils.import_class() and'
nl|'\n'
comment|'# create_fake_libvirt_mock() mocks importutils.import_class().'
nl|'\n'
dedent|''
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'prepare_instance_filter'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'instance_filter_exists'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'greenthread'
op|','
nl|'\n'
string|"'sleep'"
op|','
nl|'\n'
name|'fake_sleep'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NovaException'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
op|'('
string|"'The firewall filter for %s does not exist'"
op|'%'
nl|'\n'
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'c1'
op|'='
op|'('
number|'0'
op|'<='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'e'
op|')'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'29'
op|','
name|'fake_timer'
op|'.'
name|'counter'
op|','
string|'"Didn\'t wait the expected "'
nl|'\n'
string|'"amount of time"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_create_shared_storage_test_file'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'compareCPU'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_dest_all_pass_with_block_migration
name|'def'
name|'test_check_can_live_migrate_dest_all_pass_with_block_migration'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_cpu'
op|','
name|'mock_test_file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'disk_available_least'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'filename'
op|'='
string|'"file"'
newline|'\n'
nl|'\n'
comment|'# _check_cpu_match'
nl|'\n'
name|'mock_cpu'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# mounted_on_same_shared_storage'
nl|'\n'
name|'mock_test_file'
op|'.'
name|'return_value'
op|'='
name|'filename'
newline|'\n'
nl|'\n'
comment|'# No need for the src_compute_info'
nl|'\n'
name|'return_value'
op|'='
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'None'
op|','
name|'compute_info'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|"'image_type'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'disk_available_mb'"
op|':'
number|'409600'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'return_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_create_shared_storage_test_file'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'compareCPU'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_dest_all_pass_no_block_migration
name|'def'
name|'test_check_can_live_migrate_dest_all_pass_no_block_migration'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_cpu'
op|','
name|'mock_test_file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'disk_available_least'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'filename'
op|'='
string|'"file"'
newline|'\n'
nl|'\n'
comment|'# _check_cpu_match'
nl|'\n'
name|'mock_cpu'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
comment|'# mounted_on_same_shared_storage'
nl|'\n'
name|'mock_test_file'
op|'.'
name|'return_value'
op|'='
name|'filename'
newline|'\n'
comment|'# No need for the src_compute_info'
nl|'\n'
name|'return_value'
op|'='
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'None'
op|','
name|'compute_info'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"image_type"'
op|':'
string|"'default'"
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'return_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_create_shared_storage_test_file'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_compare_cpu'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_guest_cpu_none_model
name|'def'
name|'test_check_can_live_migrate_guest_cpu_none_model'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_cpu'
op|','
name|'mock_test_file'
op|')'
op|':'
newline|'\n'
comment|'# Tests that when instance.vcpu_model.model is None, the host cpu'
nl|'\n'
comment|'# model is used for live migration.'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
newline|'\n'
name|'instance_ref'
op|'.'
name|'vcpu_model'
op|'.'
name|'model'
op|'='
name|'None'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'compute_info'
op|','
name|'compute_info'
op|')'
newline|'\n'
name|'mock_cpu'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
string|"'asdf'"
op|')'
newline|'\n'
name|'expected_result'
op|'='
op|'{'
string|'"filename"'
op|':'
string|"'fake'"
op|','
nl|'\n'
string|'"image_type"'
op|':'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'images_type'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictEqual'
op|'('
name|'expected_result'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_create_shared_storage_test_file'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'compareCPU'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_dest_no_instance_cpu_info
name|'def'
name|'test_check_can_live_migrate_dest_no_instance_cpu_info'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_cpu'
op|','
name|'mock_test_file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
nl|'\n'
string|'"vendor"'
op|':'
string|'"AMD"'
op|','
nl|'\n'
string|'"arch"'
op|':'
name|'arch'
op|'.'
name|'I686'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"sse3"'
op|']'
op|','
nl|'\n'
string|'"model"'
op|':'
string|'"Opteron_G3"'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
number|'2'
op|','
string|'"threads"'
op|':'
number|'1'
op|','
string|'"sockets"'
op|':'
number|'4'
op|'}'
nl|'\n'
op|'}'
op|')'
op|'}'
newline|'\n'
name|'filename'
op|'='
string|'"file"'
newline|'\n'
nl|'\n'
comment|'# _check_cpu_match'
nl|'\n'
name|'mock_cpu'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
comment|'# mounted_on_same_shared_storage'
nl|'\n'
name|'mock_test_file'
op|'.'
name|'return_value'
op|'='
name|'filename'
newline|'\n'
nl|'\n'
name|'return_value'
op|'='
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'compute_info'
op|','
name|'compute_info'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"image_type"'
op|':'
string|"'default'"
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'return_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'compareCPU'"
op|')'
newline|'\n'
DECL|member|test_check_can_live_migrate_dest_incompatible_cpu_raises
name|'def'
name|'test_check_can_live_migrate_dest_incompatible_cpu_raises'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_cpu'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'.'
name|'vcpu_model'
op|'='
name|'test_vcpu_model'
op|'.'
name|'fake_vcpumodel'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
nl|'\n'
name|'mock_cpu'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|'('
name|'reason'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'compute_info'
op|','
name|'compute_info'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'compare_cpu'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|','
string|"'config'"
op|')'
newline|'\n'
DECL|member|test_compare_cpu_compatible_host_cpu
name|'def'
name|'test_compare_cpu_compatible_host_cpu'
op|'('
name|'self'
op|','
name|'mock_vconfig'
op|','
name|'mock_compare'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_compare'
op|'.'
name|'return_value'
op|'='
number|'5'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
name|'None'
op|','
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'_fake_cpu_info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'compare_cpu'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|','
string|"'config'"
op|')'
newline|'\n'
DECL|member|test_compare_cpu_handles_not_supported_error_gracefully
name|'def'
name|'test_compare_cpu_handles_not_supported_error_gracefully'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_vconfig'
op|','
nl|'\n'
name|'mock_compare'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'not_supported_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'this function is not supported by the connection driver:'"
nl|'\n'
string|"' virCompareCPU'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
name|'mock_compare'
op|'.'
name|'side_effect'
op|'='
name|'not_supported_exc'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
name|'None'
op|','
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'_fake_cpu_info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'compare_cpu'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_vcpu_model_to_cpu_config'"
op|')'
newline|'\n'
DECL|member|test_compare_cpu_compatible_guest_cpu
name|'def'
name|'test_compare_cpu_compatible_guest_cpu'
op|'('
name|'self'
op|','
name|'mock_vcpu_to_cpu'
op|','
nl|'\n'
name|'mock_compare'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_compare'
op|'.'
name|'return_value'
op|'='
number|'6'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'_fake_cpu_info'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compare_cpu_virt_type_xen
dedent|''
name|'def'
name|'test_compare_cpu_virt_type_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'compare_cpu'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|','
string|"'config'"
op|')'
newline|'\n'
DECL|member|test_compare_cpu_invalid_cpuinfo_raises
name|'def'
name|'test_compare_cpu_invalid_cpuinfo_raises'
op|'('
name|'self'
op|','
name|'mock_vconfig'
op|','
nl|'\n'
name|'mock_compare'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_compare'
op|'.'
name|'return_value'
op|'='
number|'0'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_compare_cpu'
op|','
name|'None'
op|','
nl|'\n'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'_fake_cpu_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'compare_cpu'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|','
string|"'config'"
op|')'
newline|'\n'
DECL|member|test_compare_cpu_incompatible_cpu_raises
name|'def'
name|'test_compare_cpu_incompatible_cpu_raises'
op|'('
name|'self'
op|','
name|'mock_vconfig'
op|','
nl|'\n'
name|'mock_compare'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_compare'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'cpu'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationPreCheckError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_compare_cpu'
op|','
name|'None'
op|','
nl|'\n'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'_fake_cpu_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_cleanup_works_correctly
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_cleanup_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'_cleanup_shared_storage_test_file'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_cleanup_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_destination_cleanup'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_can_live_migrate_source
dedent|''
name|'def'
name|'_mock_can_live_migrate_source'
op|'('
name|'self'
op|','
name|'block_migration'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_shared_block_storage'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_shared_instance_path'
op|'='
name|'False'
op|','
nl|'\n'
name|'disk_available_mb'
op|'='
number|'1024'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|"'filename'"
op|':'
string|"'file'"
op|','
nl|'\n'
string|"'image_type'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'block_migration'
op|','
nl|'\n'
string|"'disk_over_commit'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk_available_mb'"
op|':'
name|'disk_available_mb'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'_is_shared_block_storage'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
name|'instance'
op|','
name|'dest_check_data'
op|','
nl|'\n'
name|'block_device_info'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'is_shared_block_storage'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'_check_shared_storage_test_file'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|"'file'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'is_shared_instance_path'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_block_migration
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_block_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|'"_assert_dest_node_has_enough_disk"'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_assert_dest_node_has_enough_disk'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|'['
string|"'disk_available_mb'"
op|']'
op|','
nl|'\n'
name|'False'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'ret'
op|','
name|'dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'is_shared_block_storage'"
op|','
name|'ret'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'is_shared_instance_path'"
op|','
name|'ret'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|'['
string|"'is_shared_instance_path'"
op|']'
op|','
nl|'\n'
name|'ret'
op|'['
string|"'is_shared_storage'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_shared_block_storage
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_shared_block_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'is_shared_block_storage'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_shared_instance_path
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_shared_instance_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'is_shared_instance_path'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_non_shared_fails
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_non_shared_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_shared_block_migration_fails
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_shared_block_migration_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|','
nl|'\n'
name|'is_shared_block_storage'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidLocalStorage'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_shared_path_block_migration_fails
dedent|''
name|'def'
name|'test_check_can_live_migrate_shared_path_block_migration_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|','
nl|'\n'
name|'is_shared_instance_path'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidLocalStorage'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_non_shared_non_block_migration_fails
dedent|''
name|'def'
name|'test_check_can_live_migrate_non_shared_non_block_migration_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_with_dest_not_enough_disk
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_with_dest_not_enough_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|','
name|'dest_check_data'
op|','
name|'drvr'
op|'='
name|'self'
op|'.'
name|'_mock_can_live_migrate_source'
op|'('
nl|'\n'
name|'block_migration'
op|'='
name|'True'
op|','
nl|'\n'
name|'disk_available_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|'\'[{"virt_disk_size":2}]\''
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_is_shared_block_storage_test_create_mocks
dedent|''
name|'def'
name|'_is_shared_block_storage_test_create_mocks'
op|'('
name|'self'
op|','
name|'disks'
op|')'
op|':'
newline|'\n'
comment|'# Test data'
nl|'\n'
indent|'        '
name|'instance_xml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>{}</devices></domain>"'
op|')'
newline|'\n'
name|'disks_xml'
op|'='
string|"''"
newline|'\n'
name|'for'
name|'dsk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'dsk'
op|'['
string|"'type'"
op|']'
name|'is'
name|'not'
string|"'network'"
op|':'
newline|'\n'
indent|'                '
name|'disks_xml'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
op|'['
name|'disks_xml'
op|','
nl|'\n'
string|'"<disk type=\'{type}\'>"'
nl|'\n'
string|'"<driver name=\'qemu\' type=\'{driver}\'/>"'
nl|'\n'
string|'"<source {source}=\'{source_path}\'/>"'
nl|'\n'
string|'"<target dev=\'{target_dev}\' bus=\'virtio\'/>"'
nl|'\n'
string|'"</disk>"'
op|'.'
name|'format'
op|'('
op|'**'
name|'dsk'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'disks_xml'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
op|'['
name|'disks_xml'
op|','
nl|'\n'
string|'"<disk type=\'{type}\'>"'
nl|'\n'
string|'"<driver name=\'qemu\' type=\'{driver}\'/>"'
nl|'\n'
string|'"<source protocol=\'{source_proto}\'"'
nl|'\n'
string|'"name=\'{source_image}\' >"'
nl|'\n'
string|'"<host name=\'hostname\' port=\'7000\'/>"'
nl|'\n'
string|'"<config file=\'/path/to/file\'/>"'
nl|'\n'
string|'"</source>"'
nl|'\n'
string|'"<target dev=\'{target_dev}\'"'
nl|'\n'
string|'"bus=\'ide\'/>"'
op|'.'
name|'format'
op|'('
op|'**'
name|'dsk'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
dedent|''
dedent|''
name|'mock_virDomain'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'XMLDesc'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
op|'('
name|'instance_xml'
op|'.'
name|'format'
op|'('
name|'disks_xml'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lookup'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_lookup_side_effect
name|'def'
name|'mock_lookup_side_effect'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_virDomain'
newline|'\n'
dedent|''
name|'mock_lookup'
op|'.'
name|'side_effect'
op|'='
name|'mock_lookup_side_effect'
newline|'\n'
nl|'\n'
name|'mock_getsize'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_getsize'
op|'.'
name|'return_value'
op|'='
string|'"10737418240"'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'mock_getsize'
op|','
name|'mock_lookup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_rbd
dedent|''
name|'def'
name|'test_is_shared_block_storage_rbd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'rbd'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'image_type'"
op|':'
string|"'rbd'"
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_lvm
dedent|''
name|'def'
name|'test_is_shared_block_storage_lvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'lvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
nl|'\n'
name|'instance'
op|','
op|'{'
string|"'image_type'"
op|':'
string|"'lvm'"
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_qcow2
dedent|''
name|'def'
name|'test_is_shared_block_storage_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'qcow2'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
nl|'\n'
name|'instance'
op|','
op|'{'
string|"'image_type'"
op|':'
string|"'qcow2'"
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_rbd_only_source
dedent|''
name|'def'
name|'test_is_shared_block_storage_rbd_only_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'rbd'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
nl|'\n'
name|'instance'
op|','
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_rbd_only_dest
dedent|''
name|'def'
name|'test_is_shared_block_storage_rbd_only_dest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
nl|'\n'
name|'instance'
op|','
op|'{'
string|"'image_type'"
op|':'
string|"'rbd'"
op|','
nl|'\n'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_volume_backed
dedent|''
name|'def'
name|'test_is_shared_block_storage_volume_backed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disks'
op|'='
op|'['
op|'{'
string|"'type'"
op|':'
string|"'block'"
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'raw'"
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'source_path'"
op|':'
string|"'/dev/disk'"
op|','
nl|'\n'
string|"'target_dev'"
op|':'
string|"'vda'"
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'info'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vda'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
op|'('
name|'mock_getsize'
op|','
name|'mock_lookup'
op|')'
op|'='
name|'self'
op|'.'
name|'_is_shared_block_storage_test_create_mocks'
op|'('
name|'disks'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'mock_lookup'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'is_volume_backed'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'mock_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_volume_backed_with_disk
dedent|''
name|'def'
name|'test_is_shared_block_storage_volume_backed_with_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disks'
op|'='
op|'['
op|'{'
string|"'type'"
op|':'
string|"'block'"
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'raw'"
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'source_path'"
op|':'
string|"'/dev/disk'"
op|','
nl|'\n'
string|"'target_dev'"
op|':'
string|"'vda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'file'"
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'raw'"
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'file'"
op|','
nl|'\n'
string|"'source_path'"
op|':'
string|"'/instance/disk.local'"
op|','
nl|'\n'
string|"'target_dev'"
op|':'
string|"'vdb'"
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'info'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vda'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
op|'('
name|'mock_getsize'
op|','
name|'mock_lookup'
op|')'
op|'='
name|'self'
op|'.'
name|'_is_shared_block_storage_test_create_mocks'
op|'('
name|'disks'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'getsize'"
op|','
name|'mock_getsize'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'mock_lookup'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
nl|'\n'
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'is_volume_backed'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'mock_getsize'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'/instance/disk.local'"
op|')'
newline|'\n'
name|'mock_lookup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_shared_block_storage_nfs
dedent|''
name|'def'
name|'test_is_shared_block_storage_nfs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_image_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'='
name|'mock_image_backend'
newline|'\n'
name|'mock_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_image_backend'
op|'.'
name|'backend'
op|'.'
name|'return_value'
op|'='
name|'mock_backend'
newline|'\n'
name|'mock_backend'
op|'.'
name|'is_file_in_instance_path'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'_is_shared_block_storage'
op|'('
string|"'instance'"
op|','
nl|'\n'
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'mock_get_instance_disk_info'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_update_graphics_xml
dedent|''
name|'def'
name|'test_live_migration_update_graphics_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
name|'xml_tmpl'
op|'='
op|'('
string|'"<domain type=\'kvm\'>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<graphics type=\'vnc\' listen=\'{vnc}\'>"'
nl|'\n'
string|'"<listen address=\'{vnc}\'/>"'
nl|'\n'
string|'"</graphics>"'
nl|'\n'
string|'"<graphics type=\'spice\' listen=\'{spice}\'>"'
nl|'\n'
string|'"<listen address=\'{spice}\'/>"'
nl|'\n'
string|'"</graphics>"'
nl|'\n'
string|'"</devices>"'
nl|'\n'
string|'"</domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'initial_xml'
op|'='
name|'xml_tmpl'
op|'.'
name|'format'
op|'('
name|'vnc'
op|'='
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'spice'
op|'='
string|"'5.6.7.8'"
op|')'
newline|'\n'
nl|'\n'
name|'target_xml'
op|'='
name|'xml_tmpl'
op|'.'
name|'format'
op|'('
name|'vnc'
op|'='
string|"'10.0.0.1'"
op|','
nl|'\n'
name|'spice'
op|'='
string|"'10.0.0.2'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'target_xml'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI2"'
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_MIGRATABLE'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'initial_xml'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI2'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'target_xml'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'graphics_listen_addrs'"
op|':'
nl|'\n'
op|'{'
string|"'vnc'"
op|':'
string|"'10.0.0.1'"
op|','
string|"'spice'"
op|':'
string|"'10.0.0.2'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_update_volume_xml
dedent|''
name|'def'
name|'test_live_migration_update_volume_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'cde.67890.opst-lun-Z'"
op|')'
newline|'\n'
comment|'# start test'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'volume'"
op|':'
op|'{'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|':'
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"u'driver_volume_type'"
op|':'
string|"u'iscsi'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"u'data'"
op|':'
op|'{'
string|"u'access_mode'"
op|':'
string|"u'rw'"
op|','
string|"u'target_discovered'"
op|':'
name|'False'
op|','
nl|'\n'
string|"u'target_iqn'"
op|':'
string|"u'ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|','
nl|'\n'
string|"u'volume_id'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'disk_info'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"u'virtio'"
op|','
string|"'type'"
op|':'
string|"u'disk'"
op|','
string|"'dev'"
op|':'
string|"u'vdb'"
op|'}'
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
string|"'graphics_listen_addrs'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'pre_live_migrate_data'
op|'='
op|'('
op|'('
name|'migrate_data'
name|'or'
op|'{'
op|'}'
op|')'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'pre_live_migration_result'"
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'pre_live_migrate_data'
op|'.'
name|'get'
op|'('
string|"'volume'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'test_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'get_info'"
op|')'
name|'as'
name|'mget_info'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
name|'as'
name|'mget_domain'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|','
string|"'migrateToURI2'"
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_update_xml'"
op|')'
name|'as'
name|'mupdate'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'mget_info'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'mget_domain'
op|'.'
name|'return_value'
op|'='
name|'test_mock'
newline|'\n'
name|'test_mock'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'target_xml'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|','
name|'test_mock'
op|')'
op|')'
newline|'\n'
name|'mupdate'
op|'.'
name|'assert_called_once_with'
op|'('
name|'target_xml'
op|','
name|'volume'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_volume_xml
dedent|''
dedent|''
name|'def'
name|'test_update_volume_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'initial_xml'
op|'='
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'abc.12345.opst-lun-X'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'cde.67890.opst-lun-Z'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'target_xml'
op|')'
op|')'
newline|'\n'
name|'serial'
op|'='
string|'"58a84f6d-3f0c-4e19-a0af-eb657b790657"'
newline|'\n'
name|'volume_xml'
op|'='
op|'{'
string|"'volume'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'='
op|'{'
string|"'connection_info'"
op|':'
op|'{'
op|'}'
op|','
string|"'disk_info'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
op|'{'
string|"u'driver_volume_type'"
op|':'
string|"u'iscsi'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"u'data'"
op|':'
op|'{'
string|"u'access_mode'"
op|':'
string|"u'rw'"
op|','
string|"u'target_discovered'"
op|':'
name|'False'
op|','
nl|'\n'
string|"u'target_iqn'"
op|':'
string|"u'ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|','
nl|'\n'
string|"u'volume_id'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'disk_info'"
op|']'
op|'='
op|'{'
string|"'bus'"
op|':'
string|"u'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"u'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"u'vdb'"
op|'}'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'connection_info'"
op|']'
newline|'\n'
name|'disk_info'
op|'='
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'disk_info'"
op|']'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'source_device'
op|'='
name|'disk_info'
op|'['
string|"'type'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'driver_name'
op|'='
string|'"qemu"'
newline|'\n'
name|'conf'
op|'.'
name|'driver_format'
op|'='
string|'"raw"'
newline|'\n'
name|'conf'
op|'.'
name|'driver_cache'
op|'='
string|'"none"'
newline|'\n'
name|'conf'
op|'.'
name|'target_dev'
op|'='
name|'disk_info'
op|'['
string|"'dev'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'target_bus'
op|'='
name|'disk_info'
op|'['
string|"'bus'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'serial'
op|'='
name|'connection_info'
op|'.'
name|'get'
op|'('
string|"'serial'"
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'source_type'
op|'='
string|'"block"'
newline|'\n'
name|'conf'
op|'.'
name|'source_path'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'get'
op|'('
string|"'device_path'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'parser'
op|'='
name|'etree'
op|'.'
name|'XMLParser'
op|'('
name|'remove_blank_text'
op|'='
name|'True'
op|')'
newline|'\n'
name|'xml_doc'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'initial_xml'
op|','
name|'parser'
op|')'
newline|'\n'
name|'config'
op|'='
name|'drvr'
op|'.'
name|'_update_volume_xml'
op|'('
name|'xml_doc'
op|','
nl|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
name|'xml_doc'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'target_xml'
op|','
name|'parser'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'xml_doc'
op|')'
op|','
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'config'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_volume_xml_no_serial
dedent|''
dedent|''
name|'def'
name|'test_update_volume_xml_no_serial'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'xml_tmpl'
op|'='
string|'"""\n        <domain type=\'kvm\'>\n          <devices>\n            <disk type=\'block\' device=\'disk\'>\n              <driver name=\'qemu\' type=\'raw\' cache=\'none\'/>\n              <source dev=\'{device_path}\'/>\n              <target bus=\'virtio\' dev=\'vdb\'/>\n              <serial></serial>\n              <address type=\'pci\' domain=\'0x0\' bus=\'0x0\' slot=\'0x04\' \\\n              function=\'0x0\'/>\n            </disk>\n          </devices>\n        </domain>\n        """'
newline|'\n'
nl|'\n'
name|'initial_xml'
op|'='
name|'xml_tmpl'
op|'.'
name|'format'
op|'('
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'abc.12345.opst-lun-X'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'xml_tmpl'
op|'.'
name|'format'
op|'('
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'abc.12345.opst-lun-X'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'target_xml'
op|')'
op|')'
newline|'\n'
name|'serial'
op|'='
string|'"58a84f6d-3f0c-4e19-a0af-eb657b790657"'
newline|'\n'
name|'volume_xml'
op|'='
op|'{'
string|"'volume'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'='
op|'{'
string|"'connection_info'"
op|':'
op|'{'
op|'}'
op|','
string|"'disk_info'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
op|'{'
string|"u'driver_volume_type'"
op|':'
string|"u'iscsi'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"u'data'"
op|':'
op|'{'
string|"u'access_mode'"
op|':'
string|"u'rw'"
op|','
string|"u'target_discovered'"
op|':'
name|'False'
op|','
nl|'\n'
string|"u'target_iqn'"
op|':'
string|"u'ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|','
nl|'\n'
string|"u'volume_id'"
op|':'
string|"u'58a84f6d-3f0c-4e19-a0af-eb657b790657'"
op|','
nl|'\n'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'disk_info'"
op|']'
op|'='
op|'{'
string|"'bus'"
op|':'
string|"u'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"u'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"u'vdb'"
op|'}'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'connection_info'"
op|']'
newline|'\n'
name|'disk_info'
op|'='
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'['
string|"'disk_info'"
op|']'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'source_device'
op|'='
name|'disk_info'
op|'['
string|"'type'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'driver_name'
op|'='
string|'"qemu"'
newline|'\n'
name|'conf'
op|'.'
name|'driver_format'
op|'='
string|'"raw"'
newline|'\n'
name|'conf'
op|'.'
name|'driver_cache'
op|'='
string|'"none"'
newline|'\n'
name|'conf'
op|'.'
name|'target_dev'
op|'='
name|'disk_info'
op|'['
string|"'dev'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'target_bus'
op|'='
name|'disk_info'
op|'['
string|"'bus'"
op|']'
newline|'\n'
name|'conf'
op|'.'
name|'serial'
op|'='
name|'connection_info'
op|'.'
name|'get'
op|'('
string|"'serial'"
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'source_type'
op|'='
string|'"block"'
newline|'\n'
name|'conf'
op|'.'
name|'source_path'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'get'
op|'('
string|"'device_path'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'xml_doc'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'initial_xml'
op|')'
newline|'\n'
name|'config'
op|'='
name|'drvr'
op|'.'
name|'_update_volume_xml'
op|'('
name|'xml_doc'
op|','
nl|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_xml'
op|','
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'config'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_volume_xml_no_connection_info
dedent|''
dedent|''
name|'def'
name|'test_update_volume_xml_no_connection_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'initial_xml'
op|'='
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'abc.12345.opst-lun-X'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'self'
op|'.'
name|'device_xml_tmpl'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'device_path'
op|'='
string|"'/dev/disk/by-path/'"
nl|'\n'
string|"'ip-1.2.3.4:3260-iqn.'"
nl|'\n'
string|"'abc.12345.opst-lun-X'"
op|')'
newline|'\n'
name|'target_xml'
op|'='
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'target_xml'
op|')'
op|')'
newline|'\n'
name|'serial'
op|'='
string|'"58a84f6d-3f0c-4e19-a0af-eb657b790657"'
newline|'\n'
name|'volume_xml'
op|'='
op|'{'
string|"'volume'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|'['
name|'serial'
op|']'
op|'='
op|'{'
string|"'info1'"
op|':'
op|'{'
op|'}'
op|','
string|"'info2'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'xml_doc'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'initial_xml'
op|')'
newline|'\n'
name|'config'
op|'='
name|'drvr'
op|'.'
name|'_update_volume_xml'
op|'('
name|'xml_doc'
op|','
nl|'\n'
name|'volume_xml'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_xml'
op|','
name|'etree'
op|'.'
name|'tostring'
op|'('
name|'config'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|','
string|"'VIR_DOMAIN_XML_MIGRATABLE'"
op|','
name|'None'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_live_migration_uses_migrateToURI_without_migratable_flag
name|'def'
name|'test_live_migration_uses_migrateToURI_without_migratable_flag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI"'
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'graphics_listen_addrs'"
op|':'
nl|'\n'
op|'{'
string|"'vnc'"
op|':'
string|"'0.0.0.0'"
op|','
string|"'spice'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_uses_migrateToURI_without_dest_listen_addrs
dedent|''
name|'def'
name|'test_live_migration_uses_migrateToURI_without_dest_listen_addrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI"'
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"ERR"'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|','
string|"'VIR_DOMAIN_XML_MIGRATABLE'"
op|','
name|'None'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_live_migration_fails_without_migratable_flag_or_0_addr
name|'def'
name|'test_live_migration_fails_without_migratable_flag_or_0_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'vncserver_listen'
op|'='
string|"'1.2.3.4'"
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI"'
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'graphics_listen_addrs'"
op|':'
nl|'\n'
op|'{'
string|"'vnc'"
op|':'
string|"'1.2.3.4'"
op|','
string|"'spice'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_raises_exception
dedent|''
name|'def'
name|'test_live_migration_raises_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Confirms recover method is called when exceptions are raised.'
nl|'\n'
comment|'# Preparing data'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_dict'
op|'.'
name|'update'
op|'('
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI2"'
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'fakelibvirt'
op|','
string|"'VIR_DOMAIN_XML_MIGRATABLE'"
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'vdmock'
op|'.'
name|'migrateToURI'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_MIGRATABLE'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'FakeVirtDomain'
op|'('
op|')'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI2'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
dedent|''
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'graphics_listen_addrs'"
op|':'
nl|'\n'
op|'{'
string|"'vnc'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'spice'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance_ref'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'instance_ref'
op|'.'
name|'power_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_raises_unsupported_config_exception
dedent|''
name|'def'
name|'test_live_migration_raises_unsupported_config_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that when migrateToURI2 fails with VIR_ERR_CONFIG_UNSUPPORTED,'
nl|'\n'
comment|'# migrateToURI is used instead.'
nl|'\n'
nl|'\n'
comment|'# Preparing data'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|"'migrateToURI2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|"'migrateToURI'"
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_MIGRATABLE'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'FakeVirtDomain'
op|'('
op|')'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
name|'unsupported_config_error'
op|'='
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'ERR'"
op|')'
newline|'\n'
name|'unsupported_config_error'
op|'.'
name|'err'
op|'='
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_CONFIG_UNSUPPORTED'
op|','
op|')'
newline|'\n'
comment|'# This is the first error we hit but since the error code is'
nl|'\n'
comment|"# VIR_ERR_CONFIG_UNSUPPORTED we'll try migrateToURI."
nl|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI2'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
name|'None'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'unsupported_config_error'
op|')'
newline|'\n'
comment|'# This is the second and final error that will actually kill the run,'
nl|'\n'
comment|"# we use TestingException to make sure it's not the same libvirtError"
nl|'\n'
comment|'# above.'
nl|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'graphics_listen_addrs'
op|'='
op|'{'
string|"'vnc'"
op|':'
string|"'0.0.0.0'"
op|','
string|"'spice'"
op|':'
string|"'127.0.0.1'"
op|'}'
newline|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'pre_live_migration_result'"
op|':'
nl|'\n'
op|'{'
string|"'graphics_listen_addrs'"
op|':'
name|'graphics_listen_addrs'
op|'}'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
nl|'\n'
name|'drvr'
op|','
string|"'_check_graphics_addresses_can_live_migrate'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_check_graphics_addresses_can_live_migrate'
op|'('
name|'graphics_listen_addrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# start test'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
nl|'\n'
name|'False'
op|','
name|'migrate_data'
op|','
name|'vdmock'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path_at_destination'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.destroy'"
op|')'
newline|'\n'
DECL|member|test_rollback_live_migration_at_dest_not_shared
name|'def'
name|'test_rollback_live_migration_at_dest_not_shared'
op|'('
name|'self'
op|','
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_get_instance_path'
op|','
nl|'\n'
name|'mock_exist'
op|','
nl|'\n'
name|'mock_shutil'
nl|'\n'
op|')'
op|':'
newline|'\n'
comment|'# destroy method may raise InstanceTerminationFailure or'
nl|'\n'
comment|'# InstancePowerOffFailure, here use their base class Invalid.'
nl|'\n'
indent|'        '
name|'mock_destroy'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'reason'
op|'='
string|"'just test'"
op|')'
newline|'\n'
name|'fake_instance_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
string|"'/fake_instance_uuid'"
op|')'
newline|'\n'
name|'mock_get_instance_path'
op|'.'
name|'return_value'
op|'='
name|'fake_instance_path'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'rollback_live_migration_at_destination'
op|','
nl|'\n'
string|'"context"'
op|','
string|'"instance"'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'True'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'mock_exist'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_instance_path'
op|')'
newline|'\n'
name|'mock_shutil'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_instance_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path_at_destination'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.destroy'"
op|')'
newline|'\n'
DECL|member|test_rollback_live_migration_at_dest_shared
name|'def'
name|'test_rollback_live_migration_at_dest_shared'
op|'('
name|'self'
op|','
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_get_instance_path'
op|','
nl|'\n'
name|'mock_exist'
op|','
nl|'\n'
name|'mock_shutil'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'rollback_live_migration_at_destination'
op|'('
string|'"context"'
op|','
string|'"instance"'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'None'
op|','
name|'True'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"context"'
op|','
string|'"instance"'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'None'
op|','
name|'True'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_get_instance_path'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_exist'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_shutil'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|'"sleep"'
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'lambda'
name|'x'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'DomainJobInfo'
op|','
string|'"for_domain"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|'"save"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"_mark_running"'
op|')'
newline|'\n'
DECL|member|_test_live_migration_monitoring
name|'def'
name|'_test_live_migration_monitoring'
op|'('
name|'self'
op|','
nl|'\n'
name|'job_info_records'
op|','
nl|'\n'
name|'expect_success'
op|','
nl|'\n'
name|'mock_running'
op|','
nl|'\n'
name|'mock_save'
op|','
nl|'\n'
name|'mock_job_info'
op|','
nl|'\n'
name|'mock_sleep'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'Domain'
op|'('
name|'drvr'
op|'.'
name|'_get_connection'
op|'('
op|')'
op|','
string|'"<domain/>"'
op|','
name|'True'
op|')'
newline|'\n'
name|'finish_event'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_job_info
name|'def'
name|'fake_job_info'
op|'('
name|'hostself'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'job_info_records'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
name|'rec'
op|'='
name|'job_info_records'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'type'
op|'('
name|'rec'
op|')'
op|'=='
name|'str'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'rec'
op|'=='
string|'"thread-finish"'
op|':'
newline|'\n'
indent|'                        '
name|'finish_event'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'rec'
op|'=='
string|'"domain-stop"'
op|':'
newline|'\n'
indent|'                        '
name|'dom'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'rec'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'rec'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_job_info'
op|'.'
name|'side_effect'
op|'='
name|'fake_job_info'
newline|'\n'
nl|'\n'
name|'dest'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'migrate_dest'
newline|'\n'
name|'migrate_data'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'migrate_data'
newline|'\n'
nl|'\n'
name|'fake_post_method'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'fake_recover_method'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_live_migration_monitor'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest'
op|','
nl|'\n'
name|'fake_post_method'
op|','
nl|'\n'
name|'fake_recover_method'
op|','
nl|'\n'
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|','
nl|'\n'
name|'dom'
op|','
nl|'\n'
name|'finish_event'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expect_success'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'fake_recover_method'
op|'.'
name|'called'
op|','
nl|'\n'
string|"'Recover method called when success expected'"
op|')'
newline|'\n'
name|'fake_post_method'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest'
op|','
name|'False'
op|','
name|'migrate_data'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'fake_post_method'
op|'.'
name|'called'
op|','
nl|'\n'
string|"'Post method called when success not expected'"
op|')'
newline|'\n'
name|'fake_recover_method'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest'
op|','
name|'False'
op|','
name|'migrate_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_monitor_success
dedent|''
dedent|''
name|'def'
name|'test_live_migration_monitor_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# A normal sequence where see all the normal job states'
nl|'\n'
indent|'        '
name|'domain_info_records'
op|'='
op|'['
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
string|'"thread-finish"'
op|','
nl|'\n'
string|'"domain-stop"'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_COMPLETED'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_live_migration_monitoring'
op|'('
name|'domain_info_records'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_monitor_success_race
dedent|''
name|'def'
name|'test_live_migration_monitor_success_race'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# A normalish sequence but we're too slow to see the"
nl|'\n'
comment|'# completed job state'
nl|'\n'
indent|'        '
name|'domain_info_records'
op|'='
op|'['
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
string|'"thread-finish"'
op|','
nl|'\n'
string|'"domain-stop"'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_live_migration_monitoring'
op|'('
name|'domain_info_records'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_monitor_failed
dedent|''
name|'def'
name|'test_live_migration_monitor_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# A failed sequence where we see all the expected events'
nl|'\n'
indent|'        '
name|'domain_info_records'
op|'='
op|'['
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
string|'"thread-finish"'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_FAILED'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_live_migration_monitoring'
op|'('
name|'domain_info_records'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_monitor_failed_race
dedent|''
name|'def'
name|'test_live_migration_monitor_failed_race'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# A failed sequence where we are too slow to see the'
nl|'\n'
comment|'# failed event'
nl|'\n'
indent|'        '
name|'domain_info_records'
op|'='
op|'['
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
string|'"thread-finish"'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_live_migration_monitoring'
op|'('
name|'domain_info_records'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_monitor_cancelled
dedent|''
name|'def'
name|'test_live_migration_monitor_cancelled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# A cancelled sequence where we see all the events'
nl|'\n'
indent|'        '
name|'domain_info_records'
op|'='
op|'['
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_NONE'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_UNBOUNDED'
op|')'
op|','
nl|'\n'
string|'"thread-finish"'
op|','
nl|'\n'
string|'"domain-stop"'
op|','
nl|'\n'
name|'host'
op|'.'
name|'DomainJobInfo'
op|'('
nl|'\n'
name|'type'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_JOB_CANCELLED'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_live_migration_monitoring'
op|'('
name|'domain_info_records'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|'"spawn"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|'"_live_migration_monitor"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|'"_mark_running"'
op|')'
newline|'\n'
DECL|member|test_live_migration_main
name|'def'
name|'test_live_migration_main'
op|'('
name|'self'
op|','
name|'mock_running'
op|','
name|'mock_dom'
op|','
nl|'\n'
name|'mock_monitor'
op|','
name|'mock_thread'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'fakelibvirt'
op|'.'
name|'Domain'
op|'('
name|'drvr'
op|'.'
name|'_get_connection'
op|'('
op|')'
op|','
string|'"<domain/>"'
op|','
name|'True'
op|')'
newline|'\n'
name|'migrate_data'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'.'
name|'return_value'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
DECL|function|fake_post
name|'def'
name|'fake_post'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_recover
dedent|''
name|'def'
name|'fake_recover'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'.'
name|'_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"fakehost"'
op|','
nl|'\n'
name|'fake_post'
op|','
name|'fake_recover'
op|','
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AnyEventletEvent
name|'class'
name|'AnyEventletEvent'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__eq__
indent|'            '
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'type'
op|'('
name|'other'
op|')'
op|'=='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_thread'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'drvr'
op|'.'
name|'_live_migration_operation'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"fakehost"'
op|','
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|','
name|'dom'
op|')'
newline|'\n'
name|'mock_monitor'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"fakehost"'
op|','
nl|'\n'
name|'fake_post'
op|','
name|'fake_recover'
op|','
name|'False'
op|','
nl|'\n'
name|'migrate_data'
op|','
name|'dom'
op|','
name|'AnyEventletEvent'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_images_and_backing
dedent|''
name|'def'
name|'_do_test_create_images_and_backing'
op|'('
name|'self'
op|','
name|'disk_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'_fetch_instance_kernel_ramdisk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_image'"
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'foo'"
op|','
string|"'type'"
op|':'
name|'disk_type'
op|','
nl|'\n'
string|"'disk_size'"
op|':'
number|'1'
op|'*'
number|'1024'
op|'**'
number|'3'
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
number|'20'
op|'*'
number|'1024'
op|'**'
number|'3'
op|','
nl|'\n'
string|"'backing_file'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
nl|'\n'
name|'disk_info'
op|'['
string|"'type'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'disk_info'
op|'['
string|"'virt_disk_size'"
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_fetch_instance_kernel_ramdisk'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
op|'['
name|'disk_info'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_qcow2
dedent|''
name|'def'
name|'test_create_images_and_backing_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_create_images_and_backing'
op|'('
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_raw
dedent|''
name|'def'
name|'test_create_images_and_backing_raw'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_create_images_and_backing'
op|'('
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_images_not_exist_no_fallback
dedent|''
name|'def'
name|'test_create_images_and_backing_images_not_exist_no_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'disk_info'
op|'='
op|'['
nl|'\n'
op|'{'
string|"u'backing_file'"
op|':'
string|"u'fake_image_backing_file'"
op|','
nl|'\n'
string|"u'disk_size'"
op|':'
number|'10747904'
op|','
nl|'\n'
string|"u'path'"
op|':'
string|"u'disk_path'"
op|','
nl|'\n'
string|"u'type'"
op|':'
string|"u'qcow2'"
op|','
nl|'\n'
string|"u'virt_disk_size'"
op|':'
number|'25165824'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'.'
name|'update'
op|'('
op|'{'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project'"
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'fetch_image'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
nl|'\n'
name|'image_id'
op|'='
string|'"fake_id"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_images_not_exist_fallback
dedent|''
dedent|''
name|'def'
name|'test_create_images_and_backing_images_not_exist_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'disk_info'
op|'='
op|'['
nl|'\n'
op|'{'
string|"u'backing_file'"
op|':'
string|"u'fake_image_backing_file'"
op|','
nl|'\n'
string|"u'disk_size'"
op|':'
number|'10747904'
op|','
nl|'\n'
string|"u'path'"
op|':'
string|"u'disk_path'"
op|','
nl|'\n'
string|"u'type'"
op|':'
string|"u'qcow2'"
op|','
nl|'\n'
string|"u'virt_disk_size'"
op|':'
number|'25165824'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'base_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'image_cache_subdirectory_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'.'
name|'update'
op|'('
op|'{'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'fake_kernel_id'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'fake_ramdisk_id'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project'"
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'copy_image'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'fetch_image'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
nl|'\n'
name|'image_id'
op|'='
string|'"fake_id"'
op|')'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'copy_image_mock'
op|','
name|'fetch_image_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
string|'"fake_host"'
op|')'
newline|'\n'
name|'backfile_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
string|"'fake_image_backing_file'"
op|')'
newline|'\n'
name|'kernel_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'kernel'"
op|')'
newline|'\n'
name|'ramdisk_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'ramdisk'"
op|')'
newline|'\n'
name|'copy_image_mock'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'dest'
op|'='
name|'backfile_path'
op|','
name|'src'
op|'='
name|'backfile_path'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'receive'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'dest'
op|'='
name|'kernel_path'
op|','
name|'src'
op|'='
name|'kernel_path'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'receive'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'dest'
op|'='
name|'ramdisk_path'
op|','
name|'src'
op|'='
name|'ramdisk_path'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'receive'
op|'='
name|'True'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'fetch_image_mock'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'target'
op|'='
name|'backfile_path'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'image_ref'"
op|']'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'max_size'
op|'='
number|'25165824'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kernel_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'kernel_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'project_id'"
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ramdisk_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'['
string|"'project_id'"
op|']'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'fetch_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_images_and_backing_images_exist
name|'def'
name|'test_create_images_and_backing_images_exist'
op|'('
name|'self'
op|','
name|'mock_exists'
op|','
nl|'\n'
name|'mock_fetch_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'disk_info'
op|'='
op|'['
nl|'\n'
op|'{'
string|"u'backing_file'"
op|':'
string|"u'fake_image_backing_file'"
op|','
nl|'\n'
string|"u'disk_size'"
op|':'
number|'10747904'
op|','
nl|'\n'
string|"u'path'"
op|':'
string|"u'disk_path'"
op|','
nl|'\n'
string|"u'type'"
op|':'
string|"u'qcow2'"
op|','
nl|'\n'
string|"u'virt_disk_size'"
op|':'
number|'25165824'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'.'
name|'update'
op|'('
op|'{'
string|"'user_id'"
op|':'
string|"'fake-user'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'fake_kernel_id'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'fake_ramdisk_id'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake-project'"
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'/fake/instance/dir'"
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_fetch_image'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_ephemeral_gets_created
dedent|''
name|'def'
name|'test_create_images_and_backing_ephemeral_gets_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'disk_info'
op|'='
op|'['
nl|'\n'
op|'{'
string|"u'backing_file'"
op|':'
string|"u'fake_image_backing_file'"
op|','
nl|'\n'
string|"u'disk_size'"
op|':'
number|'10747904'
op|','
nl|'\n'
string|"u'path'"
op|':'
string|"u'disk_path'"
op|','
nl|'\n'
string|"u'type'"
op|':'
string|"u'qcow2'"
op|','
nl|'\n'
string|"u'virt_disk_size'"
op|':'
number|'25165824'
op|'}'
op|','
nl|'\n'
op|'{'
string|"u'backing_file'"
op|':'
string|"u'ephemeral_1_default'"
op|','
nl|'\n'
string|"u'disk_size'"
op|':'
number|'393216'
op|','
nl|'\n'
string|"u'over_committed_disk_size'"
op|':'
number|'1073348608'
op|','
nl|'\n'
string|"u'path'"
op|':'
string|"u'disk_eph_path'"
op|','
nl|'\n'
string|"u'type'"
op|':'
string|"u'qcow2'"
op|','
nl|'\n'
string|"u'virt_disk_size'"
op|':'
number|'1073741824'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'base_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'image_cache_subdirectory_name'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_fetch_instance_kernel_ramdisk'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'fetch_image'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_ephemeral'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'verify_base_size'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'fetch_kernel_ramdisk_mock'
op|','
name|'fetch_image_mock'
op|','
nl|'\n'
name|'create_ephemeral_mock'
op|','
name|'verify_base_size_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'create_ephemeral_mock'
op|'.'
name|'call_args_list'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'m_args'
op|','
name|'m_kwargs'
op|'='
name|'create_ephemeral_mock'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
string|"'ephemeral_1_default'"
op|')'
op|','
nl|'\n'
name|'m_kwargs'
op|'['
string|"'target'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'fetch_image_mock'
op|'.'
name|'call_args_list'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'m_args'
op|','
name|'m_kwargs'
op|'='
name|'fetch_image_mock'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
string|"'fake_image_backing_file'"
op|')'
op|','
nl|'\n'
name|'m_kwargs'
op|'['
string|"'target'"
op|']'
op|')'
newline|'\n'
name|'verify_base_size_mock'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
string|"'fake_image_backing_file'"
op|')'
op|','
nl|'\n'
number|'25165824'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'base_dir'
op|','
string|"'ephemeral_1_default'"
op|')'
op|','
nl|'\n'
number|'1073741824'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_disk_info_none
dedent|''
dedent|''
name|'def'
name|'test_create_images_and_backing_disk_info_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'_fetch_instance_kernel_ramdisk'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_fetch_instance_kernel_ramdisk'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_works_correctly_mocked
dedent|''
name|'def'
name|'test_pre_live_migration_works_correctly_mocked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Creating testdata'
nl|'\n'
indent|'        '
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"'serial'"
op|':'
string|"'12345'"
op|','
string|"u'data'"
op|':'
nl|'\n'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.abc.12345.opst-lun-X'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"'serial'"
op|':'
string|"'67890'"
op|','
string|"u'data'"
op|':'
nl|'\n'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeNetworkInfo
name|'class'
name|'FakeNetworkInfo'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|fixed_ips
indent|'            '
name|'def'
name|'fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|'"test_ip_addr"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'nw_info'
op|'='
name|'FakeNetworkInfo'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Creating mocks'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|'"block_device_info_get_mapping"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'vol'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|'"_connect_volume"'
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|"'bus'"
op|':'
string|'"scsi"'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|'"disk"'
nl|'\n'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'_connect_volume'
op|'('
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'plug_vifs'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance'
op|')'
op|','
name|'nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
nl|'\n'
name|'c'
op|','
name|'instance'
op|','
name|'vol'
op|','
name|'nw_info'
op|','
name|'None'
op|','
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
string|'"block_migration"'
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'target_ret'
op|'='
op|'{'
nl|'\n'
string|"'graphics_listen_addrs'"
op|':'
op|'{'
string|"'spice'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'vnc'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
nl|'\n'
string|"'volume'"
op|':'
op|'{'
nl|'\n'
string|"'12345'"
op|':'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"u'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.abc.12345.opst-lun-X'"
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'12345'"
op|'}'
op|','
nl|'\n'
string|"'disk_info'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'scsi'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'sda'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'67890'"
op|':'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"u'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'67890'"
op|'}'
op|','
nl|'\n'
string|"'disk_info'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'scsi'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'sdb'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'target_ret'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_block_with_config_drive_mocked
dedent|''
name|'def'
name|'test_pre_live_migration_block_with_config_drive_mocked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Creating testdata'
nl|'\n'
indent|'        '
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_true
name|'def'
name|'fake_true'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'configdrive'
op|','
string|"'required_by'"
op|','
name|'fake_true'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoLiveMigrationForConfigDriveInLibVirt'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'pre_live_migration'
op|','
name|'c'
op|','
name|'instance'
op|','
name|'vol'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_shared_block_storage'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.block_device_info_get_mapping'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.configdrive.required_by'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_pre_live_migration_block_with_config_drive_mocked_with_vfat
name|'def'
name|'test_pre_live_migration_block_with_config_drive_mocked_with_vfat'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_required_by'
op|','
name|'block_device_info_get_mapping'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'config_drive_format'
op|'='
string|"'vfat'"
op|')'
newline|'\n'
comment|'# Creating testdata'
nl|'\n'
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'res_data'
op|'='
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vol'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_shared_block_storage'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
nl|'\n'
op|']'
op|'}'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'graphics_listen_addrs'"
op|':'
op|'{'
string|"'spice'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'vnc'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
nl|'\n'
string|"'volume'"
op|':'
op|'{'
op|'}'
op|'}'
op|','
name|'res_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_vol_backed_works_correctly_mocked
dedent|''
name|'def'
name|'test_pre_live_migration_vol_backed_works_correctly_mocked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Creating testdata, using temp dir.'
nl|'\n'
indent|'        '
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"'serial'"
op|':'
string|"'12345'"
op|','
string|"u'data'"
op|':'
nl|'\n'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.abc.12345.opst-lun-X'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"'serial'"
op|':'
string|"'67890'"
op|','
string|"u'data'"
op|':'
nl|'\n'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeNetworkInfo
name|'class'
name|'FakeNetworkInfo'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|fixed_ips
indent|'                '
name|'def'
name|'fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'['
string|'"test_ip_addr"'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'inst_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'nw_info'
op|'='
name|'FakeNetworkInfo'
op|'('
op|')'
newline|'\n'
comment|'# Creating mocks'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|'"_connect_volume"'
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|':'
newline|'\n'
DECL|variable|disk_info
indent|'                '
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|"'bus'"
op|':'
string|'"scsi"'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|'"disk"'
nl|'\n'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'_connect_volume'
op|'('
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'plug_vifs'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'inst_ref'
op|')'
op|','
name|'nw_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_volume_backed'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_relative_path'"
op|':'
name|'inst_ref'
op|'['
string|"'name'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'ret'
op|'='
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
name|'c'
op|','
name|'inst_ref'
op|','
name|'vol'
op|','
name|'nw_info'
op|','
name|'None'
op|','
nl|'\n'
name|'migrate_data'
op|')'
newline|'\n'
name|'target_ret'
op|'='
op|'{'
nl|'\n'
string|"'graphics_listen_addrs'"
op|':'
op|'{'
string|"'spice'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'vnc'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
nl|'\n'
string|"'volume'"
op|':'
op|'{'
nl|'\n'
string|"'12345'"
op|':'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"u'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.abc.12345.opst-lun-X'"
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'12345'"
op|'}'
op|','
nl|'\n'
string|"'disk_info'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'scsi'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'sda'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'67890'"
op|':'
op|'{'
string|"'connection_info'"
op|':'
op|'{'
string|"u'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.cde.67890.opst-lun-Z'"
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'67890'"
op|'}'
op|','
nl|'\n'
string|"'disk_info'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'scsi'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'sdb'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'target_ret'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'%s/%s/'"
op|'%'
op|'('
name|'tmpdir'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_plug_vifs_retry_fails
dedent|''
dedent|''
name|'def'
name|'test_pre_live_migration_plug_vifs_retry_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'live_migration_retry_count'
op|'='
number|'3'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'eventlet'
op|'.'
name|'greenthread'
op|','
string|"'sleep'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
name|'disk_info'
op|'='
name|'disk_info_json'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_plug_vifs_retry_works
dedent|''
name|'def'
name|'test_pre_live_migration_plug_vifs_retry_works'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'live_migration_retry_count'
op|'='
number|'3'
op|')'
newline|'\n'
name|'called'
op|'='
op|'{'
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'called'
op|'['
string|"'count'"
op|']'
op|'<'
name|'CONF'
op|'.'
name|'live_migration_retry_count'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'eventlet'
op|'.'
name|'greenthread'
op|','
string|"'sleep'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
name|'disk_info'
op|'='
name|'disk_info_json'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_image_not_created_with_shared_storage
dedent|''
name|'def'
name|'test_pre_live_migration_image_not_created_with_shared_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrate_data_set'
op|'='
op|'['
op|'{'
string|"'is_shared_block_storage'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'is_shared_block_storage'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'is_shared_block_storage'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
comment|'# creating mocks'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
nl|'\n'
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
nl|'\n'
string|"'ensure_filtering_rules_for_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'create_image_mock'
op|','
nl|'\n'
name|'rules_mock'
op|','
nl|'\n'
name|'plug_mock'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'migrate_data'
name|'in'
name|'migrate_data_set'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'disk_info'
op|'='
name|'disk_info_json'
op|','
nl|'\n'
name|'migrate_data'
op|'='
name|'migrate_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'create_image_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'res'
op|','
name|'dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_with_not_shared_instance_path
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_pre_live_migration_with_not_shared_instance_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrate_data'
op|'='
op|'{'
string|"'is_shared_block_storage'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_shared_instance_path'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_instance_dir
name|'def'
name|'check_instance_dir'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'instance_dir'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_dir'
op|')'
newline|'\n'
comment|'# creating mocks'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
nl|'\n'
string|"'_create_images_and_backing'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'check_instance_dir'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
nl|'\n'
string|"'ensure_filtering_rules_for_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'create_image_mock'
op|','
nl|'\n'
name|'rules_mock'
op|','
nl|'\n'
name|'plug_mock'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'drvr'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'disk_info'
op|'='
name|'disk_info_json'
op|','
nl|'\n'
name|'migrate_data'
op|'='
name|'migrate_data'
op|')'
newline|'\n'
name|'create_image_mock'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
name|'instance'
op|'.'
name|'host'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'res'
op|','
name|'dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_block_migrate_fails
dedent|''
dedent|''
name|'def'
name|'test_pre_live_migration_block_migrate_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdms'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'connection_info'"
op|':'
op|'{'
nl|'\n'
string|"'serial'"
op|':'
string|"'12345'"
op|','
nl|'\n'
string|"u'data'"
op|':'
op|'{'
nl|'\n'
string|"'device_path'"
op|':'
nl|'\n'
string|"u'/dev/disk/by-path/ip-1.2.3.4:3260-iqn.abc.12345.t-lun-X'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'ensure_filtering_rules_for_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_connect_volume'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|','
string|"'block_device_info_get_mapping'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'bdms'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
name|'disk_info'
op|'='
name|'disk_info_json'
op|','
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_works_correctly
dedent|''
dedent|''
name|'def'
name|'test_get_instance_disk_info_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test data'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'.'
name|'name'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk'"
op|']'
op|'='
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
number|'20'
op|'*'
name|'units'
op|'.'
name|'Gi'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_backing_files'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
string|"'file'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"getsize"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'10737418240'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'3328599655'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
op|'('
string|'"image: /test/disk\\n"'
nl|'\n'
string|'"file format: raw\\n"'
nl|'\n'
string|'"virtual size: 20G (21474836480 bytes)\\n"'
nl|'\n'
string|'"disk size: 3.1G\\n"'
nl|'\n'
string|'"cluster_size: 2097152\\n"'
nl|'\n'
string|'"backing file: /test/dummy (actual path: /backing/file)\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|'"execute"'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
string|"'qemu-img'"
op|','
string|"'info'"
op|','
nl|'\n'
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'ret'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'drvr'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'disk_size'"
op|']'
op|','
number|'10737418240'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk.local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'virt_disk_size'"
op|']'
op|','
number|'21474836480'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'18146236825'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_live_migration
dedent|''
name|'def'
name|'test_post_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy1'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy2'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'inst_ref'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'cntx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Set up the mock expectations'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|','
string|"'block_device_info_get_mapping'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_disconnect_volume'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'block_device_info_get_mapping'
op|','
name|'_disconnect_volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'post_live_migration'
op|'('
name|'cntx'
op|','
name|'inst_ref'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'vol'
op|')'
op|']'
op|')'
newline|'\n'
name|'_disconnect_volume'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|')'
nl|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_excludes_volumes
dedent|''
dedent|''
name|'def'
name|'test_get_instance_disk_info_excludes_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test data'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/fake/path/to/volume1\'/>"'
nl|'\n'
string|'"<target dev=\'vdc\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/fake/path/to/volume2\'/>"'
nl|'\n'
string|'"<target dev=\'vdd\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'.'
name|'name'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk'"
op|']'
op|'='
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
number|'20'
op|'*'
name|'units'
op|'.'
name|'Gi'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_backing_files'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
string|"'file'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"getsize"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'10737418240'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'3328599655'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
op|'('
string|'"image: /test/disk\\n"'
nl|'\n'
string|'"file format: raw\\n"'
nl|'\n'
string|'"virtual size: 20G (21474836480 bytes)\\n"'
nl|'\n'
string|'"disk size: 3.1G\\n"'
nl|'\n'
string|'"cluster_size: 2097152\\n"'
nl|'\n'
string|'"backing file: /test/dummy (actual path: /backing/file)\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|'"execute"'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
string|"'qemu-img'"
op|','
string|"'info'"
op|','
nl|'\n'
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'ret'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdd'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'drvr'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'disk_size'"
op|']'
op|','
number|'10737418240'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk.local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'virt_disk_size'"
op|']'
op|','
number|'21474836480'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'18146236825'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_no_bdinfo_passed
dedent|''
name|'def'
name|'test_get_instance_disk_info_no_bdinfo_passed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(ndipanov): _get_disk_overcomitted_size_total calls this method'
nl|'\n'
comment|"# without access to Nova's block device information. We want to make"
nl|'\n'
comment|'# sure that we guess volumes mostly correctly in that case as well'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'block\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/fake/path/to/volume1\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'.'
name|'name'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk'"
op|']'
op|'='
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"getsize"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'10737418240'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'drvr'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'disk_size'"
op|']'
op|','
number|'10737418240'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_network_info
dedent|''
name|'def'
name|'test_spawn_with_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Preparing mocks'
nl|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_getLibVersion
dedent|''
name|'def'
name|'fake_getLibVersion'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'9011'
newline|'\n'
nl|'\n'
DECL|function|fake_getCapabilities
dedent|''
name|'def'
name|'fake_getCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""\n            <capabilities>\n                <host>\n                    <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                    <cpu>\n                      <arch>x86_64</arch>\n                      <model>Penryn</model>\n                      <vendor>Intel</vendor>\n                      <topology sockets=\'1\' cores=\'2\' threads=\'1\'/>\n                      <feature name=\'xtpr\'/>\n                    </cpu>\n                </host>\n            </capabilities>\n            """'
newline|'\n'
nl|'\n'
DECL|function|fake_baselineCPU
dedent|''
name|'def'
name|'fake_baselineCPU'
op|'('
name|'cpu'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""<cpu mode=\'custom\' match=\'exact\'>\n                        <model fallback=\'allow\'>Penryn</model>\n                        <vendor>Intel</vendor>\n                        <feature policy=\'require\' name=\'xtpr\'/>\n                      </cpu>\n                   """'
newline|'\n'
nl|'\n'
comment|'# _fake_network_info must be called before create_fake_libvirt_mock(),'
nl|'\n'
comment|'# as _fake_network_info calls importutils.import_class() and'
nl|'\n'
comment|'# create_fake_libvirt_mock() mocks importutils.import_class().'
nl|'\n'
dedent|''
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'getLibVersion'
op|'='
name|'fake_getLibVersion'
op|','
nl|'\n'
name|'getCapabilities'
op|'='
name|'fake_getCapabilities'
op|','
nl|'\n'
name|'getVersion'
op|'='
name|'lambda'
op|':'
number|'1005001'
op|','
nl|'\n'
name|'baselineCPU'
op|'='
name|'fake_baselineCPU'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
comment|'# we send an int to test sha1 call'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Mock out the get_info method of the LibvirtDriver so that the polling'
nl|'\n'
comment|'# in the spawn method of the LibvirtDriver returns immediately'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'get_info'
op|'('
name|'instance'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.libvirt'"
op|')'
name|'as'
name|'old_virt'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'old_virt'
op|'.'
name|'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'prepare_instance_filter'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
nl|'\n'
string|"'cache'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
string|"'herp'"
op|','
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'image_cache_subdirectory_name'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'image_cache_subdirectory_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_without_image_meta
dedent|''
dedent|''
name|'def'
name|'test_spawn_without_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_image_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_create_image
dedent|''
name|'def'
name|'fake_create_image'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'create_image_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_image'"
op|','
name|'fake_create_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'create_image_called'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'create_image_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_from_volume_calls_cache
dedent|''
name|'def'
name|'test_spawn_from_volume_calls_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cache_called_for_disk'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_cache
dedent|''
name|'def'
name|'fake_cache'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'image_id'"
op|')'
op|'=='
string|"'my_fake_image'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'cache_called_for_disk'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|','
name|'fake_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'root_device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'mount_device'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Volume-backed instance created without image'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
nl|'\n'
comment|'# Booted from volume but with placeholder image'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
nl|'\n'
comment|'# Booted from an image'
nl|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_lxc_from_volume
dedent|''
name|'def'
name|'test_start_lxc_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"lxc"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_setup_container
name|'def'
name|'check_setup_container'
op|'('
name|'image'
op|','
name|'container_dir'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|'.'
name|'path'
op|','
string|"'/dev/path/to/dev'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|'.'
name|'format'
op|','
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
op|')'
newline|'\n'
name|'return'
string|"'/dev/nbd1'"
newline|'\n'
nl|'\n'
dedent|''
name|'bdm'
op|'='
op|'{'
nl|'\n'
string|"'guest_format'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'afc1'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|','
nl|'\n'
string|"'device_path'"
op|':'
string|"'/dev/path/to/dev'"
op|','
nl|'\n'
string|"'target_discovered'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'encrypted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'qos_specs'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
string|"'iqn: volume-afc1'"
op|','
nl|'\n'
string|"'target_portal'"
op|':'
string|"'ip: 3260'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'afc1'"
op|','
nl|'\n'
string|"'target_lun'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'auth_password'"
op|':'
string|"'uj'"
op|','
nl|'\n'
string|"'auth_username'"
op|':'
string|"'47'"
op|','
nl|'\n'
string|"'auth_method'"
op|':'
string|"'CHAP'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'scsi'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_get
name|'def'
name|'_get'
op|'('
name|'key'
op|','
name|'opt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'bdm'
op|'.'
name|'get'
op|'('
name|'key'
op|','
name|'opt'
op|')'
newline|'\n'
nl|'\n'
DECL|function|getitem
dedent|''
name|'def'
name|'getitem'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'bdm'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
DECL|function|setitem
dedent|''
name|'def'
name|'setitem'
op|'('
name|'key'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bdm'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
name|'bdm_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'bdm_mock'
op|'.'
name|'__getitem__'
op|'.'
name|'side_effect'
op|'='
name|'getitem'
newline|'\n'
name|'bdm_mock'
op|'.'
name|'__setitem__'
op|'.'
name|'side_effect'
op|'='
name|'setitem'
newline|'\n'
name|'bdm_mock'
op|'.'
name|'get'
op|'='
name|'_get'
newline|'\n'
nl|'\n'
name|'disk_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'disk_mock'
op|'.'
name|'source_path'
op|'='
string|"'/dev/path/to/dev'"
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
name|'bdm_mock'
op|']'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sda'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Volume-backed instance created without image'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'/dev/sda'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'system_metadata'"
op|']'
op|'['
string|"'image_disk_format'"
op|']'
op|'='
string|"'qcow2'"
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'setup_basic_filtering'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'prepare_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'apply_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_connect_volume'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'disk_mock'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.setup_container'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'check_setup_container'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.teardown_container'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/nbd1'"
op|','
nl|'\n'
name|'inst_obj'
op|'.'
name|'system_metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'rootfs_device_name'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_pci_devices
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeLibvirtPciDevice
dedent|''
name|'class'
name|'FakeLibvirtPciDevice'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|dettach
indent|'            '
name|'def'
name|'dettach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_node_device_lookup_by_name
dedent|''
dedent|''
name|'def'
name|'fake_node_device_lookup_by_name'
op|'('
name|'address'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pattern'
op|'='
op|'('
string|'"pci_%(hex)s{4}_%(hex)s{2}_%(hex)s{2}_%(oct)s{1}"'
nl|'\n'
op|'%'
name|'dict'
op|'('
name|'hex'
op|'='
string|"'[\\da-f]'"
op|','
name|'oct'
op|'='
string|"'[0-8]'"
op|')'
op|')'
newline|'\n'
name|'pattern'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|')'
newline|'\n'
name|'if'
name|'pattern'
op|'.'
name|'match'
op|'('
name|'address'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'FakeLibvirtPciDevice'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_image'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'='
name|'fake_node_device_lookup_by_name'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'pci_devices'"
op|']'
op|'='
name|'objects'
op|'.'
name|'PciDeviceList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'PciDevice'
op|'('
name|'address'
op|'='
string|"'0000:00:00.0'"
op|')'
op|']'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_chown_disk_config_for_instance
dedent|''
name|'def'
name|'test_chown_disk_config_for_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'chown'"
op|')'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/tmp/uuid'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/tmp/uuid/disk.config'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'chown'
op|'('
string|"'/tmp/uuid/disk.config'"
op|','
name|'os'
op|'.'
name|'getuid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_chown_disk_config_for_instance'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_image_plain
dedent|''
name|'def'
name|'_test_create_image_plain'
op|'('
name|'self'
op|','
name|'os_type'
op|'='
string|"''"
op|','
name|'filename'
op|'='
string|"''"
op|','
name|'mkfs'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gotFiles'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_image
name|'def'
name|'fake_image'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'image_type'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
DECL|class|FakeImage
indent|'            '
name|'class'
name|'FakeImage'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'is_block_dev'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_block_dev'
op|'='
name|'is_block_dev'
newline|'\n'
nl|'\n'
DECL|member|create_image
dedent|''
name|'def'
name|'create_image'
op|'('
name|'self'
op|','
name|'prepare_template'
op|','
name|'base'
op|','
nl|'\n'
name|'size'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|cache
dedent|''
name|'def'
name|'cache'
op|'('
name|'self'
op|','
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'gotFiles'
op|'.'
name|'append'
op|'('
op|'{'
string|"'filename'"
op|':'
name|'filename'
op|','
nl|'\n'
string|"'size'"
op|':'
name|'size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeImage'
op|'('
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
comment|"# Stop 'libvirt_driver._create_image' touching filesystem"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|'"image"'
op|','
nl|'\n'
name|'fake_image'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'os_type'"
op|']'
op|'='
name|'os_type'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'if'
name|'mkfs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
op|'.'
name|'api'
op|','
string|"'_MKFS_COMMAND'"
op|','
nl|'\n'
op|'{'
name|'os_type'
op|':'
string|"'mkfs.ext4 --label %(fs_label)s %(target)s'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_image'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'wantFiles'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'356a192b7913b04c54574d18c28d46e6395428ab'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
name|'filename'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'20'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotFiles'
op|','
name|'wantFiles'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_plain_os_type_blank
dedent|''
name|'def'
name|'test_create_image_plain_os_type_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_image_plain'
op|'('
name|'os_type'
op|'='
string|"''"
op|','
nl|'\n'
name|'filename'
op|'='
name|'self'
op|'.'
name|'_EPHEMERAL_20_DEFAULT'
op|','
nl|'\n'
name|'mkfs'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_plain_os_type_none
dedent|''
name|'def'
name|'test_create_image_plain_os_type_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_image_plain'
op|'('
name|'os_type'
op|'='
name|'None'
op|','
nl|'\n'
name|'filename'
op|'='
name|'self'
op|'.'
name|'_EPHEMERAL_20_DEFAULT'
op|','
nl|'\n'
name|'mkfs'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_plain_os_type_set_no_fs
dedent|''
name|'def'
name|'test_create_image_plain_os_type_set_no_fs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_image_plain'
op|'('
name|'os_type'
op|'='
string|"'test'"
op|','
nl|'\n'
name|'filename'
op|'='
name|'self'
op|'.'
name|'_EPHEMERAL_20_DEFAULT'
op|','
nl|'\n'
name|'mkfs'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_plain_os_type_set_with_fs
dedent|''
name|'def'
name|'test_create_image_plain_os_type_set_with_fs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ephemeral_file_name'
op|'='
op|'('
string|"'ephemeral_20_%s'"
op|'%'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
nl|'\n'
string|"'mkfs.ext4 --label %(fs_label)s %(target)s'"
op|')'
op|'['
op|':'
number|'7'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_create_image_plain'
op|'('
name|'os_type'
op|'='
string|"'test'"
op|','
nl|'\n'
name|'filename'
op|'='
name|'ephemeral_file_name'
op|','
nl|'\n'
name|'mkfs'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_with_swap
dedent|''
name|'def'
name|'test_create_image_with_swap'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gotFiles'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_image
name|'def'
name|'fake_image'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'image_type'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
DECL|class|FakeImage
indent|'            '
name|'class'
name|'FakeImage'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'is_block_dev'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_block_dev'
op|'='
name|'is_block_dev'
newline|'\n'
nl|'\n'
DECL|member|create_image
dedent|''
name|'def'
name|'create_image'
op|'('
name|'self'
op|','
name|'prepare_template'
op|','
name|'base'
op|','
nl|'\n'
name|'size'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|cache
dedent|''
name|'def'
name|'cache'
op|'('
name|'self'
op|','
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'gotFiles'
op|'.'
name|'append'
op|'('
op|'{'
string|"'filename'"
op|':'
name|'filename'
op|','
nl|'\n'
string|"'size'"
op|':'
name|'size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeImage'
op|'('
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
comment|"# Stop 'libvirt_driver._create_image' touching filesystem"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|'"image"'
op|','
nl|'\n'
name|'fake_image'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
comment|'# Turn on some swap to exercise that codepath in _create_image'
nl|'\n'
name|'instance'
op|'.'
name|'flavor'
op|'.'
name|'swap'
op|'='
number|'500'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_image'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'wantFiles'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'356a192b7913b04c54574d18c28d46e6395428ab'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
name|'self'
op|'.'
name|'_EPHEMERAL_20_DEFAULT'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'20'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'swap_500'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'500'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotFiles'
op|','
name|'wantFiles'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
string|"'fake-id'"
op|')'
op|')'
newline|'\n'
DECL|member|test_create_image_not_exist_no_fallback
name|'def'
name|'test_create_image_not_exist_no_fallback'
op|'('
name|'self'
op|','
name|'mock_cache'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_create_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|')'
newline|'\n'
DECL|member|test_create_image_not_exist_fallback
name|'def'
name|'test_create_image_not_exist_fallback'
op|'('
name|'self'
op|','
name|'mock_cache'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|side_effect
indent|'        '
name|'def'
name|'side_effect'
op|'('
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|second_call
indent|'            '
name|'def'
name|'second_call'
op|'('
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# call copy_from_host ourselves because we mocked image.cache()'
nl|'\n'
indent|'                '
name|'fetch_func'
op|'('
string|"'fake-target'"
op|','
string|"'fake-max-size'"
op|')'
newline|'\n'
comment|'# further calls have no side effect'
nl|'\n'
name|'mock_cache'
op|'.'
name|'side_effect'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'mock_cache'
op|'.'
name|'side_effect'
op|'='
name|'second_call'
newline|'\n'
comment|'# raise an error only the first call'
nl|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
string|"'fake-id'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_cache'
op|'.'
name|'side_effect'
op|'='
name|'side_effect'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'copy_image'"
op|')'
name|'as'
name|'mock_copy'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_create_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
string|"'fake-source-host'"
op|')'
newline|'\n'
name|'mock_copy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'src'
op|'='
string|"'fake-target'"
op|','
nl|'\n'
name|'dest'
op|'='
string|"'fake-target'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake-source-host'"
op|','
nl|'\n'
name|'receive'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_create_ephemeral_specified_fs
name|'def'
name|'test_create_ephemeral_specified_fs'
op|'('
name|'self'
op|','
name|'mock_exec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'default_ephemeral_format'
op|'='
string|"'ext3'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_ephemeral'
op|'('
string|"'/dev/something'"
op|','
number|'20'
op|','
string|"'myVol'"
op|','
string|"'linux'"
op|','
nl|'\n'
name|'is_block_dev'
op|'='
name|'True'
op|','
name|'max_size'
op|'='
number|'20'
op|','
nl|'\n'
name|'specified_fs'
op|'='
string|"'ext4'"
op|')'
newline|'\n'
name|'mock_exec'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'mkfs'"
op|','
string|"'-t'"
op|','
string|"'ext4'"
op|','
string|"'-F'"
op|','
string|"'-L'"
op|','
nl|'\n'
string|"'myVol'"
op|','
string|"'/dev/something'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_ephemeral_specified_fs_not_valid
dedent|''
name|'def'
name|'test_create_ephemeral_specified_fs_not_valid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'default_ephemeral_format'"
op|','
string|"'ext4'"
op|')'
newline|'\n'
name|'ephemerals'
op|'='
op|'['
op|'{'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'dummy'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
nl|'\n'
string|"'ephemerals'"
op|':'
name|'ephemerals'
op|'}'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|'.'
name|'pop'
op|'('
string|"'disk.local'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'verify_base_size'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMFormat'
op|','
name|'drvr'
op|'.'
name|'_create_image'
op|','
nl|'\n'
name|'context'
op|','
name|'instance'
op|','
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_ephemeral_default
dedent|''
dedent|''
name|'def'
name|'test_create_ephemeral_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mkfs'"
op|','
string|"'-t'"
op|','
string|"'ext4'"
op|','
string|"'-F'"
op|','
string|"'-L'"
op|','
string|"'myVol'"
op|','
nl|'\n'
string|"'/dev/something'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_ephemeral'
op|'('
string|"'/dev/something'"
op|','
number|'20'
op|','
string|"'myVol'"
op|','
string|"'linux'"
op|','
nl|'\n'
name|'is_block_dev'
op|'='
name|'True'
op|','
name|'max_size'
op|'='
number|'20'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_ephemeral_with_conf
dedent|''
name|'def'
name|'test_create_ephemeral_with_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'default_ephemeral_format'"
op|','
string|"'ext4'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mkfs'"
op|','
string|"'-t'"
op|','
string|"'ext4'"
op|','
string|"'-F'"
op|','
string|"'-L'"
op|','
string|"'myVol'"
op|','
nl|'\n'
string|"'/dev/something'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_ephemeral'
op|'('
string|"'/dev/something'"
op|','
number|'20'
op|','
string|"'myVol'"
op|','
string|"'linux'"
op|','
nl|'\n'
name|'is_block_dev'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_ephemeral_with_arbitrary
dedent|''
name|'def'
name|'test_create_ephemeral_with_arbitrary'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
op|'.'
name|'api'
op|','
string|"'_MKFS_COMMAND'"
op|','
nl|'\n'
op|'{'
string|"'linux'"
op|':'
string|"'mkfs.ext4 --label %(fs_label)s %(target)s'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mkfs.ext4'"
op|','
string|"'--label'"
op|','
string|"'myVol'"
op|','
string|"'/dev/something'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_ephemeral'
op|'('
string|"'/dev/something'"
op|','
number|'20'
op|','
string|"'myVol'"
op|','
string|"'linux'"
op|','
nl|'\n'
name|'is_block_dev'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_ephemeral_with_ext3
dedent|''
name|'def'
name|'test_create_ephemeral_with_ext3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
op|'.'
name|'api'
op|','
string|"'_MKFS_COMMAND'"
op|','
nl|'\n'
op|'{'
string|"'linux'"
op|':'
string|"'mkfs.ext3 --label %(fs_label)s %(target)s'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mkfs.ext3'"
op|','
string|"'--label'"
op|','
string|"'myVol'"
op|','
string|"'/dev/something'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_create_ephemeral'
op|'('
string|"'/dev/something'"
op|','
number|'20'
op|','
string|"'myVol'"
op|','
string|"'linux'"
op|','
nl|'\n'
name|'is_block_dev'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_swap_default
dedent|''
name|'def'
name|'test_create_swap_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mkswap'"
op|','
string|"'/dev/something'"
op|','
name|'run_as_root'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_create_swap'
op|'('
string|"'/dev/something'"
op|','
number|'1'
op|','
name|'max_size'
op|'='
number|'20'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output_file
dedent|''
name|'def'
name|'test_get_console_output_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_libvirt_utils'
op|'.'
name|'files'
op|'['
string|"'console.log'"
op|']'
op|'='
string|"'01234567890'"
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'console_dir'
op|'='
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'console_log'
op|'='
string|"'%s/console.log'"
op|'%'
op|'('
name|'console_dir'
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <console type=\'file\'>\n                            <source path=\'%s\'/>\n                            <target port=\'0\'/>\n                        </console>\n                    </devices>\n                </domain>\n            """'
op|'%'
name|'console_log'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'prev_max'
op|'='
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
number|'5'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'output'
op|'='
name|'drvr'
op|'.'
name|'get_console_output'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
name|'prev_max'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'67890'"
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output_file_missing
dedent|''
dedent|''
name|'def'
name|'test_get_console_output_file_missing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'console_log'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'non-existent.log'"
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <console type=\'file\'>\n                            <source path=\'%s\'/>\n                            <target port=\'0\'/>\n                        </console>\n                    </devices>\n                </domain>\n            """'
op|'%'
name|'console_log'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'='
name|'drvr'
op|'.'
name|'get_console_output'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output_pty
dedent|''
dedent|''
name|'def'
name|'test_get_console_output_pty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_libvirt_utils'
op|'.'
name|'files'
op|'['
string|"'pty'"
op|']'
op|'='
string|"'01234567890'"
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'console_dir'
op|'='
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'pty_file'
op|'='
string|"'%s/fake_pty'"
op|'%'
op|'('
name|'console_dir'
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <console type=\'pty\'>\n                            <source path=\'%s\'/>\n                            <target port=\'0\'/>\n                        </console>\n                    </devices>\n                </domain>\n            """'
op|'%'
name|'pty_file'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_flush
dedent|''
name|'def'
name|'_fake_flush'
op|'('
name|'self'
op|','
name|'fake_pty'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'foo'"
newline|'\n'
nl|'\n'
DECL|function|_fake_append_to_file
dedent|''
name|'def'
name|'_fake_append_to_file'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'fpath'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'pty'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_flush_libvirt_console'
op|'='
name|'_fake_flush'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_append_to_file'
op|'='
name|'_fake_append_to_file'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'prev_max'
op|'='
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
number|'5'
newline|'\n'
name|'output'
op|'='
name|'drvr'
op|'.'
name|'get_console_output'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
name|'prev_max'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'67890'"
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_ip_addr
dedent|''
dedent|''
name|'def'
name|'test_get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ip'
op|'='
name|'drvr'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ip'
op|','
name|'CONF'
op|'.'
name|'my_ip'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LOG'
op|','
string|"'warn'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.utils.get_machine_ips'"
op|')'
newline|'\n'
DECL|member|test_get_host_ip_addr_failure
name|'def'
name|'test_get_host_ip_addr_failure'
op|'('
name|'self'
op|','
name|'mock_ips'
op|','
name|'mock_log'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_ips'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'8.8.8.8'"
op|','
string|"'75.75.75.75'"
op|']'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
newline|'\n'
name|'mock_log'
op|'.'
name|'assert_called_once_with'
op|'('
string|"u'my_ip address (%(my_ip)s) was '"
nl|'\n'
string|"u'not found on any of the '"
nl|'\n'
string|"u'interfaces: %(ifaces)s'"
op|','
nl|'\n'
op|'{'
string|"'ifaces'"
op|':'
string|"'8.8.8.8, 75.75.75.75'"
op|','
nl|'\n'
string|"'my_ip'"
op|':'
name|'mock'
op|'.'
name|'ANY'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conn_event_handler
dedent|''
name|'def'
name|'test_conn_event_handler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'service_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'service_mock'
op|'.'
name|'disabled'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_connect"'
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"Failed to connect to host"'
op|','
nl|'\n'
name|'error_code'
op|'='
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_init_events"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|'"get_by_compute_host"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'service_mock'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# verify that the driver registers for the close callback'
nl|'\n'
comment|'# and re-connects after receiving the callback'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'HypervisorUnavailable'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'init_host'
op|','
nl|'\n'
string|'"wibble"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'service_mock'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_command_with_broken_connection
dedent|''
dedent|''
name|'def'
name|'test_command_with_broken_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'service_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'service_mock'
op|'.'
name|'disabled'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_connect"'
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"Failed to connect to host"'
op|','
nl|'\n'
name|'error_code'
op|'='
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_init_events"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|'"_do_quality_warnings"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|'"get_by_compute_host"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'service_mock'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"wibble"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'HypervisorUnavailable'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'get_num_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'service_mock'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_resume_after_broken_connection
dedent|''
dedent|''
name|'def'
name|'test_service_resume_after_broken_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'service_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'service_mock'
op|'.'
name|'disabled'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_connect"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|'"_init_events"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"has_min_version"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|'"_do_quality_warnings"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Service'
op|','
string|'"get_by_compute_host"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'service_mock'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'init_host'
op|'('
string|'"wibble"'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'get_num_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'service_mock'
op|'.'
name|'disabled'
name|'and'
nl|'\n'
name|'service_mock'
op|'.'
name|'disabled_reason'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_immediate_delete
name|'def'
name|'test_immediate_delete'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_domain
indent|'        '
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'get_by_uuid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'obj_load_attr'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'delete_instance_files'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_disconnect_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|','
string|"'block_device_info_get_mapping'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_undefine_domain'"
op|')'
newline|'\n'
DECL|member|_test_destroy_removes_disk
name|'def'
name|'_test_destroy_removes_disk'
op|'('
name|'self'
op|','
name|'mock_undefine_domain'
op|','
name|'mock_mapping'
op|','
nl|'\n'
name|'mock_disconnect_volume'
op|','
nl|'\n'
name|'mock_delete_instance_files'
op|','
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_inst_save'
op|','
name|'mock_inst_obj_load_attr'
op|','
nl|'\n'
name|'mock_get_by_uuid'
op|','
name|'volume_fail'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'mock_mapping'
op|'.'
name|'return_value'
op|'='
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
newline|'\n'
name|'mock_delete_instance_files'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_get_by_uuid'
op|'.'
name|'return_value'
op|'='
name|'instance'
newline|'\n'
name|'if'
name|'volume_fail'
op|':'
newline|'\n'
indent|'            '
name|'mock_disconnect_volume'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
string|"'vol'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_removes_disk
dedent|''
name|'def'
name|'test_destroy_removes_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_destroy_removes_disk'
op|'('
name|'volume_fail'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_removes_disk_volume_fails
dedent|''
name|'def'
name|'test_destroy_removes_disk_volume_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_destroy_removes_disk'
op|'('
name|'volume_fail'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'unplug_vifs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_undefine_domain'"
op|')'
newline|'\n'
DECL|member|test_destroy_not_removes_disk
name|'def'
name|'test_destroy_not_removes_disk'
op|'('
name|'self'
op|','
name|'mock_undefine_domain'
op|','
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_unplug_vifs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'None'
op|','
name|'name'
op|'='
string|"'instancename'"
op|','
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'cleanup'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_teardown_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_destroy_lxc_calls_teardown_container
name|'def'
name|'test_destroy_lxc_calls_teardown_container'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
nl|'\n'
name|'mock_teardown_container'
op|','
nl|'\n'
name|'mock_cleanup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'fake_domain'
op|'='
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|destroy_side_effect
name|'def'
name|'destroy_side_effect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_domain'
op|'.'
name|'_info'
op|'['
number|'0'
op|']'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_domain'
op|','
string|"'destroy'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'destroy_side_effect'
op|')'
name|'as'
name|'mock_domain_destroy'
op|':'
newline|'\n'
indent|'            '
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'fake_domain'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_domain'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_domain_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_teardown_container'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_cleanup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'None'
op|','
name|'False'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'cleanup'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_teardown_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_destroy_lxc_calls_teardown_container_when_no_domain
name|'def'
name|'test_destroy_lxc_calls_teardown_container_when_no_domain'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_domain'
op|','
name|'mock_teardown_container'
op|','
name|'mock_cleanup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'inf_exception'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'side_effect'
op|'='
name|'inf_exception'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_domain'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_teardown_container'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_cleanup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'None'
op|','
name|'False'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_different_ids
dedent|''
name|'def'
name|'test_reboot_different_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'wait_soft_reboot_seconds'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reboot_create_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Mock domain'
nl|'\n'
name|'mock_domain'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_fake_id'"
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_CRASHED'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_other_fake_id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_domain'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
dedent|''
name|'def'
name|'fake_create_domain'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reboot_create_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|','
name|'fake_create_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'FakeLoopingCall'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pci_manager'
op|','
string|"'get_instance_pci_devs'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
op|'['
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'reboot'
op|'('
name|'None'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'reboot_create_called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_manager'
op|','
string|"'get_instance_pci_devs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'sleep'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_hard_reboot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_reboot_same_ids
name|'def'
name|'test_reboot_same_ids'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
name|'mock_hard_reboot'
op|','
nl|'\n'
name|'mock_sleep'
op|','
name|'mock_loopingcall'
op|','
nl|'\n'
name|'mock_get_instance_pci_devs'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'wait_soft_reboot_seconds'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Mock domain'
nl|'\n'
name|'mock_domain'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'return_values'
op|'='
op|'['
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|','
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_CRASHED'
op|','
op|')'
op|'+'
name|'info_tuple'
op|']'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'.'
name|'side_effect'
op|'='
name|'return_values'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'.'
name|'return_value'
op|'='
string|"'some_fake_id'"
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'.'
name|'side_effect'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_hard_reboot
name|'def'
name|'fake_hard_reboot'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_domain'
newline|'\n'
name|'mock_hard_reboot'
op|'.'
name|'side_effect'
op|'='
name|'fake_hard_reboot'
newline|'\n'
name|'mock_loopingcall'
op|'.'
name|'return_value'
op|'='
name|'FakeLoopingCall'
op|'('
op|')'
newline|'\n'
name|'mock_get_instance_pci_devs'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
name|'drvr'
op|'.'
name|'reboot'
op|'('
name|'None'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_hard_reboot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_soft_reboot_libvirt_exception
name|'def'
name|'test_soft_reboot_libvirt_exception'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
nl|'\n'
name|'mock_hard_reboot'
op|')'
op|':'
newline|'\n'
comment|'# Tests that a hard reboot is performed when a soft reboot results'
nl|'\n'
comment|'# in raising a libvirtError.'
nl|'\n'
indent|'        '
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
comment|'# setup mocks'
nl|'\n'
name|'mock_virDomain'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'ID'
op|'.'
name|'return_value'
op|'='
string|"'some_fake_id'"
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'shutdown'
op|'.'
name|'side_effect'
op|'='
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'Err'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'context'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_virDomain'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'reboot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_hard_reboot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|_test_resume_state_on_host_boot_with_state
name|'def'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'self'
op|','
name|'state'
op|','
nl|'\n'
name|'mock_get_domain'
op|','
nl|'\n'
name|'mock_hard_reboot'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_virDomain'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_virDomain'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'='
op|'('
op|'['
name|'state'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_virDomain'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'ignored_states'
op|'='
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_hard_reboot'
op|'.'
name|'called'
op|','
name|'state'
name|'not'
name|'in'
name|'ignored_states'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_running_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_running_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_suspended_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_suspended_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_paused_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_paused_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_nostate
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_nostate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_shutdown_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_shutdown_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_crashed_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_crashed_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_hard_reboot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_resume_state_on_host_boot_with_instance_not_found_on_driver
name|'def'
name|'test_resume_state_on_host_boot_with_instance_not_found_on_driver'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_get_domain'
op|','
name|'mock_hard_reboot'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'mock_hard_reboot'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver.get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_domain_and_network'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_images_and_backing'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._get_guest_xml'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._get_instance_disk_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._destroy'"
op|')'
newline|'\n'
DECL|member|test_hard_reboot
name|'def'
name|'test_hard_reboot'
op|'('
name|'self'
op|','
name|'mock_destroy'
op|','
name|'mock_get_instance_disk_info'
op|','
nl|'\n'
name|'mock_get_guest_xml'
op|','
name|'mock_create_images_and_backing'
op|','
nl|'\n'
name|'mock_create_domain_and_network'
op|','
name|'mock_get_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'.'
name|'auth_token'
op|'='
name|'True'
comment|'# any non-None value will suffice'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'return_values'
op|'='
op|'['
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|']'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'side_effect'
op|'='
name|'return_values'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'['
op|'{'
string|'"virt_disk_size"'
op|':'
number|'2'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'mock_get_guest_xml'
op|'.'
name|'return_value'
op|'='
name|'dummyxml'
newline|'\n'
name|'mock_get_instance_disk_info'
op|'.'
name|'return_value'
op|'='
name|'disk_info'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_hard_reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_utils.fileutils.ensure_tree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_service.loopingcall.FixedIntervalLoopingCall'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.pci.manager.get_instance_pci_devs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._prepare_pci_devices_for_use'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_domain_and_network'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_images_and_backing'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._get_instance_disk_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.write_to_file'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._get_guest_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.blockinfo.get_disk_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._destroy'"
op|')'
newline|'\n'
DECL|member|test_hard_reboot_does_not_call_glance_show
name|'def'
name|'test_hard_reboot_does_not_call_glance_show'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_destroy'
op|','
name|'mock_get_disk_info'
op|','
name|'mock_get_guest_config'
op|','
nl|'\n'
name|'mock_get_instance_path'
op|','
name|'mock_write_to_file'
op|','
nl|'\n'
name|'mock_get_instance_disk_info'
op|','
name|'mock_create_images_and_backing'
op|','
nl|'\n'
name|'mock_create_domand_and_network'
op|','
name|'mock_prepare_pci_devices_for_use'
op|','
nl|'\n'
name|'mock_get_instance_pci_devs'
op|','
name|'mock_looping_call'
op|','
name|'mock_ensure_tree'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For a hard reboot, we shouldn\'t need an additional call to glance\n        to get the image metadata.\n\n        This is important for automatically spinning up instances on a\n        host-reboot, since we won\'t have a user request context that\'ll allow\n        the Glance request to go through. We have to rely on the cached image\n        metadata, instead.\n\n        https://bugs.launchpad.net/nova/+bug/1339386\n        """'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'mock_get_guest_config'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/foo'"
newline|'\n'
name|'mock_looping_call'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_image_api'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_hard_reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'_image_api'
op|'.'
name|'get'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_ensure_tree'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'/foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'time'
op|','
string|"'sleep'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_create_domain'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|_test_clean_shutdown
name|'def'
name|'_test_clean_shutdown'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
name|'mock_create_domain'
op|','
nl|'\n'
name|'mock_sleep'
op|','
name|'seconds_to_shutdown'
op|','
nl|'\n'
name|'timeout'
op|','
name|'retry_interval'
op|','
nl|'\n'
name|'shutdown_attempts'
op|','
name|'succeeds'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
name|'shutdown_count'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Mock domain'
nl|'\n'
name|'mock_domain'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'return_infos'
op|'='
op|'['
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|']'
newline|'\n'
name|'return_shutdowns'
op|'='
op|'['
name|'shutdown_count'
op|'.'
name|'append'
op|'('
string|'"shutdown"'
op|')'
op|']'
newline|'\n'
name|'retry_countdown'
op|'='
name|'retry_interval'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'min'
op|'('
name|'seconds_to_shutdown'
op|','
name|'timeout'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return_infos'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'if'
name|'retry_countdown'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'return_shutdowns'
op|'.'
name|'append'
op|'('
name|'shutdown_count'
op|'.'
name|'append'
op|'('
string|'"shutdown"'
op|')'
op|')'
newline|'\n'
name|'retry_countdown'
op|'='
name|'retry_interval'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'retry_countdown'
op|'-='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'seconds_to_shutdown'
op|'<'
name|'timeout'
op|':'
newline|'\n'
indent|'            '
name|'return_infos'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_SHUTDOWN'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_domain'
op|'.'
name|'info'
op|'.'
name|'side_effect'
op|'='
name|'return_infos'
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'.'
name|'side_effect'
op|'='
name|'return_shutdowns'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
name|'def'
name|'fake_create_domain'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reboot_create_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_domain'
newline|'\n'
name|'mock_create_domain'
op|'.'
name|'side_effect'
op|'='
name|'fake_create_domain'
newline|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'_clean_shutdown'
op|'('
name|'instance'
op|','
name|'timeout'
op|','
name|'retry_interval'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'succeeds'
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'shutdown_attempts'
op|','
name|'len'
op|'('
name|'shutdown_count'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clean_shutdown_first_time
dedent|''
name|'def'
name|'test_clean_shutdown_first_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_clean_shutdown'
op|'('
name|'seconds_to_shutdown'
op|'='
number|'2'
op|','
nl|'\n'
name|'timeout'
op|'='
number|'5'
op|','
nl|'\n'
name|'retry_interval'
op|'='
number|'3'
op|','
nl|'\n'
name|'shutdown_attempts'
op|'='
number|'1'
op|','
nl|'\n'
name|'succeeds'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clean_shutdown_with_retry
dedent|''
name|'def'
name|'test_clean_shutdown_with_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_clean_shutdown'
op|'('
name|'seconds_to_shutdown'
op|'='
number|'4'
op|','
nl|'\n'
name|'timeout'
op|'='
number|'5'
op|','
nl|'\n'
name|'retry_interval'
op|'='
number|'3'
op|','
nl|'\n'
name|'shutdown_attempts'
op|'='
number|'2'
op|','
nl|'\n'
name|'succeeds'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clean_shutdown_failure
dedent|''
name|'def'
name|'test_clean_shutdown_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_clean_shutdown'
op|'('
name|'seconds_to_shutdown'
op|'='
number|'6'
op|','
nl|'\n'
name|'timeout'
op|'='
number|'5'
op|','
nl|'\n'
name|'retry_interval'
op|'='
number|'3'
op|','
nl|'\n'
name|'shutdown_attempts'
op|'='
number|'2'
op|','
nl|'\n'
name|'succeeds'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clean_shutdown_no_wait
dedent|''
name|'def'
name|'test_clean_shutdown_no_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_clean_shutdown'
op|'('
name|'seconds_to_shutdown'
op|'='
number|'6'
op|','
nl|'\n'
name|'timeout'
op|'='
number|'0'
op|','
nl|'\n'
name|'retry_interval'
op|'='
number|'3'
op|','
nl|'\n'
name|'shutdown_attempts'
op|'='
number|'1'
op|','
nl|'\n'
name|'succeeds'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|"'attachDeviceFlags'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|"'ID'"
op|','
name|'return_value'
op|'='
number|'1'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
DECL|member|test_attach_sriov_ports
name|'def'
name|'test_attach_sriov_ports'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_image_metadata'
op|','
nl|'\n'
name|'mock_ID'
op|','
nl|'\n'
name|'mock_attachDevice'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'vnic_type'"
op|']'
op|'='
name|'network_model'
op|'.'
name|'VNIC_TYPE_DIRECT'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'FakeVirtDomain'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_attach_sriov_ports'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'guest'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'mock_get_image_metadata'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_attachDevice'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|"'attachDeviceFlags'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|"'ID'"
op|','
name|'return_value'
op|'='
number|'1'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
DECL|member|test_attach_sriov_ports_with_info_cache
name|'def'
name|'test_attach_sriov_ports_with_info_cache'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_image_metadata'
op|','
nl|'\n'
name|'mock_ID'
op|','
nl|'\n'
name|'mock_attachDevice'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'vnic_type'"
op|']'
op|'='
name|'network_model'
op|'.'
name|'VNIC_TYPE_DIRECT'
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'FakeVirtDomain'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_attach_sriov_ports'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'guest'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_get_image_metadata'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_attachDevice'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'has_min_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'FakeVirtDomain'
op|','
string|"'detachDeviceFlags'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
DECL|member|test_detach_sriov_ports
name|'def'
name|'test_detach_sriov_ports'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_image_metadata'
op|','
nl|'\n'
name|'mock_detachDeviceFlags'
op|','
nl|'\n'
name|'mock_has_min_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'vnic_type'"
op|']'
op|'='
name|'network_model'
op|'.'
name|'VNIC_TYPE_DIRECT'
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_detach_sriov_ports'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'guest'
op|')'
newline|'\n'
name|'mock_get_image_metadata'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_detachDeviceFlags'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
string|"'fake_dom'"
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_existing_domain_xml'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'dummyxml'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'guest'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_attach_pci_devices'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pci_manager'
op|','
string|"'get_instance_pci_devs'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake_pci_devs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'blockinfo'
op|','
string|"'get_disk_info'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'_get_existing_domain_xml'
op|','
name|'_create_domain_and_network'
op|','
nl|'\n'
name|'_attach_pci_devices'
op|','
name|'get_instance_pci_devs'
op|','
name|'get_image_metadata'
op|','
nl|'\n'
name|'get_disk_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'get_image_metadata'
op|'.'
name|'return_value'
op|'='
op|'{'
string|"'bar'"
op|':'
number|'234'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'123'
op|'}'
newline|'\n'
name|'get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'disk_info'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
name|'_get_existing_domain_xml'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'block_device_info'
op|')'
op|']'
op|')'
newline|'\n'
name|'_create_domain_and_network'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'dummyxml'
op|','
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|','
nl|'\n'
name|'vifs_already_plugged'
op|'='
name|'True'
op|')'
op|']'
op|')'
newline|'\n'
name|'_attach_pci_devices'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'guest'
op|','
nl|'\n'
string|"'fake_pci_devs'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'delete_instance_files'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_destroy_undefines
name|'def'
name|'test_destroy_undefines'
op|'('
name|'self'
op|','
name|'mock_save'
op|','
name|'mock_delete_instance_files'
op|','
nl|'\n'
name|'mock_get_info'
op|','
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'dom_mock'
op|'.'
name|'undefineFlags'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'dom_mock'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'id'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'mock_delete_instance_files'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDDriver'"
op|')'
newline|'\n'
DECL|member|test_cleanup_rbd
name|'def'
name|'test_cleanup_rbd'
op|'('
name|'self'
op|','
name|'mock_driver'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'mock_driver'
op|'.'
name|'return_value'
newline|'\n'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_cleanup_rbd'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_destroy_undefines_no_undefine_flags
name|'def'
name|'test_destroy_undefines_no_undefine_flags'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'Err'"
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'123'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'id'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_destroy_undefines_no_attribute_with_managed_save
name|'def'
name|'test_destroy_undefines_no_attribute_with_managed_save'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'managedSaveRemove'
op|'('
number|'0'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'id'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
DECL|member|test_destroy_undefines_no_attribute_no_managed_save
name|'def'
name|'test_destroy_undefines_no_attribute_no_managed_save'
op|'('
name|'self'
op|','
name|'mock_save'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
string|"'delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_timed_out
dedent|''
name|'def'
name|'test_destroy_timed_out'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"timed out"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_error_code
dedent|''
name|'def'
name|'fake_get_error_code'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_OPERATION_TIMEOUT'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
string|"'get_error_code'"
op|','
nl|'\n'
name|'fake_get_error_code'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstancePowerOffFailure'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'destroy'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_not_found
dedent|''
name|'def'
name|'test_private_destroy_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|'"No such domain"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'ex'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'ex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
comment|"# NOTE(vish): verifies destroy doesn't raise if the instance disappears"
nl|'\n'
name|'drvr'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_lxc_processes_refused_to_die
dedent|''
name|'def'
name|'test_private_destroy_lxc_processes_refused_to_die'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
string|'""'
op|','
nl|'\n'
name|'error_message'
op|'='
string|'"internal error: Some processes refused to die"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conn'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
name|'as'
name|'mock_get_domain'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|')'
name|'as'
name|'mock_get_info'
op|':'
newline|'\n'
indent|'            '
name|'mock_domain'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_domain'
newline|'\n'
name|'mock_domain'
op|'.'
name|'destroy'
op|'.'
name|'side_effect'
op|'='
name|'ex'
newline|'\n'
nl|'\n'
name|'mock_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_info'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'mock_info'
op|'.'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'mock_info'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_processes_refused_to_die_still_raises
dedent|''
dedent|''
name|'def'
name|'test_private_destroy_processes_refused_to_die_still_raises'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
string|'""'
op|','
nl|'\n'
name|'error_message'
op|'='
string|'"internal error: Some processes refused to die"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conn'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
name|'as'
name|'mock_get_domain'
op|':'
newline|'\n'
indent|'            '
name|'mock_domain'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'.'
name|'return_value'
op|'='
number|'1'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'mock_domain'
newline|'\n'
name|'mock_domain'
op|'.'
name|'destroy'
op|'.'
name|'side_effect'
op|'='
name|'ex'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
name|'conn'
op|'.'
name|'_destroy'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_ebusy_timeout
dedent|''
dedent|''
name|'def'
name|'test_private_destroy_ebusy_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that _destroy will retry 3 times to destroy the guest when an'
nl|'\n'
comment|'# EBUSY is raised, but eventually times out and raises the libvirtError'
nl|'\n'
indent|'        '
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
op|'('
string|'"Failed to terminate process 26425 with SIGKILL: "'
nl|'\n'
string|'"Device or resource busy"'
op|')'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
nl|'\n'
name|'int1'
op|'='
name|'errno'
op|'.'
name|'EBUSY'
op|')'
newline|'\n'
nl|'\n'
name|'mock_guest'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'libvirt_guest'
op|'.'
name|'Guest'
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'mock_guest'
op|'.'
name|'poweroff'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'side_effect'
op|'='
name|'ex'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_guest'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_guest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
name|'drvr'
op|'.'
name|'_destroy'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'mock_guest'
op|'.'
name|'poweroff'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_ebusy_multiple_attempt_ok
dedent|''
name|'def'
name|'test_private_destroy_ebusy_multiple_attempt_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the _destroy attempt loop is broken when EBUSY is no'
nl|'\n'
comment|'# longer raised.'
nl|'\n'
indent|'        '
name|'ex'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
op|'('
string|'"Failed to terminate process 26425 with SIGKILL: "'
nl|'\n'
string|'"Device or resource busy"'
op|')'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
nl|'\n'
name|'int1'
op|'='
name|'errno'
op|'.'
name|'EBUSY'
op|')'
newline|'\n'
nl|'\n'
name|'mock_guest'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'libvirt_guest'
op|'.'
name|'Guest'
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'mock_guest'
op|'.'
name|'poweroff'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'side_effect'
op|'='
op|'['
name|'ex'
op|','
name|'None'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'inst_info'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_guest'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_guest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'get_info'"
op|','
name|'return_value'
op|'='
name|'inst_info'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'drvr'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_guest'
op|'.'
name|'poweroff'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_undefine_domain_with_not_found_instance
dedent|''
name|'def'
name|'test_undefine_domain_with_not_found_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_domain
indent|'        '
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(wenjianhn): verifies undefine doesn't raise if the"
nl|'\n'
comment|'# instance disappears'
nl|'\n'
name|'drvr'
op|'.'
name|'_undefine_domain'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_disk_over_committed_size_total
name|'def'
name|'test_disk_over_committed_size_total'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
comment|'# Ensure destroy calls managedSaveRemove for saved instance.'
nl|'\n'
DECL|class|DiagFakeDomain
indent|'        '
name|'class'
name|'DiagFakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_name'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"19479fee-07a5-49bb-9138-d3738280d63c"'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"<domain/>"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'DiagFakeDomain'
op|'('
string|'"instance0000001"'
op|')'
op|','
nl|'\n'
name|'DiagFakeDomain'
op|'('
string|'"instance0000002"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fake_disks'
op|'='
op|'{'
string|"'instance0000001'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'10653532160'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'instance0000002'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'raw'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'0'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|get_info
name|'def'
name|'get_info'
op|'('
name|'instance_name'
op|','
name|'xml'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fake_disks'
op|'.'
name|'get'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
nl|'\n'
string|'"_get_instance_disk_info"'
op|')'
name|'as'
name|'mock_info'
op|':'
newline|'\n'
indent|'            '
name|'mock_info'
op|'.'
name|'side_effect'
op|'='
name|'get_info'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'_get_disk_over_committed_size_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'10653532160'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_info'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_disk_over_committed_size_total_eperm
name|'def'
name|'test_disk_over_committed_size_total_eperm'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
comment|'# Ensure destroy calls managedSaveRemove for saved instance.'
nl|'\n'
DECL|class|DiagFakeDomain
indent|'        '
name|'class'
name|'DiagFakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_name'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"19479fee-07a5-49bb-9138-d3738280d63c"'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"<domain/>"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'DiagFakeDomain'
op|'('
string|'"instance0000001"'
op|')'
op|','
nl|'\n'
name|'DiagFakeDomain'
op|'('
string|'"instance0000002"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fake_disks'
op|'='
op|'{'
string|"'instance0000001'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'10653532160'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'instance0000002'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'raw'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'21474836480'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|side_effect
name|'def'
name|'side_effect'
op|'('
name|'name'
op|','
name|'dom'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
op|'=='
string|"'instance0000001'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EACCES'
op|','
string|"'Permission denied'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'name'
op|'=='
string|"'instance0000002'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fake_disks'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'get_disk_info'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'get_disk_info'
op|'.'
name|'side_effect'
op|'='
name|'side_effect'
newline|'\n'
name|'drvr'
op|'.'
name|'_get_instance_disk_info'
op|'='
name|'get_disk_info'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'drvr'
op|'.'
name|'_get_disk_over_committed_size_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'21474836480'
op|','
name|'result'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'name'
op|'='
string|"'foo'"
op|')'
op|']'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|'"_get_instance_disk_info"'
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'VolumeBDMPathNotFound'
op|'('
name|'path'
op|'='
string|"'bar'"
op|')'
op|')'
newline|'\n'
DECL|member|test_disk_over_committed_size_total_bdm_not_found
name|'def'
name|'test_disk_over_committed_size_total_bdm_not_found'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_get_disk_info'
op|','
nl|'\n'
name|'mock_list_domains'
op|')'
op|':'
newline|'\n'
comment|'# Tests that we handle VolumeBDMPathNotFound gracefully.'
nl|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'drvr'
op|'.'
name|'_get_disk_over_committed_size_total'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cpu_info
dedent|''
name|'def'
name|'test_cpu_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_host_capabilities_stub
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'model'
op|'='
string|'"Opteron_G4"'
newline|'\n'
name|'cpu'
op|'.'
name|'vendor'
op|'='
string|'"AMD"'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'cores'
op|'='
number|'2'
newline|'\n'
name|'cpu'
op|'.'
name|'threads'
op|'='
number|'1'
newline|'\n'
name|'cpu'
op|'.'
name|'sockets'
op|'='
number|'4'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'add_feature'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCPUFeature'
op|'('
string|'"extapic"'
op|')'
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'add_feature'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCPUFeature'
op|'('
string|'"3dnow"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|'"kvm"'
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'I686'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|'"kvm"'
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'want'
op|'='
op|'{'
string|'"vendor"'
op|':'
string|'"AMD"'
op|','
nl|'\n'
string|'"features"'
op|':'
name|'set'
op|'('
op|'['
string|'"extapic"'
op|','
string|'"3dnow"'
op|']'
op|')'
op|','
nl|'\n'
string|'"model"'
op|':'
string|'"Opteron_G4"'
op|','
nl|'\n'
string|'"arch"'
op|':'
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
number|'2'
op|','
string|'"threads"'
op|':'
number|'1'
op|','
string|'"sockets"'
op|':'
number|'4'
op|'}'
op|'}'
newline|'\n'
name|'got'
op|'='
name|'drvr'
op|'.'
name|'_get_cpu_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want'
op|','
name|'got'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pcidev_info
dedent|''
name|'def'
name|'test_get_pcidev_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_nodeDeviceLookupByName
indent|'        '
name|'def'
name|'fake_nodeDeviceLookupByName'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeNodeDevice'
op|'('
name|'_fake_NodeDevXml'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'device_lookup_by_name'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'device_lookup_by_name'
op|'='
name|'fake_nodeDeviceLookupByName'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actualvf'
op|'='
name|'drvr'
op|'.'
name|'_get_pcidev_info'
op|'('
string|'"pci_0000_04_00_3"'
op|')'
newline|'\n'
name|'expect_vf'
op|'='
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:00.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"numa_node"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"label"'
op|':'
string|"'label_8086_1521'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expect_vf'
op|','
name|'actualvf'
op|')'
newline|'\n'
name|'actualvf'
op|'='
name|'drvr'
op|'.'
name|'_get_pcidev_info'
op|'('
string|'"pci_0000_04_10_7"'
op|')'
newline|'\n'
name|'expect_vf'
op|'='
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_10_7"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"numa_node"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"label"'
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
string|"'0000:04:00.3'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expect_vf'
op|','
name|'actualvf'
op|')'
newline|'\n'
name|'actualvf'
op|'='
name|'drvr'
op|'.'
name|'_get_pcidev_info'
op|'('
string|'"pci_0000_04_11_7"'
op|')'
newline|'\n'
name|'expect_vf'
op|'='
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_11_7"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:11.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"numa_node"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"label"'
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
string|"'0000:04:00.3'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expect_vf'
op|','
name|'actualvf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_devices_not_supported
dedent|''
name|'def'
name|'test_list_devices_not_supported'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# Handle just the NO_SUPPORT error'
nl|'\n'
name|'not_supported_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'this function is not supported by the connection driver:'"
nl|'\n'
string|"' virNodeNumOfDevices'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_SUPPORT'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
string|"'listDevices'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'not_supported_exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[]'"
op|','
name|'drvr'
op|'.'
name|'_get_pci_passthrough_devices'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# We cache not supported status to avoid emitting too many logging'
nl|'\n'
comment|'# messages. Clear this value to test the other exception case.'
nl|'\n'
dedent|''
name|'del'
name|'drvr'
op|'.'
name|'_list_devices_supported'
newline|'\n'
nl|'\n'
comment|'# Other errors should not be caught'
nl|'\n'
name|'other_exc'
op|'='
name|'fakelibvirt'
op|'.'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
string|"'other exc'"
op|','
nl|'\n'
name|'error_code'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
string|"'listDevices'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'other_exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_get_pci_passthrough_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pci_passthrough_devices
dedent|''
dedent|''
name|'def'
name|'test_get_pci_passthrough_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fakelistDevices
indent|'        '
name|'def'
name|'fakelistDevices'
op|'('
name|'caps'
op|','
name|'fakeargs'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|"'pci_0000_04_00_3'"
op|','
string|"'pci_0000_04_10_7'"
op|','
nl|'\n'
string|"'pci_0000_04_11_7'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDevices'
op|'='
name|'fakelistDevices'
newline|'\n'
nl|'\n'
DECL|function|fake_nodeDeviceLookupByName
name|'def'
name|'fake_nodeDeviceLookupByName'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeNodeDevice'
op|'('
name|'_fake_NodeDevXml'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'device_lookup_by_name'"
op|')'
newline|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'device_lookup_by_name'
op|'='
name|'fake_nodeDeviceLookupByName'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actjson'
op|'='
name|'drvr'
op|'.'
name|'_get_pci_passthrough_devices'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expectvfs'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:00.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"numa_node"'
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_10_7"'
op|','
nl|'\n'
string|'"domain"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"numa_node"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
op|'['
op|'('
string|"'0x0000'"
op|','
string|"'0x04'"
op|','
string|"'0x00'"
op|','
string|"'0x3'"
op|')'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_11_7"'
op|','
nl|'\n'
string|'"domain"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:11.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"numa_node"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
op|'['
op|'('
string|"'0x0000'"
op|','
string|"'0x04'"
op|','
string|"'0x00'"
op|','
string|"'0x3'"
op|')'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'actualvfs'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'actjson'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'actualvfs'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'actualvfs'
op|'['
name|'dev'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'key'
name|'not'
name|'in'
op|'['
string|"'phys_function'"
op|','
string|"'virt_functions'"
op|','
string|"'label'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expectvfs'
op|'['
name|'dev'
op|']'
op|'['
name|'key'
op|']'
op|','
name|'actualvfs'
op|'['
name|'dev'
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_caps_numa_topology
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_fake_caps_numa_topology'
op|'('
name|'self'
op|','
nl|'\n'
name|'cells_per_host'
op|'='
number|'4'
op|','
nl|'\n'
name|'sockets_per_cell'
op|'='
number|'1'
op|','
nl|'\n'
name|'cores_per_socket'
op|'='
number|'1'
op|','
nl|'\n'
name|'threads_per_core'
op|'='
number|'2'
op|','
nl|'\n'
name|'kb_mem'
op|'='
number|'1048576'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Generate mempages list per cell'
nl|'\n'
indent|'        '
name|'cell_mempages'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cellid'
name|'in'
name|'range'
op|'('
name|'cells_per_host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mempages_0'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsNUMAPages'
op|'('
op|')'
newline|'\n'
name|'mempages_0'
op|'.'
name|'size'
op|'='
number|'4'
newline|'\n'
name|'mempages_0'
op|'.'
name|'total'
op|'='
number|'1024'
op|'*'
name|'cellid'
newline|'\n'
nl|'\n'
name|'mempages_1'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsNUMAPages'
op|'('
op|')'
newline|'\n'
name|'mempages_1'
op|'.'
name|'size'
op|'='
number|'2048'
newline|'\n'
name|'mempages_1'
op|'.'
name|'total'
op|'='
number|'0'
op|'+'
name|'cellid'
newline|'\n'
nl|'\n'
name|'cell_mempages'
op|'.'
name|'append'
op|'('
op|'['
name|'mempages_0'
op|','
name|'mempages_1'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'topology'
op|'='
name|'fakelibvirt'
op|'.'
name|'HostInfo'
op|'.'
name|'_gen_numa_topology'
op|'('
name|'cells_per_host'
op|','
nl|'\n'
name|'sockets_per_cell'
op|','
nl|'\n'
name|'cores_per_socket'
op|','
nl|'\n'
name|'threads_per_core'
op|','
nl|'\n'
name|'kb_mem'
op|'='
name|'kb_mem'
op|','
nl|'\n'
name|'numa_mempages_list'
op|'='
name|'cell_mempages'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'topology'
newline|'\n'
nl|'\n'
DECL|member|_test_get_host_numa_topology
dedent|''
name|'def'
name|'_test_get_host_numa_topology'
op|'('
name|'self'
op|','
name|'mempages'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'self'
op|'.'
name|'_fake_caps_numa_topology'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'expected_topo_dict'
op|'='
op|'{'
string|"'cells'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'cpus'"
op|':'
string|"'0,1'"
op|','
string|"'cpu_usage'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mem'"
op|':'
op|'{'
string|"'total'"
op|':'
number|'256'
op|','
string|"'used'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cpus'"
op|':'
string|"'3'"
op|','
string|"'cpu_usage'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mem'"
op|':'
op|'{'
string|"'total'"
op|':'
number|'256'
op|','
string|"'used'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cpus'"
op|':'
string|"''"
op|','
string|"'cpu_usage'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mem'"
op|':'
op|'{'
string|"'total'"
op|':'
number|'256'
op|','
string|"'used'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cpus'"
op|':'
string|"''"
op|','
string|"'cpu_usage'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mem'"
op|':'
op|'{'
string|"'total'"
op|':'
number|'256'
op|','
string|"'used'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'3'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'hardware'
op|','
string|"'get_vcpu_pin_set'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_online_cpus'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'6'
op|']'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_topo'
op|'='
name|'drvr'
op|'.'
name|'_get_host_numa_topology'
op|'('
op|')'
newline|'\n'
name|'got_topo_dict'
op|'='
name|'got_topo'
op|'.'
name|'_to_dict'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
name|'expected_topo_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'got_topo_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'mempages'
op|':'
newline|'\n'
comment|'# cells 0'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'mempages'
op|'['
number|'0'
op|']'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'mempages'
op|'['
number|'0'
op|']'
op|'.'
name|'total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2048'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'mempages'
op|'['
number|'1'
op|']'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'mempages'
op|'['
number|'1'
op|']'
op|'.'
name|'total'
op|')'
newline|'\n'
comment|'# cells 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'mempages'
op|'['
number|'0'
op|']'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1024'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'mempages'
op|'['
number|'0'
op|']'
op|'.'
name|'total'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2048'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'mempages'
op|'['
number|'1'
op|']'
op|'.'
name|'size_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'mempages'
op|'['
number|'1'
op|']'
op|'.'
name|'total'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'mempages'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'mempages'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_topo_dict'
op|','
name|'got_topo_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'pinned_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'pinned_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'2'
op|']'
op|'.'
name|'pinned_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|']'
op|')'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'3'
op|']'
op|'.'
name|'pinned_cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'set'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
op|']'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'siblings'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'got_topo'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'siblings'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_get_host_numa_topology
name|'def'
name|'test_get_host_numa_topology'
op|'('
name|'self'
op|','
name|'mock_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_host_numa_topology'
op|'('
name|'mempages'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getType'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getVersion'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|')'
newline|'\n'
DECL|member|test_get_host_numa_topology_no_mempages
name|'def'
name|'test_get_host_numa_topology_no_mempages'
op|'('
name|'self'
op|','
name|'mock_lib_version'
op|','
nl|'\n'
name|'mock_version'
op|','
name|'mock_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'mock_lib_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_HUGEPAGE_VERSION'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
newline|'\n'
name|'mock_type'
op|'.'
name|'return_value'
op|'='
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_host_numa_topology'
op|'('
name|'mempages'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_numa_topology_empty
dedent|''
name|'def'
name|'test_get_host_numa_topology_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'topology'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'has_min_version'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'caps'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'has_min_version'
op|','
name|'get_caps'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'drvr'
op|'.'
name|'_get_host_numa_topology'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'get_caps'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getType'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getVersion'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|')'
newline|'\n'
DECL|member|test_get_host_numa_topology_old_version
name|'def'
name|'test_get_host_numa_topology_old_version'
op|'('
name|'self'
op|','
name|'mock_lib_version'
op|','
nl|'\n'
name|'mock_version'
op|','
name|'mock_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'kvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lib_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
newline|'\n'
name|'mock_type'
op|'.'
name|'return_value'
op|'='
name|'host'
op|'.'
name|'HV_DRIVER_QEMU'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'drvr'
op|'.'
name|'_get_host_numa_topology'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getType'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getVersion'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|'.'
name|'Connection'
op|','
string|"'getLibVersion'"
op|')'
newline|'\n'
DECL|member|test_get_host_numa_topology_xen
name|'def'
name|'test_get_host_numa_topology_xen'
op|'('
name|'self'
op|','
name|'mock_lib_version'
op|','
nl|'\n'
name|'mock_version'
op|','
name|'mock_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'xen'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lib_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_LIBVIRT_NUMA_VERSION'
op|')'
newline|'\n'
name|'mock_version'
op|'.'
name|'return_value'
op|'='
name|'utils'
op|'.'
name|'convert_version_to_int'
op|'('
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'MIN_QEMU_NUMA_HUGEPAGE_VERSION'
op|')'
newline|'\n'
name|'mock_type'
op|'.'
name|'return_value'
op|'='
name|'host'
op|'.'
name|'HV_DRIVER_XEN'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'drvr'
op|'.'
name|'_get_host_numa_topology'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_vcpus_exception
dedent|''
name|'def'
name|'test_diagnostic_vcpus_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'vcpus missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408'
op|','
number|'82'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160'
op|','
string|"'rss'"
op|':'
number|'200164'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'vda_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'diags_time'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|'{'
string|"'mac_address'"
op|':'
string|"'52:54:00:a4:38:38'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_blockstats_exception
dedent|''
name|'def'
name|'test_diagnostic_blockstats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'blockStats missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408'
op|','
number|'82'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160'
op|','
string|"'rss'"
op|':'
number|'200164'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'diags_time'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|'{'
string|"'time'"
op|':'
number|'15340000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1640000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'3040000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1420000000'
op|'}'
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|'{'
string|"'mac_address'"
op|':'
string|"'52:54:00:a4:38:38'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_interfacestats_exception
dedent|''
name|'def'
name|'test_diagnostic_interfacestats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'interfaceStat missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160'
op|','
string|"'rss'"
op|':'
number|'200164'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'diags_time'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|'{'
string|"'time'"
op|':'
number|'15340000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1640000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'3040000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1420000000'
op|'}'
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_memorystats_exception
dedent|''
name|'def'
name|'test_diagnostic_memorystats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408'
op|','
number|'82'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'memoryStats missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'diags_time'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|'{'
string|"'time'"
op|':'
number|'15340000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1640000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'3040000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1420000000'
op|'}'
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|'{'
string|"'mac_address'"
op|':'
string|"'52:54:00:a4:38:38'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_full
dedent|''
name|'def'
name|'test_diagnostic_full'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408'
op|','
number|'82'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160'
op|','
string|"'rss'"
op|':'
number|'200164'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'diags_time'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|'{'
string|"'time'"
op|':'
number|'15340000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1640000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'3040000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1420000000'
op|'}'
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|'{'
string|"'mac_address'"
op|':'
string|"'52:54:00:a4:38:38'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'timeutils'
op|','
string|"'utcnow'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|test_diagnostic_full_with_multiple_interfaces
name|'def'
name|'test_diagnostic_full_with_multiple_interfaces'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
nl|'\n'
name|'mock_utcnow'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                        <interface type="bridge">\n                            <mac address="53:55:00:a5:39:39"/>\n                            <model type="virtio"/>\n                            <target dev="br0"/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408'
op|','
number|'82'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160'
op|','
string|"'rss'"
op|':'
number|'200164'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_get_domain'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_domain'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_rx'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'br0_rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'br0_tx'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'br0_tx_packets'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'lt'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
name|'diags_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'mock_utcnow'
op|'.'
name|'return_value'
op|'='
name|'diags_time'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'lt'
newline|'\n'
name|'actual'
op|'='
name|'drvr'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|'{'
string|"'time'"
op|':'
number|'15340000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1640000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'3040000000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'time'"
op|':'
number|'1420000000'
op|'}'
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'errors_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'read_bytes'"
op|':'
number|'688640'
op|','
nl|'\n'
string|"'read_requests'"
op|':'
number|'169'
op|','
nl|'\n'
string|"'write_bytes'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'write_requests'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'maximum'"
op|':'
number|'2048'
op|','
string|"'used'"
op|':'
number|'1234'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|'{'
string|"'mac_address'"
op|':'
string|"'52:54:00:a4:38:38'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'mac_address'"
op|':'
string|"'53:55:00:a5:39:39'"
op|','
nl|'\n'
string|"'rx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rx_octets'"
op|':'
number|'4408'
op|','
nl|'\n'
string|"'rx_packets'"
op|':'
number|'82'
op|','
nl|'\n'
string|"'tx_drop'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_errors'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_octets'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'tx_packets'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'10.'
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_failing_vcpu_count
name|'def'
name|'test_failing_vcpu_count'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Domain can fail to return the vcpu description in case it\'s\n        just starting up or shutting down. Make sure None is handled\n        gracefully.\n        """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'vcpus'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_vcpus'
op|'='
name|'vcpus'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'_vcpus'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"fake-error"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
op|'['
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|']'
op|'*'
name|'self'
op|'.'
name|'_vcpus'
op|','
op|'['
name|'True'
op|']'
op|'*'
name|'self'
op|'.'
name|'_vcpus'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"instance000001"'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"19479fee-07a5-49bb-9138-d3738280d63c"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
name|'DiagFakeDomain'
op|'('
name|'None'
op|')'
op|','
name|'DiagFakeDomain'
op|'('
number|'5'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'drvr'
op|'.'
name|'_get_vcpu_used'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"list_instance_domains"'
op|')'
newline|'\n'
DECL|member|test_failing_vcpu_count_none
name|'def'
name|'test_failing_vcpu_count_none'
op|'('
name|'self'
op|','
name|'mock_list'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Domain will return zero if the current number of vcpus used\n        is None. This is in case of VM state starting up or shutting\n        down. None type returned is counted as zero.\n        """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"instance000001"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_list'
op|'.'
name|'return_value'
op|'='
op|'['
name|'DiagFakeDomain'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'drvr'
op|'.'
name|'_get_vcpu_used'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_list'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_capabilities
dedent|''
name|'def'
name|'test_get_instance_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_host_capabilities_stub
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
string|"'hvm'"
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|"'kvm'"
op|','
string|"'qemu'"
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
string|"'hvm'"
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
name|'arch'
op|'.'
name|'I686'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|"'kvm'"
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'want'
op|'='
op|'['
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|','
string|"'kvm'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|','
string|"'qemu'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
string|"'kvm'"
op|','
string|"'hvm'"
op|')'
op|']'
newline|'\n'
name|'got'
op|'='
name|'drvr'
op|'.'
name|'_get_instance_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want'
op|','
name|'got'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode
dedent|''
name|'def'
name|'test_set_cache_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=directsync'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuestDisk'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'source_type'
op|'='
string|"'file'"
newline|'\n'
name|'drvr'
op|'.'
name|'_set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|','
string|"'directsync'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode_invalid_mode
dedent|''
name|'def'
name|'test_set_cache_mode_invalid_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=FAKE'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuestDisk'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'source_type'
op|'='
string|"'file'"
newline|'\n'
name|'drvr'
op|'.'
name|'_set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode_invalid_object
dedent|''
name|'def'
name|'test_set_cache_mode_invalid_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=directsync'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuest'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'driver_cache'
op|'='
string|"'fake'"
newline|'\n'
name|'drvr'
op|'.'
name|'_set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.unlink'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
DECL|member|_test_shared_storage_detection
name|'def'
name|'_test_shared_storage_detection'
op|'('
name|'self'
op|','
name|'is_same'
op|','
nl|'\n'
name|'mock_exists'
op|','
name|'mock_unlink'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'get_host_ip_addr'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'return_value'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'return_value'
op|'='
name|'is_same'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.ssh_execute'"
op|')'
name|'as'
name|'mock_ssh_method'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'drvr'
op|'.'
name|'_is_storage_shared_with'
op|'('
string|"'foo'"
op|','
string|"'/path'"
op|')'
newline|'\n'
dedent|''
name|'mock_ssh_method'
op|'.'
name|'assert_any_call'
op|'('
string|"'foo'"
op|','
string|"'touch'"
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'if'
name|'is_same'
op|':'
newline|'\n'
indent|'            '
name|'mock_unlink'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_ssh_method'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'mock_ssh_method'
op|'.'
name|'assert_called_with'
op|'('
string|"'foo'"
op|','
string|"'rm'"
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_same_host
dedent|''
name|'def'
name|'test_shared_storage_detection_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_test_shared_storage_detection'
op|'('
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_different_host
dedent|''
name|'def'
name|'test_shared_storage_detection_different_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_shared_storage_detection'
op|'('
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_easy
dedent|''
name|'def'
name|'test_shared_storage_detection_easy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|','
string|"'get_host_ip_addr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'unlink'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'_is_storage_shared_with'
op|'('
string|"'foo'"
op|','
string|"'/path'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_pid_remove_pid
dedent|''
name|'def'
name|'test_store_pid_remove_pid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'popen'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'pid'
op|'='
number|'3'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'add_job'
op|'('
name|'instance'
op|','
name|'popen'
op|'.'
name|'pid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
number|'3'
op|','
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'jobs'
op|'['
name|'instance'
op|'.'
name|'uuid'
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'remove_job'
op|'('
name|'instance'
op|','
name|'popen'
op|'.'
name|'pid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|','
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'jobs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_domain'"
op|')'
newline|'\n'
DECL|member|test_get_domain_info_with_more_return
name|'def'
name|'test_get_domain_info_with_more_return'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dom_mock'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'dom_mock'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
number|'1'
op|','
number|'2048'
op|','
number|'737'
op|','
number|'8'
op|','
number|'12345'
op|','
number|'888888'
nl|'\n'
op|']'
newline|'\n'
name|'dom_mock'
op|'.'
name|'ID'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_id'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'dom_mock'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'drvr'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'info'
op|'.'
name|'state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2048'
op|','
name|'info'
op|'.'
name|'max_mem_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'737'
op|','
name|'info'
op|'.'
name|'mem_kb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8'
op|','
name|'info'
op|'.'
name|'num_cpu'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'12345'
op|','
name|'info'
op|'.'
name|'cpu_time_ns'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'instance_id'
op|','
name|'info'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'dom_mock'
op|'.'
name|'info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'dom_mock'
op|'.'
name|'ID'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain
dedent|''
name|'def'
name|'test_create_domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_domain'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'drvr'
op|'.'
name|'_create_domain'
op|'('
name|'domain'
op|'='
name|'mock_domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_domain'
op|','
name|'guest'
op|'.'
name|'_domain'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'createWithFlags'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'0'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.clean_lxc_namespace'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.setup_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_utils.fileutils.ensure_tree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_create_domain_lxc
name|'def'
name|'test_create_domain_lxc'
op|'('
name|'self'
op|','
name|'mock_get_inst_path'
op|','
name|'mock_ensure_tree'
op|','
nl|'\n'
name|'mock_setup_container'
op|','
name|'mock_get_info'
op|','
name|'mock_clean'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst_sys_meta'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'mock_instance'
op|'.'
name|'system_metadata'
op|'='
name|'inst_sys_meta'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'return_value'
op|'='
string|"'/tmp/'"
newline|'\n'
name|'mock_image_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'='
name|'mock_image_backend'
newline|'\n'
name|'mock_image'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_image'
op|'.'
name|'path'
op|'='
string|"'/tmp/test.img'"
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'return_value'
op|'='
name|'mock_image'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'return_value'
op|'='
string|"'/dev/nbd0'"
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_is_booted_from_volume'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'setup_basic_filtering'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'prepare_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'apply_instance_filter'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'xml'"
op|','
nl|'\n'
name|'mock_instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/nbd0'"
op|','
name|'inst_sys_meta'
op|'['
string|"'rootfs_device_name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_ensure_tree'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/rootfs'"
op|')'
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_cow_images'
op|':'
newline|'\n'
indent|'            '
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
newline|'\n'
nl|'\n'
dedent|''
name|'setup_container_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|"'/tmp/test.img'"
op|','
name|'fmt'
op|')'
op|','
nl|'\n'
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'setup_container_call'
op|']'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_clean'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.clean_lxc_namespace'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'chown_for_id_maps'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.setup_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_utils.fileutils.ensure_tree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_create_domain_lxc_id_maps
name|'def'
name|'test_create_domain_lxc_id_maps'
op|'('
name|'self'
op|','
name|'mock_get_inst_path'
op|','
nl|'\n'
name|'mock_ensure_tree'
op|','
name|'mock_setup_container'
op|','
nl|'\n'
name|'mock_chown'
op|','
name|'mock_get_info'
op|','
name|'mock_clean'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'uid_maps'
op|'='
op|'['
string|'"0:1000:100"'
op|']'
op|','
nl|'\n'
name|'gid_maps'
op|'='
op|'['
string|'"0:1000:100"'
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|chown_side_effect
name|'def'
name|'chown_side_effect'
op|'('
name|'path'
op|','
name|'id_maps'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/tmp/rootfs'"
op|','
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'id_maps'
op|'['
number|'0'
op|']'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'id_maps'
op|'['
number|'0'
op|']'
op|'.'
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1000'
op|','
name|'id_maps'
op|'['
number|'0'
op|']'
op|'.'
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'100'
op|','
name|'id_maps'
op|'['
number|'0'
op|']'
op|'.'
name|'count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'id_maps'
op|'['
number|'1'
op|']'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1000'
op|','
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'100'
op|','
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst_sys_meta'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'mock_instance'
op|'.'
name|'system_metadata'
op|'='
name|'inst_sys_meta'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'return_value'
op|'='
string|"'/tmp/'"
newline|'\n'
name|'mock_image_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'='
name|'mock_image_backend'
newline|'\n'
name|'mock_image'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_image'
op|'.'
name|'path'
op|'='
string|"'/tmp/test.img'"
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'return_value'
op|'='
name|'mock_image'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'return_value'
op|'='
string|"'/dev/nbd0'"
newline|'\n'
name|'mock_chown'
op|'.'
name|'side_effect'
op|'='
name|'chown_side_effect'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_is_booted_from_volume'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'setup_basic_filtering'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'prepare_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'apply_instance_filter'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'xml'"
op|','
nl|'\n'
name|'mock_instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/nbd0'"
op|','
name|'inst_sys_meta'
op|'['
string|"'rootfs_device_name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_ensure_tree'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/rootfs'"
op|')'
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_cow_images'
op|':'
newline|'\n'
indent|'            '
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
newline|'\n'
nl|'\n'
dedent|''
name|'setup_container_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|"'/tmp/test.img'"
op|','
name|'fmt'
op|')'
op|','
nl|'\n'
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'setup_container_call'
op|']'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_clean'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.teardown_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.setup_container'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'oslo_utils.fileutils.ensure_tree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_create_domain_lxc_not_running
name|'def'
name|'test_create_domain_lxc_not_running'
op|'('
name|'self'
op|','
name|'mock_get_inst_path'
op|','
nl|'\n'
name|'mock_ensure_tree'
op|','
nl|'\n'
name|'mock_setup_container'
op|','
nl|'\n'
name|'mock_get_info'
op|','
name|'mock_teardown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'mock_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'inst_sys_meta'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'mock_instance'
op|'.'
name|'system_metadata'
op|'='
name|'inst_sys_meta'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'return_value'
op|'='
string|"'/tmp/'"
newline|'\n'
name|'mock_image_backend'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'='
name|'mock_image_backend'
newline|'\n'
name|'mock_image'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_image'
op|'.'
name|'path'
op|'='
string|"'/tmp/test.img'"
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'return_value'
op|'='
name|'mock_image'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'return_value'
op|'='
string|"'/dev/nbd0'"
newline|'\n'
name|'mock_get_info'
op|'.'
name|'return_value'
op|'='
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
nl|'\n'
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_images_and_backing'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_is_booted_from_volume'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'setup_basic_filtering'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'prepare_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'apply_instance_filter'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'xml'"
op|','
nl|'\n'
name|'mock_instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/nbd0'"
op|','
name|'inst_sys_meta'
op|'['
string|"'rootfs_device_name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_instance'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_get_inst_path'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_ensure_tree'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/rootfs'"
op|')'
op|']'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'image_backend'
op|'.'
name|'image'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_cow_images'
op|':'
newline|'\n'
indent|'            '
name|'fmt'
op|'='
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
newline|'\n'
nl|'\n'
dedent|''
name|'setup_container_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|"'/tmp/test.img'"
op|','
name|'fmt'
op|')'
op|','
nl|'\n'
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
newline|'\n'
name|'mock_setup_container'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'setup_container_call'
op|']'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'mock_instance'
op|')'
op|']'
op|')'
newline|'\n'
name|'teardown_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'container_dir'
op|'='
string|"'/tmp/rootfs'"
op|')'
newline|'\n'
name|'mock_teardown'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'teardown_call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_define_xml_fails
dedent|''
name|'def'
name|'test_create_domain_define_xml_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the xml is logged when defining the domain fails."""'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
nl|'\n'
DECL|function|fake_defineXML
name|'def'
name|'fake_defineXML'
op|'('
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_xml'
op|','
name|'xml'
op|')'
newline|'\n'
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'virDomainDefineXML() failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_safe_decode
dedent|''
name|'def'
name|'fake_safe_decode'
op|'('
name|'text'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'text'
op|'+'
string|"'safe decoded'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|'%'
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'safe decoded'"
op|','
name|'msg'
op|'%'
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'encodeutils'
op|','
string|"'safe_decode'"
op|','
name|'fake_safe_decode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'defineXML'
op|'='
name|'fake_defineXML'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
name|'drvr'
op|'.'
name|'_create_domain'
op|','
nl|'\n'
name|'fake_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_with_flags_fails
dedent|''
name|'def'
name|'test_create_domain_with_flags_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the xml is logged when creating the domain with flags\n        fails\n        """'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
name|'fake_domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_createWithFlags
name|'def'
name|'fake_createWithFlags'
op|'('
name|'launch_flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'virDomainCreateWithFlags() failed'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|'%'
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_domain'
op|','
string|"'createWithFlags'"
op|','
name|'fake_createWithFlags'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|','
name|'drvr'
op|'.'
name|'_create_domain'
op|','
nl|'\n'
name|'domain'
op|'='
name|'fake_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_enable_hairpin_fails
dedent|''
name|'def'
name|'test_create_domain_enable_hairpin_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the xml is logged when enabling hairpin mode for the\n        domain fails.\n        """'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
name|'fake_domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_interfaces
dedent|''
name|'def'
name|'fake_get_interfaces'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|'"dev"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|'%'
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'Guest'
op|','
string|"'get_interfaces'"
op|','
nl|'\n'
name|'fake_get_interfaces'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_create_domain'
op|','
nl|'\n'
name|'domain'
op|'='
name|'fake_domain'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console
dedent|''
name|'def'
name|'test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<graphics type=\'vnc\' port=\'5900\'/>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'vnc_dict'
op|'='
name|'drvr'
op|'.'
name|'get_vnc_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vnc_dict'
op|'.'
name|'port'
op|','
string|"'5900'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_unavailable
dedent|''
name|'def'
name|'test_get_vnc_console_unavailable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices></devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'get_vnc_console'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_spice_console
dedent|''
name|'def'
name|'test_get_spice_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<graphics type=\'spice\' port=\'5950\'/>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'spice_dict'
op|'='
name|'drvr'
op|'.'
name|'get_spice_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spice_dict'
op|'.'
name|'port'
op|','
string|"'5950'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_spice_console_unavailable
dedent|''
name|'def'
name|'test_get_spice_console_unavailable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices></devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'get_spice_console'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume_with_instance_not_found
dedent|''
name|'def'
name|'test_detach_volume_with_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that detach_volume() method does not raise exception,'
nl|'\n'
comment|'# if the instance does not exist.'
nl|'\n'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'name'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_disconnect_volume'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_get_domain'
op|','
name|'_disconnect_volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'instance'
op|','
string|"'/dev/sda'"
op|')'
newline|'\n'
name|'_get_domain'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'_disconnect_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'connection_info'
op|','
nl|'\n'
string|"'sda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_attach_detach_interface_get_config
dedent|''
dedent|''
name|'def'
name|'_test_attach_detach_interface_get_config'
op|'('
name|'self'
op|','
name|'method_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the get_config() method is properly called in\n        attach_interface() and detach_interface().\n\n        method_name: either \\"attach_interface\\" or \\"detach_interface\\"\n                     depending on the method to test.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|','
name|'lambda'
name|'a'
op|','
name|'b'
op|':'
name|'FakeVirtDomain'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'method_name'
op|'=='
string|'"attach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'method_name'
op|'=='
string|'"detach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Unhandled method %s"'
op|'%'
name|'method_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'method_name'
op|'=='
string|'"attach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'firewall_driver'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected'
op|'='
name|'drvr'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fake_image_meta'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'get_flavor'
op|'('
op|')'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drvr'
op|'.'
name|'vif_driver'
op|','
string|"'get_config'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fake_image_meta'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'method_name'
op|'=='
string|'"attach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'attach_interface'
op|'('
name|'instance'
op|','
name|'fake_image_meta'
op|','
nl|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'method_name'
op|'=='
string|'"detach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'detach_interface'
op|'('
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Unhandled method %s"'
op|'%'
name|'method_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'lockutils'
op|','
string|'"external_lock"'
op|')'
newline|'\n'
DECL|member|test_attach_interface_get_config
name|'def'
name|'test_attach_interface_get_config'
op|'('
name|'self'
op|','
name|'mock_lock'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the get_config() method is properly called in\n        attach_interface().\n        """'
newline|'\n'
name|'mock_lock'
op|'.'
name|'return_value'
op|'='
name|'threading'
op|'.'
name|'Semaphore'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_attach_detach_interface_get_config'
op|'('
string|'"attach_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_get_config
dedent|''
name|'def'
name|'test_detach_interface_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that the get_config() method is properly called in\n        detach_interface().\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_test_attach_detach_interface_get_config'
op|'('
string|'"detach_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_root_device_name
dedent|''
name|'def'
name|'test_default_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_instance'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'root_bdm'
op|'='
op|'{'
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'detination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'image_id'"
op|':'
string|"'fake_id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'fake_libvirt_type'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'blockinfo'
op|','
string|"'get_disk_bus_for_device_type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'blockinfo'
op|','
string|"'get_root_info'"
op|')'
newline|'\n'
nl|'\n'
name|'blockinfo'
op|'.'
name|'get_disk_bus_for_device_type'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'virtio'"
op|')'
newline|'\n'
name|'blockinfo'
op|'.'
name|'get_disk_bus_for_device_type'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
string|"'cdrom'"
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'ide'"
op|')'
newline|'\n'
name|'blockinfo'
op|'.'
name|'get_root_info'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
name|'root_bdm'
op|','
nl|'\n'
string|"'virtio'"
op|','
string|"'ide'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'dev'"
op|':'
string|"'vda'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'drvr'
op|'.'
name|'default_root_device_name'
op|'('
name|'instance'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'root_bdm'
op|')'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|'"get_image_from_system_metadata"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|','
string|'"save"'
op|')'
newline|'\n'
DECL|member|test_default_device_names_for_instance
name|'def'
name|'test_default_device_names_for_instance'
op|'('
name|'self'
op|','
name|'save_mock'
op|','
name|'mock_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'.'
name|'root_device_name'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'ephemerals'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'AnonFakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'vdb'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'swap'
op|'='
op|'['
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'AnonFakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'vdg'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'swap'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
name|'block_device_mapping'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'AnonFakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake-image-id'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdxx'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'scsi'"
op|'}'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'mock_meta'
op|'.'
name|'return_value'
op|'='
name|'image_meta'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'default_device_names_for_instance'
op|'('
name|'instance'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'root_device_name'
op|','
nl|'\n'
name|'ephemerals'
op|','
name|'swap'
op|','
nl|'\n'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ephemeral device name was correct so no changes'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/vdb'"
op|','
name|'ephemerals'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|')'
newline|'\n'
comment|'# Swap device name was incorrect so it was changed'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/vdc'"
op|','
name|'swap'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|')'
newline|'\n'
comment|'# Volume device name was changed too, taking the bus into account'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/sda'"
op|','
name|'block_device_mapping'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'save_mock'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_device_name_for_instance
dedent|''
name|'def'
name|'_test_get_device_name_for_instance'
op|'('
name|'self'
op|','
name|'new_bdm'
op|','
name|'expected_dev'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'root_device_name'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'instance'
op|'.'
name|'ephemeral_gb'
op|'='
number|'0'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'got_dev'
op|'='
name|'drvr'
op|'.'
name|'get_device_name_for_instance'
op|'('
nl|'\n'
name|'instance'
op|','
op|'['
op|']'
op|','
name|'new_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_dev'
op|','
name|'got_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_name_for_instance_simple
dedent|''
name|'def'
name|'test_get_device_name_for_instance_simple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'source_type'
op|'='
string|"'volume'"
op|','
name|'destination_type'
op|'='
string|"'volume'"
op|','
nl|'\n'
name|'boot_index'
op|'='
op|'-'
number|'1'
op|','
name|'volume_id'
op|'='
string|"'fake-id'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|','
name|'guest_format'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_bus'
op|'='
name|'None'
op|','
name|'device_type'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_device_name_for_instance'
op|'('
name|'new_bdm'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_name_for_instance_suggested
dedent|''
name|'def'
name|'test_get_device_name_for_instance_suggested'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'source_type'
op|'='
string|"'volume'"
op|','
name|'destination_type'
op|'='
string|"'volume'"
op|','
nl|'\n'
name|'boot_index'
op|'='
op|'-'
number|'1'
op|','
name|'volume_id'
op|'='
string|"'fake-id'"
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'/dev/vdg'"
op|','
name|'guest_format'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_bus'
op|'='
name|'None'
op|','
name|'device_type'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_device_name_for_instance'
op|'('
name|'new_bdm'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_name_for_instance_bus
dedent|''
name|'def'
name|'test_get_device_name_for_instance_bus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'source_type'
op|'='
string|"'volume'"
op|','
name|'destination_type'
op|'='
string|"'volume'"
op|','
nl|'\n'
name|'boot_index'
op|'='
op|'-'
number|'1'
op|','
name|'volume_id'
op|'='
string|"'fake-id'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|','
name|'guest_format'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_bus'
op|'='
string|"'scsi'"
op|','
name|'device_type'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_device_name_for_instance'
op|'('
name|'new_bdm'
op|','
string|"'/dev/sda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_name_for_instance_device_type
dedent|''
name|'def'
name|'test_get_device_name_for_instance_device_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
nl|'\n'
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'source_type'
op|'='
string|"'volume'"
op|','
name|'destination_type'
op|'='
string|"'volume'"
op|','
nl|'\n'
name|'boot_index'
op|'='
op|'-'
number|'1'
op|','
name|'volume_id'
op|'='
string|"'fake-id'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|','
name|'guest_format'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_bus'
op|'='
name|'None'
op|','
name|'device_type'
op|'='
string|"'floppy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_device_name_for_instance'
op|'('
name|'new_bdm'
op|','
string|"'/dev/fda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_supported_fs_format
dedent|''
name|'def'
name|'test_is_supported_fs_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'supported_fs'
op|'='
op|'['
name|'disk'
op|'.'
name|'FS_FORMAT_EXT2'
op|','
name|'disk'
op|'.'
name|'FS_FORMAT_EXT3'
op|','
nl|'\n'
name|'disk'
op|'.'
name|'FS_FORMAT_EXT4'
op|','
name|'disk'
op|'.'
name|'FS_FORMAT_XFS'
op|']'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'for'
name|'fs'
name|'in'
name|'supported_fs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'is_supported_fs_format'
op|'('
name|'fs'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'supported_fs'
op|'='
op|'['
string|"''"
op|','
string|"'dummy'"
op|']'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'for'
name|'fs'
name|'in'
name|'supported_fs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'is_supported_fs_format'
op|'('
name|'fs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_live_migration_at_destination_with_block_device_info
dedent|''
dedent|''
name|'def'
name|'test_post_live_migration_at_destination_with_block_device_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Preparing mocks'
nl|'\n'
indent|'        '
name|'mock_domain'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'fakelibvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'resultXML'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_getLibVersion
name|'def'
name|'fake_getLibVersion'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'9011'
newline|'\n'
nl|'\n'
DECL|function|fake_getCapabilities
dedent|''
name|'def'
name|'fake_getCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""\n            <capabilities>\n                <host>\n                    <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                    <cpu>\n                      <arch>x86_64</arch>\n                      <model>Penryn</model>\n                      <vendor>Intel</vendor>\n                      <topology sockets=\'1\' cores=\'2\' threads=\'1\'/>\n                      <feature name=\'xtpr\'/>\n                    </cpu>\n                </host>\n            </capabilities>\n            """'
newline|'\n'
nl|'\n'
DECL|function|fake_to_xml
dedent|''
name|'def'
name|'fake_to_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
name|'rescue'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'write_to_disk'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'image_meta'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance'
op|','
name|'network_info'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'rescue'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'resultXML'
op|'='
name|'conf'
op|'.'
name|'to_xml'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'resultXML'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_domain'
newline|'\n'
nl|'\n'
DECL|function|fake_baselineCPU
dedent|''
name|'def'
name|'fake_baselineCPU'
op|'('
name|'cpu'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""<cpu mode=\'custom\' match=\'exact\'>\n                        <model fallback=\'allow\'>Westmere</model>\n                        <vendor>Intel</vendor>\n                        <feature policy=\'require\' name=\'aes\'/>\n                      </cpu>\n                   """'
newline|'\n'
nl|'\n'
dedent|''
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'getLibVersion'
op|'='
name|'fake_getLibVersion'
op|','
nl|'\n'
name|'getCapabilities'
op|'='
name|'fake_getCapabilities'
op|','
nl|'\n'
name|'getVersion'
op|'='
name|'lambda'
op|':'
number|'1005001'
op|','
nl|'\n'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
op|','
nl|'\n'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'0'
op|','
nl|'\n'
name|'baselineCPU'
op|'='
name|'fake_baselineCPU'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
comment|'# we send an int to test sha1 call'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'drvr'
op|','
nl|'\n'
string|"'_get_guest_xml'"
op|','
nl|'\n'
name|'fake_to_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
nl|'\n'
string|"'get_domain'"
op|','
nl|'\n'
name|'fake_get_domain'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
nl|'\n'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'guest_format'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
name|'block_device_info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
op|'('
nl|'\n'
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_volume_save'
op|','
name|'mock_instance_save'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'post_live_migration_at_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'True'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'fake'"
op|','
name|'self'
op|'.'
name|'resultXML'
op|')'
newline|'\n'
name|'mock_volume_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_propagates_exceptions
dedent|''
dedent|''
name|'def'
name|'test_create_propagates_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'image_ref'
op|'='
string|"'my_fake_image'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain_setup_lxc'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain_cleanup_lxc'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_is_booted_from_volume'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'firewall_driver'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'NovaException'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'cleanup'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'xml'"
op|','
nl|'\n'
name|'instance'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_without_pause
dedent|''
dedent|''
name|'def'
name|'test_create_without_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|function|fake_lxc_disk_handler
name|'def'
name|'fake_lxc_disk_handler'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_lxc_disk_handler'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_lxc_disk_handler'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'firewall_driver'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'cleanup'"
op|')'
op|')'
name|'as'
op|'('
nl|'\n'
name|'_handler'
op|','
name|'cleanup'
op|','
name|'firewall_driver'
op|','
name|'create'
op|','
name|'plug_vifs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'='
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'xml'"
op|','
nl|'\n'
name|'instance'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'create'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'pause'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'domain'
op|'.'
name|'resume'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_with_network_events
dedent|''
dedent|''
name|'def'
name|'_test_create_with_network_events'
op|'('
name|'self'
op|','
name|'neutron_failure'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'generated_events'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|wait_timeout
name|'def'
name|'wait_timeout'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'event'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'if'
name|'neutron_failure'
op|'=='
string|"'timeout'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'eventlet'
op|'.'
name|'timeout'
op|'.'
name|'Timeout'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'neutron_failure'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                '
name|'event'
op|'.'
name|'status'
op|'='
string|"'failed'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'event'
op|'.'
name|'status'
op|'='
string|"'completed'"
newline|'\n'
dedent|''
name|'return'
name|'event'
newline|'\n'
nl|'\n'
DECL|function|fake_prepare
dedent|''
name|'def'
name|'fake_prepare'
op|'('
name|'instance'
op|','
name|'event_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'instance'
op|'='
name|'instance'
newline|'\n'
name|'m'
op|'.'
name|'event_name'
op|'='
name|'event_name'
newline|'\n'
name|'m'
op|'.'
name|'wait'
op|'.'
name|'side_effect'
op|'='
name|'wait_timeout'
newline|'\n'
name|'generated_events'
op|'.'
name|'append'
op|'('
name|'m'
op|')'
newline|'\n'
name|'return'
name|'m'
newline|'\n'
nl|'\n'
dedent|''
name|'virtapi'
op|'='
name|'manager'
op|'.'
name|'ComputeVirtAPI'
op|'('
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
newline|'\n'
name|'prepare'
op|'='
name|'virtapi'
op|'.'
name|'_compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
newline|'\n'
name|'prepare'
op|'.'
name|'side_effect'
op|'='
name|'fake_prepare'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'virtapi'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'vifs'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
string|"'vif1'"
op|','
string|"'active'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'vif2'"
op|','
string|"'active'"
op|':'
name|'False'
op|'}'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'firewall_driver'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'cleanup'"
op|')'
newline|'\n'
DECL|function|test_create
name|'def'
name|'test_create'
op|'('
name|'cleanup'
op|','
name|'create'
op|','
name|'fw_driver'
op|','
name|'plug_vifs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'='
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'xml'"
op|','
nl|'\n'
name|'instance'
op|','
name|'vifs'
op|','
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
name|'plug_vifs'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|','
name|'vifs'
op|')'
newline|'\n'
nl|'\n'
name|'pause'
op|'='
name|'self'
op|'.'
name|'_get_pause_flag'
op|'('
name|'drvr'
op|','
name|'vifs'
op|','
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pause'
op|','
nl|'\n'
name|'create'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'pause'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'pause'
op|':'
newline|'\n'
indent|'                '
name|'domain'
op|'.'
name|'resume'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'neutron_failure'
name|'and'
name|'CONF'
op|'.'
name|'vif_plugging_is_fatal'
op|':'
newline|'\n'
indent|'                '
name|'cleanup'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'='
name|'vifs'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'test_create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'utils'
op|'.'
name|'is_neutron'
op|'('
op|')'
name|'and'
name|'CONF'
op|'.'
name|'vif_plugging_timeout'
name|'and'
name|'power_on'
op|':'
newline|'\n'
indent|'            '
name|'prepare'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|','
string|"'network-vif-plugged-vif1'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'instance'
op|','
string|"'network-vif-plugged-vif2'"
op|')'
op|']'
op|')'
newline|'\n'
name|'for'
name|'event'
name|'in'
name|'generated_events'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'neutron_failure'
name|'and'
name|'generated_events'
op|'.'
name|'index'
op|'('
name|'event'
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'event'
op|'.'
name|'call_count'
op|')'
newline|'\n'
dedent|''
name|'elif'
op|'('
name|'neutron_failure'
op|'=='
string|"'error'"
name|'and'
nl|'\n'
name|'not'
name|'CONF'
op|'.'
name|'vif_plugging_is_fatal'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'event'
op|'.'
name|'wait'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'prepare'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron
name|'def'
name|'test_create_with_network_events_neutron'
op|'('
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_power_off
name|'def'
name|'test_create_with_network_events_neutron_power_off'
op|'('
name|'self'
op|','
nl|'\n'
name|'is_neutron'
op|')'
op|':'
newline|'\n'
comment|"# Tests that we don't wait for events if we don't start the instance."
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_nowait
name|'def'
name|'test_create_with_network_events_neutron_nowait'
op|'('
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'vif_plugging_timeout'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_failed_nonfatal_timeout
name|'def'
name|'test_create_with_network_events_neutron_failed_nonfatal_timeout'
op|'('
nl|'\n'
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'vif_plugging_is_fatal'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
name|'neutron_failure'
op|'='
string|"'timeout'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_failed_fatal_timeout
name|'def'
name|'test_create_with_network_events_neutron_failed_fatal_timeout'
op|'('
nl|'\n'
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|','
nl|'\n'
name|'neutron_failure'
op|'='
string|"'timeout'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_failed_nonfatal_error
name|'def'
name|'test_create_with_network_events_neutron_failed_nonfatal_error'
op|'('
nl|'\n'
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'vif_plugging_is_fatal'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
name|'neutron_failure'
op|'='
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_neutron_failed_fatal_error
name|'def'
name|'test_create_with_network_events_neutron_failed_fatal_error'
op|'('
nl|'\n'
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VirtualInterfaceCreateException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|','
nl|'\n'
name|'neutron_failure'
op|'='
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.is_neutron'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|member|test_create_with_network_events_non_neutron
name|'def'
name|'test_create_with_network_events_non_neutron'
op|'('
name|'self'
op|','
name|'is_neutron'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_network_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.volume.encryptors.get_encryption_metadata'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.blockinfo.get_info_from_bdm'"
op|')'
newline|'\n'
DECL|member|test_create_with_bdm
name|'def'
name|'test_create_with_bdm'
op|'('
name|'self'
op|','
name|'get_info_from_bdm'
op|','
name|'get_encryption_metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_encryption_meta'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'get_encryption_metadata'
op|'.'
name|'return_value'
op|'='
name|'mock_encryption_meta'
newline|'\n'
nl|'\n'
name|'fake_xml'
op|'='
string|'"""\n            <domain>\n                <name>instance-00000001</name>\n                <memory>1048576</memory>\n                <vcpu>1</vcpu>\n                <devices>\n                    <disk type=\'file\' device=\'disk\'>\n                        <driver name=\'qemu\' type=\'raw\' cache=\'none\'/>\n                        <source file=\'/path/fake-volume1\'/>\n                        <target dev=\'vda\' bus=\'virtio\'/>\n                    </disk>\n                </devices>\n            </domain>\n        """'
newline|'\n'
name|'fake_volume_id'
op|'='
string|'"fake-volume-id"'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"access_mode"'
op|':'
string|'"rw"'
op|','
nl|'\n'
string|'"volume_id"'
op|':'
name|'fake_volume_id'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_getitem
name|'def'
name|'fake_getitem'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_bdm'
op|'='
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/vda'"
op|'}'
newline|'\n'
name|'return'
name|'fake_bdm'
op|'.'
name|'get'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_volume'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_volume'
op|'.'
name|'__getitem__'
op|'.'
name|'side_effect'
op|'='
name|'fake_getitem'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
name|'mock_volume'
op|']'
op|'}'
newline|'\n'
name|'network_info'
op|'='
op|'['
name|'network_model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
string|"'1'"
op|')'
op|','
nl|'\n'
name|'network_model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
string|"'2'"
op|','
name|'active'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_encryptor'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'plug_vifs'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'setup_basic_filtering'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'prepare_instance_filter'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
string|"'apply_instance_filter'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'get_volume_encryptor'
op|','
name|'plug_vifs'
op|','
name|'setup_basic_filtering'
op|','
nl|'\n'
name|'prepare_instance_filter'
op|','
name|'create_domain'
op|','
name|'apply_instance_filter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'create_domain'
op|'.'
name|'return_value'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'mock_dom'
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'drvr'
op|'.'
name|'_create_domain_and_network'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_xml'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'get_encryption_metadata'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'_volume_api'
op|','
name|'fake_volume_id'
op|','
name|'connection_info'
op|')'
newline|'\n'
name|'get_volume_encryptor'
op|'.'
name|'assert_called_once_with'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'mock_encryption_meta'
op|')'
newline|'\n'
name|'plug_vifs'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'setup_basic_filtering'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'prepare_instance_filter'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'pause'
op|'='
name|'self'
op|'.'
name|'_get_pause_flag'
op|'('
name|'drvr'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'create_domain'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'fake_xml'
op|','
name|'pause'
op|'='
name|'pause'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_dom'
op|','
name|'guest'
op|'.'
name|'_domain'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_storage_config
dedent|''
dedent|''
name|'def'
name|'test_get_guest_storage_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"default_swap_device"'
op|']'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'test_instance'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'flavor'
op|'='
name|'instance'
op|'.'
name|'get_flavor'
op|'('
op|')'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
string|"'data'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
nl|'\n'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|')'
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
name|'bdm'
op|'='
name|'bdi'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'bdm'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'bdi'
op|')'
newline|'\n'
name|'mock_conf'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'source_path'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
nl|'\n'
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_connect_volume'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_volume_config'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_conf'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_set_cache_mode'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'volume_save'
op|','
name|'connect_volume'
op|','
name|'get_volume_config'
op|','
name|'set_cache_mode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'devices'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_storage_config'
op|'('
name|'instance'
op|','
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'False'
op|','
name|'bdi'
op|','
name|'flavor'
op|','
string|'"hvm"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/vdb'"
op|','
name|'instance'
op|'.'
name|'default_ephemeral_device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'default_swap_device'
op|')'
newline|'\n'
name|'connect_volume'
op|'.'
name|'assert_called_with'
op|'('
name|'bdm'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
string|"'type'"
op|':'
string|"'disk'"
op|','
string|"'dev'"
op|':'
string|"'vdc'"
op|'}'
op|')'
newline|'\n'
name|'get_volume_config'
op|'.'
name|'assert_called_with'
op|'('
name|'bdm'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
string|"'type'"
op|':'
string|"'disk'"
op|','
string|"'dev'"
op|':'
string|"'vdc'"
op|'}'
op|')'
newline|'\n'
name|'volume_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'set_cache_mode'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_neutron_events
dedent|''
dedent|''
name|'def'
name|'test_get_neutron_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
op|'['
name|'network_model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
string|"'1'"
op|')'
op|','
nl|'\n'
name|'network_model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
string|"'2'"
op|','
name|'active'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
name|'events'
op|'='
name|'drvr'
op|'.'
name|'_get_neutron_events'
op|'('
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
string|"'network-vif-plugged'"
op|','
string|"'1'"
op|')'
op|']'
op|','
name|'events'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unplug_vifs_ignores_errors
dedent|''
name|'def'
name|'test_unplug_vifs_ignores_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'vif_driver'"
op|')'
name|'as'
name|'vif_driver'
op|':'
newline|'\n'
indent|'            '
name|'vif_driver'
op|'.'
name|'unplug'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'AgentError'
op|'('
nl|'\n'
name|'method'
op|'='
string|"'unplug'"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_unplug_vifs'
op|'('
string|"'inst'"
op|','
op|'['
number|'1'
op|']'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vif_driver'
op|'.'
name|'unplug'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'inst'"
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unplug_vifs_reports_errors
dedent|''
dedent|''
name|'def'
name|'test_unplug_vifs_reports_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'vif_driver'"
op|')'
name|'as'
name|'vif_driver'
op|':'
newline|'\n'
indent|'            '
name|'vif_driver'
op|'.'
name|'unplug'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'AgentError'
op|'('
nl|'\n'
name|'method'
op|'='
string|"'unplug'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AgentError'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'unplug_vifs'
op|','
string|"'inst'"
op|','
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'vif_driver'
op|'.'
name|'unplug'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'inst'"
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._unplug_vifs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._undefine_domain'"
op|')'
newline|'\n'
DECL|member|test_cleanup_pass_with_no_mount_device
name|'def'
name|'test_cleanup_pass_with_no_mount_device'
op|'('
name|'self'
op|','
name|'undefine'
op|','
name|'unplug'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'firewall_driver'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'_disconnect_volume'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'fake_inst'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'fake_bdms'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'mount_device'"
op|':'
name|'None'
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver'"
nl|'\n'
string|"'.block_device_info_get_mapping'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_bdms'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'cleanup'
op|'('
string|"'ctxt'"
op|','
name|'fake_inst'
op|','
string|"'netinfo'"
op|','
name|'destroy_disks'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'_disconnect_volume'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._unplug_vifs'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._undefine_domain'"
op|')'
newline|'\n'
DECL|member|test_cleanup_wants_vif_errors_ignored
name|'def'
name|'test_cleanup_wants_vif_errors_ignored'
op|'('
name|'self'
op|','
name|'undefine'
op|','
name|'unplug'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'fake_inst'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
string|"'lookupByName'"
op|')'
name|'as'
name|'lookup'
op|':'
newline|'\n'
indent|'            '
name|'lookup'
op|'.'
name|'return_value'
op|'='
name|'fake_inst'
newline|'\n'
comment|'# NOTE(danms): Make unplug cause us to bail early, since'
nl|'\n'
comment|'# we only care about how it was called'
nl|'\n'
name|'unplug'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'cleanup'
op|','
string|"'ctxt'"
op|','
name|'fake_inst'
op|','
string|"'netinfo'"
op|')'
newline|'\n'
name|'unplug'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_inst'
op|','
string|"'netinfo'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.block_device_info_get_mapping'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.'"
nl|'\n'
string|"'_get_serial_ports_from_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._undefine_domain'"
op|')'
newline|'\n'
DECL|member|test_cleanup_serial_console_enabled
name|'def'
name|'test_cleanup_serial_console_enabled'
op|'('
nl|'\n'
name|'self'
op|','
name|'undefine'
op|','
name|'get_ports'
op|','
nl|'\n'
name|'block_device_info_get_mapping'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
string|'"True"'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'instance'
op|'='
string|"'i1'"
newline|'\n'
name|'network_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'bdm_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'firewall_driver'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'get_ports'
op|'.'
name|'return_value'
op|'='
name|'iter'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'return_value'
op|'='
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# We want to ensure undefine_domain is called after'
nl|'\n'
comment|'# lookup_domain.'
nl|'\n'
DECL|function|undefine_domain
name|'def'
name|'undefine_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'get_ports'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
string|'"domain undefined"'
op|')'
newline|'\n'
dedent|''
name|'undefine'
op|'.'
name|'side_effect'
op|'='
name|'undefine_domain'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'firewall_driver'
op|'='
name|'firewall_driver'
newline|'\n'
name|'drvr'
op|'.'
name|'cleanup'
op|'('
nl|'\n'
string|"'ctx'"
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdm_info'
op|','
nl|'\n'
name|'destroy_disks'
op|'='
name|'False'
op|','
name|'destroy_vifs'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'get_ports'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'undefine'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'firewall_driver'
op|'.'
name|'unfilter_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'assert_called_once_with'
op|'('
name|'bdm_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.block_device_info_get_mapping'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.'"
nl|'\n'
string|"'_get_serial_ports_from_instance'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._undefine_domain'"
op|')'
newline|'\n'
DECL|member|test_cleanup_serial_console_domain_gone
name|'def'
name|'test_cleanup_serial_console_domain_gone'
op|'('
nl|'\n'
name|'self'
op|','
name|'undefine'
op|','
name|'get_ports'
op|','
name|'block_device_info_get_mapping'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
string|'"True"'
op|','
name|'group'
op|'='
string|"'serial_console'"
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'i1'"
op|'}'
newline|'\n'
name|'network_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'bdm_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'firewall_driver'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'return_value'
op|'='
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure _get_serial_ports_from_instance raises same exception'
nl|'\n'
comment|'# that would have occurred if domain was gone.'
nl|'\n'
name|'get_ports'
op|'.'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
string|'"domain undefined"'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'firewall_driver'
op|'='
name|'firewall_driver'
newline|'\n'
name|'drvr'
op|'.'
name|'cleanup'
op|'('
nl|'\n'
string|"'ctx'"
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdm_info'
op|','
nl|'\n'
name|'destroy_disks'
op|'='
name|'False'
op|','
name|'destroy_vifs'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'get_ports'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'undefine'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'firewall_driver'
op|'.'
name|'unfilter_instance'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'assert_called_once_with'
op|'('
name|'bdm_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume
dedent|''
name|'def'
name|'test_swap_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'mock_dom'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
string|"'defineXML'"
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
name|'as'
name|'mock_define'
op|':'
newline|'\n'
indent|'            '
name|'xmldoc'
op|'='
string|'"<domain/>"'
newline|'\n'
name|'srcfile'
op|'='
string|'"/first/path"'
newline|'\n'
name|'dstfile'
op|'='
string|'"/second/path"'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'xmldoc'
newline|'\n'
name|'mock_dom'
op|'.'
name|'isPersistent'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_dom'
op|'.'
name|'blockJobInfo'
op|'.'
name|'return_value'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_swap_volume'
op|'('
name|'guest'
op|','
name|'srcfile'
op|','
name|'dstfile'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_INACTIVE'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_SECURE'
op|')'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'blockRebase'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'srcfile'
op|','
name|'dstfile'
op|','
number|'0'
op|','
name|'flags'
op|'='
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_COPY'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_REUSE_EXT'
op|')'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'blockResize'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'srcfile'
op|','
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|'/'
name|'units'
op|'.'
name|'Ki'
op|')'
newline|'\n'
name|'mock_define'
op|'.'
name|'assert_called_once_with'
op|'('
name|'xmldoc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._disconnect_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._swap_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.block_device.DriverVolumeBlockDevice.save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.block_device.BlockDeviceMapping.'"
nl|'\n'
string|"'get_by_volume_id'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._get_volume_config'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._connect_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_guest'"
op|')'
newline|'\n'
DECL|member|test_swap_volume_driver_bdm_save
name|'def'
name|'test_swap_volume_driver_bdm_save'
op|'('
name|'self'
op|','
name|'get_guest'
op|','
nl|'\n'
name|'connect_volume'
op|','
name|'get_volume_config'
op|','
nl|'\n'
name|'get_by_volume_id'
op|','
name|'volume_save'
op|','
nl|'\n'
name|'swap_volume'
op|','
name|'disconnect_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'old_connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'old-volume-id'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
string|"'/fake-old-volume'"
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|'}'
op|'}'
newline|'\n'
name|'new_connection_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'new-volume-id'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'device_path'"
op|':'
string|"'/fake-new-volume'"
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'rw'"
op|'}'
op|'}'
newline|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'mock_dom'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
string|'"""<domain>\n          <devices>\n            <disk type=\'file\'>\n                <source file=\'/fake-old-volume\'/>\n                <target dev=\'vdb\' bus=\'virtio\'/>\n            </disk>\n          </devices>\n        </domain>\n        """'
newline|'\n'
name|'mock_dom'
op|'.'
name|'name'
op|'.'
name|'return_value'
op|'='
string|"'inst'"
newline|'\n'
name|'mock_dom'
op|'.'
name|'UUIDString'
op|'.'
name|'return_value'
op|'='
string|"'uuid'"
newline|'\n'
name|'get_guest'
op|'.'
name|'return_value'
op|'='
name|'guest'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
string|"'type'"
op|':'
string|"'disk'"
op|','
string|"'dev'"
op|':'
string|"'vdb'"
op|'}'
newline|'\n'
name|'get_volume_config'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'source_path'
op|'='
string|"'/fake-new-volume'"
op|')'
newline|'\n'
nl|'\n'
name|'bdm'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'**'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'instance_uuid'"
op|':'
string|"'fake-instance'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake-volume-id-2'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
op|')'
op|')'
newline|'\n'
name|'get_by_volume_id'
op|'.'
name|'return_value'
op|'='
name|'bdm'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'swap_volume'
op|'('
name|'old_connection_info'
op|','
name|'new_connection_info'
op|','
name|'instance'
op|','
nl|'\n'
string|"'/dev/vdb'"
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'get_guest'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'connect_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'new_connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'swap_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'guest'
op|','
string|"'vdb'"
op|','
nl|'\n'
string|"'/fake-new-volume'"
op|','
number|'1'
op|')'
newline|'\n'
name|'disconnect_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'old_connection_info'
op|','
string|"'vdb'"
op|')'
newline|'\n'
name|'volume_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_snapshot
dedent|''
name|'def'
name|'test_live_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
string|"'defineXML'"
op|','
name|'create'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_disk_size'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'get_disk_backing_file'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'create_cow_image'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'chown'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'extract_snapshot'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_define'
op|','
name|'mock_size'
op|','
name|'mock_backing'
op|','
name|'mock_create_cow'
op|','
nl|'\n'
name|'mock_chown'
op|','
name|'mock_snapshot'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'xmldoc'
op|'='
string|'"<domain/>"'
newline|'\n'
name|'srcfile'
op|'='
string|'"/first/path"'
newline|'\n'
name|'dstfile'
op|'='
string|'"/second/path"'
newline|'\n'
name|'bckfile'
op|'='
string|'"/other/path"'
newline|'\n'
name|'dltfile'
op|'='
name|'dstfile'
op|'+'
string|'".delta"'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'xmldoc'
newline|'\n'
name|'mock_dom'
op|'.'
name|'isPersistent'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_size'
op|'.'
name|'return_value'
op|'='
number|'1004009'
newline|'\n'
name|'mock_backing'
op|'.'
name|'return_value'
op|'='
name|'bckfile'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'mock_dom'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'.'
name|'_live_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
name|'guest'
op|','
nl|'\n'
name|'srcfile'
op|','
name|'dstfile'
op|','
string|'"qcow2"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'mock_dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'assert_called_once_with'
op|'('
name|'flags'
op|'='
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_INACTIVE'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_XML_SECURE'
op|')'
op|')'
newline|'\n'
name|'mock_dom'
op|'.'
name|'blockRebase'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'srcfile'
op|','
name|'dltfile'
op|','
number|'0'
op|','
name|'flags'
op|'='
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_COPY'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_REUSE_EXT'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_SHALLOW'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mock_size'
op|'.'
name|'assert_called_once_with'
op|'('
name|'srcfile'
op|')'
newline|'\n'
name|'mock_backing'
op|'.'
name|'assert_called_once_with'
op|'('
name|'srcfile'
op|','
name|'basename'
op|'='
name|'False'
op|')'
newline|'\n'
name|'mock_create_cow'
op|'.'
name|'assert_called_once_with'
op|'('
name|'bckfile'
op|','
name|'dltfile'
op|','
number|'1004009'
op|')'
newline|'\n'
name|'mock_chown'
op|'.'
name|'assert_called_once_with'
op|'('
name|'dltfile'
op|','
name|'os'
op|'.'
name|'getuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_snapshot'
op|'.'
name|'assert_called_once_with'
op|'('
name|'dltfile'
op|','
string|'"qcow2"'
op|','
nl|'\n'
name|'dstfile'
op|','
string|'"qcow2"'
op|')'
newline|'\n'
name|'mock_define'
op|'.'
name|'assert_called_once_with'
op|'('
name|'xmldoc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|'"spawn"'
op|')'
newline|'\n'
DECL|member|test_live_migration_hostname_valid
name|'def'
name|'test_live_migration_hostname_valid'
op|'('
name|'self'
op|','
name|'mock_spawn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"host1.example.com"'
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mock_spawn'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|'"spawn"'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|'"is_valid_hostname"'
op|')'
newline|'\n'
DECL|member|test_live_migration_hostname_invalid
name|'def'
name|'test_live_migration_hostname_invalid'
op|'('
name|'self'
op|','
name|'mock_hostname'
op|','
name|'mock_spawn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'mock_hostname'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidHostname'
op|','
nl|'\n'
name|'drvr'
op|'.'
name|'live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"foo/?com=/bin/sh"'
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'tempfile.mkstemp'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.close'"
op|','
name|'return_value'
op|'='
name|'None'
op|')'
newline|'\n'
DECL|member|test_check_instance_shared_storage_local_raw
name|'def'
name|'test_check_instance_shared_storage_local_raw'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_close'
op|','
nl|'\n'
name|'mock_mkstemp'
op|','
nl|'\n'
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'raw'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
string|"'/tmp'"
op|')'
newline|'\n'
name|'mock_mkstemp'
op|'.'
name|'return_value'
op|'='
op|'('
op|'-'
number|'1'
op|','
nl|'\n'
string|"'/tmp/{0}/file'"
op|'.'
name|'format'
op|'('
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'temp_file'
op|'='
name|'driver'
op|'.'
name|'check_instance_shared_storage_local'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/tmp/{0}/file'"
op|'.'
name|'format'
op|'('
name|'instance_uuid'
op|')'
op|','
nl|'\n'
name|'temp_file'
op|'['
string|"'filename'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_instance_shared_storage_local_rbd
dedent|''
name|'def'
name|'test_check_instance_shared_storage_local_rbd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'rbd'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'driver'
op|'.'
nl|'\n'
name|'check_instance_shared_storage_local'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_to_string
dedent|''
name|'def'
name|'test_version_to_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'string_ver'
op|'='
name|'driver'
op|'.'
name|'_version_to_string'
op|'('
op|'('
number|'4'
op|','
number|'33'
op|','
number|'173'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"4.33.173"'
op|','
name|'string_ver'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parallels_min_version_fail
dedent|''
name|'def'
name|'test_parallels_min_version_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'parallels'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'_conn'
op|','
string|"'getLibVersion'"
op|','
nl|'\n'
name|'return_value'
op|'='
number|'1002011'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'driver'
op|'.'
name|'init_host'
op|','
string|"'wibble'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parallels_min_version_ok
dedent|''
dedent|''
name|'def'
name|'test_parallels_min_version_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'parallels'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'_conn'
op|','
string|"'getLibVersion'"
op|','
nl|'\n'
name|'return_value'
op|'='
number|'1002012'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'init_host'
op|'('
string|"'wibble'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_parallels_vm
dedent|''
dedent|''
name|'def'
name|'test_get_guest_config_parallels_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'parallels'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'ploop'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"parallels"'
op|','
name|'cfg'
op|'.'
name|'virt_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|','
name|'cfg'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
name|'cfg'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_mode'
op|'.'
name|'HVM'
op|','
name|'cfg'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|'.'
name|'driver_format'
op|','
string|'"ploop"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_parallels_ct
dedent|''
name|'def'
name|'test_get_guest_config_parallels_ct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'parallels'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'ct_instance'
op|'='
name|'self'
op|'.'
name|'test_instance'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ct_instance'
op|'['
string|'"vm_mode"'
op|']'
op|'='
name|'vm_mode'
op|'.'
name|'EXE'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'ct_instance'
op|')'
newline|'\n'
nl|'\n'
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
op|'{'
string|"'mapping'"
op|':'
op|'{'
string|"'disk'"
op|':'
op|'{'
op|'}'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"parallels"'
op|','
name|'cfg'
op|'.'
name|'virt_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|','
name|'cfg'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
name|'cfg'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_mode'
op|'.'
name|'EXE'
op|','
name|'cfg'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"/sbin/init"'
op|','
name|'cfg'
op|'.'
name|'os_init_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFilesys'
op|')'
newline|'\n'
name|'fs'
op|'='
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'source_type'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'driver_type'
op|','
string|'"ploop"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'target_dir'
op|','
string|'"/"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestVideo'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_guest_config_parallels_volume
dedent|''
name|'def'
name|'_test_get_guest_config_parallels_volume'
op|'('
name|'self'
op|','
name|'vmmode'
op|','
name|'devices'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'parallels'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'ct_instance'
op|'='
name|'self'
op|'.'
name|'test_instance'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ct_instance'
op|'['
string|'"vm_mode"'
op|']'
op|'='
name|'vmmode'
newline|'\n'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'ct_instance'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'driver_block_device'
op|'.'
name|'convert_volumes'
op|'('
op|'['
nl|'\n'
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda'"
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|'}'
newline|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'='
name|'conn_info'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
name|'info'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'driver_block_device'
op|'.'
name|'DriverVolumeBlockDevice'
op|','
string|"'save'"
nl|'\n'
op|')'
name|'as'
name|'mock_save'
op|':'
newline|'\n'
indent|'            '
name|'cfg'
op|'='
name|'drvr'
op|'.'
name|'_get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|','
name|'None'
op|','
name|'info'
op|')'
newline|'\n'
name|'mock_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"parallels"'
op|','
name|'cfg'
op|'.'
name|'virt_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|'"uuid"'
op|']'
op|','
name|'cfg'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
name|'cfg'
op|'.'
name|'memory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cfg'
op|'.'
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vmmode'
op|','
name|'cfg'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'devices'
op|','
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'disk_found'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'isinstance'
op|'('
name|'dev'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFilesys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
name|'if'
op|'('
name|'isinstance'
op|'('
name|'dev'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
name|'and'
nl|'\n'
op|'('
name|'dev'
op|'.'
name|'source_path'
name|'is'
name|'None'
name|'or'
nl|'\n'
string|"'disk.local'"
name|'not'
name|'in'
name|'dev'
op|'.'
name|'source_path'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"disk"'
op|','
name|'dev'
op|'.'
name|'source_device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"sda"'
op|','
name|'dev'
op|'.'
name|'target_dev'
op|')'
newline|'\n'
name|'disk_found'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'disk_found'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_parallels_volume
dedent|''
name|'def'
name|'test_get_guest_config_parallels_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_guest_config_parallels_volume'
op|'('
name|'vm_mode'
op|'.'
name|'EXE'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_get_guest_config_parallels_volume'
op|'('
name|'vm_mode'
op|'.'
name|'HVM'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostStateTestCase
dedent|''
dedent|''
name|'class'
name|'HostStateTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|cpu_info
indent|'    '
name|'cpu_info'
op|'='
op|'{'
string|'"vendor"'
op|':'
string|'"Intel"'
op|','
string|'"model"'
op|':'
string|'"pentium"'
op|','
string|'"arch"'
op|':'
string|'"i686"'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"ssse3"'
op|','
string|'"monitor"'
op|','
string|'"pni"'
op|','
string|'"sse2"'
op|','
string|'"sse"'
op|','
nl|'\n'
string|'"fxsr"'
op|','
string|'"clflush"'
op|','
string|'"pse36"'
op|','
string|'"pat"'
op|','
string|'"cmov"'
op|','
string|'"mca"'
op|','
string|'"pge"'
op|','
nl|'\n'
string|'"mtrr"'
op|','
string|'"sep"'
op|','
string|'"apic"'
op|']'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
string|'"1"'
op|','
string|'"threads"'
op|':'
string|'"1"'
op|','
string|'"sockets"'
op|':'
string|'"1"'
op|'}'
op|'}'
newline|'\n'
DECL|variable|instance_caps
name|'instance_caps'
op|'='
op|'['
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|','
string|'"kvm"'
op|','
string|'"hvm"'
op|')'
op|','
nl|'\n'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
string|'"kvm"'
op|','
string|'"hvm"'
op|')'
op|']'
newline|'\n'
DECL|variable|pci_devices
name|'pci_devices'
op|'='
op|'['
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
name|'None'
op|'}'
op|']'
newline|'\n'
DECL|variable|numa_topology
name|'numa_topology'
op|'='
name|'objects'
op|'.'
name|'NUMATopology'
op|'('
nl|'\n'
DECL|variable|cells
name|'cells'
op|'='
op|'['
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'0'
op|','
name|'memory_usage'
op|'='
number|'0'
op|','
nl|'\n'
name|'mempages'
op|'='
op|'['
op|']'
op|','
name|'siblings'
op|'='
op|'['
op|']'
op|','
nl|'\n'
DECL|variable|pinned_cpus
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NUMACell'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'cpuset'
op|'='
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
op|','
name|'memory'
op|'='
number|'1024'
op|','
nl|'\n'
name|'cpu_usage'
op|'='
number|'0'
op|','
name|'memory_usage'
op|'='
number|'0'
op|','
nl|'\n'
name|'mempages'
op|'='
op|'['
op|']'
op|','
name|'siblings'
op|'='
op|'['
op|']'
op|','
nl|'\n'
DECL|variable|pinned_cpus
name|'pinned_cpus'
op|'='
name|'set'
op|'('
op|'['
op|']'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeConnection
name|'class'
name|'FakeConnection'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fake connection object."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'super'
op|'('
name|'HostStateTestCase'
op|'.'
name|'FakeConnection'
op|','
nl|'\n'
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_host'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"qemu:///system"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_memory_mb_total
name|'def'
name|'_get_memory_mb_total'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'497'
newline|'\n'
nl|'\n'
DECL|function|_get_memory_mb_used
dedent|''
name|'def'
name|'_get_memory_mb_used'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'88'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_host'
op|'.'
name|'get_memory_mb_total'
op|'='
name|'_get_memory_mb_total'
newline|'\n'
name|'self'
op|'.'
name|'_host'
op|'.'
name|'get_memory_mb_used'
op|'='
name|'_get_memory_mb_used'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_total
dedent|''
name|'def'
name|'_get_vcpu_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_get_vcpu_used
dedent|''
name|'def'
name|'_get_vcpu_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_cpu_info
dedent|''
name|'def'
name|'_get_cpu_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HostStateTestCase'
op|'.'
name|'cpu_info'
newline|'\n'
nl|'\n'
DECL|member|_get_disk_over_committed_size_total
dedent|''
name|'def'
name|'_get_disk_over_committed_size_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_local_gb_info
dedent|''
name|'def'
name|'_get_local_gb_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'total'"
op|':'
number|'100'
op|','
string|"'used'"
op|':'
number|'20'
op|','
string|"'free'"
op|':'
number|'80'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_host_uptime
dedent|''
name|'def'
name|'get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
string|"'10:01:16 up  1:36,  6 users,  '"
nl|'\n'
string|"'load average: 0.21, 0.16, 0.19'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_disk_available_least
dedent|''
name|'def'
name|'_get_disk_available_least'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'13091'
newline|'\n'
nl|'\n'
DECL|member|_get_instance_capabilities
dedent|''
name|'def'
name|'_get_instance_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HostStateTestCase'
op|'.'
name|'instance_caps'
newline|'\n'
nl|'\n'
DECL|member|_get_pci_passthrough_devices
dedent|''
name|'def'
name|'_get_pci_passthrough_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'HostStateTestCase'
op|'.'
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_host_numa_topology
dedent|''
name|'def'
name|'_get_host_numa_topology'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HostStateTestCase'
op|'.'
name|'numa_topology'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fakelibvirt'
op|','
string|'"openAuth"'
op|')'
newline|'\n'
DECL|member|test_update_status
name|'def'
name|'test_update_status'
op|'('
name|'self'
op|','
name|'mock_open'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_open'
op|'.'
name|'return_value'
op|'='
name|'fakelibvirt'
op|'.'
name|'Connection'
op|'('
string|'"qemu:///system"'
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'HostStateTestCase'
op|'.'
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'drvr'
op|'.'
name|'get_available_resource'
op|'('
string|'"compute1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"vcpus"'
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"memory_mb"'
op|']'
op|','
number|'497'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"local_gb"'
op|']'
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"vcpus_used"'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"memory_mb_used"'
op|']'
op|','
number|'88'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"local_gb_used"'
op|']'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_type"'
op|']'
op|','
string|"'QEMU'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_version"'
op|']'
op|','
number|'1001000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_hostname"'
op|']'
op|','
string|"'compute1'"
op|')'
newline|'\n'
name|'cpu_info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'stats'
op|'['
string|'"cpu_info"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cpu_info'
op|','
nl|'\n'
op|'{'
string|'"vendor"'
op|':'
string|'"Intel"'
op|','
string|'"model"'
op|':'
string|'"pentium"'
op|','
nl|'\n'
string|'"arch"'
op|':'
name|'arch'
op|'.'
name|'I686'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"ssse3"'
op|','
string|'"monitor"'
op|','
string|'"pni"'
op|','
string|'"sse2"'
op|','
string|'"sse"'
op|','
nl|'\n'
string|'"fxsr"'
op|','
string|'"clflush"'
op|','
string|'"pse36"'
op|','
string|'"pat"'
op|','
string|'"cmov"'
op|','
nl|'\n'
string|'"mca"'
op|','
string|'"pge"'
op|','
string|'"mtrr"'
op|','
string|'"sep"'
op|','
string|'"apic"'
op|']'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
string|'"1"'
op|','
string|'"threads"'
op|':'
string|'"1"'
op|','
string|'"sockets"'
op|':'
string|'"1"'
op|'}'
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"disk_available_least"'
op|']'
op|','
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'stats'
op|'['
string|'"pci_passthrough_devices"'
op|']'
op|')'
op|','
nl|'\n'
name|'HostStateTestCase'
op|'.'
name|'pci_devices'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'objects'
op|'.'
name|'NUMATopology'
op|'.'
name|'obj_from_db_obj'
op|'('
nl|'\n'
name|'stats'
op|'['
string|"'numa_topology'"
op|']'
op|')'
op|'.'
name|'_to_dict'
op|'('
op|')'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
nl|'\n'
name|'HostStateTestCase'
op|'.'
name|'numa_topology'
op|'.'
name|'_to_dict'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtDriverTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtDriverTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LibvirtDriver."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'read_only'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance."""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
name|'memory_mb'
op|'='
number|'512'
op|','
nl|'\n'
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'vcpu_weight'
op|'='
name|'None'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'name'
op|'='
string|"u'm1.tiny'"
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'20'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
nl|'\n'
name|'flavorid'
op|'='
string|"u'1'"
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'id'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'52d3b512-1152-431f-a8f7-28f0288a622b'"
newline|'\n'
name|'inst'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'linux'"
newline|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host1'"
newline|'\n'
name|'inst'
op|'['
string|"'root_gb'"
op|']'
op|'='
name|'flavor'
op|'.'
name|'root_gb'
newline|'\n'
name|'inst'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
name|'flavor'
op|'.'
name|'ephemeral_gb'
newline|'\n'
name|'inst'
op|'['
string|"'config_drive'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'inst'
op|'['
string|"'kernel_id'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'inst'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'inst'
op|'['
string|"'key_data'"
op|']'
op|'='
string|"'ABCDEFG'"
newline|'\n'
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'flavor'
op|'='
name|'flavor'
op|','
nl|'\n'
name|'old_flavor'
op|'='
name|'None'
op|','
name|'new_flavor'
op|'='
name|'None'
op|','
nl|'\n'
op|'**'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_disk_info
name|'def'
name|'_disk_info'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# 10G root and 512M swap disk'
nl|'\n'
indent|'        '
name|'disk_info'
op|'='
op|'['
op|'{'
string|"'disk_size'"
op|':'
number|'1'
op|','
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
number|'10737418240'
op|','
string|"'path'"
op|':'
string|"'/test/disk'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/base/disk'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'disk_size'"
op|':'
number|'1'
op|','
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
number|'536870912'
op|','
string|"'path'"
op|':'
string|"'/test/disk.swap'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/base/swap_512'"
op|'}'
op|']'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_exception
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'checked_shared_storage'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_get_instance_disk_info
name|'def'
name|'fake_get_instance_disk_info'
op|'('
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'[]'"
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ip_addr
dedent|''
name|'def'
name|'fake_get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'counter'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'counter'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'False'
op|','
string|'"intentional failure"'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
dedent|''
dedent|''
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_is_storage_shared
dedent|''
name|'def'
name|'fake_is_storage_shared'
op|'('
name|'dest'
op|','
name|'inst_base'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checked_shared_storage'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'fake_get_instance_disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_host_ip_addr'"
op|','
nl|'\n'
name|'fake_get_host_ip_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_is_storage_shared_with'"
op|','
nl|'\n'
name|'fake_is_storage_shared'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.2'"
op|','
nl|'\n'
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'_test_migrate_disk_and_power_off'
op|'('
name|'self'
op|','
name|'flavor_obj'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'params_for_instance'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_instance_disk_info
name|'def'
name|'fake_get_instance_disk_info'
op|'('
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'disk_info'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ip_addr
dedent|''
name|'def'
name|'fake_get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_copy_image
dedent|''
name|'def'
name|'fake_copy_image'
op|'('
name|'src'
op|','
name|'dest'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'receive'
op|'='
name|'False'
op|','
nl|'\n'
name|'on_execute'
op|'='
name|'None'
op|','
name|'on_completion'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'on_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'on_completion'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'fake_get_instance_disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_host_ip_addr'"
op|','
nl|'\n'
name|'fake_get_host_ip_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'copy_image'"
op|','
name|'fake_copy_image'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'params'
op|'='
name|'params_for_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# dest is different host case'
nl|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.2'"
op|','
nl|'\n'
name|'flavor_obj'
op|','
name|'None'
op|','
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
comment|'# dest is same host case'
nl|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.1'"
op|','
nl|'\n'
name|'flavor_obj'
op|','
name|'None'
op|','
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off'
op|'('
name|'flavor_obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._disconnect_volume'"
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off_boot_from_volume
name|'def'
name|'test_migrate_disk_and_power_off_boot_from_volume'
op|'('
name|'self'
op|','
nl|'\n'
name|'disconnect_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'boot_index'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/vdd'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
name|'None'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'1'
op|','
string|"'ephemeral_gb'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
comment|"# Note(Mike_D): The size of instance's ephemeral_gb is 0 gb."
nl|'\n'
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'flavor_obj'
op|','
name|'block_device_info'
op|'='
name|'info'
op|','
nl|'\n'
name|'params_for_instance'
op|'='
op|'{'
string|"'image_ref'"
op|':'
name|'None'
op|','
string|"'ephemeral_gb'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'disconnect_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'info'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|','
string|"'vda'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.copy_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_host_ip_addr'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'.get_instance_disk_info'"
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off_swap
name|'def'
name|'test_migrate_disk_and_power_off_swap'
op|'('
name|'self'
op|','
name|'mock_get_disk_info'
op|','
nl|'\n'
name|'get_host_ip_addr'
op|','
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_copy_image'
op|','
nl|'\n'
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'copy_or_move_swap_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'disk_info'
newline|'\n'
name|'get_host_ip_addr'
op|'.'
name|'return_value'
op|'='
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
DECL|function|fake_copy_image
name|'def'
name|'fake_copy_image'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# disk.swap should not be touched since it is skipped over'
nl|'\n'
indent|'            '
name|'if'
string|"'/test/disk.swap'"
name|'in'
name|'list'
op|'('
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'copy_or_move_swap_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# disk.swap should not be touched since it is skipped over'
nl|'\n'
indent|'            '
name|'if'
name|'set'
op|'('
op|'['
string|"'mv'"
op|','
string|"'/test/disk.swap'"
op|']'
op|')'
op|'.'
name|'issubset'
op|'('
name|'list'
op|'('
name|'args'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'copy_or_move_swap_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'mock_copy_image'
op|'.'
name|'side_effect'
op|'='
name|'fake_copy_image'
newline|'\n'
name|'mock_execute'
op|'.'
name|'side_effect'
op|'='
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# Original instance config'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Re-size fake instance to 20G root and 1024M swap disk'
nl|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'20'
op|','
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
string|"'swap'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
comment|'# Destination is same host'
nl|'\n'
name|'out'
op|'='
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|','
string|"'10.0.0.1'"
op|','
nl|'\n'
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_disk_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'get_host_ip_addr'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'copy_or_move_swap_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk_info'
op|','
name|'out'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_migrate_disk_and_power_off_resize_check
dedent|''
name|'def'
name|'_test_migrate_disk_and_power_off_resize_check'
op|'('
name|'self'
op|','
name|'expected_exc'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LibvirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
nl|'\n'
DECL|function|fake_get_instance_disk_info
name|'def'
name|'fake_get_instance_disk_info'
op|'('
name|'instance'
op|','
name|'xml'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ip_addr
dedent|''
name|'def'
name|'fake_get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'fake_get_instance_disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_host_ip_addr'"
op|','
nl|'\n'
name|'fake_get_host_ip_addr'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
comment|'# Migration is not implemented for LVM backed instances'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected_exc'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'None'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.1'"
op|','
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver._destroy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'.get_instance_disk_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'._is_storage_shared_with'"
op|')'
newline|'\n'
DECL|member|_test_migrate_disk_and_power_off_backing_file
name|'def'
name|'_test_migrate_disk_and_power_off_backing_file'
op|'('
name|'self'
op|','
nl|'\n'
name|'shared_storage'
op|','
nl|'\n'
name|'mock_is_shared_storage'
op|','
nl|'\n'
name|'mock_get_disk_info'
op|','
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'convert_file_called'
op|'='
name|'False'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'20'
op|','
string|"'ephemeral_gb'"
op|':'
number|'30'
op|','
string|"'swap'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
name|'disk_info'
op|'='
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/test/disk'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/base/disk'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|'}'
op|']'
newline|'\n'
name|'disk_info_text'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'disk_info'
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'disk_info_text'
newline|'\n'
name|'mock_is_shared_storage'
op|'.'
name|'return_value'
op|'='
name|'shared_storage'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'args'
op|'['
number|'0'
op|':'
number|'2'
op|']'
op|','
op|'['
string|"'qemu-img'"
op|','
string|"'convert'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_execute'
op|'.'
name|'side_effect'
op|'='
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'instance'
op|','
string|"'10.0.0.2'"
op|','
nl|'\n'
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_is_shared_storage'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'disk_info_text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_shared_storage
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_shared_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off_backing_file'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_non_shared_storage
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_non_shared_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off_backing_file'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_lvm
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_lvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'lvm'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'expected_exc'
op|'='
name|'exception'
op|'.'
name|'InstanceFaultRollback'
newline|'\n'
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off_resize_check'
op|'('
name|'expected_exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_resize_cannot_ssh
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_resize_cannot_ssh'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_execute
indent|'        '
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_is_storage_shared
dedent|''
name|'def'
name|'fake_is_storage_shared'
op|'('
name|'dest'
op|','
name|'inst_base'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checked_shared_storage'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_is_storage_shared_with'"
op|','
nl|'\n'
name|'fake_is_storage_shared'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'expected_exc'
op|'='
name|'exception'
op|'.'
name|'InstanceFaultRollback'
newline|'\n'
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off_resize_check'
op|'('
name|'expected_exc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'.get_instance_disk_info'"
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off_resize_error
name|'def'
name|'test_migrate_disk_and_power_off_resize_error'
op|'('
name|'self'
op|','
name|'mock_get_disk_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'5'
op|','
string|"'ephemeral_gb'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
string|"'ctx'"
op|','
name|'instance'
op|','
string|"'10.0.0.1'"
op|','
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'.get_instance_disk_info'"
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off_resize_error_default_ephemeral
name|'def'
name|'test_migrate_disk_and_power_off_resize_error_default_ephemeral'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_get_disk_info'
op|')'
op|':'
newline|'\n'
comment|"# Note(Mike_D): The size of this instance's ephemeral_gb is 20 gb."
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
string|"'ctx'"
op|','
name|'instance'
op|','
string|"'10.0.0.1'"
op|','
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.driver.LibvirtDriver'"
nl|'\n'
string|"'.get_instance_disk_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.driver.block_device_info_get_ephemerals'"
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off_resize_error_eph
name|'def'
name|'test_migrate_disk_and_power_off_resize_error_eph'
op|'('
name|'self'
op|','
name|'mock_get'
op|','
nl|'\n'
name|'mock_get_disk_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mappings'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
string|"'swap'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda1'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'guest_format'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'6'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda2'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'snapshot'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'4'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sda3'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'blank'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'local'"
op|','
nl|'\n'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'guest_format'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'3'
nl|'\n'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'mappings'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Old flavor, eph is 20, real disk is 3, target is 2, fail'
nl|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
name|'mock_get_disk_info'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
string|"'ctx'"
op|','
name|'instance'
op|','
string|"'10.0.0.1'"
op|','
name|'flavor_obj'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# Old flavor, eph is 20, real disk is 3, target is 4'
nl|'\n'
name|'flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'4'
op|'}'
newline|'\n'
name|'flavor_obj'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_migrate_disk_and_power_off'
op|'('
name|'flavor_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wait_for_running
dedent|''
name|'def'
name|'test_wait_for_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_info
indent|'        '
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'name'"
op|']'
op|'=='
string|'"not_found"'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'instance'
op|'['
string|"'name'"
op|']'
op|'=='
string|'"running"'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance not found case'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_wait_for_running'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'not_found'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'not_found_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance is running case'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'loopingcall'
op|'.'
name|'LoopingCallDone'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_wait_for_running'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'running_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# else case'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_wait_for_running'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'else'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'other_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_size_from_instance_disk_info
dedent|''
name|'def'
name|'test_disk_size_from_instance_disk_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'20'
op|','
string|"'swap_gb'"
op|':'
number|'30'
op|'}'
newline|'\n'
name|'inst'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'instance_data'
op|')'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/path/disk'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_size_from_instance'
op|'('
name|'inst'
op|','
name|'info'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/path/disk.local'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_size_from_instance'
op|'('
name|'inst'
op|','
name|'info'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/path/disk.swap'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_size_from_instance'
op|'('
name|'inst'
op|','
name|'info'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_disk_raw_to_qcow2
name|'def'
name|'test_disk_raw_to_qcow2'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/test/disk'"
newline|'\n'
name|'_path_qcow'
op|'='
name|'path'
op|'+'
string|"'_qcow'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_raw_to_qcow2'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-f'"
op|','
string|"'raw'"
op|','
nl|'\n'
string|"'-O'"
op|','
string|"'qcow2'"
op|','
name|'path'
op|','
name|'_path_qcow'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
name|'_path_qcow'
op|','
name|'path'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_disk_qcow2_to_raw
name|'def'
name|'test_disk_qcow2_to_raw'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/test/disk'"
newline|'\n'
name|'_path_raw'
op|'='
name|'path'
op|'+'
string|"'_raw'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_qcow2_to_raw'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'-O'"
op|','
string|"'raw'"
op|','
name|'path'
op|','
name|'_path_raw'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
name|'_path_raw'
op|','
name|'path'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.extend'"
op|')'
newline|'\n'
DECL|member|test_disk_resize_raw
name|'def'
name|'test_disk_resize_raw'
op|'('
name|'self'
op|','
name|'mock_extend'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|'"/test/disk"'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_resize'
op|'('
name|'image'
op|','
number|'50'
op|')'
newline|'\n'
name|'mock_extend'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|','
number|'50'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.can_resize_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.is_image_extendable'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.extend'"
op|')'
newline|'\n'
DECL|member|test_disk_resize_qcow2
name|'def'
name|'test_disk_resize_qcow2'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_extend'
op|','
name|'mock_can_resize'
op|','
name|'mock_is_image_extendable'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_disk_qcow2_to_raw'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_disk_raw_to_qcow2'"
op|')'
op|')'
name|'as'
op|'('
name|'mock_disk_qcow2_to_raw'
op|','
name|'mock_disk_raw_to_qcow2'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'mock_can_resize'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'mock_is_image_extendable'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'imageqcow2'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|'"/test/disk"'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
op|')'
newline|'\n'
name|'imageraw'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
string|'"/test/disk"'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_disk_resize'
op|'('
name|'imageqcow2'
op|','
number|'50'
op|')'
newline|'\n'
nl|'\n'
name|'mock_disk_qcow2_to_raw'
op|'.'
name|'assert_called_once_with'
op|'('
name|'imageqcow2'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'mock_extend'
op|'.'
name|'assert_called_once_with'
op|'('
name|'imageraw'
op|','
number|'50'
op|')'
newline|'\n'
name|'mock_disk_raw_to_qcow2'
op|'.'
name|'assert_called_once_with'
op|'('
name|'imageqcow2'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_migration
dedent|''
dedent|''
name|'def'
name|'_test_finish_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|','
name|'resize_instance'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .finish_migration.\n        """'
newline|'\n'
nl|'\n'
name|'powered_on'
op|'='
name|'power_on'
newline|'\n'
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'fake_disk_resize_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_to_xml
name|'def'
name|'fake_to_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
name|'rescue'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'write_to_disk'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
dedent|''
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_create_image
dedent|''
name|'def'
name|'fake_create_image'
op|'('
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'disk_mapping'
op|','
name|'suffix'
op|'='
string|"''"
op|','
nl|'\n'
name|'disk_images'
op|'='
name|'None'
op|','
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'inject_files'
op|'='
name|'True'
op|','
nl|'\n'
name|'fallback_from_host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inject_files'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain_and_network
dedent|''
name|'def'
name|'fake_create_domain_and_network'
op|'('
nl|'\n'
name|'context'
op|','
name|'xml'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'power_on'
op|'='
name|'True'
op|','
name|'reboot'
op|'='
name|'False'
op|','
nl|'\n'
name|'vifs_already_plugged'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'powered_on'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vifs_already_plugged'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_enable_hairpin
dedent|''
name|'def'
name|'fake_enable_hairpin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'powered_on'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_disk_resize
dedent|''
dedent|''
name|'def'
name|'fake_disk_resize'
op|'('
name|'image'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_disk_resize_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_disk_resize'"
op|','
nl|'\n'
name|'fake_disk_resize'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_to_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_image'"
op|','
nl|'\n'
name|'fake_create_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
nl|'\n'
name|'fake_create_domain_and_network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'Guest'
op|','
string|"'enable_hairpin'"
op|','
nl|'\n'
name|'fake_enable_hairpin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'fw'
op|'='
name|'base_firewall'
op|'.'
name|'NoopFirewallDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'firewall_driver'"
op|','
name|'fw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'source_compute'
op|'='
string|"'fake-source-compute'"
newline|'\n'
name|'migration'
op|'.'
name|'dest_compute'
op|'='
string|"'fake-dest-compute'"
newline|'\n'
name|'migration'
op|'.'
name|'source_node'
op|'='
string|"'fake-source-node'"
newline|'\n'
name|'migration'
op|'.'
name|'dest_node'
op|'='
string|"'fake-dest-node'"
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'finish_migration'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'migration'
op|','
name|'ins_ref'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_disk_info'
op|'('
op|')'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'resize_instance'
op|','
name|'None'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_domain_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'resize_instance'
op|','
name|'self'
op|'.'
name|'fake_disk_resize_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_resize
dedent|''
name|'def'
name|'test_finish_migration_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'True'
op|','
name|'resize_instance'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on
dedent|''
name|'def'
name|'test_finish_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_off
dedent|''
name|'def'
name|'test_finish_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration
dedent|''
name|'def'
name|'_test_finish_revert_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .finish_revert_migration.\n        """'
newline|'\n'
name|'powered_on'
op|'='
name|'power_on'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
dedent|''
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
dedent|''
name|'def'
name|'fake_create_domain'
op|'('
name|'context'
op|','
name|'xml'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'None'
op|','
nl|'\n'
name|'vifs_already_plugged'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'powered_on'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vifs_already_plugged'
op|')'
newline|'\n'
name|'return'
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_enable_hairpin
dedent|''
name|'def'
name|'fake_enable_hairpin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'powered_on'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'hardware'
op|'.'
name|'InstanceInfo'
op|'('
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_to_xml
dedent|''
dedent|''
name|'def'
name|'fake_to_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
name|'rescue'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
name|'fake_to_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'fw'
op|'='
name|'base_firewall'
op|'.'
name|'NoopFirewallDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'firewall_driver'"
op|','
name|'fw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
nl|'\n'
name|'fake_create_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'guest'
op|'.'
name|'Guest'
op|','
string|"'enable_hairpin'"
op|','
nl|'\n'
name|'fake_enable_hairpin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'ins_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'libvirt_xml_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
nl|'\n'
name|'ins_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'libvirt.xml'"
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'libvirt_xml_path'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'finish_revert_migration'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'ins_ref'
op|','
nl|'\n'
op|'['
op|']'
op|','
name|'None'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_domain_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_on
dedent|''
dedent|''
name|'def'
name|'test_finish_revert_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_off
dedent|''
name|'def'
name|'test_finish_revert_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|','
name|'backup_made'
op|'='
name|'True'
op|','
nl|'\n'
name|'del_inst_failed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'context'
op|'='
string|"'fake_context'"
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'blockinfo'
op|','
string|"'get_disk_info'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'FakeLoopingCall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/fake/foo'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/fake/foo_resize'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'backup_made'
op|')'
newline|'\n'
name|'if'
name|'backup_made'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'del_inst_failed'
op|':'
newline|'\n'
indent|'                '
name|'os_error'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'ENOENT'
op|','
string|"'No such file or directory'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/foo'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'os_error'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/foo'"
op|')'
newline|'\n'
dedent|''
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mv'"
op|','
string|"'/fake/foo_resize'"
op|','
string|"'/fake/foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'finish_revert_migration'
op|'('
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_new
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_backup
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_backup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_delete_failed
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_delete_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|','
nl|'\n'
name|'del_inst_failed'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_preserves_disk_bus
dedent|''
name|'def'
name|'test_finish_revert_migration_preserves_disk_bus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_get_guest_xml
indent|'        '
name|'def'
name|'fake_get_guest_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ide'"
op|','
name|'disk_info'
op|'['
string|"'disk_bus'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_disk_bus"'
op|':'
string|'"ide"'
op|'}'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain_and_network'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'get_image_from_system_metadata'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'image_meta'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_get_guest_xml'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'finish_revert_migration'
op|'('
string|"''"
op|','
name|'instance'
op|','
name|'None'
op|','
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_failed_migration
dedent|''
dedent|''
name|'def'
name|'test_cleanup_failed_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_cleanup_failed_migration'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration
dedent|''
name|'def'
name|'test_confirm_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|'"_cleanup_resize"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'confirm_migration'
op|'('
string|'"migration_ref"'
op|','
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_resize_same_host
dedent|''
name|'def'
name|'test_cleanup_resize_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'policy_dirs'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'host'"
op|':'
name|'CONF'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'forceold'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'rm'"
op|','
string|"'-rf'"
op|','
string|"'/fake/inst_resize'"
op|','
name|'delay_on_retry'
op|'='
name|'True'
op|','
nl|'\n'
name|'attempts'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_resize_not_same_host
dedent|''
name|'def'
name|'test_cleanup_resize_not_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'policy_dirs'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'host'
op|'='
string|"'not'"
op|'+'
name|'CONF'
op|'.'
name|'host'
newline|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_undefine_domain
dedent|''
name|'def'
name|'fake_undefine_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unplug_vifs
dedent|''
name|'def'
name|'fake_unplug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|','
name|'ignore_errors'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unfilter_instance
dedent|''
name|'def'
name|'fake_unfilter_instance'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_undefine_domain'"
op|','
nl|'\n'
name|'fake_undefine_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'unplug_vifs'"
op|','
nl|'\n'
name|'fake_unplug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'unfilter_instance'"
op|','
name|'fake_unfilter_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'forceold'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'rm'"
op|','
string|"'-rf'"
op|','
string|"'/fake/inst_resize'"
op|','
name|'delay_on_retry'
op|'='
name|'True'
op|','
nl|'\n'
name|'attempts'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_exception
dedent|''
name|'def'
name|'test_get_instance_disk_info_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeExceptionDomain
name|'class'
name|'FakeExceptionDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeExceptionDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"Libvirt error"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_domain
dedent|''
dedent|''
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeExceptionDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
nl|'\n'
name|'fake_get_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'get_instance_disk_info'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'lvm'
op|','
string|"'list_volumes'"
op|')'
newline|'\n'
DECL|member|test_lvm_disks
name|'def'
name|'test_lvm_disks'
op|'('
name|'self'
op|','
name|'listlvs'
op|','
name|'exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_volume_group'
op|'='
string|"'vols'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'listlvs'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'fake-uuid_foo'"
op|','
nl|'\n'
string|"'other-uuid_foo'"
op|']'
newline|'\n'
name|'disks'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_lvm_disks'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'/dev/vols/fake-uuid_foo'"
op|']'
op|','
name|'disks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_booted_from_volume
dedent|''
name|'def'
name|'test_is_booted_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'func'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_is_booted_from_volume'
newline|'\n'
name|'instance'
op|','
name|'disk_mapping'
op|'='
op|'{'
op|'}'
op|','
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'func'
op|'('
name|'instance'
op|','
name|'disk_mapping'
op|')'
op|')'
newline|'\n'
name|'disk_mapping'
op|'['
string|"'disk'"
op|']'
op|'='
string|"'map'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'func'
op|'('
name|'instance'
op|','
name|'disk_mapping'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'uuid'"
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'func'
op|'('
name|'instance'
op|','
name|'disk_mapping'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.netutils.get_injected_network_template'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.inject_data'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|'"_conn"'
op|')'
newline|'\n'
DECL|member|_test_inject_data
name|'def'
name|'_test_inject_data'
op|'('
name|'self'
op|','
name|'driver_params'
op|','
name|'path'
op|','
name|'disk_params'
op|','
nl|'\n'
name|'mock_conn'
op|','
name|'disk_inject_data'
op|','
name|'inj_network'
op|','
nl|'\n'
name|'called'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
DECL|class|ImageBackend
indent|'        '
name|'class'
name|'ImageBackend'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|path
indent|'            '
name|'path'
op|'='
string|"'/path'"
newline|'\n'
nl|'\n'
DECL|member|check_image_exists
name|'def'
name|'check_image_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'path'
op|'=='
string|"'/fail/path'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_model
dedent|''
name|'def'
name|'get_model'
op|'('
name|'self'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'path'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_inj_network
dedent|''
dedent|''
name|'def'
name|'fake_inj_network'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwds'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'args'
op|'['
number|'0'
op|']'
name|'or'
name|'None'
newline|'\n'
dedent|''
name|'inj_network'
op|'.'
name|'side_effect'
op|'='
name|'fake_inj_network'
newline|'\n'
nl|'\n'
name|'image_backend'
op|'='
name|'ImageBackend'
op|'('
op|')'
newline|'\n'
name|'image_backend'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'image_backend'
op|','
nl|'\n'
string|"'image'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'image_backend'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'inject_partition'
op|'='
number|'0'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_inject_data'
op|'('
op|'**'
name|'driver_params'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'called'
op|':'
newline|'\n'
indent|'                '
name|'disk_inject_data'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
nl|'\n'
op|'*'
name|'disk_params'
op|','
nl|'\n'
name|'partition'
op|'='
name|'None'
op|','
name|'mandatory'
op|'='
op|'('
string|"'files'"
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk_inject_data'
op|'.'
name|'called'
op|','
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_inject_data_default_driver_params
dedent|''
dedent|''
name|'def'
name|'_test_inject_data_default_driver_params'
op|'('
name|'self'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'instance'"
op|':'
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'params'
op|'='
name|'params'
op|')'
op|','
nl|'\n'
string|"'network_info'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'admin_pass'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'files'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'suffix'"
op|':'
string|"''"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_inject_data_adminpass
dedent|''
name|'def'
name|'test_inject_data_adminpass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'inject_password'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
op|')'
newline|'\n'
name|'driver_params'
op|'['
string|"'admin_pass'"
op|']'
op|'='
string|"'foobar'"
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
name|'None'
op|','
comment|'# key'
nl|'\n'
name|'None'
op|','
comment|'# net'
nl|'\n'
op|'{'
op|'}'
op|','
comment|'# metadata'
nl|'\n'
string|"'foobar'"
op|','
comment|'# admin_pass'
nl|'\n'
name|'None'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
name|'disk_params'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test with the configuration setted to false.'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'inject_password'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
nl|'\n'
name|'disk_params'
op|','
name|'called'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_data_key
dedent|''
name|'def'
name|'test_inject_data_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
op|')'
newline|'\n'
name|'driver_params'
op|'['
string|"'instance'"
op|']'
op|'['
string|"'key_data'"
op|']'
op|'='
string|"'key-content'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'inject_key'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
string|"'key-content'"
op|','
comment|'# key'
nl|'\n'
name|'None'
op|','
comment|'# net'
nl|'\n'
op|'{'
op|'}'
op|','
comment|'# metadata'
nl|'\n'
name|'None'
op|','
comment|'# admin_pass'
nl|'\n'
name|'None'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
name|'disk_params'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test with the configuration setted to false.'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'inject_key'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
nl|'\n'
name|'disk_params'
op|','
name|'called'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_data_metadata
dedent|''
name|'def'
name|'test_inject_data_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_metadata'
op|'='
op|'{'
string|"'metadata'"
op|':'
op|'{'
string|"'data'"
op|':'
string|"'foo'"
op|'}'
op|'}'
newline|'\n'
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
nl|'\n'
op|'**'
name|'instance_metadata'
nl|'\n'
op|')'
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
name|'None'
op|','
comment|'# key'
nl|'\n'
name|'None'
op|','
comment|'# net'
nl|'\n'
op|'{'
string|"'data'"
op|':'
string|"'foo'"
op|'}'
op|','
comment|'# metadata'
nl|'\n'
name|'None'
op|','
comment|'# admin_pass'
nl|'\n'
name|'None'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
name|'disk_params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_data_files
dedent|''
name|'def'
name|'test_inject_data_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
op|')'
newline|'\n'
name|'driver_params'
op|'['
string|"'files'"
op|']'
op|'='
op|'['
string|"'file1'"
op|','
string|"'file2'"
op|']'
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
name|'None'
op|','
comment|'# key'
nl|'\n'
name|'None'
op|','
comment|'# net'
nl|'\n'
op|'{'
op|'}'
op|','
comment|'# metadata'
nl|'\n'
name|'None'
op|','
comment|'# admin_pass'
nl|'\n'
op|'['
string|"'file1'"
op|','
string|"'file2'"
op|']'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
name|'disk_params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_data_net
dedent|''
name|'def'
name|'test_inject_data_net'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
op|')'
newline|'\n'
name|'driver_params'
op|'['
string|"'network_info'"
op|']'
op|'='
op|'{'
string|"'net'"
op|':'
string|"'eno1'"
op|'}'
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
name|'None'
op|','
comment|'# key'
nl|'\n'
op|'{'
string|"'net'"
op|':'
string|"'eno1'"
op|'}'
op|','
comment|'# net'
nl|'\n'
op|'{'
op|'}'
op|','
comment|'# metadata'
nl|'\n'
name|'None'
op|','
comment|'# admin_pass'
nl|'\n'
name|'None'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/path"'
op|','
name|'disk_params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_not_exist_image
dedent|''
name|'def'
name|'test_inject_not_exist_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver_params'
op|'='
name|'self'
op|'.'
name|'_test_inject_data_default_driver_params'
op|'('
op|')'
newline|'\n'
name|'disk_params'
op|'='
op|'['
nl|'\n'
string|"'key-content'"
op|','
comment|'# key'
nl|'\n'
name|'None'
op|','
comment|'# net'
nl|'\n'
name|'None'
op|','
comment|'# metadata'
nl|'\n'
name|'None'
op|','
comment|'# admin_pass'
nl|'\n'
name|'None'
op|','
comment|'# files'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_inject_data'
op|'('
name|'driver_params'
op|','
string|'"/fail/path"'
op|','
nl|'\n'
name|'disk_params'
op|','
name|'called'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_attach_detach_interface
dedent|''
name|'def'
name|'_test_attach_detach_interface'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'power_state'
op|','
nl|'\n'
name|'expected_flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'attachDeviceFlags'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'info'"
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'Host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'attach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'firewall_driver'
op|'.'
name|'setup_basic_filtering'
op|'('
nl|'\n'
name|'instance'
op|','
op|'['
name|'network_info'
op|'['
number|'0'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'attach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'method'
op|'=='
string|"'detach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'expected'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
name|'fake_image_meta'
op|','
name|'instance'
op|'.'
name|'flavor'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'vif_driver'
op|','
nl|'\n'
string|"'get_config'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fake_image_meta'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'power_state'
op|']'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'attach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'attachDeviceFlags'
op|'('
name|'expected'
op|'.'
name|'to_xml'
op|'('
op|')'
op|','
name|'flags'
op|'='
name|'expected_flags'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'method'
op|'=='
string|"'detach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'detachDeviceFlags'
op|'('
name|'expected'
op|'.'
name|'to_xml'
op|'('
op|')'
op|','
name|'expected_flags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'attach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'attach_interface'
op|'('
nl|'\n'
name|'instance'
op|','
name|'fake_image_meta'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'method'
op|'=='
string|"'detach_interface'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'detach_interface'
op|'('
nl|'\n'
name|'instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_with_running_instance
dedent|''
name|'def'
name|'test_attach_interface_with_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'attach_interface'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_with_pause_instance
dedent|''
name|'def'
name|'test_attach_interface_with_pause_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'attach_interface'"
op|','
name|'power_state'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_with_shutdown_instance
dedent|''
name|'def'
name|'test_attach_interface_with_shutdown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'attach_interface'"
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_with_running_instance
dedent|''
name|'def'
name|'test_detach_interface_with_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'detach_interface'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_with_pause_instance
dedent|''
name|'def'
name|'test_detach_interface_with_pause_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'detach_interface'"
op|','
name|'power_state'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_LIVE'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_with_shutdown_instance
dedent|''
name|'def'
name|'test_detach_interface_with_shutdown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_attach_detach_interface'
op|'('
nl|'\n'
string|"'detach_interface'"
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'expected_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue
dedent|''
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'config_drive'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
nl|'\n'
string|"'_get_existing_domain_xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|"'image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_existing_domain_xml'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'kernel.rescue'"
op|','
string|"'raw'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'ramdisk.rescue'"
op|','
string|"'raw'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'disk.rescue'"
op|','
string|"'default'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'cache'
op|'('
name|'context'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'fetch_func'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'filename'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'cache'
op|'('
name|'context'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'fetch_func'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'filename'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'size'
op|'='
name|'None'
op|','
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|','
string|"'name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'rescue'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'write_to_disk'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_create_domain'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'rescue_password'
op|'='
string|"'fake_password'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'rescue_password'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'load_file'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|'"get_domain"'
op|')'
newline|'\n'
DECL|member|test_unrescue
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|','
name|'mock_get_domain'
op|','
name|'mock_load_file'
op|','
nl|'\n'
name|'mock_get_instance_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'block\' device=\'disk\'>"'
nl|'\n'
string|'"<source dev=\'/dev/some-vg/some-lv\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake=uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'fake_dom'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'dummyxml'
op|')'
newline|'\n'
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'fake_dom'
newline|'\n'
name|'mock_load_file'
op|'.'
name|'return_value'
op|'='
string|'"fake_unrescue_xml"'
newline|'\n'
name|'unrescue_xml_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/path'"
op|','
string|"'unrescue.xml'"
op|')'
newline|'\n'
name|'rescue_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/path'"
op|','
string|"'rescue.file'"
op|')'
newline|'\n'
nl|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_destroy'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'file_delete'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'drvr'
op|','
string|"'_lvm_disks'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
string|"'lvm.rescue'"
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'lvm'
op|','
string|"'remove_volumes'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'glob'
op|','
string|"'iglob'"
op|','
name|'return_value'
op|'='
op|'['
name|'rescue_file'
op|']'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_destroy'
op|','
name|'mock_create'
op|','
name|'mock_del'
op|','
name|'mock_lvm_disks'
op|','
nl|'\n'
name|'mock_remove_volumes'
op|','
name|'mock_glob'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'drvr'
op|'.'
name|'unrescue'
op|'('
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_create'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"fake_unrescue_xml"'
op|','
nl|'\n'
name|'fake_dom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_del'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'unrescue_xml_path'
op|','
nl|'\n'
name|'mock_del'
op|'.'
name|'call_args_list'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rescue_file'
op|','
name|'mock_del'
op|'.'
name|'call_args_list'
op|'['
number|'1'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'mock_remove_volumes'
op|'.'
name|'assert_called_once_with'
op|'('
op|'['
string|"'lvm.rescue'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.virt.configdrive.ConfigDriveBuilder.add_instance_metadata'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.configdrive.ConfigDriveBuilder.make_drive'"
op|')'
newline|'\n'
DECL|member|test_rescue_config_drive
name|'def'
name|'test_rescue_config_drive'
op|'('
name|'self'
op|','
name|'mock_make'
op|','
name|'mock_add'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'instance'
op|'.'
name|'uuid'
newline|'\n'
name|'configdrive_path'
op|'='
name|'uuid'
op|'+'
string|"'/disk.config.rescue'"
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
nl|'\n'
string|"'_get_existing_domain_xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|"'image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance_metadata'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
string|"'__init__'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_get_guest_xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_create_domain'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_existing_domain_xml'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'kernel.rescue'"
op|','
string|"'raw'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'ramdisk.rescue'"
op|','
string|"'raw'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Backend'
op|'.'
name|'image'
op|'('
name|'instance'
op|','
string|"'disk.rescue'"
op|','
string|"'default'"
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_imagebackend'
op|'.'
name|'Raw'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'cache'
op|'('
name|'context'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'fetch_func'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'filename'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'cache'
op|'('
name|'context'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'fetch_func'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'filename'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'size'
op|'='
name|'None'
op|','
name|'user_id'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'instance_metadata'
op|'.'
name|'InstanceMetadata'
op|'.'
name|'__init__'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'content'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'extra_md'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|','
string|"'name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_xml'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'rescue'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'write_to_disk'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_create_domain'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'rescue_password'
op|'='
string|"'fake_password'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'image_meta'
op|','
name|'rescue_password'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_add'
op|'.'
name|'assert_any_call'
op|'('
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'expected_call'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'configdrive_path'
op|')'
op|')'
op|']'
newline|'\n'
name|'mock_make'
op|'.'
name|'assert_has_calls'
op|'('
name|'expected_call'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files
name|'def'
name|'test_delete_instance_files'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
name|'exe'
op|','
nl|'\n'
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'exe'
op|'.'
name|'assert_called_with'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'assert_called_with'
op|'('
string|"'/path_del'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.kill'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_kill_running
name|'def'
name|'test_delete_instance_files_kill_running'
op|'('
nl|'\n'
name|'self'
op|','
name|'get_instance_path'
op|','
name|'kill'
op|','
name|'exists'
op|','
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'jobs'
op|'['
name|'instance'
op|'.'
name|'uuid'
op|']'
op|'='
op|'['
number|'3'
op|','
number|'4'
op|']'
newline|'\n'
nl|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'exe'
op|'.'
name|'assert_called_with'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
newline|'\n'
name|'kill'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'3'
op|','
name|'signal'
op|'.'
name|'SIGKILL'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
number|'3'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
number|'4'
op|','
name|'signal'
op|'.'
name|'SIGKILL'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
number|'4'
op|','
number|'0'
op|')'
op|']'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'assert_called_with'
op|'('
string|"'/path_del'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'instance'
op|'.'
name|'uuid'
op|','
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'job_tracker'
op|'.'
name|'jobs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_resize
name|'def'
name|'test_delete_instance_files_resize'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
nl|'\n'
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'Exception'
op|'('
op|')'
op|','
name|'None'
op|']'
newline|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path_resize'"
op|','
string|"'/path_del'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'exe'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'assert_called_with'
op|'('
string|"'/path_del'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_failed
name|'def'
name|'test_delete_instance_files_failed'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
name|'exe'
op|','
nl|'\n'
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'True'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'exe'
op|'.'
name|'assert_called_with'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'assert_called_with'
op|'('
string|"'/path_del'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_mv_failed
name|'def'
name|'test_delete_instance_files_mv_failed'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
nl|'\n'
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
op|')'
newline|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'True'
op|','
name|'True'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path_resize'"
op|','
string|"'/path_del'"
op|')'
op|']'
op|'*'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'exe'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_resume
name|'def'
name|'test_delete_instance_files_resume'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
nl|'\n'
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
op|')'
newline|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path_resize'"
op|','
string|"'/path_del'"
op|')'
op|']'
op|'*'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'exe'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_none
name|'def'
name|'test_delete_instance_files_none'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
nl|'\n'
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
op|')'
newline|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'False'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path_resize'"
op|','
string|"'/path_del'"
op|')'
op|']'
op|'*'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'exe'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'shutil'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'shutil.rmtree'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.utils.get_instance_path'"
op|')'
newline|'\n'
DECL|member|test_delete_instance_files_concurrent
name|'def'
name|'test_delete_instance_files_concurrent'
op|'('
name|'self'
op|','
name|'get_instance_path'
op|','
name|'exists'
op|','
nl|'\n'
name|'exe'
op|','
name|'shutil'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_instance_path'
op|'.'
name|'return_value'
op|'='
string|"'/path'"
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'Exception'
op|'('
op|')'
op|','
name|'Exception'
op|'('
op|')'
op|','
name|'None'
op|']'
newline|'\n'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'delete_instance_files'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'get_instance_path'
op|'.'
name|'assert_called_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path'"
op|','
string|"'/path_del'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mv'"
op|','
string|"'/path_resize'"
op|','
string|"'/path_del'"
op|')'
op|']'
newline|'\n'
name|'expected'
op|'.'
name|'append'
op|'('
name|'expected'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'exe'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'assert_called_with'
op|'('
string|"'/path_del'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_on_id_map
dedent|''
name|'def'
name|'_assert_on_id_map'
op|'('
name|'self'
op|','
name|'idmap'
op|','
name|'klass'
op|','
name|'start'
op|','
name|'target'
op|','
name|'count'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'idmap'
op|','
name|'klass'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'start'
op|','
name|'idmap'
op|'.'
name|'start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target'
op|','
name|'idmap'
op|'.'
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
name|'idmap'
op|'.'
name|'count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_id_maps
dedent|''
name|'def'
name|'test_get_id_maps'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"lxc"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'virt_type'
op|'='
string|'"lxc"'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'uid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'gid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
nl|'\n'
name|'idmaps'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_idmaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'idmaps'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|','
nl|'\n'
number|'0'
op|','
number|'10000'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|','
nl|'\n'
number|'1'
op|','
number|'20000'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|','
nl|'\n'
number|'0'
op|','
number|'10000'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|','
nl|'\n'
number|'1'
op|','
number|'20000'
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_id_maps_not_lxc
dedent|''
name|'def'
name|'test_get_id_maps_not_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'uid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'gid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
nl|'\n'
name|'idmaps'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_idmaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'idmaps'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_id_maps_only_uid
dedent|''
name|'def'
name|'test_get_id_maps_only_uid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"lxc"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'uid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'gid_maps'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'idmaps'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_idmaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'idmaps'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|','
nl|'\n'
number|'0'
op|','
number|'10000'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|','
nl|'\n'
number|'1'
op|','
number|'20000'
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_id_maps_only_gid
dedent|''
name|'def'
name|'test_get_id_maps_only_gid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"lxc"'
op|','
name|'group'
op|'='
string|'"libvirt"'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'uid_maps'
op|'='
op|'['
op|']'
newline|'\n'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'gid_maps'
op|'='
op|'['
string|'"0:10000:1"'
op|','
string|'"1:20000:10"'
op|']'
newline|'\n'
nl|'\n'
name|'idmaps'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_get_guest_idmaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'idmaps'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|','
nl|'\n'
number|'0'
op|','
number|'10000'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_on_id_map'
op|'('
name|'idmaps'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|','
nl|'\n'
number|'1'
op|','
number|'20000'
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_on_disk
dedent|''
name|'def'
name|'test_instance_on_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'drvr'
op|'.'
name|'instance_on_disk'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_on_disk_rbd
dedent|''
name|'def'
name|'test_instance_on_disk_rbd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'rbd'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'drvr'
op|'.'
name|'instance_on_disk'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_interfaces
dedent|''
name|'def'
name|'test_get_interfaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom_xml'
op|'='
string|'"""\n              <domain type="qemu">\n                  <devices>\n                      <interface type="ethernet">\n                          <mac address="fe:eb:da:ed:ef:ac"/>\n                          <model type="virtio"/>\n                          <target dev="eth0"/>\n                      </interface>\n                      <interface type="bridge">\n                          <mac address="ca:fe:de:ad:be:ef"/>\n                          <model type="virtio"/>\n                          <target dev="br0"/>\n                      </interface>\n                  </devices>\n              </domain>"""'
newline|'\n'
nl|'\n'
name|'list_interfaces'
op|'='
op|'['
string|"'eth0'"
op|','
string|"'br0'"
op|']'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'list_interfaces'
op|','
name|'drv'
op|'.'
name|'_get_interfaces'
op|'('
name|'dom_xml'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_disk_xml
dedent|''
name|'def'
name|'test_get_disk_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom_xml'
op|'='
string|'"""\n              <domain type="kvm">\n                <devices>\n                  <disk type="file">\n                     <source file="disk1_file"/>\n                     <target dev="vda" bus="virtio"/>\n                     <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n                  </disk>\n                  <disk type="block">\n                    <source dev="/path/to/dev/1"/>\n                    <target dev="vdb" bus="virtio" serial="1234"/>\n                  </disk>\n                </devices>\n              </domain>\n              """'
newline|'\n'
nl|'\n'
name|'diska_xml'
op|'='
string|'"""<disk type="file" device="disk">\n  <source file="disk1_file"/>\n  <target bus="virtio" dev="vda"/>\n  <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n</disk>"""'
newline|'\n'
nl|'\n'
name|'diskb_xml'
op|'='
string|'"""<disk type="block" device="disk">\n  <source dev="/path/to/dev/1"/>\n  <target bus="virtio" dev="vdb"/>\n</disk>"""'
newline|'\n'
nl|'\n'
name|'dom'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'dom'
op|'.'
name|'XMLDesc'
op|'.'
name|'return_value'
op|'='
name|'dom_xml'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'dom'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(gcb): etree.tostring(node) returns an extra line with'
nl|'\n'
comment|'# some white spaces, need to strip it.'
nl|'\n'
name|'actual_diska_xml'
op|'='
name|'guest'
op|'.'
name|'get_disk'
op|'('
string|"'vda'"
op|')'
op|'.'
name|'to_xml'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diska_xml'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'actual_diska_xml'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'actual_diskb_xml'
op|'='
name|'guest'
op|'.'
name|'get_disk'
op|'('
string|"'vdb'"
op|')'
op|'.'
name|'to_xml'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'diskb_xml'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'actual_diskb_xml'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'guest'
op|'.'
name|'get_disk'
op|'('
string|"'vdc'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_vcpu_model_from_config
dedent|''
name|'def'
name|'test_vcpu_model_from_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'vcpu_model'
op|'='
name|'drv'
op|'.'
name|'_cpu_config_to_vcpu_model'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vcpu_model'
op|')'
newline|'\n'
nl|'\n'
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'feature1'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUFeature'
op|'('
op|')'
newline|'\n'
name|'feature2'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUFeature'
op|'('
op|')'
newline|'\n'
name|'feature1'
op|'.'
name|'name'
op|'='
string|"'sse'"
newline|'\n'
name|'feature1'
op|'.'
name|'policy'
op|'='
name|'cpumodel'
op|'.'
name|'POLICY_REQUIRE'
newline|'\n'
name|'feature2'
op|'.'
name|'name'
op|'='
string|"'aes'"
newline|'\n'
name|'feature2'
op|'.'
name|'policy'
op|'='
name|'cpumodel'
op|'.'
name|'POLICY_REQUIRE'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'features'
op|'='
name|'set'
op|'('
op|'['
name|'feature1'
op|','
name|'feature2'
op|']'
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'mode'
op|'='
name|'cpumodel'
op|'.'
name|'MODE_CUSTOM'
newline|'\n'
name|'cpu'
op|'.'
name|'sockets'
op|'='
number|'1'
newline|'\n'
name|'cpu'
op|'.'
name|'cores'
op|'='
number|'2'
newline|'\n'
name|'cpu'
op|'.'
name|'threads'
op|'='
number|'4'
newline|'\n'
name|'vcpu_model'
op|'='
name|'drv'
op|'.'
name|'_cpu_config_to_vcpu_model'
op|'('
name|'cpu'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cpumodel'
op|'.'
name|'MATCH_EXACT'
op|','
name|'vcpu_model'
op|'.'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cpumodel'
op|'.'
name|'MODE_CUSTOM'
op|','
name|'vcpu_model'
op|'.'
name|'mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'vcpu_model'
op|'.'
name|'topology'
op|'.'
name|'threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
string|"'sse'"
op|','
string|"'aes'"
op|']'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'['
name|'f'
op|'.'
name|'name'
name|'for'
name|'f'
name|'in'
name|'vcpu_model'
op|'.'
name|'features'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'mode'
op|'='
name|'cpumodel'
op|'.'
name|'MODE_HOST_MODEL'
newline|'\n'
name|'vcpu_model_1'
op|'='
name|'drv'
op|'.'
name|'_cpu_config_to_vcpu_model'
op|'('
name|'cpu'
op|','
name|'vcpu_model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cpumodel'
op|'.'
name|'MODE_HOST_MODEL'
op|','
name|'vcpu_model'
op|'.'
name|'mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vcpu_model'
op|','
name|'vcpu_model_1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_vcpu_model_to_config
dedent|''
name|'def'
name|'test_vcpu_model_to_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'feature'
op|'='
name|'objects'
op|'.'
name|'VirtCPUFeature'
op|'('
name|'policy'
op|'='
name|'cpumodel'
op|'.'
name|'POLICY_REQUIRE'
op|','
nl|'\n'
name|'name'
op|'='
string|"'sse'"
op|')'
newline|'\n'
name|'feature_1'
op|'='
name|'objects'
op|'.'
name|'VirtCPUFeature'
op|'('
name|'policy'
op|'='
name|'cpumodel'
op|'.'
name|'POLICY_FORBID'
op|','
nl|'\n'
name|'name'
op|'='
string|"'aes'"
op|')'
newline|'\n'
name|'topo'
op|'='
name|'objects'
op|'.'
name|'VirtCPUTopology'
op|'('
name|'sockets'
op|'='
number|'1'
op|','
name|'cores'
op|'='
number|'2'
op|','
name|'threads'
op|'='
number|'4'
op|')'
newline|'\n'
name|'vcpu_model'
op|'='
name|'objects'
op|'.'
name|'VirtCPUModel'
op|'('
name|'mode'
op|'='
name|'cpumodel'
op|'.'
name|'MODE_HOST_MODEL'
op|','
nl|'\n'
name|'features'
op|'='
op|'['
name|'feature'
op|','
name|'feature_1'
op|']'
op|','
nl|'\n'
name|'topology'
op|'='
name|'topo'
op|')'
newline|'\n'
nl|'\n'
name|'cpu'
op|'='
name|'drv'
op|'.'
name|'_vcpu_model_to_cpu_config'
op|'('
name|'vcpu_model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cpumodel'
op|'.'
name|'MODE_HOST_MODEL'
op|','
name|'cpu'
op|'.'
name|'mode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'cpu'
op|'.'
name|'sockets'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'cpu'
op|'.'
name|'threads'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'cpu'
op|'.'
name|'features'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
string|"'sse'"
op|','
string|"'aes'"
op|']'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'['
name|'f'
op|'.'
name|'name'
name|'for'
name|'f'
name|'in'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
name|'cpumodel'
op|'.'
name|'POLICY_REQUIRE'
op|','
nl|'\n'
name|'cpumodel'
op|'.'
name|'POLICY_FORBID'
op|']'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'['
name|'f'
op|'.'
name|'policy'
name|'for'
name|'f'
name|'in'
name|'cpu'
op|'.'
name|'features'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtVolumeUsageTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtVolumeUsageTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test for LibvirtDriver.get_all_volume_usage."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeUsageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ins_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1729'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify bootable volume device path also'
nl|'\n'
name|'self'
op|'.'
name|'bdms'
op|'='
op|'['
op|'{'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vde'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_volume_usage
dedent|''
name|'def'
name|'test_get_all_volume_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_block_stats
indent|'        '
name|'def'
name|'fake_block_stats'
op|'('
name|'instance_name'
op|','
name|'disk'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'169'
op|','
number|'688640'
op|','
number|'0'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'block_stats'"
op|','
name|'fake_block_stats'
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'get_all_volume_usage'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
op|'['
name|'dict'
op|'('
name|'instance'
op|'='
name|'self'
op|'.'
name|'ins_ref'
op|','
name|'instance_bdms'
op|'='
name|'self'
op|'.'
name|'bdms'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'expected_usage'
op|'='
op|'['
op|'{'
string|"'volume'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'self'
op|'.'
name|'ins_ref'
op|','
nl|'\n'
string|"'rd_bytes'"
op|':'
number|'688640'
op|','
string|"'wr_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rd_req'"
op|':'
number|'169'
op|','
string|"'wr_bytes'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'self'
op|'.'
name|'ins_ref'
op|','
nl|'\n'
string|"'rd_bytes'"
op|':'
number|'688640'
op|','
string|"'wr_req'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rd_req'"
op|':'
number|'169'
op|','
string|"'wr_bytes'"
op|':'
number|'0'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|','
name|'expected_usage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_volume_usage_device_not_found
dedent|''
name|'def'
name|'test_get_all_volume_usage_device_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_domain
indent|'        '
name|'def'
name|'fake_get_domain'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|'"fakedom"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|','
name|'fake_get_domain'
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'get_all_volume_usage'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
op|'['
name|'dict'
op|'('
name|'instance'
op|'='
name|'self'
op|'.'
name|'ins_ref'
op|','
name|'instance_bdms'
op|'='
name|'self'
op|'.'
name|'bdms'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtNonblockingTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtNonblockingTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test libvirtd calls are nonblocking."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtNonblockingTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_uri'
op|'='
string|'"test:///default"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_to_primitive
dedent|''
name|'def'
name|'test_connection_to_primitive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test bug 962840.'
nl|'\n'
indent|'        '
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
name|'as'
name|'libvirt_driver'
newline|'\n'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
string|"''"
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'set_host_enabled'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'drvr'
op|'.'
name|'_conn'
op|','
name|'convert_instances'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_tpool_execute_calls_libvirt
dedent|''
name|'def'
name|'test_tpool_execute_calls_libvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'is_expected'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'eventlet'
op|'.'
name|'tpool'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'tpool'
op|'.'
name|'execute'
op|'('
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'openAuth'
op|','
nl|'\n'
string|"'test:///default'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'conn'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'tpool'
op|'.'
name|'execute'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'domainEventRegisterAny'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_EVENT_ID_LIFECYCLE'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'fakelibvirt'
op|'.'
name|'virConnect'
op|','
string|"'registerCloseCallback'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'tpool'
op|'.'
name|'execute'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'registerCloseCallback'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'c'
op|'='
name|'driver'
op|'.'
name|'_get_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'c'
op|'.'
name|'is_expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtVolumeSnapshotTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtVolumeSnapshotTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests for libvirtDriver.volume_snapshot_create/delete."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeSnapshotTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'instance-%s'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'qemu_allowed_storage_drivers'
op|'='
op|'['
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
comment|'# creating instance'
nl|'\n'
name|'self'
op|'.'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'inst'
op|'['
string|"'id'"
op|']'
op|'='
string|"'1'"
newline|'\n'
nl|'\n'
comment|'# create domain info'
nl|'\n'
name|'self'
op|'.'
name|'dom_xml'
op|'='
string|'"""\n              <domain type=\'kvm\'>\n                <devices>\n                  <disk type=\'file\'>\n                     <source file=\'disk1_file\'/>\n                     <target dev=\'vda\' bus=\'virtio\'/>\n                     <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n                  </disk>\n                  <disk type=\'block\'>\n                    <source dev=\'/path/to/dev/1\'/>\n                    <target dev=\'vdb\' bus=\'virtio\' serial=\'1234\'/>\n                  </disk>\n                </devices>\n              </domain>"""'
newline|'\n'
nl|'\n'
comment|'# alternate domain info with network-backed snapshot chain'
nl|'\n'
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|'='
string|'"""\n              <domain type=\'kvm\'>\n                <devices>\n                  <disk type=\'file\'>\n                    <source file=\'disk1_file\'/>\n                    <target dev=\'vda\' bus=\'virtio\'/>\n                    <serial>0e38683e-f0af-418f-a3f1-6b67eaffffff</serial>\n                  </disk>\n                  <disk type=\'network\' device=\'disk\'>\n                    <driver name=\'qemu\' type=\'qcow2\'/>\n                    <source protocol=\'gluster\' name=\'vol1/root.img\'>\n                      <host name=\'server1\' port=\'24007\'/>\n                    </source>\n                    <backingStore type=\'network\' index=\'1\'>\n                      <driver name=\'qemu\' type=\'qcow2\'/>\n                      <source protocol=\'gluster\' name=\'vol1/snap.img\'>\n                        <host name=\'server1\' port=\'24007\'/>\n                      </source>\n                      <backingStore type=\'network\' index=\'2\'>\n                        <driver name=\'qemu\' type=\'qcow2\'/>\n                        <source protocol=\'gluster\' name=\'vol1/snap-b.img\'>\n                          <host name=\'server1\' port=\'24007\'/>\n                        </source>\n                        <backingStore/>\n                      </backingStore>\n                    </backingStore>\n                    <target dev=\'vdb\' bus=\'virtio\'/>\n                    <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n                  </disk>\n                </devices>\n              </domain>\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'1234-5678'"
op|','
nl|'\n'
string|"'new_file'"
op|':'
string|"'new-file'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|'='
string|"'0e38683e-f0af-418f-a3f1-6b67ea0f919d'"
newline|'\n'
name|'self'
op|'.'
name|'snapshot_id'
op|'='
string|"'9c3ca9f4-9f4e-4dba-bedd-5c5e4b52b162'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'snap.img'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_2'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'snap.img'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
string|"'other-snap.img'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_3'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_netdisk'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'snap.img'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
string|"'root.img'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_invalid_type'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'made_up_type'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'some_file'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
nl|'\n'
string|"'some_other_file'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeSnapshotTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.block_device.DriverVolumeBlockDevice.'"
nl|'\n'
string|"'refresh_connection_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.block_device.BlockDeviceMapping.'"
nl|'\n'
string|"'get_by_volume_id'"
op|')'
newline|'\n'
DECL|member|test_volume_refresh_connection_info
name|'def'
name|'test_volume_refresh_connection_info'
op|'('
name|'self'
op|','
name|'mock_get_by_volume_id'
op|','
nl|'\n'
name|'mock_refresh_connection_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake-instance'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake-volume-id-1'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'\'{"fake": "connection_info"}\''
op|'}'
op|')'
newline|'\n'
name|'mock_get_by_volume_id'
op|'.'
name|'return_value'
op|'='
name|'fake_bdm'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_refresh_connection_info'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'mock_get_by_volume_id'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|')'
newline|'\n'
name|'mock_refresh_connection_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|','
name|'self'
op|'.'
name|'drvr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create
dedent|''
name|'def'
name|'test_volume_snapshot_create'
op|'('
name|'self'
op|','
name|'quiesce'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot creation with file-based disk."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'instance-%s'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'new_file'
op|'='
string|"'new-file'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'snapshotCreateXML'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'snap_xml_src'
op|'='
op|'('
nl|'\n'
string|"'<domainsnapshot>\\n'"
nl|'\n'
string|"'  <disks>\\n'"
nl|'\n'
string|'\'    <disk name="disk1_file" snapshot="external" type="file">\\n\''
nl|'\n'
string|'\'      <source file="new-file"/>\\n\''
nl|'\n'
string|"'    </disk>\\n'"
nl|'\n'
string|'\'    <disk name="vdb" snapshot="no"/>\\n\''
nl|'\n'
string|"'  </disks>\\n'"
nl|'\n'
string|"'</domainsnapshot>\\n'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Older versions of libvirt may be missing these.'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|'='
number|'32'
newline|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|'='
number|'64'
newline|'\n'
nl|'\n'
name|'snap_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|')'
newline|'\n'
nl|'\n'
name|'snap_flags_q'
op|'='
op|'('
name|'snap_flags'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'quiesce'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
nl|'\n'
string|"'quiescing failed, no qemu-ga'"
op|')'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags'
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
name|'new_file'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_libgfapi
dedent|''
name|'def'
name|'test_volume_snapshot_create_libgfapi'
op|'('
name|'self'
op|','
name|'quiesce'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot creation with libgfapi network disk."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'instance-%s'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'qemu_allowed_storage_drivers'
op|'='
op|'['
string|"'gluster'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'dom_xml'
op|'='
string|'"""\n              <domain type=\'kvm\'>\n                <devices>\n                  <disk type=\'file\'>\n                    <source file=\'disk1_file\'/>\n                    <target dev=\'vda\' bus=\'virtio\'/>\n                    <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n                  </disk>\n                  <disk type=\'block\'>\n                    <source protocol=\'gluster\' name=\'gluster1/volume-1234\'>\n                      <host name=\'127.3.4.5\' port=\'24007\'/>\n                    </source>\n                    <target dev=\'vdb\' bus=\'virtio\' serial=\'1234\'/>\n                  </disk>\n                </devices>\n              </domain>"""'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'new_file'
op|'='
string|"'new-file'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'snapshotCreateXML'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'snap_xml_src'
op|'='
op|'('
nl|'\n'
string|"'<domainsnapshot>\\n'"
nl|'\n'
string|"'  <disks>\\n'"
nl|'\n'
string|'\'    <disk name="disk1_file" snapshot="external" type="file">\\n\''
nl|'\n'
string|'\'      <source file="new-file"/>\\n\''
nl|'\n'
string|"'    </disk>\\n'"
nl|'\n'
string|'\'    <disk name="vdb" snapshot="no"/>\\n\''
nl|'\n'
string|"'  </disks>\\n'"
nl|'\n'
string|"'</domainsnapshot>\\n'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Older versions of libvirt may be missing these.'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|'='
number|'32'
newline|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|'='
number|'64'
newline|'\n'
nl|'\n'
name|'snap_flags'
op|'='
op|'('
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|')'
newline|'\n'
nl|'\n'
name|'snap_flags_q'
op|'='
op|'('
name|'snap_flags'
op|'|'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'quiesce'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'fakelibvirt'
op|'.'
name|'libvirtError'
op|'('
nl|'\n'
string|"'quiescing failed, no qemu-ga'"
op|')'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags'
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
name|'new_file'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_noquiesce
dedent|''
name|'def'
name|'test_volume_snapshot_create_noquiesce'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'test_volume_snapshot_create'
op|'('
name|'quiesce'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_outer_success
dedent|''
name|'def'
name|'test_volume_snapshot_create_outer_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_snapshot_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'new_file'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
string|"'creating'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|','
string|"'get_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'get_snapshot'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'status'"
op|':'
string|"'available'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_refresh_connection_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_refresh_connection_info'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_outer_failure
dedent|''
name|'def'
name|'test_volume_snapshot_create_outer_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_snapshot_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'new_file'"
op|']'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'volume_snapshot_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_1
dedent|''
name|'def'
name|'test_volume_snapshot_delete_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting newest snapshot -- blockRebase."""'
newline|'\n'
nl|'\n'
comment|"# libvirt lib doesn't have VIR_DOMAIN_BLOCK_REBASE_RELATIVE flag"
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'pop'
op|'('
string|"'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockRebase'
op|'('
string|"'vda'"
op|','
string|"'snap.img'"
op|','
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
op|'{'
string|"'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_relative_1
dedent|''
name|'def'
name|'test_volume_snapshot_delete_relative_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting newest snapshot -- blockRebase using relative flag"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_guest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_guest'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'guest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockRebase'
op|'('
string|"'vda'"
op|','
string|"'snap.img'"
op|','
number|'0'
op|','
nl|'\n'
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_2
dedent|''
name|'def'
name|'test_volume_snapshot_delete_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting older snapshot -- blockCommit."""'
newline|'\n'
nl|'\n'
comment|"# libvirt lib doesn't have VIR_DOMAIN_BLOCK_COMMIT_RELATIVE"
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'pop'
op|'('
string|"'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_2'
op|')'
newline|'\n'
nl|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
op|'{'
string|"'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'"
op|':'
number|'4'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_relative_2
dedent|''
name|'def'
name|'test_volume_snapshot_delete_relative_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting older snapshot -- blockCommit using relative flag"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockCommit'
op|'('
string|"'vda'"
op|','
string|"'other-snap.img'"
op|','
string|"'snap.img'"
op|','
number|'0'
op|','
nl|'\n'
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_nonrelative_null_base
dedent|''
name|'def'
name|'test_volume_snapshot_delete_nonrelative_null_base'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Deleting newest and last snapshot of a volume'
nl|'\n'
comment|'# with blockRebase. So base of the new image will be null.'
nl|'\n'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'guest'
op|'='
name|'libvirt_guest'
op|'.'
name|'Guest'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|','
name|'return_value'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_guest'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'guest'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_xmldesc'
op|','
name|'mock_get_guest'
op|','
name|'mock_has_min_version'
op|','
nl|'\n'
name|'mock_rebase'
op|','
name|'mock_job_info'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_3'
op|')'
newline|'\n'
nl|'\n'
name|'mock_xmldesc'
op|'.'
name|'assert_called_once_with'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
newline|'\n'
name|'mock_get_guest'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'mock_has_min_version'
op|'.'
name|'assert_called_once_with'
op|'('
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1'
op|','
op|')'
op|')'
newline|'\n'
name|'mock_rebase'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vda'"
op|','
name|'None'
op|','
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
newline|'\n'
name|'mock_job_info'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vda'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_outer_success
dedent|''
dedent|''
name|'def'
name|'test_volume_snapshot_delete_outer_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_snapshot_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'delete_info'
op|'='
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'snapshot_id'
op|','
string|"'deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_refresh_connection_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_refresh_connection_info'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_outer_failure
dedent|''
name|'def'
name|'test_volume_snapshot_delete_outer_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'1234-9876'"
newline|'\n'
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_snapshot_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'delete_info'
op|'='
name|'self'
op|'.'
name|'delete_info_1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'snapshot_id'
op|','
string|"'error_deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_invalid_type
dedent|''
name|'def'
name|'test_volume_snapshot_delete_invalid_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'snapshot_id'
op|','
string|"'error_deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_invalid_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_netdisk_1
dedent|''
name|'def'
name|'test_volume_snapshot_delete_netdisk_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete newest snapshot -- blockRebase for libgfapi/network disk."""'
newline|'\n'
nl|'\n'
DECL|class|FakeNetdiskDomain
name|'class'
name|'FakeNetdiskDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeNetdiskDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'dom_netdisk_xml'
newline|'\n'
nl|'\n'
comment|"# libvirt lib doesn't have VIR_DOMAIN_BLOCK_REBASE_RELATIVE"
nl|'\n'
dedent|''
dedent|''
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'pop'
op|'('
string|"'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeNetdiskDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockRebase'
op|'('
string|"'vdb'"
op|','
string|"'vdb[1]'"
op|','
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
op|'{'
string|"'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_netdisk_relative_1
dedent|''
name|'def'
name|'test_volume_snapshot_delete_netdisk_relative_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete newest snapshot -- blockRebase for libgfapi/network disk."""'
newline|'\n'
nl|'\n'
DECL|class|FakeNetdiskDomain
name|'class'
name|'FakeNetdiskDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeNetdiskDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'dom_netdisk_xml'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeNetdiskDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockRebase'
op|'('
string|"'vdb'"
op|','
string|"'vdb[1]'"
op|','
number|'0'
op|','
nl|'\n'
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_REBASE_RELATIVE'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_netdisk_2
dedent|''
name|'def'
name|'test_volume_snapshot_delete_netdisk_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete older snapshot -- blockCommit for libgfapi/network disk."""'
newline|'\n'
nl|'\n'
DECL|class|FakeNetdiskDomain
name|'class'
name|'FakeNetdiskDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeNetdiskDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'dom_netdisk_xml'
newline|'\n'
nl|'\n'
comment|"# libvirt lib doesn't have VIR_DOMAIN_BLOCK_COMMIT_RELATIVE"
nl|'\n'
dedent|''
dedent|''
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'pop'
op|'('
string|"'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeNetdiskDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_netdisk'
op|')'
newline|'\n'
name|'fakelibvirt'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
op|'{'
string|"'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'"
op|':'
number|'4'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_netdisk_relative_2
dedent|''
name|'def'
name|'test_volume_snapshot_delete_netdisk_relative_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete older snapshot -- blockCommit for libgfapi/network disk."""'
newline|'\n'
nl|'\n'
DECL|class|FakeNetdiskDomain
name|'class'
name|'FakeNetdiskDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeNetdiskDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'dom_netdisk_xml'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|','
string|"'libvirt'"
op|','
name|'fakelibvirt'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeNetdiskDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_netdisk_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockJobInfo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'get_domain'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_host'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockCommit'
op|'('
string|"'vdb'"
op|','
string|"'vdb[0]'"
op|','
string|"'vdb[1]'"
op|','
number|'0'
op|','
nl|'\n'
name|'flags'
op|'='
name|'fakelibvirt'
op|'.'
name|'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'cur'"
op|':'
number|'1'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'blockJobInfo'
op|'('
string|"'vdb'"
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'cur'"
op|':'
number|'1000'
op|','
string|"'end'"
op|':'
number|'1000'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drvr'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_netdisk'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_convert_image
dedent|''
dedent|''
name|'def'
name|'_fake_convert_image'
op|'('
name|'source'
op|','
name|'dest'
op|','
name|'out_format'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'files'
op|'['
name|'dest'
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_BaseSnapshotTests
dedent|''
name|'class'
name|'_BaseSnapshotTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_BaseSnapshotTests'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'snapshots_directory'
op|'='
string|"'./'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_update_task_state'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'test_instance'
op|'='
name|'_create_test_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_ref'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|'**'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'info_cache'
op|'='
name|'objects'
op|'.'
name|'InstanceInfoCache'
op|'('
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_snapshot
dedent|''
name|'def'
name|'_assert_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|','
name|'disk_format'
op|','
nl|'\n'
name|'expected_properties'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_update_task_state'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
name|'expected_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'props'
op|'='
name|'snapshot'
op|'['
string|"'properties'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'props'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
name|'disk_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
string|"'test-snap'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expected_properties'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'expected_key'
op|','
name|'expected_value'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'expected_properties'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_value'
op|','
name|'props'
op|'['
name|'expected_key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_image
dedent|''
dedent|''
dedent|''
name|'def'
name|'_create_image'
op|'('
name|'self'
op|','
name|'extra_properties'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'self'
op|'.'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'if'
name|'extra_properties'
op|':'
newline|'\n'
indent|'            '
name|'properties'
op|'.'
name|'update'
op|'('
name|'extra_properties'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test-snap'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
nl|'\n'
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
name|'return'
name|'recv_meta'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'resolve_driver_format'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'get_domain'"
op|')'
newline|'\n'
DECL|member|_snapshot
name|'def'
name|'_snapshot'
op|'('
name|'self'
op|','
name|'image_id'
op|','
name|'mock_get_domain'
op|','
name|'mock_resolve'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_domain'
op|'.'
name|'return_value'
op|'='
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_ref'
op|','
name|'image_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'mock_update_task_state'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'return'
name|'snapshot'
newline|'\n'
nl|'\n'
DECL|member|_test_snapshot
dedent|''
name|'def'
name|'_test_snapshot'
op|'('
name|'self'
op|','
name|'disk_format'
op|','
name|'extra_properties'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'recv_meta'
op|'='
name|'self'
op|'.'
name|'_create_image'
op|'('
name|'extra_properties'
op|'='
name|'extra_properties'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'self'
op|'.'
name|'_snapshot'
op|'('
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_snapshot'
op|'('
name|'snapshot'
op|','
name|'disk_format'
op|'='
name|'disk_format'
op|','
nl|'\n'
name|'expected_properties'
op|'='
name|'extra_properties'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtSnapshotTests
dedent|''
dedent|''
name|'class'
name|'LibvirtSnapshotTests'
op|'('
name|'_BaseSnapshotTests'
op|')'
op|':'
newline|'\n'
DECL|member|test_ami
indent|'    '
name|'def'
name|'test_ami'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Assign different image_ref from nova/images/fakes for testing ami'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'image_ref'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'system_metadata'
op|'='
name|'utils'
op|'.'
name|'get_system_metadata_from_image'
op|'('
nl|'\n'
op|'{'
string|"'disk_format'"
op|':'
string|"'ami'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'ami'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'disk_type'"
op|','
name|'new'
op|'='
string|"'raw'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'imagebackend'
op|'.'
name|'images'
op|','
nl|'\n'
string|"'convert_image'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'_fake_convert_image'
op|')'
newline|'\n'
DECL|member|test_raw
name|'def'
name|'test_raw'
op|'('
name|'self'
op|','
name|'mock_convert_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_qcow2
dedent|''
name|'def'
name|'test_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_image_architecture
dedent|''
name|'def'
name|'test_no_image_architecture'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'image_ref'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_original_image
dedent|''
name|'def'
name|'test_no_original_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'image_ref'
op|'='
string|"'661122aa-1234-dede-fefe-babababababa'"
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_metadata_image
dedent|''
name|'def'
name|'test_snapshot_metadata_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Assign an image with an architecture defined (x86_64)'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_ref'
op|'.'
name|'image_ref'
op|'='
string|"'a440c04b-79fa-479c-bed1-0b816eaec379'"
newline|'\n'
nl|'\n'
name|'extra_properties'
op|'='
op|'{'
string|"'architecture'"
op|':'
string|"'fake_arch'"
op|','
nl|'\n'
string|"'key_a'"
op|':'
string|"'value_a'"
op|','
nl|'\n'
string|"'key_b'"
op|':'
string|"'value_b'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
string|"'qcow2'"
op|','
nl|'\n'
name|'extra_properties'
op|'='
name|'extra_properties'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LXCSnapshotTests
dedent|''
dedent|''
name|'class'
name|'LXCSnapshotTests'
op|'('
name|'LibvirtSnapshotTests'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Repeat all of the Libvirt snapshot tests, but with LXC enabled"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LXCSnapshotTests'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|"'lxc'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LVMSnapshotTests
dedent|''
dedent|''
name|'class'
name|'LVMSnapshotTests'
op|'('
name|'_BaseSnapshotTests'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'fake_libvirt_utils'
op|','
string|"'disk_type'"
op|','
name|'new'
op|'='
string|"'lvm'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'imagebackend'
op|'.'
name|'images'
op|','
nl|'\n'
string|"'convert_image'"
op|','
nl|'\n'
DECL|variable|side_effect
name|'side_effect'
op|'='
name|'_fake_convert_image'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_driver'
op|'.'
name|'imagebackend'
op|'.'
name|'lvm'
op|','
string|"'volume_info'"
op|')'
newline|'\n'
DECL|member|_test_lvm_snapshot
name|'def'
name|'_test_lvm_snapshot'
op|'('
name|'self'
op|','
name|'disk_format'
op|','
name|'mock_volume_info'
op|','
nl|'\n'
name|'mock_convert_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_type'
op|'='
string|"'lvm'"
op|','
nl|'\n'
name|'images_volume_group'
op|'='
string|"'nova-vg'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
name|'disk_format'
op|'='
name|'disk_format'
op|')'
newline|'\n'
nl|'\n'
name|'mock_volume_info'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/dev/nova-vg/lv'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_convert_image'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'/dev/nova-vg/lv'"
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'disk_format'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_raw
dedent|''
name|'def'
name|'test_raw'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_lvm_snapshot'
op|'('
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_qcow2
dedent|''
name|'def'
name|'test_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'snapshot_image_format'
op|'='
string|"'qcow2'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_lvm_snapshot'
op|'('
string|"'qcow2'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
