begin_unit
comment|'# Copyright 2012 NTT Data. All Rights Reserved.'
nl|'\n'
comment|'# Copyright 2012 Yahoo! Inc. All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'fileutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
name|'import'
name|'api'
name|'as'
name|'disk'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
name|'as'
name|'vconfig'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtUtilsTestCase
name|'class'
name|'LibvirtUtilsTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_get_disk_type
name|'def'
name|'test_get_disk_type'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: raw\nvirtual size: 64M (67108864 bytes)\ncluster_size: 65536\ndisk size: 96K\nblah BLAH: bb\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'disk_type'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_type'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'disk_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_copy_image_local_cp
name|'def'
name|'test_copy_image_local_cp'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
string|"'src'"
op|','
string|"'dest'"
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'cp'"
op|','
string|"'src'"
op|','
string|"'dest'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_rsync_call
dedent|''
name|'_rsync_call'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'mock'
op|'.'
name|'call'
op|','
nl|'\n'
string|"'rsync'"
op|','
string|"'--sparse'"
op|','
string|"'--compress'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_copy_image_rsync
name|'def'
name|'test_copy_image_rsync'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
string|"'src'"
op|','
string|"'dest'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'mock_execute'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'self'
op|'.'
name|'_rsync_call'
op|'('
string|"'--dry-run'"
op|','
string|"'src'"
op|','
string|"'host:dest'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_rsync_call'
op|'('
string|"'src'"
op|','
string|"'host:dest'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_execute'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_copy_image_scp
name|'def'
name|'test_copy_image_scp'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_execute'
op|'.'
name|'side_effect'
op|'='
op|'['
nl|'\n'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'DEFAULT'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
string|"'src'"
op|','
string|"'dest'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'mock_execute'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'self'
op|'.'
name|'_rsync_call'
op|'('
string|"'--dry-run'"
op|','
string|"'src'"
op|','
string|"'host:dest'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'scp'"
op|','
string|"'src'"
op|','
string|"'host:dest'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_execute'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_disk_type
name|'def'
name|'test_disk_type'
op|'('
name|'self'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
comment|'# Seems like lvm detection'
nl|'\n'
comment|'# if its in /dev ??'
nl|'\n'
indent|'        '
name|'for'
name|'p'
name|'in'
op|'['
string|"'/dev/b'"
op|','
string|"'/dev/blah/blah'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'d_type'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_type'
op|'('
name|'p'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'lvm'"
op|','
name|'d_type'
op|')'
newline|'\n'
nl|'\n'
comment|'# Try rbd detection'
nl|'\n'
dedent|''
name|'d_type'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_type'
op|'('
string|"'rbd:pool/instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'rbd'"
op|','
name|'d_type'
op|')'
newline|'\n'
nl|'\n'
comment|'# Try the other types'
nl|'\n'
name|'template_output'
op|'='
string|'"""image: %(path)s\nfile format: %(format)s\nvirtual size: 64M (67108864 bytes)\ncluster_size: 65536\ndisk size: 96K\n"""'
newline|'\n'
name|'path'
op|'='
string|"'/myhome/disk.config'"
newline|'\n'
name|'for'
name|'f'
name|'in'
op|'['
string|"'raw'"
op|','
string|"'qcow2'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'='
name|'template_output'
op|'%'
op|'('
op|'{'
nl|'\n'
string|"'format'"
op|':'
name|'f'
op|','
nl|'\n'
string|"'path'"
op|':'
name|'path'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
name|'output'
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'mock_execute'
op|':'
newline|'\n'
indent|'                '
name|'d_type'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_type'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'f'
op|','
name|'d_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_disk_backing
name|'def'
name|'test_disk_backing'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/myhome/disk.config'"
newline|'\n'
name|'template_output'
op|'='
string|'"""image: %(path)s\nfile format: raw\nvirtual size: 2K (2048 bytes)\ncluster_size: 65536\ndisk size: 96K\n"""'
newline|'\n'
name|'output'
op|'='
name|'template_output'
op|'%'
op|'('
op|'{'
nl|'\n'
string|"'path'"
op|':'
name|'path'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'output'
op|','
string|"''"
op|')'
newline|'\n'
name|'d_backing'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'d_backing'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_disk_size
dedent|''
name|'def'
name|'_test_disk_size'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'path'
op|','
name|'expected_size'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d_size'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_size'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_size'
op|','
name|'d_size'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_disk_size
name|'def'
name|'test_disk_size'
op|'('
name|'self'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/myhome/disk.config'"
newline|'\n'
name|'template_output'
op|'='
string|'"""image: %(path)s\nfile format: raw\nvirtual size: %(v_size)s (%(vsize_b)s bytes)\ncluster_size: 65536\ndisk size: 96K\n"""'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'128'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bytes'
op|'='
name|'i'
op|'*'
number|'65336'
newline|'\n'
name|'kbytes'
op|'='
name|'bytes'
op|'/'
number|'1024'
newline|'\n'
name|'mbytes'
op|'='
name|'kbytes'
op|'/'
number|'1024'
newline|'\n'
name|'output'
op|'='
name|'template_output'
op|'%'
op|'('
op|'{'
nl|'\n'
string|"'v_size'"
op|':'
string|'"%sM"'
op|'%'
op|'('
name|'mbytes'
op|')'
op|','
nl|'\n'
string|"'vsize_b'"
op|':'
name|'i'
op|','
nl|'\n'
string|"'path'"
op|':'
name|'path'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
name|'output'
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'mock_execute'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_disk_size'
op|'('
name|'mock_execute'
op|','
name|'path'
op|','
name|'i'
op|')'
newline|'\n'
dedent|''
name|'output'
op|'='
name|'template_output'
op|'%'
op|'('
op|'{'
nl|'\n'
string|"'v_size'"
op|':'
string|'"%sK"'
op|'%'
op|'('
name|'kbytes'
op|')'
op|','
nl|'\n'
string|"'vsize_b'"
op|':'
name|'i'
op|','
nl|'\n'
string|"'path'"
op|':'
name|'path'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'('
name|'output'
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'mock_execute'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_disk_size'
op|'('
name|'mock_execute'
op|','
name|'path'
op|','
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_qemu_info_canon
name|'def'
name|'test_qemu_info_canon'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: raw\nvirtual size: 64M (67108864 bytes)\ncluster_size: 65536\ndisk size: 96K\nblah BLAH: bb\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'disk.config'"
op|','
name|'image_info'
op|'.'
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'image_info'
op|'.'
name|'file_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'67108864'
op|','
name|'image_info'
op|'.'
name|'virtual_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'98304'
op|','
name|'image_info'
op|'.'
name|'disk_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'65536'
op|','
name|'image_info'
op|'.'
name|'cluster_size'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_qemu_info_canon2
name|'def'
name|'test_qemu_info_canon2'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: QCOW2\nvirtual size: 67108844\ncluster_size: 65536\ndisk size: 963434\nbacking file: /var/lib/nova/a328c7998805951a_2\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'disk.config'"
op|','
name|'image_info'
op|'.'
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'qcow2'"
op|','
name|'image_info'
op|'.'
name|'file_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'67108844'
op|','
name|'image_info'
op|'.'
name|'virtual_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'963434'
op|','
name|'image_info'
op|'.'
name|'disk_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'65536'
op|','
name|'image_info'
op|'.'
name|'cluster_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/var/lib/nova/a328c7998805951a_2'"
op|','
nl|'\n'
name|'image_info'
op|'.'
name|'backing_file'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_qemu_backing_file_actual
name|'def'
name|'test_qemu_backing_file_actual'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: raw\nvirtual size: 64M (67108864 bytes)\ncluster_size: 65536\ndisk size: 96K\nSnapshot list:\nID        TAG                 VM SIZE                DATE       VM CLOCK\n1     d9a9784a500742a7bb95627bb3aace38      0 2012-08-20 10:52:46 00:00:00.000\nbacking file: /var/lib/nova/a328c7998805951a_2 (actual path: /b/3a988059e51a_2)\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'disk.config'"
op|','
name|'image_info'
op|'.'
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'image_info'
op|'.'
name|'file_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'67108864'
op|','
name|'image_info'
op|'.'
name|'virtual_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'98304'
op|','
name|'image_info'
op|'.'
name|'disk_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'image_info'
op|'.'
name|'snapshots'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/b/3a988059e51a_2'"
op|','
nl|'\n'
name|'image_info'
op|'.'
name|'backing_file'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_qemu_info_convert
name|'def'
name|'test_qemu_info_convert'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: raw\nvirtual size: 64M\ndisk size: 96K\nSnapshot list:\nID        TAG                 VM SIZE                DATE       VM CLOCK\n1        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\n3        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\n4        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\njunk stuff: bbb\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'disk.config'"
op|','
name|'image_info'
op|'.'
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'image_info'
op|'.'
name|'file_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'67108864'
op|','
name|'image_info'
op|'.'
name|'virtual_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'98304'
op|','
name|'image_info'
op|'.'
name|'disk_size'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_qemu_info_snaps
name|'def'
name|'test_qemu_info_snaps'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|'"disk.config"'
newline|'\n'
name|'example_output'
op|'='
string|'"""image: disk.config\nfile format: raw\nvirtual size: 64M (67108864 bytes)\ndisk size: 96K\nSnapshot list:\nID        TAG                 VM SIZE                DATE       VM CLOCK\n1        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\n3        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\n4        d9a9784a500742a7bb95627bb3aace38    0 2012-08-20 10:52:46 00:00:00.000\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'path'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'disk.config'"
op|','
name|'image_info'
op|'.'
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'image_info'
op|'.'
name|'file_format'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'67108864'
op|','
name|'image_info'
op|'.'
name|'virtual_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'98304'
op|','
name|'image_info'
op|'.'
name|'disk_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'image_info'
op|'.'
name|'snapshots'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_hostname_normal
dedent|''
name|'def'
name|'test_valid_hostname_normal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'libvirt_utils'
op|'.'
name|'is_valid_hostname'
op|'('
string|'"hello.world.com"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_hostname_ipv4addr
dedent|''
name|'def'
name|'test_valid_hostname_ipv4addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'libvirt_utils'
op|'.'
name|'is_valid_hostname'
op|'('
string|'"10.0.2.1"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_hostname_ipv6addr
dedent|''
name|'def'
name|'test_valid_hostname_ipv6addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'libvirt_utils'
op|'.'
name|'is_valid_hostname'
op|'('
string|'"240:2ac3::2"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_hostname_bad
dedent|''
name|'def'
name|'test_valid_hostname_bad'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'libvirt_utils'
op|'.'
name|'is_valid_hostname'
op|'('
string|'"foo/?com=/bin/sh"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_create_image
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
string|"'raw'"
op|','
string|"'/some/path'"
op|','
string|"'10G'"
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
string|"'qcow2'"
op|','
string|"'/some/stuff'"
op|','
string|"'1234567891234'"
op|')'
newline|'\n'
name|'expected_args'
op|'='
op|'['
op|'('
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'raw'"
op|','
nl|'\n'
string|"'/some/path'"
op|','
string|"'10G'"
op|')'
op|','
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'/some/stuff'"
op|','
string|"'1234567891234'"
op|')'
op|','
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_args'
op|','
name|'mock_execute'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_create_cow_image
name|'def'
name|'test_create_cow_image'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
string|"'stdout'"
op|','
name|'None'
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'create_cow_image'
op|'('
string|"'/some/path'"
op|','
string|"'/the/new/cow'"
op|')'
newline|'\n'
name|'expected_args'
op|'='
op|'['
op|'('
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
string|"'/some/path'"
op|')'
op|','
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'-o'"
op|','
string|"'backing_file=/some/path'"
op|','
nl|'\n'
string|"'/the/new/cow'"
op|')'
op|','
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_args'
op|','
name|'mock_execute'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pick_disk_driver_name
dedent|''
name|'def'
name|'test_pick_disk_driver_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'type_map'
op|'='
op|'{'
string|"'kvm'"
op|':'
op|'('
op|'['
name|'True'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'False'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'None'
op|','
string|"'qemu'"
op|']'
op|')'
op|','
nl|'\n'
string|"'qemu'"
op|':'
op|'('
op|'['
name|'True'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'False'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'None'
op|','
string|"'qemu'"
op|']'
op|')'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'('
op|'['
name|'True'
op|','
name|'None'
op|']'
op|','
op|'['
name|'False'
op|','
name|'None'
op|']'
op|','
op|'['
name|'None'
op|','
name|'None'
op|']'
op|')'
op|','
nl|'\n'
string|"'lxc'"
op|':'
op|'('
op|'['
name|'True'
op|','
name|'None'
op|']'
op|','
op|'['
name|'False'
op|','
name|'None'
op|']'
op|','
op|'['
name|'None'
op|','
name|'None'
op|']'
op|')'
op|'}'
newline|'\n'
comment|'# NOTE(aloga): Xen is tested in test_pick_disk_driver_name_xen'
nl|'\n'
nl|'\n'
name|'version'
op|'='
number|'1005001'
newline|'\n'
name|'for'
op|'('
name|'virt_type'
op|','
name|'checks'
op|')'
name|'in'
name|'type_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
name|'virt_type'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'is_block_dev'
op|','
name|'expected_result'
op|')'
name|'in'
name|'checks'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
name|'version'
op|','
nl|'\n'
name|'is_block_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_pick_disk_driver_name_xen
name|'def'
name|'test_pick_disk_driver_name_xen'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|side_effect
indent|'        '
name|'def'
name|'side_effect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'args'
op|'=='
op|'('
string|"'tap-ctl'"
op|','
string|"'check'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'mock_execute'
op|'.'
name|'blktap'
name|'is'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
string|"'ok\\n'"
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'mock_execute'
op|'.'
name|'blktap'
name|'is'
name|'False'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
string|"'some error\\n'"
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
number|'2'
op|','
string|'"No such file or directory"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'args'
op|'=='
op|'('
string|"'xend'"
op|','
string|"'status'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'mock_execute'
op|'.'
name|'xend'
name|'is'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'mock_execute'
op|'.'
name|'xend'
name|'is'
name|'False'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|'"error"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
number|'2'
op|','
string|'"No such file or directory"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'Exception'
op|'('
string|"'Unexpected call'"
op|')'
newline|'\n'
dedent|''
name|'mock_execute'
op|'.'
name|'side_effect'
op|'='
name|'side_effect'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'virt_type'
op|'='
string|'"xen"'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'versions'
op|'='
op|'['
number|'4000000'
op|','
number|'4001000'
op|','
number|'4002000'
op|','
number|'4003000'
op|','
number|'4005000'
op|']'
newline|'\n'
name|'for'
name|'version'
name|'in'
name|'versions'
op|':'
newline|'\n'
comment|'# block dev'
nl|'\n'
indent|'            '
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
name|'version'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|'"phy"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_execute'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
comment|'# file dev'
nl|'\n'
name|'for'
name|'blktap'
name|'in'
name|'True'
op|','
name|'False'
op|','
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'mock_execute'
op|'.'
name|'blktap'
op|'='
name|'blktap'
newline|'\n'
name|'for'
name|'xend'
name|'in'
name|'True'
op|','
name|'False'
op|','
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'mock_execute'
op|'.'
name|'xend'
op|'='
name|'xend'
newline|'\n'
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
name|'version'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
comment|'# qemu backend supported only by libxl which is'
nl|'\n'
comment|'# production since xen 4.2. libvirt use libxl if'
nl|'\n'
comment|'# xend service not started.'
nl|'\n'
name|'if'
name|'version'
op|'>='
number|'4002000'
name|'and'
name|'xend'
name|'is'
name|'not'
name|'True'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'qemu'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'blktap'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'version'
op|'=='
number|'4000000'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'tap'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'tap2'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'file'"
op|')'
newline|'\n'
comment|'# default is_block_dev False'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
name|'version'
op|')'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_get_disk_size
name|'def'
name|'test_get_disk_size'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/some/path'"
newline|'\n'
name|'example_output'
op|'='
string|'"""image: 00000001\nfile format: raw\nvirtual size: 4.4M (4592640 bytes)\ndisk size: 4.4M\n"""'
newline|'\n'
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'example_output'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4592640'
op|','
name|'disk'
op|'.'
name|'get_disk_size'
op|'('
string|"'/some/path'"
op|')'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
name|'path'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_image
dedent|''
name|'def'
name|'test_copy_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
name|'src_fd'
op|','
name|'src_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'src_fd'
op|','
string|"'w'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                    '
name|'fp'
op|'.'
name|'write'
op|'('
string|"'canary'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'src_path'
op|','
name|'dst_path'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'canary'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'src_path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write_to_file
dedent|''
dedent|''
name|'def'
name|'test_write_to_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write_to_file_with_umask
dedent|''
dedent|''
name|'def'
name|'test_write_to_file_with_umask'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|','
name|'umask'
op|'='
number|'0o277'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
name|'mode'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'dst_path'
op|')'
op|'.'
name|'st_mode'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|'&'
number|'0o277'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_chown
name|'def'
name|'test_chown'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_utils'
op|'.'
name|'chown'
op|'('
string|"'/some/path'"
op|','
string|"'soren'"
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'chown'"
op|','
string|"'soren'"
op|','
string|"'/some/path'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_chown_for_id_maps
name|'def'
name|'test_chown_for_id_maps'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'id_maps'
op|'='
op|'['
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|'('
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestUIDMap'
op|'('
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|'('
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGIDMap'
op|'('
op|')'
op|']'
newline|'\n'
name|'id_maps'
op|'['
number|'0'
op|']'
op|'.'
name|'target'
op|'='
number|'10000'
newline|'\n'
name|'id_maps'
op|'['
number|'0'
op|']'
op|'.'
name|'count'
op|'='
number|'2000'
newline|'\n'
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'start'
op|'='
number|'2000'
newline|'\n'
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'target'
op|'='
number|'40000'
newline|'\n'
name|'id_maps'
op|'['
number|'1'
op|']'
op|'.'
name|'count'
op|'='
number|'2000'
newline|'\n'
name|'id_maps'
op|'['
number|'2'
op|']'
op|'.'
name|'target'
op|'='
number|'10000'
newline|'\n'
name|'id_maps'
op|'['
number|'2'
op|']'
op|'.'
name|'count'
op|'='
number|'2000'
newline|'\n'
name|'id_maps'
op|'['
number|'3'
op|']'
op|'.'
name|'start'
op|'='
number|'2000'
newline|'\n'
name|'id_maps'
op|'['
number|'3'
op|']'
op|'.'
name|'target'
op|'='
number|'40000'
newline|'\n'
name|'id_maps'
op|'['
number|'3'
op|']'
op|'.'
name|'count'
op|'='
number|'2000'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'chown_for_id_maps'
op|'('
string|"'/some/path'"
op|','
name|'id_maps'
op|')'
newline|'\n'
name|'execute_args'
op|'='
op|'('
string|"'nova-idmapshift'"
op|','
string|"'-i'"
op|','
nl|'\n'
string|"'-u'"
op|','
string|"'0:10000:2000,2000:40000:2000'"
op|','
nl|'\n'
string|"'-g'"
op|','
string|"'0:10000:2000,2000:40000:2000'"
op|','
nl|'\n'
string|"'/some/path'"
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
op|'*'
name|'execute_args'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_extract_snapshot
dedent|''
name|'def'
name|'_do_test_extract_snapshot'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
nl|'\n'
name|'dest_format'
op|'='
string|"'raw'"
op|','
name|'out_format'
op|'='
string|"'raw'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_utils'
op|'.'
name|'extract_snapshot'
op|'('
string|"'/path/to/disk/image'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'/extracted/snap'"
op|','
name|'dest_format'
op|')'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
string|"'-O'"
op|','
name|'out_format'
op|','
nl|'\n'
string|"'/path/to/disk/image'"
op|','
string|"'/extracted/snap'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_extract_snapshot_raw
name|'def'
name|'test_extract_snapshot_raw'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
name|'mock_execute'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_extract_snapshot_iso
name|'def'
name|'test_extract_snapshot_iso'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
name|'mock_execute'
op|','
name|'dest_format'
op|'='
string|"'iso'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_extract_snapshot_qcow2
name|'def'
name|'test_extract_snapshot_qcow2'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
name|'mock_execute'
op|','
nl|'\n'
name|'dest_format'
op|'='
string|"'qcow2'"
op|','
name|'out_format'
op|'='
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_load_file
dedent|''
name|'def'
name|'test_load_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
comment|'# We have a test for write_to_file. If that is sound, this suffices'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'libvirt_utils'
op|'.'
name|'load_file'
op|'('
name|'dst_path'
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_open
dedent|''
dedent|''
name|'def'
name|'test_file_open'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
comment|'# We have a test for write_to_file. If that is sound, this suffices'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'with'
name|'libvirt_utils'
op|'.'
name|'file_open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_fs_info
dedent|''
dedent|''
name|'def'
name|'test_get_fs_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|FakeStatResult
indent|'        '
name|'class'
name|'FakeStatResult'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'f_bsize'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_frsize'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_blocks'
op|'='
number|'2000'
newline|'\n'
name|'self'
op|'.'
name|'f_bfree'
op|'='
number|'1000'
newline|'\n'
name|'self'
op|'.'
name|'f_bavail'
op|'='
number|'900'
newline|'\n'
name|'self'
op|'.'
name|'f_files'
op|'='
number|'2000'
newline|'\n'
name|'self'
op|'.'
name|'f_ffree'
op|'='
number|'1000'
newline|'\n'
name|'self'
op|'.'
name|'f_favail'
op|'='
number|'900'
newline|'\n'
name|'self'
op|'.'
name|'f_flag'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_namemax'
op|'='
number|'255'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'path'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_statvfs
name|'def'
name|'fake_statvfs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'return'
name|'FakeStatResult'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'statvfs'"
op|','
name|'fake_statvfs'
op|')'
newline|'\n'
nl|'\n'
name|'fs_info'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_fs_info'
op|'('
string|"'/some/file/path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/some/file/path'"
op|','
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8192000'
op|','
name|'fs_info'
op|'['
string|"'total'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3686400'
op|','
name|'fs_info'
op|'['
string|"'free'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4096000'
op|','
name|'fs_info'
op|'['
string|"'used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.images.fetch_to_raw'"
op|')'
newline|'\n'
DECL|member|test_fetch_image
name|'def'
name|'test_fetch_image'
op|'('
name|'self'
op|','
name|'mock_images'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
string|"'opaque context'"
newline|'\n'
name|'target'
op|'='
string|"'/tmp/targetfile'"
newline|'\n'
name|'image_id'
op|'='
string|"'4'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'fetch_image'
op|'('
name|'context'
op|','
name|'target'
op|','
name|'image_id'
op|','
nl|'\n'
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'mock_images'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|','
nl|'\n'
name|'max_size'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fetch_raw_image
dedent|''
name|'def'
name|'test_fetch_raw_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
indent|'        '
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_rename
dedent|''
name|'def'
name|'fake_rename'
op|'('
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'mv'"
op|','
name|'old'
op|','
name|'new'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_unlink
dedent|''
name|'def'
name|'fake_unlink'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'rm'"
op|','
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_rm_on_error
dedent|''
name|'def'
name|'fake_rm_on_error'
op|'('
name|'path'
op|','
name|'remove'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'rm'"
op|','
string|"'-f'"
op|','
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_qemu_img_info
dedent|''
name|'def'
name|'fake_qemu_img_info'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
DECL|class|FakeImgInfo
indent|'            '
name|'class'
name|'FakeImgInfo'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'file_format'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'file_format'
op|'=='
string|"'part'"
op|':'
newline|'\n'
DECL|variable|file_format
indent|'                '
name|'file_format'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
op|'-'
number|'2'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'file_format'
op|'=='
string|"'converted'"
op|':'
newline|'\n'
DECL|variable|file_format
indent|'                '
name|'file_format'
op|'='
string|"'raw'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'backing'"
name|'in'
name|'path'
op|':'
newline|'\n'
DECL|variable|backing_file
indent|'                '
name|'backing_file'
op|'='
string|"'backing'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|backing_file
indent|'                '
name|'backing_file'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'big'"
name|'in'
name|'path'
op|':'
newline|'\n'
DECL|variable|virtual_size
indent|'                '
name|'virtual_size'
op|'='
number|'2'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|virtual_size
indent|'                '
name|'virtual_size'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'FakeImgInfo'
op|'.'
name|'file_format'
op|'='
name|'file_format'
newline|'\n'
name|'FakeImgInfo'
op|'.'
name|'backing_file'
op|'='
name|'backing_file'
newline|'\n'
name|'FakeImgInfo'
op|'.'
name|'virtual_size'
op|'='
name|'virtual_size'
newline|'\n'
nl|'\n'
name|'return'
name|'FakeImgInfo'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'rename'"
op|','
name|'fake_rename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'unlink'"
op|','
name|'fake_unlink'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'lambda'
op|'*'
name|'_'
op|','
op|'**'
name|'__'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'qemu_img_info'"
op|','
name|'fake_qemu_img_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fileutils'
op|','
string|"'delete_if_exists'"
op|','
name|'fake_rm_on_error'
op|')'
newline|'\n'
nl|'\n'
comment|'# Since the remove param of fileutils.remove_path_on_error()'
nl|'\n'
comment|'# is initialized at load time, we must provide a wrapper'
nl|'\n'
comment|'# that explicitly resets it to our fake delete_if_exists()'
nl|'\n'
name|'old_rm_path_on_error'
op|'='
name|'fileutils'
op|'.'
name|'remove_path_on_error'
newline|'\n'
name|'f'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'old_rm_path_on_error'
op|','
name|'remove'
op|'='
name|'fake_rm_on_error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fileutils'
op|','
string|"'remove_path_on_error'"
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
string|"'opaque context'"
newline|'\n'
name|'image_id'
op|'='
string|"'4'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'t.qcow2'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-O'"
op|','
string|"'raw'"
op|','
nl|'\n'
string|"'t.qcow2.part'"
op|','
string|"'t.qcow2.converted'"
op|')'
op|','
nl|'\n'
op|'('
string|"'rm'"
op|','
string|"'t.qcow2.part'"
op|')'
op|','
nl|'\n'
op|'('
string|"'mv'"
op|','
string|"'t.qcow2.converted'"
op|','
string|"'t.qcow2'"
op|')'
op|']'
newline|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|','
nl|'\n'
DECL|variable|max_size
name|'max_size'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'t.raw'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'mv'"
op|','
string|"'t.raw.part'"
op|','
string|"'t.raw'"
op|')'
op|']'
newline|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'backing.qcow2'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'rm'"
op|','
string|"'-f'"
op|','
string|"'backing.qcow2.part'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|','
nl|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|','
nl|'\n'
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'big.qcow2'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'rm'"
op|','
string|"'-f'"
op|','
string|"'big.qcow2.part'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|','
nl|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|','
nl|'\n'
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|','
nl|'\n'
DECL|variable|max_size
name|'max_size'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'executes'
newline|'\n'
nl|'\n'
DECL|member|test_get_disk_backing_file
dedent|''
name|'def'
name|'test_get_disk_backing_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with_actual_path'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'with_actual_path'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|'"some: output\\n"'
nl|'\n'
string|'"backing file: /foo/bar/baz (actual path: /a/b/c)\\n"'
nl|'\n'
string|'"...: ...\\n"'
op|')'
op|','
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|'"some: output\\n"'
nl|'\n'
string|'"backing file: /foo/bar/baz\\n"'
nl|'\n'
string|'"...: ...\\n"'
op|')'
op|','
string|"''"
newline|'\n'
nl|'\n'
DECL|function|return_true
dedent|''
dedent|''
name|'def'
name|'return_true'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'return_true'
op|')'
newline|'\n'
nl|'\n'
name|'out'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
string|"'baz'"
op|')'
newline|'\n'
name|'with_actual_path'
op|'='
name|'True'
newline|'\n'
name|'out'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_path_at_destination
dedent|''
name|'def'
name|'test_get_instance_path_at_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'fake_inst'"
op|','
name|'uuid'
op|'='
string|"'fake_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'migrate_data'
op|'='
name|'None'
newline|'\n'
name|'inst_path_at_dest'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_instance_path_at_destination'
op|'('
nl|'\n'
name|'instance'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'expected_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_path'
op|','
name|'inst_path_at_dest'
op|')'
newline|'\n'
nl|'\n'
name|'migrate_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst_path_at_dest'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_instance_path_at_destination'
op|'('
nl|'\n'
name|'instance'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'expected_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_path'
op|','
name|'inst_path_at_dest'
op|')'
newline|'\n'
nl|'\n'
name|'migrate_data'
op|'='
name|'dict'
op|'('
name|'instance_relative_path'
op|'='
string|"'fake_relative_path'"
op|')'
newline|'\n'
name|'inst_path_at_dest'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_instance_path_at_destination'
op|'('
nl|'\n'
name|'instance'
op|','
name|'migrate_data'
op|')'
newline|'\n'
name|'expected_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
string|"'fake_relative_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_path'
op|','
name|'inst_path_at_dest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_arch
dedent|''
name|'def'
name|'test_get_arch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_meta'
op|'='
op|'{'
string|"'properties'"
op|':'
op|'{'
string|"'architecture'"
op|':'
string|'"X86_64"'
op|'}'
op|'}'
newline|'\n'
name|'image_arch'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_arch'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|','
name|'image_arch'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_perform_unit_add_for_s390
name|'def'
name|'test_perform_unit_add_for_s390'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'device_number'
op|'='
string|'"0.0.2319"'
newline|'\n'
name|'target_wwn'
op|'='
string|'"0x50014380242b9751"'
newline|'\n'
name|'lun'
op|'='
number|'1'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'perform_unit_add_for_s390'
op|'('
name|'device_number'
op|','
name|'target_wwn'
op|','
name|'lun'
op|')'
newline|'\n'
nl|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'tee'"
op|','
string|"'-a'"
op|','
nl|'\n'
string|"'/sys/bus/ccw/drivers/zfcp/'"
nl|'\n'
string|"'0.0.2319/0x50014380242b9751/unit_add'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'process_input'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_perform_unit_remove_for_s390
name|'def'
name|'test_perform_unit_remove_for_s390'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'device_number'
op|'='
string|'"0.0.2319"'
newline|'\n'
name|'target_wwn'
op|'='
string|'"0x50014380242b9751"'
newline|'\n'
name|'lun'
op|'='
number|'1'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'perform_unit_remove_for_s390'
op|'('
name|'device_number'
op|','
nl|'\n'
name|'target_wwn'
op|','
name|'lun'
op|')'
newline|'\n'
nl|'\n'
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'tee'"
op|','
string|"'-a'"
op|','
nl|'\n'
string|"'/sys/bus/ccw/drivers/zfcp/'"
nl|'\n'
string|"'0.0.2319/0x50014380242b9751/unit_remove'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
name|'process_input'
op|'='
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
