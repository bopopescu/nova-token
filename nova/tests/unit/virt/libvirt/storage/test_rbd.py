begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'storage'
name|'import'
name|'rbd_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
nl|'\n'
nl|'\n'
name|'CEPH_MON_DUMP'
op|'='
string|'"""dumped monmap epoch 1\n{ "epoch": 1,\n  "fsid": "33630410-6d93-4d66-8e42-3b953cf194aa",\n  "modified": "2013-05-22 17:44:56.343618",\n  "created": "2013-05-22 17:44:56.343618",\n  "mons": [\n        { "rank": 0,\n          "name": "a",\n          "addr": "[::1]:6789\\/0"},\n        { "rank": 1,\n          "name": "b",\n          "addr": "[::1]:6790\\/0"},\n        { "rank": 2,\n          "name": "c",\n          "addr": "[::1]:6791\\/0"},\n        { "rank": 3,\n          "name": "d",\n          "addr": "127.0.0.1:6792\\/0"},\n        { "rank": 4,\n          "name": "e",\n          "addr": "example.com:6791\\/0"}],\n  "quorum": [\n        0,\n        1,\n        2]}\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RbdTestCase
name|'class'
name|'RbdTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RbdTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'='
name|'mock_rados'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'='
name|'mock'
op|'.'
name|'Mock'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'ioctx'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'shutdown'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'ioctx'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Error'
op|'='
name|'Exception'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_rbd'
op|'='
name|'mock_rbd'
newline|'\n'
name|'self'
op|'.'
name|'mock_rbd'
op|'.'
name|'RBD'
op|'='
name|'mock'
op|'.'
name|'Mock'
newline|'\n'
name|'self'
op|'.'
name|'mock_rbd'
op|'.'
name|'Image'
op|'='
name|'mock'
op|'.'
name|'Mock'
newline|'\n'
name|'self'
op|'.'
name|'mock_rbd'
op|'.'
name|'Image'
op|'.'
name|'close'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'Error'
op|'='
name|'Exception'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'rbd_pool'
op|'='
string|"'rbd'"
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|'('
name|'self'
op|'.'
name|'rbd_pool'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume_name'
op|'='
string|"u'volume-00000001'"
newline|'\n'
name|'self'
op|'.'
name|'snap_name'
op|'='
string|"u'test-snap'"
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RbdTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good_locations
dedent|''
name|'def'
name|'test_good_locations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'locations'
op|'='
op|'['
string|"'rbd://fsid/pool/image/snap'"
op|','
nl|'\n'
string|"'rbd://%2F/%2F/%2F/%2F'"
op|','
op|']'
newline|'\n'
name|'map'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'parse_url'
op|','
name|'locations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_locations
dedent|''
name|'def'
name|'test_bad_locations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'locations'
op|'='
op|'['
string|"'rbd://image'"
op|','
nl|'\n'
string|"'http://path/to/somewhere/else'"
op|','
nl|'\n'
string|"'rbd://image/extra'"
op|','
nl|'\n'
string|"'rbd://image/'"
op|','
nl|'\n'
string|"'rbd://fsid/pool/image/'"
op|','
nl|'\n'
string|"'rbd://fsid/pool/image/snap/'"
op|','
nl|'\n'
string|"'rbd://///'"
op|','
op|']'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'disk_format'"
op|':'
string|"'raw'"
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'loc'
name|'in'
name|'locations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'parse_url'
op|','
name|'loc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
op|'{'
string|"'url'"
op|':'
name|'loc'
op|'}'
op|','
nl|'\n'
name|'image_meta'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'get_fsid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_cloneable
name|'def'
name|'test_cloneable'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|','
name|'mock_get_fsid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_fsid'
op|'.'
name|'return_value'
op|'='
string|"'abc'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"'rbd://abc/pool/image/snap'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'disk_format'"
op|':'
string|"'raw'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
name|'location'
op|','
name|'image_meta'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_get_fsid'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'get_fsid'"
op|')'
newline|'\n'
DECL|member|test_uncloneable_different_fsid
name|'def'
name|'test_uncloneable_different_fsid'
op|'('
name|'self'
op|','
name|'mock_get_fsid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_fsid'
op|'.'
name|'return_value'
op|'='
string|"'abc'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"'rbd://def/pool/image/snap'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'disk_format'"
op|':'
string|"'raw'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
name|'location'
op|','
name|'image_meta'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_get_fsid'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'get_fsid'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_uncloneable_unreadable
name|'def'
name|'test_uncloneable_unreadable'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|','
name|'mock_proxy'
op|','
nl|'\n'
name|'mock_get_fsid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_fsid'
op|'.'
name|'return_value'
op|'='
string|"'abc'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"'rbd://abc/pool/image/snap'"
op|'}'
newline|'\n'
nl|'\n'
name|'mock_proxy'
op|'.'
name|'side_effect'
op|'='
name|'mock_rbd'
op|'.'
name|'Error'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'disk_format'"
op|':'
string|"'raw'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
name|'location'
op|','
name|'image_meta'
op|')'
op|')'
newline|'\n'
name|'mock_proxy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'image'"
op|','
name|'pool'
op|'='
string|"'pool'"
op|','
nl|'\n'
name|'snapshot'
op|'='
string|"'snap'"
op|','
name|'read_only'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_get_fsid'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'get_fsid'"
op|')'
newline|'\n'
DECL|member|test_uncloneable_bad_format
name|'def'
name|'test_uncloneable_bad_format'
op|'('
name|'self'
op|','
name|'mock_get_fsid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_fsid'
op|'.'
name|'return_value'
op|'='
string|"'abc'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"'rbd://abc/pool/image/snap'"
op|'}'
newline|'\n'
name|'formats'
op|'='
op|'['
string|"'qcow2'"
op|','
string|"'vmdk'"
op|','
string|"'vdi'"
op|']'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'formats'
op|':'
newline|'\n'
indent|'            '
name|'image_meta'
op|'='
op|'{'
string|"'disk_format'"
op|':'
name|'f'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
name|'location'
op|','
name|'image_meta'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_get_fsid'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'get_fsid'"
op|')'
newline|'\n'
DECL|member|test_uncloneable_missing_format
name|'def'
name|'test_uncloneable_missing_format'
op|'('
name|'self'
op|','
name|'mock_get_fsid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_get_fsid'
op|'.'
name|'return_value'
op|'='
string|"'abc'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"'rbd://abc/pool/image/snap'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'is_cloneable'
op|'('
name|'location'
op|','
name|'image_meta'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_get_fsid'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
DECL|member|test_get_mon_addrs
name|'def'
name|'test_get_mon_addrs'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_execute'
op|'.'
name|'return_value'
op|'='
op|'('
name|'CEPH_MON_DUMP'
op|','
string|"''"
op|')'
newline|'\n'
name|'hosts'
op|'='
op|'['
string|"'::1'"
op|','
string|"'::1'"
op|','
string|"'::1'"
op|','
string|"'127.0.0.1'"
op|','
string|"'example.com'"
op|']'
newline|'\n'
name|'ports'
op|'='
op|'['
string|"'6789'"
op|','
string|"'6790'"
op|','
string|"'6791'"
op|','
string|"'6792'"
op|','
string|"'6791'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
name|'hosts'
op|','
name|'ports'
op|')'
op|','
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_mon_addrs'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'_connect_to_rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
DECL|member|test_rbd_conf_features
name|'def'
name|'test_rbd_conf_features'
op|'('
name|'self'
op|','
name|'mock_rbd'
op|','
name|'mock_connect'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_rbd'
op|'.'
name|'RBD_FEATURE_LAYERING'
op|'='
number|'1'
newline|'\n'
name|'mock_cluster'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_cluster'
op|'.'
name|'conf_get'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_cluster'
op|'.'
name|'conf_get'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'mock_connect'
op|'.'
name|'return_value'
op|'='
op|'('
name|'mock_cluster'
op|','
name|'None'
op|')'
newline|'\n'
name|'client'
op|'='
name|'rbd_utils'
op|'.'
name|'RADOSClient'
op|'('
name|'self'
op|'.'
name|'driver'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'client'
op|'.'
name|'features'
op|')'
newline|'\n'
nl|'\n'
name|'mock_cluster'
op|'.'
name|'conf_get'
op|'.'
name|'return_value'
op|'='
string|"'2'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'client'
op|'.'
name|'features'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_clone
name|'def'
name|'test_clone'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|','
name|'mock_client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pool'
op|'='
string|"u'images'"
newline|'\n'
name|'image'
op|'='
string|"u'image-name'"
newline|'\n'
name|'snap'
op|'='
string|"u'snapshot-name'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"u'rbd://fsid/%s/%s/%s'"
op|'%'
op|'('
name|'pool'
op|','
name|'image'
op|','
name|'snap'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'client_stack'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock__enter__
name|'def'
name|'mock__enter__'
op|'('
name|'inst'
op|')'
op|':'
newline|'\n'
DECL|function|_inner
indent|'            '
name|'def'
name|'_inner'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'client_stack'
op|'.'
name|'append'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
dedent|''
name|'return'
name|'_inner'
newline|'\n'
nl|'\n'
dedent|''
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
comment|'# capture both rados client used to perform the clone'
nl|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'side_effect'
op|'='
name|'mock__enter__'
op|'('
name|'client'
op|')'
newline|'\n'
nl|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'clone'
op|'('
name|'location'
op|','
name|'self'
op|'.'
name|'volume_name'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'['
name|'client_stack'
op|'['
number|'0'
op|']'
op|'.'
name|'ioctx'
op|','
name|'str'
op|'('
name|'image'
op|')'
op|','
name|'str'
op|'('
name|'snap'
op|')'
op|','
nl|'\n'
name|'client_stack'
op|'['
number|'1'
op|']'
op|'.'
name|'ioctx'
op|','
name|'str'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|')'
op|']'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'features'"
op|':'
name|'client'
op|'.'
name|'features'
op|'}'
newline|'\n'
name|'rbd'
op|'.'
name|'clone'
op|'.'
name|'assert_called_once_with'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_clone_eperm
name|'def'
name|'test_clone_eperm'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|','
name|'mock_client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pool'
op|'='
string|"u'images'"
newline|'\n'
name|'image'
op|'='
string|"u'image-name'"
newline|'\n'
name|'snap'
op|'='
string|"u'snapshot-name'"
newline|'\n'
name|'location'
op|'='
op|'{'
string|"'url'"
op|':'
string|"u'rbd://fsid/%s/%s/%s'"
op|'%'
op|'('
name|'pool'
op|','
name|'image'
op|','
name|'snap'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'client_stack'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock__enter__
name|'def'
name|'mock__enter__'
op|'('
name|'inst'
op|')'
op|':'
newline|'\n'
DECL|function|_inner
indent|'            '
name|'def'
name|'_inner'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'client_stack'
op|'.'
name|'append'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
dedent|''
name|'return'
name|'_inner'
newline|'\n'
nl|'\n'
dedent|''
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
comment|'# capture both rados client used to perform the clone'
nl|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'side_effect'
op|'='
name|'mock__enter__'
op|'('
name|'client'
op|')'
newline|'\n'
nl|'\n'
name|'setattr'
op|'('
name|'mock_rbd'
op|','
string|"'PermissionError'"
op|','
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'rbd'
op|'.'
name|'clone'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'clone'
op|','
name|'location'
op|','
name|'self'
op|'.'
name|'volume_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_resize
name|'def'
name|'test_resize'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'size'
op|'='
number|'1024'
newline|'\n'
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'resize'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'size'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'resize'
op|'.'
name|'assert_called_once_with'
op|'('
name|'size'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'_disconnect_from_rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|"'_connect_to_rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_rbd_volume_proxy_init
name|'def'
name|'test_rbd_volume_proxy_init'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|','
nl|'\n'
name|'mock_connect_from_rados'
op|','
nl|'\n'
name|'mock_disconnect_from_rados'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_connect_from_rados'
op|'.'
name|'return_value'
op|'='
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_disconnect_from_rados'
op|'.'
name|'return_value'
op|'='
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'rbd_utils'
op|'.'
name|'RBDVolumeProxy'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
name|'self'
op|'.'
name|'volume_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_connect_from_rados'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_disconnect_from_rados'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_disconnect_from_rados'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_connect_to_rados_default
name|'def'
name|'test_connect_to_rados_default'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_connect_to_rados'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'connect'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'ret'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'ioctx'
op|','
name|'ret'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'assert_called_with'
op|'('
name|'self'
op|'.'
name|'rbd_pool'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_connect_to_rados_different_pool
name|'def'
name|'test_connect_to_rados_different_pool'
op|'('
name|'self'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_connect_to_rados'
op|'('
string|"'alt_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'connect'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'ret'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'ioctx'
op|','
name|'ret'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'assert_called_with'
op|'('
string|"'alt_pool'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
DECL|member|test_connect_to_rados_error
name|'def'
name|'test_connect_to_rados_error'
op|'('
name|'self'
op|','
name|'mock_rados'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'side_effect'
op|'='
name|'mock_rados'
op|'.'
name|'Error'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'mock_rados'
op|'.'
name|'Error'
op|','
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_connect_to_rados'
op|')'
newline|'\n'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'open_ioctx'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'rbd_pool'
op|')'
newline|'\n'
name|'mock_rados'
op|'.'
name|'Rados'
op|'.'
name|'shutdown'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ceph_args_none
dedent|''
name|'def'
name|'test_ceph_args_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rbd_user'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_conf'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_args'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ceph_args_rbd_user
dedent|''
name|'def'
name|'test_ceph_args_rbd_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rbd_user'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_conf'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'--id'"
op|','
string|"'foo'"
op|']'
op|','
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_args'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ceph_args_ceph_conf
dedent|''
name|'def'
name|'test_ceph_args_ceph_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rbd_user'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_conf'
op|'='
string|"'/path/bar.conf'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'--conf'"
op|','
string|"'/path/bar.conf'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_args'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ceph_args_rbd_user_and_ceph_conf
dedent|''
name|'def'
name|'test_ceph_args_rbd_user_and_ceph_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rbd_user'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_conf'
op|'='
string|"'/path/bar.conf'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'--id'"
op|','
string|"'foo'"
op|','
string|"'--conf'"
op|','
string|"'/path/bar.conf'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'ceph_args'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_exists
name|'def'
name|'test_exists'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snapshot'
op|'='
string|"'snap'"
newline|'\n'
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rbd_pool'
op|','
nl|'\n'
name|'snapshot'
op|')'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
DECL|member|test_cleanup_volumes
name|'def'
name|'test_cleanup_volumes'
op|'('
name|'self'
op|','
name|'mock_client'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'12345'"
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'rbd'
op|'.'
name|'list'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'12345_test'"
op|','
string|"'111_test'"
op|']'
newline|'\n'
nl|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_called_once_with'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
string|"'12345_test'"
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
DECL|member|_test_cleanup_exception
name|'def'
name|'_test_cleanup_exception'
op|'('
name|'self'
op|','
name|'exception_name'
op|','
nl|'\n'
name|'mock_client'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'12345'"
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'setattr'
op|'('
name|'mock_rbd'
op|','
name|'exception_name'
op|','
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
name|'rbd'
op|'.'
name|'list'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'12345_test'"
op|','
string|"'111_test'"
op|']'
newline|'\n'
nl|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.greenthread.sleep'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_any_call'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
string|"'12345_test'"
op|')'
newline|'\n'
comment|'# NOTE(danms): 10 retries + 1 final attempt to propagate = 11'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'11'
op|','
name|'len'
op|'('
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'call_args_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_fail_not_found
dedent|''
name|'def'
name|'test_cleanup_volumes_fail_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cleanup_exception'
op|'('
string|"'ImageBusy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_fail_snapshots
dedent|''
name|'def'
name|'test_cleanup_volumes_fail_snapshots'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cleanup_exception'
op|'('
string|"'ImageHasSnapshots'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_fail_other
dedent|''
name|'def'
name|'test_cleanup_volumes_fail_other'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_cleanup_exception'
op|','
string|"'DoesNotExist'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_cleanup_volumes_pending_resize
name|'def'
name|'test_cleanup_volumes_pending_resize'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|','
name|'mock_client'
op|','
nl|'\n'
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'12345'"
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'setattr'
op|'('
name|'mock_rbd'
op|','
string|"'ImageHasSnapshots'"
op|','
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|','
name|'None'
op|']'
newline|'\n'
name|'rbd'
op|'.'
name|'list'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'12345_test'"
op|','
string|"'111_test'"
op|']'
newline|'\n'
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'libvirt_utils'
op|'.'
name|'RESIZE_SNAPSHOT_NAME'
op|'}'
op|']'
newline|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'remove_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
string|"'12345_test'"
op|')'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'remove_call'
op|','
name|'remove_call'
op|']'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'RESIZE_SNAPSHOT_NAME'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
DECL|member|test_cleanup_volumes_reverting_resize
name|'def'
name|'test_cleanup_volumes_reverting_resize'
op|'('
name|'self'
op|','
name|'mock_client'
op|','
name|'mock_rados'
op|','
nl|'\n'
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
string|"'12345'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|')'
newline|'\n'
nl|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'rbd'
op|'.'
name|'list'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'12345_test'"
op|','
string|"'111_test'"
op|','
nl|'\n'
string|"'12345_test_disk.local'"
op|']'
newline|'\n'
nl|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'cleanup_volumes'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_called_once_with'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
nl|'\n'
string|"'12345_test_disk.local'"
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
DECL|member|test_destroy_volume
name|'def'
name|'test_destroy_volume'
op|'('
name|'self'
op|','
name|'mock_client'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
name|'vol'
op|'='
string|"'12345_test'"
newline|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'destroy_volume'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_called_once_with'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
name|'vol'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RADOSClient'"
op|')'
newline|'\n'
DECL|member|test_remove_image
name|'def'
name|'test_remove_image'
op|'('
name|'self'
op|','
name|'mock_client'
op|','
name|'mock_rados'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
string|"'12345_disk.config.rescue'"
newline|'\n'
nl|'\n'
name|'rbd'
op|'='
name|'mock_rbd'
op|'.'
name|'RBD'
op|'.'
name|'return_value'
newline|'\n'
nl|'\n'
name|'client'
op|'='
name|'mock_client'
op|'.'
name|'return_value'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_image'
op|'('
name|'name'
op|')'
newline|'\n'
name|'rbd'
op|'.'
name|'remove'
op|'.'
name|'assert_called_once_with'
op|'('
name|'client'
op|'.'
name|'ioctx'
op|','
name|'name'
op|')'
newline|'\n'
comment|'# Make sure that we entered and exited the RADOSClient'
nl|'\n'
name|'client'
op|'.'
name|'__enter__'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'__exit__'
op|'.'
name|'assert_called_once_with'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_create_snap
name|'def'
name|'test_create_snap'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'create_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_create_protected_snap
name|'def'
name|'test_create_protected_snap'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|','
name|'protect'
op|'='
name|'True'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'create_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'protect_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_remove_snap
name|'def'
name|'test_remove_snap'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'snap_name'
op|'}'
op|']'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_remove_snap_force
name|'def'
name|'test_remove_snap_force'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'snap_name'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'unprotect_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_remove_snap_does_nothing_when_no_snapshot
name|'def'
name|'test_remove_snap_does_nothing_when_no_snapshot'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'some-other-snaphot'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_remove_snap_does_nothing_when_protected
name|'def'
name|'test_remove_snap_does_nothing_when_protected'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'snap_name'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_remove_snap_protected_ignore_errors
name|'def'
name|'test_remove_snap_protected_ignore_errors'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'is_protected_snap'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'snap_name'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'remove_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|','
nl|'\n'
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'remove_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_parent_info
name|'def'
name|'test_parent_info'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'parent_info'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'parent_info'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_parent_info_throws_exception_on_error
name|'def'
name|'test_parent_info_throws_exception_on_error'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|','
name|'mock_rbd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'mock_rbd'
op|','
string|"'ImageNotFound'"
op|','
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'proxy'
op|'.'
name|'parent_info'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'parent_info'
op|','
name|'self'
op|'.'
name|'volume_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_flatten
name|'def'
name|'test_flatten'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'flatten'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'flatten'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|','
string|"'RBDVolumeProxy'"
op|')'
newline|'\n'
DECL|member|test_rollback_to_snap
name|'def'
name|'test_rollback_to_snap'
op|'('
name|'self'
op|','
name|'mock_proxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy'
op|'='
name|'mock_proxy'
op|'.'
name|'return_value'
newline|'\n'
name|'proxy'
op|'.'
name|'__enter__'
op|'.'
name|'return_value'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SnapshotNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rollback_to_snap'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
nl|'\n'
name|'proxy'
op|'.'
name|'list_snaps'
op|'.'
name|'return_value'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'snap_name'
op|'}'
op|','
op|']'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'rollback_to_snap'
op|'('
name|'self'
op|'.'
name|'volume_name'
op|','
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'rollback_to_snap'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'snap_name'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
