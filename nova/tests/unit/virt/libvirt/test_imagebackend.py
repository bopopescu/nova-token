begin_unit
comment|'# Copyright 2012 Grid Dynamics'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'inspect'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'lockutils'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'fixture'
name|'as'
name|'config_fixture'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'keymgr'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'imageutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_processutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fake_libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'image'
name|'import'
name|'model'
name|'as'
name|'imgmodel'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
name|'as'
name|'vconfig'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'imagebackend'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'storage'
name|'import'
name|'rbd_utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'fixed_key'"
op|','
string|"'nova.keymgr.conf_key_mgr'"
op|','
name|'group'
op|'='
string|"'keymgr'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSecret
name|'class'
name|'FakeSecret'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|value
indent|'    '
name|'def'
name|'value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'base64'
op|'.'
name|'b64decode'
op|'('
string|'"MTIzNDU2Cg=="'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConn
dedent|''
dedent|''
name|'class'
name|'FakeConn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|secretLookupByUUIDString
indent|'    '
name|'def'
name|'secretLookupByUUIDString'
op|'('
name|'self'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeSecret'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_ImageTestCase
dedent|''
dedent|''
name|'class'
name|'_ImageTestCase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|mock_create_image
indent|'    '
name|'def'
name|'mock_create_image'
op|'('
name|'self'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
DECL|function|create_image
indent|'        '
name|'def'
name|'create_image'
op|'('
name|'fn'
op|','
name|'base'
op|','
name|'size'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'('
name|'target'
op|'='
name|'base'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'image'
op|'.'
name|'create_image'
op|'='
name|'create_image'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_ImageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'config_fixture'
op|'.'
name|'Config'
op|'('
name|'lockutils'
op|'.'
name|'CONF'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
name|'suffix'
op|'='
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fixture'
op|'.'
name|'config'
op|'('
name|'disable_process_locking'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'oslo_concurrency'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'disk.info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'NAME'
op|'='
string|"'fake.vm'"
newline|'\n'
name|'self'
op|'.'
name|'TEMPLATE'
op|'='
string|"'template'"
newline|'\n'
name|'self'
op|'.'
name|'CONTEXT'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|'='
name|'fake_libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'forceold'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|')'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(mikal): rename template_dir to base_dir and template_path'
nl|'\n'
comment|'# to cached_image_path. This will be less confusing.'
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
string|"'_base'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|','
string|"'template'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_ImageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image
dedent|''
name|'def'
name|'test_prealloc_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'preallocate_images'"
op|','
string|"'space'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'access'"
op|','
name|'lambda'
name|'p'
op|','
name|'w'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Call twice to verify testing fallocate is only called once.'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'fallocate -n -l 1 %s.fallocate_test'"
op|'%'
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
string|"'fallocate -n -l %s %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|','
name|'self'
op|'.'
name|'PATH'
op|')'
op|','
nl|'\n'
string|"'fallocate -n -l %s %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|','
name|'self'
op|'.'
name|'PATH'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image_without_write_access
dedent|''
name|'def'
name|'test_prealloc_image_without_write_access'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'preallocate_images'"
op|','
string|"'space'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'_can_fallocate'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'access'"
op|','
name|'lambda'
name|'p'
op|','
name|'w'
op|':'
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# Testing fallocate is only called when user has write access.'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_fs_info
dedent|''
name|'def'
name|'test_libvirt_fs_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'fs'
op|'='
name|'image'
op|'.'
name|'libvirt_fs_info'
op|'('
string|'"/mnt"'
op|')'
newline|'\n'
comment|"# check that exception hasn't been raised and the method"
nl|'\n'
comment|'# returned correct object'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'fs'
op|','
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestFilesys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'target_dir'
op|','
string|'"/mnt"'
op|')'
newline|'\n'
name|'if'
name|'image'
op|'.'
name|'is_block_dev'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'source_type'
op|','
string|'"block"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'source_dev'
op|','
name|'image'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'source_type'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fs'
op|'.'
name|'source_file'
op|','
name|'image'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.disk.api.get_disk_size'"
op|')'
newline|'\n'
DECL|member|test_get_disk_size
name|'def'
name|'test_get_disk_size'
op|'('
name|'self'
op|','
name|'get_disk_size'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_disk_size'
op|'.'
name|'return_value'
op|'='
number|'2361393152'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2361393152'
op|','
name|'image'
op|'.'
name|'get_disk_size'
op|'('
name|'image'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
name|'get_disk_size'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RawTestCase
dedent|''
dedent|''
name|'class'
name|'RawTestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|SIZE
indent|'    '
name|'SIZE'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Raw'
newline|'\n'
name|'super'
op|'('
name|'RawTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Raw'
op|','
string|"'correct_format'"
op|','
name|'lambda'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|prepare_mocks
dedent|''
name|'def'
name|'prepare_mocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'utils'
op|'.'
name|'synchronized'
op|','
nl|'\n'
string|"'__call__'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
string|"'copy_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|')'
newline|'\n'
name|'return'
name|'fn'
newline|'\n'
nl|'\n'
DECL|member|test_cache
dedent|''
name|'def'
name|'test_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_image_exists
dedent|''
name|'def'
name|'test_cache_image_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_base_dir_exists
dedent|''
name|'def'
name|'test_cache_base_dir_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_template_exists
dedent|''
name|'def'
name|'test_cache_template_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'max_size'
op|'='
name|'None'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'None'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated
dedent|''
name|'def'
name|'test_create_image_generated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'images'
op|','
string|"'qemu_img_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'imageutils'
op|'.'
name|'QemuImgInfo'
op|'('
op|')'
op|')'
newline|'\n'
DECL|member|test_create_image_extend
name|'def'
name|'test_create_image_extend'
op|'('
name|'self'
op|','
name|'fake_qemu_img_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'image'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'disk'
op|'.'
name|'extend'
op|'('
name|'image'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_correct_format
dedent|''
name|'def'
name|'test_correct_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'images'
op|','
string|"'qemu_img_info'"
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'info'
op|'.'
name|'file_format'
op|'='
string|"'foo'"
newline|'\n'
name|'imagebackend'
op|'.'
name|'images'
op|'.'
name|'qemu_img_info'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'info'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|','
name|'path'
op|'='
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|'.'
name|'driver_format'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'images'
op|','
string|"'qemu_img_info'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InvalidDiskInfo'
op|'('
nl|'\n'
name|'reason'
op|'='
string|"'invalid path'"
op|')'
op|')'
newline|'\n'
DECL|member|test_resolve_driver_format
name|'def'
name|'test_resolve_driver_format'
op|'('
name|'self'
op|','
name|'fake_qemu_img_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'driver_format'
op|'='
name|'image'
op|'.'
name|'resolve_driver_format'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'driver_format'
op|','
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_model
dedent|''
name|'def'
name|'test_get_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'model'
op|'='
name|'image'
op|'.'
name|'get_model'
op|'('
name|'FakeConn'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_RAW'
op|')'
op|','
nl|'\n'
name|'model'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Qcow2TestCase
dedent|''
dedent|''
name|'class'
name|'Qcow2TestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|SIZE
indent|'    '
name|'SIZE'
op|'='
name|'units'
op|'.'
name|'Gi'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Qcow2'
newline|'\n'
name|'super'
op|'('
name|'Qcow2TestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'QCOW2_BASE'
op|'='
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|'+'
nl|'\n'
string|"'_%d'"
op|'%'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|'/'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|prepare_mocks
dedent|''
name|'def'
name|'prepare_mocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'utils'
op|'.'
name|'synchronized'
op|','
nl|'\n'
string|"'__call__'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'create_cow_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
string|"'copy_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|')'
newline|'\n'
name|'return'
name|'fn'
newline|'\n'
nl|'\n'
DECL|member|test_cache
dedent|''
name|'def'
name|'test_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_image_exists
dedent|''
name|'def'
name|'test_cache_image_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_base_dir_exists
dedent|''
name|'def'
name|'test_cache_base_dir_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_template_exists
dedent|''
name|'def'
name|'test_cache_template_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'None'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'create_cow_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_with_size
dedent|''
name|'def'
name|'test_create_image_with_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
nl|'\n'
string|"'verify_base_size'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'verify_base_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'create_cow_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'image'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'disk'
op|'.'
name|'extend'
op|'('
name|'image'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_too_small
dedent|''
name|'def'
name|'test_create_image_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Qcow2'
op|','
string|"'get_disk_size'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Qcow2'
op|'.'
name|'get_disk_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_generate_resized_backing_files
dedent|''
name|'def'
name|'test_generate_resized_backing_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'get_disk_backing_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
nl|'\n'
string|"'verify_base_size'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'QCOW2_BASE'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'QCOW2_BASE'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'verify_base_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'QCOW2_BASE'
op|')'
newline|'\n'
name|'image'
op|'='
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'QCOW2_BASE'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'disk'
op|'.'
name|'extend'
op|'('
name|'image'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_qcow2_exists_and_has_no_backing_file
dedent|''
name|'def'
name|'test_qcow2_exists_and_has_no_backing_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'get_disk_backing_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
nl|'\n'
string|"'verify_base_size'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'DISK_INFO_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'INSTANCES_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'verify_base_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resolve_driver_format
dedent|''
name|'def'
name|'test_resolve_driver_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'driver_format'
op|'='
name|'image'
op|'.'
name|'resolve_driver_format'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'driver_format'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_model
dedent|''
name|'def'
name|'test_get_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'model'
op|'='
name|'image'
op|'.'
name|'get_model'
op|'('
name|'FakeConn'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'imgmodel'
op|'.'
name|'LocalFileImage'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
name|'imgmodel'
op|'.'
name|'FORMAT_QCOW2'
op|')'
op|','
nl|'\n'
name|'model'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LvmTestCase
dedent|''
dedent|''
name|'class'
name|'LvmTestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|VG
indent|'    '
name|'VG'
op|'='
string|"'FakeVG'"
newline|'\n'
DECL|variable|TEMPLATE_SIZE
name|'TEMPLATE_SIZE'
op|'='
number|'512'
newline|'\n'
DECL|variable|SIZE
name|'SIZE'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Lvm'
newline|'\n'
name|'super'
op|'('
name|'LvmTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_volume_group'
op|'='
name|'self'
op|'.'
name|'VG'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'ephemeral_storage_encryption'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'ephemeral_key_uuid'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'LV'
op|'='
string|"'%s_%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/dev'"
op|','
name|'self'
op|'.'
name|'VG'
op|','
name|'self'
op|'.'
name|'LV'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'='
name|'imagebackend'
op|'.'
name|'disk'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'='
name|'imagebackend'
op|'.'
name|'utils'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'='
name|'imagebackend'
op|'.'
name|'lvm'
newline|'\n'
nl|'\n'
DECL|member|prepare_mocks
dedent|''
name|'def'
name|'prepare_mocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'return'
name|'fn'
newline|'\n'
nl|'\n'
DECL|member|_create_image
dedent|''
name|'def'
name|'_create_image'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'None'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-O'"
op|','
string|"'raw'"
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'('
op|'*'
name|'cmd'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_image_generated
dedent|''
name|'def'
name|'_create_image_generated'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'PATH'
op|','
name|'ephemeral_size'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
name|'ephemeral_size'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_image_resize
dedent|''
name|'def'
name|'_create_image_resize'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-O'"
op|','
string|"'raw'"
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'('
op|'*'
name|'cmd'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'resize2fs'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache
dedent|''
name|'def'
name|'test_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_image_exists
dedent|''
name|'def'
name|'test_cache_image_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_base_dir_exists
dedent|''
name|'def'
name|'test_cache_base_dir_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_sparsed
dedent|''
name|'def'
name|'test_create_image_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated
dedent|''
name|'def'
name|'test_create_image_generated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image_generated'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated_sparsed
dedent|''
name|'def'
name|'test_create_image_generated_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image_generated'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_resize
dedent|''
name|'def'
name|'test_create_image_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image_resize'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_resize_sparsed
dedent|''
name|'def'
name|'test_create_image_resize_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image_resize'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_negative
dedent|''
name|'def'
name|'test_create_image_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'RuntimeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'('
op|'['
name|'self'
op|'.'
name|'PATH'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'RuntimeError'
op|','
name|'image'
op|'.'
name|'create_image'
op|','
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated_negative
dedent|''
name|'def'
name|'test_create_image_generated_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'RuntimeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'('
op|'['
name|'self'
op|'.'
name|'PATH'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'RuntimeError'
op|','
name|'image'
op|'.'
name|'create_image'
op|','
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image
dedent|''
name|'def'
name|'test_prealloc_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'preallocate_images'"
op|','
string|"'space'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EncryptedLvmTestCase
dedent|''
dedent|''
name|'class'
name|'EncryptedLvmTestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|VG
indent|'    '
name|'VG'
op|'='
string|"'FakeVG'"
newline|'\n'
DECL|variable|TEMPLATE_SIZE
name|'TEMPLATE_SIZE'
op|'='
number|'512'
newline|'\n'
DECL|variable|SIZE
name|'SIZE'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'EncryptedLvmTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Lvm'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'ephemeral_storage_encryption'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cipher'
op|'='
string|"'aes-xts-plain64'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'ephemeral_storage_encryption'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'key_size'
op|'='
number|'512'
op|','
name|'group'
op|'='
string|"'ephemeral_storage_encryption'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'fixed_key'
op|'='
string|"'00000000000000000000000000000000'"
nl|'\n'
string|"'00000000000000000000000000000000'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'keymgr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_volume_group'
op|'='
name|'self'
op|'.'
name|'VG'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'LV'
op|'='
string|"'%s_%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/dev'"
op|','
name|'self'
op|'.'
name|'VG'
op|','
name|'self'
op|'.'
name|'LV'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'PATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/dev/mapper'"
op|','
nl|'\n'
name|'imagebackend'
op|'.'
name|'dmcrypt'
op|'.'
name|'volume_name'
op|'('
name|'self'
op|'.'
name|'LV'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key_manager'
op|'='
name|'keymgr'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'ephemeral_key_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'key_manager'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'KEY'
op|'='
name|'self'
op|'.'
name|'key_manager'
op|'.'
name|'get_key'
op|'('
name|'self'
op|'.'
name|'CONTEXT'
op|','
nl|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'ephemeral_key_uuid'"
op|']'
op|')'
op|'.'
name|'get_encoded'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'lvm'
op|'='
name|'imagebackend'
op|'.'
name|'lvm'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'='
name|'imagebackend'
op|'.'
name|'disk'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'='
name|'imagebackend'
op|'.'
name|'utils'
newline|'\n'
name|'self'
op|'.'
name|'libvirt_utils'
op|'='
name|'imagebackend'
op|'.'
name|'libvirt_utils'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'='
name|'imagebackend'
op|'.'
name|'dmcrypt'
newline|'\n'
nl|'\n'
DECL|member|_create_image
dedent|''
name|'def'
name|'_create_image'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|','
nl|'\n'
name|'max_size'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|','
nl|'\n'
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'qemu-img'"
op|','
nl|'\n'
string|"'convert'"
op|','
nl|'\n'
string|"'-O'"
op|','
nl|'\n'
string|"'raw'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'assert_called_with'
op|'('
op|'*'
name|'cmd'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_image_generated
dedent|''
dedent|''
name|'def'
name|'_create_image_generated'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|','
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_image_resize
dedent|''
dedent|''
name|'def'
name|'_create_image_resize'
op|'('
name|'self'
op|','
name|'sparse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|','
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'.'
name|'assert_called_with'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'sparse'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'qemu-img'"
op|','
nl|'\n'
string|"'convert'"
op|','
nl|'\n'
string|"'-O'"
op|','
nl|'\n'
string|"'raw'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'.'
name|'assert_called_with'
op|'('
op|'*'
name|'cmd'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'resize2fs'
op|'.'
name|'assert_called_with'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_sparsed
dedent|''
name|'def'
name|'test_create_image_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated
dedent|''
name|'def'
name|'test_create_image_generated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image_generated'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated_sparsed
dedent|''
name|'def'
name|'test_create_image_generated_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image_generated'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_resize
dedent|''
name|'def'
name|'test_create_image_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_image_resize'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_resize_sparsed
dedent|''
name|'def'
name|'test_create_image_resize_sparsed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sparse_logical_volumes'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_image_resize'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_negative
dedent|''
name|'def'
name|'test_create_image_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'side_effect'
op|'='
name|'RuntimeError'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'RuntimeError'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|','
nl|'\n'
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'delete_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'.'
name|'assert_called_with'
op|'('
op|'['
name|'self'
op|'.'
name|'LV_PATH'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_encrypt_negative
dedent|''
dedent|''
name|'def'
name|'test_create_image_encrypt_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'side_effect'
op|'='
name|'RuntimeError'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'RuntimeError'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|','
nl|'\n'
name|'max_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk'
op|'.'
name|'get_disk_size'
op|'.'
name|'assert_called_with'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'volume_name'
op|'('
name|'self'
op|'.'
name|'LV'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'delete_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'.'
name|'assert_called_with'
op|'('
op|'['
name|'self'
op|'.'
name|'LV_PATH'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated_negative
dedent|''
dedent|''
name|'def'
name|'test_create_image_generated_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'.'
name|'side_effect'
op|'='
name|'RuntimeError'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'RuntimeError'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'fn'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'target'
op|'='
name|'self'
op|'.'
name|'PATH'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'delete_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'.'
name|'assert_called_with'
op|'('
op|'['
name|'self'
op|'.'
name|'LV_PATH'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_generated_encrypt_negative
dedent|''
dedent|''
name|'def'
name|'test_create_image_generated_encrypt_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'lvm'
op|','
string|"'remove_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'resize2fs'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'disk'
op|','
string|"'get_disk_size'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_SIZE'
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'create_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'delete_volume'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'dmcrypt'
op|','
string|"'list_volumes'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_lvm_image'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'libvirt_utils'
op|','
string|"'remove_logical_volumes'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'.'
name|'side_effect'
op|'='
name|'RuntimeError'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'RuntimeError'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'fn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'ephemeral_size'
op|'='
name|'None'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'CONTEXT'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'VG'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'SIZE'
op|','
nl|'\n'
name|'sparse'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'create_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'LV_PATH'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'cipher'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'ephemeral_storage_encryption'
op|'.'
name|'key_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'KEY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dmcrypt'
op|'.'
name|'delete_volume'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|'.'
name|'rpartition'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lvm'
op|'.'
name|'remove_volumes'
op|'.'
name|'assert_called_with'
op|'('
op|'['
name|'self'
op|'.'
name|'LV_PATH'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image
dedent|''
dedent|''
name|'def'
name|'test_prealloc_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
string|"'space'"
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_model
dedent|''
name|'def'
name|'test_get_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'model'
op|'='
name|'image'
op|'.'
name|'get_model'
op|'('
name|'FakeConn'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'imgmodel'
op|'.'
name|'LocalBlockImage'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|','
nl|'\n'
name|'model'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RbdTestCase
dedent|''
dedent|''
name|'class'
name|'RbdTestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|POOL
indent|'    '
name|'POOL'
op|'='
string|'"FakePool"'
newline|'\n'
DECL|variable|USER
name|'USER'
op|'='
string|'"FakeUser"'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
string|'"FakeConf"'
newline|'\n'
DECL|variable|SIZE
name|'SIZE'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Rbd'
newline|'\n'
name|'super'
op|'('
name|'RbdTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_pool'
op|'='
name|'self'
op|'.'
name|'POOL'
op|','
nl|'\n'
name|'rbd_user'
op|'='
name|'self'
op|'.'
name|'USER'
op|','
nl|'\n'
name|'images_rbd_ceph_conf'
op|'='
name|'self'
op|'.'
name|'CONF'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirt_utils'
op|'='
name|'imagebackend'
op|'.'
name|'libvirt_utils'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'='
name|'imagebackend'
op|'.'
name|'utils'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache
dedent|''
name|'def'
name|'test_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_base_dir_exists
dedent|''
name|'def'
name|'test_cache_base_dir_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_image_exists
dedent|''
name|'def'
name|'test_cache_image_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_template_exists
dedent|''
name|'def'
name|'test_cache_template_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'None'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'rbd_utils'
op|'.'
name|'rbd'
op|'.'
name|'RBD_FEATURE_LAYERING'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'rbd_name'
op|'='
string|'"%s_%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'rbd'"
op|','
string|"'import'"
op|','
string|"'--pool'"
op|','
name|'self'
op|'.'
name|'POOL'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'rbd_name'
op|','
string|"'--new-format'"
op|','
string|"'--id'"
op|','
name|'self'
op|'.'
name|'USER'
op|','
nl|'\n'
string|"'--conf'"
op|','
name|'self'
op|'.'
name|'CONF'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_resize
dedent|''
name|'def'
name|'test_create_image_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'full_size'
op|'='
name|'self'
op|'.'
name|'SIZE'
op|'*'
number|'2'
newline|'\n'
name|'fn'
op|'('
name|'max_size'
op|'='
name|'full_size'
op|','
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
nl|'\n'
name|'rbd_utils'
op|'.'
name|'rbd'
op|'.'
name|'RBD_FEATURE_LAYERING'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'rbd_name'
op|'='
string|'"%s_%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'rbd'"
op|','
string|"'import'"
op|','
string|"'--pool'"
op|','
name|'self'
op|'.'
name|'POOL'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
nl|'\n'
name|'rbd_name'
op|','
string|"'--new-format'"
op|','
string|"'--id'"
op|','
name|'self'
op|'.'
name|'USER'
op|','
nl|'\n'
string|"'--conf'"
op|','
name|'self'
op|'.'
name|'CONF'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'get_disk_size'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'get_disk_size'
op|'('
name|'rbd_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'resize'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'driver'
op|'.'
name|'resize'
op|'('
name|'rbd_name'
op|','
name|'full_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'verify_base_size'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'verify_base_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'full_size'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'full_size'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_already_exists
dedent|''
name|'def'
name|'test_create_image_already_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rbd_utils'
op|'.'
name|'rbd'
op|'.'
name|'RBD_FEATURE_LAYERING'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'image'
op|','
string|"'get_disk_size'"
op|')'
newline|'\n'
name|'image'
op|'.'
name|'get_disk_size'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'check_image_exists'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'rbd_name'
op|'='
string|'"%s_%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'uuid'"
op|']'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'get_disk_size'
op|'('
name|'rbd_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image
dedent|''
name|'def'
name|'test_prealloc_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'preallocate_images'"
op|','
string|"'space'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_processutils'
op|'.'
name|'fake_execute_get_log'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parent_compatible
dedent|''
name|'def'
name|'test_parent_compatible'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inspect'
op|'.'
name|'getargspec'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|'.'
name|'libvirt_info'
op|')'
op|','
nl|'\n'
name|'inspect'
op|'.'
name|'getargspec'
op|'('
name|'self'
op|'.'
name|'image_class'
op|'.'
name|'libvirt_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_path
dedent|''
name|'def'
name|'test_image_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'conf'
op|'='
string|'"FakeConf"'
newline|'\n'
name|'pool'
op|'='
string|'"FakePool"'
newline|'\n'
name|'user'
op|'='
string|'"FakeUser"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_pool'
op|'='
name|'pool'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_ceph_conf'
op|'='
name|'conf'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'rbd_user'
op|'='
name|'user'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'rbd_path'
op|'='
string|'"rbd:%s/%s:id=%s:conf=%s"'
op|'%'
op|'('
name|'pool'
op|','
name|'image'
op|'.'
name|'rbd_name'
op|','
nl|'\n'
name|'user'
op|','
name|'conf'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|'.'
name|'path'
op|','
name|'rbd_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_disk_size
dedent|''
name|'def'
name|'test_get_disk_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'size'"
op|')'
name|'as'
name|'size_mock'
op|':'
newline|'\n'
indent|'            '
name|'size_mock'
op|'.'
name|'return_value'
op|'='
number|'2361393152'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2361393152'
op|','
name|'image'
op|'.'
name|'get_disk_size'
op|'('
name|'image'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
name|'size_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|'.'
name|'rbd_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_too_small
dedent|''
dedent|''
name|'def'
name|'test_create_image_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|','
string|"'driver'"
op|')'
name|'as'
name|'driver_mock'
op|':'
newline|'\n'
indent|'            '
name|'driver_mock'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'driver_mock'
op|'.'
name|'size'
op|'.'
name|'return_value'
op|'='
number|'2'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|','
nl|'\n'
name|'image'
op|'.'
name|'create_image'
op|','
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
number|'1'
op|')'
newline|'\n'
name|'driver_mock'
op|'.'
name|'size'
op|'.'
name|'assert_called_once_with'
op|'('
name|'image'
op|'.'
name|'rbd_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rbd_utils'
op|'.'
name|'RBDDriver'
op|','
string|'"get_mon_addrs"'
op|')'
newline|'\n'
DECL|member|test_get_model
name|'def'
name|'test_get_model'
op|'('
name|'self'
op|','
name|'mock_mon_addrs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pool'
op|'='
string|'"FakePool"'
newline|'\n'
name|'user'
op|'='
string|'"FakeUser"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_pool'
op|'='
name|'pool'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'rbd_user'
op|'='
name|'user'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'rbd_secret_uuid'
op|'='
string|'"3306a5c4-8378-4b3c-aa1f-7b48d3a26172"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_mon_addrs
name|'def'
name|'get_mon_addrs'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'hosts'
op|'='
op|'['
string|'"server1"'
op|','
string|'"server2"'
op|']'
newline|'\n'
name|'ports'
op|'='
op|'['
string|'"1899"'
op|','
string|'"1920"'
op|']'
newline|'\n'
name|'return'
name|'hosts'
op|','
name|'ports'
newline|'\n'
dedent|''
name|'mock_mon_addrs'
op|'.'
name|'side_effect'
op|'='
name|'get_mon_addrs'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'model'
op|'='
name|'image'
op|'.'
name|'get_model'
op|'('
name|'FakeConn'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'imgmodel'
op|'.'
name|'RBDImage'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|'"uuid"'
op|']'
op|'+'
string|'"_fake.vm"'
op|','
nl|'\n'
string|'"FakePool"'
op|','
nl|'\n'
string|'"FakeUser"'
op|','
nl|'\n'
string|'"MTIzNDU2Cg=="'
op|','
nl|'\n'
op|'['
string|'"server1:1899"'
op|','
string|'"server2:1920"'
op|']'
op|')'
op|','
nl|'\n'
name|'model'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_file
dedent|''
name|'def'
name|'test_import_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'remove_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'import_image'"
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_import'
op|','
name|'mock_remove'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'image'
op|'.'
name|'import_file'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'file'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'remote_name'
op|')'
newline|'\n'
name|'name'
op|'='
string|"'%s_%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'remote_name'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'mock_remove'
op|'.'
name|'assert_called_once_with'
op|'('
name|'name'
op|')'
newline|'\n'
name|'mock_import'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'file'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_file_not_found
dedent|''
name|'def'
name|'test_import_file_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'remove_image'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'image'
op|'.'
name|'driver'
op|','
string|"'import_image'"
op|')'
newline|'\n'
DECL|function|_test
name|'def'
name|'_test'
op|'('
name|'mock_import'
op|','
name|'mock_remove'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_exists'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'image'
op|'.'
name|'import_file'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'file'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'remote_name'
op|')'
newline|'\n'
name|'name'
op|'='
string|"'%s_%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'remote_name'
op|')'
newline|'\n'
name|'mock_exists'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_remove'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_import'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'file'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PloopTestCase
dedent|''
dedent|''
name|'class'
name|'PloopTestCase'
op|'('
name|'_ImageTestCase'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|SIZE
indent|'    '
name|'SIZE'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image_class'
op|'='
name|'imagebackend'
op|'.'
name|'Ploop'
newline|'\n'
name|'super'
op|'('
name|'PloopTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'='
name|'imagebackend'
op|'.'
name|'utils'
newline|'\n'
nl|'\n'
DECL|member|prepare_mocks
dedent|''
name|'def'
name|'prepare_mocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'utils'
op|'.'
name|'synchronized'
op|','
nl|'\n'
string|"'__call__'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|','
string|"'copy_image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'return'
name|'fn'
newline|'\n'
nl|'\n'
DECL|member|test_cache
dedent|''
name|'def'
name|'test_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'OLD_STYLE_INSTANCE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'imagebackend'
op|'.'
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_DIR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_create_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Ploop'
op|','
string|"'get_disk_size'"
op|','
name|'lambda'
name|'a'
op|','
name|'b'
op|':'
number|'2048'
op|')'
newline|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'prepare_mocks'
op|'('
op|')'
newline|'\n'
name|'fn'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'max_size'
op|'='
number|'2048'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'img_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
string|'"root.hds"'
op|')'
newline|'\n'
name|'imagebackend'
op|'.'
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'img_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'('
string|'"ploop"'
op|','
string|'"restore-descriptor"'
op|','
string|'"-f"'
op|','
string|'"raw"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PATH'
op|','
name|'img_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'('
string|'"ploop"'
op|','
string|'"grow"'
op|','
string|"'-s'"
op|','
string|'"2K"'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'PATH'
op|','
string|'"DiskDescriptor.xml"'
op|')'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'create_image'
op|'('
name|'fn'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
number|'2048'
op|','
name|'image_id'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prealloc_image
dedent|''
name|'def'
name|'test_prealloc_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
string|"'space'"
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'fake_execute_clear_log'
op|'('
op|')'
newline|'\n'
name|'fake_processutils'
op|'.'
name|'stub_out_processutils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'image_class'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
name|'self'
op|'.'
name|'NAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'target'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
name|'_'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'image'
op|','
string|"'check_image_exists'"
op|','
name|'lambda'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'.'
name|'cache'
op|'('
name|'fake_fetch'
op|','
name|'self'
op|'.'
name|'TEMPLATE_PATH'
op|','
name|'self'
op|'.'
name|'SIZE'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BackendTestCase
dedent|''
dedent|''
name|'class'
name|'BackendTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|INSTANCE
indent|'    '
name|'INSTANCE'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|NAME
name|'NAME'
op|'='
string|"'fake-name.suffix'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BackendTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'ephemeral_storage_encryption'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INSTANCE'
op|'['
string|"'ephemeral_key_uuid'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_image
dedent|''
name|'def'
name|'get_image'
op|'('
name|'self'
op|','
name|'use_cow'
op|','
name|'image_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'imagebackend'
op|'.'
name|'Backend'
op|'('
name|'use_cow'
op|')'
op|'.'
name|'image'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
nl|'\n'
name|'self'
op|'.'
name|'NAME'
op|','
nl|'\n'
name|'image_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_image
dedent|''
name|'def'
name|'_test_image'
op|'('
name|'self'
op|','
name|'image_type'
op|','
name|'image_not_cow'
op|','
name|'image_cow'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image1'
op|'='
name|'self'
op|'.'
name|'get_image'
op|'('
name|'False'
op|','
name|'image_type'
op|')'
newline|'\n'
name|'image2'
op|'='
name|'self'
op|'.'
name|'get_image'
op|'('
name|'True'
op|','
name|'image_type'
op|')'
newline|'\n'
nl|'\n'
DECL|function|assertIsInstance
name|'def'
name|'assertIsInstance'
op|'('
name|'instance'
op|','
name|'class_object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'='
op|'('
string|"'Expected %s,'"
op|'+'
nl|'\n'
string|"' but got %s.'"
op|')'
op|'%'
op|'('
name|'class_object'
op|'.'
name|'__name__'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'instance'
op|','
name|'class_object'
op|','
name|'msg'
op|'='
name|'failure'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'assertIsInstance'
op|'('
name|'image1'
op|','
name|'image_not_cow'
op|')'
newline|'\n'
name|'assertIsInstance'
op|'('
name|'image2'
op|','
name|'image_cow'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_raw
dedent|''
name|'def'
name|'test_image_raw'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_image'
op|'('
string|"'raw'"
op|','
name|'imagebackend'
op|'.'
name|'Raw'
op|','
name|'imagebackend'
op|'.'
name|'Raw'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_raw_preallocate_images
dedent|''
name|'def'
name|'test_image_raw_preallocate_images'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flags'
op|'='
op|'('
string|"'space'"
op|','
string|"'Space'"
op|','
string|"'SPACE'"
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'flags'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
name|'f'
op|')'
newline|'\n'
name|'raw'
op|'='
name|'imagebackend'
op|'.'
name|'Raw'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
string|"'fake_disk'"
op|','
string|"'/tmp/xyz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'raw'
op|'.'
name|'preallocate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_raw_preallocate_images_bad_conf
dedent|''
dedent|''
name|'def'
name|'test_image_raw_preallocate_images_bad_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
string|"'space1'"
op|')'
newline|'\n'
name|'raw'
op|'='
name|'imagebackend'
op|'.'
name|'Raw'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
string|"'fake_disk'"
op|','
string|"'/tmp/xyz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'raw'
op|'.'
name|'preallocate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_qcow2
dedent|''
name|'def'
name|'test_image_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_image'
op|'('
string|"'qcow2'"
op|','
name|'imagebackend'
op|'.'
name|'Qcow2'
op|','
name|'imagebackend'
op|'.'
name|'Qcow2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_qcow2_preallocate_images
dedent|''
name|'def'
name|'test_image_qcow2_preallocate_images'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flags'
op|'='
op|'('
string|"'space'"
op|','
string|"'Space'"
op|','
string|"'SPACE'"
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'flags'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
name|'f'
op|')'
newline|'\n'
name|'qcow'
op|'='
name|'imagebackend'
op|'.'
name|'Qcow2'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
string|"'fake_disk'"
op|','
string|"'/tmp/xyz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'qcow'
op|'.'
name|'preallocate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_qcow2_preallocate_images_bad_conf
dedent|''
dedent|''
name|'def'
name|'test_image_qcow2_preallocate_images_bad_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'preallocate_images'
op|'='
string|"'space1'"
op|')'
newline|'\n'
name|'qcow'
op|'='
name|'imagebackend'
op|'.'
name|'Qcow2'
op|'('
name|'self'
op|'.'
name|'INSTANCE'
op|','
string|"'fake_disk'"
op|','
string|"'/tmp/xyz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'qcow'
op|'.'
name|'preallocate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_lvm
dedent|''
name|'def'
name|'test_image_lvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_volume_group'
op|'='
string|"'FakeVG'"
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_image'
op|'('
string|"'lvm'"
op|','
name|'imagebackend'
op|'.'
name|'Lvm'
op|','
name|'imagebackend'
op|'.'
name|'Lvm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_rbd
dedent|''
name|'def'
name|'test_image_rbd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
string|'"FakeConf"'
newline|'\n'
name|'pool'
op|'='
string|'"FakePool"'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_pool'
op|'='
name|'pool'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'images_rbd_ceph_conf'
op|'='
name|'conf'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rbd_utils'
op|','
string|"'rbd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rbd_utils'
op|','
string|"'rados'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_image'
op|'('
string|"'rbd'"
op|','
name|'imagebackend'
op|'.'
name|'Rbd'
op|','
name|'imagebackend'
op|'.'
name|'Rbd'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_default
dedent|''
name|'def'
name|'test_image_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_image'
op|'('
string|"'default'"
op|','
name|'imagebackend'
op|'.'
name|'Raw'
op|','
name|'imagebackend'
op|'.'
name|'Qcow2'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
