begin_unit
comment|'#    Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
nl|'\n'
comment|'# Allow passing None to the various connect methods'
nl|'\n'
comment|'# (i.e. allow the client to rely on default URLs)'
nl|'\n'
DECL|variable|allow_default_uri_connection
name|'allow_default_uri_connection'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# string indicating the CPU arch'
nl|'\n'
DECL|variable|node_arch
name|'node_arch'
op|'='
name|'arch'
op|'.'
name|'X86_64'
comment|"# or 'i686' (or whatever else uname -m might return)"
newline|'\n'
nl|'\n'
comment|'# memory size in kilobytes'
nl|'\n'
DECL|variable|node_kB_mem
name|'node_kB_mem'
op|'='
number|'4096'
newline|'\n'
nl|'\n'
comment|'# the number of active CPUs'
nl|'\n'
DECL|variable|node_cpus
name|'node_cpus'
op|'='
number|'2'
newline|'\n'
nl|'\n'
comment|'# expected CPU frequency'
nl|'\n'
DECL|variable|node_mhz
name|'node_mhz'
op|'='
number|'800'
newline|'\n'
nl|'\n'
comment|'# the number of NUMA cell, 1 for unusual NUMA topologies or uniform'
nl|'\n'
comment|'# memory access; check capabilities XML for the actual NUMA topology'
nl|'\n'
DECL|variable|node_nodes
name|'node_nodes'
op|'='
number|'1'
comment|'# NUMA nodes'
newline|'\n'
nl|'\n'
comment|'# number of CPU sockets per node if nodes > 1, total number of CPU'
nl|'\n'
comment|'# sockets otherwise'
nl|'\n'
DECL|variable|node_sockets
name|'node_sockets'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# number of cores per socket'
nl|'\n'
DECL|variable|node_cores
name|'node_cores'
op|'='
number|'2'
newline|'\n'
nl|'\n'
comment|'# number of threads per core'
nl|'\n'
DECL|variable|node_threads
name|'node_threads'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# CPU model'
nl|'\n'
DECL|variable|node_cpu_model
name|'node_cpu_model'
op|'='
string|'"Penryn"'
newline|'\n'
nl|'\n'
comment|'# CPU vendor'
nl|'\n'
DECL|variable|node_cpu_vendor
name|'node_cpu_vendor'
op|'='
string|'"Intel"'
newline|'\n'
nl|'\n'
comment|'# Has libvirt connection been used at least once'
nl|'\n'
DECL|variable|connection_used
name|'connection_used'
op|'='
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reset
name|'def'
name|'_reset'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'allow_default_uri_connection'
newline|'\n'
name|'allow_default_uri_connection'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# virDomainState'
nl|'\n'
DECL|variable|VIR_DOMAIN_NOSTATE
dedent|''
name|'VIR_DOMAIN_NOSTATE'
op|'='
number|'0'
newline|'\n'
DECL|variable|VIR_DOMAIN_RUNNING
name|'VIR_DOMAIN_RUNNING'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_DOMAIN_BLOCKED
name|'VIR_DOMAIN_BLOCKED'
op|'='
number|'2'
newline|'\n'
DECL|variable|VIR_DOMAIN_PAUSED
name|'VIR_DOMAIN_PAUSED'
op|'='
number|'3'
newline|'\n'
DECL|variable|VIR_DOMAIN_SHUTDOWN
name|'VIR_DOMAIN_SHUTDOWN'
op|'='
number|'4'
newline|'\n'
DECL|variable|VIR_DOMAIN_SHUTOFF
name|'VIR_DOMAIN_SHUTOFF'
op|'='
number|'5'
newline|'\n'
DECL|variable|VIR_DOMAIN_CRASHED
name|'VIR_DOMAIN_CRASHED'
op|'='
number|'6'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_XML_SECURE
name|'VIR_DOMAIN_XML_SECURE'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_DOMAIN_XML_INACTIVE
name|'VIR_DOMAIN_XML_INACTIVE'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_BLOCK_REBASE_SHALLOW
name|'VIR_DOMAIN_BLOCK_REBASE_SHALLOW'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_DOMAIN_BLOCK_REBASE_REUSE_EXT
name|'VIR_DOMAIN_BLOCK_REBASE_REUSE_EXT'
op|'='
number|'2'
newline|'\n'
DECL|variable|VIR_DOMAIN_BLOCK_REBASE_COPY
name|'VIR_DOMAIN_BLOCK_REBASE_COPY'
op|'='
number|'8'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_BLOCK_JOB_ABORT_PIVOT
name|'VIR_DOMAIN_BLOCK_JOB_ABORT_PIVOT'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_EVENT_ID_LIFECYCLE
name|'VIR_DOMAIN_EVENT_ID_LIFECYCLE'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_EVENT_DEFINED
name|'VIR_DOMAIN_EVENT_DEFINED'
op|'='
number|'0'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_UNDEFINED
name|'VIR_DOMAIN_EVENT_UNDEFINED'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_STARTED
name|'VIR_DOMAIN_EVENT_STARTED'
op|'='
number|'2'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_SUSPENDED
name|'VIR_DOMAIN_EVENT_SUSPENDED'
op|'='
number|'3'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_RESUMED
name|'VIR_DOMAIN_EVENT_RESUMED'
op|'='
number|'4'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_STOPPED
name|'VIR_DOMAIN_EVENT_STOPPED'
op|'='
number|'5'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_SHUTDOWN
name|'VIR_DOMAIN_EVENT_SHUTDOWN'
op|'='
number|'6'
newline|'\n'
DECL|variable|VIR_DOMAIN_EVENT_PMSUSPENDED
name|'VIR_DOMAIN_EVENT_PMSUSPENDED'
op|'='
number|'7'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_UNDEFINE_MANAGED_SAVE
name|'VIR_DOMAIN_UNDEFINE_MANAGED_SAVE'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_AFFECT_CURRENT
name|'VIR_DOMAIN_AFFECT_CURRENT'
op|'='
number|'0'
newline|'\n'
DECL|variable|VIR_DOMAIN_AFFECT_LIVE
name|'VIR_DOMAIN_AFFECT_LIVE'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_DOMAIN_AFFECT_CONFIG
name|'VIR_DOMAIN_AFFECT_CONFIG'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|VIR_CPU_COMPARE_ERROR
name|'VIR_CPU_COMPARE_ERROR'
op|'='
op|'-'
number|'1'
newline|'\n'
DECL|variable|VIR_CPU_COMPARE_INCOMPATIBLE
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
op|'='
number|'0'
newline|'\n'
DECL|variable|VIR_CPU_COMPARE_IDENTICAL
name|'VIR_CPU_COMPARE_IDENTICAL'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_CPU_COMPARE_SUPERSET
name|'VIR_CPU_COMPARE_SUPERSET'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|VIR_CRED_USERNAME
name|'VIR_CRED_USERNAME'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_CRED_AUTHNAME
name|'VIR_CRED_AUTHNAME'
op|'='
number|'2'
newline|'\n'
DECL|variable|VIR_CRED_LANGUAGE
name|'VIR_CRED_LANGUAGE'
op|'='
number|'3'
newline|'\n'
DECL|variable|VIR_CRED_CNONCE
name|'VIR_CRED_CNONCE'
op|'='
number|'4'
newline|'\n'
DECL|variable|VIR_CRED_PASSPHRASE
name|'VIR_CRED_PASSPHRASE'
op|'='
number|'5'
newline|'\n'
DECL|variable|VIR_CRED_ECHOPROMPT
name|'VIR_CRED_ECHOPROMPT'
op|'='
number|'6'
newline|'\n'
DECL|variable|VIR_CRED_NOECHOPROMPT
name|'VIR_CRED_NOECHOPROMPT'
op|'='
number|'7'
newline|'\n'
DECL|variable|VIR_CRED_REALM
name|'VIR_CRED_REALM'
op|'='
number|'8'
newline|'\n'
DECL|variable|VIR_CRED_EXTERNAL
name|'VIR_CRED_EXTERNAL'
op|'='
number|'9'
newline|'\n'
nl|'\n'
DECL|variable|VIR_MIGRATE_LIVE
name|'VIR_MIGRATE_LIVE'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_MIGRATE_PEER2PEER
name|'VIR_MIGRATE_PEER2PEER'
op|'='
number|'2'
newline|'\n'
DECL|variable|VIR_MIGRATE_TUNNELLED
name|'VIR_MIGRATE_TUNNELLED'
op|'='
number|'4'
newline|'\n'
DECL|variable|VIR_MIGRATE_UNDEFINE_SOURCE
name|'VIR_MIGRATE_UNDEFINE_SOURCE'
op|'='
number|'16'
newline|'\n'
DECL|variable|VIR_MIGRATE_NON_SHARED_INC
name|'VIR_MIGRATE_NON_SHARED_INC'
op|'='
number|'128'
newline|'\n'
nl|'\n'
DECL|variable|VIR_NODE_CPU_STATS_ALL_CPUS
name|'VIR_NODE_CPU_STATS_ALL_CPUS'
op|'='
op|'-'
number|'1'
newline|'\n'
nl|'\n'
DECL|variable|VIR_DOMAIN_START_PAUSED
name|'VIR_DOMAIN_START_PAUSED'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# libvirtError enums'
nl|'\n'
comment|"# (Intentionally different from what's in libvirt. We do this to check,"
nl|'\n'
comment|'#  that consumers of the library are using the symbolic names rather than'
nl|'\n'
comment|'#  hardcoding the numerical values)'
nl|'\n'
DECL|variable|VIR_FROM_QEMU
name|'VIR_FROM_QEMU'
op|'='
number|'100'
newline|'\n'
DECL|variable|VIR_FROM_DOMAIN
name|'VIR_FROM_DOMAIN'
op|'='
number|'200'
newline|'\n'
DECL|variable|VIR_FROM_NWFILTER
name|'VIR_FROM_NWFILTER'
op|'='
number|'330'
newline|'\n'
DECL|variable|VIR_FROM_REMOTE
name|'VIR_FROM_REMOTE'
op|'='
number|'340'
newline|'\n'
DECL|variable|VIR_FROM_RPC
name|'VIR_FROM_RPC'
op|'='
number|'345'
newline|'\n'
DECL|variable|VIR_ERR_NO_SUPPORT
name|'VIR_ERR_NO_SUPPORT'
op|'='
number|'3'
newline|'\n'
DECL|variable|VIR_ERR_XML_DETAIL
name|'VIR_ERR_XML_DETAIL'
op|'='
number|'350'
newline|'\n'
DECL|variable|VIR_ERR_NO_DOMAIN
name|'VIR_ERR_NO_DOMAIN'
op|'='
number|'420'
newline|'\n'
DECL|variable|VIR_ERR_OPERATION_INVALID
name|'VIR_ERR_OPERATION_INVALID'
op|'='
number|'55'
newline|'\n'
DECL|variable|VIR_ERR_OPERATION_TIMEOUT
name|'VIR_ERR_OPERATION_TIMEOUT'
op|'='
number|'68'
newline|'\n'
DECL|variable|VIR_ERR_NO_NWFILTER
name|'VIR_ERR_NO_NWFILTER'
op|'='
number|'620'
newline|'\n'
DECL|variable|VIR_ERR_SYSTEM_ERROR
name|'VIR_ERR_SYSTEM_ERROR'
op|'='
number|'900'
newline|'\n'
DECL|variable|VIR_ERR_INTERNAL_ERROR
name|'VIR_ERR_INTERNAL_ERROR'
op|'='
number|'950'
newline|'\n'
DECL|variable|VIR_ERR_CONFIG_UNSUPPORTED
name|'VIR_ERR_CONFIG_UNSUPPORTED'
op|'='
number|'951'
newline|'\n'
nl|'\n'
comment|'# Readonly'
nl|'\n'
DECL|variable|VIR_CONNECT_RO
name|'VIR_CONNECT_RO'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# virConnectBaselineCPU flags'
nl|'\n'
DECL|variable|VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES
name|'VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# snapshotCreateXML flags'
nl|'\n'
DECL|variable|VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA
name|'VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA'
op|'='
number|'4'
newline|'\n'
DECL|variable|VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY
name|'VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY'
op|'='
number|'16'
newline|'\n'
DECL|variable|VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|'='
number|'32'
newline|'\n'
DECL|variable|VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|'='
number|'64'
newline|'\n'
nl|'\n'
comment|'# blockCommit flags'
nl|'\n'
DECL|variable|VIR_DOMAIN_BLOCK_COMMIT_RELATIVE
name|'VIR_DOMAIN_BLOCK_COMMIT_RELATIVE'
op|'='
number|'4'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|VIR_CONNECT_LIST_DOMAINS_ACTIVE
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|'='
number|'1'
newline|'\n'
DECL|variable|VIR_CONNECT_LIST_DOMAINS_INACTIVE
name|'VIR_CONNECT_LIST_DOMAINS_INACTIVE'
op|'='
number|'2'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_disk_info
name|'def'
name|'_parse_disk_info'
op|'('
name|'element'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'disk_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'['
string|"'type'"
op|']'
op|'='
name|'element'
op|'.'
name|'get'
op|'('
string|"'type'"
op|','
string|"'file'"
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'device'"
op|']'
op|'='
name|'element'
op|'.'
name|'get'
op|'('
string|"'device'"
op|','
string|"'disk'"
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'element'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
newline|'\n'
name|'if'
name|'driver'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'disk_info'
op|'['
string|"'driver_name'"
op|']'
op|'='
name|'driver'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'driver_type'"
op|']'
op|'='
name|'driver'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'source'
op|'='
name|'element'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
newline|'\n'
name|'if'
name|'source'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'disk_info'
op|'['
string|"'source'"
op|']'
op|'='
name|'source'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'disk_info'
op|'['
string|"'source'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'['
string|"'source'"
op|']'
op|'='
name|'source'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'disk_info'
op|'['
string|"'source'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'['
string|"'source'"
op|']'
op|'='
name|'source'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'target'
op|'='
name|'element'
op|'.'
name|'find'
op|'('
string|"'./target'"
op|')'
newline|'\n'
name|'if'
name|'target'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'disk_info'
op|'['
string|"'target_dev'"
op|']'
op|'='
name|'target'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'target_bus'"
op|']'
op|'='
name|'target'
op|'.'
name|'get'
op|'('
string|"'bus'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'disk_info'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|libvirtError
dedent|''
name|'class'
name|'libvirtError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This class was copied and slightly modified from\n    `libvirt-python:libvirt-override.py`.\n\n    Since a test environment will use the real `libvirt-python` version of\n    `libvirtError` if it\'s installed and not this fake, we need to maintain\n    strict compatibility with the original class, including `__init__` args\n    and instance-attributes.\n\n    To create a libvirtError instance you should:\n\n        # Create an unsupported error exception\n        exc = libvirtError(\'my message\')\n        exc.err = (libvirt.VIR_ERR_NO_SUPPORT,)\n\n    self.err is a tuple of form:\n        (error_code, error_domain, error_message, error_level, str1, str2,\n         str3, int1, int2)\n\n    Alternatively, you can use the `make_libvirtError` convenience function to\n    allow you to specify these attributes in one shot.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'defmsg'
op|','
name|'conn'
op|'='
name|'None'
op|','
name|'dom'
op|'='
name|'None'
op|','
name|'net'
op|'='
name|'None'
op|','
name|'pool'
op|'='
name|'None'
op|','
nl|'\n'
name|'vol'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'defmsg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'err'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_error_code
dedent|''
name|'def'
name|'get_error_code'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_error_domain
dedent|''
name|'def'
name|'get_error_domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_error_message
dedent|''
name|'def'
name|'get_error_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'2'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_error_level
dedent|''
name|'def'
name|'get_error_level'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'3'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_str1
dedent|''
name|'def'
name|'get_str1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'4'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_str2
dedent|''
name|'def'
name|'get_str2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'5'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_str3
dedent|''
name|'def'
name|'get_str3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'6'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_int1
dedent|''
name|'def'
name|'get_int1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'7'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_int2
dedent|''
name|'def'
name|'get_int2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'err'
op|'['
number|'8'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NWFilter
dedent|''
dedent|''
name|'class'
name|'NWFilter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_connection'
op|'='
name|'connection'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_xml'
op|'='
name|'xml'
newline|'\n'
name|'self'
op|'.'
name|'_parse_xml'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_parse_xml
dedent|''
name|'def'
name|'_parse_xml'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'root'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_name'
op|'='
name|'root'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|undefine
dedent|''
name|'def'
name|'undefine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_remove_filter'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Domain
dedent|''
dedent|''
name|'class'
name|'Domain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|','
name|'xml'
op|','
name|'running'
op|'='
name|'False'
op|','
name|'transient'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_connection'
op|'='
name|'connection'
newline|'\n'
name|'if'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'connection'
op|'.'
name|'_mark_running'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_state'
op|'='
name|'running'
name|'and'
name|'VIR_DOMAIN_RUNNING'
name|'or'
name|'VIR_DOMAIN_SHUTOFF'
newline|'\n'
name|'self'
op|'.'
name|'_transient'
op|'='
name|'transient'
newline|'\n'
name|'self'
op|'.'
name|'_def'
op|'='
name|'self'
op|'.'
name|'_parse_definition'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_has_saved_state'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_snapshots'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_id'
op|'='
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_id_counter'
newline|'\n'
nl|'\n'
DECL|member|_parse_definition
dedent|''
name|'def'
name|'_parse_definition'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'etree'
op|'.'
name|'ParseError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
string|'"Invalid XML."'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_XML_DETAIL'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'definition'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'name'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./name'"
op|')'
newline|'\n'
name|'if'
name|'name'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'definition'
op|'['
string|"'name'"
op|']'
op|'='
name|'name'
op|'.'
name|'text'
newline|'\n'
nl|'\n'
dedent|''
name|'uuid_elem'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./uuid'"
op|')'
newline|'\n'
name|'if'
name|'uuid_elem'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'definition'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuid_elem'
op|'.'
name|'text'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'definition'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vcpu'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./vcpu'"
op|')'
newline|'\n'
name|'if'
name|'vcpu'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'definition'
op|'['
string|"'vcpu'"
op|']'
op|'='
name|'int'
op|'('
name|'vcpu'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'memory'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./memory'"
op|')'
newline|'\n'
name|'if'
name|'memory'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'definition'
op|'['
string|"'memory'"
op|']'
op|'='
name|'int'
op|'('
name|'memory'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'os'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'os_type'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
newline|'\n'
name|'if'
name|'os_type'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'['
string|"'type'"
op|']'
op|'='
name|'os_type'
op|'.'
name|'text'
newline|'\n'
name|'os'
op|'['
string|"'arch'"
op|']'
op|'='
name|'os_type'
op|'.'
name|'get'
op|'('
string|"'arch'"
op|','
name|'node_arch'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'os_kernel'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./os/kernel'"
op|')'
newline|'\n'
name|'if'
name|'os_kernel'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'['
string|"'kernel'"
op|']'
op|'='
name|'os_kernel'
op|'.'
name|'text'
newline|'\n'
nl|'\n'
dedent|''
name|'os_initrd'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./os/initrd'"
op|')'
newline|'\n'
name|'if'
name|'os_initrd'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'['
string|"'initrd'"
op|']'
op|'='
name|'os_initrd'
op|'.'
name|'text'
newline|'\n'
nl|'\n'
dedent|''
name|'os_cmdline'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./os/cmdline'"
op|')'
newline|'\n'
name|'if'
name|'os_cmdline'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'['
string|"'cmdline'"
op|']'
op|'='
name|'os_cmdline'
op|'.'
name|'text'
newline|'\n'
nl|'\n'
dedent|''
name|'os_boot'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./os/boot'"
op|')'
newline|'\n'
name|'if'
name|'os_boot'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'['
string|"'boot_dev'"
op|']'
op|'='
name|'os_boot'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'definition'
op|'['
string|"'os'"
op|']'
op|'='
name|'os'
newline|'\n'
nl|'\n'
name|'features'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'acpi'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./features/acpi'"
op|')'
newline|'\n'
name|'if'
name|'acpi'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'features'
op|'['
string|"'acpi'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'definition'
op|'['
string|"'features'"
op|']'
op|'='
name|'features'
newline|'\n'
nl|'\n'
name|'devices'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'device_nodes'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./devices'"
op|')'
newline|'\n'
name|'if'
name|'device_nodes'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'disks_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'disks'
op|'='
name|'device_nodes'
op|'.'
name|'findall'
op|'('
string|"'./disk'"
op|')'
newline|'\n'
name|'for'
name|'disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'                '
name|'disks_info'
op|'+='
op|'['
name|'_parse_disk_info'
op|'('
name|'disk'
op|')'
op|']'
newline|'\n'
dedent|''
name|'devices'
op|'['
string|"'disks'"
op|']'
op|'='
name|'disks_info'
newline|'\n'
nl|'\n'
name|'nics_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'nics'
op|'='
name|'device_nodes'
op|'.'
name|'findall'
op|'('
string|"'./interface'"
op|')'
newline|'\n'
name|'for'
name|'nic'
name|'in'
name|'nics'
op|':'
newline|'\n'
indent|'                '
name|'nic_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'nic_info'
op|'['
string|"'type'"
op|']'
op|'='
name|'nic'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
newline|'\n'
nl|'\n'
name|'mac'
op|'='
name|'nic'
op|'.'
name|'find'
op|'('
string|"'./mac'"
op|')'
newline|'\n'
name|'if'
name|'mac'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'nic_info'
op|'['
string|"'mac'"
op|']'
op|'='
name|'mac'
op|'.'
name|'get'
op|'('
string|"'address'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'source'
op|'='
name|'nic'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
newline|'\n'
name|'if'
name|'source'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'nic_info'
op|'['
string|"'type'"
op|']'
op|'=='
string|"'network'"
op|':'
newline|'\n'
indent|'                        '
name|'nic_info'
op|'['
string|"'source'"
op|']'
op|'='
name|'source'
op|'.'
name|'get'
op|'('
string|"'network'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'nic_info'
op|'['
string|"'type'"
op|']'
op|'=='
string|"'bridge'"
op|':'
newline|'\n'
indent|'                        '
name|'nic_info'
op|'['
string|"'source'"
op|']'
op|'='
name|'source'
op|'.'
name|'get'
op|'('
string|"'bridge'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'nics_info'
op|'+='
op|'['
name|'nic_info'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'devices'
op|'['
string|"'nics'"
op|']'
op|'='
name|'nics_info'
newline|'\n'
nl|'\n'
dedent|''
name|'definition'
op|'['
string|"'devices'"
op|']'
op|'='
name|'devices'
newline|'\n'
nl|'\n'
name|'return'
name|'definition'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'createWithFlags'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|createWithFlags
dedent|''
name|'def'
name|'createWithFlags'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: Not handling flags at the moment'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_mark_running'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_has_saved_state'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|isActive
dedent|''
name|'def'
name|'isActive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'int'
op|'('
name|'self'
op|'.'
name|'_state'
op|'=='
name|'VIR_DOMAIN_RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|undefine
dedent|''
name|'def'
name|'undefine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_undefine'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|undefineFlags
dedent|''
name|'def'
name|'undefineFlags'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
name|'if'
name|'flags'
op|'&'
name|'VIR_DOMAIN_UNDEFINE_MANAGED_SAVE'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'managedSaveRemove'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroy
dedent|''
dedent|''
dedent|''
name|'def'
name|'destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_SHUTOFF'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_mark_not_running'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ID
dedent|''
name|'def'
name|'ID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_id'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
number|'10000242400'
op|','
number|'1234'
op|','
number|'0'
op|','
number|'2'
op|','
number|'213412343233'
op|','
number|'34214234'
op|','
number|'23'
op|','
number|'3'
op|']'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
number|'2'
op|','
number|'10000242400'
op|','
number|'234'
op|','
number|'2343424234'
op|','
number|'34'
op|']'
newline|'\n'
nl|'\n'
DECL|member|suspend
dedent|''
name|'def'
name|'suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_PAUSED'
newline|'\n'
nl|'\n'
DECL|member|shutdown
dedent|''
name|'def'
name|'shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_SHUTDOWN'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_mark_not_running'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: Not handling flags at the moment'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_mark_running'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|info
dedent|''
name|'def'
name|'info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'self'
op|'.'
name|'_state'
op|','
nl|'\n'
name|'long'
op|'('
name|'self'
op|'.'
name|'_def'
op|'['
string|"'memory'"
op|']'
op|')'
op|','
nl|'\n'
name|'long'
op|'('
name|'self'
op|'.'
name|'_def'
op|'['
string|"'memory'"
op|']'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'vcpu'"
op|']'
op|','
nl|'\n'
number|'123456789L'
op|']'
newline|'\n'
nl|'\n'
DECL|member|migrateToURI
dedent|''
name|'def'
name|'migrateToURI'
op|'('
name|'self'
op|','
name|'desturi'
op|','
name|'flags'
op|','
name|'dname'
op|','
name|'bandwidth'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"Migration always fails for fake libvirt!"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_INTERNAL_ERROR'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
DECL|member|migrateToURI2
dedent|''
name|'def'
name|'migrateToURI2'
op|'('
name|'self'
op|','
name|'dconnuri'
op|','
name|'miguri'
op|','
name|'dxml'
op|','
name|'flags'
op|','
name|'dname'
op|','
name|'bandwidth'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"Migration always fails for fake libvirt!"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_INTERNAL_ERROR'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
DECL|member|attachDevice
dedent|''
name|'def'
name|'attachDevice'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disk_info'
op|'='
name|'_parse_disk_info'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'_attached'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'devices'"
op|']'
op|'['
string|"'disks'"
op|']'
op|'+='
op|'['
name|'disk_info'
op|']'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|attachDeviceFlags
dedent|''
name|'def'
name|'attachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'flags'
op|'&'
name|'VIR_DOMAIN_AFFECT_LIVE'
name|'and'
nl|'\n'
name|'self'
op|'.'
name|'_state'
op|'!='
name|'VIR_DOMAIN_RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"AFFECT_LIVE only allowed for running domains!"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_INTERNAL_ERROR'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'attachDevice'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detachDevice
dedent|''
name|'def'
name|'detachDevice'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disk_info'
op|'='
name|'_parse_disk_info'
op|'('
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
op|')'
newline|'\n'
name|'disk_info'
op|'['
string|"'_attached'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'disk_info'
name|'in'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'devices'"
op|']'
op|'['
string|"'disks'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|detachDeviceFlags
dedent|''
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'_flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'detachDevice'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disks'
op|'='
string|"''"
newline|'\n'
name|'for'
name|'disk'
name|'in'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'devices'"
op|']'
op|'['
string|"'disks'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'disks'
op|'+='
string|"'''<disk type='%(type)s' device='%(device)s'>\n      <driver name='%(driver_name)s' type='%(driver_type)s'/>\n      <source file='%(source)s'/>\n      <target dev='%(target_dev)s' bus='%(target_bus)s'/>\n      <address type='drive' controller='0' bus='0' unit='0'/>\n    </disk>'''"
op|'%'
name|'disk'
newline|'\n'
nl|'\n'
dedent|''
name|'nics'
op|'='
string|"''"
newline|'\n'
name|'for'
name|'nic'
name|'in'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'devices'"
op|']'
op|'['
string|"'nics'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'nics'
op|'+='
string|"'''<interface type='%(type)s'>\n      <mac address='%(mac)s'/>\n      <source %(type)s='%(source)s'/>\n      <address type='pci' domain='0x0000' bus='0x00' slot='0x03'\n               function='0x0'/>\n    </interface>'''"
op|'%'
name|'nic'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
string|'\'\'\'<domain type=\'kvm\'>\n  <name>%(name)s</name>\n  <uuid>%(uuid)s</uuid>\n  <memory>%(memory)s</memory>\n  <currentMemory>%(memory)s</currentMemory>\n  <vcpu>%(vcpu)s</vcpu>\n  <os>\n    <type arch=\'%(arch)s\' machine=\'pc-0.12\'>hvm</type>\n    <boot dev=\'hd\'/>\n  </os>\n  <features>\n    <acpi/>\n    <apic/>\n    <pae/>\n  </features>\n  <clock offset=\'localtime\'/>\n  <on_poweroff>destroy</on_poweroff>\n  <on_reboot>restart</on_reboot>\n  <on_crash>restart</on_crash>\n  <devices>\n    <emulator>/usr/bin/kvm</emulator>\n    %(disks)s\n    <controller type=\'ide\' index=\'0\'>\n      <address type=\'pci\' domain=\'0x0000\' bus=\'0x00\' slot=\'0x01\'\n               function=\'0x1\'/>\n    </controller>\n    %(nics)s\n    <serial type=\'file\'>\n      <source path=\'dummy.log\'/>\n      <target port=\'0\'/>\n    </serial>\n    <serial type=\'pty\'>\n      <source pty=\'/dev/pts/27\'/>\n      <target port=\'1\'/>\n    </serial>\n    <serial type=\'tcp\'>\n      <source host="-1" service="-1" mode="bind"/>\n    </serial>\n    <console type=\'file\'>\n      <source path=\'dummy.log\'/>\n      <target port=\'0\'/>\n    </console>\n    <input type=\'tablet\' bus=\'usb\'/>\n    <input type=\'mouse\' bus=\'ps2\'/>\n    <graphics type=\'vnc\' port=\'-1\' autoport=\'yes\'/>\n    <graphics type=\'spice\' port=\'-1\' autoport=\'yes\'/>\n    <video>\n      <model type=\'cirrus\' vram=\'9216\' heads=\'1\'/>\n      <address type=\'pci\' domain=\'0x0000\' bus=\'0x00\' slot=\'0x02\'\n               function=\'0x0\'/>\n    </video>\n    <memballoon model=\'virtio\'>\n      <address type=\'pci\' domain=\'0x0000\' bus=\'0x00\' slot=\'0x04\'\n               function=\'0x0\'/>\n    </memballoon>\n  </devices>\n</domain>\'\'\''
op|'%'
op|'{'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'memory'"
op|':'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'memory'"
op|']'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'vcpu'"
op|']'
op|','
nl|'\n'
string|"'arch'"
op|':'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'os'"
op|']'
op|'['
string|"'arch'"
op|']'
op|','
nl|'\n'
string|"'disks'"
op|':'
name|'disks'
op|','
nl|'\n'
string|"'nics'"
op|':'
name|'nics'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|managedSave
dedent|''
name|'def'
name|'managedSave'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_connection'
op|'.'
name|'_mark_not_running'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_has_saved_state'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|managedSaveRemove
dedent|''
name|'def'
name|'managedSaveRemove'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_has_saved_state'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|hasManagedSaveImage
dedent|''
name|'def'
name|'hasManagedSaveImage'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'int'
op|'('
name|'self'
op|'.'
name|'_has_saved_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|resume
dedent|''
name|'def'
name|'resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_state'
op|'='
name|'VIR_DOMAIN_RUNNING'
newline|'\n'
nl|'\n'
DECL|member|snapshotCreateXML
dedent|''
name|'def'
name|'snapshotCreateXML'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'name'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./name'"
op|')'
op|'.'
name|'text'
newline|'\n'
name|'snapshot'
op|'='
name|'DomainSnapshot'
op|'('
name|'name'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_snapshots'
op|'['
name|'name'
op|']'
op|'='
name|'snapshot'
newline|'\n'
name|'return'
name|'snapshot'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vcpus'
op|'='
op|'('
op|'['
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_def'
op|'['
string|"'vcpu'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vcpus'
op|'['
number|'0'
op|']'
op|'.'
name|'append'
op|'('
op|'('
name|'i'
op|','
number|'1'
op|','
number|'120405L'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'vcpus'
op|'['
number|'1'
op|']'
op|'.'
name|'append'
op|'('
op|'('
name|'True'
op|','
name|'True'
op|','
name|'True'
op|','
name|'True'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'vcpus'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_def'
op|'['
string|"'memory'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|blockJobInfo
dedent|''
name|'def'
name|'blockJobInfo'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DomainSnapshot
dedent|''
dedent|''
name|'class'
name|'DomainSnapshot'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'_domain'
op|'='
name|'domain'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'_domain'
op|'.'
name|'_snapshots'
op|'['
name|'self'
op|'.'
name|'_name'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Connection
dedent|''
dedent|''
name|'class'
name|'Connection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uri'
op|'='
name|'None'
op|','
name|'readonly'
op|'='
name|'False'
op|','
name|'version'
op|'='
number|'9011'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'uri'
name|'or'
name|'uri'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'allow_default_uri_connection'
op|':'
newline|'\n'
indent|'                '
name|'uri'
op|'='
string|"'qemu:///session'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|'"URI was None, but fake libvirt is "'
nl|'\n'
string|'"configured to not accept this."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'uri_whitelist'
op|'='
op|'['
string|"'qemu:///system'"
op|','
nl|'\n'
string|"'qemu:///session'"
op|','
nl|'\n'
string|"'xen:///system'"
op|','
nl|'\n'
string|"'uml:///system'"
op|','
nl|'\n'
string|"'test:///default'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'uri'
name|'not'
name|'in'
name|'uri_whitelist'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"libvirt error: no connection driver "'
nl|'\n'
string|'"available for No connection for URI %s"'
op|'%'
name|'uri'
op|','
nl|'\n'
name|'error_code'
op|'='
number|'5'
op|','
name|'error_domain'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'readonly'
op|'='
name|'readonly'
newline|'\n'
name|'self'
op|'.'
name|'_uri'
op|'='
name|'uri'
newline|'\n'
name|'self'
op|'.'
name|'_vms'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_running_vms'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_id_counter'
op|'='
number|'1'
comment|'# libvirt reserves 0 for the hypervisor.'
newline|'\n'
name|'self'
op|'.'
name|'_nwfilters'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_event_callbacks'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'fakeLibVersion'
op|'='
name|'version'
newline|'\n'
name|'self'
op|'.'
name|'fakeVersion'
op|'='
name|'version'
newline|'\n'
nl|'\n'
DECL|member|_add_filter
dedent|''
name|'def'
name|'_add_filter'
op|'('
name|'self'
op|','
name|'nwfilter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_nwfilters'
op|'['
name|'nwfilter'
op|'.'
name|'_name'
op|']'
op|'='
name|'nwfilter'
newline|'\n'
nl|'\n'
DECL|member|_remove_filter
dedent|''
name|'def'
name|'_remove_filter'
op|'('
name|'self'
op|','
name|'nwfilter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'_nwfilters'
op|'['
name|'nwfilter'
op|'.'
name|'_name'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_mark_running
dedent|''
name|'def'
name|'_mark_running'
op|'('
name|'self'
op|','
name|'dom'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_running_vms'
op|'['
name|'self'
op|'.'
name|'_id_counter'
op|']'
op|'='
name|'dom'
newline|'\n'
name|'self'
op|'.'
name|'_emit_lifecycle'
op|'('
name|'dom'
op|','
name|'VIR_DOMAIN_EVENT_STARTED'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_id_counter'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_mark_not_running
dedent|''
name|'def'
name|'_mark_not_running'
op|'('
name|'self'
op|','
name|'dom'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'dom'
op|'.'
name|'_transient'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_undefine'
op|'('
name|'dom'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'dom'
op|'.'
name|'_id'
op|'='
op|'-'
number|'1'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'self'
op|'.'
name|'_running_vms'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'v'
op|'=='
name|'dom'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'_running_vms'
op|'['
name|'k'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_emit_lifecycle'
op|'('
name|'dom'
op|','
name|'VIR_DOMAIN_EVENT_STOPPED'
op|','
number|'0'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
DECL|member|_undefine
dedent|''
dedent|''
dedent|''
name|'def'
name|'_undefine'
op|'('
name|'self'
op|','
name|'dom'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'_vms'
op|'['
name|'dom'
op|'.'
name|'name'
op|'('
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'dom'
op|'.'
name|'_transient'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_emit_lifecycle'
op|'('
name|'dom'
op|','
name|'VIR_DOMAIN_EVENT_UNDEFINED'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getInfo
dedent|''
dedent|''
name|'def'
name|'getInfo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'node_arch'
op|','
nl|'\n'
name|'node_kB_mem'
op|','
nl|'\n'
name|'node_cpus'
op|','
nl|'\n'
name|'node_mhz'
op|','
nl|'\n'
name|'node_nodes'
op|','
nl|'\n'
name|'node_sockets'
op|','
nl|'\n'
name|'node_cores'
op|','
nl|'\n'
name|'node_threads'
op|']'
newline|'\n'
nl|'\n'
DECL|member|numOfDomains
dedent|''
name|'def'
name|'numOfDomains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_running_vms'
op|')'
newline|'\n'
nl|'\n'
DECL|member|listDomainsID
dedent|''
name|'def'
name|'listDomainsID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_running_vms'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|lookupByID
dedent|''
name|'def'
name|'lookupByID'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'in'
name|'self'
op|'.'
name|'_running_vms'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_running_vms'
op|'['
name|'id'
op|']'
newline|'\n'
dedent|''
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|"'Domain not found: no domain with matching id %d'"
op|'%'
name|'id'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_NO_DOMAIN'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lookupByName
dedent|''
name|'def'
name|'lookupByName'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'in'
name|'self'
op|'.'
name|'_vms'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_vms'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'\'Domain not found: no domain with matching name "%s"\''
op|'%'
name|'name'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_NO_DOMAIN'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
DECL|member|listAllDomains
dedent|''
name|'def'
name|'listAllDomains'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vms'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'vm'
name|'in'
name|'self'
op|'.'
name|'_vms'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'flags'
op|'&'
name|'VIR_CONNECT_LIST_DOMAINS_ACTIVE'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vm'
op|'.'
name|'state'
op|'!='
name|'VIR_DOMAIN_SHUTOFF'
op|':'
newline|'\n'
indent|'                    '
name|'vms'
op|'.'
name|'append'
op|'('
name|'vm'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'flags'
op|'&'
name|'VIR_CONNECT_LIST_DOMAINS_INACTIVE'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'vm'
op|'.'
name|'state'
op|'=='
name|'VIR_DOMAIN_SHUTOFF'
op|':'
newline|'\n'
indent|'                    '
name|'vms'
op|'.'
name|'append'
op|'('
name|'vm'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'vms'
newline|'\n'
nl|'\n'
DECL|member|_emit_lifecycle
dedent|''
name|'def'
name|'_emit_lifecycle'
op|'('
name|'self'
op|','
name|'dom'
op|','
name|'event'
op|','
name|'detail'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'VIR_DOMAIN_EVENT_ID_LIFECYCLE'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_event_callbacks'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'cbinfo'
op|'='
name|'self'
op|'.'
name|'_event_callbacks'
op|'['
name|'VIR_DOMAIN_EVENT_ID_LIFECYCLE'
op|']'
newline|'\n'
name|'callback'
op|'='
name|'cbinfo'
op|'['
number|'0'
op|']'
newline|'\n'
name|'opaque'
op|'='
name|'cbinfo'
op|'['
number|'1'
op|']'
newline|'\n'
name|'callback'
op|'('
name|'self'
op|','
name|'dom'
op|','
name|'event'
op|','
name|'detail'
op|','
name|'opaque'
op|')'
newline|'\n'
nl|'\n'
DECL|member|defineXML
dedent|''
name|'def'
name|'defineXML'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'Domain'
op|'('
name|'connection'
op|'='
name|'self'
op|','
name|'running'
op|'='
name|'False'
op|','
name|'transient'
op|'='
name|'False'
op|','
name|'xml'
op|'='
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vms'
op|'['
name|'dom'
op|'.'
name|'name'
op|'('
op|')'
op|']'
op|'='
name|'dom'
newline|'\n'
name|'self'
op|'.'
name|'_emit_lifecycle'
op|'('
name|'dom'
op|','
name|'VIR_DOMAIN_EVENT_DEFINED'
op|','
number|'0'
op|')'
newline|'\n'
name|'return'
name|'dom'
newline|'\n'
nl|'\n'
DECL|member|createXML
dedent|''
name|'def'
name|'createXML'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dom'
op|'='
name|'Domain'
op|'('
name|'connection'
op|'='
name|'self'
op|','
name|'running'
op|'='
name|'True'
op|','
name|'transient'
op|'='
name|'True'
op|','
name|'xml'
op|'='
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_vms'
op|'['
name|'dom'
op|'.'
name|'name'
op|'('
op|')'
op|']'
op|'='
name|'dom'
newline|'\n'
name|'self'
op|'.'
name|'_emit_lifecycle'
op|'('
name|'dom'
op|','
name|'VIR_DOMAIN_EVENT_STARTED'
op|','
number|'0'
op|')'
newline|'\n'
name|'return'
name|'dom'
newline|'\n'
nl|'\n'
DECL|member|getType
dedent|''
name|'def'
name|'getType'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_uri'
op|'=='
string|"'qemu:///system'"
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'QEMU'"
newline|'\n'
nl|'\n'
DECL|member|getLibVersion
dedent|''
dedent|''
name|'def'
name|'getLibVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'fakeLibVersion'
newline|'\n'
nl|'\n'
DECL|member|getVersion
dedent|''
name|'def'
name|'getVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'fakeVersion'
newline|'\n'
nl|'\n'
DECL|member|getHostname
dedent|''
name|'def'
name|'getHostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'compute1'"
newline|'\n'
nl|'\n'
DECL|member|domainEventRegisterAny
dedent|''
name|'def'
name|'domainEventRegisterAny'
op|'('
name|'self'
op|','
name|'dom'
op|','
name|'eventid'
op|','
name|'callback'
op|','
name|'opaque'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_event_callbacks'
op|'['
name|'eventid'
op|']'
op|'='
op|'['
name|'callback'
op|','
name|'opaque'
op|']'
newline|'\n'
nl|'\n'
DECL|member|registerCloseCallback
dedent|''
name|'def'
name|'registerCloseCallback'
op|'('
name|'self'
op|','
name|'cb'
op|','
name|'opaque'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|getCapabilities
dedent|''
name|'def'
name|'getCapabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return spoofed capabilities."""'
newline|'\n'
name|'return'
string|"'''<capabilities>\n  <host>\n    <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n    <cpu>\n      <arch>x86_64</arch>\n      <model>Penryn</model>\n      <vendor>Intel</vendor>\n      <topology sockets='1' cores='2' threads='1'/>\n      <feature name='xtpr'/>\n      <feature name='tm2'/>\n      <feature name='est'/>\n      <feature name='vmx'/>\n      <feature name='ds_cpl'/>\n      <feature name='monitor'/>\n      <feature name='pbe'/>\n      <feature name='tm'/>\n      <feature name='ht'/>\n      <feature name='ss'/>\n      <feature name='acpi'/>\n      <feature name='ds'/>\n      <feature name='vme'/>\n    </cpu>\n    <migration_features>\n      <live/>\n      <uri_transports>\n        <uri_transport>tcp</uri_transport>\n      </uri_transports>\n    </migration_features>\n    <secmodel>\n      <model>apparmor</model>\n      <doi>0</doi>\n    </secmodel>\n  </host>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='i686'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu</emulator>\n      <machine>pc-0.14</machine>\n      <machine canonical='pc-0.14'>pc</machine>\n      <machine>pc-0.13</machine>\n      <machine>pc-0.12</machine>\n      <machine>pc-0.11</machine>\n      <machine>pc-0.10</machine>\n      <machine>isapc</machine>\n      <domain type='qemu'>\n      </domain>\n      <domain type='kvm'>\n        <emulator>/usr/bin/kvm</emulator>\n        <machine>pc-0.14</machine>\n        <machine canonical='pc-0.14'>pc</machine>\n        <machine>pc-0.13</machine>\n        <machine>pc-0.12</machine>\n        <machine>pc-0.11</machine>\n        <machine>pc-0.10</machine>\n        <machine>isapc</machine>\n      </domain>\n    </arch>\n    <features>\n      <cpuselection/>\n      <deviceboot/>\n      <pae/>\n      <nonpae/>\n      <acpi default='on' toggle='yes'/>\n      <apic default='on' toggle='no'/>\n    </features>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='x86_64'>\n      <wordsize>64</wordsize>\n      <emulator>/usr/bin/qemu-system-x86_64</emulator>\n      <machine>pc-0.14</machine>\n      <machine canonical='pc-0.14'>pc</machine>\n      <machine>pc-0.13</machine>\n      <machine>pc-0.12</machine>\n      <machine>pc-0.11</machine>\n      <machine>pc-0.10</machine>\n      <machine>isapc</machine>\n      <domain type='qemu'>\n      </domain>\n      <domain type='kvm'>\n        <emulator>/usr/bin/kvm</emulator>\n        <machine>pc-0.14</machine>\n        <machine canonical='pc-0.14'>pc</machine>\n        <machine>pc-0.13</machine>\n        <machine>pc-0.12</machine>\n        <machine>pc-0.11</machine>\n        <machine>pc-0.10</machine>\n        <machine>isapc</machine>\n      </domain>\n    </arch>\n    <features>\n      <cpuselection/>\n      <deviceboot/>\n      <acpi default='on' toggle='yes'/>\n      <apic default='on' toggle='no'/>\n    </features>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='armv7l'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu-system-arm</emulator>\n      <machine>integratorcp</machine>\n      <machine>vexpress-a9</machine>\n      <machine>syborg</machine>\n      <machine>musicpal</machine>\n      <machine>mainstone</machine>\n      <machine>n800</machine>\n      <machine>n810</machine>\n      <machine>n900</machine>\n      <machine>cheetah</machine>\n      <machine>sx1</machine>\n      <machine>sx1-v1</machine>\n      <machine>beagle</machine>\n      <machine>beaglexm</machine>\n      <machine>tosa</machine>\n      <machine>akita</machine>\n      <machine>spitz</machine>\n      <machine>borzoi</machine>\n      <machine>terrier</machine>\n      <machine>connex</machine>\n      <machine>verdex</machine>\n      <machine>lm3s811evb</machine>\n      <machine>lm3s6965evb</machine>\n      <machine>realview-eb</machine>\n      <machine>realview-eb-mpcore</machine>\n      <machine>realview-pb-a8</machine>\n      <machine>realview-pbx-a9</machine>\n      <machine>versatilepb</machine>\n      <machine>versatileab</machine>\n      <domain type='qemu'>\n      </domain>\n    </arch>\n    <features>\n      <deviceboot/>\n    </features>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='mips'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu-system-mips</emulator>\n      <machine>malta</machine>\n      <machine>mipssim</machine>\n      <machine>magnum</machine>\n      <machine>pica61</machine>\n      <machine>mips</machine>\n      <domain type='qemu'>\n      </domain>\n    </arch>\n    <features>\n      <deviceboot/>\n    </features>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='mipsel'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu-system-mipsel</emulator>\n      <machine>malta</machine>\n      <machine>mipssim</machine>\n      <machine>magnum</machine>\n      <machine>pica61</machine>\n      <machine>mips</machine>\n      <domain type='qemu'>\n      </domain>\n    </arch>\n    <features>\n      <deviceboot/>\n    </features>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='sparc'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu-system-sparc</emulator>\n      <machine>SS-5</machine>\n      <machine>leon3_generic</machine>\n      <machine>SS-10</machine>\n      <machine>SS-600MP</machine>\n      <machine>SS-20</machine>\n      <machine>Voyager</machine>\n      <machine>LX</machine>\n      <machine>SS-4</machine>\n      <machine>SPARCClassic</machine>\n      <machine>SPARCbook</machine>\n      <machine>SS-1000</machine>\n      <machine>SS-2000</machine>\n      <machine>SS-2</machine>\n      <domain type='qemu'>\n      </domain>\n    </arch>\n  </guest>\n\n  <guest>\n    <os_type>hvm</os_type>\n    <arch name='ppc'>\n      <wordsize>32</wordsize>\n      <emulator>/usr/bin/qemu-system-ppc</emulator>\n      <machine>g3beige</machine>\n      <machine>virtex-ml507</machine>\n      <machine>mpc8544ds</machine>\n      <machine canonical='bamboo-0.13'>bamboo</machine>\n      <machine>bamboo-0.13</machine>\n      <machine>bamboo-0.12</machine>\n      <machine>ref405ep</machine>\n      <machine>taihu</machine>\n      <machine>mac99</machine>\n      <machine>prep</machine>\n      <domain type='qemu'>\n      </domain>\n    </arch>\n    <features>\n      <deviceboot/>\n    </features>\n  </guest>\n\n</capabilities>'''"
newline|'\n'
nl|'\n'
DECL|function|compareCPU
dedent|''
name|'def'
name|'compareCPU'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'arch_node'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./arch'"
op|')'
newline|'\n'
name|'if'
name|'arch_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'arch_node'
op|'.'
name|'text'
name|'not'
name|'in'
op|'['
name|'arch'
op|'.'
name|'X86_64'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'I686'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'model_node'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./model'"
op|')'
newline|'\n'
name|'if'
name|'model_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'model_node'
op|'.'
name|'text'
op|'!='
name|'node_cpu_model'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'vendor_node'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./vendor'"
op|')'
newline|'\n'
name|'if'
name|'vendor_node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'vendor_node'
op|'.'
name|'text'
op|'!='
name|'node_cpu_vendor'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'VIR_CPU_COMPARE_INCOMPATIBLE'
newline|'\n'
nl|'\n'
comment|'# The rest of the stuff libvirt implements is rather complicated'
nl|'\n'
comment|"# and I don't think it adds much value to replicate it here."
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'VIR_CPU_COMPARE_IDENTICAL'
newline|'\n'
nl|'\n'
DECL|function|getCPUStats
dedent|''
name|'def'
name|'getCPUStats'
op|'('
name|'self'
op|','
name|'cpuNum'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'cpuNum'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'kernel'"
op|':'
number|'5664160000000L'
op|','
nl|'\n'
string|"'idle'"
op|':'
number|'1592705190000000L'
op|','
nl|'\n'
string|"'user'"
op|':'
number|'26728850000000L'
op|','
nl|'\n'
string|"'iowait'"
op|':'
number|'6121490000000L'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"invalid argument: Invalid cpu number"'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_INTERNAL_ERROR'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_QEMU'
op|')'
newline|'\n'
nl|'\n'
DECL|function|nwfilterLookupByName
dedent|''
dedent|''
name|'def'
name|'nwfilterLookupByName'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_nwfilters'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'make_libvirtError'
op|'('
nl|'\n'
name|'libvirtError'
op|','
nl|'\n'
string|'"no nwfilter with matching name %s"'
op|'%'
name|'name'
op|','
nl|'\n'
name|'error_code'
op|'='
name|'VIR_ERR_NO_NWFILTER'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'VIR_FROM_NWFILTER'
op|')'
newline|'\n'
nl|'\n'
DECL|function|nwfilterDefineXML
dedent|''
dedent|''
name|'def'
name|'nwfilterDefineXML'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nwfilter'
op|'='
name|'NWFilter'
op|'('
name|'self'
op|','
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_filter'
op|'('
name|'nwfilter'
op|')'
newline|'\n'
nl|'\n'
DECL|function|listDefinedDomains
dedent|''
name|'def'
name|'listDefinedDomains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|listDevices
dedent|''
name|'def'
name|'listDevices'
op|'('
name|'self'
op|','
name|'cap'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|baselineCPU
dedent|''
name|'def'
name|'baselineCPU'
op|'('
name|'self'
op|','
name|'cpu'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add new libvirt API."""'
newline|'\n'
name|'return'
string|'"""<cpu mode=\'custom\' match=\'exact\'>\n                    <model>Penryn</model>\n                    <vendor>Intel</vendor>\n                    <feature name=\'xtpr\'/>\n                    <feature name=\'tm2\'/>\n                    <feature name=\'est\'/>\n                    <feature name=\'vmx\'/>\n                    <feature name=\'ds_cpl\'/>\n                    <feature name=\'monitor\'/>\n                    <feature name=\'pbe\'/>\n                    <feature name=\'tm\'/>\n                    <feature name=\'ht\'/>\n                    <feature name=\'ss\'/>\n                    <feature name=\'acpi\'/>\n                    <feature name=\'ds\'/>\n                    <feature name=\'vme\'/>\n                    <feature policy=\'require\' name=\'aes\'/>\n                  </cpu>"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|openAuth
dedent|''
dedent|''
name|'def'
name|'openAuth'
op|'('
name|'uri'
op|','
name|'auth'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'type'
op|'('
name|'auth'
op|')'
op|'!='
name|'list'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Expected a list for \'auth\' parameter"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'type'
op|'('
name|'auth'
op|'['
number|'0'
op|']'
op|')'
op|'!='
name|'list'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Expected a function in \'auth[0]\' parameter"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'callable'
op|'('
name|'auth'
op|'['
number|'1'
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Expected a function in \'auth[1]\' parameter"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'Connection'
op|'('
name|'uri'
op|','
op|'('
name|'flags'
op|'=='
name|'VIR_CONNECT_RO'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virEventRunDefaultImpl
dedent|''
name|'def'
name|'virEventRunDefaultImpl'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|virEventRegisterDefaultImpl
dedent|''
name|'def'
name|'virEventRegisterDefaultImpl'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'connection_used'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"virEventRegisterDefaultImpl() must be \\\n            called before connection is used."'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|registerErrorHandler
dedent|''
dedent|''
name|'def'
name|'registerErrorHandler'
op|'('
name|'handler'
op|','
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|make_libvirtError
dedent|''
name|'def'
name|'make_libvirtError'
op|'('
name|'error_class'
op|','
name|'msg'
op|','
name|'error_code'
op|'='
name|'None'
op|','
nl|'\n'
name|'error_domain'
op|'='
name|'None'
op|','
name|'error_message'
op|'='
name|'None'
op|','
nl|'\n'
name|'error_level'
op|'='
name|'None'
op|','
name|'str1'
op|'='
name|'None'
op|','
name|'str2'
op|'='
name|'None'
op|','
name|'str3'
op|'='
name|'None'
op|','
nl|'\n'
name|'int1'
op|'='
name|'None'
op|','
name|'int2'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Convenience function for creating `libvirtError` exceptions which\n    allow you to specify arguments in constructor without having to manipulate\n    the `err` tuple directly.\n\n    We need to pass in `error_class` to this function because it may be\n    `libvirt.libvirtError` or `fakelibvirt.libvirtError` depending on whether\n    `libvirt-python` is installed.\n    """'
newline|'\n'
name|'exc'
op|'='
name|'error_class'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'exc'
op|'.'
name|'err'
op|'='
op|'('
name|'error_code'
op|','
name|'error_domain'
op|','
name|'error_message'
op|','
name|'error_level'
op|','
nl|'\n'
name|'str1'
op|','
name|'str2'
op|','
name|'str3'
op|','
name|'int1'
op|','
name|'int2'
op|')'
newline|'\n'
name|'return'
name|'exc'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|virDomain
dedent|''
name|'virDomain'
op|'='
name|'Domain'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|virConnect
name|'virConnect'
op|'='
name|'Connection'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeLibvirtFixture
name|'class'
name|'FakeLibvirtFixture'
op|'('
name|'fixtures'
op|'.'
name|'Fixture'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This fixture patches the libvirt.openAuth method so that it\n    always returns an instance of fakelibvirt.virConnect. This\n    ensures the tests don\'t mistakenly connect to a real libvirt\n    daemon instance which would lead to non-deterministic behaviour.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeLibvirtFixture'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'libvirt'
newline|'\n'
nl|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'libvirt'
op|','
string|'"openAuth"'
op|','
nl|'\n'
name|'return_value'
op|'='
name|'virConnect'
op|'('
string|'"qemu:///system"'
op|')'
op|')'
newline|'\n'
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
comment|"# If we can't import libvirt, the tests will use"
nl|'\n'
comment|'# fakelibvirt regardless, so nothing todo here'
nl|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
