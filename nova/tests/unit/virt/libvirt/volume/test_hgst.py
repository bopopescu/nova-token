begin_unit
comment|'# Copyright 2015 HGST'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'os_brick'
op|'.'
name|'initiator'
name|'import'
name|'connector'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'test_volume'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'hgst'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Actual testing of the os_brick HGST driver done in the os_brick testcases'
nl|'\n'
comment|"# Here we're concerned only with the small API shim that connects Nova"
nl|'\n'
comment|'# so these will be pretty simple cases.'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtHGSTVolumeDriverTestCase
name|'class'
name|'LibvirtHGSTVolumeDriverTestCase'
op|'('
name|'test_volume'
op|'.'
name|'LibvirtVolumeBaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_libvirt_hgst_driver_type
indent|'    '
name|'def'
name|'test_libvirt_hgst_driver_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'hgst'
op|'.'
name|'LibvirtHGSTVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'drvr'
op|'.'
name|'connector'
op|','
name|'connector'
op|'.'
name|'HGSTConnector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_hgst_driver_connect
dedent|''
name|'def'
name|'test_libvirt_hgst_driver_connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|brick_conn_vol
indent|'        '
name|'def'
name|'brick_conn_vol'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'path'"
op|':'
string|"'/dev/space01'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'drvr'
op|'='
name|'hgst'
op|'.'
name|'LibvirtHGSTVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'connector'
op|'.'
name|'connect_volume'
op|'='
name|'brick_conn_vol'
newline|'\n'
name|'di'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/dev/space01'"
op|','
string|"'name'"
op|':'
string|"'space01'"
op|'}'
newline|'\n'
name|'ci'
op|'='
op|'{'
string|"'data'"
op|':'
name|'di'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'connect_volume'
op|'('
name|'ci'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/space01'"
op|','
nl|'\n'
name|'ci'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_hgst_driver_get_config
dedent|''
name|'def'
name|'test_libvirt_hgst_driver_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'hgst'
op|'.'
name|'LibvirtHGSTVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'di'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/dev/space01'"
op|','
string|"'name'"
op|':'
string|"'space01'"
op|','
string|"'type'"
op|':'
string|"'raw'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vda1'"
op|','
string|"'bus'"
op|':'
string|"'pci0'"
op|','
string|"'device_path'"
op|':'
string|"'/dev/space01'"
op|'}'
newline|'\n'
name|'ci'
op|'='
op|'{'
string|"'data'"
op|':'
name|'di'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'drvr'
op|'.'
name|'get_config'
op|'('
name|'ci'
op|','
name|'di'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'block'"
op|','
name|'conf'
op|'.'
name|'source_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/space01'"
op|','
name|'conf'
op|'.'
name|'source_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_hgst_driver_disconnect
dedent|''
name|'def'
name|'test_libvirt_hgst_driver_disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvr'
op|'='
name|'hgst'
op|'.'
name|'LibvirtHGSTVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'connector'
op|'.'
name|'disconnect_volume'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'di'
op|'='
op|'{'
string|"'path'"
op|':'
string|"'/dev/space01'"
op|','
string|"'name'"
op|':'
string|"'space01'"
op|','
string|"'type'"
op|':'
string|"'raw'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vda1'"
op|','
string|"'bus'"
op|':'
string|"'pci0'"
op|','
string|"'device_path'"
op|':'
string|"'/dev/space01'"
op|'}'
newline|'\n'
name|'ci'
op|'='
op|'{'
string|"'data'"
op|':'
name|'di'
op|'}'
newline|'\n'
name|'drvr'
op|'.'
name|'disconnect_volume'
op|'('
name|'ci'
op|','
name|'di'
op|')'
newline|'\n'
name|'drvr'
op|'.'
name|'connector'
op|'.'
name|'disconnect_volume'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'di'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
