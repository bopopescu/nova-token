begin_unit
comment|'# Copyright 2015 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'fs'
newline|'\n'
nl|'\n'
DECL|variable|FAKE_MOUNT_POINT
name|'FAKE_MOUNT_POINT'
op|'='
string|"'/var/lib/nova/fake-mount'"
newline|'\n'
DECL|variable|FAKE_SHARE
name|'FAKE_SHARE'
op|'='
string|"'fake-share'"
newline|'\n'
DECL|variable|NORMALIZED_SHARE
name|'NORMALIZED_SHARE'
op|'='
name|'FAKE_SHARE'
op|'+'
string|"'-normalized'"
newline|'\n'
DECL|variable|HASHED_SHARE
name|'HASHED_SHARE'
op|'='
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'NORMALIZED_SHARE'
op|')'
newline|'\n'
DECL|variable|FAKE_DEVICE_NAME
name|'FAKE_DEVICE_NAME'
op|'='
string|"'fake-device'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeFileSystemVolumeDriver
name|'class'
name|'FakeFileSystemVolumeDriver'
op|'('
name|'fs'
op|'.'
name|'LibvirtBaseFileSystemVolumeDriver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_get_mount_point_base
indent|'    '
name|'def'
name|'_get_mount_point_base'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FAKE_MOUNT_POINT'
newline|'\n'
nl|'\n'
DECL|member|_normalize_export
dedent|''
name|'def'
name|'_normalize_export'
op|'('
name|'self'
op|','
name|'export'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'NORMALIZED_SHARE'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtBaseFileSystemVolumeDriverTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtBaseFileSystemVolumeDriverTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests the basic behavior of the LibvirtBaseFileSystemVolumeDriver"""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtBaseFileSystemVolumeDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'FakeFileSystemVolumeDriver'
op|'('
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'export'"
op|':'
name|'FAKE_SHARE'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'FAKE_DEVICE_NAME'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_path
dedent|''
name|'def'
name|'test_get_device_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_get_device_path'
op|'('
name|'self'
op|'.'
name|'connection_info'
op|')'
newline|'\n'
name|'expected_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'FAKE_MOUNT_POINT'
op|','
nl|'\n'
name|'HASHED_SHARE'
op|','
nl|'\n'
name|'FAKE_DEVICE_NAME'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_path'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
