begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'test_volume'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'volume'
name|'import'
name|'scality'
newline|'\n'
nl|'\n'
nl|'\n'
name|'class'
name|'LibvirtScalityVolumeDriverTestCase'
op|'('
nl|'\n'
DECL|class|LibvirtScalityVolumeDriverTestCase
name|'test_volume'
op|'.'
name|'LibvirtVolumeBaseTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtScalityVolumeDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'scality_sofs_config'
op|'='
string|"'fake.conf'"
newline|'\n'
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|'='
string|"'/fake'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scality_sofs_config'
op|'='
name|'self'
op|'.'
name|'scality_sofs_config'
op|','
nl|'\n'
name|'scality_sofs_mount_point'
op|'='
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drv'
op|'='
name|'scality'
op|'.'
name|'LibvirtScalityVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'six.moves.urllib.request.urlopen'"
op|')'
newline|'\n'
DECL|member|test_connect_volume
name|'def'
name|'test_connect_volume'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'TEST_VOLDIR'
op|'='
string|"'volumes'"
newline|'\n'
name|'TEST_VOLNAME'
op|'='
string|"'volume_name'"
newline|'\n'
name|'TEST_CONN_INFO'
op|'='
op|'{'
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'sofs_path'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'TEST_VOLDIR'
op|','
name|'TEST_VOLNAME'
op|')'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'TEST_VOLPATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|','
nl|'\n'
name|'TEST_VOLDIR'
op|','
nl|'\n'
name|'TEST_VOLNAME'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_access_wrapper
name|'def'
name|'_access_wrapper'
op|'('
name|'path'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/sbin/mount.sofs'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'os'
op|'.'
name|'access'
op|'('
name|'path'
op|','
name|'flags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'access'"
op|','
name|'_access_wrapper'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drv'
op|','
string|"'_mount_sofs'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'drv'
op|'.'
name|'connect_volume'
op|'('
name|'TEST_CONN_INFO'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'device_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|','
nl|'\n'
name|'TEST_CONN_INFO'
op|'['
string|"'data'"
op|']'
op|'['
string|"'sofs_path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'TEST_CONN_INFO'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|','
name|'device_path'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'self'
op|'.'
name|'drv'
op|'.'
name|'get_config'
op|'('
name|'TEST_CONN_INFO'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'TEST_VOLPATH'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_mount_sofs_when_sofs_already_mounted
name|'def'
name|'test_mount_sofs_when_sofs_already_mounted'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drv'
op|','
string|"'_sofs_is_mounted'"
op|')'
name|'as'
name|'m_is_mounted'
op|':'
newline|'\n'
indent|'            '
name|'m_is_mounted'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drv'
op|'.'
name|'_mount_sofs'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_execute'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'m_is_mounted'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
newline|'\n'
DECL|member|test_mount_sofs_when_mount_fails
name|'def'
name|'test_mount_sofs_when_mount_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drv'
op|','
string|"'_sofs_is_mounted'"
op|')'
name|'as'
name|'m_is_mounted'
op|':'
newline|'\n'
indent|'            '
name|'m_is_mounted'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'False'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'nova'
op|'.'
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'drv'
op|'.'
name|'_mount_sofs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'m_is_mounted'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_mount_sofs_when_sofs_is_not_mounted
name|'def'
name|'test_mount_sofs_when_sofs_is_not_mounted'
op|'('
name|'self'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'drv'
op|','
string|"'_sofs_is_mounted'"
op|')'
name|'as'
name|'m_is_mounted'
op|':'
newline|'\n'
indent|'            '
name|'m_is_mounted'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'drv'
op|'.'
name|'_mount_sofs'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'m_is_mounted'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'mock_execute'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'expected_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'sofs'"
op|','
name|'self'
op|'.'
name|'scality_sofs_config'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'mock_execute'
op|'.'
name|'assert_has_calls'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sofs_is_mounted_when_sofs_is_not_mounted
dedent|''
name|'def'
name|'test_sofs_is_mounted_when_sofs_is_not_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
string|"'tmpfs /dev/shm\\n'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'io.open'"
op|','
name|'mock_open'
op|')'
name|'as'
name|'mock_open'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'drv'
op|'.'
name|'_sofs_is_mounted'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sofs_is_mounted_when_sofs_is_mounted
dedent|''
dedent|''
name|'def'
name|'test_sofs_is_mounted_when_sofs_is_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proc_mount'
op|'='
string|"'/dev/fuse '"
op|'+'
name|'self'
op|'.'
name|'scality_sofs_mount_point'
op|'+'
string|"'\\n'"
newline|'\n'
name|'mock_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
name|'proc_mount'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'io.open'"
op|','
name|'mock_open'
op|')'
name|'as'
name|'mock_open'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'drv'
op|'.'
name|'_sofs_is_mounted'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
