begin_unit
comment|'#    Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#    Copyright 2012 University Of Minho'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'platform'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'os_brick'
op|'.'
name|'initiator'
name|'import'
name|'connector'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fakelibvirt'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'host'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'quobyte'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'volume'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|SECRET_UUID
name|'SECRET_UUID'
op|'='
string|"'2a0a0d6c-babf-454d-b93e-9ac9957b95e0'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSecret
name|'class'
name|'FakeSecret'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'uuid'
op|'='
name|'SECRET_UUID'
newline|'\n'
nl|'\n'
DECL|member|getUUIDString
dedent|''
name|'def'
name|'getUUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
DECL|member|setValue
dedent|''
name|'def'
name|'setValue'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'value'
op|'='
name|'value'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|getValue
dedent|''
name|'def'
name|'getValue'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|undefine
dedent|''
name|'def'
name|'undefine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'value'
op|'='
name|'None'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtVolumeTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtVolumeTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fakelibvirt'
op|'.'
name|'FakeLibvirtFixture'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeLibvirtDriver
name|'class'
name|'FakeLibvirtDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_host'
op|'='
name|'host'
op|'.'
name|'Host'
op|'('
string|'"qemu:///system"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_all_block_devices
dedent|''
name|'def'
name|'_get_all_block_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'fake_conn'
op|'='
name|'FakeLibvirtDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connr'
op|'='
op|'{'
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'initiator'"
op|':'
string|"'fake_initiator'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|'"bus"'
op|':'
string|'"virtio"'
op|','
nl|'\n'
string|'"dev"'
op|':'
string|'"vde"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"disk"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
string|"'volume-00000001'"
newline|'\n'
name|'self'
op|'.'
name|'location'
op|'='
string|"'10.0.2.15:3260'"
newline|'\n'
name|'self'
op|'.'
name|'iqn'
op|'='
string|"'iqn.2010-10.org.openstack:%s'"
op|'%'
name|'self'
op|'.'
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'vol'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
string|"'foo'"
newline|'\n'
nl|'\n'
DECL|member|_assertNetworkAndProtocolEquals
dedent|''
name|'def'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'self'
op|','
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'protocol'"
op|')'
op|','
string|"'rbd'"
op|')'
newline|'\n'
name|'rbd_name'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
string|"'rbd'"
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'rbd_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertISCSINetworkAndProtocolEquals
dedent|''
name|'def'
name|'_assertISCSINetworkAndProtocolEquals'
op|'('
name|'self'
op|','
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'protocol'"
op|')'
op|','
string|"'iscsi'"
op|')'
newline|'\n'
name|'iscsi_name'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'iqn'
op|','
name|'self'
op|'.'
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'iscsi_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertFileTypeEquals
dedent|''
name|'def'
name|'_assertFileTypeEquals'
op|'('
name|'self'
op|','
name|'tree'
op|','
name|'file_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|','
name|'file_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertDiskInfoEquals
dedent|''
name|'def'
name|'_assertDiskInfoEquals'
op|'('
name|'self'
op|','
name|'tree'
op|','
name|'disk_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'device'"
op|')'
op|','
name|'disk_info'
op|'['
string|"'type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'bus'"
op|')'
op|','
nl|'\n'
name|'disk_info'
op|'['
string|"'bus'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'disk_info'
op|'['
string|"'dev'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_libvirt_volume_driver_disk_info
dedent|''
name|'def'
name|'_test_libvirt_volume_driver_disk_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'device_path'"
op|':'
string|"'/foo'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'fake_serial'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertDiskInfoEquals'
op|'('
name|'tree'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_disk_info_type
dedent|''
name|'def'
name|'test_libvirt_volume_disk_info_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disk_info'
op|'['
string|"'type'"
op|']'
op|'='
string|"'cdrom'"
newline|'\n'
name|'self'
op|'.'
name|'_test_libvirt_volume_driver_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_disk_info_dev
dedent|''
name|'def'
name|'test_libvirt_volume_disk_info_dev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disk_info'
op|'['
string|"'dev'"
op|']'
op|'='
string|"'hdc'"
newline|'\n'
name|'self'
op|'.'
name|'_test_libvirt_volume_driver_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_disk_info_bus
dedent|''
name|'def'
name|'test_libvirt_volume_disk_info_bus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disk_info'
op|'['
string|"'bus'"
op|']'
op|'='
string|"'scsi'"
newline|'\n'
name|'self'
op|'.'
name|'_test_libvirt_volume_driver_disk_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_driver_serial
dedent|''
name|'def'
name|'test_libvirt_volume_driver_serial'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'device_path'"
op|':'
string|"'/foo'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'fake_serial'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'block'"
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_serial'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./serial'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./blockio'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_driver_blockio
dedent|''
name|'def'
name|'test_libvirt_volume_driver_blockio'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'device_path'"
op|':'
string|"'/foo'"
op|','
nl|'\n'
string|"'logical_block_size'"
op|':'
string|"'4096'"
op|','
nl|'\n'
string|"'physical_block_size'"
op|':'
string|"'4096'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'fake_serial'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|'"bus"'
op|':'
string|'"virtio"'
op|','
nl|'\n'
string|'"dev"'
op|':'
string|'"vde"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"disk"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'blockio'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./blockio'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'4096'"
op|','
name|'blockio'
op|'.'
name|'get'
op|'('
string|"'logical_block_size'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'4096'"
op|','
name|'blockio'
op|'.'
name|'get'
op|'('
string|"'physical_block_size'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_driver_iotune
dedent|''
name|'def'
name|'test_libvirt_volume_driver_iotune'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|'"device_path"'
op|':'
string|'"/foo"'
op|','
nl|'\n'
string|"'qos_specs'"
op|':'
string|"'bar'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|'"bus"'
op|':'
string|'"virtio"'
op|','
nl|'\n'
string|'"dev"'
op|':'
string|'"vde"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"disk"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'iotune'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune'"
op|')'
newline|'\n'
comment|'# ensure invalid qos_specs is ignored'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'iotune'
op|')'
newline|'\n'
nl|'\n'
name|'specs'
op|'='
op|'{'
nl|'\n'
string|"'total_bytes_sec'"
op|':'
string|"'102400'"
op|','
nl|'\n'
string|"'read_bytes_sec'"
op|':'
string|"'51200'"
op|','
nl|'\n'
string|"'write_bytes_sec'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'total_iops_sec'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'read_iops_sec'"
op|':'
string|"'200'"
op|','
nl|'\n'
string|"'write_iops_sec'"
op|':'
string|"'200'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'del'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'qos_specs'"
op|']'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'.'
name|'update'
op|'('
name|'dict'
op|'('
name|'qos_specs'
op|'='
name|'specs'
op|')'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'102400'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/total_bytes_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'51200'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/read_bytes_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'0'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/write_bytes_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'0'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/total_iops_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'200'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/read_iops_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'200'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/write_iops_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_volume_driver_readonly
dedent|''
name|'def'
name|'test_libvirt_volume_driver_readonly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|'"device_path"'
op|':'
string|'"/foo"'
op|','
nl|'\n'
string|"'access_mode'"
op|':'
string|"'bar'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|'"bus"'
op|':'
string|'"virtio"'
op|','
nl|'\n'
string|'"dev"'
op|':'
string|'"vde"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"disk"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidVolumeAccessMode'
op|','
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'get_config'
op|','
nl|'\n'
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'access_mode'"
op|']'
op|'='
string|"'rw'"
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'readonly'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./readonly'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'readonly'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'access_mode'"
op|']'
op|'='
string|"'ro'"
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'readonly'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./readonly'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'readonly'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iscsi_connection
dedent|''
name|'def'
name|'iscsi_connection'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'location'
op|','
name|'iqn'
op|','
name|'auth'
op|'='
name|'False'
op|','
nl|'\n'
name|'transport'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_name'
op|'='
string|"'ip-%s-iscsi-%s-lun-1'"
op|'%'
op|'('
name|'location'
op|','
name|'iqn'
op|')'
newline|'\n'
name|'if'
name|'transport'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'dev_name'
op|'='
string|"'pci-0000:00:00.0-'"
op|'+'
name|'dev_name'
newline|'\n'
dedent|''
name|'dev_path'
op|'='
string|"'/dev/disk/by-path/%s'"
op|'%'
op|'('
name|'dev_name'
op|')'
newline|'\n'
name|'ret'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'volume_id'"
op|':'
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
name|'location'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
name|'iqn'
op|','
nl|'\n'
string|"'target_lun'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'dev_path'
op|','
nl|'\n'
string|"'qos_specs'"
op|':'
op|'{'
nl|'\n'
string|"'total_bytes_sec'"
op|':'
string|"'102400'"
op|','
nl|'\n'
string|"'read_iops_sec'"
op|':'
string|"'200'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'auth'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_method'"
op|']'
op|'='
string|"'CHAP'"
newline|'\n'
name|'ret'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
op|'='
string|"'foo'"
newline|'\n'
name|'ret'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_password'"
op|']'
op|'='
string|"'bar'"
newline|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|iscsi_connection_discovery_chap_enable
dedent|''
name|'def'
name|'iscsi_connection_discovery_chap_enable'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'location'
op|','
name|'iqn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_name'
op|'='
string|"'ip-%s-iscsi-%s-lun-1'"
op|'%'
op|'('
name|'location'
op|','
name|'iqn'
op|')'
newline|'\n'
name|'dev_path'
op|'='
string|"'/dev/disk/by-path/%s'"
op|'%'
op|'('
name|'dev_name'
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'volume_id'"
op|':'
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
name|'location'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
name|'iqn'
op|','
nl|'\n'
string|"'target_lun'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'dev_path'
op|','
nl|'\n'
string|"'discovery_auth_method'"
op|':'
string|"'CHAP'"
op|','
nl|'\n'
string|"'discovery_auth_username'"
op|':'
string|'"testuser"'
op|','
nl|'\n'
string|"'discovery_auth_password'"
op|':'
string|"'123456'"
op|','
nl|'\n'
string|"'qos_specs'"
op|':'
op|'{'
nl|'\n'
string|"'total_bytes_sec'"
op|':'
string|"'102400'"
op|','
nl|'\n'
string|"'read_iops_sec'"
op|':'
string|"'200'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|generate_device
dedent|''
name|'def'
name|'generate_device'
op|'('
name|'self'
op|','
name|'transport'
op|'='
name|'None'
op|','
name|'lun'
op|'='
number|'1'
op|','
name|'short'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_format'
op|'='
string|'"ip-%s-iscsi-%s-lun-%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'location'
op|','
name|'self'
op|'.'
name|'iqn'
op|','
name|'lun'
op|')'
newline|'\n'
name|'if'
name|'transport'
op|':'
newline|'\n'
indent|'            '
name|'dev_format'
op|'='
string|'"pci-0000:00:00.0-"'
op|'+'
name|'dev_format'
newline|'\n'
dedent|''
name|'if'
name|'short'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dev_format'
newline|'\n'
dedent|''
name|'fake_dev_path'
op|'='
string|'"/dev/disk/by-path/"'
op|'+'
name|'dev_format'
newline|'\n'
name|'return'
name|'fake_dev_path'
newline|'\n'
nl|'\n'
DECL|member|test_iscsiadm_discover_parsing
dedent|''
name|'def'
name|'test_iscsiadm_discover_parsing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that parsing iscsiadm discover ignores cruft.'
nl|'\n'
nl|'\n'
indent|'        '
name|'targets'
op|'='
op|'['
nl|'\n'
op|'['
string|'"192.168.204.82:3260,1"'
op|','
nl|'\n'
op|'('
string|'"iqn.2010-10.org.openstack:volume-"'
nl|'\n'
string|'"f9b12623-6ce3-4dac-a71f-09ad4249bdd3"'
op|')'
op|']'
op|','
nl|'\n'
op|'['
string|'"192.168.204.82:3261,1"'
op|','
nl|'\n'
op|'('
string|'"iqn.2010-10.org.openstack:volume-"'
nl|'\n'
string|'"f9b12623-6ce3-4dac-a71f-09ad4249bdd4"'
op|')'
op|']'
op|']'
newline|'\n'
nl|'\n'
comment|'# This slight wonkiness brought to you by pep8, as the actual'
nl|'\n'
comment|'# example output runs about 97 chars wide.'
nl|'\n'
name|'sample_input'
op|'='
string|'"""Loading iscsi modules: done\nStarting iSCSI initiator service: done\nSetting up iSCSI targets: unused\n%s %s\n%s %s\n"""'
op|'%'
op|'('
name|'targets'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
name|'targets'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'targets'
op|'['
number|'1'
op|']'
op|'['
number|'0'
op|']'
op|','
name|'targets'
op|'['
number|'1'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtISCSIVolumeDriver'
op|'('
string|'"none"'
op|')'
newline|'\n'
name|'out'
op|'='
name|'driver'
op|'.'
name|'connector'
op|'.'
name|'_get_target_portals_from_iscsiadm_output'
op|'('
nl|'\n'
name|'sample_input'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'targets'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_iscsi_driver
dedent|''
name|'def'
name|'test_libvirt_iscsi_driver'
op|'('
name|'self'
op|','
name|'transport'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtISCSIVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'libvirt_driver'
op|'.'
name|'connector'
op|','
nl|'\n'
name|'connector'
op|'.'
name|'ISCSIConnector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sanitize_log_run_iscsiadm
dedent|''
name|'def'
name|'test_sanitize_log_run_iscsiadm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that the parameters to the os-brick connector's"
nl|'\n'
comment|'# _run_iscsiadm function are sanitized for passwords when logged.'
nl|'\n'
DECL|function|fake_debug
indent|'        '
name|'def'
name|'fake_debug'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'node.session.auth.password'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'scrubme'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtISCSIVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connector'
op|'.'
name|'set_execute'
op|'('
name|'fake_execute'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'iscsi_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|','
name|'self'
op|'.'
name|'location'
op|','
nl|'\n'
name|'self'
op|'.'
name|'iqn'
op|')'
newline|'\n'
name|'iscsi_properties'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'connector'
op|'.'
name|'LOG'
op|','
string|"'debug'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_debug'
op|')'
name|'as'
name|'debug_mock'
op|':'
newline|'\n'
indent|'            '
name|'libvirt_driver'
op|'.'
name|'connector'
op|'.'
name|'_iscsiadm_update'
op|'('
nl|'\n'
name|'iscsi_properties'
op|','
string|"'node.session.auth.password'"
op|','
string|"'scrubme'"
op|')'
newline|'\n'
nl|'\n'
comment|"# we don't care what the log message is, we just want to make sure"
nl|'\n'
comment|'# our stub method is called which asserts the password is scrubbed'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'debug_mock'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iser_connection
dedent|''
dedent|''
name|'def'
name|'iser_connection'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'location'
op|','
name|'iqn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iser'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'volume_id'"
op|':'
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
name|'location'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
name|'iqn'
op|','
nl|'\n'
string|"'target_lun'"
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|sheepdog_connection
dedent|''
name|'def'
name|'sheepdog_connection'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'sheepdog'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'volume'
op|'['
string|"'name'"
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_sheepdog_driver
dedent|''
name|'def'
name|'test_libvirt_sheepdog_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'sheepdog_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'protocol'"
op|')'
op|','
string|"'sheepdog'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rbd_connection
dedent|''
name|'def'
name|'rbd_connection'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'rbd'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'%s/%s'"
op|'%'
op|'('
string|"'rbd'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
string|"'auth_enabled'"
op|':'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'rbd_secret_uuid'
name|'is'
name|'not'
name|'None'
op|','
nl|'\n'
string|"'auth_username'"
op|':'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'rbd_user'
op|','
nl|'\n'
string|"'secret_type'"
op|':'
string|"'ceph'"
op|','
nl|'\n'
string|"'secret_uuid'"
op|':'
name|'CONF'
op|'.'
name|'libvirt'
op|'.'
name|'rbd_secret_uuid'
op|','
nl|'\n'
string|"'qos_specs'"
op|':'
op|'{'
nl|'\n'
string|"'total_bytes_sec'"
op|':'
string|"'1048576'"
op|','
nl|'\n'
string|"'read_iops_sec'"
op|':'
string|"'500'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver
dedent|''
name|'def'
name|'test_libvirt_rbd_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source/auth'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1048576'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/total_bytes_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'500'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./iotune/read_iops_sec'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver_hosts
dedent|''
name|'def'
name|'test_libvirt_rbd_driver_hosts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'hosts'
op|'='
op|'['
string|"'example.com'"
op|','
string|"'1.2.3.4'"
op|','
string|"'::1'"
op|']'
newline|'\n'
name|'ports'
op|'='
op|'['
name|'None'
op|','
string|"'6790'"
op|','
string|"'6791'"
op|']'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'hosts'"
op|']'
op|'='
name|'hosts'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'ports'"
op|']'
op|'='
name|'ports'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source/auth'"
op|')'
op|')'
newline|'\n'
name|'found_hosts'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./source/host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'host'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
name|'for'
name|'host'
name|'in'
name|'found_hosts'
op|']'
op|','
name|'hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'host'
op|'.'
name|'get'
op|'('
string|"'port'"
op|')'
name|'for'
name|'host'
name|'in'
name|'found_hosts'
op|']'
op|','
name|'ports'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver_auth_enabled
dedent|''
name|'def'
name|'test_libvirt_rbd_driver_auth_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'secret_type'
op|'='
string|"'ceph'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_enabled'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'self'
op|'.'
name|'user'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_type'"
op|']'
op|'='
name|'secret_type'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth'"
op|')'
op|'.'
name|'get'
op|'('
string|"'username'"
op|')'
op|','
name|'self'
op|'.'
name|'user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
name|'secret_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver_auth_enabled_flags_override
dedent|''
name|'def'
name|'test_libvirt_rbd_driver_auth_enabled_flags_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'secret_type'
op|'='
string|"'ceph'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_enabled'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'self'
op|'.'
name|'user'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_type'"
op|']'
op|'='
name|'secret_type'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
name|'flags_uuid'
op|'='
string|"'37152720-1785-11e2-a740-af0c1d8b8e4b'"
newline|'\n'
name|'flags_user'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'rbd_user'
op|'='
name|'flags_user'
op|','
nl|'\n'
name|'rbd_secret_uuid'
op|'='
name|'flags_uuid'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth'"
op|')'
op|'.'
name|'get'
op|'('
string|"'username'"
op|')'
op|','
name|'flags_user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
name|'secret_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|','
name|'flags_uuid'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver_auth_disabled
dedent|''
name|'def'
name|'test_libvirt_rbd_driver_auth_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'secret_type'
op|'='
string|"'ceph'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_enabled'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'self'
op|'.'
name|'user'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_type'"
op|']'
op|'='
name|'secret_type'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth'"
op|')'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_rbd_driver_auth_disabled_flags_override
dedent|''
name|'def'
name|'test_libvirt_rbd_driver_auth_disabled_flags_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'rbd_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|')'
newline|'\n'
name|'secret_type'
op|'='
string|"'ceph'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_enabled'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'self'
op|'.'
name|'user'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_type'"
op|']'
op|'='
name|'secret_type'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'secret_uuid'"
op|']'
op|'='
name|'self'
op|'.'
name|'uuid'
newline|'\n'
nl|'\n'
comment|'# NOTE: Supplying the rbd_secret_uuid will enable authentication'
nl|'\n'
comment|'# locally in nova-compute even if not enabled in nova-volume/cinder'
nl|'\n'
name|'flags_uuid'
op|'='
string|"'37152720-1785-11e2-a740-af0c1d8b8e4b'"
newline|'\n'
name|'flags_user'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'rbd_user'
op|'='
name|'flags_user'
op|','
nl|'\n'
name|'rbd_secret_uuid'
op|'='
name|'flags_uuid'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertNetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth'"
op|')'
op|'.'
name|'get'
op|'('
string|"'username'"
op|')'
op|','
name|'flags_user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
name|'secret_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|','
name|'flags_uuid'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'find_secret'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'create_secret'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'host'
op|'.'
name|'Host'
op|','
string|"'delete_secret'"
op|')'
newline|'\n'
DECL|member|test_libvirt_iscsi_net_driver
name|'def'
name|'test_libvirt_iscsi_net_driver'
op|'('
name|'self'
op|','
name|'mock_delete'
op|','
name|'mock_create'
op|','
nl|'\n'
name|'mock_find'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_find'
op|'.'
name|'return_value'
op|'='
name|'FakeSecret'
op|'('
op|')'
newline|'\n'
name|'mock_create'
op|'.'
name|'return_value'
op|'='
name|'FakeSecret'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNetVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'iscsi_connection'
op|'('
name|'self'
op|'.'
name|'vol'
op|','
name|'self'
op|'.'
name|'location'
op|','
nl|'\n'
name|'self'
op|'.'
name|'iqn'
op|','
name|'auth'
op|'='
name|'True'
op|')'
newline|'\n'
name|'secret_type'
op|'='
string|"'iscsi'"
newline|'\n'
name|'flags_user'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'auth_username'"
op|']'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertISCSINetworkAndProtocolEquals'
op|'('
name|'tree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth'"
op|')'
op|'.'
name|'get'
op|'('
string|"'username'"
op|')'
op|','
name|'flags_user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
name|'secret_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./auth/secret'"
op|')'
op|'.'
name|'get'
op|'('
string|"'uuid'"
op|')'
op|','
name|'SECRET_UUID'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|"'vde'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_nfs_driver
dedent|''
name|'def'
name|'test_libvirt_nfs_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish) exists is to make driver assume connecting worked'
nl|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'nfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'lambda'
name|'x'
op|','
name|'d'
op|':'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/nfs/share1'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'device_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'device_path'
op|','
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|')'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'nfs'"
op|','
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume'
op|'.'
name|'LOG'
op|','
string|"'debug'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume'
op|'.'
name|'LOG'
op|','
string|"'exception'"
op|')'
newline|'\n'
DECL|member|test_libvirt_nfs_driver_umount_error
name|'def'
name|'test_libvirt_nfs_driver_umount_error'
op|'('
name|'self'
op|','
name|'mock_LOG_exception'
op|','
nl|'\n'
name|'mock_LOG_debug'
op|','
name|'mock_utils_exe'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'export_string'
op|'='
string|"'192.168.1.1:/nfs/share1'"
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'mock_utils_exe'
op|'.'
name|'side_effect'
op|'='
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
string|"'umount'"
op|','
string|"'umount: device is busy.'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_LOG_debug'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_utils_exe'
op|'.'
name|'side_effect'
op|'='
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
string|"'umount'"
op|','
string|"'umount: target is busy.'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_LOG_debug'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_utils_exe'
op|'.'
name|'side_effect'
op|'='
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
string|"'umount'"
op|','
string|"'umount: Other error.'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_LOG_exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_nfs_driver_get_config
dedent|''
name|'def'
name|'test_libvirt_nfs_driver_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'nfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/nfs/share1'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'file_path'
op|'}'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_nfs_driver_already_mounted
dedent|''
name|'def'
name|'test_libvirt_nfs_driver_already_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish) exists is to make driver assume connecting worked'
nl|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'nfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
nl|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/nfs/share1'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'findmnt'"
op|','
string|"'--target'"
op|','
name|'export_mnt_base'
op|','
string|"'--source'"
op|','
nl|'\n'
name|'export_string'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_nfs_driver_with_opts
dedent|''
name|'def'
name|'test_libvirt_nfs_driver_with_opts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'nfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtNFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'lambda'
name|'x'
op|','
name|'d'
op|':'
name|'False'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/nfs/share1'"
newline|'\n'
name|'options'
op|'='
string|"'-o intr,nfsvers=3'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'options'"
op|':'
name|'options'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'nfs'"
op|','
string|"'-o'"
op|','
string|"'intr,nfsvers=3'"
op|','
nl|'\n'
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_libvirt_aoe_driver
name|'def'
name|'test_libvirt_aoe_driver'
op|'('
name|'self'
op|','
name|'exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtAOEVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'libvirt_driver'
op|'.'
name|'connector'
op|','
nl|'\n'
name|'connector'
op|'.'
name|'AoEConnector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_glusterfs_driver
dedent|''
name|'def'
name|'test_libvirt_glusterfs_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'glusterfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGlusterfsVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'lambda'
name|'x'
op|','
name|'d'
op|':'
name|'False'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'device_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'device_path'
op|','
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|')'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'glusterfs'"
op|','
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_glusterfs_driver_get_config
dedent|''
name|'def'
name|'test_libvirt_glusterfs_driver_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'glusterfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGlusterfsVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test default format - raw'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'file_path'
op|'}'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'raw'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test specified format - qcow2'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'file_path'
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'qcow2'"
op|'}'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'qcow2'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_glusterfs_driver_already_mounted
dedent|''
name|'def'
name|'test_libvirt_glusterfs_driver_already_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'glusterfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGlusterfsVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'findmnt'"
op|','
string|"'--target'"
op|','
name|'export_mnt_base'
op|','
nl|'\n'
string|"'--source'"
op|','
name|'export_string'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_glusterfs_driver_with_opts
dedent|''
name|'def'
name|'test_libvirt_glusterfs_driver_with_opts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'glusterfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGlusterfsVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'lambda'
name|'x'
op|','
name|'d'
op|':'
name|'False'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/volume-00001'"
newline|'\n'
name|'options'
op|'='
string|"'-o backupvolfile-server=192.168.1.2'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'options'"
op|':'
name|'options'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'glusterfs'"
op|','
nl|'\n'
string|"'-o'"
op|','
string|"'backupvolfile-server=192.168.1.2'"
op|','
nl|'\n'
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_glusterfs_libgfapi
dedent|''
name|'def'
name|'test_libvirt_glusterfs_libgfapi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'qemu_allowed_storage_drivers'
op|'='
op|'['
string|"'gluster'"
op|']'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGlusterfsVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'lambda'
name|'x'
op|','
name|'d'
op|':'
name|'False'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1:/volume-00001'"
newline|'\n'
name|'name'
op|'='
string|"'volume-00001'"
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
string|"'name'"
op|':'
name|'name'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|'"dev"'
op|':'
string|'"vde"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"disk"'
op|','
nl|'\n'
string|'"bus"'
op|':'
string|'"virtio"'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
name|'source'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./source'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'source'
op|'.'
name|'get'
op|'('
string|"'protocol'"
op|')'
op|','
string|"'gluster'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'source'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'volume-00001/volume-00001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'source'
op|'.'
name|'find'
op|'('
string|"'./host'"
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'192.168.1.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'source'
op|'.'
name|'find'
op|'('
string|"'./host'"
op|')'
op|'.'
name|'get'
op|'('
string|"'port'"
op|')'
op|','
string|"'24007'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_fibrechan_driver
dedent|''
name|'def'
name|'test_libvirt_fibrechan_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtFibreChannelVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'libvirt_driver'
op|'.'
name|'connector'
op|','
nl|'\n'
name|'connector'
op|'.'
name|'FibreChannelConnector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_libvirt_fibrechan_driver_s390
dedent|''
name|'def'
name|'_test_libvirt_fibrechan_driver_s390'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtFibreChannelVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'libvirt_driver'
op|'.'
name|'connector'
op|','
nl|'\n'
name|'connector'
op|'.'
name|'FibreChannelConnectorS390X'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'platform'
op|','
string|"'machine'"
op|','
name|'return_value'
op|'='
name|'arch'
op|'.'
name|'S390'
op|')'
newline|'\n'
DECL|member|test_libvirt_fibrechan_driver_s390
name|'def'
name|'test_libvirt_fibrechan_driver_s390'
op|'('
name|'self'
op|','
name|'mock_machine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_libvirt_fibrechan_driver_s390'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'platform'
op|','
string|"'machine'"
op|','
name|'return_value'
op|'='
name|'arch'
op|'.'
name|'S390X'
op|')'
newline|'\n'
DECL|member|test_libvirt_fibrechan_driver_s390x
name|'def'
name|'test_libvirt_fibrechan_driver_s390x'
op|'('
name|'self'
op|','
name|'mock_machine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_libvirt_fibrechan_driver_s390'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_scality_driver
dedent|''
name|'def'
name|'test_libvirt_scality_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'TEST_MOUNT'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'fake_mount'"
op|')'
newline|'\n'
name|'TEST_CONFIG'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'fake_config'"
op|')'
newline|'\n'
name|'TEST_VOLDIR'
op|'='
string|"'volumes'"
newline|'\n'
name|'TEST_VOLNAME'
op|'='
string|"'volume_name'"
newline|'\n'
name|'TEST_CONN_INFO'
op|'='
op|'{'
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'sofs_path'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'TEST_VOLDIR'
op|','
name|'TEST_VOLNAME'
op|')'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'TEST_VOLPATH'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'TEST_MOUNT'
op|','
nl|'\n'
name|'TEST_VOLDIR'
op|','
nl|'\n'
name|'TEST_VOLNAME'
op|')'
newline|'\n'
name|'open'
op|'('
name|'TEST_CONFIG'
op|','
string|'"w+"'
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'TEST_MOUNT'
op|','
string|"'sys'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_access_wrapper
name|'def'
name|'_access_wrapper'
op|'('
name|'path'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/sbin/mount.sofs'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'os'
op|'.'
name|'access'
op|'('
name|'path'
op|','
name|'flags'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'access'"
op|','
name|'_access_wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scality_sofs_config'
op|'='
name|'TEST_CONFIG'
op|','
nl|'\n'
name|'scality_sofs_mount_point'
op|'='
name|'TEST_MOUNT'
op|','
nl|'\n'
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtScalityVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'connect_volume'
op|'('
name|'TEST_CONN_INFO'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'device_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'TEST_MOUNT'
op|','
nl|'\n'
name|'TEST_CONN_INFO'
op|'['
string|"'data'"
op|']'
op|'['
string|"'sofs_path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'device_path'
op|','
nl|'\n'
name|'TEST_CONN_INFO'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'driver'
op|'.'
name|'get_config'
op|'('
name|'TEST_CONN_INFO'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'TEST_VOLPATH'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|')'
newline|'\n'
DECL|member|test_libvirt_smbfs_driver
name|'def'
name|'test_libvirt_smbfs_driver'
op|'('
name|'self'
op|','
name|'mock_is_mounted'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'smbfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'mock_is_mounted'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtSMBFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'//192.168.1.1/volumes'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'options'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'cifs'"
op|','
string|"'-o'"
op|','
string|"'username=guest'"
op|','
nl|'\n'
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_smbfs_driver_already_mounted
dedent|''
name|'def'
name|'test_libvirt_smbfs_driver_already_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'smbfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtSMBFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'//192.168.1.1/volumes'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'findmnt'"
op|','
string|"'--target'"
op|','
name|'export_mnt_base'
op|','
nl|'\n'
string|"'--source'"
op|','
name|'export_string'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_smbfs_driver_get_config
dedent|''
name|'def'
name|'test_libvirt_smbfs_driver_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'smbfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtSMBFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'//192.168.1.1/volumes'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'device_path'"
op|':'
name|'file_path'
op|'}'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|')'
newline|'\n'
DECL|member|test_libvirt_smbfs_driver_with_opts
name|'def'
name|'test_libvirt_smbfs_driver_with_opts'
op|'('
name|'self'
op|','
name|'mock_is_mounted'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'smbfs_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'mock_is_mounted'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtSMBFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'//192.168.1.1/volumes'"
newline|'\n'
name|'options'
op|'='
string|"'-o user=guest,uid=107,gid=105'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'export_string'
op|')'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'options'"
op|':'
name|'options'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'mkdir'"
op|','
string|"'-p'"
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'mount'"
op|','
string|"'-t'"
op|','
string|"'cifs'"
op|','
string|"'-o'"
op|','
string|"'user=guest,uid=107,gid=105'"
op|','
nl|'\n'
name|'export_string'
op|','
name|'export_mnt_base'
op|')'
op|','
nl|'\n'
op|'('
string|"'umount'"
op|','
name|'export_mnt_base'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_gpfs_driver_get_config
dedent|''
name|'def'
name|'test_libvirt_gpfs_driver_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtGPFSVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'gpfs'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'device_path'"
op|':'
string|"'/gpfs/foo'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'fake_serial'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'file'"
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_serial'"
op|','
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./serial'"
op|')'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'validate_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'mount_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|member|test_libvirt_quobyte_driver_mount
name|'def'
name|'test_libvirt_quobyte_driver_mount'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_is_mounted'
op|','
nl|'\n'
name|'mock_mount_volume'
op|','
nl|'\n'
name|'mock_validate_volume'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
name|'quobyte_volume'
op|'='
string|"'192.168.1.1/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'quobyte_volume'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
nl|'\n'
name|'mock_mount_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'quobyte_volume'
op|','
nl|'\n'
name|'export_mnt_base'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
name|'mock_validate_volume'
op|'.'
name|'assert_called_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'validate_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'umount_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_libvirt_quobyte_driver_umount
name|'def'
name|'test_libvirt_quobyte_driver_umount'
op|'('
name|'self'
op|','
name|'mock_is_mounted'
op|','
nl|'\n'
name|'mock_umount_volume'
op|','
nl|'\n'
name|'mock_validate_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
name|'quobyte_volume'
op|'='
string|"'192.168.1.1/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'quobyte_volume'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'mock_validate_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
name|'mock_umount_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'validate_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'umount_volume'"
op|')'
newline|'\n'
DECL|member|test_libvirt_quobyte_driver_already_mounted
name|'def'
name|'test_libvirt_quobyte_driver_already_mounted'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_umount_volume'
op|','
nl|'\n'
name|'mock_validate_volume'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
name|'quobyte_volume'
op|'='
string|"'192.168.1.1/volume-00001'"
newline|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'quobyte_volume'
op|')'
op|')'
newline|'\n'
name|'file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'export_mnt_base'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertFileTypeEquals'
op|'('
name|'tree'
op|','
name|'file_path'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
nl|'\n'
op|'('
string|"'findmnt'"
op|','
string|"'--target'"
op|','
name|'export_mnt_base'
op|','
nl|'\n'
string|"'--source'"
op|','
string|'"quobyte@"'
op|'+'
name|'quobyte_volume'
op|')'
op|','
nl|'\n'
op|'('
string|"'findmnt'"
op|','
string|"'--target'"
op|','
name|'export_mnt_base'
op|','
nl|'\n'
string|"'--source'"
op|','
string|'"quobyte@"'
op|'+'
name|'quobyte_volume'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
name|'mock_umount_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
name|'mock_validate_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'validate_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
string|"'mount_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'libvirt_utils'
op|','
string|"'is_mounted'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|member|test_libvirt_quobyte_driver_qcow2
name|'def'
name|'test_libvirt_quobyte_driver_qcow2'
op|'('
name|'self'
op|','
name|'mock_is_mounted'
op|','
nl|'\n'
name|'mock_mount_volume'
op|','
nl|'\n'
name|'mock_validate_volume'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
name|'name'
op|'='
string|"'volume-00001'"
newline|'\n'
name|'image_format'
op|'='
string|"'qcow2'"
newline|'\n'
name|'quobyte_volume'
op|'='
string|"'192.168.1.1/volume-00001'"
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'format'"
op|':'
name|'image_format'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'export_mnt_base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mnt_base'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'get_hash_str'
op|'('
name|'quobyte_volume'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'libvirt_driver'
op|'.'
name|'get_config'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'conf'
op|'.'
name|'format_dom'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./driver'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'mock_mount_volume'
op|'.'
nl|'\n'
name|'assert_called_once_with'
op|'('
string|"'192.168.1.1/volume-00001'"
op|','
nl|'\n'
name|'export_mnt_base'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|')'
op|')'
newline|'\n'
name|'mock_validate_volume'
op|'.'
name|'assert_called_with'
op|'('
name|'export_mnt_base'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'disconnect_volume'
op|'('
name|'connection_info'
op|','
string|'"vde"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_quobyte_driver_mount_non_quobyte_volume
dedent|''
name|'def'
name|'test_libvirt_quobyte_driver_mount_non_quobyte_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
op|'{'
string|"'export'"
op|':'
name|'export_string'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|exe_side_effect
name|'def'
name|'exe_side_effect'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'cmd'
op|'=='
name|'mock'
op|'.'
name|'ANY'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'quobyte'
op|','
nl|'\n'
string|"'validate_volume'"
op|')'
name|'as'
name|'mock_execute'
op|':'
newline|'\n'
indent|'            '
name|'mock_execute'
op|'.'
name|'side_effect'
op|'='
name|'exe_side_effect'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'connect_volume'
op|','
nl|'\n'
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_quobyte_driver_normalize_url_with_protocol
dedent|''
dedent|''
name|'def'
name|'test_libvirt_quobyte_driver_normalize_url_with_protocol'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'quobyte://192.168.1.1/volume-00001'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'libvirt_driver'
op|'.'
name|'_normalize_url'
op|'('
name|'export_string'
op|')'
op|','
nl|'\n'
string|'"192.168.1.1/volume-00001"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_libvirt_quobyte_driver_normalize_url_without_protocol
dedent|''
name|'def'
name|'test_libvirt_quobyte_driver_normalize_url_without_protocol'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mnt_base'
op|'='
string|"'/mnt'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'quobyte_mount_point_base'
op|'='
name|'mnt_base'
op|','
name|'group'
op|'='
string|"'libvirt'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'='
name|'volume'
op|'.'
name|'LibvirtQuobyteVolumeDriver'
op|'('
name|'self'
op|'.'
name|'fake_conn'
op|')'
newline|'\n'
name|'export_string'
op|'='
string|"'192.168.1.1/volume-00001'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'libvirt_driver'
op|'.'
name|'_normalize_url'
op|'('
name|'export_string'
op|')'
op|','
nl|'\n'
string|'"192.168.1.1/volume-00001"'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
