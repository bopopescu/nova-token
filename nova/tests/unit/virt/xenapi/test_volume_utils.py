begin_unit
comment|'# Copyright 2013 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'stubs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volume_utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SROps
name|'class'
name|'SROps'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
DECL|member|test_find_sr_valid_uuid
indent|'    '
name|'def'
name|'test_find_sr_valid_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'return_value'
op|'='
string|"'sr_ref'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'find_sr_by_uuid'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'sr_uuid'"
op|')'
op|','
nl|'\n'
string|"'sr_ref'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_sr_invalid_uuid
dedent|''
name|'def'
name|'test_find_sr_invalid_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|UUIDException
indent|'        '
name|'class'
name|'UUIDException'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|variable|details
indent|'            '
name|'details'
op|'='
op|'['
string|'"UUID_INVALID"'
op|','
string|'""'
op|','
string|'""'
op|','
string|'""'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'='
name|'UUIDException'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'side_effect'
op|'='
name|'UUIDException'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
nl|'\n'
name|'volume_utils'
op|'.'
name|'find_sr_by_uuid'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'sr_uuid'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_sr_from_vdi
dedent|''
name|'def'
name|'test_find_sr_from_vdi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vdi_ref'
op|'='
string|"'fake-ref'"
newline|'\n'
nl|'\n'
DECL|function|fake_call_xenapi
name|'def'
name|'fake_call_xenapi'
op|'('
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
string|"'VDI.get_SR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'vdi_ref'
op|')'
newline|'\n'
name|'return'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'side_effect'
op|'='
name|'fake_call_xenapi'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'find_sr_from_vdi'
op|'('
name|'session'
op|','
name|'vdi_ref'
op|')'
op|','
nl|'\n'
name|'vdi_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_sr_from_vdi_exception
dedent|''
name|'def'
name|'test_find_sr_from_vdi_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vdi_ref'
op|'='
string|"'fake-ref'"
newline|'\n'
nl|'\n'
DECL|class|FakeException
name|'class'
name|'FakeException'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'='
name|'FakeException'
newline|'\n'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'side_effect'
op|'='
name|'FakeException'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'volume_utils'
op|'.'
name|'find_sr_from_vdi'
op|','
name|'session'
op|','
name|'vdi_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ISCSIParametersTestCase
dedent|''
dedent|''
name|'class'
name|'ISCSIParametersTestCase'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
DECL|member|test_target_host
indent|'    '
name|'def'
name|'test_target_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_host'
op|'('
string|"'host:port'"
op|')'
op|','
nl|'\n'
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_host'
op|'('
string|"'host'"
op|')'
op|','
nl|'\n'
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
comment|'# There is no default value'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_host'
op|'('
string|"':port'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_host'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_target_port
dedent|''
name|'def'
name|'test_target_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_port'
op|'('
string|"'host:port'"
op|')'
op|','
nl|'\n'
string|"'port'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'_get_target_port'
op|'('
string|"'host'"
op|')'
op|','
nl|'\n'
string|"'3260'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IntroduceTestCase
dedent|''
dedent|''
name|'class'
name|'IntroduceTestCase'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume_utils'
op|','
string|"'_get_vdi_ref'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'sleep'"
op|')'
newline|'\n'
DECL|member|test_introduce_vdi_retry
name|'def'
name|'test_introduce_vdi_retry'
op|'('
name|'self'
op|','
name|'mock_sleep'
op|','
name|'mock_get_vdi_ref'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_vdi_ref
indent|'        '
name|'def'
name|'fake_get_vdi_ref'
op|'('
name|'session'
op|','
name|'sr_ref'
op|','
name|'vdi_uuid'
op|','
name|'target_lun'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_get_vdi_ref'
op|'.'
name|'call_count'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'fake_get_vdi_ref'
op|'.'
name|'call_count'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'vdi_ref'"
newline|'\n'
nl|'\n'
DECL|function|fake_call_xenapi
dedent|''
dedent|''
name|'def'
name|'fake_call_xenapi'
op|'('
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SR.scan'"
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'elif'
name|'method'
op|'=='
string|"'VDI.get_record'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'managed'"
op|':'
string|"'true'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'side_effect'
op|'='
name|'fake_call_xenapi'
newline|'\n'
nl|'\n'
name|'mock_get_vdi_ref'
op|'.'
name|'side_effect'
op|'='
name|'fake_get_vdi_ref'
newline|'\n'
name|'fake_get_vdi_ref'
op|'.'
name|'call_count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume_utils'
op|'.'
name|'introduce_vdi'
op|'('
name|'session'
op|','
string|"'sr_ref'"
op|')'
op|','
nl|'\n'
string|"'vdi_ref'"
op|')'
newline|'\n'
name|'mock_sleep'
op|'.'
name|'assert_called_once_with'
op|'('
number|'20'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volume_utils'
op|','
string|"'_get_vdi_ref'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'sleep'"
op|')'
newline|'\n'
DECL|member|test_introduce_vdi_exception
name|'def'
name|'test_introduce_vdi_exception'
op|'('
name|'self'
op|','
name|'mock_sleep'
op|','
name|'mock_get_vdi_ref'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_xenapi
indent|'        '
name|'def'
name|'fake_call_xenapi'
op|'('
name|'method'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SR.scan'"
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'elif'
name|'method'
op|'=='
string|"'VDI.get_record'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'managed'"
op|':'
string|"'true'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'call_xenapi'
op|'.'
name|'side_effect'
op|'='
name|'fake_call_xenapi'
newline|'\n'
name|'mock_get_vdi_ref'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'volume_utils'
op|'.'
name|'introduce_vdi'
op|','
name|'session'
op|','
string|"'sr_ref'"
op|')'
newline|'\n'
name|'mock_sleep'
op|'.'
name|'assert_called_once_with'
op|'('
number|'20'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ParseVolumeInfoTestCase
dedent|''
dedent|''
name|'class'
name|'ParseVolumeInfoTestCase'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
DECL|member|test_mountpoint_to_number
indent|'    '
name|'def'
name|'test_mountpoint_to_number'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cases'
op|'='
op|'{'
nl|'\n'
string|"'sda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'sdp'"
op|':'
number|'15'
op|','
nl|'\n'
string|"'hda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hdp'"
op|':'
number|'15'
op|','
nl|'\n'
string|"'vda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'xvda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'0'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'10'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'vdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'sdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'hdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'xvdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'input'
op|','
name|'expected'
op|')'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'cases'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'actual'
op|'='
name|'volume_utils'
op|'.'
name|'_mountpoint_to_number'
op|'('
name|'input'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expected'
op|','
nl|'\n'
string|"'%s yielded %s, not %s'"
op|'%'
op|'('
name|'input'
op|','
name|'actual'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|_make_connection_info
name|'def'
name|'_make_connection_info'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_iqn'
op|'='
string|"'iqn.2010-10.org.openstack:volume-00000001'"
newline|'\n'
name|'return'
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
name|'target_iqn'
op|','
nl|'\n'
string|"'target_portal'"
op|':'
string|"'127.0.0.1:3260,fake'"
op|','
nl|'\n'
string|"'target_lun'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auth_method'"
op|':'
string|"'CHAP'"
op|','
nl|'\n'
string|"'auth_username'"
op|':'
string|"'username'"
op|','
nl|'\n'
string|"'auth_password'"
op|':'
string|"'verybadpass'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_parse_volume_info_parsing_auth_details
dedent|''
name|'def'
name|'test_parse_volume_info_parsing_auth_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn_info'
op|'='
name|'self'
op|'.'
name|'_make_connection_info'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'volume_utils'
op|'.'
name|'_parse_volume_info'
op|'('
name|'conn_info'
op|'['
string|"'data'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'username'"
op|','
name|'result'
op|'['
string|"'chapuser'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'verybadpass'"
op|','
name|'result'
op|'['
string|"'chappassword'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_volume_info_missing_details
dedent|''
name|'def'
name|'test_parse_volume_info_missing_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that a StorageError is raised if volume_id, target_host, or'
nl|'\n'
comment|'# target_ign is missing from connection_data. Also ensures that the'
nl|'\n'
comment|'# auth_password value is not present in the StorageError message.'
nl|'\n'
indent|'        '
name|'for'
name|'data_key_to_null'
name|'in'
op|'('
string|"'volume_id'"
op|','
string|"'target_portal'"
op|','
string|"'target_iqn'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn_info'
op|'='
name|'self'
op|'.'
name|'_make_connection_info'
op|'('
op|')'
newline|'\n'
name|'conn_info'
op|'['
string|"'data'"
op|']'
op|'['
name|'data_key_to_null'
op|']'
op|'='
name|'None'
newline|'\n'
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'volume_utils'
op|'.'
name|'_parse_volume_info'
op|','
nl|'\n'
name|'conn_info'
op|'['
string|"'data'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'verybadpass'"
op|','
name|'six'
op|'.'
name|'text_type'
op|'('
name|'ex'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_number_raise_exception_on_wrong_mountpoint
dedent|''
dedent|''
name|'def'
name|'test_get_device_number_raise_exception_on_wrong_mountpoint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'volume_utils'
op|'.'
name|'get_device_number'
op|','
nl|'\n'
string|"'dev/sd'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FindVBDTestCase
dedent|''
dedent|''
name|'class'
name|'FindVBDTestCase'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
DECL|member|test_find_vbd_by_number_works
indent|'    '
name|'def'
name|'test_find_vbd_by_number_works'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
string|'"a"'
op|','
string|'"b"'
op|']'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'return_value'
op|'='
string|'"1"'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'volume_utils'
op|'.'
name|'find_vbd_by_number'
op|'('
name|'session'
op|','
string|'"vm_ref"'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"a"'
op|','
name|'result'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"vm_ref"'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"a"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_vbd_by_number_no_matches
dedent|''
name|'def'
name|'test_find_vbd_by_number_no_matches'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
string|'"a"'
op|','
string|'"b"'
op|']'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'return_value'
op|'='
string|'"3"'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'volume_utils'
op|'.'
name|'find_vbd_by_number'
op|'('
name|'session'
op|','
string|'"vm_ref"'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"vm_ref"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|'"a"'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
string|'"b"'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
nl|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_vbd_by_number_no_vbds
dedent|''
name|'def'
name|'test_find_vbd_by_number_no_vbds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'volume_utils'
op|'.'
name|'find_vbd_by_number'
op|'('
name|'session'
op|','
string|'"vm_ref"'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"vm_ref"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_vbd_by_number_ignores_exception
dedent|''
name|'def'
name|'test_find_vbd_by_number_ignores_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'XenAPI'
op|'.'
name|'Failure'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
string|'"a"'
op|']'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'side_effect'
op|'='
name|'test'
op|'.'
name|'TestingException'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'volume_utils'
op|'.'
name|'find_vbd_by_number'
op|'('
name|'session'
op|','
string|'"vm_ref"'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"vm_ref"'
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'assert_called_once_with'
op|'('
string|'"a"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BootedFromVolumeTestCase
dedent|''
dedent|''
name|'class'
name|'BootedFromVolumeTestCase'
op|'('
name|'stubs'
op|'.'
name|'XenAPITestBaseNoDB'
op|')'
op|':'
newline|'\n'
DECL|member|test_booted_from_volume
indent|'    '
name|'def'
name|'test_booted_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'vbd_ref'"
op|']'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'return_value'
op|'='
string|"'0'"
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_other_config'
op|'.'
name|'return_value'
op|'='
op|'{'
string|"'osvol'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'booted_from_volume'
op|'='
name|'volume_utils'
op|'.'
name|'is_booted_from_volume'
op|'('
name|'session'
op|','
nl|'\n'
string|"'vm_ref'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'booted_from_volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_not_booted_from_volume
dedent|''
name|'def'
name|'test_not_booted_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'VM'
op|'.'
name|'get_VBDs'
op|'.'
name|'return_value'
op|'='
op|'['
string|"'vbd_ref'"
op|']'
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_userdevice'
op|'.'
name|'return_value'
op|'='
string|"'0'"
newline|'\n'
name|'session'
op|'.'
name|'VBD'
op|'.'
name|'get_other_config'
op|'.'
name|'return_value'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'booted_from_volume'
op|'='
name|'volume_utils'
op|'.'
name|'is_booted_from_volume'
op|'('
name|'session'
op|','
nl|'\n'
string|"'vm_ref'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'booted_from_volume'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
