begin_unit
comment|'# Copyright (c) 2016 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'imp'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
op|'.'
name|'client'
name|'import'
name|'session'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# both XenAPI and XenAPIPlugin may not exist'
nl|'\n'
comment|'# in unit test environment.'
nl|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'XenAPI'"
op|']'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'XenAPIPlugin'"
op|']'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PluginTestBase
name|'class'
name|'PluginTestBase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PluginTestBase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'apply_session_helpers'
op|'('
name|'self'
op|'.'
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_patch_object
dedent|''
name|'def'
name|'mock_patch_object'
op|'('
name|'self'
op|','
name|'target'
op|','
name|'attribute'
op|','
name|'return_val'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|"# utilility function to mock object's attribute"
nl|'\n'
indent|'        '
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'target'
op|','
name|'attribute'
op|','
name|'return_value'
op|'='
name|'return_val'
op|')'
newline|'\n'
name|'mock_one'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'return'
name|'mock_one'
newline|'\n'
nl|'\n'
DECL|member|_get_plugin_path
dedent|''
name|'def'
name|'_get_plugin_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'current_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'__file__'
op|')'
newline|'\n'
name|'rel_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'current_path'
op|','
nl|'\n'
string|'"../../../../../../../plugins/xenserver/xenapi/etc/xapi.d/plugins"'
op|')'
newline|'\n'
name|'plugin_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'rel_path'
op|')'
newline|'\n'
name|'return'
name|'plugin_path'
newline|'\n'
nl|'\n'
DECL|member|load_plugin
dedent|''
name|'def'
name|'load_plugin'
op|'('
name|'self'
op|','
name|'file_name'
op|')'
op|':'
newline|'\n'
comment|'# XAPI plugins run in a py24 environment and may be not compatible with'
nl|'\n'
comment|"# py34's syntax. In order to prevent unit test scanning the source file"
nl|'\n'
comment|'# under py34 environment, the plugins will be imported with this'
nl|'\n'
comment|'# function at run time.'
nl|'\n'
nl|'\n'
indent|'        '
name|'plugin_path'
op|'='
name|'self'
op|'.'
name|'_get_plugin_path'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# add plugin path into search path.'
nl|'\n'
name|'if'
name|'plugin_path'
name|'not'
name|'in'
name|'sys'
op|'.'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'plugin_path'
op|')'
newline|'\n'
nl|'\n'
comment|'# be sure not to create c files next to the plugins'
nl|'\n'
dedent|''
name|'sys'
op|'.'
name|'dont_write_bytecode'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'name'
op|'='
name|'file_name'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'plugin_path'
op|','
name|'file_name'
op|')'
newline|'\n'
name|'return'
name|'imp'
op|'.'
name|'load_source'
op|'('
name|'name'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
