begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# Copyright (c) 2012 VMware, Inc.'
nl|'\n'
comment|'# Copyright (c) 2011 Citrix Systems, Inc.'
nl|'\n'
comment|'# Copyright 2011 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest suite for VMwareAPI.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'exceptions'
name|'as'
name|'vexc'
newline|'\n'
name|'from'
name|'oslo_vmware'
op|'.'
name|'objects'
name|'import'
name|'datastore'
name|'as'
name|'ds_obj'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'pbm'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'vim_util'
name|'as'
name|'oslo_vim_util'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_instance'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'test_flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
name|'as'
name|'vmwareapi_fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'stubs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
name|'as'
name|'v_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'error_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'imagecache'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vif'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vim_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vm_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'volumeops'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'remove_unused_original_minimum_age_seconds'"
op|','
nl|'\n'
string|"'nova.virt.imagecache'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|fake_vm_ref
name|'class'
name|'fake_vm_ref'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'value'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'_type'
op|'='
string|"'VirtualMachine'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|fake_service_content
dedent|''
dedent|''
name|'class'
name|'fake_service_content'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ServiceContent'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ServiceContent'
op|'.'
name|'fake'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_create_session
dedent|''
dedent|''
name|'def'
name|'_fake_create_session'
op|'('
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'session'
op|'.'
name|'userName'
op|'='
string|"'fake_username'"
newline|'\n'
name|'session'
op|'.'
name|'_pbm_wsdl_loc'
op|'='
name|'None'
newline|'\n'
name|'session'
op|'.'
name|'_pbm'
op|'='
name|'None'
newline|'\n'
name|'inst'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareDriverStartupTestCase
dedent|''
name|'class'
name|'VMwareDriverStartupTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_start_driver_with_flags
indent|'    '
name|'def'
name|'_start_driver_with_flags'
op|'('
name|'self'
op|','
name|'expected_exception_type'
op|','
name|'startup_flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
op|'**'
name|'startup_flags'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.virt.vmwareapi.driver.VMwareAPISession.__init__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'e'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'Exception'
op|','
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
name|'None'
op|')'
comment|'# noqa'
newline|'\n'
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'type'
op|'('
name|'e'
op|')'
op|','
name|'expected_exception_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_driver_no_user
dedent|''
dedent|''
name|'def'
name|'test_start_driver_no_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_start_driver_with_flags'
op|'('
nl|'\n'
name|'Exception'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host_ip'
op|'='
string|"'ip'"
op|','
name|'host_password'
op|'='
string|"'password'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_driver_no_host
dedent|''
name|'def'
name|'test_start_driver_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_start_driver_with_flags'
op|'('
nl|'\n'
name|'Exception'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host_username'
op|'='
string|"'username'"
op|','
name|'host_password'
op|'='
string|"'password'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_driver_no_password
dedent|''
name|'def'
name|'test_start_driver_no_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_start_driver_with_flags'
op|'('
nl|'\n'
name|'Exception'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host_ip'
op|'='
string|"'ip'"
op|','
name|'host_username'
op|'='
string|"'username'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_driver_with_user_host_password
dedent|''
name|'def'
name|'test_start_driver_with_user_host_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Getting the InvalidInput exception signifies that no exception'
nl|'\n'
comment|'# is raised regarding missing user/password/host'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_start_driver_with_flags'
op|'('
nl|'\n'
name|'nova'
op|'.'
name|'exception'
op|'.'
name|'InvalidInput'
op|','
nl|'\n'
name|'dict'
op|'('
name|'host_ip'
op|'='
string|"'ip'"
op|','
name|'host_password'
op|'='
string|"'password'"
op|','
nl|'\n'
name|'host_username'
op|'='
string|'"user"'
op|','
name|'datastore_regex'
op|'='
string|'"bad(regex"'
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareSessionTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareSessionTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
DECL|variable|return_value
name|'return_value'
op|'='
name|'False'
op|')'
newline|'\n'
DECL|member|test_call_method
name|'def'
name|'test_call_method'
op|'('
name|'self'
op|','
name|'mock_is_vim'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'invoke_api'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'fake_create'
op|','
name|'fake_invoke'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'_vim'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'module'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'_call_method'
op|'('
name|'module'
op|','
string|"'fira'"
op|')'
newline|'\n'
name|'fake_invoke'
op|'.'
name|'assert_called_once_with'
op|'('
name|'module'
op|','
string|"'fira'"
op|','
name|'session'
op|'.'
name|'_vim'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_call_method_vim
name|'def'
name|'test_call_method_vim'
op|'('
name|'self'
op|','
name|'mock_is_vim'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'invoke_api'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'fake_create'
op|','
name|'fake_invoke'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'module'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'_call_method'
op|'('
name|'module'
op|','
string|"'fira'"
op|')'
newline|'\n'
name|'fake_invoke'
op|'.'
name|'assert_called_once_with'
op|'('
name|'module'
op|','
string|"'fira'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareAPIVMTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'VMwareAPIVMTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Vmware API connection calls."""'
newline|'\n'
nl|'\n'
DECL|variable|REQUIRES_LOCKING
name|'REQUIRES_LOCKING'
op|'='
name|'True'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
string|"'_register_openstack_extension'"
op|')'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
name|'mock_register'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'vm_refs_cache_reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cluster_name'
op|'='
string|"'test_cluster'"
op|','
nl|'\n'
name|'host_ip'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'host_username'
op|'='
string|"'test_username'"
op|','
nl|'\n'
name|'host_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'api_retry_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'use_linked_clone'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vnc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'image_cache_subdirectory_name'
op|'='
string|"'vmware_base'"
op|','
nl|'\n'
name|'my_ip'
op|'='
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'set_stubs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|'('
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_exception_vars'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_nodename'
newline|'\n'
name|'self'
op|'.'
name|'ds'
op|'='
string|"'ds1'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'vim'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): none of the network plugging code is actually'
nl|'\n'
comment|'#             being tested'
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|'='
name|'utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
name|'image_ref'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'get_valid_image_id'
op|'('
op|')'
newline|'\n'
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
op|'='
name|'glance'
op|'.'
name|'get_remote_image_service'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'image_ref'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'image_ref'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
string|"'vmdk'"
op|','
nl|'\n'
string|"'size'"
op|':'
name|'int'
op|'('
name|'metadata'
op|'['
string|"'size'"
op|']'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|'='
name|'self'
op|'.'
name|'image'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vnc_host'
op|'='
string|"'ha-host'"
newline|'\n'
name|'self'
op|'.'
name|'instance_without_compute'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'None'
op|','
nl|'\n'
op|'**'
op|'{'
string|"'node'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'building'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'display_description'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'mac_addresses'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'de:ad:be:ef:be:ef'"
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'8192'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'self'
op|'.'
name|'image'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'task_state'"
op|':'
nl|'\n'
string|"'scheduling'"
op|','
nl|'\n'
string|"'reservation_id'"
op|':'
string|"'r-3t8muvr0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'['
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'cleanup'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_legacy_block_device_info
dedent|''
name|'def'
name|'test_legacy_block_device_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'need_legacy_block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_ip_addr
dedent|''
name|'def'
name|'test_get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'test_url'"
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_no_session
dedent|''
name|'def'
name|'test_init_host_with_no_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'init_host'
op|'('
string|"'fake_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_create_session'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'init_host'
op|'('
string|'"fake_host"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"init_host raised: %s"'
op|'%'
name|'ex'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_exception_vars
dedent|''
dedent|''
name|'def'
name|'_set_exception_vars'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'wait_task'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_wait_for_task'
newline|'\n'
name|'self'
op|'.'
name|'call_method'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
newline|'\n'
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_host
dedent|''
name|'def'
name|'test_cleanup_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'init_host'
op|'('
string|'"fake_host"'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'cleanup_host'
op|'('
string|'"fake_host"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"cleanup_host raised: %s"'
op|'%'
name|'ex'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_driver_capabilities
dedent|''
dedent|''
name|'def'
name|'test_driver_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'capabilities'
op|'['
string|"'has_imagecache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'capabilities'
op|'['
string|"'supports_recreate'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'capabilities'
op|'['
string|"'supports_migrate_to_same_host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pbm'
op|','
string|"'get_profile_id_by_name'"
op|')'
newline|'\n'
DECL|member|test_configuration_pbm
name|'def'
name|'test_configuration_pbm'
op|'('
name|'self'
op|','
name|'get_profile_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_profile_mock'
op|'.'
name|'return_value'
op|'='
string|"'fake-profile'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'pbm_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'pbm_default_policy'
op|'='
string|"'fake-policy'"
op|','
nl|'\n'
name|'pbm_wsdl_location'
op|'='
string|"'fake-location'"
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_validate_configuration'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'pbm'
op|','
string|"'get_profile_id_by_name'"
op|')'
newline|'\n'
DECL|member|test_configuration_pbm_bad_default
name|'def'
name|'test_configuration_pbm_bad_default'
op|'('
name|'self'
op|','
name|'get_profile_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_profile_mock'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'pbm_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'pbm_wsdl_location'
op|'='
string|"'fake-location'"
op|','
nl|'\n'
name|'pbm_default_policy'
op|'='
string|"'fake-policy'"
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'PbmDefaultPolicyDoesNotExist'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_validate_configuration'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_retries
dedent|''
name|'def'
name|'test_login_retries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'attempts'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'login_session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|'('
op|')'
op|'.'
name|'_login'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_login
name|'def'
name|'_fake_login'
op|'('
name|'_self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'attempts'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'attempts'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'vexc'
op|'.'
name|'VimConnectionException'
op|'('
string|"'Here is my fake exception'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'login_session'
newline|'\n'
nl|'\n'
DECL|function|_fake_check_session
dedent|''
name|'def'
name|'_fake_check_session'
op|'('
name|'_self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|','
string|"'_login'"
op|','
name|'_fake_login'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|','
string|"'_check_session'"
op|','
nl|'\n'
name|'_fake_check_session'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'greenthread'
op|','
string|"'sleep'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'attempts'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_instance_type_by_name
dedent|''
name|'def'
name|'_get_instance_type_by_name'
op|'('
name|'self'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'instance_type'
name|'in'
name|'test_flavors'
op|'.'
name|'DEFAULT_FLAVOR_OBJS'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_type'
op|'.'
name|'name'
op|'=='
name|'type'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'instance_type'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'type'
op|'=='
string|"'m1.micro'"
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'memory_mb'"
op|':'
number|'128'
op|','
string|"'root_gb'"
op|':'
number|'0'
op|','
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'m1.micro'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
string|"'vcpus'"
op|':'
number|'1'
op|','
string|"'extra_specs'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
string|"'rxtx_factor'"
op|':'
number|'1.0'
op|','
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'1'"
op|','
string|"'vcpu_weight'"
op|':'
name|'None'
op|','
string|"'id'"
op|':'
number|'2'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'set_image_ref'
op|'='
name|'True'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'None'
op|','
name|'instance_type'
op|'='
string|"'m1.large'"
op|','
nl|'\n'
name|'ephemeral'
op|'='
name|'None'
op|','
name|'instance_type_updates'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'uuid'
op|':'
newline|'\n'
indent|'            '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'type_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_type_by_name'
op|'('
name|'instance_type'
op|')'
newline|'\n'
name|'if'
name|'instance_type_updates'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'type_data'
op|'.'
name|'update'
op|'('
name|'instance_type_updates'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ephemeral'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
name|'ephemeral'
newline|'\n'
dedent|''
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|'"fake_kernel_uuid"'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|'"fake_ramdisk_uuid"'
op|','
nl|'\n'
string|"'mac_address'"
op|':'
string|'"de:ad:be:ef:be:ef"'
op|','
nl|'\n'
string|"'flavor'"
op|':'
name|'objects'
op|'.'
name|'Flavor'
op|'('
op|'**'
name|'self'
op|'.'
name|'type_data'
op|')'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'node'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'root_gb'"
op|']'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'ephemeral_gb'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|"'swap'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'swap'"
op|']'
op|','
nl|'\n'
string|"'expected_attrs'"
op|':'
op|'['
string|"'system_metadata'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'set_image_ref'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'image_ref'"
op|']'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'instance_node'
op|'='
name|'node'
newline|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_vm
dedent|''
name|'def'
name|'_create_vm'
op|'('
name|'self'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'num_instances'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'m1.large'"
op|','
name|'powered_on'
op|'='
name|'True'
op|','
nl|'\n'
name|'ephemeral'
op|'='
name|'None'
op|','
name|'bdi'
op|'='
name|'None'
op|','
name|'instance_type_updates'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create and spawn the VM."""'
newline|'\n'
name|'if'
name|'not'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'node'
op|'='
name|'node'
op|','
name|'uuid'
op|'='
name|'uuid'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_type'
op|','
nl|'\n'
name|'ephemeral'
op|'='
name|'ephemeral'
op|','
nl|'\n'
name|'instance_type_updates'
op|'='
name|'instance_type_updates'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_record'
op|'('
name|'num_instances'
op|'='
name|'num_instances'
op|','
nl|'\n'
name|'powered_on'
op|'='
name|'powered_on'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vm_record
dedent|''
name|'def'
name|'_get_vm_record'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get record for VM'
nl|'\n'
indent|'        '
name|'vms'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
newline|'\n'
name|'for'
name|'vm'
name|'in'
name|'vms'
op|'.'
name|'objects'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'vm'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
name|'self'
op|'.'
name|'uuid'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vm'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unable to find VM backing!'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_info
dedent|''
name|'def'
name|'_get_info'
op|'('
name|'self'
op|','
name|'uuid'
op|'='
name|'None'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuid'
name|'if'
name|'uuid'
name|'else'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
name|'node'
op|'='
name|'node'
name|'if'
name|'node'
name|'else'
name|'self'
op|'.'
name|'instance_node'
newline|'\n'
name|'name'
op|'='
name|'name'
name|'if'
name|'node'
name|'else'
string|"'1'"
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'**'
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'node'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_vm_record
dedent|''
name|'def'
name|'_check_vm_record'
op|'('
name|'self'
op|','
name|'num_instances'
op|'='
number|'1'
op|','
name|'powered_on'
op|'='
name|'True'
op|','
name|'uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the spawned VM\'s properties correspond to the instance in\n        the db.\n        """'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'if'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
name|'num_instances'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get Nova record for VM'
nl|'\n'
dedent|''
name|'vm_info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that m1.large above turned into the right thing.'
nl|'\n'
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'vcpus'
op|'='
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_info'
op|'.'
name|'max_mem_kb'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_info'
op|'.'
name|'mem_kb'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.instanceUuid"'
op|')'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.numCpu"'
op|')'
op|','
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.memorySizeMB"'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'vm'
op|'.'
name|'get'
op|'('
string|'"config.hardware.device"'
op|')'
op|'.'
name|'VirtualDevice'
op|'['
number|'2'
op|']'
op|'.'
name|'obj_name'
op|','
nl|'\n'
string|'"ns0:VirtualE1000"'
op|')'
newline|'\n'
name|'if'
name|'powered_on'
op|':'
newline|'\n'
comment|'# Check that the VM is running according to Nova'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_info'
op|'.'
name|'state'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to vSphere API.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'poweredOn'"
op|','
name|'vm'
op|'.'
name|'get'
op|'('
string|'"runtime.powerState"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Check that the VM is not running according to Nova'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'vm_info'
op|'.'
name|'state'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is not running according to vSphere API.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'poweredOff'"
op|','
name|'vm'
op|'.'
name|'get'
op|'('
string|'"runtime.powerState"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'found_vm_uuid'
op|'='
name|'False'
newline|'\n'
name|'found_iface_id'
op|'='
name|'False'
newline|'\n'
name|'extras'
op|'='
name|'vm'
op|'.'
name|'get'
op|'('
string|'"config.extraConfig"'
op|')'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'extras'
op|'.'
name|'OptionValue'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'c'
op|'.'
name|'key'
op|'=='
string|'"nvp.vm-uuid"'
name|'and'
name|'c'
op|'.'
name|'value'
op|'=='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found_vm_uuid'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'c'
op|'.'
name|'key'
op|'=='
string|'"nvp.iface-id.0"'
name|'and'
name|'c'
op|'.'
name|'value'
op|'=='
string|'"vif-xxx-yyy-zzz"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found_iface_id'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_vm_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_iface_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_vm_info
dedent|''
name|'def'
name|'_check_vm_info'
op|'('
name|'self'
op|','
name|'info'
op|','
name|'pwr_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the get_info returned values correspond to the instance\n        object in the db.\n        """'
newline|'\n'
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'.'
name|'state'
op|','
name|'pwr_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'.'
name|'max_mem_kb'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'.'
name|'mem_kb'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'.'
name|'num_cpu'
op|','
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_exists
dedent|''
name|'def'
name|'test_instance_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'instance_exists'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
op|')'
newline|'\n'
name|'invalid_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'None'
op|','
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'bar'"
op|','
nl|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'instance_exists'
op|'('
name|'invalid_instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_1
dedent|''
name|'def'
name|'test_list_instances_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids
dedent|''
name|'def'
name|'test_list_instance_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'uuids'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids_invalid_uuid
dedent|''
name|'def'
name|'test_list_instance_uuids_invalid_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'uuid'
op|'='
string|"'fake_id'"
op|')'
newline|'\n'
name|'uuids'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cached_files_exist
dedent|''
name|'def'
name|'_cached_files_exist'
op|'('
name|'self'
op|','
name|'exists'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cache'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.vmdk'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
name|'if'
name|'exists'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'cache'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'cache'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_instance_dir_disk_created
name|'def'
name|'test_instance_dir_disk_created'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test image file is cached when even when use_linked_clone\n            is False\n        """'
newline|'\n'
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
string|"'%s.vmdk'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_cache_dir_disk_created
name|'def'
name|'test_cache_dir_disk_created'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test image disk is cached when use_linked_clone is True."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
nl|'\n'
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
number|'1'
op|'*'
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DISK_TYPE_SPARSE'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.vmdk'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
name|'root'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.80.vmdk'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'root'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iso_disk_type_created
dedent|''
name|'def'
name|'_iso_disk_type_created'
op|'('
name|'self'
op|','
name|'instance_type'
op|'='
string|"'m1.large'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance_type'
op|'='
name|'instance_type'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.iso'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_type_created
dedent|''
name|'def'
name|'test_iso_disk_type_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iso_disk_type_created'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
string|"'%s.vmdk'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_type_created_with_root_gb_0
dedent|''
name|'def'
name|'test_iso_disk_type_created_with_root_gb_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iso_disk_type_created'
op|'('
name|'instance_type'
op|'='
string|"'m1.micro'"
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
string|"'%s.vmdk'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_cdrom_attach
dedent|''
name|'def'
name|'test_iso_disk_cdrom_attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'iso_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.iso'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'str'
op|'('
name|'iso_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_iso_disk_cdrom_attach_with_config_drive
name|'def'
name|'test_iso_disk_cdrom_attach_with_config_drive'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
number|'80'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
nl|'\n'
name|'file_type'
op|'='
string|"'iso'"
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
name|'iso_path'
op|'='
op|'['
nl|'\n'
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.iso'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
op|','
nl|'\n'
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'fake-config-drive'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'iso_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|fake_create_config_drive
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
name|'uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'fake-config-drive'"
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
dedent|''
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'str'
op|'('
name|'iso_path'
op|'['
name|'self'
op|'.'
name|'iso_index'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'iso_index'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'iso_index'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ephemeral_disk_attach
dedent|''
name|'def'
name|'test_ephemeral_disk_attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'ephemeral'
op|'='
number|'50'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'ephemeral_0.vmdk'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ephemeral_disk_attach_from_bdi
dedent|''
name|'def'
name|'test_ephemeral_disk_attach_from_bdi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ephemerals'
op|'='
op|'['
op|'{'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
name|'constants'
op|'.'
name|'DEFAULT_ADAPTER_TYPE'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'25'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
name|'constants'
op|'.'
name|'DEFAULT_ADAPTER_TYPE'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'25'
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'ephemerals'"
op|':'
name|'ephemerals'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'bdi'
op|'='
name|'bdi'
op|','
name|'ephemeral'
op|'='
number|'50'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'ephemeral_0.vmdk'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'ephemeral_1.vmdk'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ephemeral_disk_attach_from_bdii_with_no_ephs
dedent|''
name|'def'
name|'test_ephemeral_disk_attach_from_bdii_with_no_ephs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdi'
op|'='
op|'{'
string|"'ephemerals'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'bdi'
op|'='
name|'bdi'
op|','
name|'ephemeral'
op|'='
number|'50'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'ephemeral_0.vmdk'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cdrom_attach_with_config_drive
dedent|''
name|'def'
name|'test_cdrom_attach_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'iso_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'fake-config-drive'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cd_attach_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_create_config_drive
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
name|'uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'fake-config-drive'"
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
dedent|''
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'str'
op|'('
name|'iso_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cd_attach_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cd_attach_called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
string|"'power_off'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
string|"'detach_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
string|"'destroy'"
op|')'
newline|'\n'
DECL|member|test_destroy_with_attached_volumes
name|'def'
name|'test_destroy_with_attached_volumes'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_detach_volume'
op|','
nl|'\n'
name|'mock_power_off'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
string|"'fake-data'"
op|','
string|"'serial'"
op|':'
string|"'volume-fake-id'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'fake-bus'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake-name'"
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
string|"'root_device_name'"
op|':'
string|"'/dev/sda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
newline|'\n'
name|'mock_power_off'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'mock_detach_volume'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'fake-name'"
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
string|"'power_off'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'vexc'
op|'.'
name|'ManagedObjectNotFoundException'
op|'('
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
string|"'destroy'"
op|')'
newline|'\n'
DECL|member|test_destroy_with_attached_volumes_missing
name|'def'
name|'test_destroy_with_attached_volumes_missing'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_power_off'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
string|"'fake-data'"
op|','
string|"'serial'"
op|':'
string|"'volume-fake-id'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'fake-bus'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake-name'"
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
string|"'root_device_name'"
op|':'
string|"'/dev/sda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'bdi'
op|')'
newline|'\n'
name|'mock_power_off'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
string|"'detach_volume'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'StorageError'
op|'('
name|'reason'
op|'='
string|"'oh man'"
op|')'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
string|"'destroy'"
op|')'
newline|'\n'
DECL|member|test_destroy_with_attached_volumes_with_exception
name|'def'
name|'test_destroy_with_attached_volumes_with_exception'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_destroy'
op|','
nl|'\n'
name|'mock_detach_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
op|'{'
string|"'data'"
op|':'
string|"'fake-data'"
op|','
string|"'serial'"
op|':'
string|"'volume-fake-id'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'fake-bus'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake-name'"
op|','
nl|'\n'
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
newline|'\n'
name|'bdi'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
string|"'root_device_name'"
op|':'
string|"'/dev/sda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|','
name|'block_device_info'
op|'='
name|'bdi'
op|')'
newline|'\n'
name|'mock_detach_volume'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'fake-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_destroy'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_vm_ref_cached
dedent|''
name|'def'
name|'test_spawn_vm_ref_cached'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_power_on
dedent|''
name|'def'
name|'test_spawn_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_root_size_0
dedent|''
name|'def'
name|'test_spawn_root_size_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance_type'
op|'='
string|"'m1.micro'"
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'cache'
op|'='
op|'('
string|"'[%s] vmware_base/%s/%s.vmdk'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
op|')'
newline|'\n'
name|'gb_cache'
op|'='
op|'('
string|"'[%s] vmware_base/%s/%s.0.vmdk'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'cache'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'gb_cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_with_delete_exception
dedent|''
name|'def'
name|'_spawn_with_delete_exception'
op|'('
name|'self'
op|','
name|'fault'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"DeleteDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|','
nl|'\n'
name|'error_fault'
op|'='
name|'fault'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'fault'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vexc'
op|'.'
name|'VMwareDriverException'
op|','
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_not_found
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileNotFound'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_file_fault
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_file_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileFault'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_cannot_delete_file
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_cannot_delete_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'CannotDeleteFile'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_file_locked
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_file_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileLocked'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_general
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_general'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend
dedent|''
name|'def'
name|'test_spawn_disk_extend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|')'
newline|'\n'
name|'requested_size'
op|'='
number|'80'
op|'*'
name|'units'
op|'.'
name|'Mi'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_extend_virtual_disk'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'requested_size'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_exists
dedent|''
name|'def'
name|'test_spawn_disk_extend_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.80.vmdk'"
op|'%'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_extend
name|'def'
name|'_fake_extend'
op|'('
name|'instance'
op|','
name|'requested_size'
op|','
name|'name'
op|','
name|'dc_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'_add_file'
op|'('
name|'str'
op|'('
name|'root'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|','
nl|'\n'
name|'_fake_extend'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'root'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_spawn_disk_extend_sparse
name|'def'
name|'test_spawn_disk_extend_sparse'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
name|'units'
op|'.'
name|'Ki'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DISK_TYPE_SPARSE'
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'get_datacenter_ref_and_name'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_extend'
op|','
name|'mock_get_dc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dc_val'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'dc_val'
op|'.'
name|'ref'
op|'='
string|'"fake_dc_ref"'
newline|'\n'
name|'dc_val'
op|'.'
name|'name'
op|'='
string|'"dc1"'
newline|'\n'
name|'mock_get_dc'
op|'.'
name|'return_value'
op|'='
name|'dc_val'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'iid'
op|'='
name|'img_props'
op|'.'
name|'image_id'
newline|'\n'
name|'cached_image'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'iid'
op|','
string|"'%s.80.vmdk'"
op|'%'
name|'iid'
op|')'
newline|'\n'
name|'mock_extend'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'root_gb'
op|'*'
name|'units'
op|'.'
name|'Mi'
op|','
nl|'\n'
name|'str'
op|'('
name|'cached_image'
op|')'
op|','
string|'"fake_dc_ref"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_failed_copy
dedent|''
dedent|''
name|'def'
name|'test_spawn_disk_extend_failed_copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Spawn instance'
nl|'\n'
comment|'# copy for extend fails without creating a file'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Expect the copy error to be raised'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
nl|'\n'
name|'CopyError'
op|'='
name|'vexc'
op|'.'
name|'FileFaultException'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
string|"'fake-copy-task'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'CopyError'
op|'('
string|"'Copy failed!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|'"CopyVirtualDisk_Task"'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'fake-copy-task'"
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CopyError'
op|','
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_failed_partial_copy
dedent|''
dedent|''
name|'def'
name|'test_spawn_disk_extend_failed_partial_copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Spawn instance'
nl|'\n'
comment|'# Copy for extend fails, leaving a file behind'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Expect the file to be cleaned up'
nl|'\n'
comment|'# Expect the copy error to be raised'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
newline|'\n'
name|'cached_image'
op|'='
string|"'[%s] vmware_base/%s/%s.80.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
nl|'\n'
name|'uuid'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'CopyError'
op|'='
name|'vexc'
op|'.'
name|'FileFaultException'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'cached_image'
op|')'
newline|'\n'
comment|"# N.B. We don't test for -flat here because real"
nl|'\n'
comment|"# CopyVirtualDisk_Task doesn't actually create it"
nl|'\n'
name|'raise'
name|'CopyError'
op|'('
string|"'Copy failed!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"CopyVirtualDisk_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CopyError'
op|','
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
dedent|''
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'cached_image'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_failed_partial_copy_failed_cleanup
dedent|''
name|'def'
name|'test_spawn_disk_extend_failed_partial_copy_failed_cleanup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Spawn instance'
nl|'\n'
comment|'# Copy for extend fails, leaves file behind'
nl|'\n'
comment|'# File cleanup fails'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Expect file to be left behind'
nl|'\n'
comment|'# Expect file cleanup error to be raised'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
newline|'\n'
name|'cached_image'
op|'='
string|"'[%s] vmware_base/%s/%s.80.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
nl|'\n'
name|'uuid'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'CopyError'
op|'='
name|'vexc'
op|'.'
name|'FileFaultException'
newline|'\n'
name|'DeleteError'
op|'='
name|'vexc'
op|'.'
name|'CannotDeleteFileException'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'cached_image'
op|')'
newline|'\n'
comment|"# N.B. We don't test for -flat here because real"
nl|'\n'
comment|"# CopyVirtualDisk_Task doesn't actually create it"
nl|'\n'
name|'raise'
name|'CopyError'
op|'('
string|"'Copy failed!'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'task_ref'
op|'=='
string|"'fake-delete-task'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'DeleteError'
op|'('
string|"'Delete failed!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|'"DeleteDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'fake-delete-task'"
newline|'\n'
nl|'\n'
dedent|''
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"CopyVirtualDisk_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'new'
op|'='
name|'fake_call_method'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DeleteError'
op|','
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
dedent|''
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'cached_image'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_spawn_disk_invalid_disk_size
name|'def'
name|'test_spawn_disk_invalid_disk_size'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
number|'82'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DISK_TYPE_SPARSE'
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceUnacceptable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_spawn_disk_extend_insufficient_disk_space
name|'def'
name|'test_spawn_disk_extend_insufficient_disk_space'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_props'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
number|'1024'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DISK_TYPE_SPARSE'
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_props'
newline|'\n'
nl|'\n'
name|'cached_image'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.80.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
name|'tmp_file'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
string|"'%s.80-flat.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'NoDiskSpace'
op|'='
name|'vexc'
op|'.'
name|'get_fault_class'
op|'('
string|"'NoDiskSpace'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'raise'
name|'NoDiskSpace'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'ExtendVirtualDisk_Task'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_wait_for_task'
op|','
name|'mock_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NoDiskSpace'
op|','
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'cached_image'
op|')'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'tmp_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_file_exists_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_file_exists_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise an file exists exception. The flag'
nl|'\n'
comment|'# self.exception will be checked to see that'
nl|'\n'
comment|'# the exception has indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
indent|'        '
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'vexc'
op|'.'
name|'FileAlreadyExistsException'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_general_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_general_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise a general exception. The flag self.exception'
nl|'\n'
comment|'# will be checked to see that the exception has'
nl|'\n'
comment|'# indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
indent|'        '
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'vexc'
op|'.'
name|'VMwareDriverException'
op|'('
string|"'Exception!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vexc'
op|'.'
name|'VMwareDriverException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_poll_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_poll_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'call_method'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vexc'
op|'.'
name|'VMwareDriverException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_file_exists_poll_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_file_exists_poll_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise a file exists exception. The flag self.exception'
nl|'\n'
comment|'# will be checked to see that the exception has'
nl|'\n'
comment|'# indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|','
nl|'\n'
name|'error_fault'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FileAlreadyExists'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_attach_volume_vmdk
dedent|''
dedent|''
name|'def'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'self'
op|','
name|'set_image_ref'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'set_image_ref'
op|'='
name|'set_image_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'block_device'
op|','
string|"'volume_in_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'v_driver'
op|','
string|"'block_device_info_get_mapping'"
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'root_disk'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
op|']'
newline|'\n'
name|'v_driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'root_disk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_get_res_pool_of_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_get_res_pool_of_vm'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_res_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_relocate_vmdk_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_relocate_vmdk_volume'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake_res_pool'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'constants'
op|'.'
name|'DEFAULT_ADAPTER_TYPE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'root_disk'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_iscsi
dedent|''
name|'def'
name|'test_spawn_attach_volume_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'block_device'
op|','
string|"'volume_in_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'v_driver'
op|','
string|"'block_device_info_get_mapping'"
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'root_disk'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
op|']'
newline|'\n'
name|'v_driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'root_disk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'constants'
op|'.'
name|'DEFAULT_ADAPTER_TYPE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'mount_device'"
op|':'
string|"'vda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_hw_versions
dedent|''
name|'def'
name|'test_spawn_hw_versions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'updates'
op|'='
op|'{'
string|"'extra_specs'"
op|':'
op|'{'
string|"'vmware:hw_version'"
op|':'
string|"'vmx-08'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance_type_updates'
op|'='
name|'updates'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'version'
op|'='
name|'vm'
op|'.'
name|'get'
op|'('
string|'"version"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'vmx-08'"
op|','
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_upload_image
dedent|''
name|'def'
name|'mock_upload_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image'
op|','
name|'instance'
op|','
name|'session'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|','
string|"'Test-Snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1024'
op|','
name|'kwargs'
op|'['
string|"'vmdk_size'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vm_ref_using_extra_config
dedent|''
name|'def'
name|'test_get_vm_ref_using_extra_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_vm_ref_from_extraconfig'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
comment|'# Disrupt the fake Virtual Machine object so that extraConfig'
nl|'\n'
comment|'# cannot be matched.'
nl|'\n'
name|'fake_vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'get'
op|'('
string|'\'config.extraConfig["nvp.vm-uuid"]\''
op|')'
op|'.'
name|'value'
op|'='
string|'""'
newline|'\n'
comment|'# We should not get a Virtual Machine through extraConfig.'
nl|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_vm_ref_from_extraconfig'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference should be none'"
op|')'
newline|'\n'
comment|'# Check if we can find the Virtual Machine using the name.'
nl|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_search_vm_ref_by_identifier
dedent|''
name|'def'
name|'test_search_vm_ref_by_identifier'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'search_vm_ref_by_identifier'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'set'
op|'('
string|'"summary.config.instanceUuid"'
op|','
string|'"foo"'
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'set'
op|'('
string|'"name"'
op|','
string|'"foo"'
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'get'
op|'('
string|'\'config.extraConfig["nvp.vm-uuid"]\''
op|')'
op|'.'
name|'value'
op|'='
string|'"foo"'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'search_vm_ref_by_identifier'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|','
nl|'\n'
string|'"VM Reference should be none"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
nl|'\n'
name|'vm_util'
op|'.'
name|'search_vm_ref_by_identifier'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|'"foo"'
op|')'
op|','
nl|'\n'
string|'"VM Reference should not be none"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_object_for_optionvalue
dedent|''
name|'def'
name|'test_get_object_for_optionvalue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
string|'"get_objects"'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
op|'['
string|'\'config.extraConfig["nvp.vm-uuid"]\''
op|']'
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_object_for_optionvalue'
op|'('
name|'vms'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|'"uuid"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_snapshot
dedent|''
name|'def'
name|'_test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'images'
op|','
string|"'upload_image_stream_optimized'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'mock_upload_image'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|'"Test-Snapshot"'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_no_root_disk
dedent|''
name|'def'
name|'test_snapshot_no_root_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iso_disk_type_created'
op|'('
name|'instance_type'
op|'='
string|"'m1.micro'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'NoRootDiskDefined'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|'"Test-Snapshot"'
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_non_existent
dedent|''
name|'def'
name|'test_snapshot_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|'"Test-Snapshot"'
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_delete_vm_snapshot
dedent|''
name|'def'
name|'test_snapshot_delete_vm_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'snapshot_ref'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'ManagedObjectReference'
op|'('
nl|'\n'
name|'value'
op|'='
string|'"Snapshot-123"'
op|','
nl|'\n'
name|'name'
op|'='
string|'"VirtualMachineSnapshot"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
nl|'\n'
string|"'_create_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_create_vm_snapshot'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|'.'
name|'obj'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'snapshot_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
nl|'\n'
string|"'_delete_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_delete_vm_snapshot'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|'.'
name|'obj'
op|','
name|'snapshot_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_snapshot_delete_vm_snapshot_exception
dedent|''
name|'def'
name|'_snapshot_delete_vm_snapshot_exception'
op|'('
name|'self'
op|','
name|'exception'
op|','
name|'call_count'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
op|'.'
name|'obj'
newline|'\n'
name|'snapshot_ref'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'ManagedObjectReference'
op|'('
nl|'\n'
name|'value'
op|'='
string|'"Snapshot-123"'
op|','
nl|'\n'
name|'name'
op|'='
string|'"VirtualMachineSnapshot"'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmops'
op|','
string|"'_time_sleep_wrapper'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_fake_wait'
op|','
name|'_fake_sleep'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'exception'
op|'!='
name|'vexc'
op|'.'
name|'TaskInProgress'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_delete_vm_snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|','
name|'snapshot_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'_fake_sleep'
op|'.'
name|'call_count'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_delete_vm_snapshot'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|','
nl|'\n'
name|'snapshot_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_count'
op|'-'
number|'1'
op|','
name|'_fake_sleep'
op|'.'
name|'call_count'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_count'
op|','
name|'_fake_wait'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_delete_vm_snapshot_exception
dedent|''
dedent|''
name|'def'
name|'test_snapshot_delete_vm_snapshot_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_snapshot_delete_vm_snapshot_exception'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_delete_vm_snapshot_exception_retry
dedent|''
name|'def'
name|'test_snapshot_delete_vm_snapshot_exception_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'api_retry_count'
op|'='
number|'5'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_snapshot_delete_vm_snapshot_exception'
op|'('
name|'vexc'
op|'.'
name|'TaskInProgress'
op|','
nl|'\n'
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard
dedent|''
name|'def'
name|'test_reboot_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"HARD"'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_with_uuid
dedent|''
name|'def'
name|'test_reboot_with_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test fall back to use name when can\'t find by uuid."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_non_existent
dedent|''
name|'def'
name|'test_reboot_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_poll_rebooting_instances
dedent|''
name|'def'
name|'test_poll_rebooting_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'reboot'"
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'reboot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'poll_rebooting_instances'
op|'('
number|'60'
op|','
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_not_poweredon
dedent|''
name|'def'
name|'test_reboot_not_poweredon'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceRebootFailure'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_non_existent
dedent|''
name|'def'
name|'test_suspend_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_non_existent
dedent|''
name|'def'
name|'test_resume_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_not_suspended
dedent|''
name|'def'
name|'test_resume_not_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceResumeFailure'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on
dedent|''
name|'def'
name|'test_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_on'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on_non_existent
dedent|''
name|'def'
name|'test_power_on_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_on'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off
dedent|''
name|'def'
name|'test_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off_non_existent
dedent|''
name|'def'
name|'test_power_off_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
string|"'reboot'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vm_util'
op|','
string|"'get_vm_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'poweredOff'"
op|')'
newline|'\n'
DECL|member|test_resume_state_on_host_boot
name|'def'
name|'test_resume_state_on_host_boot'
op|'('
name|'self'
op|','
name|'mock_get_vm_state'
op|','
nl|'\n'
name|'mock_reboot'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|')'
newline|'\n'
name|'mock_get_vm_state'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'mock_reboot'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|','
string|"'hard'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_no_reboot
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_no_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'state'
name|'in'
op|'['
string|"'poweredOn'"
op|','
string|"'suspended'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
string|"'reboot'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vm_util'
op|','
string|"'get_vm_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'state'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_reboot'
op|','
name|'mock_get_vm_state'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|')'
newline|'\n'
name|'mock_get_vm_state'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_reboot'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_no_datastore
dedent|''
name|'def'
name|'test_destroy_no_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# Delete the vmPathName'
nl|'\n'
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'vm'
op|'.'
name|'delete'
op|'('
string|"'config.files.vmPathName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_non_existent
dedent|''
name|'def'
name|'test_destroy_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'destroy_disks'
op|'='
name|'True'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
nl|'\n'
string|'"destroy"'
op|')'
name|'as'
name|'mock_destroy'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'None'
op|','
name|'self'
op|'.'
name|'destroy_disks'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'destroy_disks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_instance_without_compute
dedent|''
dedent|''
name|'def'
name|'test_destroy_instance_without_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'destroy_disks'
op|'='
name|'True'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
nl|'\n'
string|'"destroy"'
op|')'
name|'as'
name|'mock_destroy'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_without_compute'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'None'
op|','
name|'self'
op|'.'
name|'destroy_disks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_destroy'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_destroy_instance_without_vm_ref
dedent|''
dedent|''
name|'def'
name|'_destroy_instance_without_vm_ref'
op|'('
name|'self'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_vm_ref_from_name
indent|'        '
name|'def'
name|'fake_vm_ref_from_name'
op|'('
name|'session'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'fake-ref'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vm_util'
op|','
string|"'get_vm_ref_from_name'"
op|','
nl|'\n'
name|'fake_vm_ref_from_name'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
string|"'_call_method'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
nl|'\n'
string|"'_destroy_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get'
op|','
name|'mock_call'
op|','
name|'mock_destroy'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'None'
op|','
name|'True'
op|')'
newline|'\n'
name|'if'
name|'task_state'
op|'=='
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'mock_destroy'
op|'.'
name|'call_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_call'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_instance_without_vm_ref
dedent|''
dedent|''
name|'def'
name|'test_destroy_instance_without_vm_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_destroy_instance_without_vm_ref'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_instance_without_vm_ref_with_resize_revert
dedent|''
name|'def'
name|'test_destroy_instance_without_vm_ref_with_resize_revert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_destroy_instance_without_vm_ref'
op|'('
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_rescue
dedent|''
name|'def'
name|'_rescue'
op|'('
name|'self'
op|','
name|'config_drive'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
comment|'# validate that the power on is only called once'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_power_on'
op|'='
name|'vm_util'
op|'.'
name|'power_on_instance'
newline|'\n'
name|'self'
op|'.'
name|'_power_on_called'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|fake_attach_disk_to_vm
name|'def'
name|'fake_attach_disk_to_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|','
name|'disk_type'
op|','
name|'vmdk_path'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_size'
op|'='
name|'None'
op|','
name|'linked_clone'
op|'='
name|'False'
op|','
nl|'\n'
name|'controller_key'
op|'='
name|'None'
op|','
name|'unit_number'
op|'='
name|'None'
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'config_drive'
op|':'
newline|'\n'
DECL|function|fake_create_config_drive
indent|'            '
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'str'
op|'('
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'data_store_name'
op|','
nl|'\n'
name|'instance_uuid'
op|','
string|"'fake.iso'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_power_on_instance
name|'def'
name|'fake_power_on_instance'
op|'('
name|'session'
op|','
name|'instance'
op|','
name|'vm_ref'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_power_on_called'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_power_on'
op|'('
name|'session'
op|','
name|'instance'
op|','
name|'vm_ref'
op|'='
name|'vm_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_util'
op|','
string|'"power_on_instance"'
op|','
nl|'\n'
name|'fake_power_on_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volumeops'
op|','
string|'"attach_disk_to_vm"'
op|','
nl|'\n'
name|'fake_attach_disk_to_vm'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
string|"'fake-password'"
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'1-orig'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'%s-orig'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'_power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_diagnostics
dedent|''
name|'def'
name|'test_get_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'memoryReservation'"
op|':'
number|'0'
op|','
string|"'suspendInterval'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'maxCpuUsage'"
op|':'
number|'2000'
op|','
string|"'toolsInstallerMounted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'consumedOverheadMemory'"
op|':'
number|'20'
op|','
string|"'numEthernetCards'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'numCpu'"
op|':'
number|'1'
op|','
string|"'featureRequirement'"
op|':'
op|'['
op|'{'
string|"'key'"
op|':'
string|"'cpuid.AES'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'memoryOverhead'"
op|':'
number|'21417984'
op|','
nl|'\n'
string|"'guestMemoryUsage'"
op|':'
number|'0'
op|','
string|"'connectionState'"
op|':'
string|"'connected'"
op|','
nl|'\n'
string|"'memorySizeMB'"
op|':'
number|'512'
op|','
string|"'balloonedMemory'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vmPathName'"
op|':'
string|"'fake_path'"
op|','
string|"'template'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'overallCpuUsage'"
op|':'
number|'0'
op|','
string|"'powerState'"
op|':'
string|"'poweredOn'"
op|','
nl|'\n'
string|"'cpuReservation'"
op|':'
number|'0'
op|','
string|"'overallCpuDemand'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'numVirtualDisks'"
op|':'
number|'1'
op|','
string|"'hostMemoryUsage'"
op|':'
number|'141'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'vmware:'"
op|'+'
name|'k'
op|':'
name|'v'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'None'
op|','
nl|'\n'
name|'name'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'instance_node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_diagnostics
dedent|''
name|'def'
name|'test_get_instance_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'uptime'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_details'"
op|':'
op|'{'
string|"'used'"
op|':'
number|'0'
op|','
string|"'maximum'"
op|':'
number|'512'
op|'}'
op|','
nl|'\n'
string|"'nic_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'driver'"
op|':'
string|"'vmwareapi'"
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'version'"
op|':'
string|"'1.0'"
op|','
nl|'\n'
string|"'cpu_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'disk_details'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'hypervisor_os'"
op|':'
string|"'esxi'"
op|','
nl|'\n'
string|"'config_drive'"
op|':'
string|"'False'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'False'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'node'
op|'='
name|'self'
op|'.'
name|'instance_node'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_instance_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'actual'
op|'.'
name|'serialize'
op|'('
op|')'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output
dedent|''
name|'def'
name|'test_get_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_console_output'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_non_existent
dedent|''
name|'def'
name|'test_get_vnc_console_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_vnc_console
dedent|''
name|'def'
name|'_test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'OptionValue'
op|'='
name|'collections'
op|'.'
name|'namedtuple'
op|'('
string|"'OptionValue'"
op|','
op|'['
string|"'key'"
op|','
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'opt_val'
op|'='
name|'OptionValue'
op|'('
name|'key'
op|'='
string|"''"
op|','
name|'value'
op|'='
number|'5906'
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'set'
op|'('
name|'vm_util'
op|'.'
name|'VNC_CONFIG_KEY'
op|','
name|'opt_val'
op|')'
newline|'\n'
name|'vnc_console'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'vnc_host'
op|','
name|'vnc_console'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5906'
op|','
name|'vnc_console'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console
dedent|''
name|'def'
name|'test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_vnc_console'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_noport
dedent|''
name|'def'
name|'test_get_vnc_console_noport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_connector
dedent|''
name|'def'
name|'test_get_volume_connector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connector_dict'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'fake_vm_id'
op|'='
name|'fake_vm'
op|'.'
name|'obj'
op|'.'
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'instance'"
op|']'
op|','
name|'fake_vm_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_vmdk_connection_info
dedent|''
name|'def'
name|'_test_vmdk_connection_info'
op|'('
name|'self'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'driver_volume_type'"
op|':'
name|'type'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'volume-fake-id'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'volume'"
op|':'
string|"'vm-10'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'volume-fake-id'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_volume_attach_vmdk
dedent|''
name|'def'
name|'test_volume_attach_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_attach_volume_vmdk'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_attach_volume_vmdk'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_detach_vmdk
dedent|''
name|'def'
name|'test_volume_detach_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_detach_volume_vmdk'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_detach_volume_vmdk'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_vmdk_disk_to_vm
dedent|''
name|'def'
name|'test_attach_vmdk_disk_to_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
nl|'\n'
name|'adapter_type'
op|'='
name|'constants'
op|'.'
name|'DEFAULT_ADAPTER_TYPE'
newline|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DEFAULT_DISK_TYPE'
newline|'\n'
name|'disk_uuid'
op|'='
string|"'e97f357b-331e-4ad1-b726-89be048fb811'"
newline|'\n'
name|'backing'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'uuid'
op|'='
name|'disk_uuid'
op|')'
newline|'\n'
name|'device'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'backing'
op|'='
name|'backing'
op|')'
newline|'\n'
name|'vmdk_info'
op|'='
name|'vm_util'
op|'.'
name|'VmdkInfo'
op|'('
string|"'fake-path'"
op|','
name|'adapter_type'
op|','
name|'disk_type'
op|','
number|'64'
op|','
nl|'\n'
name|'device'
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vm_util'
op|','
string|"'get_vm_ref'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'vm_ref'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
string|"'_get_volume_ref'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vm_util'
op|','
string|"'get_vmdk_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'vmdk_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
string|"'attach_disk_to_vm'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_update_volume_details'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'get_vm_ref'
op|','
name|'get_volume_ref'
op|','
name|'get_vmdk_info'
op|','
nl|'\n'
name|'attach_disk_to_vm'
op|','
name|'update_volume_details'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'get_vm_ref'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'get_volume_ref'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'volume'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'get_vmdk_info'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'attach_disk_to_vm'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'vm_ref'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'adapter_type'
op|','
name|'disk_type'
op|','
name|'vmdk_path'
op|'='
string|"'fake-path'"
op|')'
newline|'\n'
name|'update_volume_details'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'vm_ref'
op|','
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'volume_id'"
op|']'
op|','
nl|'\n'
name|'disk_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_vmdk_disk_from_vm
dedent|''
dedent|''
name|'def'
name|'test_detach_vmdk_disk_from_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'detach_volume'"
op|')'
name|'as'
name|'detach_volume'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'/dev/vdc'"
op|','
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
name|'detach_volume'
op|'.'
name|'assert_called_once_with'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_attach_iscsi
dedent|''
dedent|''
name|'def'
name|'test_volume_attach_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_attach_volume_iscsi'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_attach_volume_iscsi'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_detach_iscsi
dedent|''
name|'def'
name|'test_volume_detach_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_detach_volume_iscsi'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_detach_volume_iscsi'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_iscsi_disk_to_vm
dedent|''
name|'def'
name|'test_attach_iscsi_disk_to_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_portal'"
op|']'
op|'='
string|"'fake_target_host:port'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_iqn'"
op|']'
op|'='
string|"'fake_target_iqn'"
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'discover'
op|'='
op|'('
string|"'fake_name'"
op|','
string|"'fake_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_iscsi_get_target'"
op|')'
newline|'\n'
comment|'# simulate target not found'
nl|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_iscsi_get_target'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_iscsi_add_send_target_host'"
op|')'
newline|'\n'
comment|'# rescan gets called with target portal'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_iscsi_rescan_hba'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_iscsi_rescan_hba'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_portal'"
op|']'
op|')'
newline|'\n'
comment|'# simulate target found'
nl|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_iscsi_get_target'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'discover'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_disk_to_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'rdmp'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iscsi_rescan_hba
dedent|''
name|'def'
name|'test_iscsi_rescan_hba'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_target_portal'
op|'='
string|"'fake_target_host:port'"
newline|'\n'
name|'host_storage_sys'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
nl|'\n'
string|'"HostStorageSystem"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'iscsi_hba_array'
op|'='
name|'host_storage_sys'
op|'.'
name|'get'
op|'('
string|"'storageDeviceInfo'"
nl|'\n'
string|"'.hostBusAdapter'"
op|')'
newline|'\n'
name|'iscsi_hba'
op|'='
name|'iscsi_hba_array'
op|'.'
name|'HostHostBusAdapter'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# Check the host system does not have the send target'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'getattr'
op|','
name|'iscsi_hba'
op|','
nl|'\n'
string|"'configuredSendTarget'"
op|')'
newline|'\n'
comment|'# Rescan HBA with the target portal'
nl|'\n'
name|'vops'
op|'='
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|')'
newline|'\n'
name|'vops'
op|'.'
name|'_iscsi_rescan_hba'
op|'('
name|'fake_target_portal'
op|')'
newline|'\n'
comment|'# Check if HBA has the target portal configured'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_target_host'"
op|','
nl|'\n'
name|'iscsi_hba'
op|'.'
name|'configuredSendTarget'
op|'['
number|'0'
op|']'
op|'.'
name|'address'
op|')'
newline|'\n'
comment|'# Rescan HBA with same portal'
nl|'\n'
name|'vops'
op|'.'
name|'_iscsi_rescan_hba'
op|'('
name|'fake_target_portal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'iscsi_hba'
op|'.'
name|'configuredSendTarget'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iscsi_get_target
dedent|''
name|'def'
name|'test_iscsi_get_target'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|"'target_portal'"
op|':'
string|"'fake_target_host:port'"
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
string|"'fake_target_iqn'"
op|'}'
newline|'\n'
name|'host'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|"'HostSystem'"
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'host'
op|'.'
name|'_add_iscsi_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'vops'
op|'='
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|')'
newline|'\n'
name|'result'
op|'='
name|'vops'
op|'.'
name|'_iscsi_get_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
string|"'fake-device'"
op|','
string|"'fake-uuid'"
op|')'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_iscsi_disk_from_vm
dedent|''
name|'def'
name|'test_detach_iscsi_disk_from_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_portal'"
op|']'
op|'='
string|"'fake_target_portal'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_iqn'"
op|']'
op|'='
string|"'fake_target_iqn'"
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'find'
op|'='
op|'('
string|"'fake_name'"
op|','
string|"'fake_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_iscsi_get_target'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_iscsi_get_target'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'find'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_rdm_disk'"
op|')'
newline|'\n'
name|'device'
op|'='
string|"'fake_device'"
newline|'\n'
name|'vm_util'
op|'.'
name|'get_rdm_disk'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'fake_uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'detach_disk_from_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'device'
op|','
name|'destroy_disk'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_info_get
dedent|''
name|'def'
name|'test_connection_info_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connector'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instance'"
op|','
name|'connector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_info_get_after_destroy
dedent|''
name|'def'
name|'test_connection_info_get_after_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'connector'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instance'"
op|','
name|'connector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_instance_security_rules
dedent|''
name|'def'
name|'test_refresh_instance_security_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'refresh_instance_security_rules'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'block_device'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_image_aging_image_used
name|'def'
name|'test_image_aging_image_used'
op|'('
name|'self'
op|','
name|'mock_get_by_inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_timestamp_filename
dedent|''
name|'def'
name|'_get_timestamp_filename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s%s'"
op|'%'
op|'('
name|'imagecache'
op|'.'
name|'TIMESTAMP_PREFIX'
op|','
nl|'\n'
name|'timeutils'
op|'.'
name|'strtime'
op|'('
name|'at'
op|'='
name|'self'
op|'.'
name|'old_time'
op|','
nl|'\n'
name|'fmt'
op|'='
name|'imagecache'
op|'.'
name|'TIMESTAMP_FORMAT'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_override_time
dedent|''
name|'def'
name|'_override_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'old_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_get_timestamp_filename
name|'def'
name|'_fake_get_timestamp_filename'
op|'('
name|'fake'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagecache'
op|'.'
name|'ImageCacheManager'
op|','
string|"'_get_timestamp_filename'"
op|','
nl|'\n'
name|'_fake_get_timestamp_filename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_timestamp_file_exists
dedent|''
name|'def'
name|'_timestamp_file_exists'
op|'('
name|'self'
op|','
name|'exists'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
op|'+'
string|"'/'"
op|')'
newline|'\n'
name|'if'
name|'exists'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'assertPathExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'timestamp'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'assertPathNotExists'
op|'('
name|'self'
op|','
name|'str'
op|'('
name|'timestamp'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_aging_image_marked_for_deletion
dedent|''
dedent|''
name|'def'
name|'_image_aging_image_marked_for_deletion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_image_marked_for_deletion
dedent|''
name|'def'
name|'test_image_aging_image_marked_for_deletion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_timestamp_file_removed
dedent|''
name|'def'
name|'_timestamp_file_removed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'num_instances'
op|'='
number|'2'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp_file_removed_spawn
dedent|''
name|'def'
name|'test_timestamp_file_removed_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_timestamp_file_removed'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'block_device'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_timestamp_file_removed_aging
name|'def'
name|'test_timestamp_file_removed_aging'
op|'('
name|'self'
op|','
name|'mock_get_by_inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_timestamp_file_removed'
op|'('
op|')'
newline|'\n'
name|'ts'
op|'='
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
newline|'\n'
name|'ts_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
string|"'vmware_base'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
name|'ts'
op|'+'
string|"'/'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'_add_file'
op|'('
name|'str'
op|'('
name|'ts_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'block_device'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
DECL|member|test_image_aging_disabled
name|'def'
name|'test_image_aging_disabled'
op|'('
name|'self'
op|','
name|'mock_get_by_inst'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'remove_unused_base_images'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
name|'exists'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_aging_aged
dedent|''
name|'def'
name|'_image_aging_aged'
op|'('
name|'self'
op|','
name|'aging_time'
op|'='
number|'100'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'cur_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'remove_unused_original_minimum_age_seconds'
op|'='
name|'aging_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'cur_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_aged
dedent|''
name|'def'
name|'test_image_aging_aged'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_image_aging_aged'
op|'('
name|'aging_time'
op|'='
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_not_aged
dedent|''
name|'def'
name|'test_image_aging_not_aged'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_image_aging_aged'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_public_api_signatures
dedent|''
name|'def'
name|'test_public_api_signatures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublicAPISignatures'
op|'('
name|'v_driver'
op|'.'
name|'ComputeDriver'
op|'('
name|'None'
op|')'
op|','
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_register_extension
dedent|''
name|'def'
name|'test_register_extension'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
name|'as'
name|'mock_call_method'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_register_openstack_extension'
op|'('
op|')'
newline|'\n'
name|'mock_call_method'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'oslo_vim_util'
op|','
string|"'find_extension'"
op|','
nl|'\n'
name|'constants'
op|'.'
name|'EXTENSION_KEY'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'oslo_vim_util'
op|','
string|"'register_extension'"
op|','
nl|'\n'
name|'constants'
op|'.'
name|'EXTENSION_KEY'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'EXTENSION_TYPE_INSTANCE'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_register_extension_already_exists
dedent|''
dedent|''
name|'def'
name|'test_register_extension_already_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake-extension'"
op|')'
name|'as'
name|'mock_find_ext'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_register_openstack_extension'
op|'('
op|')'
newline|'\n'
name|'mock_find_ext'
op|'.'
name|'assert_called_once_with'
op|'('
name|'oslo_vim_util'
op|','
nl|'\n'
string|"'find_extension'"
op|','
nl|'\n'
name|'constants'
op|'.'
name|'EXTENSION_KEY'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'instances'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_mocks_for_session
dedent|''
name|'def'
name|'_setup_mocks_for_session'
op|'('
name|'self'
op|','
name|'mock_init'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_init'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'vcdriver'
op|'='
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|'('
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|side_effect
name|'def'
name|'side_effect'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
dedent|''
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'_create_session'
op|'.'
name|'side_effect'
op|'='
name|'side_effect'
newline|'\n'
name|'return'
name|'vcdriver'
newline|'\n'
nl|'\n'
DECL|member|test_host_power_action
dedent|''
name|'def'
name|'test_host_power_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'action'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_mode
dedent|''
name|'def'
name|'test_host_maintenance_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
string|"'host'"
op|','
string|"'mode'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_host_enabled
dedent|''
name|'def'
name|'test_set_host_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'set_host_enabled'
op|','
string|"'state'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_datastore_regex_configured
dedent|''
name|'def'
name|'test_datastore_regex_configured'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_datastore_regex'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_datastore_regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_datastore_regex'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vc_state'
op|'.'
name|'_datastore_regex'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.vmwareapi.ds_util.get_datastore'"
op|')'
newline|'\n'
DECL|member|test_datastore_regex_configured_vcstate
name|'def'
name|'test_datastore_regex_configured_vcstate'
op|'('
name|'self'
op|','
name|'mock_get_ds_ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vcstate'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vc_state'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_available_resource'
op|'('
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'mock_get_ds_ref'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'vcstate'
op|'.'
name|'_session'
op|','
name|'vcstate'
op|'.'
name|'_cluster'
op|','
name|'vcstate'
op|'.'
name|'_datastore_regex'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_resource
dedent|''
name|'def'
name|'test_get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_available_resource'
op|'('
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'vcpus'"
op|']'
op|','
number|'32'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'local_gb'"
op|']'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'local_gb_used'"
op|']'
op|','
number|'1024'
op|'-'
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'memory_mb'"
op|']'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_type'"
op|']'
op|','
string|"'VMware vCenter Server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_version'"
op|']'
op|','
number|'5001000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'stats'
op|'['
string|"'cpu_info'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'supported_instances'"
op|']'
op|','
nl|'\n'
string|'\'[["i686", "vmware", "hvm"], ["x86_64", "vmware", "hvm"]]\''
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_datastore_regex
dedent|''
name|'def'
name|'test_invalid_datastore_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Tests if we raise an exception for Invalid Regular Expression in'
nl|'\n'
comment|'# vmware_datastore_regex'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'cluster_name'
op|'='
string|"'test_cluster'"
op|','
name|'datastore_regex'
op|'='
string|"'fake-ds(01'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_nodes
dedent|''
name|'def'
name|'test_get_available_nodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nodelist'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_available_nodes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'nodelist'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'self'
op|'.'
name|'node_name'
op|','
name|'nodelist'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
op|'.'
name|'images'
op|'.'
name|'VMwareImage'
op|','
nl|'\n'
string|"'from_image'"
op|')'
newline|'\n'
DECL|member|test_spawn_with_sparse_image
name|'def'
name|'test_spawn_with_sparse_image'
op|'('
name|'self'
op|','
name|'mock_from_image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_info'
op|'='
name|'images'
op|'.'
name|'VMwareImage'
op|'('
nl|'\n'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'fake_image_uuid'
op|','
nl|'\n'
name|'file_size'
op|'='
number|'1024'
op|','
nl|'\n'
name|'disk_type'
op|'='
name|'constants'
op|'.'
name|'DISK_TYPE_SPARSE'
op|','
nl|'\n'
name|'linked_clone'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'mock_from_image'
op|'.'
name|'return_value'
op|'='
name|'img_info'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_plug_vifs
dedent|''
name|'def'
name|'test_plug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'plug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unplug_vifs
dedent|''
name|'def'
name|'test_unplug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unplug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_vif
dedent|''
name|'def'
name|'_create_vif'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gw_4'
op|'='
name|'network_model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'101.168.1.1'"
op|','
name|'type'
op|'='
string|"'gateway'"
op|')'
newline|'\n'
name|'dns_4'
op|'='
name|'network_model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'8.8.8.8'"
op|','
name|'type'
op|'='
name|'None'
op|')'
newline|'\n'
name|'subnet_4'
op|'='
name|'network_model'
op|'.'
name|'Subnet'
op|'('
name|'cidr'
op|'='
string|"'101.168.1.0/24'"
op|','
nl|'\n'
name|'dns'
op|'='
op|'['
name|'dns_4'
op|']'
op|','
nl|'\n'
name|'gateway'
op|'='
name|'gw_4'
op|','
nl|'\n'
name|'routes'
op|'='
name|'None'
op|','
nl|'\n'
name|'dhcp_server'
op|'='
string|"'191.168.1.1'"
op|')'
newline|'\n'
nl|'\n'
name|'gw_6'
op|'='
name|'network_model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'101:1db9::1'"
op|','
name|'type'
op|'='
string|"'gateway'"
op|')'
newline|'\n'
name|'subnet_6'
op|'='
name|'network_model'
op|'.'
name|'Subnet'
op|'('
name|'cidr'
op|'='
string|"'101:1db9::/64'"
op|','
nl|'\n'
name|'dns'
op|'='
name|'None'
op|','
nl|'\n'
name|'gateway'
op|'='
name|'gw_6'
op|','
nl|'\n'
name|'ips'
op|'='
name|'None'
op|','
nl|'\n'
name|'routes'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'network_neutron'
op|'='
name|'network_model'
op|'.'
name|'Network'
op|'('
name|'id'
op|'='
string|"'network-id-xxx-yyy-zzz'"
op|','
nl|'\n'
name|'bridge'
op|'='
name|'None'
op|','
nl|'\n'
name|'label'
op|'='
name|'None'
op|','
nl|'\n'
name|'subnets'
op|'='
op|'['
name|'subnet_4'
op|','
nl|'\n'
name|'subnet_6'
op|']'
op|','
nl|'\n'
name|'bridge_interface'
op|'='
string|"'eth0'"
op|','
nl|'\n'
name|'vlan'
op|'='
number|'99'
op|')'
newline|'\n'
nl|'\n'
name|'vif_bridge_neutron'
op|'='
name|'network_model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
string|"'new-vif-xxx-yyy-zzz'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'ca:fe:de:ad:be:ef'"
op|','
nl|'\n'
name|'network'
op|'='
name|'network_neutron'
op|','
nl|'\n'
name|'type'
op|'='
name|'None'
op|','
nl|'\n'
name|'devname'
op|'='
string|"'tap-xxx-yyy-zzz'"
op|','
nl|'\n'
name|'ovs_interfaceid'
op|'='
string|"'aaa-bbb-ccc'"
op|')'
newline|'\n'
name|'return'
name|'vif_bridge_neutron'
newline|'\n'
nl|'\n'
DECL|member|_validate_interfaces
dedent|''
name|'def'
name|'_validate_interfaces'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'index'
op|','
name|'num_iface_ids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm_record'
op|'('
op|')'
newline|'\n'
name|'found_iface_id'
op|'='
name|'False'
newline|'\n'
name|'extras'
op|'='
name|'vm'
op|'.'
name|'get'
op|'('
string|'"config.extraConfig"'
op|')'
newline|'\n'
name|'key'
op|'='
string|'"nvp.iface-id.%s"'
op|'%'
name|'index'
newline|'\n'
name|'num_found'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'extras'
op|'.'
name|'OptionValue'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'c'
op|'.'
name|'key'
op|'.'
name|'startswith'
op|'('
string|'"nvp.iface-id."'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'num_found'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'c'
op|'.'
name|'key'
op|'=='
name|'key'
name|'and'
name|'c'
op|'.'
name|'value'
op|'=='
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'found_iface_id'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_iface_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'num_found'
op|','
name|'num_iface_ids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_attach_interface
dedent|''
name|'def'
name|'_attach_interface'
op|'('
name|'self'
op|','
name|'vif'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_interface'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_interfaces'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface
dedent|''
name|'def'
name|'test_attach_interface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_attach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_with_exception
dedent|''
name|'def'
name|'test_attach_interface_with_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InterfaceAttachFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vif'
op|','
string|"'get_network_device'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake_device'"
op|')'
newline|'\n'
DECL|member|_detach_interface
name|'def'
name|'_detach_interface'
op|'('
name|'self'
op|','
name|'vif'
op|','
name|'mock_get_device'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_attach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_interface'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_interfaces'
op|'('
string|"'free'"
op|','
number|'1'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface
dedent|''
name|'def'
name|'test_detach_interface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_detach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_and_attach
dedent|''
name|'def'
name|'test_detach_interface_and_attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_detach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_interface'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_interfaces'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_no_device
dedent|''
name|'def'
name|'test_detach_interface_no_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_attach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_no_vif_match
dedent|''
name|'def'
name|'test_detach_interface_no_vif_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_attach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
name|'vif'
op|'['
string|"'id'"
op|']'
op|'='
string|"'bad-id'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vif'
op|','
string|"'get_network_device'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'fake_device'"
op|')'
newline|'\n'
DECL|member|test_detach_interface_with_exception
name|'def'
name|'test_detach_interface_with_exception'
op|'('
name|'self'
op|','
name|'mock_get_device'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'self'
op|'.'
name|'_create_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_attach_interface'
op|'('
name|'vif'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InterfaceDetachFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'vif'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_to_smaller_disk
dedent|''
dedent|''
name|'def'
name|'test_resize_to_smaller_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance_type'
op|'='
string|"'m1.large'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_get_instance_type_by_name'
op|'('
string|"'m1.small'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'migrate_disk_and_power_off'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
string|"'fake_dest'"
op|','
name|'flavor'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk_no_image_ref
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk_no_image_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'set_image_ref'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareVCDriver does not implement the pause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'pause'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareVCDriver does not implement the unpause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_datastore_dc_map
dedent|''
name|'def'
name|'test_datastore_dc_map'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vmops'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'vmops'
op|'.'
name|'_datastore_dc_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
comment|'# currently there are 2 data stores'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'vmops'
op|'.'
name|'_datastore_dc_mapping'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rollback_live_migration_at_destination
dedent|''
name|'def'
name|'test_rollback_live_migration_at_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"destroy"'
op|')'
name|'as'
name|'mock_destroy'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'rollback_live_migration_at_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"instance"'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"instance"'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_is_implemented
dedent|''
dedent|''
name|'def'
name|'test_get_instance_disk_info_is_implemented'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure that the method has been implemented in the driver'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'disk_info'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"test_get_instance_disk_info() should not raise "'
nl|'\n'
string|'"NotImplementedError"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_uptime
dedent|''
dedent|''
name|'def'
name|'test_get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_uptime'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pbm_wsdl_location
dedent|''
name|'def'
name|'test_pbm_wsdl_location'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'pbm_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'pbm_wsdl_location'
op|'='
string|"'fira'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_update_pbm_location'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fira'"
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_pbm_wsdl_loc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_pbm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nodename
dedent|''
name|'def'
name|'test_nodename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_mor'
op|'='
string|'"domain-26"'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"%s.%s"'
op|'%'
op|'('
name|'test_mor'
op|','
nl|'\n'
name|'vmwareapi_fake'
op|'.'
name|'_FAKE_VCENTER_UUID'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_create_nodename'
op|'('
name|'test_mor'
op|')'
op|','
nl|'\n'
string|'"VC driver failed to create the proper node name"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'LOG'
op|','
string|"'warning'"
op|')'
newline|'\n'
DECL|member|test_min_version
name|'def'
name|'test_min_version'
op|'('
name|'self'
op|','
name|'mock_warning'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_check_min_version'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_warning'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'LOG'
op|','
string|"'warning'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'oslo_vim_util'
op|','
string|"'get_vc_version'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'5.0.0'"
op|')'
newline|'\n'
DECL|member|test_invalid_min_version
name|'def'
name|'test_invalid_min_version'
op|'('
name|'self'
op|','
name|'mock_version'
op|','
name|'mock_warning'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_check_min_version'
op|'('
op|')'
newline|'\n'
comment|'# assert that the min version is in a warning message'
nl|'\n'
name|'expected_arg'
op|'='
op|'{'
string|"'version'"
op|':'
name|'constants'
op|'.'
name|'MIN_VC_VERSION'
op|'}'
newline|'\n'
name|'version_arg_found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'call'
name|'in'
name|'mock_warning'
op|'.'
name|'call_args_list'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'call'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'=='
name|'expected_arg'
op|':'
newline|'\n'
indent|'                '
name|'version_arg_found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'version_arg_found'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
