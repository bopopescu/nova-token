begin_unit
comment|'# Copyright (c) 2013 VMware, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vim_util'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareVIMUtilTestCase
name|'class'
name|'VMwareVIMUtilTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareVIMUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vim'
op|'='
name|'fake'
op|'.'
name|'FakeVim'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vim'
op|'.'
name|'_login'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_inner_objects
dedent|''
name|'def'
name|'test_get_inner_objects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'property'
op|'='
op|'['
string|"'summary.name'"
op|']'
newline|'\n'
comment|'# Get the fake datastores directly from the cluster'
nl|'\n'
name|'cluster_refs'
op|'='
name|'fake'
op|'.'
name|'_get_object_refs'
op|'('
string|"'ClusterComputeResource'"
op|')'
newline|'\n'
name|'cluster'
op|'='
name|'fake'
op|'.'
name|'_get_object'
op|'('
name|'cluster_refs'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'expected_ds'
op|'='
name|'cluster'
op|'.'
name|'datastore'
op|'.'
name|'ManagedObjectReference'
newline|'\n'
comment|'# Get the fake datastores using inner objects utility method'
nl|'\n'
name|'result'
op|'='
name|'vim_util'
op|'.'
name|'get_inner_objects'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'vim'
op|','
name|'cluster_refs'
op|'['
number|'0'
op|']'
op|','
string|"'datastore'"
op|','
string|"'Datastore'"
op|','
name|'property'
op|')'
newline|'\n'
name|'datastores'
op|'='
op|'['
name|'oc'
op|'.'
name|'obj'
name|'for'
name|'oc'
name|'in'
name|'result'
op|'.'
name|'objects'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_ds'
op|','
name|'datastores'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
