begin_unit
comment|'# Copyright (c) 2014 VMware, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'vim_util'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'stubs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'network_util'
newline|'\n'
nl|'\n'
DECL|variable|ResultSet
name|'ResultSet'
op|'='
name|'collections'
op|'.'
name|'namedtuple'
op|'('
string|"'ResultSet'"
op|','
op|'['
string|"'objects'"
op|']'
op|')'
newline|'\n'
DECL|variable|ObjectContent
name|'ObjectContent'
op|'='
name|'collections'
op|'.'
name|'namedtuple'
op|'('
string|"'ObjectContent'"
op|','
op|'['
string|"'obj'"
op|','
string|"'propSet'"
op|']'
op|')'
newline|'\n'
DECL|variable|DynamicProperty
name|'DynamicProperty'
op|'='
name|'collections'
op|'.'
name|'namedtuple'
op|'('
string|"'DynamicProperty'"
op|','
op|'['
string|"'name'"
op|','
string|"'val'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareNetworkUtilTestCase
name|'class'
name|'VMwareNetworkUtilTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareNetworkUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|'"vim"'
op|','
name|'stubs'
op|'.'
name|'fake_vim_prop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|'"_is_vim_object"'
op|','
nl|'\n'
name|'stubs'
op|'.'
name|'fake_is_vim_object'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_cluster_networks
dedent|''
name|'def'
name|'_build_cluster_networks'
op|'('
name|'self'
op|','
name|'networks'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a set of results for a cluster network lookup.\n\n        This is an example:\n        (ObjectContent){\n           obj =\n              (obj){\n                 value = "domain-c7"\n                 _type = "ClusterComputeResource"\n              }\n           propSet[] =\n              (DynamicProperty){\n                 name = "network"\n                 val =\n                    (ArrayOfManagedObjectReference){\n                       ManagedObjectReference[] =\n                          (ManagedObjectReference){\n                             value = "network-54"\n                             _type = "Network"\n                          },\n                          (ManagedObjectReference){\n                             value = "dvportgroup-14"\n                             _type = "DistributedVirtualPortgroup"\n                          },\n                    }\n              },\n        }]\n        """'
newline|'\n'
nl|'\n'
name|'objects'
op|'='
op|'['
op|']'
newline|'\n'
name|'obj'
op|'='
name|'ObjectContent'
op|'('
name|'obj'
op|'='
name|'vim_util'
op|'.'
name|'get_moref'
op|'('
string|'"domain-c7"'
op|','
nl|'\n'
string|'"ClusterComputeResource"'
op|')'
op|','
nl|'\n'
name|'propSet'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'value'
op|'.'
name|'ManagedObjectReference'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'.'
name|'ManagedObjectReference'
op|'.'
name|'append'
op|'('
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'obj'
op|'.'
name|'propSet'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'network'"
op|','
nl|'\n'
name|'val'
op|'='
name|'value'
op|')'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'append'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'return'
name|'ResultSet'
op|'('
name|'objects'
op|'='
name|'objects'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_no_match
dedent|''
name|'def'
name|'test_get_network_no_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net_morefs'
op|'='
op|'['
name|'vim_util'
op|'.'
name|'get_moref'
op|'('
string|'"dvportgroup-135"'
op|','
nl|'\n'
string|'"DistributedVirtualPortgroup"'
op|')'
op|','
nl|'\n'
name|'vim_util'
op|'.'
name|'get_moref'
op|'('
string|'"dvportgroup-136"'
op|','
nl|'\n'
string|'"DistributedVirtualPortgroup"'
op|')'
op|']'
newline|'\n'
name|'networks'
op|'='
name|'self'
op|'.'
name|'_build_cluster_networks'
op|'('
name|'net_morefs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_call_method
name|'def'
name|'mock_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'get_object_properties'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'networks'
newline|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'get_dynamic_property'"
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'result'
op|'.'
name|'name'
op|'='
string|"'no-match'"
newline|'\n'
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'continue_retrieval'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'mock_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'network_util'
op|'.'
name|'get_network_with_the_name'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
nl|'\n'
string|"'fake_net'"
op|','
nl|'\n'
string|"'fake_cluster'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_network_dvs_match
dedent|''
dedent|''
name|'def'
name|'_get_network_dvs_match'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'token'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net_morefs'
op|'='
op|'['
name|'vim_util'
op|'.'
name|'get_moref'
op|'('
string|'"dvportgroup-135"'
op|','
nl|'\n'
string|'"DistributedVirtualPortgroup"'
op|')'
op|']'
newline|'\n'
name|'networks'
op|'='
name|'self'
op|'.'
name|'_build_cluster_networks'
op|'('
name|'net_morefs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_call_method
name|'def'
name|'mock_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'get_object_properties'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'networks'
newline|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'get_dynamic_property'"
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'token'
name|'or'
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'.'
name|'name'
op|'='
string|"'fake_name'"
newline|'\n'
dedent|''
name|'result'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'result'
op|'.'
name|'distributedVirtualSwitch'
op|'='
string|"'fake_dvs'"
newline|'\n'
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'continue_retrieval'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'token'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'networks'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'method'
op|'=='
string|"'cancel_retrieval'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'mock_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'network_util'
op|'.'
name|'get_network_with_the_name'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
nl|'\n'
string|"'fake_net'"
op|','
nl|'\n'
string|"'fake_cluster'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_dvs_exact_match
dedent|''
dedent|''
name|'def'
name|'test_get_network_dvs_exact_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_get_network_dvs_match'
op|'('
string|"'fake_net'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_dvs_match
dedent|''
name|'def'
name|'test_get_network_dvs_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_get_network_dvs_match'
op|'('
string|"'dvs_7-virtualwire-7-fake_net'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_dvs_match_with_token
dedent|''
name|'def'
name|'test_get_network_dvs_match_with_token'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_get_network_dvs_match'
op|'('
string|"'dvs_7-virtualwire-7-fake_net'"
op|','
nl|'\n'
name|'token'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_continue_retrieval_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_cancel_retrieval_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_network_match
dedent|''
name|'def'
name|'test_get_network_network_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'net_morefs'
op|'='
op|'['
name|'vim_util'
op|'.'
name|'get_moref'
op|'('
string|'"network-54"'
op|','
string|'"Network"'
op|')'
op|']'
newline|'\n'
name|'networks'
op|'='
name|'self'
op|'.'
name|'_build_cluster_networks'
op|'('
name|'net_morefs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_call_method
name|'def'
name|'mock_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'get_object_properties'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'networks'
newline|'\n'
dedent|''
name|'if'
name|'method'
op|'=='
string|"'get_dynamic_property'"
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'fake_net'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'mock_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'network_util'
op|'.'
name|'get_network_with_the_name'
op|'('
name|'self'
op|'.'
name|'_session'
op|','
nl|'\n'
string|"'fake_net'"
op|','
nl|'\n'
string|"'fake_cluster'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'res'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
