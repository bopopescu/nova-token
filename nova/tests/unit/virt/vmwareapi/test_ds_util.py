begin_unit
comment|'# Copyright (c) 2014 VMware, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'oslo_vmware'
name|'import'
name|'exceptions'
name|'as'
name|'vexc'
newline|'\n'
name|'from'
name|'oslo_vmware'
op|'.'
name|'objects'
name|'import'
name|'datastore'
name|'as'
name|'ds_obj'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'ds_util'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DsUtilTestCase
name|'class'
name|'DsUtilTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DsUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'='
name|'fake'
op|'.'
name|'FakeSession'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'api_retry_count'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DsUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_delete
dedent|''
name|'def'
name|'test_file_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DeleteDatastoreFile_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'name'
op|')'
newline|'\n'
name|'datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'datacenter'
op|')'
newline|'\n'
name|'return'
string|"'fake_delete_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_delete'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
name|'ds_path'
op|','
string|"'fake-dc-ref'"
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_delete_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_copy
dedent|''
dedent|''
name|'def'
name|'test_file_copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'CopyDatastoreFile_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'src_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path/src_file'"
op|','
name|'src_name'
op|')'
newline|'\n'
name|'src_dc_ref'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-src-dc-ref'"
op|','
name|'src_dc_ref'
op|')'
newline|'\n'
name|'dst_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path/dst_file'"
op|','
name|'dst_name'
op|')'
newline|'\n'
name|'dst_dc_ref'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dst-dc-ref'"
op|','
name|'dst_dc_ref'
op|')'
newline|'\n'
name|'return'
string|"'fake_copy_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'src_ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|','
string|"'src_file'"
op|')'
newline|'\n'
name|'dst_ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|','
string|"'dst_file'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_copy'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
name|'str'
op|'('
name|'src_ds_path'
op|')'
op|','
string|"'fake-src-dc-ref'"
op|','
nl|'\n'
name|'str'
op|'('
name|'dst_ds_path'
op|')'
op|','
string|"'fake-dst-dc-ref'"
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_copy_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_move
dedent|''
dedent|''
name|'def'
name|'test_file_move'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'MoveDatastoreFile_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'sourceName'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] tmp/src'"
op|','
name|'sourceName'
op|')'
newline|'\n'
name|'destinationName'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] base/dst'"
op|','
name|'destinationName'
op|')'
newline|'\n'
name|'sourceDatacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'sourceDatacenter'
op|')'
newline|'\n'
name|'destinationDatacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'destinationDatacenter'
op|')'
newline|'\n'
name|'return'
string|"'fake_move_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'src_ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'tmp/src'"
op|')'
newline|'\n'
name|'dst_ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'base/dst'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_move'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-dc-ref'"
op|','
name|'src_ds_path'
op|','
name|'dst_ds_path'
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_move_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_move
dedent|''
dedent|''
name|'def'
name|'test_disk_move'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'MoveVirtualDisk_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'src_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] tmp/src'"
op|','
name|'src_name'
op|')'
newline|'\n'
name|'dest_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] base/dst'"
op|','
name|'dest_name'
op|')'
newline|'\n'
name|'src_datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'src_datacenter'
op|')'
newline|'\n'
name|'dest_datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'dest_datacenter'
op|')'
newline|'\n'
name|'return'
string|"'fake_move_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_util'
op|'.'
name|'disk_move'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-dc-ref'"
op|','
string|"'[ds] tmp/src'"
op|','
string|"'[ds] base/dst'"
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_move_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_copy
dedent|''
dedent|''
name|'def'
name|'test_disk_copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'cm'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_util'
op|'.'
name|'disk_copy'
op|'('
name|'self'
op|'.'
name|'session'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'dc_ref'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'source_ds'
op|','
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'dest_ds'
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'cm'
op|')'
newline|'\n'
name|'_call_method'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
string|"'CopyVirtualDisk_Task'"
op|','
string|"'VirtualDiskManager'"
op|','
nl|'\n'
name|'sourceName'
op|'='
string|"'sentinel.source_ds'"
op|','
nl|'\n'
name|'destDatacenter'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'dc_ref'
op|','
nl|'\n'
name|'sourceDatacenter'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'dc_ref'
op|','
name|'force'
op|'='
name|'False'
op|','
nl|'\n'
name|'destName'
op|'='
string|"'sentinel.dest_ds'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_delete
dedent|''
dedent|''
name|'def'
name|'test_disk_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'cm'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_util'
op|'.'
name|'disk_delete'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-dc-ref'"
op|','
string|"'[ds] tmp/disk.vmdk'"
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_called_once_with'
op|'('
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'cm'
op|')'
newline|'\n'
name|'_call_method'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|','
string|"'DeleteVirtualDisk_Task'"
op|','
string|"'VirtualDiskManager'"
op|','
nl|'\n'
name|'datacenter'
op|'='
string|"'fake-dc-ref'"
op|','
name|'name'
op|'='
string|"'[ds] tmp/disk.vmdk'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mkdir
dedent|''
dedent|''
name|'def'
name|'test_mkdir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'MakeDirectory'"
op|','
name|'method'
op|')'
newline|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'name'
op|')'
newline|'\n'
name|'datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'datacenter'
op|')'
newline|'\n'
name|'createParentDirectories'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'createParentDirectories'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'createParentDirectories'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'session'
op|','
name|'ds_path'
op|','
string|"'fake-dc-ref'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_exists
dedent|''
dedent|''
name|'def'
name|'test_file_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SearchDatastore_Task'"
op|':'
newline|'\n'
indent|'                '
name|'ds_browser'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-browser'"
op|','
name|'ds_browser'
op|')'
newline|'\n'
name|'datastorePath'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datastorePath'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'datastorePath'
op|')'
newline|'\n'
name|'return'
string|"'fake_exists_task'"
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
dedent|''
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
string|"'fake_exists_task'"
op|':'
newline|'\n'
indent|'                '
name|'result_file'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'result_file'
op|'.'
name|'path'
op|'='
string|"'fake-file'"
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'result'
op|'.'
name|'file'
op|'='
op|'['
name|'result_file'
op|']'
newline|'\n'
name|'result'
op|'.'
name|'path'
op|'='
string|"'[ds] fake/path'"
newline|'\n'
nl|'\n'
name|'task_info'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'task_info'
op|'.'
name|'result'
op|'='
name|'result'
newline|'\n'
nl|'\n'
name|'return'
name|'task_info'
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'file_exists'
op|'='
name|'ds_util'
op|'.'
name|'file_exists'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-browser'"
op|','
name|'ds_path'
op|','
string|"'fake-file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'file_exists'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_exists_fails
dedent|''
dedent|''
name|'def'
name|'test_file_exists_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SearchDatastore_Task'"
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'fake_exists_task'"
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
dedent|''
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
string|"'fake_exists_task'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'vexc'
op|'.'
name|'FileNotFoundException'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_obj'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'file_exists'
op|'='
name|'ds_util'
op|'.'
name|'file_exists'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-browser'"
op|','
name|'ds_path'
op|','
string|"'fake-file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'file_exists'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_get_datastore_calls
dedent|''
dedent|''
name|'def'
name|'_mock_get_datastore_calls'
op|'('
name|'self'
op|','
op|'*'
name|'datastores'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Mock vim_util calls made by get_datastore."""'
newline|'\n'
nl|'\n'
name|'datastores_i'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
comment|'# For the moment, at least, this list of datastores is simply passed to'
nl|'\n'
comment|'# get_properties_for_a_collection_of_objects, which we mock below. We'
nl|'\n'
comment|"# don't need to over-complicate the fake function by worrying about its"
nl|'\n'
comment|'# contents.'
nl|'\n'
name|'fake_ds_list'
op|'='
op|'['
string|"'fake-ds'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Mock the call which returns a list of datastores for the cluster'
nl|'\n'
indent|'            '
name|'if'
op|'('
name|'module'
op|'=='
name|'ds_util'
op|'.'
name|'vim_util'
name|'and'
nl|'\n'
name|'method'
op|'=='
string|"'get_dynamic_property'"
name|'and'
nl|'\n'
name|'args'
op|'=='
op|'('
string|"'fake-cluster'"
op|','
string|"'ClusterComputeResource'"
op|','
nl|'\n'
string|"'datastore'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_ds_mor'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'fake_ds_mor'
op|'.'
name|'ManagedObjectReference'
op|'='
name|'fake_ds_list'
newline|'\n'
name|'return'
name|'fake_ds_mor'
newline|'\n'
nl|'\n'
comment|'# Return the datastore result sets we were passed in, in the order'
nl|'\n'
comment|'# given'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'module'
op|'=='
name|'ds_util'
op|'.'
name|'vim_util'
name|'and'
nl|'\n'
name|'method'
op|'=='
string|"'get_properties_for_a_collection_of_objects'"
name|'and'
nl|'\n'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'Datastore'"
name|'and'
nl|'\n'
name|'args'
op|'['
number|'1'
op|']'
op|'=='
name|'fake_ds_list'
op|')'
op|':'
newline|'\n'
comment|'# Start a new iterator over given datastores'
nl|'\n'
indent|'                '
name|'datastores_i'
op|'['
number|'0'
op|']'
op|'='
name|'iter'
op|'('
name|'datastores'
op|')'
newline|'\n'
name|'return'
name|'datastores_i'
op|'['
number|'0'
op|']'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Continue returning results from the current iterator.'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'module'
op|'=='
name|'ds_util'
op|'.'
name|'vim_util'
name|'and'
nl|'\n'
name|'method'
op|'=='
string|"'continue_to_get_objects'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'datastores_i'
op|'['
number|'0'
op|']'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|"# Sentinel that get_datastore's use of vim has changed"
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unexpected vim call in get_datastore: %s'"
op|'%'
name|'method'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_call_method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore
dedent|''
name|'def'
name|'test_get_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds-2"'
op|','
number|'2048'
op|','
number|'1000'
op|','
nl|'\n'
name|'False'
op|','
string|'"normal"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds-3"'
op|','
number|'4096'
op|','
number|'2000'
op|','
nl|'\n'
name|'True'
op|','
string|'"inMaintenance"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"fake-ds"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'units'
op|'.'
name|'Ti'
op|','
name|'result'
op|'.'
name|'capacity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'500'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
name|'result'
op|'.'
name|'freespace'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_regex
dedent|''
name|'def'
name|'test_get_datastore_with_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that matches with a datastore'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"^openstack.*\\d$"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|','
nl|'\n'
name|'datastore_valid_regex'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"openstack-ds0"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_token
dedent|''
name|'def'
name|'test_get_datastore_with_token'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"^ds.*\\d$"'
op|')'
newline|'\n'
name|'fake0'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake0'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds0"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'5'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'fake0'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"foo"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'9'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'fake0'
op|','
string|"'token'"
op|','
string|"'token-0'"
op|')'
newline|'\n'
name|'fake1'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake1'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds2"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'8'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'fake1'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds3"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake0'
op|','
name|'fake1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|','
name|'regex'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"ds2"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_list
dedent|''
name|'def'
name|'test_get_datastore_with_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex containing whitelist of datastores'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"(openstack-ds0|openstack-ds2)"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds1"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds2"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|','
nl|'\n'
name|'datastore_valid_regex'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|'"openstack-ds1"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_regex_error
dedent|''
name|'def'
name|'test_get_datastore_with_regex_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that has no match'
nl|'\n'
comment|'# Checks if code raises DatastoreNotFound with a specific message'
nl|'\n'
indent|'        '
name|'datastore_invalid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"unknown-ds"'
op|')'
newline|'\n'
name|'exp_message'
op|'='
op|'('
string|'"Datastore regex %s did not match any datastores"'
nl|'\n'
op|'%'
name|'datastore_invalid_regex'
op|'.'
name|'pattern'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
comment|'# assertRaisesRegExp would have been a good choice instead of'
nl|'\n'
comment|"# try/catch block, but it's available only from Py 2.7."
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|','
nl|'\n'
name|'datastore_invalid_regex'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'DatastoreNotFound'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_message'
op|','
name|'e'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"DatastoreNotFound Exception was not raised with "'
nl|'\n'
string|'"message: %s"'
op|'%'
name|'exp_message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_without_datastore
dedent|''
dedent|''
name|'def'
name|'test_get_datastore_without_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'None'
op|')'
op|','
name|'cluster'
op|'='
string|'"fake-cluster"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_inaccessible_ds
dedent|''
name|'def'
name|'test_get_datastore_inaccessible_ds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data_store'
op|'='
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
newline|'\n'
name|'data_store'
op|'.'
name|'set'
op|'('
string|'"summary.accessible"'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'data_store'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ds_in_maintenance
dedent|''
dedent|''
name|'def'
name|'test_get_datastore_ds_in_maintenance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data_store'
op|'='
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
newline|'\n'
name|'data_store'
op|'.'
name|'set'
op|'('
string|'"summary.maintenanceMode"'
op|','
string|'"inMaintenance"'
op|')'
newline|'\n'
nl|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'data_store'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'_mock_get_datastore_calls'
op|'('
name|'fake_objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_no_host_in_cluster
dedent|''
dedent|''
name|'def'
name|'test_get_datastore_no_host_in_cluster'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'self'
op|'.'
name|'session'
op|','
string|"'fake-cluster'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_is_datastore_valid
dedent|''
dedent|''
name|'def'
name|'_test_is_datastore_valid'
op|'('
name|'self'
op|','
name|'accessible'
op|'='
name|'True'
op|','
nl|'\n'
name|'maintenance_mode'
op|'='
string|'"normal"'
op|','
nl|'\n'
name|'type'
op|'='
string|'"VMFS"'
op|','
nl|'\n'
name|'datastore_regex'
op|'='
name|'None'
op|','
nl|'\n'
name|'ds_types'
op|'='
name|'ds_util'
op|'.'
name|'ALL_SUPPORTED_DS_TYPES'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'propdict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'propdict'
op|'['
string|'"summary.accessible"'
op|']'
op|'='
name|'accessible'
newline|'\n'
name|'propdict'
op|'['
string|'"summary.maintenanceMode"'
op|']'
op|'='
name|'maintenance_mode'
newline|'\n'
name|'propdict'
op|'['
string|'"summary.type"'
op|']'
op|'='
name|'type'
newline|'\n'
name|'propdict'
op|'['
string|'"summary.name"'
op|']'
op|'='
string|'"ds-1"'
newline|'\n'
nl|'\n'
name|'return'
name|'ds_util'
op|'.'
name|'_is_datastore_valid'
op|'('
name|'propdict'
op|','
name|'datastore_regex'
op|','
name|'ds_types'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid
dedent|''
name|'def'
name|'test_is_datastore_valid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ds_type'
name|'in'
name|'ds_util'
op|'.'
name|'ALL_SUPPORTED_DS_TYPES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'True'
op|','
nl|'\n'
string|'"normal"'
op|','
nl|'\n'
name|'ds_type'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid_inaccessible_ds
dedent|''
dedent|''
name|'def'
name|'test_is_datastore_valid_inaccessible_ds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'False'
op|','
nl|'\n'
string|'"normal"'
op|','
nl|'\n'
string|'"VMFS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid_ds_in_maintenance
dedent|''
name|'def'
name|'test_is_datastore_valid_ds_in_maintenance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'True'
op|','
nl|'\n'
string|'"inMaintenance"'
op|','
nl|'\n'
string|'"VMFS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid_ds_type_invalid
dedent|''
name|'def'
name|'test_is_datastore_valid_ds_type_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'True'
op|','
nl|'\n'
string|'"normal"'
op|','
nl|'\n'
string|'"vfat"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid_not_matching_regex
dedent|''
name|'def'
name|'test_is_datastore_valid_not_matching_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'datastore_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"ds-2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'True'
op|','
nl|'\n'
string|'"normal"'
op|','
nl|'\n'
string|'"VMFS"'
op|','
nl|'\n'
name|'datastore_regex'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_datastore_valid_matching_regex
dedent|''
name|'def'
name|'test_is_datastore_valid_matching_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'datastore_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"ds-1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_test_is_datastore_valid'
op|'('
name|'True'
op|','
nl|'\n'
string|'"normal"'
op|','
nl|'\n'
string|'"VMFS"'
op|','
nl|'\n'
name|'datastore_regex'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
