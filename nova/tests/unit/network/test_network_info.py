begin_unit
comment|'# Copyright 2011 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network_cache_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'netutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RouteTests
name|'class'
name|'RouteTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_route_with_attrs
indent|'    '
name|'def'
name|'test_create_route_with_attrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'route'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
newline|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'route'
op|'['
string|"'cidr'"
op|']'
op|','
string|"'0.0.0.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'route'
op|'['
string|"'gateway'"
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'192.168.1.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'route'
op|'['
string|"'interface'"
op|']'
op|','
string|"'eth0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_routes_equal
dedent|''
name|'def'
name|'test_routes_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'route1'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
op|')'
newline|'\n'
name|'route2'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'route1'
op|','
name|'route2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_routes_not_equal
dedent|''
name|'def'
name|'test_routes_not_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'route1'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'route2'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'route1'
op|','
name|'route2'
op|')'
newline|'\n'
nl|'\n'
name|'route1'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.1/24'"
op|','
name|'gateway'
op|'='
string|"'1.1.1.1'"
op|')'
newline|'\n'
name|'route2'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.1/24'"
op|','
name|'gateway'
op|'='
string|"'1.1.1.2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'route1'
op|','
name|'route2'
op|')'
newline|'\n'
nl|'\n'
name|'route1'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.1/24'"
op|','
name|'interface'
op|'='
string|"'tap0'"
op|')'
newline|'\n'
name|'route2'
op|'='
name|'model'
op|'.'
name|'Route'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.1/24'"
op|','
name|'interface'
op|'='
string|"'tap1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'route1'
op|','
name|'route2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'route'
op|'='
name|'model'
op|'.'
name|'Route'
op|'.'
name|'hydrate'
op|'('
nl|'\n'
op|'{'
string|"'gateway'"
op|':'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.1'"
op|')'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'route'
op|'['
string|"'cidr'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'route'
op|'['
string|"'gateway'"
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'192.168.1.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'route'
op|'['
string|"'interface'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IPTests
dedent|''
dedent|''
name|'class'
name|'IPTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_ip_equal
indent|'    '
name|'def'
name|'test_ip_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip1'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'ip2'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ip1'
op|','
name|'ip2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ip_not_equal
dedent|''
name|'def'
name|'test_ip_not_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip1'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'ip2'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'172.0.0.3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'ip1'
op|','
name|'ip2'
op|')'
newline|'\n'
nl|'\n'
name|'ip1'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'127.0.0.1'"
op|','
name|'type'
op|'='
number|'1'
op|')'
newline|'\n'
name|'ip2'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'172.0.0.1'"
op|','
name|'type'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'ip1'
op|','
name|'ip2'
op|')'
newline|'\n'
nl|'\n'
name|'ip1'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'127.0.0.1'"
op|','
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'ip2'
op|'='
name|'model'
op|'.'
name|'IP'
op|'('
name|'address'
op|'='
string|"'172.0.0.1'"
op|','
name|'version'
op|'='
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'ip1'
op|','
name|'ip2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIPTests
dedent|''
dedent|''
name|'class'
name|'FixedIPTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_createnew_fixed_ip_with_attrs
indent|'    '
name|'def'
name|'test_createnew_fixed_ip_with_attrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'192.168.1.100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|','
string|"'192.168.1.100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'floating_ips'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'type'"
op|']'
op|','
string|"'fixed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'version'"
op|']'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_fixed_ipv6
dedent|''
name|'def'
name|'test_create_fixed_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|','
string|"'::1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'floating_ips'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'type'"
op|']'
op|','
string|"'fixed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'version'"
op|']'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_fixed_bad_ip_fails
dedent|''
name|'def'
name|'test_create_fixed_bad_ip_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidIpAddressError'
op|','
nl|'\n'
name|'model'
op|'.'
name|'FixedIP'
op|','
nl|'\n'
name|'address'
op|'='
string|"'picklespicklespickles'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_equate_two_fixed_ips
dedent|''
name|'def'
name|'test_equate_two_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'fixed_ip2'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_equate_two_dissimilar_fixed_ips_fails
dedent|''
name|'def'
name|'test_equate_two_dissimilar_fixed_ips_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'fixed_ip2'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip2'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'type'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'fixed_ip2'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'type'
op|'='
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip2'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'version'
op|'='
string|"'6'"
op|')'
newline|'\n'
name|'fixed_ip2'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'version'
op|'='
string|"'4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip2'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'floating_ips'
op|'='
string|"'1.1.1.1'"
op|')'
newline|'\n'
name|'fixed_ip2'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'::1'"
op|','
name|'floating_ips'
op|'='
string|"'8.8.8.8'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'fixed_ip'
op|','
name|'fixed_ip2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'.'
name|'hydrate'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'floating_ips'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'type'"
op|']'
op|','
string|"'fixed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'fixed_ip'
op|'['
string|"'version'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_floating_ip
dedent|''
name|'def'
name|'test_add_floating_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'192.168.1.100'"
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'add_floating_ip'
op|'('
string|"'192.168.1.101'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'floating_ips'"
op|']'
op|','
op|'['
string|"'192.168.1.101'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_floating_ip_repeatedly_only_one_instance
dedent|''
name|'def'
name|'test_add_floating_ip_repeatedly_only_one_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ip'
op|'='
name|'model'
op|'.'
name|'FixedIP'
op|'('
name|'address'
op|'='
string|"'192.168.1.100'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'.'
name|'add_floating_ip'
op|'('
string|"'192.168.1.101'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ip'
op|'['
string|"'floating_ips'"
op|']'
op|','
op|'['
string|"'192.168.1.101'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SubnetTests
dedent|''
dedent|''
name|'class'
name|'SubnetTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_subnet_with_attrs
indent|'    '
name|'def'
name|'test_create_subnet_with_attrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'route1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'cidr'"
op|']'
op|','
string|"'10.10.0.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'dns'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'1.2.3.4'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'2.3.4.5'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'gateway'"
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'10.10.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'ips'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.2'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.3'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'routes'"
op|']'
op|','
op|'['
name|'route1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'version'"
op|']'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_subnet_equal
dedent|''
name|'def'
name|'test_subnet_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_subnet_not_equal
dedent|''
name|'def'
name|'test_subnet_not_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'cidr'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'cidr'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'dns'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'dns'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'gateway'
op|'='
string|"'1.1.1.1/24'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'gateway'
op|'='
string|"'2.2.2.1/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'ips'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'ips'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'routes'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'routes'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
name|'subnet1'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'version'
op|'='
string|"'4'"
op|')'
newline|'\n'
name|'subnet2'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'('
name|'version'
op|'='
string|"'6'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'subnet1'
op|','
name|'subnet2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_route
dedent|''
name|'def'
name|'test_add_route'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'route1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
newline|'\n'
name|'route2'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|'{'
string|"'cidr'"
op|':'
string|"'1.1.1.1/24'"
op|'}'
op|')'
newline|'\n'
name|'subnet'
op|'.'
name|'add_route'
op|'('
name|'route2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'routes'"
op|']'
op|','
op|'['
name|'route1'
op|','
name|'route2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_route_a_lot
dedent|''
name|'def'
name|'test_add_route_a_lot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'route1'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
newline|'\n'
name|'route2'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|'{'
string|"'cidr'"
op|':'
string|"'1.1.1.1/24'"
op|'}'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'subnet'
op|'.'
name|'add_route'
op|'('
name|'route2'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'routes'"
op|']'
op|','
op|'['
name|'route1'
op|','
name|'route2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_dns
dedent|''
name|'def'
name|'test_add_dns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'dns'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'9.9.9.9'"
op|')'
op|')'
newline|'\n'
name|'subnet'
op|'.'
name|'add_dns'
op|'('
name|'dns'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'dns'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'1.2.3.4'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'2.3.4.5'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'9.9.9.9'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_dns_a_lot
dedent|''
name|'def'
name|'test_add_dns_a_lot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'subnet'
op|'.'
name|'add_dns'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'9.9.9.9'"
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'dns'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'1.2.3.4'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'2.3.4.5'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'9.9.9.9'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_ip
dedent|''
name|'def'
name|'test_add_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'subnet'
op|'.'
name|'add_ip'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.102'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'ips'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.2'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.3'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.102'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_ip_a_lot
dedent|''
name|'def'
name|'test_add_ip_a_lot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'subnet'
op|'.'
name|'add_ip'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.102'"
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'ips'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.2'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.3'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'192.168.1.102'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet_dict'
op|'='
op|'{'
nl|'\n'
string|"'cidr'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'dns'"
op|':'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'1.1.1.1'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'2.2.2.2'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'routes'"
op|':'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
op|']'
op|','
nl|'\n'
string|"'version'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'gateway'"
op|':'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'3.3.3.3'"
op|')'
op|')'
op|'}'
newline|'\n'
name|'subnet'
op|'='
name|'model'
op|'.'
name|'Subnet'
op|'.'
name|'hydrate'
op|'('
name|'subnet_dict'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'cidr'"
op|']'
op|','
string|"'255.255.255.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'dns'"
op|']'
op|','
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'1.1.1.1'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'gateway'"
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'3.3.3.3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'ips'"
op|']'
op|','
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'2.2.2.2'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'routes'"
op|']'
op|','
op|'['
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_route'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'subnet'
op|'['
string|"'version'"
op|']'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkTests
dedent|''
dedent|''
name|'class'
name|'NetworkTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_network
indent|'    '
name|'def'
name|'test_create_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'bridge'"
op|']'
op|','
string|"'br0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'label'"
op|']'
op|','
string|"'public'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'subnets'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'255.255.255.255'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_subnet
dedent|''
name|'def'
name|'test_add_subnet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
newline|'\n'
name|'network'
op|'.'
name|'add_subnet'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'0.0.0.0'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'subnets'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'255.255.255.255'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'0.0.0.0'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_subnet_a_lot
dedent|''
name|'def'
name|'test_add_subnet_a_lot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'.'
name|'add_subnet'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'0.0.0.0'"
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'subnets'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'255.255.255.255'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'0.0.0.0'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_equal
dedent|''
name|'def'
name|'test_network_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network1'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
op|')'
newline|'\n'
name|'network2'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network1'
op|','
name|'network2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_network_not_equal
dedent|''
name|'def'
name|'test_network_not_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network1'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'id'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'network2'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'id'
op|'='
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'network1'
op|','
name|'network2'
op|')'
newline|'\n'
nl|'\n'
name|'network1'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'bridge'
op|'='
string|"'br-int'"
op|')'
newline|'\n'
name|'network2'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'bridge'
op|'='
string|"'br0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'network1'
op|','
name|'network2'
op|')'
newline|'\n'
nl|'\n'
name|'network1'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'label'
op|'='
string|"'net1'"
op|')'
newline|'\n'
name|'network2'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'label'
op|'='
string|"'net2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'network1'
op|','
name|'network2'
op|')'
newline|'\n'
nl|'\n'
name|'network1'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'subnets'
op|'='
string|"'1.1.1.0/24'"
op|')'
newline|'\n'
name|'network2'
op|'='
name|'model'
op|'.'
name|'Network'
op|'('
name|'subnets'
op|'='
string|"'2.2.2.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'network1'
op|','
name|'network2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
newline|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'255.255.255.255'"
op|')'
op|')'
newline|'\n'
name|'network'
op|'='
name|'model'
op|'.'
name|'Network'
op|'.'
name|'hydrate'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'bridge'"
op|']'
op|','
string|"'br0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'label'"
op|']'
op|','
string|"'public'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'subnets'"
op|']'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'255.255.255.255'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VIFTests
dedent|''
dedent|''
name|'class'
name|'VIFTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_vif
indent|'    '
name|'def'
name|'test_create_vif'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'address'"
op|']'
op|','
string|"'aa:aa:aa:aa:aa:aa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'network'"
op|']'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vif_equal
dedent|''
name|'def'
name|'test_vif_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vif_not_equal
dedent|''
name|'def'
name|'test_vif_not_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'id'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'address'
op|'='
string|"'00:00:00:00:00:11'"
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'address'
op|'='
string|"'00:00:00:00:00:22'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'network'
op|'='
string|"'net1'"
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'network'
op|'='
string|"'net2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'type'
op|'='
string|"'ovs'"
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'type'
op|'='
string|"'linuxbridge'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'devname'
op|'='
string|"'ovs1234'"
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'devname'
op|'='
string|"'linuxbridge1234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'qbh_params'
op|'='
number|'1'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'qbh_params'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'qbg_params'
op|'='
number|'1'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'qbg_params'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'active'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'active'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'vnic_type'
op|'='
name|'model'
op|'.'
name|'VNIC_TYPE_NORMAL'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'vnic_type'
op|'='
name|'model'
op|'.'
name|'VNIC_TYPE_DIRECT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'profile'
op|'='
op|'{'
string|"'pci_slot'"
op|':'
string|"'0000:0a:00.1'"
op|'}'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'profile'
op|'='
op|'{'
string|"'pci_slot'"
op|':'
string|"'0000:0a:00.2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
name|'vif1'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'preserve_on_delete'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vif2'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'('
name|'preserve_on_delete'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'vif1'
op|','
name|'vif2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_vif_with_type
dedent|''
name|'def'
name|'test_create_vif_with_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif_dict'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'address'
op|'='
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|','
nl|'\n'
name|'type'
op|'='
string|"'bridge'"
op|')'
newline|'\n'
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
name|'vif_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'address'"
op|']'
op|','
string|"'aa:aa:aa:aa:aa:aa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'type'"
op|']'
op|','
string|"'bridge'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'network'"
op|']'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vif_get_fixed_ips
dedent|''
name|'def'
name|'test_vif_get_fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'fixed_ips'
op|'='
name|'vif'
op|'.'
name|'fixed_ips'
op|'('
op|')'
newline|'\n'
name|'ips'
op|'='
op|'['
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.2'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
name|'dict'
op|'('
name|'address'
op|'='
string|"'10.10.0.3'"
op|')'
op|')'
nl|'\n'
op|']'
op|'*'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fixed_ips'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vif_get_floating_ips
dedent|''
name|'def'
name|'test_vif_get_floating_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'add_floating_ip'
op|'('
string|"'192.168.1.1'"
op|')'
newline|'\n'
name|'floating_ips'
op|'='
name|'vif'
op|'.'
name|'floating_ips'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'floating_ips'
op|','
op|'['
string|"'192.168.1.1'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vif_get_labeled_ips
dedent|''
name|'def'
name|'test_vif_get_labeled_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'labeled_ips'
op|'='
name|'vif'
op|'.'
name|'labeled_ips'
op|'('
op|')'
newline|'\n'
name|'ip_dict'
op|'='
op|'{'
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.2'"
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.3'"
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
op|')'
op|']'
op|'*'
number|'2'
op|','
nl|'\n'
string|"'network_label'"
op|':'
string|"'public'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'labeled_ips'
op|','
name|'ip_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'.'
name|'hydrate'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'address'"
op|']'
op|','
string|"'aa:aa:aa:aa:aa:aa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'network'"
op|']'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate_vif_with_type
dedent|''
name|'def'
name|'test_hydrate_vif_with_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif_dict'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'address'
op|'='
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|','
nl|'\n'
name|'type'
op|'='
string|"'bridge'"
op|')'
newline|'\n'
name|'vif'
op|'='
name|'model'
op|'.'
name|'VIF'
op|'.'
name|'hydrate'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
name|'vif_dict'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'address'"
op|']'
op|','
string|"'aa:aa:aa:aa:aa:aa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'type'"
op|']'
op|','
string|"'bridge'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vif'
op|'['
string|"'network'"
op|']'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkInfoTests
dedent|''
dedent|''
name|'class'
name|'NetworkInfoTests'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_create_model
indent|'    '
name|'def'
name|'test_create_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ninfo'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.2'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.3'"
op|'}'
op|')'
op|']'
op|'*'
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_async_model
dedent|''
name|'def'
name|'test_create_async_model'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|async_wrapper
indent|'        '
name|'def'
name|'async_wrapper'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'async_wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ninfo'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.2'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.3'"
op|'}'
op|')'
op|']'
op|'*'
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_async_model_exceptions
dedent|''
name|'def'
name|'test_create_async_model_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|async_wrapper
indent|'        '
name|'def'
name|'async_wrapper'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'async_wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'ninfo'
op|'.'
name|'wait'
op|')'
newline|'\n'
comment|"# 2nd one doesn't raise"
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ninfo'
op|'.'
name|'wait'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# Test that do_raise=False works on .wait()'
nl|'\n'
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'async_wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ninfo'
op|'.'
name|'wait'
op|'('
name|'do_raise'
op|'='
name|'False'
op|')'
op|')'
newline|'\n'
comment|'# Test we also raise calling a method'
nl|'\n'
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'async_wrapper'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'ninfo'
op|'.'
name|'fixed_ips'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_floating_ips
dedent|''
name|'def'
name|'test_get_floating_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
newline|'\n'
name|'vif'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'add_floating_ip'
op|'('
string|"'192.168.1.1'"
op|')'
newline|'\n'
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'vif'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ninfo'
op|'.'
name|'floating_ips'
op|'('
op|')'
op|','
op|'['
string|"'192.168.1.1'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hydrate
dedent|''
name|'def'
name|'test_hydrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ninfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'model'
op|'.'
name|'NetworkInfo'
op|'.'
name|'hydrate'
op|'('
name|'ninfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ninfo'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|','
nl|'\n'
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.2'"
op|'}'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_fixed_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.0.3'"
op|'}'
op|')'
op|']'
op|'*'
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_injected_network_scenario
dedent|''
name|'def'
name|'_setup_injected_network_scenario'
op|'('
name|'self'
op|','
name|'should_inject'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_ipv4'
op|'='
name|'True'
op|','
name|'use_ipv6'
op|'='
name|'False'
op|','
nl|'\n'
name|'gateway'
op|'='
name|'True'
op|','
name|'dns'
op|'='
name|'True'
op|','
nl|'\n'
name|'two_interfaces'
op|'='
name|'False'
op|','
nl|'\n'
name|'libvirt_virt_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check that netutils properly decides whether to inject based on\n           whether the supplied subnet is static or dynamic.\n        """'
newline|'\n'
name|'network'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_network'
op|'('
op|'{'
string|"'subnets'"
op|':'
op|'['
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'subnet_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'not'
name|'gateway'
op|':'
newline|'\n'
indent|'            '
name|'subnet_dict'
op|'['
string|"'gateway'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'dns'
op|':'
newline|'\n'
indent|'            '
name|'subnet_dict'
op|'['
string|"'dns'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'should_inject'
op|':'
newline|'\n'
indent|'            '
name|'subnet_dict'
op|'['
string|"'dhcp_server'"
op|']'
op|'='
string|"'10.10.0.1'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'use_ipv4'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'.'
name|'add_subnet'
op|'('
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'subnet_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'should_inject'
name|'and'
name|'use_ipv6'
op|':'
newline|'\n'
indent|'            '
name|'gateway_ip'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
nl|'\n'
name|'address'
op|'='
string|"'1234:567::1'"
op|')'
op|')'
newline|'\n'
name|'ip'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
name|'dict'
op|'('
nl|'\n'
name|'address'
op|'='
string|"'1234:567::2'"
op|')'
op|')'
newline|'\n'
name|'ipv6_subnet_dict'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'cidr'
op|'='
string|"'1234:567::/48'"
op|','
nl|'\n'
name|'gateway'
op|'='
name|'gateway_ip'
op|','
nl|'\n'
name|'dns'
op|'='
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'2001:4860:4860::8888'"
op|')'
op|')'
op|','
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'2001:4860:4860::8844'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'ips'
op|'='
op|'['
name|'ip'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'gateway'
op|':'
newline|'\n'
indent|'                '
name|'ipv6_subnet_dict'
op|'['
string|"'gateway'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'network'
op|'.'
name|'add_subnet'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'ipv6_subnet_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Behave as though CONF.flat_injected is True'
nl|'\n'
dedent|''
name|'network'
op|'['
string|"'meta'"
op|']'
op|'['
string|"'injected'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'vif'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|'{'
string|"'network'"
op|':'
name|'network'
op|'}'
op|')'
newline|'\n'
name|'vifs'
op|'='
op|'['
name|'vif'
op|']'
newline|'\n'
name|'if'
name|'two_interfaces'
op|':'
newline|'\n'
indent|'            '
name|'vifs'
op|'.'
name|'append'
op|'('
name|'vif'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'nwinfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
name|'vifs'
op|')'
newline|'\n'
name|'return'
name|'netutils'
op|'.'
name|'get_injected_network_template'
op|'('
nl|'\n'
name|'nwinfo'
op|','
name|'use_ipv6'
op|'='
name|'use_ipv6'
op|','
name|'libvirt_virt_type'
op|'='
name|'libvirt_virt_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_injection_dynamic
dedent|''
name|'def'
name|'test_injection_dynamic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
name|'None'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'should_inject'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_injection_static
dedent|''
name|'def'
name|'test_injection_static'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_no_gateway
dedent|''
name|'def'
name|'test_injection_static_no_gateway'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    dns-nameservers 1.2.3.4 2.3.4.5\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'gateway'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_no_dns
dedent|''
name|'def'
name|'test_injection_static_no_dns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'dns'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_overriden_template
dedent|''
name|'def'
name|'test_injection_static_overriden_template'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'set_override'
op|'('
nl|'\n'
string|"'injected_network_template'"
op|','
nl|'\n'
string|"'nova/tests/unit/network/interfaces-override.template'"
op|')'
newline|'\n'
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\n    post-up ip route add 0.0.0.0/24 via 192.168.1.1 dev eth0\n    pre-down ip route del 0.0.0.0/24 via 192.168.1.1 dev eth0\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_ipv6
dedent|''
name|'def'
name|'test_injection_static_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\niface eth0 inet6 static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 1234:567::2\n    netmask 48\n    gateway 1234:567::1\n    dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_ipv6_no_gateway
dedent|''
name|'def'
name|'test_injection_static_ipv6_no_gateway'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    dns-nameservers 1.2.3.4 2.3.4.5\niface eth0 inet6 static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 1234:567::2\n    netmask 48\n    dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|','
nl|'\n'
name|'gateway'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_static_with_ipv4_off
dedent|''
name|'def'
name|'test_injection_static_with_ipv4_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
name|'None'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'use_ipv4'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_ipv6_two_interfaces
dedent|''
name|'def'
name|'test_injection_ipv6_two_interfaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\niface eth0 inet6 static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 1234:567::2\n    netmask 48\n    gateway 1234:567::1\n    dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844\n\nauto eth1\niface eth1 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\niface eth1 inet6 static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 1234:567::2\n    netmask 48\n    gateway 1234:567::1\n    dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|','
nl|'\n'
name|'two_interfaces'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_ipv6_with_lxc
dedent|''
name|'def'
name|'test_injection_ipv6_with_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\n    post-up ip -6 addr add 1234:567::2/48 dev ${IFACE}\n    post-up ip -6 route add default via 1234:567::1 dev ${IFACE}\n\nauto eth1\niface eth1 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    gateway 10.10.0.1\n    dns-nameservers 1.2.3.4 2.3.4.5\n    post-up ip -6 addr add 1234:567::2/48 dev ${IFACE}\n    post-up ip -6 route add default via 1234:567::1 dev ${IFACE}\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
nl|'\n'
name|'use_ipv6'
op|'='
name|'True'
op|','
name|'two_interfaces'
op|'='
name|'True'
op|','
name|'libvirt_virt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_injection_ipv6_with_lxc_no_gateway
dedent|''
name|'def'
name|'test_injection_ipv6_with_lxc_no_gateway'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"""\\\n# Injected by Nova on instance boot\n#\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    dns-nameservers 1.2.3.4 2.3.4.5\n    post-up ip -6 addr add 1234:567::2/48 dev ${IFACE}\n\nauto eth1\niface eth1 inet static\n    hwaddress ether aa:aa:aa:aa:aa:aa\n    address 10.10.0.2\n    netmask 255.255.255.0\n    broadcast 10.10.0.255\n    dns-nameservers 1.2.3.4 2.3.4.5\n    post-up ip -6 addr add 1234:567::2/48 dev ${IFACE}\n"""'
newline|'\n'
name|'template'
op|'='
name|'self'
op|'.'
name|'_setup_injected_network_scenario'
op|'('
nl|'\n'
name|'use_ipv6'
op|'='
name|'True'
op|','
name|'gateway'
op|'='
name|'False'
op|','
name|'two_interfaces'
op|'='
name|'True'
op|','
nl|'\n'
name|'libvirt_virt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'template'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNetworkMetadata
dedent|''
dedent|''
name|'class'
name|'TestNetworkMetadata'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNetworkMetadata'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'='
name|'model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'ethernet'"
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Give this vif ipv4 and ipv6 dhcp subnets'
nl|'\n'
name|'ipv4_subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'ipv6_subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'version'
op|'='
number|'6'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'='
name|'ipv4_subnet'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'1'
op|']'
op|'='
name|'ipv6_subnet'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'mtu'"
op|']'
op|'='
number|'1500'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_metadata_json
dedent|''
name|'def'
name|'test_get_network_metadata_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'net_metadata'
op|'='
name|'netutils'
op|'.'
name|'get_network_metadata'
op|'('
name|'self'
op|'.'
name|'netinfo'
op|','
nl|'\n'
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Physical Ethernet'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'phy'"
op|','
nl|'\n'
string|"'ethernet_mac_address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'vif_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'mtu'"
op|':'
number|'1500'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'net_metadata'
op|'['
string|"'links'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# IPv4 Network'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network0'"
op|','
nl|'\n'
string|"'link'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv4'"
op|','
nl|'\n'
string|"'ip_address'"
op|':'
string|"'10.10.0.2'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'routes'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'10.10.0.1'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'net_metadata'
op|'['
string|"'networks'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network1'"
op|','
nl|'\n'
string|"'link'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv6'"
op|','
nl|'\n'
string|"'ip_address'"
op|':'
string|"'fd00::2'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'ffff:ffff:ffff::'"
op|','
nl|'\n'
string|"'routes'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'fd00::1'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'ffff:ffff:ffff::'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'fd00::1:1'"
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'net_metadata'
op|'['
string|"'networks'"
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_metadata_json_dhcp
dedent|''
name|'def'
name|'test_get_network_metadata_json_dhcp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ipv4_subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'subnet_dict'
op|'='
name|'dict'
op|'('
name|'dhcp_server'
op|'='
string|"'1.1.1.1'"
op|')'
op|','
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'ipv6_subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
name|'subnet_dict'
op|'='
name|'dict'
op|'('
name|'dhcp_server'
op|'='
string|"'1234:567::'"
op|')'
op|','
name|'version'
op|'='
number|'6'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'='
name|'ipv4_subnet'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'1'
op|']'
op|'='
name|'ipv6_subnet'
newline|'\n'
name|'net_metadata'
op|'='
name|'netutils'
op|'.'
name|'get_network_metadata'
op|'('
name|'self'
op|'.'
name|'netinfo'
op|','
nl|'\n'
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# IPv4 Network'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network0'"
op|','
nl|'\n'
string|"'link'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv4_dhcp'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'net_metadata'
op|'['
string|"'networks'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# IPv6 Network'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network1'"
op|','
nl|'\n'
string|"'link'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv6_dhcp'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'net_metadata'
op|'['
string|"'networks'"
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_nets
dedent|''
name|'def'
name|'test__get_nets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_net'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network0'"
op|','
nl|'\n'
string|"'ip_address'"
op|':'
string|"'10.10.0.2'"
op|','
nl|'\n'
string|"'link'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'routes'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'gateway'"
op|':'
string|"'10.10.0.1'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'network'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'network'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv4'"
nl|'\n'
op|'}'
newline|'\n'
name|'net'
op|'='
name|'netutils'
op|'.'
name|'_get_nets'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|','
number|'4'
op|','
number|'0'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_net'
op|','
name|'net'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_eth_link
dedent|''
name|'def'
name|'test__get_eth_link'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_link'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'vif_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'vif'"
op|','
nl|'\n'
string|"'ethernet_mac_address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'mtu'"
op|':'
number|'1500'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|'='
string|"'vif'"
newline|'\n'
name|'link'
op|'='
name|'netutils'
op|'.'
name|'_get_eth_link'
op|'('
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_link'
op|','
name|'link'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_eth_link_physical
dedent|''
name|'def'
name|'test__get_eth_link_physical'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_link'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'interface1'"
op|','
nl|'\n'
string|"'vif_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'phy'"
op|','
nl|'\n'
string|"'ethernet_mac_address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'mtu'"
op|':'
number|'1500'
nl|'\n'
op|'}'
newline|'\n'
name|'link'
op|'='
name|'netutils'
op|'.'
name|'_get_eth_link'
op|'('
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_link'
op|','
name|'link'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_default_route
dedent|''
name|'def'
name|'test__get_default_route'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v4_expected'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'10.10.0.1'"
op|','
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'v6_expected'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'network'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'fd00::1'"
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'v4'
op|'='
name|'netutils'
op|'.'
name|'_get_default_route'
op|'('
nl|'\n'
number|'4'
op|','
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v4_expected'
op|','
name|'v4'
op|')'
newline|'\n'
nl|'\n'
name|'v6'
op|'='
name|'netutils'
op|'.'
name|'_get_default_route'
op|'('
nl|'\n'
number|'6'
op|','
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v6_expected'
op|','
name|'v6'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test for no gateway'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'gateway'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'no_route'
op|'='
name|'netutils'
op|'.'
name|'_get_default_route'
op|'('
nl|'\n'
number|'4'
op|','
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'no_route'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__get_dns_services
dedent|''
name|'def'
name|'test__get_dns_services'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_dns'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'dns'"
op|','
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'dns'"
op|','
string|"'address'"
op|':'
string|"'2.3.4.5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'dns'"
op|','
string|"'address'"
op|':'
string|"'3.4.5.6'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
name|'version'
op|'='
number|'4'
op|')'
newline|'\n'
name|'subnet'
op|'['
string|"'dns'"
op|']'
op|'.'
name|'append'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'3.4.5.6'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'dns'
op|'='
name|'netutils'
op|'.'
name|'_get_dns_services'
op|'('
name|'subnet'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_dns'
op|','
name|'dns'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_metadata
dedent|''
name|'def'
name|'test_get_network_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_json'
op|'='
op|'{'
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"ethernet_mac_address"'
op|':'
string|'"aa:aa:aa:aa:aa:aa"'
op|','
nl|'\n'
string|'"id"'
op|':'
string|'"interface0"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"phy"'
op|','
nl|'\n'
string|'"vif_id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"mtu"'
op|':'
number|'1500'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"ethernet_mac_address"'
op|':'
string|'"aa:aa:aa:aa:aa:ab"'
op|','
nl|'\n'
string|'"id"'
op|':'
string|'"interface1"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"phy"'
op|','
nl|'\n'
string|'"vif_id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"mtu"'
op|':'
number|'1500'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"network0"'
op|','
nl|'\n'
string|'"ip_address"'
op|':'
string|'"10.10.0.2"'
op|','
nl|'\n'
string|'"link"'
op|':'
string|'"interface0"'
op|','
nl|'\n'
string|'"netmask"'
op|':'
string|'"255.255.255.0"'
op|','
nl|'\n'
string|'"network_id"'
op|':'
nl|'\n'
string|'"00000000-0000-0000-0000-000000000000"'
op|','
nl|'\n'
string|'"routes"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"gateway"'
op|':'
string|'"10.10.0.1"'
op|','
nl|'\n'
string|'"netmask"'
op|':'
string|'"0.0.0.0"'
op|','
nl|'\n'
string|'"network"'
op|':'
string|'"0.0.0.0"'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"gateway"'
op|':'
string|'"192.168.1.1"'
op|','
nl|'\n'
string|'"netmask"'
op|':'
string|'"255.255.255.0"'
op|','
nl|'\n'
string|'"network"'
op|':'
string|'"0.0.0.0"'
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"ipv4"'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'network1'"
op|','
nl|'\n'
string|"'ip_address'"
op|':'
string|"'fd00::2'"
op|','
nl|'\n'
string|"'link'"
op|':'
string|"'interface0'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'ffff:ffff:ffff::'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
string|"'00000000-0000-0000-0000-000000000000'"
op|','
nl|'\n'
string|"'routes'"
op|':'
op|'['
op|'{'
string|"'gateway'"
op|':'
string|"'fd00::1'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'::'"
op|','
nl|'\n'
string|"'network'"
op|':'
string|"'::'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'gateway'"
op|':'
string|"'fd00::1:1'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'ffff:ffff:ffff::'"
op|','
nl|'\n'
string|"'network'"
op|':'
string|"'::'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'ipv6'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"network2"'
op|','
nl|'\n'
string|'"ip_address"'
op|':'
string|'"192.168.0.2"'
op|','
nl|'\n'
string|'"link"'
op|':'
string|'"interface1"'
op|','
nl|'\n'
string|'"netmask"'
op|':'
string|'"255.255.255.0"'
op|','
nl|'\n'
string|'"network_id"'
op|':'
nl|'\n'
string|'"11111111-1111-1111-1111-111111111111"'
op|','
nl|'\n'
string|'"routes"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"gateway"'
op|':'
string|'"192.168.0.1"'
op|','
nl|'\n'
string|'"netmask"'
op|':'
string|'"0.0.0.0"'
op|','
nl|'\n'
string|'"network"'
op|':'
string|'"0.0.0.0"'
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"ipv4"'
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'services'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|','
string|"'type'"
op|':'
string|"'dns'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2.3.4.5'"
op|','
string|"'type'"
op|':'
string|"'dns'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1:2:3:4::'"
op|','
string|"'type'"
op|':'
string|"'dns'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2:3:4:5::'"
op|','
string|"'type'"
op|':'
string|"'dns'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|'='
op|'('
nl|'\n'
string|"'00000000-0000-0000-0000-000000000000'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Add a second NIC'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'.'
name|'append'
op|'('
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'ethernet'"
op|','
string|"'address'"
op|':'
string|"'aa:aa:aa:aa:aa:ab'"
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.2'"
op|'}'
op|')'
newline|'\n'
name|'gateway_address'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_ip'
op|'('
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'ipv4_subnet'
op|'='
name|'fake_network_cache_model'
op|'.'
name|'new_subnet'
op|'('
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
string|"'gateway'"
op|':'
name|'gateway_address'
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'address'
op|']'
op|','
string|"'routes'"
op|':'
op|'['
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'1'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|'='
op|'('
nl|'\n'
string|"'11111111-1111-1111-1111-111111111111'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'1'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'='
name|'ipv4_subnet'
newline|'\n'
name|'self'
op|'.'
name|'netinfo'
op|'['
number|'1'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'mtu'"
op|']'
op|'='
number|'1500'
newline|'\n'
nl|'\n'
name|'network_json'
op|'='
name|'netutils'
op|'.'
name|'get_network_metadata'
op|'('
name|'self'
op|'.'
name|'netinfo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_json'
op|','
name|'network_json'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
