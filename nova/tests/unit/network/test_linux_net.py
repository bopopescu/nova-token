begin_unit
comment|'# Copyright 2011 NTT'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'calendar'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'mox3'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'netifaces'
newline|'\n'
name|'from'
name|'oslo_concurrency'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'fileutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'linux_net'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'share_dhcp_address'"
op|','
string|"'nova.objects.network'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'network_device_mtu'"
op|','
string|"'nova.objects.network'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|HOST
name|'HOST'
op|'='
string|'"testhost"'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
op|'{'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|':'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_instance00'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1985'
op|','
number|'10'
op|','
number|'26'
op|','
number|'1'
op|','
number|'35'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'fake_instance00'"
op|'}'
op|','
nl|'\n'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|':'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_instance01'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1985'
op|','
number|'10'
op|','
number|'26'
op|','
number|'1'
op|','
number|'35'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'fake_instance01'"
op|'}'
op|','
nl|'\n'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|':'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_instance02'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1955'
op|','
number|'11'
op|','
number|'5'
op|','
number|'0'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'1985'
op|','
number|'10'
op|','
number|'26'
op|','
number|'1'
op|','
number|'35'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'really_long_fake_instance02_to_test_hostname_'"
nl|'\n'
string|"'truncation_when_too_long'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|addresses
name|'addresses'
op|'='
op|'['
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.1"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.2"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.3"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.4"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.5"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.6"'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|networks
name|'networks'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test0'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db8::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa0'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.0.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.100.1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'mtu'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'enable_dhcp'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'share_address'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db9::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db9::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa1'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa1'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.100.1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.1.2'"
op|','
nl|'\n'
string|"'mtu'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'enable_dhcp'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'share_address'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"cccccccc-cccc-cccc-cccc-cccccccccccc"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test2'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.2.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db10::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db10::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa2'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa2'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.2.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.2.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'192.168.2.1'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.100.1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.2.2'"
op|','
nl|'\n'
string|"'mtu'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'enable_dhcp'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'share_address'"
op|':'
name|'False'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|fixed_ips
name|'fixed_ips'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.101'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.101'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.102'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.102'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.103'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.2.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'default_route'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|vifs
name|'vifs'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:00'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:01'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:02'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:03'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000003'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:04'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000004'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:05'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000005'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:06'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000006'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:07'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000007'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_associated
name|'def'
name|'get_associated'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'address'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'datum'
name|'in'
name|'fixed_ips'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'datum'
op|'['
string|"'network_id'"
op|']'
op|'=='
name|'network_id'
nl|'\n'
name|'and'
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
nl|'\n'
name|'and'
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'instances'
op|'['
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
newline|'\n'
name|'if'
name|'host'
name|'and'
name|'host'
op|'!='
name|'instance'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'address'
name|'and'
name|'address'
op|'!='
name|'datum'
op|'['
string|"'address'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'cleaned'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'cleaned'
op|'['
string|"'address'"
op|']'
op|'='
name|'datum'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'datum'
op|'['
string|"'network_id'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_id'"
op|']'
op|'='
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
newline|'\n'
name|'vif'
op|'='
name|'vifs'
op|'['
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_address'"
op|']'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_hostname'"
op|']'
op|'='
name|'instance'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_updated'"
op|']'
op|'='
name|'instance'
op|'['
string|"'updated_at'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_created'"
op|']'
op|'='
name|'instance'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'allocated'"
op|']'
op|'='
name|'datum'
op|'['
string|"'allocated'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'leased'"
op|']'
op|'='
name|'datum'
op|'['
string|"'leased'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'default_route'"
op|']'
op|'='
name|'datum'
op|'['
string|"'default_route'"
op|']'
newline|'\n'
name|'result'
op|'.'
name|'append'
op|'('
name|'cleaned'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LinuxNetworkUtilsTestCase
dedent|''
name|'class'
name|'LinuxNetworkUtilsTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_is_pid_cmdline_correct
indent|'    '
name|'def'
name|'test_is_pid_cmdline_correct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Negative general case'
nl|'\n'
indent|'        '
name|'fake_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
name|'read_data'
op|'='
string|"'no-such-process'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'open'"
op|','
name|'fake_open'
op|','
name|'create'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'linux_net'
op|'.'
name|'is_pid_cmdline_correct'
op|'('
number|'1'
op|','
string|'"foo"'
op|')'
op|','
nl|'\n'
string|'"foo should not be in \'no-such-process\'"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Negative case that would be a thing we would want to skip'
nl|'\n'
dedent|''
name|'fake_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
nl|'\n'
name|'read_data'
op|'='
op|'('
string|"'/usr/sbin/dnsmasq '"
nl|'\n'
string|"'--conf-file=/var/run/NetworkManager/dnsmasq.conf'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'open'"
op|','
name|'fake_open'
op|','
name|'create'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'linux_net'
op|'.'
name|'is_pid_cmdline_correct'
op|'('
number|'1'
op|','
string|'"nova-br100.conf"'
op|')'
op|','
nl|'\n'
string|'"nova-br100.conf should not have been found"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Positive matching case'
nl|'\n'
dedent|''
name|'fake_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
nl|'\n'
name|'read_data'
op|'='
op|'('
string|"'/usr/sbin/dnsmasq '"
nl|'\n'
string|"'--dhcp-hostsfile='"
nl|'\n'
string|"'/opt/stack/data/nova/networks/nova-br100.conf'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'open'"
op|','
name|'fake_open'
op|','
name|'create'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'linux_net'
op|'.'
name|'is_pid_cmdline_correct'
op|'('
number|'1'
op|','
string|'"nova-br100.conf"'
op|')'
op|','
nl|'\n'
string|"'nova-br100.conf should have been found'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Negative case. This would match except we throw an IOError/OSError'
nl|'\n'
comment|"# because the file couldn't be read or opened, this should then fail."
nl|'\n'
dedent|''
name|'for'
name|'err'
name|'in'
op|'('
name|'IOError'
op|','
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_open'
op|'='
name|'mock'
op|'.'
name|'mock_open'
op|'('
nl|'\n'
name|'read_data'
op|'='
op|'('
string|"'/usr/sbin/dnsmasq '"
nl|'\n'
string|"'--dhcp-hostsfile='"
nl|'\n'
string|"'/opt/stack/data/nova/networks/nova-br100.conf'"
op|')'
op|')'
newline|'\n'
name|'fake_open'
op|'.'
name|'side_effect'
op|'='
name|'err'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'open'"
op|','
name|'fake_open'
op|','
name|'create'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'linux_net'
op|'.'
name|'is_pid_cmdline_correct'
op|'('
number|'1'
op|','
string|'"nova-br100.conf"'
op|')'
op|','
nl|'\n'
string|"'nova-br100.conf should not have been found'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LinuxNetworkTestCase
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'LinuxNetworkTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|REQUIRES_LOCKING
indent|'    '
name|'REQUIRES_LOCKING'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LinuxNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
op|'.'
name|'load_network_driver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_vifs
name|'def'
name|'get_vifs'
op|'('
name|'_context'
op|','
name|'instance_uuid'
op|','
name|'use_slave'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'vif'
name|'for'
name|'vif'
name|'in'
name|'vifs'
name|'if'
name|'vif'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
nl|'\n'
name|'instance_uuid'
op|']'
newline|'\n'
nl|'\n'
DECL|function|get_instance
dedent|''
name|'def'
name|'get_instance'
op|'('
name|'_context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
op|'['
name|'instance_id'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'virtual_interface_get_by_instance'"
op|','
name|'get_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
name|'get_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_associated_fixed_ips'"
op|','
name|'get_associated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_add_snat_rule
dedent|''
name|'def'
name|'_test_add_snat_rule'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'is_external'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|verify_add_rule
indent|'        '
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'snat'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rule'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'nat'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
name|'linux_net'
op|'.'
name|'add_snat_rule'
op|'('
string|"'10.0.0.0/24'"
op|','
name|'is_external'
op|')'
newline|'\n'
name|'if'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_snat_rule_no_ext
dedent|''
dedent|''
name|'def'
name|'test_add_snat_rule_no_ext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'routing_source_ip'
op|'='
string|"'10.10.10.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-s 10.0.0.0/24 -d 0.0.0.0/0 '"
nl|'\n'
string|"'-j SNAT --to-source 10.10.10.1 -o eth0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_snat_rule'
op|'('
name|'expected'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_snat_rule_ext
dedent|''
name|'def'
name|'test_add_snat_rule_ext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'routing_source_ip'
op|'='
string|"'10.10.10.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_snat_rule'
op|'('
name|'expected'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_snat_rule_snat_range_no_ext
dedent|''
name|'def'
name|'test_add_snat_rule_snat_range_no_ext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'routing_source_ip'
op|'='
string|"'10.10.10.1'"
op|','
nl|'\n'
name|'force_snat_range'
op|'='
op|'['
string|"'10.10.10.0/24'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-s 10.0.0.0/24 -d 0.0.0.0/0 '"
nl|'\n'
string|"'-j SNAT --to-source 10.10.10.1 -o eth0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_snat_rule'
op|'('
name|'expected'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_snat_rule_snat_range_ext
dedent|''
name|'def'
name|'test_add_snat_rule_snat_range_ext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'routing_source_ip'
op|'='
string|"'10.10.10.1'"
op|','
nl|'\n'
name|'force_snat_range'
op|'='
op|'['
string|"'10.10.10.0/24'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-s 10.0.0.0/24 -d 10.10.10.0/24 '"
nl|'\n'
string|"'-j SNAT --to-source 10.10.10.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_snat_rule'
op|'('
name|'expected'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_dhcp_for_nw00
dedent|''
name|'def'
name|'test_update_dhcp_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'chmod'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'update_dhcp'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"eth0"'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_dhcp_for_nw01
dedent|''
name|'def'
name|'test_update_dhcp_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'chmod'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'update_dhcp'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"eth0"'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_fixedips
dedent|''
name|'def'
name|'_get_fixedips'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'objects'
op|'.'
name|'FixedIPList'
op|'.'
name|'get_by_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'network'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_hosts_for_nw00
dedent|''
name|'def'
name|'test_get_dhcp_hosts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"DE:AD:BE:EF:00:00,fake_instance00.novalocal,"'
nl|'\n'
string|'"192.168.0.100,net:NW-0\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:03,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.1.101,net:NW-3\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:04,fake_instance00.novalocal,"'
nl|'\n'
string|'"192.168.0.102,net:NW-4"'
nl|'\n'
op|')'
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fixedips'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_hosts_for_nw01
dedent|''
name|'def'
name|'test_get_dhcp_hosts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"DE:AD:BE:EF:00:02,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.0.101,net:NW-2\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:05,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.1.102,net:NW-5"'
nl|'\n'
op|')'
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'networks'
op|'['
number|'1'
op|']'
op|','
name|'host'
op|'='
string|"'fake_instance01'"
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'fixedips'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dns_hosts_for_nw00
dedent|''
name|'def'
name|'test_get_dns_hosts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"192.168.0.100\\tfake_instance00.novalocal\\n"'
nl|'\n'
string|'"192.168.1.101\\tfake_instance01.novalocal\\n"'
nl|'\n'
string|'"192.168.0.102\\tfake_instance00.novalocal"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dns_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dns_hosts_for_nw01
dedent|''
name|'def'
name|'test_get_dns_hosts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"192.168.1.100\\tfake_instance00.novalocal\\n"'
nl|'\n'
string|'"192.168.0.101\\tfake_instance01.novalocal\\n"'
nl|'\n'
string|'"192.168.1.102\\tfake_instance01.novalocal"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dns_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_opts_for_nw00
dedent|''
name|'def'
name|'test_get_dhcp_opts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
name|'expected_opts'
op|'='
string|"'NW-0,3,192.168.0.1\\nNW-3,3\\nNW-4,3'"
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'actual_opts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_opts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fixedips'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_opts'
op|','
name|'expected_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_opts_for_nw00_no_single_default_gateway
dedent|''
name|'def'
name|'test_get_dhcp_opts_for_nw00_no_single_default_gateway'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'False'
op|')'
newline|'\n'
name|'expected_opts'
op|'='
string|"'3,192.168.0.1'"
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'actual_opts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_opts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fixedips'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_opts'
op|','
name|'expected_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_opts_for_nw01
dedent|''
name|'def'
name|'test_get_dhcp_opts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
name|'expected_opts'
op|'='
string|'"NW-2,3,192.168.1.1\\nNW-5,3"'
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'networks'
op|'['
number|'1'
op|']'
op|','
string|"'fake_instance01'"
op|')'
newline|'\n'
name|'actual_opts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_opts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'fixedips'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual_opts'
op|','
name|'expected_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_leases_for_nw00
dedent|''
name|'def'
name|'test_get_dhcp_leases_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'seconds_since_epoch'
op|'='
name|'calendar'
op|'.'
name|'timegm'
op|'('
name|'timestamp'
op|'.'
name|'utctimetuple'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'leases'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_leases'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'leases'
op|'='
name|'leases'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'for'
name|'lease'
name|'in'
name|'leases'
op|':'
newline|'\n'
indent|'            '
name|'lease'
op|'='
name|'lease'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'data'
op|'='
name|'get_associated'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'0'
op|','
name|'address'
op|'='
name|'lease'
op|'['
number|'2'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'data'
op|'['
string|"'allocated'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'data'
op|'['
string|"'leased'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'lease'
op|'['
number|'0'
op|']'
op|'>'
name|'seconds_since_epoch'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'vif_address'"
op|']'
op|','
name|'lease'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'address'"
op|']'
op|','
name|'lease'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'instance_hostname'"
op|']'
op|','
name|'lease'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'*'"
op|','
name|'lease'
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_leases_for_nw01
dedent|''
dedent|''
name|'def'
name|'test_get_dhcp_leases_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
string|"'fake_instance01'"
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'seconds_since_epoch'
op|'='
name|'calendar'
op|'.'
name|'timegm'
op|'('
name|'timestamp'
op|'.'
name|'utctimetuple'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'leases'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_leases'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'leases'
op|'='
name|'leases'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'for'
name|'lease'
name|'in'
name|'leases'
op|':'
newline|'\n'
indent|'            '
name|'lease'
op|'='
name|'lease'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'data'
op|'='
name|'get_associated'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
name|'address'
op|'='
name|'lease'
op|'['
number|'2'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'data'
op|'['
string|"'leased'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'lease'
op|'['
number|'0'
op|']'
op|'>'
name|'seconds_since_epoch'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'vif_address'"
op|']'
op|','
name|'lease'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'address'"
op|']'
op|','
name|'lease'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'instance_hostname'"
op|']'
op|','
name|'lease'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'*'"
op|','
name|'lease'
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dhcp_opts_not_default_gateway_network
dedent|''
dedent|''
name|'def'
name|'test_dhcp_opts_not_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"NW-0,3"'
newline|'\n'
name|'fixedip'
op|'='
name|'objects'
op|'.'
name|'FixedIPList'
op|'.'
name|'get_by_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dhcp_opts'
op|'('
name|'fixedip'
op|'.'
name|'virtual_interface_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_dhcp_without_default_gateway_network
dedent|''
name|'def'
name|'test_host_dhcp_without_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
op|'['
string|"'DE:AD:BE:EF:00:00'"
op|','
nl|'\n'
string|"'fake_instance00.novalocal'"
op|','
nl|'\n'
string|"'192.168.0.100'"
op|']'
op|')'
newline|'\n'
name|'fixedip'
op|'='
name|'objects'
op|'.'
name|'FixedIPList'
op|'.'
name|'get_by_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dhcp'
op|'('
name|'fixedip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_dhcp_truncated_hostname
dedent|''
name|'def'
name|'test_host_dhcp_truncated_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
op|'['
string|"'DE:AD:BE:EF:00:07'"
op|','
nl|'\n'
string|"'re-ng_fake_instance02_to_test_hostname_'"
nl|'\n'
string|"'truncation_when_too_long.novalocal'"
op|','
nl|'\n'
string|"'192.168.2.100'"
op|']'
op|')'
newline|'\n'
name|'fixedip'
op|'='
name|'objects'
op|'.'
name|'FixedIPList'
op|'.'
name|'get_by_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dhcp'
op|'('
name|'fixedip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_dns_without_default_gateway_network
dedent|''
name|'def'
name|'test_host_dns_without_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"192.168.0.100\\tfake_instance00.novalocal"'
newline|'\n'
name|'fixedip'
op|'='
name|'objects'
op|'.'
name|'FixedIPList'
op|'.'
name|'get_by_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dns'
op|'('
name|'fixedip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_linux_bridge_driver_plug
dedent|''
name|'def'
name|'test_linux_bridge_driver_plug'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure plug doesn\'t drop FORWARD by default.\n\n        Ensures bug 890195 doesn\'t reappear.\n        """'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
DECL|function|verify_add_rule
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'FORWARD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ACCEPT'"
op|','
name|'rule'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
op|'{'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
string|'"bridge_interface"'
op|':'
string|'"eth0"'
op|','
nl|'\n'
string|'"share_address"'
op|':'
name|'False'
op|'}'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_linux_ovs_driver_plug_exception
dedent|''
name|'def'
name|'test_linux_ovs_driver_plug_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_device_exists
dedent|''
name|'def'
name|'fake_device_exists'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'fake_device_exists'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxOVSInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AgentError'
op|','
nl|'\n'
name|'driver'
op|'.'
name|'plug'
op|','
op|'{'
string|"'uuid'"
op|':'
string|"'fake_network_uuid'"
op|'}'
op|','
nl|'\n'
string|"'fake_mac'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vlan_override
dedent|''
name|'def'
name|'test_vlan_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure vlan_interface flag overrides network bridge_interface.\n\n        Allows heterogeneous networks a la bug 833426\n        """'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|test_ensure
name|'def'
name|'test_ensure'
op|'('
name|'vlan'
op|','
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'mac_address'
op|','
name|'mtu'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|'='
name|'interface'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_vlan_bridge'"
op|','
name|'test_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
op|'{'
nl|'\n'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
nl|'\n'
string|'"bridge_interface"'
op|':'
string|'"base_interface"'
op|','
nl|'\n'
string|'"share_address"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"vlan"'
op|':'
string|'"fake"'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vlan_interface'
op|'='
string|'""'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"base_interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vlan_interface'
op|'='
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flat_override
dedent|''
name|'def'
name|'test_flat_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure flat_interface flag overrides network bridge_interface.\n\n        Allows heterogeneous networks a la bug 833426\n        """'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|test_ensure
name|'def'
name|'test_ensure'
op|'('
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|'='
name|'interface'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_bridge'"
op|','
name|'test_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
op|'{'
nl|'\n'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
nl|'\n'
string|'"bridge_interface"'
op|':'
string|'"base_interface"'
op|','
nl|'\n'
string|'"share_address"'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"base_interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'flat_interface'
op|'='
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"override_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_dnsmasq_execute
dedent|''
name|'def'
name|'_test_dnsmasq_execute'
op|'('
name|'self'
op|','
name|'extra_expected'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network_ref'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.0.0.0/24'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'8.8.4.4'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'1.0.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'share_address'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
nl|'\n'
DECL|function|fake_add_dhcp_mangle_rule
dedent|''
name|'def'
name|'fake_add_dhcp_mangle_rule'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'_add_dhcp_mangle_rule'"
op|','
nl|'\n'
name|'fake_add_dhcp_mangle_rule'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'chmod'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'write_to_file'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'_dnsmasq_pid_for'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'dev'
op|'='
string|"'br100'"
newline|'\n'
nl|'\n'
name|'default_domain'
op|'='
name|'CONF'
op|'.'
name|'dhcp_domain'
newline|'\n'
name|'for'
name|'domain'
name|'in'
op|'('
string|"''"
op|','
name|'default_domain'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'dhcp_domain'
op|'='
name|'domain'
op|')'
newline|'\n'
name|'fixedips'
op|'='
name|'self'
op|'.'
name|'_get_fixedips'
op|'('
name|'network_ref'
op|')'
newline|'\n'
name|'linux_net'
op|'.'
name|'restart_dhcp'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dev'
op|','
name|'network_ref'
op|','
name|'fixedips'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'env'"
op|','
nl|'\n'
string|"'CONFIG_FILE=%s'"
op|'%'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'CONF'
op|'.'
name|'dhcpbridge_flagfile'
op|')'
op|','
nl|'\n'
string|"'NETWORK_ID=fake'"
op|','
nl|'\n'
string|"'dnsmasq'"
op|','
nl|'\n'
string|"'--strict-order'"
op|','
nl|'\n'
string|"'--bind-interfaces'"
op|','
nl|'\n'
string|"'--conf-file=%s'"
op|'%'
name|'CONF'
op|'.'
name|'dnsmasq_config_file'
op|','
nl|'\n'
string|"'--pid-file=%s'"
op|'%'
name|'linux_net'
op|'.'
name|'_dhcp_file'
op|'('
name|'dev'
op|','
string|"'pid'"
op|')'
op|','
nl|'\n'
string|"'--dhcp-optsfile=%s'"
op|'%'
name|'linux_net'
op|'.'
name|'_dhcp_file'
op|'('
name|'dev'
op|','
string|"'opts'"
op|')'
op|','
nl|'\n'
string|"'--listen-address=%s'"
op|'%'
name|'network_ref'
op|'['
string|"'dhcp_server'"
op|']'
op|','
nl|'\n'
string|"'--except-interface=lo'"
op|','
nl|'\n'
string|'"--dhcp-range=set:%s,%s,static,%s,%ss"'
op|'%'
op|'('
name|'network_ref'
op|'['
string|"'label'"
op|']'
op|','
nl|'\n'
name|'network_ref'
op|'['
string|"'dhcp_start'"
op|']'
op|','
nl|'\n'
name|'network_ref'
op|'['
string|"'netmask'"
op|']'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'dhcp_lease_time'
op|')'
op|','
nl|'\n'
string|"'--dhcp-lease-max=256'"
op|','
nl|'\n'
string|"'--dhcp-hostsfile=%s'"
op|'%'
name|'linux_net'
op|'.'
name|'_dhcp_file'
op|'('
name|'dev'
op|','
string|"'conf'"
op|')'
op|','
nl|'\n'
string|"'--dhcp-script=%s'"
op|'%'
name|'CONF'
op|'.'
name|'dhcpbridge'
op|','
nl|'\n'
string|"'--no-hosts'"
op|','
nl|'\n'
string|"'--leasefile-ro'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'dhcp_domain'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'.'
name|'append'
op|'('
string|"'--domain=%s'"
op|'%'
name|'CONF'
op|'.'
name|'dhcp_domain'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'extra_expected'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'+='
name|'extra_expected'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
name|'dev'
op|','
op|')'
op|','
name|'tuple'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsmasq_execute
dedent|''
dedent|''
name|'def'
name|'test_dnsmasq_execute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_dnsmasq_execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsmasq_execute_dns_servers
dedent|''
name|'def'
name|'test_dnsmasq_execute_dns_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'dns_server'
op|'='
op|'['
string|"'1.1.1.1'"
op|','
string|"'2.2.2.2'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
string|"'--no-resolv'"
op|','
nl|'\n'
string|"'--server=1.1.1.1'"
op|','
nl|'\n'
string|"'--server=2.2.2.2'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_dnsmasq_execute'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dnsmasq_execute_use_network_dns_servers
dedent|''
name|'def'
name|'test_dnsmasq_execute_use_network_dns_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_network_dns_servers'
op|'='
name|'True'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
string|"'--no-resolv'"
op|','
nl|'\n'
string|"'--server=8.8.4.4'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_dnsmasq_execute'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_host
dedent|''
name|'def'
name|'test_isolated_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|','
nl|'\n'
name|'share_dhcp_address'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# NOTE(vish): use a fresh copy of the manager for each test'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'iptables_manager'"
op|','
nl|'\n'
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'binary_name'"
op|','
string|"'test'"
op|')'
newline|'\n'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|fake_ensure
name|'def'
name|'fake_ensure'
op|'('
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'bridge'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_bridge'"
op|','
name|'fake_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'iface'
op|'='
string|"'eth0'"
newline|'\n'
name|'dhcp'
op|'='
string|"'192.168.1.1'"
newline|'\n'
name|'network'
op|'='
op|'{'
string|"'dhcp_server'"
op|':'
name|'dhcp'
op|','
nl|'\n'
string|"'share_address'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'br100'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
name|'iface'
op|'}'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|"'fakemac'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-I'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-I'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-I'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-I'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|function|fake_remove
name|'def'
name|'fake_remove'
op|'('
name|'bridge'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'remove_bridge'"
op|','
name|'fake_remove'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'unplug'
op|'('
name|'network'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-i'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-t'"
op|','
string|"'filter'"
op|','
string|"'-D'"
op|','
string|"'FORWARD'"
op|','
string|"'-p'"
op|','
string|"'IPv4'"
op|','
string|"'-o'"
op|','
nl|'\n'
name|'iface'
op|','
string|"'--ip-protocol'"
op|','
string|"'udp'"
op|','
string|"'--ip-destination-port'"
op|','
string|"'67:68'"
op|','
nl|'\n'
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_initialize_gateway
dedent|''
name|'def'
name|'_test_initialize_gateway'
op|'('
name|'self'
op|','
name|'existing'
op|','
name|'expected'
op|','
name|'routes'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|')'
newline|'\n'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'if'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'ip'"
name|'and'
name|'args'
op|'['
number|'1'
op|']'
op|'=='
string|"'addr'"
name|'and'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'show'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'existing'
op|','
string|'""'
newline|'\n'
dedent|''
name|'if'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'ip'"
name|'and'
name|'args'
op|'['
number|'1'
op|']'
op|'=='
string|"'route'"
name|'and'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'show'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'routes'
op|','
string|'""'
newline|'\n'
dedent|''
name|'if'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'sysctl'"
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'1\\n'"
op|','
string|"''"
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'network'
op|'='
op|'{'
string|"'dhcp_server'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8::/64'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'initialize_gateway_device'
op|'('
string|"'eth0'"
op|','
name|'network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_moves_wrong_ip
dedent|''
name|'def'
name|'test_initialize_gateway_moves_wrong_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-n'"
op|','
string|"'net.ipv4.ip_forward'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'del'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_ip_with_dynamic_flag
dedent|''
name|'def'
name|'test_initialize_gateway_ip_with_dynamic_flag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global "'
nl|'\n'
string|'"dynamic eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-n'"
op|','
string|"'net.ipv4.ip_forward'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'del'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_resets_route
dedent|''
name|'def'
name|'test_initialize_gateway_resets_route'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'routes'
op|'='
op|'('
string|'"default via 192.168.0.1 dev eth0\\n"'
nl|'\n'
string|'"192.168.100.0/24 via 192.168.0.254 dev eth0 proto static\\n"'
op|')'
newline|'\n'
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-n'"
op|','
string|"'net.ipv4.ip_forward'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'del'"
op|','
string|"'default'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'del'"
op|','
string|"'192.168.100.0/24'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'del'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'add'"
op|','
string|"'default'"
op|','
string|"'via'"
op|','
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'add'"
op|','
string|"'192.168.100.0/24'"
op|','
string|"'via'"
op|','
string|"'192.168.0.254'"
op|','
nl|'\n'
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'proto'"
op|','
string|"'static'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|','
name|'routes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_no_move_right_ip
dedent|''
name|'def'
name|'test_initialize_gateway_no_move_right_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.1.1/24 brd 192.168.1.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-n'"
op|','
string|"'net.ipv4.ip_forward'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_add_if_blank
dedent|''
name|'def'
name|'test_initialize_gateway_add_if_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-n'"
op|','
string|"'net.ipv4.ip_forward'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_floating_no_duplicate_forwards
dedent|''
name|'def'
name|'test_ensure_floating_no_duplicate_forwards'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ln'
op|'='
name|'linux_net'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'ln'
op|'.'
name|'iptables_manager'
op|','
string|"'apply'"
op|','
name|'lambda'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'ln'
op|','
string|"'ensure_ebtables_rules'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
newline|'\n'
name|'net'
op|'='
op|'{'
string|"'bridge'"
op|':'
string|"'br100'"
op|','
string|"'cidr'"
op|':'
string|"'10.0.0.0/24'"
op|'}'
newline|'\n'
name|'ln'
op|'.'
name|'ensure_floating_forward'
op|'('
string|"'10.10.10.10'"
op|','
string|"'10.0.0.1'"
op|','
string|"'eth0'"
op|','
name|'net'
op|')'
newline|'\n'
name|'ln'
op|'.'
name|'ensure_floating_forward'
op|'('
string|"'10.10.10.11'"
op|','
string|"'10.0.0.10'"
op|','
string|"'eth0'"
op|','
name|'net'
op|')'
newline|'\n'
name|'two_forward_rules'
op|'='
name|'len'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'nat'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'ln'
op|'.'
name|'ensure_floating_forward'
op|'('
string|"'10.10.10.10'"
op|','
string|"'10.0.0.3'"
op|','
string|"'eth0'"
op|','
name|'net'
op|')'
newline|'\n'
name|'dup_forward_rules'
op|'='
name|'len'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'nat'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'two_forward_rules'
op|','
name|'dup_forward_rules'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_apply_ran
dedent|''
name|'def'
name|'test_apply_ran'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'empty_ret'
op|'='
name|'manager'
op|'.'
name|'apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'empty_ret'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_apply_not_run
dedent|''
name|'def'
name|'test_apply_not_run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'apply'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deferred_unset_apply_ran
dedent|''
name|'def'
name|'test_deferred_unset_apply_ran'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'defer_apply_off'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_add_metadata_accept_rule
dedent|''
name|'def'
name|'_test_add_metadata_accept_rule'
op|'('
name|'self'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
DECL|function|verify_add_rule
indent|'        '
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'INPUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'linux_net'
op|'.'
name|'metadata_accept'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_add_metadata_accept_ipv6_rule
dedent|''
name|'def'
name|'_test_add_metadata_accept_ipv6_rule'
op|'('
name|'self'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
DECL|function|verify_add_rule
indent|'        '
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'INPUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv6'
op|'['
string|"'filter'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'linux_net'
op|'.'
name|'metadata_accept'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_accept
dedent|''
name|'def'
name|'test_metadata_accept'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'10.10.10.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-p tcp -m tcp --dport 8775 '"
nl|'\n'
string|"'-d 10.10.10.1 -j ACCEPT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_accept_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_accept_ipv6
dedent|''
name|'def'
name|'test_metadata_accept_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'2600::'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-p tcp -m tcp --dport 8775 '"
nl|'\n'
string|"'-d 2600:: -j ACCEPT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_accept_ipv6_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_accept_localhost
dedent|''
name|'def'
name|'test_metadata_accept_localhost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-p tcp -m tcp --dport 8775 '"
nl|'\n'
string|"'-m addrtype --dst-type LOCAL -j ACCEPT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_accept_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_accept_ipv6_localhost
dedent|''
name|'def'
name|'test_metadata_accept_ipv6_localhost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'::1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-p tcp -m tcp --dport 8775 '"
nl|'\n'
string|"'-m addrtype --dst-type LOCAL -j ACCEPT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_accept_ipv6_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_add_metadata_forward_rule
dedent|''
name|'def'
name|'_test_add_metadata_forward_rule'
op|'('
name|'self'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
DECL|function|verify_add_rule
indent|'        '
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'PREROUTING'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'nat'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'linux_net'
op|'.'
name|'metadata_forward'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_forward
dedent|''
name|'def'
name|'test_metadata_forward'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'10.10.10.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-s 0.0.0.0/0 -d 169.254.169.254/32 -p tcp -m tcp '"
nl|'\n'
string|"'--dport 80 -j DNAT --to-destination 10.10.10.1:8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_forward_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metadata_forward_localhost
dedent|''
name|'def'
name|'test_metadata_forward_localhost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_port'
op|'='
string|"'8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'metadata_host'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'('
string|"'-s 0.0.0.0/0 -d 169.254.169.254/32 -p tcp -m tcp '"
nl|'\n'
string|"'--dport 80 -j REDIRECT --to-ports 8775'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_add_metadata_forward_rule'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_bridge_brings_up_interface
dedent|''
name|'def'
name|'test_ensure_bridge_brings_up_interface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# We have to bypass the CONF.fake_network check so that netifaces'
nl|'\n'
comment|'# is actually called.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|')'
newline|'\n'
name|'fake_mac'
op|'='
string|"'aa:bb:cc:00:11:22'"
newline|'\n'
name|'fake_ifaces'
op|'='
op|'{'
nl|'\n'
name|'netifaces'
op|'.'
name|'AF_LINK'
op|':'
op|'['
op|'{'
string|"'addr'"
op|':'
name|'fake_mac'
op|'}'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'calls'
op|'='
op|'{'
nl|'\n'
string|"'device_exists'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'bridge'"
op|')'
op|']'
op|','
nl|'\n'
string|"'_execute'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'brctl'"
op|','
string|"'addif'"
op|','
string|"'bridge'"
op|','
string|"'eth0'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'bridge'"
op|','
string|"'address'"
op|','
name|'fake_mac'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'eth0'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
nl|'\n'
string|"'global'"
op|')'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'netifaces'
op|','
string|"'ifaddresses'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'device_exists'
op|','
name|'_execute'
op|','
name|'ifaddresses'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ifaddresses'
op|'.'
name|'return_value'
op|'='
name|'fake_ifaces'
newline|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'ensure_bridge'
op|'('
string|"'bridge'"
op|','
string|"'eth0'"
op|')'
newline|'\n'
name|'device_exists'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|'['
string|"'device_exists'"
op|']'
op|')'
newline|'\n'
name|'_execute'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|'['
string|"'_execute'"
op|']'
op|')'
newline|'\n'
name|'ifaddresses'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'eth0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_bridge_brclt_addif_exception
dedent|''
dedent|''
name|'def'
name|'test_ensure_bridge_brclt_addif_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_execute
indent|'        '
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
string|"'brctl'"
op|','
string|"'addif'"
op|','
string|"'bridge'"
op|','
string|"'eth0'"
op|')'
op|'=='
name|'cmd'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|"''"
op|','
string|"'some error happens'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'device_exists'
op|','
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'driver'
op|'.'
name|'ensure_bridge'
op|','
string|"'bridge'"
op|','
string|"'eth0'"
op|')'
newline|'\n'
name|'device_exists'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'bridge'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_bridge_brclt_addbr_neutron_race
dedent|''
dedent|''
name|'def'
name|'test_ensure_bridge_brclt_addbr_neutron_race'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_execute
indent|'        '
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
string|"'brctl'"
op|','
string|"'addbr'"
op|','
string|"'brq1234567-89'"
op|')'
op|'=='
name|'cmd'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|"''"
op|','
string|'"device brq1234567-89 already exists; "'
nl|'\n'
string|'"can\'t create bridge with the same name\\n"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'device_exists'
op|','
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'ensure_bridge'
op|'('
string|"'brq1234567-89'"
op|','
string|"''"
op|')'
newline|'\n'
name|'device_exists'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'brq1234567-89'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_device_mtu_configured
dedent|''
dedent|''
name|'def'
name|'test_set_device_mtu_configured'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_device_mtu'
op|'='
number|'10000'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev'"
op|','
string|"'mtu'"
op|','
nl|'\n'
number|'10000'
op|','
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'linux_net'
op|'.'
name|'_set_device_mtu'
op|'('
string|"'fake-dev'"
op|')'
newline|'\n'
name|'ex'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_device_mtu_default
dedent|''
dedent|''
name|'def'
name|'test_set_device_mtu_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'linux_net'
op|'.'
name|'_set_device_mtu'
op|'('
string|"'fake-dev'"
op|')'
newline|'\n'
name|'ex'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ovs_vif_port
dedent|''
dedent|''
name|'def'
name|'_ovs_vif_port'
op|'('
name|'self'
op|','
name|'calls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'linux_net'
op|'.'
name|'create_ovs_vif_port'
op|'('
string|"'fake-bridge'"
op|','
string|"'fake-dev'"
op|','
nl|'\n'
string|"'fake-iface-id'"
op|','
string|"'fake-mac'"
op|','
nl|'\n'
string|"'fake-instance-uuid'"
op|')'
newline|'\n'
name|'ex'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ovs_vif_port
dedent|''
dedent|''
name|'def'
name|'test_ovs_vif_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ovs-vsctl'"
op|','
string|"'--timeout=120'"
op|','
string|"'--'"
op|','
string|"'--if-exists'"
op|','
nl|'\n'
string|"'del-port'"
op|','
string|"'fake-dev'"
op|','
string|"'--'"
op|','
string|"'add-port'"
op|','
nl|'\n'
string|"'fake-bridge'"
op|','
string|"'fake-dev'"
op|','
nl|'\n'
string|"'--'"
op|','
string|"'set'"
op|','
string|"'Interface'"
op|','
string|"'fake-dev'"
op|','
nl|'\n'
string|"'external-ids:iface-id=fake-iface-id'"
op|','
nl|'\n'
string|"'external-ids:iface-status=active'"
op|','
nl|'\n'
string|"'external-ids:attached-mac=fake-mac'"
op|','
nl|'\n'
string|"'external-ids:vm-uuid=fake-instance-uuid'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_ovs_vif_port'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ovs_vif_port_with_mtu
dedent|''
name|'def'
name|'test_ovs_vif_port_with_mtu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_device_mtu'
op|'='
number|'10000'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ovs-vsctl'"
op|','
string|"'--timeout=120'"
op|','
string|"'--'"
op|','
string|"'--if-exists'"
op|','
nl|'\n'
string|"'del-port'"
op|','
string|"'fake-dev'"
op|','
string|"'--'"
op|','
string|"'add-port'"
op|','
nl|'\n'
string|"'fake-bridge'"
op|','
string|"'fake-dev'"
op|','
nl|'\n'
string|"'--'"
op|','
string|"'set'"
op|','
string|"'Interface'"
op|','
string|"'fake-dev'"
op|','
nl|'\n'
string|"'external-ids:iface-id=fake-iface-id'"
op|','
nl|'\n'
string|"'external-ids:iface-status=active'"
op|','
nl|'\n'
string|"'external-ids:attached-mac=fake-mac'"
op|','
nl|'\n'
string|"'external-ids:vm-uuid=fake-instance-uuid'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev'"
op|','
string|"'mtu'"
op|','
nl|'\n'
number|'10000'
op|','
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_ovs_vif_port'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_veth_pair
dedent|''
name|'def'
name|'_create_veth_pair'
op|'('
name|'self'
op|','
name|'calls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'linux_net'
op|'.'
name|'_create_veth_pair'
op|'('
string|"'fake-dev1'"
op|','
string|"'fake-dev2'"
op|')'
newline|'\n'
name|'ex'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_veth_pair
dedent|''
dedent|''
name|'def'
name|'test_create_veth_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'add'"
op|','
string|"'fake-dev1'"
op|','
string|"'type'"
op|','
string|"'veth'"
op|','
nl|'\n'
string|"'peer'"
op|','
string|"'name'"
op|','
string|"'fake-dev2'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev1'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev1'"
op|','
string|"'promisc'"
op|','
string|"'on'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev2'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev2'"
op|','
string|"'promisc'"
op|','
string|"'on'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_create_veth_pair'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_veth_pair_with_mtu
dedent|''
name|'def'
name|'test_create_veth_pair_with_mtu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_device_mtu'
op|'='
number|'10000'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'add'"
op|','
string|"'fake-dev1'"
op|','
string|"'type'"
op|','
string|"'veth'"
op|','
nl|'\n'
string|"'peer'"
op|','
string|"'name'"
op|','
string|"'fake-dev2'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev1'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev1'"
op|','
string|"'promisc'"
op|','
string|"'on'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev1'"
op|','
string|"'mtu'"
op|','
nl|'\n'
number|'10000'
op|','
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev2'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev2'"
op|','
string|"'promisc'"
op|','
string|"'on'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-dev2'"
op|','
string|"'mtu'"
op|','
nl|'\n'
number|'10000'
op|','
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_create_veth_pair'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exec_ebtables_success
dedent|''
name|'def'
name|'test_exec_ebtables_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_exec_ebtables'
op|'('
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'executes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebtables_race_stderr
dedent|''
name|'def'
name|'_ebtables_race_stderr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
string|'u"Unable to update the kernel. Two possible causes:\\n"'
nl|'\n'
string|'"1. Multiple ebtables programs were executing simultaneously."'
nl|'\n'
string|'" The ebtables\\n userspace tool doesn\'t by default support "'
nl|'\n'
string|'"multiple ebtables programs running\\n concurrently. The "'
nl|'\n'
string|'"ebtables option --concurrent or a tool like flock can be\\n "'
nl|'\n'
string|'"used to support concurrent scripts that update the ebtables "'
nl|'\n'
string|'"kernel tables.\\n2. The kernel doesn\'t support a certain "'
nl|'\n'
string|'"ebtables extension, consider\\n recompiling your kernel or "'
nl|'\n'
string|'"insmod the extension.\\n.\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exec_ebtables_fail_all
dedent|''
name|'def'
name|'test_exec_ebtables_fail_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
name|'def'
name|'fake_sleep'
op|'('
name|'interval'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|','
nl|'\n'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'_ebtables_race_stderr'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_exec_ebtables'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'max_calls'
op|'='
name|'CONF'
op|'.'
name|'ebtables_exec_attempts'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'max_calls'
op|','
name|'len'
op|'('
name|'executes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exec_ebtables_fail_no_retry
dedent|''
name|'def'
name|'test_exec_ebtables_fail_no_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
name|'def'
name|'fake_sleep'
op|'('
name|'interval'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|','
nl|'\n'
name|'stderr'
op|'='
string|'"Sorry, rule does not exist"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_exec_ebtables'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'executes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exec_ebtables_fail_once
dedent|''
name|'def'
name|'test_exec_ebtables_fail_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
name|'def'
name|'fake_sleep'
op|'('
name|'interval'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'executes'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|','
nl|'\n'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'_ebtables_race_stderr'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_exec_ebtables'
op|'('
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'executes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ovs_set_vhostuser_type
dedent|''
name|'def'
name|'test_ovs_set_vhostuser_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ovs-vsctl'"
op|','
string|"'--timeout=120'"
op|','
string|"'--'"
op|','
string|"'set'"
op|','
nl|'\n'
string|"'Interface'"
op|','
string|"'fake-dev'"
op|','
string|"'type=dpdkvhostuser'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'return_value'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'linux_net'
op|'.'
name|'ovs_set_vhostuser_port_type'
op|'('
string|"'fake-dev'"
op|')'
newline|'\n'
name|'ex'
op|'.'
name|'assert_has_calls'
op|'('
name|'calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|')'
newline|'\n'
DECL|member|test_remove_bridge
name|'def'
name|'test_remove_bridge'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'.'
name|'remove_bridge'
op|'('
string|"'fake-bridge'"
op|')'
newline|'\n'
name|'expected_exists_args'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/sys/class/net/fake-bridge'"
op|')'
newline|'\n'
name|'expected_execute_args'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'fake-bridge'"
op|','
string|"'down'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'brctl'"
op|','
string|"'delbr'"
op|','
string|"'fake-bridge'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'expected_exists_args'
op|','
name|'mock_exists'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_execute_args'
op|','
name|'mock_execute'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_set_device_mtu'"
op|')'
newline|'\n'
DECL|member|test_ensure_vlan
name|'def'
name|'test_ensure_vlan'
op|'('
name|'self'
op|','
name|'mock_set_device_mtu'
op|','
name|'mock_device_exists'
op|','
nl|'\n'
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'interface'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'.'
name|'ensure_vlan'
op|'('
nl|'\n'
number|'1'
op|','
string|"'eth0'"
op|','
string|"'MAC'"
op|','
string|"'MTU'"
op|','
string|'"vlan_name"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"vlan_name"'
op|','
name|'interface'
op|')'
newline|'\n'
name|'mock_device_exists'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vlan_name'"
op|')'
newline|'\n'
nl|'\n'
name|'expected_execute_args'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'add'"
op|','
string|"'link'"
op|','
string|"'eth0'"
op|','
string|"'name'"
op|','
string|"'vlan_name'"
op|','
nl|'\n'
string|"'type'"
op|','
string|"'vlan'"
op|','
string|"'id'"
op|','
number|'1'
op|','
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'vlan_name'"
op|','
string|"'address'"
op|','
string|"'MAC'"
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'ip'"
op|','
string|"'link'"
op|','
string|"'set'"
op|','
string|"'vlan_name'"
op|','
string|"'up'"
op|','
nl|'\n'
name|'check_exit_code'
op|'='
op|'['
number|'0'
op|','
number|'2'
op|','
number|'254'
op|']'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_execute_args'
op|','
name|'mock_execute'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'mock_set_device_mtu'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vlan_name'"
op|','
string|"'MTU'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_execute'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'device_exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'linux_net'
op|','
string|"'_set_device_mtu'"
op|')'
newline|'\n'
DECL|member|test_ensure_vlan_device_exists
name|'def'
name|'test_ensure_vlan_device_exists'
op|'('
name|'self'
op|','
name|'mock_set_device_mtu'
op|','
nl|'\n'
name|'mock_device_exists'
op|','
name|'mock_execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'interface'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'.'
name|'ensure_vlan'
op|'('
number|'1'
op|','
string|"'eth0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"vlan1"'
op|','
name|'interface'
op|')'
newline|'\n'
name|'mock_device_exists'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vlan1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_execute'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'mock_set_device_mtu'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'vlan1'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
op|')'
newline|'\n'
DECL|member|test_remove_bridge_negative
name|'def'
name|'test_remove_bridge_negative'
op|'('
name|'self'
op|','
name|'mock_execute'
op|','
name|'mock_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'.'
name|'remove_bridge'
op|','
nl|'\n'
string|"'fake-bridge'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
