begin_unit
comment|'# Copyright 2013 NEC Corporation.  All rights reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'api_version_request'
name|'as'
name|'api_version'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'validation'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'validation'
name|'import'
name|'parameter_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'validation'
name|'import'
name|'validators'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRequest
name|'class'
name|'FakeRequest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|api_version_request
indent|'    '
name|'api_version_request'
op|'='
name|'api_version'
op|'.'
name|'APIVersionRequest'
op|'('
string|'"2.1"'
op|')'
newline|'\n'
DECL|variable|environ
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|legacy_v2
name|'legacy_v2'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|is_legacy_v2
name|'def'
name|'is_legacy_v2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'legacy_v2'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ValidationRegex
dedent|''
dedent|''
name|'class'
name|'ValidationRegex'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_cell_names
indent|'    '
name|'def'
name|'test_cell_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cellre'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'parameter_types'
op|'.'
name|'valid_cell_name_regex'
op|'.'
name|'regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"'foo.bar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"'foo@bar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"'foo!bar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"' foo!bar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'cellre'
op|'.'
name|'search'
op|'('
string|"'\\nfoo!bar'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_regex_range
dedent|''
name|'def'
name|'test_build_regex_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# this is much easier to think about if we only use the ascii'
nl|'\n'
comment|"# subset because it's a printable range we can think"
nl|'\n'
comment|'# about. The algorithm works for all ranges.'
nl|'\n'
DECL|function|_get_all_chars
indent|'        '
name|'def'
name|'_get_all_chars'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0x7F'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'six'
op|'.'
name|'unichr'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.api.validation.parameter_types._get_all_chars'"
op|','
nl|'\n'
name|'_get_all_chars'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
name|'ws'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
name|'re'
op|'.'
name|'escape'
op|'('
string|"'!'"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'~'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# if we allow whitespace the range starts earlier'
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
name|'ws'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
name|'re'
op|'.'
name|'escape'
op|'('
string|"' '"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'~'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# excluding a character will give us 2 ranges'
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
name|'ws'
op|'='
name|'True'
op|','
name|'exclude'
op|'='
op|'['
string|"'A'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
nl|'\n'
name|'re'
op|'.'
name|'escape'
op|'('
string|"' '"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'@'"
op|')'
op|'+'
nl|'\n'
string|"'B'"
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'~'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# inverting which gives us all the initial unprintable characters.'
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
name|'ws'
op|'='
name|'False'
op|','
name|'invert'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
nl|'\n'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'\\x00'"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"' '"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# excluding characters that create a singleton. Naively this would be:'
nl|'\n'
comment|"# ' -@B-BD-~' which seems to work, but ' -@BD-~' is more natural."
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
name|'ws'
op|'='
name|'True'
op|','
name|'exclude'
op|'='
op|'['
string|"'A'"
op|','
string|"'C'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
nl|'\n'
name|'re'
op|'.'
name|'escape'
op|'('
string|"' '"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'@'"
op|')'
op|'+'
nl|'\n'
string|"'B'"
op|'+'
string|"'D'"
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'~'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# ws=True means the positive regex has printable whitespaces,'
nl|'\n'
comment|'# so the inverse will not. The inverse will include things we'
nl|'\n'
comment|'# exclude.'
nl|'\n'
name|'r'
op|'='
name|'parameter_types'
op|'.'
name|'_build_regex_range'
op|'('
nl|'\n'
name|'ws'
op|'='
name|'True'
op|','
name|'exclude'
op|'='
op|'['
string|"'A'"
op|','
string|"'B'"
op|','
string|"'C'"
op|','
string|"'Z'"
op|']'
op|','
name|'invert'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'r'
op|','
nl|'\n'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'\\x00'"
op|')'
op|'+'
string|"'-'"
op|'+'
name|'re'
op|'.'
name|'escape'
op|'('
string|"'\\x1f'"
op|')'
op|'+'
string|"'A-CZ'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|APIValidationTestCase
dedent|''
dedent|''
name|'class'
name|'APIValidationTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|check_validation_error
indent|'    '
name|'def'
name|'check_validation_error'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'body'
op|','
name|'expected_detail'
op|','
name|'req'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'req'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'method'
op|'('
name|'body'
op|'='
name|'body'
op|','
name|'req'
op|'='
name|'req'
op|','
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ValidationError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'re'
op|'.'
name|'match'
op|'('
name|'expected_detail'
op|','
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'detail'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_detail'
op|','
name|'ex'
op|'.'
name|'kwargs'
op|'['
string|"'detail'"
op|']'
op|','
nl|'\n'
string|"'Exception details did not match expected'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'An unexpected exception happens: %s'"
op|'%'
name|'ex'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Any exception does not happen.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FormatCheckerTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'FormatCheckerTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_format_checker_failed
indent|'    '
name|'def'
name|'test_format_checker_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'format_checker'
op|'='
name|'validators'
op|'.'
name|'FormatChecker'
op|'('
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidName'
op|','
nl|'\n'
name|'format_checker'
op|'.'
name|'check'
op|','
string|'"   "'
op|','
string|'"name"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"An invalid \'name\' value was provided. The name must "'
nl|'\n'
string|'"be: printable characters. "'
nl|'\n'
string|'"Can not start or end with whitespace."'
op|','
nl|'\n'
name|'exc'
op|'.'
name|'format_message'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MicroversionsSchemaTestCase
dedent|''
dedent|''
name|'class'
name|'MicroversionsSchemaTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MicroversionsSchemaTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema_v21_int'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'schema_v20_str'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'schema_v21_int'
op|')'
newline|'\n'
name|'schema_v20_str'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'foo'"
op|']'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'string'"
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'schema_v20_str'
op|','
string|"'2.0'"
op|','
string|"'2.0'"
op|')'
newline|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'schema_v21_int'
op|','
string|"'2.1'"
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_v2compatible_request
dedent|''
name|'def'
name|'test_validate_v2compatible_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
newline|'\n'
name|'req'
op|'.'
name|'legacy_v2'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'req'
op|'='
name|'req'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1. "'
nl|'\n'
string|'"1 is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|','
name|'req'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_v21_request
dedent|''
name|'def'
name|'test_validate_v21_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'req'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: bar. "'
nl|'\n'
string|'"\'bar\' is not of type \'integer\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|','
name|'req'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_v2compatible_request_with_none_min_version
dedent|''
name|'def'
name|'test_validate_v2compatible_request_with_none_min_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'schema_none'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'schema_none'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
newline|'\n'
name|'req'
op|'.'
name|'legacy_v2'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'req'
op|')'
op|')'
newline|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: bar. "'
nl|'\n'
string|'"\'bar\' is not of type \'integer\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|','
name|'req'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RequiredDisableTestCase
dedent|''
dedent|''
name|'class'
name|'RequiredDisableTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RequiredDisableTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_required_disable
dedent|''
name|'def'
name|'test_validate_required_disable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'abc'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RequiredEnableTestCase
dedent|''
dedent|''
name|'class'
name|'RequiredEnableTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RequiredEnableTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'required'"
op|':'
op|'['
string|"'foo'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_required_enable
dedent|''
name|'def'
name|'test_validate_required_enable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_required_enable_fails
dedent|''
name|'def'
name|'test_validate_required_enable_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
string|'"\'foo\' is a required property"'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'abc'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AdditionalPropertiesEnableTestCase
dedent|''
dedent|''
name|'class'
name|'AdditionalPropertiesEnableTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AdditionalPropertiesEnableTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'required'"
op|':'
op|'['
string|"'foo'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_additionalProperties_enable
dedent|''
name|'def'
name|'test_validate_additionalProperties_enable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|','
string|"'ext'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AdditionalPropertiesDisableTestCase
dedent|''
dedent|''
name|'class'
name|'AdditionalPropertiesDisableTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AdditionalPropertiesDisableTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'integer'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'required'"
op|':'
op|'['
string|"'foo'"
op|']'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_additionalProperties_disable
dedent|''
name|'def'
name|'test_validate_additionalProperties_disable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_additionalProperties_disable_fails
dedent|''
name|'def'
name|'test_validate_additionalProperties_disable_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
string|'"Additional properties are not allowed (\'ext\' was unexpected)"'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|','
string|"'ext'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PatternPropertiesTestCase
dedent|''
dedent|''
name|'class'
name|'PatternPropertiesTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PatternPropertiesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'patternProperties'"
op|':'
op|'{'
nl|'\n'
string|"'^[a-zA-Z0-9]{1,10}$'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'additionalProperties'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_patternProperties
dedent|''
name|'def'
name|'test_validate_patternProperties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_patternProperties_fails
dedent|''
name|'def'
name|'test_validate_patternProperties_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
string|'"Additional properties are not allowed (\'__\' was unexpected)"'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'__'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
string|'"Additional properties are not allowed (\'\' was unexpected)"'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"''"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Additional properties are not allowed (\'0123456789a\' was"'
nl|'\n'
string|'" unexpected)"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'0123456789a'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
string|'"expected string or buffer"'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
name|'None'
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StringTestCase
dedent|''
dedent|''
name|'class'
name|'StringTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'StringTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_string
dedent|''
name|'def'
name|'test_validate_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"''"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_string_fails
dedent|''
name|'def'
name|'test_validate_string_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1."'
nl|'\n'
string|'" 1 is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1.5."'
nl|'\n'
string|'" 1.5 is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1.5'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: True."'
nl|'\n'
string|'" True is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StringLengthTestCase
dedent|''
dedent|''
name|'class'
name|'StringLengthTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'StringLengthTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'minLength'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'maxLength'"
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_string_length
dedent|''
name|'def'
name|'test_validate_string_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0123456789'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_string_length_fails
dedent|''
name|'def'
name|'test_validate_string_length_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: ."'
nl|'\n'
string|'" \'\' is too short"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"''"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 0123456789a."'
nl|'\n'
string|'" \'0123456789a\' is too long"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0123456789a'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IntegerTestCase
dedent|''
dedent|''
name|'class'
name|'IntegerTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'IntegerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
op|'['
string|"'integer'"
op|','
string|"'string'"
op|']'
op|','
nl|'\n'
string|"'pattern'"
op|':'
string|"'^[0-9]+$'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_integer
dedent|''
name|'def'
name|'test_validate_integer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0123456789'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_integer_fails
dedent|''
name|'def'
name|'test_validate_integer_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: abc."'
nl|'\n'
string|'" \'abc\' does not match \'^[0-9]+$\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: True."'
nl|'\n'
string|'" True is not of type \'integer\', \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 0xffff."'
nl|'\n'
string|'" \'0xffff\' does not match \'^[0-9]+$\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0xffff'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1.0."'
nl|'\n'
string|'" 1.0 is not of type \'integer\', \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1.0'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1.0."'
nl|'\n'
string|'" \'1.0\' does not match \'^[0-9]+$\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1.0'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IntegerRangeTestCase
dedent|''
dedent|''
name|'class'
name|'IntegerRangeTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'IntegerRangeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
op|'['
string|"'integer'"
op|','
string|"'string'"
op|']'
op|','
nl|'\n'
string|"'pattern'"
op|':'
string|"'^[0-9]+$'"
op|','
nl|'\n'
string|"'minimum'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'maximum'"
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_integer_range
dedent|''
name|'def'
name|'test_validate_integer_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'10'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'Validation succeeded.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_integer_range_fails
dedent|''
name|'def'
name|'test_validate_integer_range_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 0."'
nl|'\n'
string|'" 0(.0)? is less than the minimum of 1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 11."'
nl|'\n'
string|'" 11(.0)? is greater than the maximum of 10"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'11'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 0."'
nl|'\n'
string|'" 0(.0)? is less than the minimum of 1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 11."'
nl|'\n'
string|'" 11(.0)? is greater than the maximum of 10"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'11'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BooleanTestCase
dedent|''
dedent|''
name|'class'
name|'BooleanTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BooleanTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'boolean'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_boolean
dedent|''
name|'def'
name|'test_validate_boolean'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'False'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'True'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'False'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'0'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_boolean_fails
dedent|''
name|'def'
name|'test_validate_boolean_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'enum_boolean'
op|'='
op|'('
string|'"[True, \'True\', \'TRUE\', \'true\', \'1\', \'ON\', \'On\',"'
nl|'\n'
string|'" \'on\', \'YES\', \'Yes\', \'yes\',"'
nl|'\n'
string|'" False, \'False\', \'FALSE\', \'false\', \'0\', \'OFF\', \'Off\',"'
nl|'\n'
string|'" \'off\', \'NO\', \'No\', \'no\']"'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: bar."'
nl|'\n'
string|'" \'bar\' is not one of %s"'
op|')'
op|'%'
name|'enum_boolean'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 2."'
nl|'\n'
string|'" \'2\' is not one of %s"'
op|')'
op|'%'
name|'enum_boolean'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostnameTestCase
dedent|''
dedent|''
name|'class'
name|'HostnameTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostnameTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'hostname'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_hostname
dedent|''
name|'def'
name|'test_validate_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost.localdomain.com'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my-host'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my_host'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_hostname_fails
dedent|''
name|'def'
name|'test_validate_hostname_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: True."'
nl|'\n'
string|'" True is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1."'
nl|'\n'
string|'" 1 is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: my$host."'
nl|'\n'
string|'" \'my$host\' does not match \'^[a-zA-Z0-9-._]*$\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my$host'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostnameIPaddressTestCase
dedent|''
dedent|''
name|'class'
name|'HostnameIPaddressTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostnameIPaddressTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'hostname_or_ip_address'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_hostname_or_ip_address
dedent|''
name|'def'
name|'test_validate_hostname_or_ip_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost.localdomain.com'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my-host'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my_host'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.10.100'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2001:db8::9abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_hostname_or_ip_address_fails
dedent|''
name|'def'
name|'test_validate_hostname_or_ip_address_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: True."'
nl|'\n'
string|'" True is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1."'
nl|'\n'
string|'" 1 is not of type \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: my$host."'
nl|'\n'
string|'" \'my$host\' does not match \'^[a-zA-Z0-9-_.:]*$\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my$host'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellNameTestCase
dedent|''
dedent|''
name|'class'
name|'CellNameTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellNameTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'cell_name'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name
dedent|''
name|'def'
name|'test_validate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my server'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434\\u2006\\ufffd'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name_fails
dedent|''
name|'def'
name|'test_validate_name_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
op|'('
string|'"An invalid \'name\' value was provided. The name must be: "'
nl|'\n'
string|'"printable characters except !, ., @. "'
nl|'\n'
string|'"Can not start or end with whitespace."'
op|')'
newline|'\n'
nl|'\n'
name|'should_fail'
op|'='
op|'('
string|"' '"
op|','
nl|'\n'
string|"' server'"
op|','
nl|'\n'
string|"'server '"
op|','
nl|'\n'
string|"u'a\\xa0'"
op|','
comment|'# trailing unicode space'
nl|'\n'
string|"u'\\uffff'"
op|','
comment|'# non-printable unicode'
nl|'\n'
string|"'abc!def'"
op|','
nl|'\n'
string|"'abc.def'"
op|','
nl|'\n'
string|"'abc@def'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'should_fail'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'item'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
nl|'\n'
comment|'# four-byte unicode, if supported by this python build'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\U00010000'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellNameLeadingTrailingSpacesTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'CellNameLeadingTrailingSpacesTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellNameLeadingTrailingSpacesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'cell_name_leading_trailing_spaces'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name
dedent|''
name|'def'
name|'test_validate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my server'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434\\u2006\\ufffd'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'  my server'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my server  '"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name_fails
dedent|''
name|'def'
name|'test_validate_name_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
op|'('
string|'"An invalid \'name\' value was provided. The name must be: "'
nl|'\n'
string|'"printable characters except !, ., @, "'
nl|'\n'
string|'"with at least one non space character"'
op|')'
newline|'\n'
nl|'\n'
name|'should_fail'
op|'='
op|'('
nl|'\n'
string|"' '"
op|','
nl|'\n'
string|"u'\\uffff'"
op|','
comment|'# non-printable unicode'
nl|'\n'
string|"'abc!def'"
op|','
nl|'\n'
string|"'abc.def'"
op|','
nl|'\n'
string|"'abc@def'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'should_fail'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'item'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
nl|'\n'
comment|'# four-byte unicode, if supported by this python build'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\U00010000'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NameTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'NameTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NameTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'name'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name
dedent|''
name|'def'
name|'test_validate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'m1.small'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my server'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'a'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434\\u2006\\ufffd'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name_fails
dedent|''
name|'def'
name|'test_validate_name_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
op|'('
string|'"An invalid \'name\' value was provided. The name must be: "'
nl|'\n'
string|'"printable characters. "'
nl|'\n'
string|'"Can not start or end with whitespace."'
op|')'
newline|'\n'
nl|'\n'
name|'should_fail'
op|'='
op|'('
string|"' '"
op|','
nl|'\n'
string|"' server'"
op|','
nl|'\n'
string|"'server '"
op|','
nl|'\n'
string|"u'a\\xa0'"
op|','
comment|'# trailing unicode space'
nl|'\n'
string|"u'\\uffff'"
op|','
comment|'# non-printable unicode'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'should_fail'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'item'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
nl|'\n'
comment|'# four-byte unicode, if supported by this python build'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\U00010000'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NameWithLeadingTrailingSpacesTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'NameWithLeadingTrailingSpacesTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NameWithLeadingTrailingSpacesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'name_with_leading_trailing_spaces'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name
dedent|''
name|'def'
name|'test_validate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'m1.small'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'my server'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'a'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\u0434\\u2006\\ufffd'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'  abc  '"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc  abc  abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'  abc  abc  abc  '"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
comment|'# leading unicode space'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'\\xa0abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_name_fails
dedent|''
name|'def'
name|'test_validate_name_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
op|'('
string|'"An invalid \'name\' value was provided. The name must be: "'
nl|'\n'
string|'"printable characters with at least one non space character"'
op|')'
newline|'\n'
nl|'\n'
name|'should_fail'
op|'='
op|'('
nl|'\n'
string|"' '"
op|','
nl|'\n'
string|"u'\\xa0'"
op|','
comment|'# unicode space'
nl|'\n'
string|"u'\\uffff'"
op|','
comment|'# non-printable unicode'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'should_fail'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'item'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
nl|'\n'
comment|'# four-byte unicode, if supported by this python build'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"u'\\U00010000'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'error'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoneTypeTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'NoneTypeTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NoneTypeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'none'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_none
dedent|''
name|'def'
name|'test_validate_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'None'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
op|'}'
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_none_fails
dedent|''
name|'def'
name|'test_validate_none_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: ."'
nl|'\n'
string|'" \'\' is not one of [\'None\', None, {}]"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"''"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: "'
nl|'\n'
string|'"{\'key\': \'val\'}. {\'key\': \'val\'} is not one of "'
nl|'\n'
string|'"[\'None\', None, {}]"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'key'"
op|':'
string|"'val'"
op|'}'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TcpUdpPortTestCase
dedent|''
dedent|''
name|'class'
name|'TcpUdpPortTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TcpUdpPortTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'parameter_types'
op|'.'
name|'tcp_udp_port'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_tcp_udp_port
dedent|''
name|'def'
name|'test_validate_tcp_udp_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'1024'
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1024'"
op|'}'
op|','
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_tcp_udp_port_fails
dedent|''
name|'def'
name|'test_validate_tcp_udp_port_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: True."'
nl|'\n'
string|'" True is not of type \'integer\', \'string\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 65536."'
nl|'\n'
string|'" 65536(.0)? is greater than the maximum of 65535"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
number|'65536'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CidrFormatTestCase
dedent|''
dedent|''
name|'class'
name|'CidrFormatTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CidrFormatTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'cidr'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidr
dedent|''
name|'def'
name|'test_validate_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.10.0/24'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidr_fails
dedent|''
name|'def'
name|'test_validate_cidr_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: bar."'
nl|'\n'
string|'" \'bar\' is not a \'cidr\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: . \'\' is not a \'cidr\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"''"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 192.168.1.0. \'192.168.1.0\' is not a \'cidr\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.1.0'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 192.168.1.0 /24."'
nl|'\n'
string|'" \'192.168.1.0 /24\' is not a \'cidr\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.1.0 /24'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DatetimeTestCase
dedent|''
dedent|''
name|'class'
name|'DatetimeTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DatetimeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'date-time'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_datetime
dedent|''
name|'def'
name|'test_validate_datetime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2014-01-14T01:00:00Z'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_datetime_fails
dedent|''
name|'def'
name|'test_validate_datetime_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 2014-13-14T01:00:00Z."'
nl|'\n'
string|'" \'2014-13-14T01:00:00Z\' is not a \'date-time\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2014-13-14T01:00:00Z'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: bar. \'bar\' is not a \'date-time\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1."'
nl|'\n'
string|'" \'1\' is not a \'date-time\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UuidTestCase
dedent|''
dedent|''
name|'class'
name|'UuidTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UuidTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'uuid'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_uuid
dedent|''
name|'def'
name|'test_validate_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'70a599e0-31e7-49b7-b260-868f441e862b'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_uuid_fails
dedent|''
name|'def'
name|'test_validate_uuid_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 70a599e031e749b7b260868f441e862."'
nl|'\n'
string|'" \'70a599e031e749b7b260868f441e862\' is not a \'uuid\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'70a599e031e749b7b260868f441e862'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: 1."'
nl|'\n'
string|'" \'1\' is not a \'uuid\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'1'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: abc."'
nl|'\n'
string|'" \'abc\' is not a \'uuid\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UriTestCase
dedent|''
dedent|''
name|'class'
name|'UriTestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UriTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'uri'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_uri
dedent|''
name|'def'
name|'test_validate_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'http://localhost:8774/v2/servers'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'http://[::1]:8774/v2/servers'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_uri_fails
dedent|''
name|'def'
name|'test_validate_uri_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: {0}. "'
nl|'\n'
string|'"\'{0}\' is not a \'uri\'"'
op|')'
newline|'\n'
name|'invalid_uri'
op|'='
string|"'http://localhost:8774/v2/servers##'"
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'invalid_uri'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'base_detail'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'invalid_uri'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'invalid_uri'
op|'='
string|"'http://[fdf8:01]:8774/v2/servers'"
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'invalid_uri'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'base_detail'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'invalid_uri'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'invalid_uri'
op|'='
string|"'1'"
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'invalid_uri'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'base_detail'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'invalid_uri'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'invalid_uri'
op|'='
string|"'abc'"
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'invalid_uri'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'base_detail'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'invalid_uri'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Ipv4TestCase
dedent|''
dedent|''
name|'class'
name|'Ipv4TestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Ipv4TestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'ipv4'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ipv4
dedent|''
name|'def'
name|'test_validate_ipv4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.0.100'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ipv4_fails
dedent|''
name|'def'
name|'test_validate_ipv4_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: abc."'
nl|'\n'
string|'" \'abc\' is not a \'ipv4\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: localhost."'
nl|'\n'
string|'" \'localhost\' is not a \'ipv4\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 2001:db8::1234:0:0:9abc."'
nl|'\n'
string|'" \'2001:db8::1234:0:0:9abc\' is not a \'ipv4\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2001:db8::1234:0:0:9abc'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Ipv6TestCase
dedent|''
dedent|''
name|'class'
name|'Ipv6TestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Ipv6TestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'ipv6'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ipv6
dedent|''
name|'def'
name|'test_validate_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
nl|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'2001:db8::1234:0:0:9abc'"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ipv6_fails
dedent|''
name|'def'
name|'test_validate_ipv6_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: abc."'
nl|'\n'
string|'" \'abc\' is not a \'ipv6\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'abc'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. Value: localhost."'
nl|'\n'
string|'" \'localhost\' is not a \'ipv6\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'localhost'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo."'
nl|'\n'
string|'" Value: 192.168.0.100. \'192.168.0.100\' is not a \'ipv6\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'192.168.0.100'"
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Base64TestCase
dedent|''
dedent|''
name|'class'
name|'Base64TestCase'
op|'('
name|'APIValidationTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'APIValidationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'schema'
op|'='
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'type'"
op|':'
string|"'string'"
op|','
nl|'\n'
string|"'format'"
op|':'
string|"'base64'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'validation'
op|'.'
name|'schema'
op|'('
name|'request_body_schema'
op|'='
name|'schema'
op|')'
newline|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
name|'req'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Validation succeeded.'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'post'
op|'='
name|'post'
newline|'\n'
nl|'\n'
DECL|member|test_validate_base64
dedent|''
name|'def'
name|'test_validate_base64'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Validation succeeded.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'post'
op|'('
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'aGVsbG8gd29ybGQ='"
op|'}'
op|','
nl|'\n'
name|'req'
op|'='
name|'FakeRequest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
comment|"# 'aGVsbG8gd29ybGQ=' is the base64 code of 'hello world'"
nl|'\n'
nl|'\n'
DECL|member|test_validate_base64_fails
dedent|''
name|'def'
name|'test_validate_base64_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|"'A random string'"
newline|'\n'
name|'detail'
op|'='
op|'('
string|'"Invalid input for field/attribute foo. "'
nl|'\n'
string|'"Value: %s. \'%s\' is not a \'base64\'"'
op|')'
op|'%'
op|'('
name|'value'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_validation_error'
op|'('
name|'self'
op|'.'
name|'post'
op|','
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
name|'value'
op|'}'
op|','
nl|'\n'
name|'expected_detail'
op|'='
name|'detail'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
