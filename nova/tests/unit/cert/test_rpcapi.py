begin_unit
comment|'# Copyright 2012, Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUnit Tests for nova.cert.rpcapi\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cert'
name|'import'
name|'rpcapi'
name|'as'
name|'cert_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CertRpcAPITestCase
name|'class'
name|'CertRpcAPITestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_test_cert_api
indent|'    '
name|'def'
name|'_test_cert_api'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
nl|'\n'
name|'rpcapi'
op|'='
name|'cert_rpcapi'
op|'.'
name|'CertAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|'.'
name|'target'
op|'.'
name|'topic'
op|','
name|'CONF'
op|'.'
name|'cert_topic'
op|')'
newline|'\n'
nl|'\n'
name|'orig_prepare'
op|'='
name|'rpcapi'
op|'.'
name|'client'
op|'.'
name|'prepare'
newline|'\n'
name|'expected_version'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'version'"
op|','
name|'rpcapi'
op|'.'
name|'client'
op|'.'
name|'target'
op|'.'
name|'version'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
string|"'call'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
string|"'prepare'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpcapi'
op|'.'
name|'client'
op|','
string|"'can_send_version'"
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'rpc_mock'
op|','
name|'prepare_mock'
op|','
name|'csv_mock'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'prepare_mock'
op|'.'
name|'return_value'
op|'='
name|'rpcapi'
op|'.'
name|'client'
newline|'\n'
name|'rpc_mock'
op|'.'
name|'return_value'
op|'='
string|"'foo'"
newline|'\n'
name|'csv_mock'
op|'.'
name|'side_effect'
op|'='
op|'('
nl|'\n'
name|'lambda'
name|'v'
op|':'
name|'orig_prepare'
op|'('
name|'version'
op|'='
name|'v'
op|')'
op|'.'
name|'can_send_version'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'retval'
op|'='
name|'getattr'
op|'('
name|'rpcapi'
op|','
name|'method'
op|')'
op|'('
name|'ctxt'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'retval'
op|','
name|'rpc_mock'
op|'.'
name|'return_value'
op|')'
newline|'\n'
nl|'\n'
name|'prepare_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'version'
op|'='
name|'expected_version'
op|')'
newline|'\n'
name|'rpc_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_certs_by_user
dedent|''
dedent|''
name|'def'
name|'test_revoke_certs_by_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_user'"
op|','
name|'user_id'
op|'='
string|"'fake_user_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_user'"
op|','
name|'user_id'
op|'='
string|"'fake_user_id'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_certs_by_project
dedent|''
name|'def'
name|'test_revoke_certs_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_project'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_project'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_certs_by_user_and_project
dedent|''
name|'def'
name|'test_revoke_certs_by_user_and_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_user_and_project'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake_user_id'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'revoke_certs_by_user_and_project'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake_user_id'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_generate_x509_cert
dedent|''
name|'def'
name|'test_generate_x509_cert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'generate_x509_cert'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake_user_id'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'generate_x509_cert'"
op|','
nl|'\n'
name|'user_id'
op|'='
string|"'fake_user_id'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fetch_ca
dedent|''
name|'def'
name|'test_fetch_ca'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'fetch_ca'"
op|','
name|'project_id'
op|'='
string|"'fake_project_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'fetch_ca'"
op|','
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fetch_crl
dedent|''
name|'def'
name|'test_fetch_crl'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'fetch_crl'"
op|','
name|'project_id'
op|'='
string|"'fake_project_id'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'fetch_crl'"
op|','
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decrypt_text
dedent|''
name|'def'
name|'test_decrypt_text'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'decrypt_text'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
name|'text'
op|'='
string|"'blah'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(russellb) Havana compat'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cert'
op|'='
string|"'havana'"
op|','
name|'group'
op|'='
string|"'upgrade_levels'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_cert_api'
op|'('
string|"'decrypt_text'"
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
op|','
name|'text'
op|'='
string|"'blah'"
op|','
nl|'\n'
name|'version'
op|'='
string|"'1.0'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
