begin_unit
comment|'# Copyright (c) 2013 Intel, Inc.'
nl|'\n'
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'pci'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PciDeviceMatchTestCase
name|'class'
name|'PciDeviceMatchTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PciDeviceMatchTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_pci_1'
op|'='
op|'{'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'device_id'"
op|':'
string|"'d1'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_single_spec_match
dedent|''
name|'def'
name|'test_single_spec_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'pci_device_prop_match'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_pci_1'
op|','
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
string|"'device_id'"
op|':'
string|"'d1'"
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_spec_match
dedent|''
name|'def'
name|'test_multiple_spec_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'pci_device_prop_match'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_pci_1'
op|','
nl|'\n'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
string|"'device_id'"
op|':'
string|"'d1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'vendor_id'"
op|':'
string|"'v3'"
op|','
string|"'device_id'"
op|':'
string|"'d3'"
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spec_dismatch
dedent|''
name|'def'
name|'test_spec_dismatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'utils'
op|'.'
name|'pci_device_prop_match'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_pci_1'
op|','
nl|'\n'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v4'"
op|','
string|"'device_id'"
op|':'
string|"'d4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'vendor_id'"
op|':'
string|"'v3'"
op|','
string|"'device_id'"
op|':'
string|"'d3'"
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spec_extra_key
dedent|''
name|'def'
name|'test_spec_extra_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'utils'
op|'.'
name|'pci_device_prop_match'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_pci_1'
op|','
nl|'\n'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
string|"'device_id'"
op|':'
string|"'d1'"
op|','
string|"'wrong_key'"
op|':'
string|"'k1'"
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PciDeviceAddressParserTestCase
dedent|''
dedent|''
name|'class'
name|'PciDeviceAddressParserTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_parse_address
indent|'    '
name|'def'
name|'test_parse_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parse_result'
op|'='
name|'utils'
op|'.'
name|'parse_address'
op|'('
string|'"0000:04:12.6"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'parse_result'
op|','
op|'('
string|"'0000'"
op|','
string|"'04'"
op|','
string|"'12'"
op|','
string|"'6'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_address_wrong
dedent|''
name|'def'
name|'test_parse_address_wrong'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceWrongAddressFormat'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'parse_address'
op|','
string|'"0000:04.12:6"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_address_invalid_character
dedent|''
name|'def'
name|'test_parse_address_invalid_character'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceWrongAddressFormat'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'parse_address'
op|','
string|'"0000:h4.12:6"'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
