begin_unit
comment|'# Copyright (c) 2013 Citrix Systems, Inc.'
nl|'\n'
comment|'# Copyright 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'inspect'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeDriver
name|'class'
name|'FakeDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeDriver2
dedent|''
dedent|''
name|'class'
name|'FakeDriver2'
op|'('
name|'FakeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ToDriverRegistryTestCase
dedent|''
name|'class'
name|'ToDriverRegistryTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|assertDriverInstance
indent|'    '
name|'def'
name|'assertDriverInstance'
op|'('
name|'self'
op|','
name|'inst'
op|','
name|'class_'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'class_'
op|','
name|'inst'
op|'.'
name|'__class__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'args'
op|','
name|'inst'
op|'.'
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|','
name|'inst'
op|'.'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_driver_dict_from_config
dedent|''
name|'def'
name|'test_driver_dict_from_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drvs'
op|'='
name|'driver'
op|'.'
name|'driver_dict_from_config'
op|'('
nl|'\n'
op|'['
nl|'\n'
string|"'key1=nova.tests.virt.test_driver.FakeDriver'"
op|','
nl|'\n'
string|"'key2=nova.tests.virt.test_driver.FakeDriver2'"
op|','
nl|'\n'
op|']'
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|','
name|'param1'
op|'='
string|"'value1'"
op|','
name|'param2'
op|'='
string|"'value2'"
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'sorted'
op|'('
op|'['
string|"'key1'"
op|','
string|"'key2'"
op|']'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'drvs'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDriverInstance'
op|'('
nl|'\n'
name|'drvs'
op|'['
string|"'key1'"
op|']'
op|','
nl|'\n'
name|'FakeDriver'
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|','
name|'param1'
op|'='
string|"'value1'"
op|','
nl|'\n'
name|'param2'
op|'='
string|"'value2'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDriverInstance'
op|'('
nl|'\n'
name|'drvs'
op|'['
string|"'key2'"
op|']'
op|','
nl|'\n'
name|'FakeDriver2'
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|','
name|'param1'
op|'='
string|"'value1'"
op|','
nl|'\n'
name|'param2'
op|'='
string|"'value2'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DriverAPITestHelper
dedent|''
dedent|''
name|'class'
name|'DriverAPITestHelper'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|assertPublicAPISignatures
indent|'    '
name|'def'
name|'assertPublicAPISignatures'
op|'('
name|'self'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
DECL|function|get_public_apis
indent|'        '
name|'def'
name|'get_public_apis'
op|'('
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'methods'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'value'
op|')'
name|'in'
name|'inspect'
op|'.'
name|'getmembers'
op|'('
name|'inst'
op|','
name|'inspect'
op|'.'
name|'ismethod'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'name'
op|'.'
name|'startswith'
op|'('
string|'"_"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'methods'
op|'['
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'methods'
newline|'\n'
nl|'\n'
dedent|''
name|'base'
op|'='
name|'driver'
op|'.'
name|'ComputeDriver'
op|'('
name|'None'
op|')'
newline|'\n'
name|'basemethods'
op|'='
name|'get_public_apis'
op|'('
name|'base'
op|')'
newline|'\n'
name|'implmethods'
op|'='
name|'get_public_apis'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'extranames'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'sorted'
op|'('
name|'implmethods'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'not'
name|'in'
name|'basemethods'
op|':'
newline|'\n'
indent|'                '
name|'extranames'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'extranames'
op|','
nl|'\n'
string|'"public APIs not listed in base class"'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
name|'sorted'
op|'('
name|'implmethods'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'baseargs'
op|'='
name|'inspect'
op|'.'
name|'getargspec'
op|'('
name|'basemethods'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
name|'implargs'
op|'='
name|'inspect'
op|'.'
name|'getargspec'
op|'('
name|'implmethods'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'baseargs'
op|','
name|'implargs'
op|','
nl|'\n'
string|'"%s args don\'t match base"'
op|'%'
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
