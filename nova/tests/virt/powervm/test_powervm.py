begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest suite for PowerVMDriver.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'paramiko'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network_cache_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'blockdev'
name|'as'
name|'powervm_blockdev'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'driver'
name|'as'
name|'powervm_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'lpar'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'powervm'
name|'import'
name|'operator'
name|'as'
name|'powervm_operator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_lpar
name|'def'
name|'fake_lpar'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'lpar'
op|'.'
name|'LPAR'
op|'('
name|'name'
op|'='
name|'instance_name'
op|','
nl|'\n'
name|'lpar_id'
op|'='
number|'1'
op|','
name|'desired_mem'
op|'='
number|'1024'
op|','
nl|'\n'
name|'max_mem'
op|'='
number|'2048'
op|','
name|'max_procs'
op|'='
number|'2'
op|','
nl|'\n'
name|'uptime'
op|'='
number|'939395'
op|','
name|'state'
op|'='
string|"'Running'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_ssh_connect
dedent|''
name|'def'
name|'fake_ssh_connect'
op|'('
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a new paramiko.SSHClient object."""'
newline|'\n'
name|'return'
name|'paramiko'
op|'.'
name|'SSHClient'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|raise_
dedent|''
name|'def'
name|'raise_'
op|'('
name|'ex'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Raises the given Exception."""'
newline|'\n'
name|'raise'
name|'ex'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakePowerVMOperator
dedent|''
name|'class'
name|'FakePowerVMOperator'
op|'('
name|'powervm_operator'
op|'.'
name|'PowerVMOperator'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get_lpar
indent|'    '
name|'def'
name|'get_lpar'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'resource_type'
op|'='
string|"'lpar'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'fake_lpar'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_vios_command
dedent|''
name|'def'
name|'run_vios_command'
op|'('
name|'self'
op|','
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeIVMOperator
dedent|''
dedent|''
name|'class'
name|'FakeIVMOperator'
op|'('
name|'powervm_operator'
op|'.'
name|'IVMOperator'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get_lpar
indent|'    '
name|'def'
name|'get_lpar'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'resource_type'
op|'='
string|"'lpar'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'fake_lpar'
op|'('
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_lpar_instances
dedent|''
name|'def'
name|'list_lpar_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'instance-00000001'"
op|','
string|"'instance-00000002'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|create_lpar
dedent|''
name|'def'
name|'create_lpar'
op|'('
name|'self'
op|','
name|'lpar'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|start_lpar
dedent|''
name|'def'
name|'start_lpar'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|stop_lpar
dedent|''
name|'def'
name|'stop_lpar'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'time_out'
op|'='
number|'30'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remove_lpar
dedent|''
name|'def'
name|'remove_lpar'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_vhost_by_instance_id
dedent|''
name|'def'
name|'get_vhost_by_instance_id'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'vhostfake'"
newline|'\n'
nl|'\n'
DECL|member|get_virtual_eth_adapter_id
dedent|''
name|'def'
name|'get_virtual_eth_adapter_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|get_disk_name_by_vhost
dedent|''
name|'def'
name|'get_disk_name_by_vhost'
op|'('
name|'self'
op|','
name|'vhost'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'lvfake01'"
newline|'\n'
nl|'\n'
DECL|member|remove_disk
dedent|''
name|'def'
name|'remove_disk'
op|'('
name|'self'
op|','
name|'disk_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|run_cfg_dev
dedent|''
name|'def'
name|'run_cfg_dev'
op|'('
name|'self'
op|','
name|'device_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|attach_disk_to_vhost
dedent|''
name|'def'
name|'attach_disk_to_vhost'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'vhost'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_memory_info
dedent|''
name|'def'
name|'get_memory_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'total_mem'"
op|':'
number|'65536'
op|','
string|"'avail_mem'"
op|':'
number|'46336'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_cpu_info
dedent|''
name|'def'
name|'get_cpu_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'total_procs'"
op|':'
number|'8.0'
op|','
string|"'avail_procs'"
op|':'
number|'6.3'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_disk_info
dedent|''
name|'def'
name|'get_disk_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'disk_total'"
op|':'
number|'10168'
op|','
nl|'\n'
string|"'disk_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'disk_avail'"
op|':'
number|'10168'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_hostname
dedent|''
name|'def'
name|'get_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'fake-powervm'"
newline|'\n'
nl|'\n'
DECL|member|rename_lpar
dedent|''
name|'def'
name|'rename_lpar'
op|'('
name|'self'
op|','
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_remove_file
dedent|''
name|'def'
name|'_remove_file'
op|'('
name|'self'
op|','
name|'file_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|set_lpar_mac_base_value
dedent|''
name|'def'
name|'set_lpar_mac_base_value'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'mac'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_logical_vol_size
dedent|''
name|'def'
name|'get_logical_vol_size'
op|'('
name|'self'
op|','
name|'diskname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|macs_for_instance
dedent|''
name|'def'
name|'macs_for_instance'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'set'
op|'('
op|'['
string|"'FA:98:64:2B:29:39'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_vios_command
dedent|''
name|'def'
name|'run_vios_command'
op|'('
name|'self'
op|','
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeBlockAdapter
dedent|''
dedent|''
name|'class'
name|'FakeBlockAdapter'
op|'('
name|'powervm_blockdev'
op|'.'
name|'PowerVMLocalVolumeAdapter'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection_data'
op|'='
name|'common'
op|'.'
name|'Connection'
op|'('
name|'host'
op|'='
string|"'fake_compute_1'"
op|','
nl|'\n'
name|'username'
op|'='
string|"'fake_user'"
op|','
nl|'\n'
name|'password'
op|'='
string|"'fake_pass'"
op|')'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_create_logical_volume
dedent|''
name|'def'
name|'_create_logical_volume'
op|'('
name|'self'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'lvfake01'"
newline|'\n'
nl|'\n'
DECL|member|_remove_logical_volume
dedent|''
name|'def'
name|'_remove_logical_volume'
op|'('
name|'self'
op|','
name|'lv_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_copy_file_to_device
dedent|''
name|'def'
name|'_copy_file_to_device'
op|'('
name|'self'
op|','
name|'sourcePath'
op|','
name|'device'
op|','
name|'decrompress'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_copy_image_file
dedent|''
name|'def'
name|'_copy_image_file'
op|'('
name|'self'
op|','
name|'sourcePath'
op|','
name|'remotePath'
op|','
name|'decompress'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'finalPath'
op|'='
string|"'/tmp/rhel62.raw.7e358754160433febd6f3318b7c9e335'"
newline|'\n'
name|'size'
op|'='
number|'4294967296'
newline|'\n'
name|'return'
name|'finalPath'
op|','
name|'size'
newline|'\n'
nl|'\n'
DECL|member|_copy_device_to_file
dedent|''
name|'def'
name|'_copy_device_to_file'
op|'('
name|'self'
op|','
name|'device_name'
op|','
name|'file_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_copy_image_file_from_host
dedent|''
name|'def'
name|'_copy_image_file_from_host'
op|'('
name|'self'
op|','
name|'remote_source_path'
op|','
name|'local_dest_dir'
op|','
nl|'\n'
name|'compress'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'snapshot_file'
op|'='
string|"'/tmp/rhel62.raw.7e358754160433febd6f3318b7c9e335'"
newline|'\n'
name|'snap_ref'
op|'='
name|'open'
op|'('
name|'snapshot_file'
op|','
string|"'w+'"
op|')'
newline|'\n'
name|'snap_ref'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'snapshot_file'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_get_powervm_operator
dedent|''
dedent|''
name|'def'
name|'fake_get_powervm_operator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'FakeIVMOperator'
op|'('
name|'common'
op|'.'
name|'Connection'
op|'('
string|"'fake_host'"
op|','
string|"'fake_user'"
op|','
nl|'\n'
string|"'fake_password'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_instance
dedent|''
name|'def'
name|'create_instance'
op|'('
name|'testcase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'testcase'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'ctxt'
op|','
number|'1'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'flavors'
op|'.'
name|'save_flavor_info'
op|'('
op|'{'
op|'}'
op|','
name|'instance_type'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'155d900f-4e14-4e4c-a73d-069cbf4541e6'"
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'sys_meta'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PowerVMDriverTestCase
dedent|''
name|'class'
name|'PowerVMDriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for PowerVM connection calls."""'
newline|'\n'
nl|'\n'
DECL|variable|fake_network_info
name|'fake_network_info'
op|'='
string|"'fake_network_info'"
newline|'\n'
DECL|variable|fake_create_lpar_instance_called
name|'fake_create_lpar_instance_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|fake_create_lpar_instance
name|'def'
name|'fake_create_lpar_instance'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'host_stats'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stub for the _create_lpar_instance method.\n\n        This stub assumes that \'instance\' is the one created in the test case\n        setUp method and \'network_info\' is equal to self.fake_network_info.\n        @return: fake LPAR based on instance parameter where the name of the\n        LPAR is the uuid of the instance\n        """'
newline|'\n'
name|'self'
op|'.'
name|'fake_create_lpar_instance_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'fake_network_info'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
op|'.'
name|'get_lpar'
op|'('
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PowerVMDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'powervm_operator'
op|','
string|"'get_powervm_operator'"
op|','
nl|'\n'
name|'fake_get_powervm_operator'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'powervm_operator'
op|','
string|"'get_powervm_disk_adapter'"
op|','
nl|'\n'
name|'lambda'
op|':'
name|'FakeBlockAdapter'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'='
name|'powervm_driver'
op|'.'
name|'PowerVMDriver'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'create_instance'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'instance-00000001'"
name|'in'
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'instance-00000002'"
name|'in'
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_exists
dedent|''
name|'def'
name|'test_instance_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'instance_exists'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_image_fetch
indent|'        '
name|'def'
name|'fake_image_fetch'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'file_path'
op|','
nl|'\n'
name|'user_id'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'powervm_img_local_path'
op|'='
string|"'/images/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'fake_image_fetch'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'image_meta'
op|'['
string|"'id'"
op|']'
op|'='
string|"'666'"
newline|'\n'
name|'fake_net_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'spawn'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'image_meta'
op|','
op|'['
op|']'
op|','
string|"'s3cr3t'"
op|','
nl|'\n'
name|'fake_net_info'
op|')'
newline|'\n'
name|'state'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
op|'['
string|"'state'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'state'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_create_lpar_fail
dedent|''
name|'def'
name|'test_spawn_create_lpar_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'powervm_img_local_path'
op|'='
string|"'/images/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
nl|'\n'
string|"'get_host_stats'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'raise_'
op|'('
nl|'\n'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'instance_name'"
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'fake_net_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMLPARCreationFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'spawn'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'ANY_ID'"
op|'}'
op|','
op|'['
op|']'
op|','
string|"'s3cr3t'"
op|','
name|'fake_net_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_cleanup_on_fail
dedent|''
name|'def'
name|'test_spawn_cleanup_on_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'powervm_img_local_path'
op|'='
string|"'/images/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'create_volume_from_image'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'raise_'
op|'('
name|'exception'
op|'.'
name|'PowerVMImageCreationFailed'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'_cleanup'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'raise_'
op|'('
name|'Exception'
op|'('
string|"'This should be logged.'"
op|')'
op|')'
op|')'
newline|'\n'
name|'fake_net_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
nl|'\n'
name|'fake_network_cache_model'
op|'.'
name|'new_vif'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMImageCreationFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'spawn'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'ANY_ID'"
op|'}'
op|','
op|'['
op|']'
op|','
string|"'s3cr3t'"
op|','
name|'fake_net_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|update_task_state
indent|'        '
name|'def'
name|'update_task_state'
op|'('
name|'task_state'
op|','
name|'expected_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_loc_task_state'
op|'='
name|'task_state'
newline|'\n'
name|'self'
op|'.'
name|'_loc_expected_task_state'
op|'='
name|'expected_state'
newline|'\n'
nl|'\n'
dedent|''
name|'loc_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'arch'
op|'='
string|"'fake_arch'"
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'loc_context'
op|'.'
name|'user_id'
op|')'
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'arch'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'fake_snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
name|'image_service'
op|'='
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'loc_context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'snapshot'
op|'('
name|'loc_context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'update_task_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_loc_task_state'
op|'=='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
name|'and'
nl|'\n'
name|'self'
op|'.'
name|'_loc_expected_task_state'
op|'=='
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'architecture'"
op|']'
op|','
name|'arch'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_get_info_stub
dedent|''
name|'def'
name|'_set_get_info_stub'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_instance
indent|'        '
name|'def'
name|'fake_get_instance'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'state'
op|','
nl|'\n'
string|"'max_mem'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'desired_mem'"
op|':'
number|'256'
op|','
nl|'\n'
string|"'max_procs'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uptime'"
op|':'
number|'2000'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'_get_instance'"
op|','
nl|'\n'
name|'fake_get_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_nostate
dedent|''
name|'def'
name|'test_get_info_state_nostate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"''"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_running
dedent|''
name|'def'
name|'test_get_info_state_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Running'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_starting
dedent|''
name|'def'
name|'test_get_info_state_starting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Starting'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_shutdown
dedent|''
name|'def'
name|'test_get_info_state_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Not Activated'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_shutting_down
dedent|''
name|'def'
name|'test_get_info_state_shutting_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Shutting Down'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_error
dedent|''
name|'def'
name|'test_get_info_state_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Error'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_not_available
dedent|''
name|'def'
name|'test_get_info_state_not_available'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Not Available'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_open_firmware
dedent|''
name|'def'
name|'test_get_info_state_open_firmware'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'Open Firmware'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_state_unmapped
dedent|''
name|'def'
name|'test_get_info_state_unmapped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_get_info_stub'
op|'('
string|"'The Universe'"
op|')'
newline|'\n'
name|'info_dict'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info_dict'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'FakeIVMOperator'
op|','
string|"'get_lpar'"
op|','
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'None'
op|')'
newline|'\n'
name|'name'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'instance_exists'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info
dedent|''
name|'def'
name|'test_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'max_mem'"
op|']'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'mem'"
op|']'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'num_cpu'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'cpu_time'"
op|']'
op|','
number|'939395'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remote_utility_1
dedent|''
name|'def'
name|'test_remote_utility_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_one'
op|'='
string|"'/some/file/'"
newline|'\n'
name|'path_two'
op|'='
string|"'/path/filename'"
newline|'\n'
name|'joined_path'
op|'='
name|'common'
op|'.'
name|'aix_path_join'
op|'('
name|'path_one'
op|','
name|'path_two'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'/some/file/path/filename'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'joined_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remote_utility_2
dedent|''
name|'def'
name|'test_remote_utility_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_one'
op|'='
string|"'/some/file/'"
newline|'\n'
name|'path_two'
op|'='
string|"'path/filename'"
newline|'\n'
name|'joined_path'
op|'='
name|'common'
op|'.'
name|'aix_path_join'
op|'('
name|'path_one'
op|','
name|'path_two'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'/some/file/path/filename'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'joined_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remote_utility_3
dedent|''
name|'def'
name|'test_remote_utility_3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_one'
op|'='
string|"'/some/file'"
newline|'\n'
name|'path_two'
op|'='
string|"'/path/filename'"
newline|'\n'
name|'joined_path'
op|'='
name|'common'
op|'.'
name|'aix_path_join'
op|'('
name|'path_one'
op|','
name|'path_two'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'/some/file/path/filename'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'joined_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remote_utility_4
dedent|''
name|'def'
name|'test_remote_utility_4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_one'
op|'='
string|"'/some/file'"
newline|'\n'
name|'path_two'
op|'='
string|"'path/filename'"
newline|'\n'
name|'joined_path'
op|'='
name|'common'
op|'.'
name|'aix_path_join'
op|'('
name|'path_one'
op|','
name|'path_two'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'/some/file/path/filename'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'joined_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|','
name|'backup_made'
op|','
nl|'\n'
name|'new_made'
op|','
nl|'\n'
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'network_info'
op|'.'
name|'append'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fa:89:f0:8b:9b:39'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|','
string|"'instance_exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
op|','
nl|'\n'
string|"'rename_lpar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'power_on'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
op|','
nl|'\n'
string|"'set_lpar_mac_base_value'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'instance_exists'
op|'('
string|"'rsz_foo'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'backup_made'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'backup_made'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
op|'.'
name|'set_lpar_mac_base_value'
op|'('
nl|'\n'
string|"'rsz_foo'"
op|','
string|"'fa:89:f0:8b:9b:39'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'instance_exists'
op|'('
string|"'foo'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'new_made'
op|')'
newline|'\n'
name|'if'
name|'new_made'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'destroy'
op|'('
string|"'foo'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
op|'.'
name|'rename_lpar'
op|'('
string|"'rsz_foo'"
op|','
nl|'\n'
string|"'foo'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'power_on'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'power_on'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'finish_revert_migration'
op|'('
name|'inst'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_new
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_backup
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_backup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(mriedem): tests the power_on=False case also'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_volume_use_instance_name
dedent|''
name|'def'
name|'test_migrate_volume_use_instance_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_name'
op|'='
string|"'instance-00000000'"
newline|'\n'
name|'lv_name'
op|'='
string|"'logical-vol-name'"
newline|'\n'
name|'src_host'
op|'='
string|"'compute_host_1'"
newline|'\n'
name|'dest'
op|'='
string|"'compute_host_1'"
newline|'\n'
name|'image_path'
op|'='
string|"'some/image/path'"
newline|'\n'
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'_copy_device_to_file'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'run_vios_command_as_root'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'blockdev_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
newline|'\n'
name|'file_path'
op|'='
name|'blockdev_op'
op|'.'
name|'migrate_volume'
op|'('
name|'lv_name'
op|','
name|'src_host'
op|','
name|'dest'
op|','
nl|'\n'
name|'image_path'
op|','
name|'inst_name'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'some/image/path/instance-00000000_rsz.gz'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'file_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_volume_use_lv_name
dedent|''
name|'def'
name|'test_migrate_volume_use_lv_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lv_name'
op|'='
string|"'logical-vol-name'"
newline|'\n'
name|'src_host'
op|'='
string|"'compute_host_1'"
newline|'\n'
name|'dest'
op|'='
string|"'compute_host_1'"
newline|'\n'
name|'image_path'
op|'='
string|"'some/image/path'"
newline|'\n'
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'_copy_device_to_file'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'run_vios_command_as_root'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'blockdev_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
newline|'\n'
name|'file_path'
op|'='
name|'blockdev_op'
op|'.'
name|'migrate_volume'
op|'('
name|'lv_name'
op|','
name|'src_host'
op|','
name|'dest'
op|','
nl|'\n'
name|'image_path'
op|')'
newline|'\n'
name|'expected_path'
op|'='
string|"'some/image/path/logical-vol-name_rsz.gz'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'file_path'
op|','
name|'expected_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_deploy_from_migrated_file
dedent|''
name|'def'
name|'_test_deploy_from_migrated_file'
op|'('
name|'self'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
newline|'\n'
name|'context'
op|'='
string|"'fake_context'"
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'network_info'
op|'.'
name|'append'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fa:89:f0:8b:9b:39'"
op|'}'
op|')'
newline|'\n'
name|'dest'
op|'='
string|"'10.8.46.20'"
newline|'\n'
name|'disk_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'['
string|"'root_disk_file'"
op|']'
op|'='
string|"'some/file/path.gz'"
newline|'\n'
name|'disk_info'
op|'['
string|"'old_lv_size'"
op|']'
op|'='
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'powervm_mgr'
op|'='
name|'dest'
op|')'
newline|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
newline|'\n'
name|'self'
op|'.'
name|'deploy_from_vios_file_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'power_on'
op|'='
name|'power_on'
newline|'\n'
nl|'\n'
DECL|function|fake_deploy_from_vios_file
name|'def'
name|'fake_deploy_from_vios_file'
op|'('
name|'lpar'
op|','
name|'file_path'
op|','
name|'size'
op|','
nl|'\n'
name|'decompress'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exp_file_path'
op|'='
string|"'some/file/path.gz'"
newline|'\n'
name|'exp_size'
op|'='
number|'40'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'exp_decompress'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'deploy_from_vios_file_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_file_path'
op|','
name|'file_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_size'
op|','
name|'size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_decompress'
op|','
name|'decompress'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'power_on'
op|','
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_deploy_from_vios_file'"
op|','
nl|'\n'
name|'fake_deploy_from_vios_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'finish_migration'
op|'('
name|'context'
op|','
name|'None'
op|','
nl|'\n'
name|'instance'
op|','
name|'disk_info'
op|','
name|'network_info'
op|','
nl|'\n'
name|'None'
op|','
name|'resize_instance'
op|'='
name|'True'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'deploy_from_vios_file_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deploy_from_migrated_file_power_on
dedent|''
name|'def'
name|'test_deploy_from_migrated_file_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_deploy_from_migrated_file'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deploy_from_migrated_file_power_off
dedent|''
name|'def'
name|'test_deploy_from_migrated_file_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_deploy_from_migrated_file'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_lpar_mac_base_value
dedent|''
name|'def'
name|'test_set_lpar_mac_base_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
newline|'\n'
name|'context'
op|'='
string|"'fake_context'"
newline|'\n'
name|'dest'
op|'='
string|"'10.8.46.20'"
comment|'# Some fake dest IP'
newline|'\n'
name|'instance_type'
op|'='
string|"'fake_instance_type'"
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'network_info'
op|'.'
name|'append'
op|'('
op|'{'
string|"'address'"
op|':'
string|"'fa:89:f0:8b:9b:39'"
op|'}'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'powervm_mgr'
op|'='
name|'dest'
op|')'
newline|'\n'
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_operator'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'get_vhost_by_instance_id'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'get_disk_name_by_vhost'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'power_off'"
op|','
nl|'\n'
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'get_logical_vol_size'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|','
string|"'_get_resize_name'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'rename_lpar'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_migrate_disk
name|'def'
name|'fake_migrate_disk'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'disk_info'
op|'['
string|"'fake_dict'"
op|']'
op|'='
string|"'some/file/path.gz'"
newline|'\n'
name|'return'
name|'disk_info'
newline|'\n'
nl|'\n'
DECL|function|fake_set_lpar_mac_base_value
dedent|''
name|'def'
name|'fake_set_lpar_mac_base_value'
op|'('
name|'inst_name'
op|','
name|'mac'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# get expected mac address from FakeIVM set'
nl|'\n'
indent|'            '
name|'fake_ivm'
op|'='
name|'FakeIVMOperator'
op|'('
name|'None'
op|')'
newline|'\n'
name|'exp_mac'
op|'='
name|'fake_ivm'
op|'.'
name|'macs_for_instance'
op|'('
name|'inst_name'
op|')'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_mac'
op|','
name|'mac'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'migrate_disk'"
op|','
nl|'\n'
name|'fake_migrate_disk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'set_lpar_mac_base_value'"
op|','
nl|'\n'
name|'fake_set_lpar_mac_base_value'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest'
op|','
name|'instance_type'
op|','
name|'network_info'
op|','
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_build_scp_command
dedent|''
name|'def'
name|'test_migrate_build_scp_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lv_name'
op|'='
string|"'logical-vol-name'"
newline|'\n'
name|'src_host'
op|'='
string|"'compute_host_1'"
newline|'\n'
name|'dest'
op|'='
string|"'compute_host_2'"
newline|'\n'
name|'image_path'
op|'='
string|"'some/image/path'"
newline|'\n'
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
nl|'\n'
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|function|fake_vios_to_vios_auth
name|'def'
name|'fake_vios_to_vios_auth'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key_name'
op|'='
string|"'some_key'"
newline|'\n'
name|'yield'
name|'key_name'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'vios_to_vios_auth'"
op|','
nl|'\n'
name|'fake_vios_to_vios_auth'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'run_vios_command_as_root'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_run_vios_command
name|'def'
name|'fake_run_vios_command'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cmd'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'exp_cmd'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
string|'\'scp -o "StrictHostKeyChecking no" -i\''
op|','
nl|'\n'
string|"'some_key'"
op|','
nl|'\n'
string|"'some/image/path/logical-vol-name_rsz.gz'"
op|','
nl|'\n'
string|"'fake_user@compute_host_2:some/image/path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_cmd'
op|','
name|'cmd'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
op|','
nl|'\n'
string|"'run_vios_command'"
op|','
nl|'\n'
name|'fake_run_vios_command'
op|')'
newline|'\n'
nl|'\n'
name|'blockdev_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_disk_adapter'
newline|'\n'
name|'file_path'
op|'='
name|'blockdev_op'
op|'.'
name|'migrate_volume'
op|'('
name|'lv_name'
op|','
name|'src_host'
op|','
name|'dest'
op|','
nl|'\n'
name|'image_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_resize_name
dedent|''
name|'def'
name|'test_get_resize_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_name'
op|'='
string|"'instance-00000001'"
newline|'\n'
name|'expected_name'
op|'='
string|"'rsz_instance-00000001'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_get_resize_name'
op|'('
name|'inst_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_name'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_long_resize_name
dedent|''
name|'def'
name|'test_get_long_resize_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_name'
op|'='
string|"'some_really_long_instance_name_00000001'"
newline|'\n'
name|'expected_name'
op|'='
string|"'rsz__really_long_instance_name_00000001'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_get_resize_name'
op|'('
name|'inst_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_name'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_raises_exception
dedent|''
name|'def'
name|'test_finish_migration_raises_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the finish_migration method will raise an exception'
nl|'\n'
comment|"# if the 'root_disk_file' key is not found in the disk_info parameter."
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
nl|'\n'
string|"'_create_lpar_instance'"
op|','
name|'self'
op|'.'
name|'fake_create_lpar_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMUnrecognizedRootDevice'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'finish_migration'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'None'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
op|'{'
string|"'old_lv_size'"
op|':'
string|"'20'"
op|'}'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_info'
op|','
name|'None'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_lpar_instance_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_successful
dedent|''
name|'def'
name|'test_finish_migration_successful'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests a successful migration (resize) flow and asserts various'
nl|'\n'
comment|'# methods called along the way with expected argument values.'
nl|'\n'
indent|'        '
name|'fake_file_path'
op|'='
string|"'some/file/path.py'"
newline|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'root_disk_file'"
op|':'
name|'fake_file_path'
op|','
nl|'\n'
string|"'old_lv_size'"
op|':'
string|"'10'"
op|'}'
newline|'\n'
name|'fake_flavor'
op|'='
op|'{'
string|"'root_gb'"
op|':'
number|'20'
op|'}'
newline|'\n'
name|'fake_extract_flavor'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'fake_flavor'
newline|'\n'
name|'self'
op|'.'
name|'fake_deploy_from_migrated_file_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_deploy_from_migrated_file
name|'def'
name|'fake_deploy_from_migrated_file'
op|'('
name|'lpar'
op|','
name|'file_path'
op|','
name|'size'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_deploy_from_migrated_file_called'
op|'='
name|'True'
newline|'\n'
comment|'# assert the lpar is the one created for this test'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'lpar'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_file_path'
op|','
name|'file_path'
op|')'
newline|'\n'
comment|'# this tests that the 20GB fake_flavor was used'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_flavor'
op|'['
string|"'root_gb'"
op|']'
op|'*'
name|'pow'
op|'('
number|'1024'
op|','
number|'3'
op|')'
op|','
name|'size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
nl|'\n'
string|"'_create_lpar_instance'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_create_lpar_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'flavors'
op|','
string|"'extract_flavor'"
op|','
name|'fake_extract_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
nl|'\n'
string|"'deploy_from_migrated_file'"
op|','
nl|'\n'
name|'fake_deploy_from_migrated_file'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'finish_migration'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'disk_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_info'
op|','
nl|'\n'
name|'None'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_lpar_instance_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_deploy_from_migrated_file_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_host_resources_insufficient_memory
dedent|''
name|'def'
name|'test_check_host_resources_insufficient_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the _check_host_resources method will raise an exception'
nl|'\n'
comment|'# when the host has insufficient memory for the request.'
nl|'\n'
indent|'        '
name|'host_stats'
op|'='
op|'{'
string|"'host_memory_free'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'12'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMInsufficientFreeMemory'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_check_host_resources'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'vcpus'
op|'='
number|'2'
op|','
name|'mem'
op|'='
number|'4096'
op|','
name|'host_stats'
op|'='
name|'host_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_host_resources_insufficient_vcpus
dedent|''
name|'def'
name|'test_check_host_resources_insufficient_vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the _check_host_resources method will raise an exception'
nl|'\n'
comment|'# when the host has insufficient CPU for the request.'
nl|'\n'
indent|'        '
name|'host_stats'
op|'='
op|'{'
string|"'host_memory_free'"
op|':'
number|'4096'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMInsufficientCPU'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_check_host_resources'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'vcpus'
op|'='
number|'12'
op|','
name|'mem'
op|'='
number|'512'
op|','
name|'host_stats'
op|'='
name|'host_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_lpar_instance_raise_insufficient_memory
dedent|''
name|'def'
name|'test_create_lpar_instance_raise_insufficient_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test will raise an exception because we use the instance'
nl|'\n'
comment|'# created for this test case which requires 1024 MB of memory'
nl|'\n'
comment|'# but the host only has 512 free.'
nl|'\n'
indent|'        '
name|'host_stats'
op|'='
op|'{'
string|"'host_memory_free'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'12'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMInsufficientFreeMemory'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_create_lpar_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'fake_network_info'
op|','
name|'host_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_lpar_instance_raise_insufficient_vcpus
dedent|''
name|'def'
name|'test_create_lpar_instance_raise_insufficient_vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test will raise an exception because we use the instance'
nl|'\n'
comment|'# created for this test case which requires 2 CPUs but the host only'
nl|'\n'
comment|'# has 1 CPU free.'
nl|'\n'
indent|'        '
name|'host_stats'
op|'='
op|'{'
string|"'host_memory_free'"
op|':'
number|'4096'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMInsufficientCPU'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|'.'
name|'_create_lpar_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'fake_network_info'
op|','
name|'host_stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration_old_instance_destroyed
dedent|''
name|'def'
name|'test_confirm_migration_old_instance_destroyed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the source instance is destroyed when a migration'
nl|'\n'
comment|'# is confirmed.'
nl|'\n'
indent|'        '
name|'resize_name'
op|'='
string|"'rsz_instance'"
newline|'\n'
name|'self'
op|'.'
name|'fake_destroy_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_get_resize_name
name|'def'
name|'fake_get_resize_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'return'
name|'resize_name'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance_name'
op|','
name|'destroy_disks'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_destroy_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resize_name'
op|','
name|'instance_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'destroy_disks'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|','
string|"'_get_resize_name'"
op|','
nl|'\n'
name|'fake_get_resize_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
op|','
string|"'destroy'"
op|','
nl|'\n'
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'confirm_migration'
op|'('
name|'True'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_destroy_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_stats
dedent|''
name|'def'
name|'test_get_host_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_stats'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_host_stats'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'host_stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'vcpus'"
op|']'
op|','
number|'8.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'round'
op|'('
name|'host_stats'
op|'['
string|"'vcpus_used'"
op|']'
op|','
number|'1'
op|')'
op|','
number|'1.7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'host_memory_total'"
op|']'
op|','
number|'65536'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'host_memory_free'"
op|']'
op|','
number|'46336'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'disk_total'"
op|']'
op|','
number|'10168'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'disk_used'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'disk_available'"
op|']'
op|','
number|'10168'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'disk_total'"
op|']'
op|','
nl|'\n'
name|'host_stats'
op|'['
string|"'disk_used'"
op|']'
op|'+'
nl|'\n'
name|'host_stats'
op|'['
string|"'disk_available'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'cpu_info'"
op|']'
op|','
op|'('
string|"'ppc64'"
op|','
string|"'powervm'"
op|','
string|"'3940'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'hypervisor_type'"
op|']'
op|','
string|"'powervm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'hypervisor_version'"
op|']'
op|','
string|"'7.1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|','
string|'"fake-powervm"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'supported_instances'"
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
string|'"ppc64"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'supported_instances'"
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
string|'"powervm"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'host_stats'
op|'['
string|"'supported_instances'"
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|','
string|'"hvm"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_resource
dedent|''
name|'def'
name|'test_get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_available_resource'
op|'('
name|'nodename'
op|'='
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'8.0'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'vcpus'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'65536'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'memory_mb'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
number|'10168'
op|'/'
number|'1024'
op|')'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'local_gb'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1.7'
op|','
name|'round'
op|'('
name|'res'
op|'.'
name|'pop'
op|'('
string|"'vcpus_used'"
op|')'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
number|'65536'
op|'-'
number|'46336'
op|')'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'memory_mb_used'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'local_gb_used'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'powervm'"
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'hypervisor_type'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'7.1'"
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'hypervisor_version'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'fake-powervm'"
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'hypervisor_hostname'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'ppc64,powervm,3940'"
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'cpu_info'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'10168'
op|','
name|'res'
op|'.'
name|'pop'
op|'('
string|"'disk_available_least'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'res'
op|')'
op|','
string|"'Did not test all keys.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_uptime
dedent|''
name|'def'
name|'test_get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the get_host_uptime method issues the proper sysstat'
nl|'\n'
comment|'# command and parses the output correctly.'
nl|'\n'
indent|'        '
name|'exp_cmd'
op|'='
string|'"ioscli sysstat -short fake_user"'
newline|'\n'
name|'output'
op|'='
op|'['
op|'('
string|'"02:54PM  up 24 days,  5:41, 1 user, "'
nl|'\n'
string|'"load average: 0.06, 0.03, 0.02"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_op'
op|'.'
name|'_operator'
op|','
string|"'run_vios_command'"
op|')'
newline|'\n'
name|'fake_op'
op|'.'
name|'_operator'
op|'.'
name|'run_vios_command'
op|'('
name|'exp_cmd'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'output'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# the host parameter isn't used so we just pass None"
nl|'\n'
name|'uptime'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'get_host_uptime'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'output'
op|'['
number|'0'
op|']'
op|','
name|'uptime'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_to_aggregate
dedent|''
name|'def'
name|'test_add_to_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Simple test to make sure the unimplemented method passes.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'add_to_aggregate'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'aggregate'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_from_aggregate
dedent|''
name|'def'
name|'test_remove_from_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Simple test to make sure the unimplemented method passes.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'remove_from_aggregate'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'aggregate'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_undo_aggregate_operation
dedent|''
name|'def'
name|'test_undo_aggregate_operation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Simple test to make sure the unimplemented method passes.'
nl|'\n'
DECL|function|fake_operation
indent|'        '
name|'def'
name|'fake_operation'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'undo_aggregate_operation'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'op'
op|'='
name|'fake_operation'
op|','
nl|'\n'
name|'aggregate'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'foo'"
op|'}'
op|','
name|'host'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_plug_vifs
dedent|''
name|'def'
name|'test_plug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'plug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'context'
op|'='
name|'None'
op|','
name|'instance'
op|'='
name|'None'
op|','
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'reboot_type'
op|'='
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_manage_image_cache
dedent|''
name|'def'
name|'test_manage_image_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method passes (does nothing) since'
nl|'\n'
comment|"# it's not implemented in the powervm driver and it passes"
nl|'\n'
comment|'# in the driver base class.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'manage_image_cache'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method passes (does nothing) since'
nl|'\n'
comment|'# it simply passes in the powervm driver but it raises a'
nl|'\n'
comment|'# NotImplementedError in the base driver class.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'pause'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_power_action
dedent|''
name|'def'
name|'test_host_power_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'host_power_action'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake'"
op|','
name|'action'
op|'='
string|"'die!'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PowerVMDriverLparTestCase
dedent|''
dedent|''
name|'class'
name|'PowerVMDriverLparTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for PowerVM connection calls."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PowerVMDriverLparTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'powervm_operator'
op|'.'
name|'PowerVMOperator'
op|','
string|"'_update_host_stats'"
op|','
nl|'\n'
name|'lambda'
name|'self'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_connection'
op|'='
name|'powervm_driver'
op|'.'
name|'PowerVMDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_lpar_mac_base_value_command
dedent|''
name|'def'
name|'test_set_lpar_mac_base_value_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_name'
op|'='
string|"'some_instance'"
newline|'\n'
name|'mac'
op|'='
string|"'FA:98:64:2B:29:39'"
newline|'\n'
name|'exp_mac_str'
op|'='
name|'mac'
op|'['
op|':'
op|'-'
number|'2'
op|']'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'exp_cmd'
op|'='
op|'('
string|'\'chsyscfg -r lpar -i "name=%(inst_name)s, \''
nl|'\n'
string|'\'virtual_eth_mac_base_value=%(exp_mac_str)s"\''
nl|'\n'
op|'%'
op|'{'
string|"'inst_name'"
op|':'
name|'inst_name'
op|','
string|"'exp_mac_str'"
op|':'
name|'exp_mac_str'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_connection'
op|'.'
name|'_powervm'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake_op'
op|'.'
name|'_operator'
op|','
string|"'run_vios_command'"
op|')'
newline|'\n'
name|'fake_op'
op|'.'
name|'_operator'
op|'.'
name|'run_vios_command'
op|'('
name|'exp_cmd'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_op'
op|'.'
name|'_operator'
op|'.'
name|'set_lpar_mac_base_value'
op|'('
name|'inst_name'
op|','
name|'mac'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PowerVMDriverCommonTestCase
dedent|''
dedent|''
name|'class'
name|'PowerVMDriverCommonTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for the nova.virt.powervm.common module."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PowerVMDriverCommonTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
comment|"# our fake connection information never changes since we can't"
nl|'\n'
comment|'# actually connect to anything for these tests'
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'common'
op|'.'
name|'Connection'
op|'('
string|"'fake_host'"
op|','
string|"'user'"
op|','
string|"'password'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_connection_ssh_is_none
dedent|''
name|'def'
name|'test_check_connection_ssh_is_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Passes a null ssh object to the check_connection method.\n        The method should create a new ssh connection using the\n        Connection object and return it.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'ssh_connect'"
op|','
name|'fake_ssh_connect'
op|')'
newline|'\n'
name|'ssh'
op|'='
name|'common'
op|'.'
name|'check_connection'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'ssh'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_connection_transport_is_dead
dedent|''
name|'def'
name|'test_check_connection_transport_is_dead'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Passes an ssh object to the check_connection method which\n        does not have a transport set.\n        The method should create a new ssh connection using the\n        Connection object and return it.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'ssh_connect'"
op|','
name|'fake_ssh_connect'
op|')'
newline|'\n'
name|'ssh1'
op|'='
name|'fake_ssh_connect'
op|'('
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'ssh2'
op|'='
name|'common'
op|'.'
name|'check_connection'
op|'('
name|'ssh1'
op|','
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'ssh2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'ssh1'
op|','
name|'ssh2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_connection_raise_ssh_exception
dedent|''
name|'def'
name|'test_check_connection_raise_ssh_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Passes an ssh object to the check_connection method which\n        does not have a transport set.\n        The method should raise an SSHException.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'ssh_connect'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'x'
op|','
op|'**'
name|'y'
op|':'
name|'raise_'
op|'('
name|'paramiko'
op|'.'
name|'SSHException'
op|'('
nl|'\n'
string|"'Error connecting to host.'"
op|')'
op|')'
op|')'
newline|'\n'
name|'ssh'
op|'='
name|'fake_ssh_connect'
op|'('
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'paramiko'
op|'.'
name|'SSHException'
op|','
nl|'\n'
name|'common'
op|'.'
name|'check_connection'
op|','
nl|'\n'
name|'ssh'
op|','
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_copy_image_file
dedent|''
dedent|''
name|'def'
name|'fake_copy_image_file'
op|'('
name|'source_path'
op|','
name|'remote_path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"'/tmp/fake_file'"
op|','
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PowerVMLocalVolumeAdapterTestCase
dedent|''
name|'class'
name|'PowerVMLocalVolumeAdapterTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Unit tests for nova.virt.powervm.blockdev.PowerVMLocalVolumeAdapter.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PowerVMLocalVolumeAdapterTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'common'
op|'.'
name|'Connection'
op|'('
name|'host'
op|'='
string|"'fake_compute_1'"
op|','
nl|'\n'
name|'username'
op|'='
string|"'fake_user'"
op|','
nl|'\n'
name|'password'
op|'='
string|"'fake_pass'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'='
name|'powervm_blockdev'
op|'.'
name|'PowerVMLocalVolumeAdapter'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'create_instance'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_id'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_image_fails_no_disk_name
dedent|''
name|'def'
name|'test_create_volume_from_image_fails_no_disk_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that delete_volume is not called after create_logical_volume\n        fails.\n        """'
newline|'\n'
nl|'\n'
DECL|function|fake_create_logical_volume
name|'def'
name|'fake_create_logical_volume'
op|'('
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PowerVMNoSpaceLeftOnVolumeGroup'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_volume
dedent|''
name|'def'
name|'fake_delete_volume'
op|'('
name|'volume_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should not be called to do cleanup."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'_copy_image_file'"
op|','
nl|'\n'
name|'fake_copy_image_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'_create_logical_volume'"
op|','
nl|'\n'
name|'fake_create_logical_volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'delete_volume'"
op|','
nl|'\n'
name|'fake_delete_volume'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMNoSpaceLeftOnVolumeGroup'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'create_volume_from_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_image_fails_with_disk_name
dedent|''
name|'def'
name|'test_create_volume_from_image_fails_with_disk_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that delete_volume is called to cleanup the volume after\n        create_logical_volume was successful but copy_file_to_device fails.\n        """'
newline|'\n'
nl|'\n'
name|'disk_name'
op|'='
string|"'lvm_disk_name'"
newline|'\n'
nl|'\n'
DECL|function|fake_create_logical_volume
name|'def'
name|'fake_create_logical_volume'
op|'('
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'disk_name'
newline|'\n'
nl|'\n'
DECL|function|fake_copy_file_to_device
dedent|''
name|'def'
name|'fake_copy_file_to_device'
op|'('
name|'source_path'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PowerVMConnectionFailed'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'delete_volume_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_volume
name|'def'
name|'fake_delete_volume'
op|'('
name|'volume_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'disk_name'
op|','
name|'volume_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_volume_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'_copy_image_file'"
op|','
nl|'\n'
name|'fake_copy_image_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'_create_logical_volume'"
op|','
nl|'\n'
name|'fake_create_logical_volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'_copy_file_to_device'"
op|','
nl|'\n'
name|'fake_copy_file_to_device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
string|"'delete_volume'"
op|','
nl|'\n'
name|'fake_delete_volume'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMConnectionFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'create_volume_from_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'delete_volume_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_image_file_ftp_failed
dedent|''
name|'def'
name|'test_copy_image_file_ftp_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_path'
op|'='
name|'os'
op|'.'
name|'tempnam'
op|'('
string|"'/tmp'"
op|','
string|"'image'"
op|')'
newline|'\n'
name|'remote_path'
op|'='
string|"'/mnt/openstack/images'"
newline|'\n'
name|'exp_remote_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'remote_path'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'file_path'
op|')'
op|')'
newline|'\n'
name|'exp_cmd'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
string|"'/usr/bin/rm -f'"
op|','
name|'exp_remote_path'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_adapter'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'run_vios_command'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_checksum_local_file'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'common'
op|','
string|"'ftp_put_command'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
nl|'\n'
string|"'run_vios_command_as_root'"
op|')'
newline|'\n'
name|'msg_args'
op|'='
op|'{'
string|"'ftp_cmd'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'source_path'"
op|':'
name|'file_path'
op|','
nl|'\n'
string|"'dest_path'"
op|':'
name|'remote_path'
op|'}'
newline|'\n'
name|'exp_exception'
op|'='
name|'exception'
op|'.'
name|'PowerVMFTPTransferFailed'
op|'('
op|'**'
name|'msg_args'
op|')'
newline|'\n'
nl|'\n'
name|'common'
op|'.'
name|'ftp_put_command'
op|'('
name|'self'
op|'.'
name|'connection'
op|','
name|'file_path'
op|','
nl|'\n'
name|'remote_path'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exp_exception'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'run_vios_command_as_root'
op|'('
name|'exp_cmd'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMFTPTransferFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'_copy_image_file'
op|','
nl|'\n'
name|'file_path'
op|','
name|'remote_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_image_file_wrong_checksum
dedent|''
name|'def'
name|'test_copy_image_file_wrong_checksum'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_path'
op|'='
name|'os'
op|'.'
name|'tempnam'
op|'('
string|"'/tmp'"
op|','
string|"'image'"
op|')'
newline|'\n'
name|'remote_path'
op|'='
string|"'/mnt/openstack/images'"
newline|'\n'
name|'exp_remote_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'remote_path'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'file_path'
op|')'
op|')'
newline|'\n'
name|'exp_cmd'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
string|"'/usr/bin/rm -f'"
op|','
name|'exp_remote_path'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_md5sum_remote_file
name|'def'
name|'fake_md5sum_remote_file'
op|'('
name|'remote_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'3202937169'"
newline|'\n'
nl|'\n'
DECL|function|fake_checksum_local_file
dedent|''
name|'def'
name|'fake_checksum_local_file'
op|'('
name|'source_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'3229026618'"
newline|'\n'
nl|'\n'
dedent|''
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_adapter'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'run_vios_command'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_md5sum_remote_file'"
op|','
nl|'\n'
name|'fake_md5sum_remote_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_checksum_local_file'"
op|','
nl|'\n'
name|'fake_checksum_local_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'ftp_put_command'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|','
nl|'\n'
string|"'run_vios_command_as_root'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'run_vios_command_as_root'
op|'('
name|'exp_cmd'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMFileTransferFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'_copy_image_file'
op|','
nl|'\n'
name|'file_path'
op|','
name|'remote_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_checksum_local_file
dedent|''
name|'def'
name|'test_checksum_local_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_path'
op|'='
name|'os'
op|'.'
name|'tempnam'
op|'('
string|"'/tmp'"
op|','
string|"'image'"
op|')'
newline|'\n'
name|'img_file'
op|'='
name|'file'
op|'('
name|'file_path'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'img_file'
op|'.'
name|'write'
op|'('
string|"'This is a test'"
op|')'
newline|'\n'
name|'img_file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'exp_md5sum'
op|'='
string|"'ce114e4501d2f4e2dcea3e17b546f339'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'_checksum_local_file'
op|'('
name|'file_path'
op|')'
op|','
nl|'\n'
name|'exp_md5sum'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'file_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_image_file_from_host_with_wrong_checksum
dedent|''
name|'def'
name|'test_copy_image_file_from_host_with_wrong_checksum'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'local_path'
op|'='
string|"'some/tmp'"
newline|'\n'
name|'remote_path'
op|'='
name|'os'
op|'.'
name|'tempnam'
op|'('
string|"'/mnt/openstack/images'"
op|','
string|"'image'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_md5sum_remote_file
name|'def'
name|'fake_md5sum_remote_file'
op|'('
name|'remote_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'3202937169'"
newline|'\n'
nl|'\n'
DECL|function|fake_checksum_local_file
dedent|''
name|'def'
name|'fake_checksum_local_file'
op|'('
name|'source_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'3229026618'"
newline|'\n'
nl|'\n'
dedent|''
name|'fake_noop'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
newline|'\n'
name|'fake_op'
op|'='
name|'self'
op|'.'
name|'powervm_adapter'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'run_vios_command_as_root'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_md5sum_remote_file'"
op|','
nl|'\n'
name|'fake_md5sum_remote_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_op'
op|','
string|"'_checksum_local_file'"
op|','
nl|'\n'
name|'fake_checksum_local_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'common'
op|','
string|"'ftp_get_command'"
op|','
name|'fake_noop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PowerVMFileTransferFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'powervm_adapter'
op|'.'
name|'_copy_image_file_from_host'
op|','
nl|'\n'
name|'remote_path'
op|','
name|'local_path'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
