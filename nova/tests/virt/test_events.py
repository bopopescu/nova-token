begin_unit
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'event'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestEvents
name|'class'
name|'TestEvents'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_event_repr
indent|'    '
name|'def'
name|'test_event_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'1234'"
newline|'\n'
name|'lifecycle'
op|'='
name|'event'
op|'.'
name|'EVENT_LIFECYCLE_RESUMED'
newline|'\n'
nl|'\n'
name|'e'
op|'='
name|'event'
op|'.'
name|'Event'
op|'('
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"<Event: %s>"'
op|'%'
name|'t'
op|')'
newline|'\n'
nl|'\n'
name|'e'
op|'='
name|'event'
op|'.'
name|'InstanceEvent'
op|'('
name|'uuid'
op|','
name|'timestamp'
op|'='
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"<InstanceEvent: %s, %s>"'
op|'%'
op|'('
name|'t'
op|','
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'e'
op|'='
name|'event'
op|'.'
name|'LifecycleEvent'
op|'('
name|'uuid'
op|','
name|'lifecycle'
op|','
name|'timestamp'
op|'='
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"<LifecycleEvent: %s, %s => Resumed>"'
op|'%'
nl|'\n'
op|'('
name|'t'
op|','
name|'uuid'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
