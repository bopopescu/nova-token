begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'agent'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AgentEnabledCase
name|'class'
name|'AgentEnabledCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_agent_is_present
indent|'    '
name|'def'
name|'test_agent_is_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_use_agent_default'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
nl|'\n'
op|'{'
string|'"image_xenapi_use_agent"'
op|':'
string|'"true"'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'agent'
op|'.'
name|'should_use_agent'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_is_disabled
dedent|''
name|'def'
name|'test_agent_is_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_use_agent_default'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
nl|'\n'
op|'{'
string|'"image_xenapi_use_agent"'
op|':'
string|'"false"'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'agent'
op|'.'
name|'should_use_agent'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_uses_deafault_when_prop_invalid
dedent|''
name|'def'
name|'test_agent_uses_deafault_when_prop_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_use_agent_default'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
nl|'\n'
op|'{'
string|'"image_xenapi_use_agent"'
op|':'
string|'"bob"'
op|'}'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"uuid"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'agent'
op|'.'
name|'should_use_agent'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_default_not_present
dedent|''
name|'def'
name|'test_agent_default_not_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_use_agent_default'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'agent'
op|'.'
name|'should_use_agent'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_default_present
dedent|''
name|'def'
name|'test_agent_default_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_use_agent_default'
op|'='
name|'True'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"system_metadata"'
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'agent'
op|'.'
name|'should_use_agent'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
