begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'#    Copyright 2012 University Of Minho'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_mode'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'fileutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'loopingcall'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'processutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_pci_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fake_libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'version'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
name|'import'
name|'api'
name|'as'
name|'disk'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'event'
name|'as'
name|'virtevent'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'firewall'
name|'as'
name|'base_firewall'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'blockinfo'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'config'
name|'as'
name|'vconfig'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'driver'
name|'as'
name|'libvirt_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'firewall'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'imagebackend'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'utils'
name|'as'
name|'libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'netutils'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'libvirt'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'fakelibvirt'
name|'as'
name|'libvirt'
newline|'\n'
dedent|''
name|'libvirt_driver'
op|'.'
name|'libvirt'
op|'='
name|'libvirt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'my_ip'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'base_dir_name'"
op|','
string|"'nova.virt.libvirt.imagecache'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'instances_path'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_fake_network_info
name|'_fake_network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
newline|'\n'
DECL|variable|_fake_stub_out_get_nw_info
name|'_fake_stub_out_get_nw_info'
op|'='
name|'fake_network'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
newline|'\n'
DECL|variable|_ipv4_like
name|'_ipv4_like'
op|'='
name|'fake_network'
op|'.'
name|'ipv4_like'
newline|'\n'
nl|'\n'
name|'_fake_NodeDevXml'
op|'='
op|'{'
string|'"pci_0000_04_00_3"'
op|':'
string|'"""\n        <device>\n        <name>pci_0000_04_00_3</name>\n        <parent>pci_0000_00_01_1</parent>\n        <driver>\n            <name>igb</name>\n        </driver>\n        <capability type=\'pci\'>\n            <domain>0</domain>\n            <bus>4</bus>\n            <slot>0</slot>\n            <function>3</function>\n            <product id=\'0x1521\'>I350 Gigabit Network Connection</product>\n            <vendor id=\'0x8086\'>Intel Corporation</vendor>\n            <capability type=\'virt_functions\'>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x10\' function=\'0x3\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x10\' function=\'0x7\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x11\' function=\'0x3\'/>\n              <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x11\' function=\'0x7\'/>\n            </capability>\n        </capability>\n      </device>"""'
op|','
nl|'\n'
string|'"pci_0000_04_10_7"'
op|':'
string|'"""\n      <device>\n         <name>pci_0000_04_10_7</name>\n         <parent>pci_0000_00_01_1</parent>\n         <driver>\n         <name>igbvf</name>\n         </driver>\n         <capability type=\'pci\'>\n          <domain>0</domain>\n          <bus>4</bus>\n          <slot>16</slot>\n          <function>7</function>\n       <product id=\'0x1520\'>I350 Ethernet Controller Virtual Function</product>\n          <vendor id=\'0x8086\'>Intel Corporation</vendor>\n          <capability type=\'phys_function\'>\n             <address domain=\'0x0000\' bus=\'0x04\' slot=\'0x00\' function=\'0x3\'/>\n          </capability>\n          <capability type=\'virt_functions\'>\n          </capability>\n        </capability>\n    </device>"""'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_concurrency
name|'def'
name|'_concurrency'
op|'('
name|'signal'
op|','
name|'wait'
op|','
name|'done'
op|','
name|'target'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'signal'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'wait'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'done'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirDomainSnapshot
dedent|''
name|'class'
name|'FakeVirDomainSnapshot'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'dom'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dom'
op|'='
name|'dom'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtDomain
dedent|''
dedent|''
name|'class'
name|'FakeVirtDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fake_xml'
op|'='
name|'None'
op|','
name|'uuidstr'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'uuidstr'
op|'='
name|'uuidstr'
newline|'\n'
name|'if'
name|'fake_xml'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dom_xml'
op|'='
name|'fake_xml'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|member|name
dedent|''
dedent|''
name|'def'
name|'name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"fake-domain %s"'
op|'%'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|info
dedent|''
name|'def'
name|'info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|managedSave
dedent|''
name|'def'
name|'managedSave'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|createWithFlags
dedent|''
name|'def'
name|'createWithFlags'
op|'('
name|'self'
op|','
name|'launch_flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_fake_dom_xml'
newline|'\n'
nl|'\n'
DECL|member|UUIDString
dedent|''
name|'def'
name|'UUIDString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'uuidstr'
newline|'\n'
nl|'\n'
DECL|member|attachDeviceFlags
dedent|''
name|'def'
name|'attachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|detachDeviceFlags
dedent|''
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|snapshotCreateXML
dedent|''
name|'def'
name|'snapshotCreateXML'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockCommit
dedent|''
name|'def'
name|'blockCommit'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'base'
op|','
name|'top'
op|','
name|'bandwidth'
op|'='
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockRebase
dedent|''
name|'def'
name|'blockRebase'
op|'('
name|'self'
op|','
name|'disk'
op|','
name|'base'
op|','
name|'bandwidth'
op|'='
number|'0'
op|','
name|'flags'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|blockJobInfo
dedent|''
name|'def'
name|'blockJobInfo'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CacheConcurrencyTestCase
dedent|''
dedent|''
name|'class'
name|'CacheConcurrencyTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CacheConcurrencyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
comment|'# utils.synchronized() will create the lock_path for us if it'
nl|'\n'
comment|"# doesn't already exist. It will also delete it when it's done,"
nl|'\n'
comment|'# which can cause race conditions with the multiple threads we'
nl|'\n'
comment|'# use for tests. So, create the path here so utils.synchronized()'
nl|'\n'
comment|"# won't delete it out from under one of the threads."
nl|'\n'
name|'self'
op|'.'
name|'lock_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
string|"'locks'"
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'self'
op|'.'
name|'lock_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_exists
name|'def'
name|'fake_exists'
op|'('
name|'fname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'basedir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'CONF'
op|'.'
name|'base_dir_name'
op|')'
newline|'\n'
name|'if'
name|'fname'
op|'=='
name|'basedir'
name|'or'
name|'fname'
op|'=='
name|'self'
op|'.'
name|'lock_path'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
dedent|''
name|'def'
name|'fake_extend'
op|'('
name|'image'
op|','
name|'size'
op|','
name|'use_cow'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_same_fname_concurrency
dedent|''
name|'def'
name|'test_same_fname_concurrency'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensures that the same fname cache runs at a sequentially.'
nl|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'backend'
op|'='
name|'imagebackend'
op|'.'
name|'Backend'
op|'('
name|'False'
op|')'
newline|'\n'
name|'wait1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'instance'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig1'
op|','
name|'wait'
op|'='
name|'wait1'
op|','
name|'done'
op|'='
name|'done1'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Thread 1 should run before thread 2.'
nl|'\n'
name|'sig1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'instance'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig2'
op|','
name|'wait'
op|'='
name|'wait2'
op|','
name|'done'
op|'='
name|'done2'
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wait1'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
dedent|''
name|'done1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# Wait on greenthreads to assert they didn't raise exceptions"
nl|'\n'
comment|'# during execution'
nl|'\n'
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_different_fname_concurrency
dedent|''
name|'def'
name|'test_different_fname_concurrency'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensures that two different fname caches are concurrent.'
nl|'\n'
indent|'        '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'backend'
op|'='
name|'imagebackend'
op|'.'
name|'Backend'
op|'('
name|'False'
op|')'
newline|'\n'
name|'wait1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig1'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'instance'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname2'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig1'
op|','
name|'wait'
op|'='
name|'wait1'
op|','
name|'done'
op|'='
name|'done1'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Thread 1 should run before thread 2.'
nl|'\n'
name|'sig1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'done2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'sig2'
op|'='
name|'eventlet'
op|'.'
name|'event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'backend'
op|'.'
name|'image'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'instance'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|','
nl|'\n'
string|"'name'"
op|')'
op|'.'
name|'cache'
op|','
nl|'\n'
name|'_concurrency'
op|','
string|"'fname1'"
op|','
name|'None'
op|','
nl|'\n'
name|'signal'
op|'='
name|'sig2'
op|','
name|'wait'
op|'='
name|'wait2'
op|','
name|'done'
op|'='
name|'done2'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# Wait for thread 2 to start.'
nl|'\n'
name|'sig2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'wait2'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'done2'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wait1'
op|'.'
name|'send'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
comment|"# Wait on greenthreads to assert they didn't raise exceptions"
nl|'\n'
comment|'# during execution'
nl|'\n'
dedent|''
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVolumeDriver
dedent|''
dedent|''
name|'class'
name|'FakeVolumeDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|attach_volume
dedent|''
name|'def'
name|'attach_volume'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|detach_volume
dedent|''
name|'def'
name|'detach_volume'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_xml
dedent|''
name|'def'
name|'get_xml'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConfigGuestDisk
dedent|''
dedent|''
name|'class'
name|'FakeConfigGuestDisk'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'source_type'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'driver_cache'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConfigGuest
dedent|''
dedent|''
name|'class'
name|'FakeConfigGuest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver_cache'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeNodeDevice
dedent|''
dedent|''
name|'class'
name|'FakeNodeDevice'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fakexml'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'xml'
op|'='
name|'fakexml'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'xml'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtConnTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtConnTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'test'
op|'.'
name|'SampleNetworks'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_call'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'temp_dir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'temp_dir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
name|'temp_dir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
comment|'# Force libvirt to return a host UUID that matches the serial in'
nl|'\n'
comment|'# nova.tests.fakelibvirt. This is necessary because the host UUID'
nl|'\n'
comment|'# returned by libvirt becomes the serial whose value is checked for in'
nl|'\n'
comment|'# test_xml_and_uri_* below.'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.LibvirtDriver.get_host_uuid'"
op|','
nl|'\n'
name|'lambda'
name|'_'
op|':'
string|"'cef19ce0-0ca2-11df-855d-b19fbce37686'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.imagebackend.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
name|'def'
name|'fake_extend'
op|'('
name|'image'
op|','
name|'size'
op|','
name|'use_cow'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeConn
name|'class'
name|'FakeConn'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|getCapabilities
indent|'            '
name|'def'
name|'getCapabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
string|'"""Ensure standard capabilities being returned."""'
newline|'\n'
name|'return'
string|'"""<capabilities>\n                            <host><cpu><arch>x86_64</arch></cpu></host>\n                          </capabilities>"""'
newline|'\n'
nl|'\n'
DECL|member|getVersion
dedent|''
name|'def'
name|'getVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'1005001'
newline|'\n'
nl|'\n'
DECL|member|getLibVersion
dedent|''
name|'def'
name|'getLibVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'11'
newline|'\n'
nl|'\n'
DECL|member|registerCloseCallback
dedent|''
name|'def'
name|'registerCloseCallback'
op|'('
name|'self'
op|','
name|'cb'
op|','
name|'opaque'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|nwfilterDefineXML
dedent|''
name|'def'
name|'nwfilterDefineXML'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|nodeDeviceLookupByName
dedent|''
name|'def'
name|'nodeDeviceLookupByName'
op|'('
name|'self'
op|','
name|'x'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'conn'
op|'='
name|'FakeConn'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_connect'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
nl|'\n'
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'5'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'flavors'
op|'.'
name|'save_flavor_info'
op|'('
op|'{'
op|'}'
op|','
name|'instance_type'
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_instance'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
string|"'32dfcb37-5af1-552b-357c-be8c3aa38310'"
op|','
nl|'\n'
string|"'memory_kb'"
op|':'
string|"'1024000'"
op|','
nl|'\n'
string|"'basepath'"
op|':'
string|"'/some/path'"
op|','
nl|'\n'
string|"'bridge_name'"
op|':'
string|"'br100'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'br101'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'155d900f-4e14-4e4c-a73d-069cbf4541e6'"
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'5'"
op|','
comment|'# m1.small'
nl|'\n'
string|"'extra_specs'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'sys_meta'
op|','
nl|'\n'
string|'"pci_devices"'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|relpath
dedent|''
name|'def'
name|'relpath'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'relpath'
op|'('
name|'path'
op|','
name|'CONF'
op|'.'
name|'instances_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_fake_libvirt_mock
dedent|''
name|'def'
name|'create_fake_libvirt_mock'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Defining mocks for LibvirtDriver(libvirt is not used)."""'
newline|'\n'
nl|'\n'
comment|'# A fake libvirt.virConnect'
nl|'\n'
DECL|class|FakeLibvirtDriver
name|'class'
name|'FakeLibvirtDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|defineXML
indent|'            '
name|'def'
name|'defineXML'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Creating mocks'
nl|'\n'
dedent|''
dedent|''
name|'volume_driver'
op|'='
op|'('
string|"'iscsi=nova.tests.virt.libvirt.test_libvirt'"
nl|'\n'
string|"'.FakeVolumeDriver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_volume_drivers'
op|'='
op|'['
name|'volume_driver'
op|']'
op|')'
newline|'\n'
name|'fake'
op|'='
name|'FakeLibvirtDriver'
op|'('
op|')'
newline|'\n'
comment|'# Customizing above fake if necessary'
nl|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake'
op|'.'
name|'__setattr__'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_vif_driver'
op|'='
string|'"nova.tests.fake_network.FakeVIFDriver"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'='
name|'fake'
newline|'\n'
nl|'\n'
DECL|member|fake_lookup
dedent|''
name|'def'
name|'fake_lookup'
op|'('
name|'self'
op|','
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'open'
op|'('
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
string|'"a"'
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_service
dedent|''
name|'def'
name|'create_service'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_ref'
op|'='
op|'{'
string|"'host'"
op|':'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'host'"
op|','
string|"'dummy'"
op|')'
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'service_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prepare_pci_device
dedent|''
name|'def'
name|'test_prepare_pci_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'xen'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|attach
indent|'            '
name|'def'
name|'attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|dettach
dedent|''
name|'def'
name|'dettach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'nodeDeviceLookupByName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'('
string|"'xxx'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'FakeDev'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'('
string|"'xxx'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'FakeDev'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_prepare_pci_devices_for_use'
op|'('
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prepare_pci_device_exception
dedent|''
name|'def'
name|'test_prepare_pci_device_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'xen'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|attach
indent|'            '
name|'def'
name|'attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|dettach
dedent|''
name|'def'
name|'dettach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"xxxxx"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'nodeDeviceLookupByName'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'FakeDev'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDevicePrepareFailed'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_prepare_pci_devices_for_use'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices_exception
dedent|''
name|'def'
name|'test_detach_pci_devices_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'False'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceDetachFailed'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_detach_pci_devices'
op|','
name|'None'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices
dedent|''
name|'def'
name|'test_detach_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'fake_domXML1'
op|'='
string|'"""<domain> <devices>\n              <hostdev mode="subsystem" type="pci" managed="yes">\n                <source>\n            <address function="0x1" slot="0x10" domain="0x0000" bus="0x04"/>\n                </source>\n            </hostdev></devices></domain>"""'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'address'
op|'='
string|'"0001:04:10:1"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'get_guest_pci_device'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|to_xml
indent|'            '
name|'def'
name|'to_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'get_guest_pci_device'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'FakeDev'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDomain
name|'class'
name|'FakeDomain'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|detachDeviceFlags
indent|'            '
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pci_devices'
op|'['
number|'0'
op|']'
op|'['
string|"'hypervisor_name'"
op|']'
op|'='
string|"'marked'"
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fake_domXML1'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conn'
op|'.'
name|'_detach_pci_devices'
op|'('
name|'FakeDomain'
op|'('
op|')'
op|','
name|'pci_devices'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pci_devices'
op|'['
number|'0'
op|']'
op|'['
string|"'hypervisor_name'"
op|']'
op|','
string|"'marked'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_pci_devices_timeout
dedent|''
name|'def'
name|'test_detach_pci_devices_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'fake_domXML1'
op|'='
string|'"""<domain>\n                <devices>\n                  <hostdev mode="subsystem" type="pci" managed="yes">\n                    <source>\n            <address function="0x1" slot="0x10" domain="0x0000" bus="0x04"/>\n                    </source>\n                  </hostdev>\n                </devices>\n            </domain>"""'
newline|'\n'
nl|'\n'
name|'pci_devices'
op|'='
op|'['
name|'dict'
op|'('
name|'hypervisor_name'
op|'='
string|"'xxx'"
op|','
nl|'\n'
name|'id'
op|'='
string|"'id1'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid'"
op|','
nl|'\n'
name|'address'
op|'='
string|'"0000:04:10:1"'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'has_min_version'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'has_min_version'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'get_guest_pci_device'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDev
name|'class'
name|'FakeDev'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|to_xml
indent|'            '
name|'def'
name|'to_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'get_guest_pci_device'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'FakeDev'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeDomain
name|'class'
name|'FakeDomain'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|detachDeviceFlags
indent|'            '
name|'def'
name|'detachDeviceFlags'
op|'('
name|'self'
op|','
name|'xml'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
name|'flag'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fake_domXML1'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PciDeviceDetachFailed'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_detach_pci_devices'
op|','
name|'FakeDomain'
op|'('
op|')'
op|','
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_connector
dedent|''
name|'def'
name|'test_get_connector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'initiator'
op|'='
string|"'fake.initiator.iqn'"
newline|'\n'
name|'ip'
op|'='
string|"'fakeip'"
newline|'\n'
name|'host'
op|'='
string|"'fakehost'"
newline|'\n'
name|'wwpns'
op|'='
op|'['
string|"'100010604b019419'"
op|']'
newline|'\n'
name|'wwnns'
op|'='
op|'['
string|"'200010604b019419'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'my_ip'
op|'='
name|'ip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'ip'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'initiator'"
op|':'
name|'initiator'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'wwpns'"
op|':'
name|'wwpns'
op|','
nl|'\n'
string|"'wwnns'"
op|':'
name|'wwnns'
nl|'\n'
op|'}'
newline|'\n'
name|'volume'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'fake'"
nl|'\n'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_close_callback
dedent|''
name|'def'
name|'test_close_callback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'1'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'0'
op|'*'
number|'1000'
op|')'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'close_callback'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|set_close_callback
name|'def'
name|'set_close_callback'
op|'('
name|'cb'
op|','
name|'opaque'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close_callback'
op|'='
name|'cb'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"getLibVersion"'
op|','
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_connect'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'registerCloseCallback'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_connect'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'registerCloseCallback'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
nl|'\n'
name|'set_close_callback'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_connect'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'registerCloseCallback'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# verify that the driver registers for the close callback'
nl|'\n'
comment|'# and re-connects after receiving the callback'
nl|'\n'
name|'conn'
op|'.'
name|'_get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'close_callback'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'close_callback'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
number|'1'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_get_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config
dedent|''
name|'def'
name|'test_get_guest_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'acpi'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'apic'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
string|'"hd"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"utc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|','
string|'"pit"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'0'
op|']'
op|'.'
name|'tickpolicy'
op|','
nl|'\n'
string|'"delay"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|','
string|'"rtc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'timers'
op|'['
number|'1'
op|']'
op|'.'
name|'tickpolicy'
op|','
nl|'\n'
string|'"catchup"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_windows
dedent|''
name|'def'
name|'test_get_guest_config_windows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'windows'"
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestClock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'clock'
op|'.'
name|'offset'
op|','
string|'"localtime"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_two_nics
dedent|''
name|'def'
name|'test_get_guest_config_with_two_nics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'2'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'acpi'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
string|'"hd"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInterface'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_bug_1118829
dedent|''
name|'def'
name|'test_get_guest_config_bug_1118829'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'uml'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'{'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'cdrom_bus'"
op|':'
string|"'ide'"
op|','
nl|'\n'
string|"'mapping'"
op|':'
op|'{'
string|"u'vda'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"u'vda'"
op|'}'
op|','
nl|'\n'
string|"'root'"
op|':'
op|'{'
string|"'bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'dev'"
op|':'
string|"'vda'"
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
comment|'# NOTE(jdg): For this specific test leave this blank'
nl|'\n'
comment|'# This will exercise the failed code path still,'
nl|'\n'
comment|"# and won't require fakes and stubs of the iscsi discovery"
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_root_device_name
dedent|''
name|'def'
name|'test_get_guest_config_with_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'uml'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'root_device_name'"
op|':'
string|"'/dev/vdb'"
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'acpi'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'memory'
op|','
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'vcpus'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_type'
op|','
string|'"uml"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_boot_dev'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'os_root'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestConsole'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_block_device
dedent|''
name|'def'
name|'test_get_guest_config_with_block_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdd'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'info'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'None'
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'vdd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_configdrive
dedent|''
name|'def'
name|'test_get_guest_config_with_configdrive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# make configdrive.required_by() return True'
nl|'\n'
name|'instance_ref'
op|'['
string|"'config_drive'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|'.'
name|'target_dev'
op|','
string|"'hdd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'vnc_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc_and_tablet
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc_and_tablet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'vnc_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_spice_and_tablet
dedent|''
name|'def'
name|'test_get_guest_config_with_spice_and_tablet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'vnc_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_spice_and_agent
dedent|''
name|'def'
name|'test_get_guest_config_with_spice_and_agent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'vnc_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'target_name'
op|','
string|'"com.redhat.spice.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_vnc_and_spice
dedent|''
name|'def'
name|'test_get_guest_config_with_vnc_and_spice'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|','
nl|'\n'
name|'vnc_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_usb_tablet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'agent_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'group'
op|'='
string|"'spice'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'target_name'
op|','
string|'"com.redhat.spice.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'7'
op|']'
op|'.'
name|'type'
op|','
string|'"spice"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_qga_through_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_with_qga_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"yes"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestChannel'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'type'
op|','
string|'"unix"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'6'
op|']'
op|'.'
name|'target_name'
op|','
string|'"org.qemu.guest_agent.0"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_without_qga_through_image_meta
dedent|''
name|'def'
name|'test_get_guest_config_without_qga_through_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|'"properties"'
op|':'
op|'{'
string|'"hw_qemu_guest_agent"'
op|':'
string|'"no"'
op|'}'
op|'}'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestDisk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestSerial'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestInput'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestGraphics'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'4'
op|']'
op|'.'
name|'type'
op|','
string|'"tablet"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cfg'
op|'.'
name|'devices'
op|'['
number|'5'
op|']'
op|'.'
name|'type'
op|','
string|'"vnc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_fake_service_compute
dedent|''
name|'def'
name|'_create_fake_service_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service_info'
op|'='
op|'{'
nl|'\n'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'service_ref'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'service_info'
op|')'
newline|'\n'
nl|'\n'
name|'compute_info'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'free_disk_gb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'xen'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'running_vms'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'current_workload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'service_id'"
op|':'
name|'service_ref'
op|'['
string|"'id'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'compute_ref'
op|'='
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'compute_info'
op|')'
newline|'\n'
name|'return'
op|'('
name|'service_ref'
op|','
name|'compute_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_pci_passthrough_kvm
dedent|''
name|'def'
name|'test_get_guest_config_with_pci_passthrough_kvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'kvm'"
op|')'
newline|'\n'
name|'service_ref'
op|','
name|'compute_ref'
op|'='
name|'self'
op|'.'
name|'_create_fake_service_compute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'allocated'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.1'"
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'compute_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'extra_info'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'pci_device_info'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'pci_device_info'
op|'['
string|"'address'"
op|']'
op|','
name|'pci_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
name|'had_pci'
op|'='
number|'0'
newline|'\n'
comment|'# care only about the PCI devices'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'type'
op|'('
name|'dev'
op|')'
op|'=='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestHostdevPCI'
op|':'
newline|'\n'
indent|'                '
name|'had_pci'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'type'
op|','
string|"'pci'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'managed'
op|','
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'mode'
op|','
string|"'subsystem'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'domain'
op|','
string|'"0000"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'bus'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'slot'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'function'
op|','
string|'"1"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'had_pci'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_config_with_pci_passthrough_xen
dedent|''
name|'def'
name|'test_get_guest_config_with_pci_passthrough_xen'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'xen'"
op|')'
newline|'\n'
name|'service_ref'
op|','
name|'compute_ref'
op|'='
name|'self'
op|'.'
name|'_create_fake_service_compute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'pci_device_info'
op|'='
name|'dict'
op|'('
name|'test_pci_device'
op|'.'
name|'fake_db_dev'
op|')'
newline|'\n'
name|'pci_device_info'
op|'.'
name|'update'
op|'('
name|'compute_node_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'label'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'allocated'"
op|','
nl|'\n'
name|'address'
op|'='
string|"'0000:00:00.2'"
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'compute_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'extra_info'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'pci_device_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'pci_device_info'
op|'['
string|"'compute_node_id'"
op|']'
op|','
nl|'\n'
name|'pci_device_info'
op|'['
string|"'address'"
op|']'
op|','
name|'pci_device_info'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'cfg'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'had_pci'
op|'='
number|'0'
newline|'\n'
comment|'# care only about the PCI devices'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'cfg'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'type'
op|'('
name|'dev'
op|')'
op|'=='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestHostdevPCI'
op|':'
newline|'\n'
indent|'                '
name|'had_pci'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'type'
op|','
string|"'pci'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'managed'
op|','
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'mode'
op|','
string|"'subsystem'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'domain'
op|','
string|'"0000"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'bus'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'slot'
op|','
string|'"00"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dev'
op|'.'
name|'function'
op|','
string|'"2"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'had_pci'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_none
dedent|''
name|'def'
name|'test_get_guest_cpu_config_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"none"'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_kvm
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_kvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|'"kvm"'
op|','
nl|'\n'
name|'libvirt_cpu_mode'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_lib_version_stub
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'11'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-model"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_uml
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_uml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|'"uml"'
op|','
nl|'\n'
name|'libvirt_cpu_mode'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_default_lxc
dedent|''
name|'def'
name|'test_get_guest_cpu_config_default_lxc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|'"lxc"'
op|','
nl|'\n'
name|'libvirt_cpu_mode'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_passthrough_new
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_passthrough_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'11'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"host-passthrough"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-passthrough"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_model_new
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_model_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'11'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"host-model"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"host-model"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_custom_new
dedent|''
name|'def'
name|'test_get_guest_cpu_config_custom_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'11'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"custom"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_model'
op|'='
string|'"Penryn"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
string|'"custom"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
string|'"Penryn"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_passthrough_old
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_passthrough_old'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'7'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"host-passthrough"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'get_guest_config'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_host_model_old
dedent|''
name|'def'
name|'test_get_guest_cpu_config_host_model_old'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'7'
newline|'\n'
nl|'\n'
comment|'# Ensure we have a predictable host CPU'
nl|'\n'
DECL|function|get_host_capabilities_stub
dedent|''
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'model'
op|'='
string|'"Opteron_G4"'
newline|'\n'
name|'cpu'
op|'.'
name|'vendor'
op|'='
string|'"AMD"'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'features'
op|'.'
name|'append'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUFeature'
op|'('
string|'"tm2"'
op|')'
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'features'
op|'.'
name|'append'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPUFeature'
op|'('
string|'"ht"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|'"get_host_capabilities"'
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"host-model"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
string|'"Opteron_G4"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'vendor'
op|','
string|'"AMD"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|','
string|'"tm2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'features'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|','
string|'"ht"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_guest_cpu_config_custom_old
dedent|''
name|'def'
name|'test_get_guest_cpu_config_custom_old'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'7'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
string|'"getLibVersion"'
op|','
nl|'\n'
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_mode'
op|'='
string|'"custom"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_cpu_model'
op|'='
string|'"Penryn"'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'conn'
op|'.'
name|'get_guest_config'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|')'
op|','
nl|'\n'
name|'vconfig'
op|'.'
name|'LibvirtConfigGuestCPU'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'mode'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conf'
op|'.'
name|'cpu'
op|'.'
name|'model'
op|','
string|'"Penryn"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'False'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel_xen_hvm
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel_xen_hvm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'.'
name|'update'
op|'('
op|'{'
string|"'vm_mode'"
op|':'
name|'vm_mode'
op|'.'
name|'HVM'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'expect_xen_hvm'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk_no_kernel_xen_pv
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk_no_kernel_xen_pv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'.'
name|'update'
op|'('
op|'{'
string|"'vm_mode'"
op|':'
name|'vm_mode'
op|'.'
name|'XEN'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'expect_xen_hvm'
op|'='
name|'False'
op|','
nl|'\n'
name|'xen_only'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'True'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'False'
op|','
name|'expect_ramdisk'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri
dedent|''
name|'def'
name|'test_xml_and_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
nl|'\n'
name|'expect_kernel'
op|'='
name|'True'
op|','
name|'expect_ramdisk'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue
dedent|''
name|'def'
name|'test_xml_and_uri_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'ari-deadbeef'"
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'True'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'True'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_kernel_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_kernel_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_kernel
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'False'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'True'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_and_uri_rescue_no_ramdisk
dedent|''
name|'def'
name|'test_xml_and_uri_rescue_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_data'
op|'['
string|"'kernel_id'"
op|']'
op|'='
string|"'aki-deadbeef'"
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_uri'
op|'('
name|'instance_data'
op|','
name|'expect_kernel'
op|'='
name|'True'
op|','
nl|'\n'
name|'expect_ramdisk'
op|'='
name|'False'
op|','
name|'rescue'
op|'='
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_uuid
dedent|''
name|'def'
name|'test_xml_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_xml_and_uuid'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"raw"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_container_and_uri
dedent|''
name|'def'
name|'test_lxc_container_and_uri'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_container'
op|'('
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_prefix
dedent|''
name|'def'
name|'test_xml_disk_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_prefix'
op|'('
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_user_specified_disk_prefix
dedent|''
name|'def'
name|'test_xml_user_specified_disk_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_prefix'
op|'('
name|'instance_data'
op|','
string|"'sd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_driver
dedent|''
name|'def'
name|'test_xml_disk_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_driver'
op|'('
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_virtio
dedent|''
name|'def'
name|'test_xml_disk_bus_virtio'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"raw"'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'('
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vda"'
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_ide
dedent|''
name|'def'
name|'test_xml_disk_bus_ide'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"iso"'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'('
op|'('
string|'"cdrom"'
op|','
string|'"ide"'
op|','
string|'"hda"'
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_disk_bus_ide_and_virtio
dedent|''
name|'def'
name|'test_xml_disk_bus_ide_and_virtio'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swap'
op|'='
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'swap_size'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ephemerals'
op|'='
op|'['
op|'{'
string|"'device_type'"
op|':'
string|"'disk'"
op|','
nl|'\n'
string|"'disk_bus'"
op|':'
string|"'virtio'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
nl|'\n'
string|"'swap'"
op|':'
name|'swap'
op|','
nl|'\n'
string|"'ephemerals'"
op|':'
name|'ephemerals'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_check_xml_and_disk_bus'
op|'('
op|'{'
string|'"disk_format"'
op|':'
string|'"iso"'
op|'}'
op|','
nl|'\n'
name|'block_device_info'
op|','
nl|'\n'
op|'('
op|'('
string|'"cdrom"'
op|','
string|'"ide"'
op|','
string|'"hda"'
op|')'
op|','
nl|'\n'
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vdb"'
op|')'
op|','
nl|'\n'
op|'('
string|'"disk"'
op|','
string|'"virtio"'
op|','
string|'"vdc"'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'2'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
comment|'# Only one should be listed, since domain with ID 0 must be skipped'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids
dedent|''
name|'def'
name|'test_list_instance_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'2'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
comment|'# Only one should be listed, since domain with ID 0 must be skipped'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_defined_instances
dedent|''
name|'def'
name|'test_list_defined_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'1'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
comment|'# Only one defined domain should be listed'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_when_instance_deleted
dedent|''
name|'def'
name|'test_list_instances_when_instance_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"we deleted an instance!"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'1'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
comment|'# None should be listed, since we fake deleted the last one'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids_when_instance_deleted
dedent|''
name|'def'
name|'test_list_instance_uuids_when_instance_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"we deleted an instance!"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'1'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
comment|'# None should be listed, since we fake deleted the last one'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_throws_nova_exception
dedent|''
name|'def'
name|'test_list_instances_throws_nova_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"we deleted an instance!"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'1'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
name|'conn'
op|'.'
name|'list_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids_throws_nova_exception
dedent|''
name|'def'
name|'test_list_instance_uuids_throws_nova_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"we deleted an instance!"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'1'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
name|'conn'
op|'.'
name|'list_instance_uuids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_block_devices
dedent|''
name|'def'
name|'test_get_all_block_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
op|'['
nl|'\n'
comment|'# NOTE(vish): id 0 is skipped'
nl|'\n'
name|'None'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/3\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
name|'id'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'4'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
name|'range'
op|'('
number|'4'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'devices'
op|'='
name|'conn'
op|'.'
name|'get_all_block_devices'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'devices'
op|','
op|'['
string|"'/path/to/dev/1'"
op|','
string|"'/path/to/dev/3'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_disks
dedent|''
name|'def'
name|'test_get_disks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
op|'['
nl|'\n'
comment|'# NOTE(vish): id 0 is skipped'
nl|'\n'
name|'None'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/3\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                    </devices>\n                </domain>\n            """'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
name|'id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'xml'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'numOfDomains'
op|'='
name|'lambda'
op|':'
number|'4'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDomainsID'
op|'='
name|'lambda'
op|':'
name|'range'
op|'('
number|'4'
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByID'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDefinedDomains'
op|'='
name|'lambda'
op|':'
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'devices'
op|'='
name|'conn'
op|'.'
name|'get_disks'
op|'('
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'devices'
op|','
op|'['
string|"'vda'"
op|','
string|"'vdb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_in_ami_format
dedent|''
name|'def'
name|'test_snapshot_in_ami_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign different image_ref from nova/images/fakes for testing ami'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'disk_type'
op|'='
string|'"qcow2"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'ami'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_snapshot_in_ami_format
dedent|''
name|'def'
name|'test_lxc_snapshot_in_ami_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|','
nl|'\n'
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign different image_ref from nova/images/fakes for testing ami'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'disk_type'
op|'='
string|'"qcow2"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'ami'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_in_raw_format
dedent|''
name|'def'
name|'test_snapshot_in_raw_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'disk_type'"
op|','
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|convert_image
name|'def'
name|'convert_image'
op|'('
name|'source'
op|','
name|'dest'
op|','
name|'out_format'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'files'
op|'['
name|'dest'
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'convert_image'"
op|','
name|'convert_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_snapshot_in_raw_format
dedent|''
name|'def'
name|'test_lxc_snapshot_in_raw_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|','
nl|'\n'
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'disk_type'"
op|','
string|"'raw'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|convert_image
name|'def'
name|'convert_image'
op|'('
name|'source'
op|','
name|'dest'
op|','
name|'out_format'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'files'
op|'['
name|'dest'
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'convert_image'"
op|','
name|'convert_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_in_qcow2_format
dedent|''
name|'def'
name|'test_snapshot_in_qcow2_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'snapshot_image_format'
op|'='
string|"'qcow2'"
op|','
nl|'\n'
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'disk_type'
op|'='
string|'"qcow2"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_snapshot_in_qcow2_format
dedent|''
name|'def'
name|'test_lxc_snapshot_in_qcow2_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'snapshot_image_format'
op|'='
string|"'qcow2'"
op|','
nl|'\n'
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|','
nl|'\n'
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'disk_type'
op|'='
string|'"qcow2"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'disk_format'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_no_image_architecture
dedent|''
name|'def'
name|'test_snapshot_no_image_architecture'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign different image_ref from nova/images/fakes for'
nl|'\n'
comment|'# testing different base image'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_snapshot_no_image_architecture
dedent|''
name|'def'
name|'test_lxc_snapshot_no_image_architecture'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|','
nl|'\n'
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign different image_ref from nova/images/fakes for'
nl|'\n'
comment|'# testing different base image'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
nl|'\n'
comment|'# Assuming that base image already exists in image_service'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
comment|'# Create new image. It will be updated in snapshot method'
nl|'\n'
comment|'# To work with it from snapshot, the single image_service is needed'
nl|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_no_original_image
dedent|''
name|'def'
name|'test_snapshot_no_original_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign a non-existent image'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'661122aa-1234-dede-fefe-babababababa'"
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lxc_snapshot_no_original_image
dedent|''
name|'def'
name|'test_lxc_snapshot_no_original_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|','
nl|'\n'
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign a non-existent image'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'661122aa-1234-dede-fefe-babababababa'"
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_metadata_image
dedent|''
name|'def'
name|'test_snapshot_metadata_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign an image with an architecture defined (x86_64)'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'a440c04b-79fa-479c-bed1-0b816eaec379'"
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'fake_arch'"
op|','
nl|'\n'
string|"'key_a'"
op|':'
string|"'value_a'"
op|','
nl|'\n'
string|"'key_b'"
op|':'
string|"'value_b'"
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'architecture'"
op|']'
op|','
string|"'fake_arch'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'key_a'"
op|']'
op|','
string|"'value_a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'key_b'"
op|']'
op|','
string|"'value_b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_with_os_type
dedent|''
name|'def'
name|'test_snapshot_with_os_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_snapshots_directory'
op|'='
string|"'./'"
op|')'
newline|'\n'
nl|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assign a non-existent image'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|"'661122aa-1234-dede-fefe-babababababa'"
newline|'\n'
name|'test_instance'
op|'['
string|'"os_type"'
op|']'
op|'='
string|"'linux'"
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'test_instance'
op|')'
newline|'\n'
name|'properties'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'str'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|')'
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|'}'
newline|'\n'
name|'snapshot_name'
op|'='
string|"'test-snap'"
newline|'\n'
name|'sent_meta'
op|'='
op|'{'
string|"'name'"
op|':'
name|'snapshot_name'
op|','
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
string|"'properties'"
op|':'
name|'properties'
op|'}'
newline|'\n'
name|'recv_meta'
op|'='
name|'image_service'
op|'.'
name|'create'
op|'('
name|'context'
op|','
name|'sent_meta'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'utils'
op|'.'
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'recv_meta'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_state'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'os_type'"
op|']'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'os_type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'status'"
op|']'
op|','
string|"'active'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__create_snapshot_metadata
dedent|''
name|'def'
name|'test__create_snapshot_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'kernel_id'"
op|':'
string|"'kernel'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'prj_id'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'ram_id'"
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'img_fmt'
op|'='
string|"'raw'"
newline|'\n'
name|'snp_name'
op|'='
string|"'snapshot_name'"
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_create_snapshot_metadata'
op|'('
name|'base'
op|','
name|'instance'
op|','
name|'img_fmt'
op|','
name|'snp_name'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'name'"
op|':'
name|'snp_name'
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
name|'instance'
op|'['
string|"'kernel_id'"
op|']'
op|','
nl|'\n'
string|"'image_location'"
op|':'
string|"'snapshot'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'owner_id'"
op|':'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'instance'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
name|'img_fmt'
op|','
nl|'\n'
string|"'container_format'"
op|':'
name|'base'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|','
string|"'bare'"
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# simulate an instance with os_type field defined'
nl|'\n'
comment|'# disk format equals to ami'
nl|'\n'
comment|'# container format not equals to bare'
nl|'\n'
name|'instance'
op|'['
string|"'os_type'"
op|']'
op|'='
string|"'linux'"
newline|'\n'
name|'base'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'ami'"
newline|'\n'
name|'base'
op|'['
string|"'container_format'"
op|']'
op|'='
string|"'test_container'"
newline|'\n'
name|'expected'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'os_type'"
op|']'
op|'='
name|'instance'
op|'['
string|"'os_type'"
op|']'
newline|'\n'
name|'expected'
op|'['
string|"'disk_format'"
op|']'
op|'='
name|'base'
op|'['
string|"'disk_format'"
op|']'
newline|'\n'
name|'expected'
op|'['
string|"'container_format'"
op|']'
op|'='
name|'base'
op|'.'
name|'get'
op|'('
string|"'container_format'"
op|','
string|"'bare'"
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'_create_snapshot_metadata'
op|'('
name|'base'
op|','
name|'instance'
op|','
name|'img_fmt'
op|','
name|'snp_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_invalid_volume_type
dedent|''
name|'def'
name|'test_attach_invalid_volume_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"badtype"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"fake-instance"'
op|'}'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_blockio_invalid_hypervisor
dedent|''
name|'def'
name|'test_attach_blockio_invalid_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'fake_type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidHypervisorType'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"logical_block_size"'
op|':'
string|'"4096"'
op|','
nl|'\n'
string|'"physical_block_size"'
op|':'
string|'"4096"'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"fake-instance"'
op|'}'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_blockio_invalid_version
dedent|''
name|'def'
name|'test_attach_blockio_invalid_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_lib_version_stub
indent|'        '
name|'def'
name|'get_lib_version_stub'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|'*'
number|'1000'
op|'*'
number|'1000'
op|')'
op|'+'
op|'('
number|'9'
op|'*'
number|'1000'
op|')'
op|'+'
number|'8'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'qemu'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"getLibVersion"'
op|','
name|'get_lib_version_stub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'attach_volume'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
string|'"driver_volume_type"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"data"'
op|':'
op|'{'
string|'"logical_block_size"'
op|':'
string|'"4096"'
op|','
nl|'\n'
string|'"physical_block_size"'
op|':'
string|'"4096"'
op|'}'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"fake-instance"'
op|'}'
op|','
nl|'\n'
string|'"/dev/sda"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_nic
dedent|''
name|'def'
name|'test_multi_nic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'2'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_data'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'interfaces'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|'"./devices/interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'interfaces'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'interfaces'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'bridge'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_container
dedent|''
name|'def'
name|'_check_xml_and_container'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'lxc'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'uri'
op|'('
op|')'
op|','
string|"'lxc:///'"
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'lxc'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
string|"'exe'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/filesystem/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dir'"
op|')'
op|','
string|"'/'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'check'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s failed common check %d'"
op|'%'
op|'('
name|'xml'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'target'
op|'='
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./devices/filesystem/source'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'target'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_prefix
dedent|''
name|'def'
name|'_check_xml_and_disk_prefix'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'prefix'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_get_prefix
name|'def'
name|'_get_prefix'
op|'('
name|'p'
op|','
name|'default'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'p'
op|'+'
string|"'a'"
newline|'\n'
dedent|''
name|'return'
name|'default'
newline|'\n'
nl|'\n'
dedent|''
name|'type_disk_map'
op|'='
op|'{'
nl|'\n'
string|"'qemu'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'qemu'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'vda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'xen'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'xen'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'sda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'kvm'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'kvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'vda'"
op|')'
op|')'
op|']'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'uml'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/disk/target'"
op|')'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
op|','
nl|'\n'
name|'_get_prefix'
op|'('
name|'prefix'
op|','
string|"'ubda'"
op|')'
op|')'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'libvirt_type'
op|','
name|'checks'
op|')'
name|'in'
name|'type_disk_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
name|'libvirt_type'
op|')'
newline|'\n'
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_disk_prefix'
op|'='
name|'prefix'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'checks'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_driver
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_disk_driver'
op|'('
name|'self'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os_open'
op|'='
name|'os'
op|'.'
name|'open'
newline|'\n'
name|'directio_supported'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|os_open_stub
name|'def'
name|'os_open_stub'
op|'('
name|'path'
op|','
name|'flags'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'flags'
op|'&'
name|'os'
op|'.'
name|'O_DIRECT'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'directio_supported'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EINVAL'
op|','
nl|'\n'
string|"'%s: %s'"
op|'%'
op|'('
name|'os'
op|'.'
name|'strerror'
op|'('
name|'errno'
op|'.'
name|'EINVAL'
op|')'
op|','
name|'path'
op|')'
op|')'
newline|'\n'
dedent|''
name|'flags'
op|'&='
op|'~'
name|'os'
op|'.'
name|'O_DIRECT'
newline|'\n'
dedent|''
name|'return'
name|'os_open'
op|'('
name|'path'
op|','
name|'flags'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'open'"
op|','
name|'os_open_stub'
op|')'
newline|'\n'
nl|'\n'
DECL|function|connection_supports_direct_io_stub
name|'def'
name|'connection_supports_direct_io_stub'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'directio_supported'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_supports_direct_io'"
op|','
name|'connection_supports_direct_io_stub'
op|')'
newline|'\n'
nl|'\n'
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/driver'"
op|')'
newline|'\n'
name|'for'
name|'disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk'
op|'.'
name|'get'
op|'('
string|'"cache"'
op|')'
op|','
string|'"none"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'directio_supported'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# The O_DIRECT availability is cached on first use in'
nl|'\n'
comment|'# LibvirtDriver, hence we re-create it here'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/driver'"
op|')'
newline|'\n'
name|'for'
name|'disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk'
op|'.'
name|'get'
op|'('
string|'"cache"'
op|')'
op|','
string|'"writethrough"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_disk_bus
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_disk_bus'
op|'('
name|'self'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|','
name|'wantConfig'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'block_device_info'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'got_disks'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk'"
op|')'
newline|'\n'
name|'got_disk_targets'
op|'='
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/target'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'wantConfig'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'want_device_type'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'want_device_bus'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'want_device_dev'
op|'='
name|'wantConfig'
op|'['
name|'i'
op|']'
op|'['
number|'2'
op|']'
newline|'\n'
nl|'\n'
name|'got_device_type'
op|'='
name|'got_disks'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'device'"
op|')'
newline|'\n'
name|'got_device_bus'
op|'='
name|'got_disk_targets'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'bus'"
op|')'
newline|'\n'
name|'got_device_dev'
op|'='
name|'got_disk_targets'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'dev'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_type'
op|','
name|'want_device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_bus'
op|','
name|'want_device_bus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_device_dev'
op|','
name|'want_device_dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_uuid
dedent|''
dedent|''
name|'def'
name|'_check_xml_and_uuid'
op|'('
name|'self'
op|','
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'drv'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
string|"'./uuid'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_xml_and_uri
dedent|''
name|'def'
name|'_check_xml_and_uri'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'expect_ramdisk'
op|','
name|'expect_kernel'
op|','
nl|'\n'
name|'rescue'
op|'='
name|'None'
op|','
name|'expect_xen_hvm'
op|'='
name|'False'
op|','
name|'xen_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'user_context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'network_ref'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'type_uri_map'
op|'='
op|'{'
string|"'qemu'"
op|':'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'qemu'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/emulator'"
op|')'
op|','
name|'None'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'kvm'"
op|':'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'kvm'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/emulator'"
op|')'
op|','
name|'None'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'('
string|"'uml:///system'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'uml'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'UML'
op|')'
op|']'
op|')'
op|','
nl|'\n'
string|"'xen'"
op|':'
op|'('
string|"'xen:///'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
string|"'xen'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'XEN'
op|')'
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'expect_xen_hvm'
name|'or'
name|'xen_only'
op|':'
newline|'\n'
indent|'            '
name|'hypervisors_to_check'
op|'='
op|'['
string|"'xen'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'hypervisors_to_check'
op|'='
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|','
string|"'xen'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'expect_xen_hvm'
op|':'
newline|'\n'
indent|'            '
name|'type_uri_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'type_uri_map'
op|'['
string|"'xen'"
op|']'
op|'='
op|'('
string|"'xen:///'"
op|','
nl|'\n'
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'get'
op|'('
string|"'type'"
op|')'
op|','
nl|'\n'
string|"'xen'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/type'"
op|')'
op|'.'
name|'text'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'HVM'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'hypervisor_type'
name|'in'
name|'hypervisors_to_check'
op|':'
newline|'\n'
indent|'            '
name|'check_list'
op|'='
name|'type_uri_map'
op|'['
name|'hypervisor_type'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'rescue'
op|':'
newline|'\n'
indent|'                '
name|'suffix'
op|'='
string|"'.rescue'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'suffix'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'expect_kernel'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/kernel'"
op|')'
op|'.'
name|'text'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'kernel'"
op|'+'
name|'suffix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/kernel'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
comment|'# Hypervisors that only support vm_mode.HVM should'
nl|'\n'
comment|'# not produce configuration that results in kernel'
nl|'\n'
comment|'# arguments'
nl|'\n'
name|'if'
name|'not'
name|'expect_kernel'
name|'and'
name|'hypervisor_type'
name|'in'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/root'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/cmdline'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'expect_ramdisk'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/initrd'"
op|')'
op|'.'
name|'text'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'ramdisk'"
op|'+'
name|'suffix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./os/initrd'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'hypervisor_type'
name|'in'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'xpath'
op|'='
string|'"./sysinfo/system/entry"'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"manufacturer"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'version'
op|'.'
name|'vendor_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"product"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'version'
op|'.'
name|'product_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"version"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
comment|"# NOTE(sirp): empty strings don't roundtrip in lxml (they are"
nl|'\n'
comment|"# converted to None), so we need an `or ''` to correct for that"
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'text'
name|'or'
string|"''"
op|','
nl|'\n'
name|'version'
op|'.'
name|'version_string_with_package'
op|'('
op|')'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'3'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"serial"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'3'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'4'
op|']'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|','
nl|'\n'
string|'"uuid"'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
name|'xpath'
op|')'
op|'['
number|'4'
op|']'
op|'.'
name|'text'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hypervisor_type'
name|'in'
op|'['
string|"'qemu'"
op|','
string|"'kvm'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/serial'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'file'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/serial'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'pty'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/serial/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
op|')'
op|'.'
nl|'\n'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'console.log'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./devices/console'"
op|')'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'type'"
op|')'
op|','
string|"'pty'"
op|')'
newline|'\n'
name|'check_list'
op|'.'
name|'append'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'common_checks'
op|'='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'.'"
op|')'
op|'.'
name|'tag'
op|','
string|"'domain'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'t'
op|'.'
name|'find'
op|'('
string|"'./memory'"
op|')'
op|'.'
name|'text'
op|','
string|"'2097152'"
op|')'
op|']'
newline|'\n'
name|'if'
name|'rescue'
op|':'
newline|'\n'
indent|'            '
name|'common_checks'
op|'+='
op|'['
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'disk.rescue'"
op|')'
op|','
nl|'\n'
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
string|"'./devices/disk/source'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
nl|'\n'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'disk'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'common_checks'
op|'+='
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/disk/source'"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|']'
newline|'\n'
name|'common_checks'
op|'+='
op|'['
op|'('
name|'lambda'
name|'t'
op|':'
name|'self'
op|'.'
name|'relpath'
op|'('
name|'t'
op|'.'
name|'findall'
op|'('
nl|'\n'
string|"'./devices/disk/source'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'file'"
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'disk.local'"
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
op|'('
name|'libvirt_type'
op|','
op|'('
name|'expected_uri'
op|','
name|'checks'
op|')'
op|')'
name|'in'
name|'type_uri_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
name|'libvirt_type'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'uri'
op|'('
op|')'
op|','
name|'expected_uri'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance_ref'
op|','
nl|'\n'
name|'rescue'
op|'='
name|'rescue'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
name|'disk_info'
op|','
name|'rescue'
op|'='
name|'rescue'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'checks'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
op|','
op|'('
name|'check'
op|','
name|'expected_result'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'common_checks'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
nl|'\n'
name|'expected_result'
op|','
nl|'\n'
string|"'%s != %s failed common check %d'"
op|'%'
nl|'\n'
op|'('
name|'check'
op|'('
name|'tree'
op|')'
op|','
name|'expected_result'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'filterref'
op|'='
string|"'./devices/interface/filterref'"
newline|'\n'
name|'vif'
op|'='
name|'network_info'
op|'['
number|'0'
op|']'
newline|'\n'
name|'nic_id'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"''"
op|')'
newline|'\n'
name|'fw'
op|'='
name|'firewall'
op|'.'
name|'NWFilterFirewall'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'conn'
op|')'
newline|'\n'
name|'instance_filter_name'
op|'='
name|'fw'
op|'.'
name|'_instance_filter_name'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'nic_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tree'
op|'.'
name|'find'
op|'('
name|'filterref'
op|')'
op|'.'
name|'get'
op|'('
string|"'filter'"
op|')'
op|','
nl|'\n'
name|'instance_filter_name'
op|')'
newline|'\n'
comment|"# This test is supposed to make sure we don't"
nl|'\n'
comment|'# override a specifically set uri'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Deliberately not just assigning this string to CONF.libvirt_uri and'
nl|'\n'
comment|'# checking against that later on. This way we make sure the'
nl|'\n'
comment|"# implementation doesn't fiddle around with the CONF."
nl|'\n'
dedent|''
name|'testuri'
op|'='
string|"'something completely different'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_uri'
op|'='
name|'testuri'
op|')'
newline|'\n'
name|'for'
op|'('
name|'libvirt_type'
op|','
op|'('
name|'expected_uri'
op|','
name|'checks'
op|')'
op|')'
name|'in'
name|'type_uri_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
name|'libvirt_type'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'uri'
op|'('
op|')'
op|','
name|'testuri'
op|')'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'user_context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_filtering_rules_for_instance_timeout
dedent|''
name|'def'
name|'test_ensure_filtering_rules_for_instance_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure_filtering_fules_for_instance() finishes with timeout.'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_raise
dedent|''
name|'def'
name|'fake_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'ERR'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeTime
dedent|''
name|'class'
name|'FakeTime'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|sleep
dedent|''
name|'def'
name|'sleep'
op|'('
name|'self'
op|','
name|'t'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'counter'
op|'+='
name|'t'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_timer'
op|'='
name|'FakeTime'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# _fake_network_info must be called before create_fake_libvirt_mock(),'
nl|'\n'
comment|'# as _fake_network_info calls importutils.import_class() and'
nl|'\n'
comment|'# create_fake_libvirt_mock() mocks importutils.import_class().'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
DECL|variable|conn
indent|'            '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'prepare_instance_filter'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'instance_filter_exists'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|','
nl|'\n'
name|'time_module'
op|'='
name|'fake_timer'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NovaException'
name|'as'
name|'e'
op|':'
newline|'\n'
DECL|variable|msg
indent|'            '
name|'msg'
op|'='
op|'('
string|"'The firewall filter for %s does not exist'"
op|'%'
nl|'\n'
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
DECL|variable|c1
name|'c1'
op|'='
op|'('
number|'0'
op|'<='
name|'str'
op|'('
name|'e'
op|')'
op|'.'
name|'find'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'29'
op|','
name|'fake_timer'
op|'.'
name|'counter'
op|','
string|'"Didn\'t wait the expected "'
nl|'\n'
string|'"amount of time"'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_all_pass_with_block_migration
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_all_pass_with_block_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'disk_available_least'"
op|':'
number|'400'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'filename'
op|'='
string|'"file"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_create_shared_storage_test_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_compare_cpu'"
op|')'
newline|'\n'
nl|'\n'
comment|'# _check_cpu_match'
nl|'\n'
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
string|'"asdf"'
op|')'
newline|'\n'
nl|'\n'
comment|'# mounted_on_same_shared_storage'
nl|'\n'
name|'conn'
op|'.'
name|'_create_shared_storage_test_file'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'return_value'
op|'='
name|'conn'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'compute_info'
op|','
name|'compute_info'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|"'disk_available_mb'"
op|':'
number|'409600'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'return_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_all_pass_no_block_migration
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_all_pass_no_block_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
name|'filename'
op|'='
string|'"file"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_create_shared_storage_test_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_compare_cpu'"
op|')'
newline|'\n'
nl|'\n'
comment|'# _check_cpu_match'
nl|'\n'
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
string|'"asdf"'
op|')'
newline|'\n'
nl|'\n'
comment|'# mounted_on_same_shared_storage'
nl|'\n'
name|'conn'
op|'.'
name|'_create_shared_storage_test_file'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'return_value'
op|'='
name|'conn'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'compute_info'
op|','
name|'compute_info'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'return_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_incompatible_cpu_raises
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_incompatible_cpu_raises'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'compute_info'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_compare_cpu'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_compare_cpu'
op|'('
string|'"asdf"'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|'('
nl|'\n'
name|'reason'
op|'='
string|"'foo'"
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_destination'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'compute_info'
op|','
name|'compute_info'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_cleanup_works_correctly
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_cleanup_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_cleanup_shared_storage_test_file'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_cleanup_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_destination_cleanup'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_works_correctly
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'[]'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_assert_dest_node_has_enough_disk"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_assert_dest_node_has_enough_disk'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest_check_data'
op|'['
string|"'disk_available_mb'"
op|']'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_vol_backed_works_correctly
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_vol_backed_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|','
nl|'\n'
string|'"is_volume_backed"'
op|':'
name|'True'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'[]'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'dest_check_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'type'
op|'('
name|'ret'
op|')'
op|'=='
name|'dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'is_shared_storage'"
op|','
name|'ret'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_vol_backed_w_disk_raises
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_vol_backed_w_disk_raises'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|','
nl|'\n'
string|'"is_volume_backed"'
op|':'
name|'True'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|'\'[{"fake_disk_attr": "fake_disk_val"}]\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_vol_backed_fails
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_vol_backed_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'1024'
op|','
nl|'\n'
string|'"is_volume_backed"'
op|':'
name|'False'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|'\'[{"fake_disk_attr": "fake_disk_val"}]\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_dest_fail_shared_storage_with_blockm
dedent|''
name|'def'
name|'test_check_can_live_migrate_dest_fail_shared_storage_with_blockm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk_available_mb'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'[]'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidLocalStorage'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_no_shared_storage_no_blck_mig_raises
dedent|''
name|'def'
name|'test_check_can_live_migrate_no_shared_storage_no_blck_mig_raises'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|','
nl|'\n'
string|"'disk_available_mb'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'[]'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source_with_dest_not_enough_disk
dedent|''
name|'def'
name|'test_check_can_live_migrate_source_with_dest_not_enough_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_check_shared_storage_test_file"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_check_shared_storage_test_file'
op|'('
string|'"file"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"get_instance_disk_info"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|'"name"'
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|'\'[{"virt_disk_size":2}]\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|'"name"'
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|'\'[{"virt_disk_size":2}]\''
op|')'
newline|'\n'
nl|'\n'
name|'dest_check_data'
op|'='
op|'{'
string|'"filename"'
op|':'
string|'"file"'
op|','
nl|'\n'
string|'"disk_available_mb"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"block_migration"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"disk_over_commit"'
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'check_can_live_migrate_source'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_raises_exception
dedent|''
name|'def'
name|'test_live_migration_raises_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Confirms recover method is called when exceptions are raised.'
nl|'\n'
comment|'# Preparing data'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'instance_dict'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|'}'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'instance_dict'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"migrateToURI"'
op|')'
newline|'\n'
name|'_bandwidth'
op|'='
name|'CONF'
op|'.'
name|'live_migration_bandwidth'
newline|'\n'
name|'vdmock'
op|'.'
name|'migrateToURI'
op|'('
name|'CONF'
op|'.'
name|'live_migration_uri'
op|'%'
string|"'dest'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'_bandwidth'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'ERR'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|'"_rollback_live_migration"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_rollback_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
nl|'\n'
string|"'dest'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'#start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|','
string|"'dest'"
op|','
name|'False'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_rollback_live_migration'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_ref'
op|'['
string|"'vm_state'"
op|']'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_ref'
op|'['
string|"'power_state'"
op|']'
op|'=='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing
dedent|''
name|'def'
name|'test_create_images_and_backing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_fetch_instance_kernel_ramdisk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
string|"'create_image'"
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_fetch_instance_kernel_ramdisk'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'False'
op|')'
newline|'\n'
name|'disk_info_json'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'['
op|'{'
string|"'path'"
op|':'
string|"'foo'"
op|','
string|"'type'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'disk_size'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'backing_file'"
op|':'
name|'None'
op|'}'
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
name|'disk_info_json'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_images_and_backing_disk_info_none
dedent|''
name|'def'
name|'test_create_images_and_backing_disk_info_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_fetch_instance_kernel_ramdisk'"
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_fetch_instance_kernel_ramdisk'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|','
nl|'\n'
string|'"/fake/instance/dir"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_works_correctly_mocked
dedent|''
name|'def'
name|'test_pre_live_migration_works_correctly_mocked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Creating testdata'
nl|'\n'
indent|'        '
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeNetworkInfo
name|'class'
name|'FakeNetworkInfo'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|fixed_ips
indent|'            '
name|'def'
name|'fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|'"test_ip_addr"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_images_and_backing'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'inst_ref'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'nw_info'
op|'='
name|'FakeNetworkInfo'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Creating mocks'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|'"block_device_info_get_mapping"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'vol'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"volume_driver_method"'
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|"'bus'"
op|':'
string|'"scsi"'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|'"disk"'
nl|'\n'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'volume_driver_method'
op|'('
string|"'connect_volume'"
op|','
nl|'\n'
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'plug_vifs'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'inst_ref'
op|')'
op|','
name|'nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'pre_live_migration'
op|'('
name|'c'
op|','
name|'inst_ref'
op|','
name|'vol'
op|','
name|'nw_info'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_vol_backed_works_correctly_mocked
dedent|''
name|'def'
name|'test_pre_live_migration_vol_backed_works_correctly_mocked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Creating testdata, using temp dir.'
nl|'\n'
indent|'        '
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_images_and_backing'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeNetworkInfo
name|'class'
name|'FakeNetworkInfo'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|fixed_ips
indent|'                '
name|'def'
name|'fixed_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'['
string|'"test_ip_addr"'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'inst_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'nw_info'
op|'='
name|'FakeNetworkInfo'
op|'('
op|')'
newline|'\n'
comment|'# Creating mocks'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"volume_driver_method"'
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|':'
newline|'\n'
DECL|variable|disk_info
indent|'                '
name|'disk_info'
op|'='
op|'{'
nl|'\n'
string|"'bus'"
op|':'
string|'"scsi"'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
string|"'type'"
op|':'
string|'"disk"'
nl|'\n'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'volume_driver_method'
op|'('
string|"'connect_volume'"
op|','
nl|'\n'
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'disk_info'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'plug_vifs'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'inst_ref'
op|')'
op|','
name|'nw_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'migrate_data'
op|'='
op|'{'
string|"'is_shared_storage'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_volume_backed'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'instance_relative_path'"
op|':'
name|'inst_ref'
op|'['
string|"'name'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'ret'
op|'='
name|'conn'
op|'.'
name|'pre_live_migration'
op|'('
name|'c'
op|','
name|'inst_ref'
op|','
name|'vol'
op|','
name|'nw_info'
op|','
name|'None'
op|','
nl|'\n'
name|'migrate_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'%s/%s/'"
op|'%'
op|'('
name|'tmpdir'
op|','
nl|'\n'
name|'inst_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_plug_vifs_retry_fails
dedent|''
name|'def'
name|'test_pre_live_migration_plug_vifs_retry_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'live_migration_retry_count'
op|'='
number|'3'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test'"
op|','
string|"'uuid'"
op|':'
string|"'uuid'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'pre_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
name|'disk_info'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_plug_vifs_retry_works
dedent|''
name|'def'
name|'test_pre_live_migration_plug_vifs_retry_works'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'live_migration_retry_count'
op|'='
number|'3'
op|')'
newline|'\n'
name|'called'
op|'='
op|'{'
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test'"
op|','
string|"'uuid'"
op|':'
string|"'uuid'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'called'
op|'['
string|"'count'"
op|']'
op|'<'
name|'CONF'
op|'.'
name|'live_migration_retry_count'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|','
name|'disk_info'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_works_correctly
dedent|''
name|'def'
name|'test_get_instance_disk_info_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test data'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'GB'
op|'='
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk'"
op|']'
op|'='
number|'10'
op|'*'
name|'GB'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
number|'20'
op|'*'
name|'GB'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_backing_files'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
string|"'file'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"getsize"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'10737418240'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'3328599655'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
op|'('
string|'"image: /test/disk\\n"'
nl|'\n'
string|'"file format: raw\\n"'
nl|'\n'
string|'"virtual size: 20G (21474836480 bytes)\\n"'
nl|'\n'
string|'"disk size: 3.1G\\n"'
nl|'\n'
string|'"cluster_size: 2097152\\n"'
nl|'\n'
string|'"backing file: /test/dummy (actual path: /backing/file)\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|'"execute"'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
string|"'qemu-img'"
op|','
string|"'info'"
op|','
nl|'\n'
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'ret'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'disk_size'"
op|']'
op|','
number|'10737418240'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk.local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'virt_disk_size'"
op|']'
op|','
number|'21474836480'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'18146236825'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_live_migration
dedent|''
name|'def'
name|'test_post_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy1'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
string|"'dummy2'"
op|','
string|"'mount_device'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'inst_ref'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'cntx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Set up the mock expectations'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|','
string|"'block_device_info_get_mapping'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conn'
op|','
string|"'volume_driver_method'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'block_device_info_get_mapping'
op|','
name|'volume_driver_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'post_live_migration'
op|'('
name|'cntx'
op|','
name|'inst_ref'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info_get_mapping'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'vol'
op|')'
op|']'
op|')'
newline|'\n'
name|'volume_driver_method'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'disconnect_volume'"
op|','
nl|'\n'
name|'v'
op|'['
string|"'connection_info'"
op|']'
op|','
nl|'\n'
name|'v'
op|'['
string|"'mount_device'"
op|']'
op|'.'
name|'rpartition'
op|'('
string|'"/"'
op|')'
op|'['
number|'2'
op|']'
op|')'
nl|'\n'
name|'for'
name|'v'
name|'in'
name|'vol'
op|'['
string|"'block_device_mapping'"
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_excludes_volumes
dedent|''
dedent|''
name|'def'
name|'test_get_instance_disk_info_excludes_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test data'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/fake/path/to/volume1\'/>"'
nl|'\n'
string|'"<target dev=\'vdc\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/fake/path/to/volume2\'/>"'
nl|'\n'
string|'"<target dev=\'vdd\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Preparing mocks'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'GB'
op|'='
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk'"
op|']'
op|'='
number|'10'
op|'*'
name|'GB'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_sizes'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
number|'20'
op|'*'
name|'GB'
newline|'\n'
name|'fake_libvirt_utils'
op|'.'
name|'disk_backing_files'
op|'['
string|"'/test/disk.local'"
op|']'
op|'='
string|"'file'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"getsize"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'10737418240'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
number|'3328599655'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
op|'('
string|'"image: /test/disk\\n"'
nl|'\n'
string|'"file format: raw\\n"'
nl|'\n'
string|'"virtual size: 20G (21474836480 bytes)\\n"'
nl|'\n'
string|'"disk size: 3.1G\\n"'
nl|'\n'
string|'"cluster_size: 2097152\\n"'
nl|'\n'
string|'"backing file: /test/dummy (actual path: /backing/file)\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"exists"'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|'"execute"'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
string|"'qemu-img'"
op|','
string|"'info'"
op|','
nl|'\n'
string|"'/test/disk.local'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'ret'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn_info'
op|'='
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'info'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'connection_info'"
op|':'
name|'conn_info'
op|','
string|"'mount_device'"
op|':'
string|"'/dev/vdd'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'info'
op|'='
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'raw'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'disk_size'"
op|']'
op|','
number|'10737418240'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'type'"
op|']'
op|','
string|"'qcow2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'path'"
op|']'
op|','
string|"'/test/disk.local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'virt_disk_size'"
op|']'
op|','
number|'21474836480'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'backing_file'"
op|']'
op|','
string|'"file"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
number|'1'
op|']'
op|'['
string|"'over_committed_disk_size'"
op|']'
op|','
number|'18146236825'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_network_info
dedent|''
name|'def'
name|'test_spawn_with_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Preparing mocks'
nl|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_getLibVersion
dedent|''
name|'def'
name|'fake_getLibVersion'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'9007'
newline|'\n'
nl|'\n'
DECL|function|fake_getCapabilities
dedent|''
name|'def'
name|'fake_getCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"""\n            <capabilities>\n                <host>\n                    <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                    <cpu>\n                      <arch>x86_64</arch>\n                      <model>Penryn</model>\n                      <vendor>Intel</vendor>\n                      <topology sockets=\'1\' cores=\'2\' threads=\'1\'/>\n                      <feature name=\'xtpr\'/>\n                    </cpu>\n                </host>\n            </capabilities>\n            """'
newline|'\n'
nl|'\n'
comment|'# _fake_network_info must be called before create_fake_libvirt_mock(),'
nl|'\n'
comment|'# as _fake_network_info calls importutils.import_class() and'
nl|'\n'
comment|'# create_fake_libvirt_mock() mocks importutils.import_class().'
nl|'\n'
dedent|''
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'getLibVersion'
op|'='
name|'fake_getLibVersion'
op|','
nl|'\n'
name|'getCapabilities'
op|'='
name|'fake_getCapabilities'
op|','
nl|'\n'
name|'getVersion'
op|'='
name|'lambda'
op|':'
number|'1005001'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
comment|'# we send an int to test sha1 call'
newline|'\n'
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'flavor_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'instance_type_id'"
op|']'
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'flavors'
op|'.'
name|'save_flavor_info'
op|'('
op|'{'
op|'}'
op|','
name|'instance_type'
op|')'
newline|'\n'
name|'instance_ref'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'sys_meta'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
comment|'# Mock out the get_info method of the LibvirtDriver so that the polling'
nl|'\n'
comment|'# in the spawn method of the LibvirtDriver returns immediately'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'get_info'
op|'('
name|'instance'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'setup_basic_filtering'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'prepare_instance_filter'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
nl|'\n'
string|"'cache'"
op|','
nl|'\n'
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
string|"'herp'"
op|','
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'CONF'
op|'.'
name|'base_dir_name'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'base_dir_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_without_image_meta
dedent|''
dedent|''
name|'def'
name|'test_spawn_without_image_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'create_image_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_create_image
dedent|''
name|'def'
name|'fake_create_image'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'create_image_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_image'"
op|','
name|'fake_create_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'create_image_called'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
op|','
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'create_image_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_from_volume_calls_cache
dedent|''
name|'def'
name|'test_spawn_from_volume_calls_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cache_called_for_disk'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_none
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_cache
dedent|''
name|'def'
name|'fake_cache'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'image_id'"
op|')'
op|'=='
string|"'my_fake_image'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'cache_called_for_disk'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|','
string|"'cache'"
op|','
name|'fake_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'root_device_name'"
op|':'
string|"'/dev/vda'"
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'mount_device'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Volume-backed instance created without image'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Booted from volume but with placeholder image'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'root_device_name'"
op|']'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Booted from an image'
nl|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cache_called_for_disk'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_pci_devices
dedent|''
name|'def'
name|'test_spawn_with_pci_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_none
indent|'        '
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|FakeLibvirtPciDevice
dedent|''
name|'class'
name|'FakeLibvirtPciDevice'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|dettach
indent|'            '
name|'def'
name|'dettach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_node_device_lookup_by_name
dedent|''
dedent|''
name|'def'
name|'fake_node_device_lookup_by_name'
op|'('
name|'address'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pattern'
op|'='
op|'('
string|'"pci_%(hex)s{4}_%(hex)s{2}_%(hex)s{2}_%(oct)s{1}"'
nl|'\n'
op|'%'
name|'dict'
op|'('
name|'hex'
op|'='
string|"'[\\da-f]'"
op|','
name|'oct'
op|'='
string|"'[0-8]'"
op|')'
op|')'
newline|'\n'
name|'pattern'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|')'
newline|'\n'
name|'if'
name|'pattern'
op|'.'
name|'match'
op|'('
name|'address'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'FakeLibvirtPciDevice'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_image'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'='
name|'fake_node_device_lookup_by_name'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'my_fake_image'"
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'dict'
op|'('
name|'instance'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'pci_devices'"
op|']'
op|'='
op|'['
op|'{'
string|"'address'"
op|':'
string|"'0000:00:00.0'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_plain
dedent|''
name|'def'
name|'test_create_image_plain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gotFiles'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_image
name|'def'
name|'fake_image'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'image_type'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
DECL|class|FakeImage
indent|'            '
name|'class'
name|'FakeImage'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_image
dedent|''
name|'def'
name|'create_image'
op|'('
name|'self'
op|','
name|'prepare_template'
op|','
name|'base'
op|','
nl|'\n'
name|'size'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|cache
dedent|''
name|'def'
name|'cache'
op|'('
name|'self'
op|','
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'gotFiles'
op|'.'
name|'append'
op|'('
op|'{'
string|"'filename'"
op|':'
name|'filename'
op|','
nl|'\n'
string|"'size'"
op|':'
name|'size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeImage'
op|'('
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
comment|"# Stop 'libvirt_driver._create_image' touching filesystem"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|'"image"'
op|','
nl|'\n'
name|'fake_image'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_image'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'wantFiles'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'356a192b7913b04c54574d18c28d46e6395428ab'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'10'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'ephemeral_20_default'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'20'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotFiles'
op|','
name|'wantFiles'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_with_swap
dedent|''
name|'def'
name|'test_create_image_with_swap'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gotFiles'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_image
name|'def'
name|'fake_image'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|','
name|'image_type'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
DECL|class|FakeImage
indent|'            '
name|'class'
name|'FakeImage'
op|'('
name|'imagebackend'
op|'.'
name|'Image'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_image
dedent|''
name|'def'
name|'create_image'
op|'('
name|'self'
op|','
name|'prepare_template'
op|','
name|'base'
op|','
nl|'\n'
name|'size'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|cache
dedent|''
name|'def'
name|'cache'
op|'('
name|'self'
op|','
name|'fetch_func'
op|','
name|'filename'
op|','
name|'size'
op|'='
name|'None'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'gotFiles'
op|'.'
name|'append'
op|'('
op|'{'
string|"'filename'"
op|':'
name|'filename'
op|','
nl|'\n'
string|"'size'"
op|':'
name|'size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|snapshot
dedent|''
name|'def'
name|'snapshot'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeImage'
op|'('
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_none
dedent|''
name|'def'
name|'fake_none'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
nl|'\n'
comment|"# Stop 'libvirt_driver._create_image' touching filesystem"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'imagebackend'
op|'.'
name|'Backend'
op|','
string|'"image"'
op|','
nl|'\n'
name|'fake_image'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'1'
newline|'\n'
comment|'# Turn on some swap to exercise that codepath in _create_image'
nl|'\n'
name|'instance_ref'
op|'['
string|"'system_metadata'"
op|']'
op|'['
string|"'instance_type_swap'"
op|']'
op|'='
number|'500'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|','
name|'fake_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'image_meta'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_image'
op|'('
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'disk_info'
op|'['
string|"'mapping'"
op|']'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|','
nl|'\n'
name|'disk_info'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'wantFiles'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'356a192b7913b04c54574d18c28d46e6395428ab'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'10'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'ephemeral_20_default'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'20'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'filename'"
op|':'
string|"'swap_500'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'500'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotFiles'
op|','
name|'wantFiles'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output_file
dedent|''
name|'def'
name|'test_get_console_output_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_libvirt_utils'
op|'.'
name|'files'
op|'['
string|"'console.log'"
op|']'
op|'='
string|"'01234567890'"
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'console_dir'
op|'='
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'console_log'
op|'='
string|"'%s/console.log'"
op|'%'
op|'('
name|'console_dir'
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <console type=\'file\'>\n                            <source path=\'%s\'/>\n                            <target port=\'0\'/>\n                        </console>\n                    </devices>\n                </domain>\n            """'
op|'%'
name|'console_log'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'prev_max'
op|'='
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
number|'5'
newline|'\n'
name|'output'
op|'='
name|'conn'
op|'.'
name|'get_console_output'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
name|'prev_max'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'67890'"
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output_pty
dedent|''
dedent|''
name|'def'
name|'test_get_console_output_pty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_libvirt_utils'
op|'.'
name|'files'
op|'['
string|"'pty'"
op|']'
op|'='
string|"'01234567890'"
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'test_instance'
newline|'\n'
name|'instance_ref'
op|'['
string|"'image_ref'"
op|']'
op|'='
number|'123456'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
name|'console_dir'
op|'='
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'pty_file'
op|'='
string|"'%s/fake_pty'"
op|'%'
op|'('
name|'console_dir'
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                        </disk>\n                        <console type=\'pty\'>\n                            <source path=\'%s\'/>\n                            <target port=\'0\'/>\n                        </console>\n                    </devices>\n                </domain>\n            """'
op|'%'
name|'pty_file'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_flush
dedent|''
name|'def'
name|'_fake_flush'
op|'('
name|'self'
op|','
name|'fake_pty'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'foo'"
newline|'\n'
nl|'\n'
DECL|function|_fake_append_to_file
dedent|''
name|'def'
name|'_fake_append_to_file'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'fpath'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'pty'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_flush_libvirt_console'
op|'='
name|'_fake_flush'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_append_to_file'
op|'='
name|'_fake_append_to_file'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'prev_max'
op|'='
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
number|'5'
newline|'\n'
name|'output'
op|'='
name|'conn'
op|'.'
name|'get_console_output'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'libvirt_driver'
op|'.'
name|'MAX_CONSOLE_BYTES'
op|'='
name|'prev_max'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'67890'"
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_ip_addr
dedent|''
dedent|''
name|'def'
name|'test_get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'ip'
op|'='
name|'conn'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ip'
op|','
name|'CONF'
op|'.'
name|'my_ip'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broken_connection
dedent|''
name|'def'
name|'test_broken_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
op|'('
name|'error'
op|','
name|'domain'
op|')'
name|'in'
op|'('
nl|'\n'
op|'('
name|'libvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_REMOTE'
op|')'
op|','
nl|'\n'
op|'('
name|'libvirt'
op|'.'
name|'VIR_ERR_SYSTEM_ERROR'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_RPC'
op|')'
op|','
nl|'\n'
op|'('
name|'libvirt'
op|'.'
name|'VIR_ERR_INTERNAL_ERROR'
op|','
name|'libvirt'
op|'.'
name|'VIR_FROM_RPC'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|'"_wrapped_conn"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|'.'
name|'_wrapped_conn'
op|','
string|'"getLibVersion"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_domain"'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_wrapped_conn'
op|'.'
name|'getLibVersion'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"fake failure"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'error'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_domain'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'conn'
op|'.'
name|'_test_connection'
op|'('
name|'conn'
op|'.'
name|'_wrapped_conn'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_immediate_delete
dedent|''
dedent|''
name|'def'
name|'test_immediate_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_lookup_by_name
indent|'        '
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_removes_disk
dedent|''
name|'def'
name|'test_destroy_removes_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"42"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|','
nl|'\n'
string|'"cleaned"'
op|':'
number|'0'
op|','
string|"'info_cache'"
op|':'
name|'None'
op|','
string|"'security_groups'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_undefine_domain'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_undefine_domain'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|'"rmtree"'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
nl|'\n'
string|"'instance-%08x'"
op|'%'
name|'int'
op|'('
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_cleanup_lvm'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_cleanup_lvm'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
dedent|''
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_unplug_vifs
dedent|''
name|'def'
name|'fake_unplug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unfilter_instance
dedent|''
name|'def'
name|'fake_unfilter_instance'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_obj_load_attr
dedent|''
name|'def'
name|'fake_obj_load_attr'
op|'('
name|'self'
op|','
name|'attrname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
name|'attrname'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'['
name|'attrname'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_save
dedent|''
dedent|''
name|'def'
name|'fake_save'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'unplug_vifs'"
op|','
name|'fake_unplug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'unfilter_instance'"
op|','
name|'fake_unfilter_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|','
string|"'fields'"
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'int'
op|','
string|"'uuid'"
op|':'
name|'str'
op|','
string|"'cleaned'"
op|':'
name|'int'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|','
string|"'obj_load_attr'"
op|','
nl|'\n'
name|'fake_obj_load_attr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|','
name|'fake_save'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_not_removes_disk
dedent|''
name|'def'
name|'test_destroy_not_removes_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_undefine_domain'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_undefine_domain'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
dedent|''
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_unplug_vifs
dedent|''
name|'def'
name|'fake_unplug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unfilter_instance
dedent|''
name|'def'
name|'fake_unfilter_instance'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'unplug_vifs'"
op|','
name|'fake_unplug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'unfilter_instance'"
op|','
name|'fake_unfilter_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_instance_files
dedent|''
name|'def'
name|'test_delete_instance_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"42"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|','
nl|'\n'
string|'"cleaned"'
op|':'
number|'0'
op|','
string|"'info_cache'"
op|':'
name|'None'
op|','
string|"'security_groups'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|'"rmtree"'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'instances_path'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_obj_load_attr
name|'def'
name|'fake_obj_load_attr'
op|'('
name|'self'
op|','
name|'attrname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
name|'attrname'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'['
name|'attrname'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|','
string|"'fields'"
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'int'
op|','
string|"'uuid'"
op|':'
name|'str'
op|','
string|"'cleaned'"
op|':'
name|'int'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|','
string|"'obj_load_attr'"
op|','
nl|'\n'
name|'fake_obj_load_attr'
op|')'
newline|'\n'
nl|'\n'
name|'inst_obj'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'.'
name|'get_by_uuid'
op|'('
name|'None'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'conn'
op|'.'
name|'delete_instance_files'
op|'('
name|'inst_obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conn'
op|'.'
name|'delete_instance_files'
op|'('
name|'inst_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_different_ids
dedent|''
name|'def'
name|'test_reboot_different_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_wait_soft_reboot_seconds'
op|'='
number|'1'
op|')'
newline|'\n'
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reboot_create_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Mock domain'
nl|'\n'
name|'mock_domain'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_fake_id'"
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_CRASHED'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_other_fake_id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_domain'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
dedent|''
name|'def'
name|'fake_create_domain'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reboot_create_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|','
nl|'\n'
string|'"pci_devices"'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_create_domain'"
op|','
name|'fake_create_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'FakeLoopingCall'
op|'('
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'None'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'reboot_create_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_same_ids
dedent|''
name|'def'
name|'test_reboot_same_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_wait_soft_reboot_seconds'
op|'='
number|'1'
op|')'
newline|'\n'
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# Mock domain'
nl|'\n'
name|'mock_domain'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_fake_id'"
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_CRASHED'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_fake_id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_domain'
newline|'\n'
nl|'\n'
DECL|function|fake_hard_reboot
dedent|''
name|'def'
name|'fake_hard_reboot'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
dedent|''
name|'def'
name|'fake_sleep'
op|'('
name|'interval'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|','
nl|'\n'
string|'"pci_devices"'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'greenthread'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_hard_reboot'"
op|','
name|'fake_hard_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'FakeLoopingCall'
op|'('
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'None'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'reboot_hard_reboot_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_soft_reboot_libvirt_exception
dedent|''
name|'def'
name|'test_soft_reboot_libvirt_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that a hard reboot is performed when a soft reboot results'
nl|'\n'
comment|'# in raising a libvirtError.'
nl|'\n'
indent|'        '
name|'info_tuple'
op|'='
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'also_fake'"
op|')'
newline|'\n'
nl|'\n'
comment|'# setup mocks'
nl|'\n'
name|'mock_domain'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'libvirt_driver'
op|'.'
name|'VIR_DOMAIN_RUNNING'
op|','
op|')'
op|'+'
name|'info_tuple'
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'ID'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'some_fake_id'"
op|')'
newline|'\n'
name|'mock_domain'
op|'.'
name|'shutdown'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'Err'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'context'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_lookup_by_name'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'mock_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_hard_reboot'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_hard_reboot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_resume_state_on_host_boot_with_state
dedent|''
name|'def'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'{'
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'state'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_hard_reboot
dedent|''
name|'def'
name|'fake_hard_reboot'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_hard_reboot'"
op|','
name|'fake_hard_reboot'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'ignored_states'
op|'='
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'if'
name|'state'
name|'in'
name|'ignored_states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'called'
op|'['
string|"'count'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'called'
op|'['
string|"'count'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_running_state
dedent|''
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_running_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_suspended_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_suspended_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_paused_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_paused_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_nostate
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_nostate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_shutdown_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_shutdown_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_crashed_state
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_crashed_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_resume_state_on_host_boot_with_state'
op|'('
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_with_instance_not_found_on_driver
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_with_instance_not_found_on_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'{'
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_exists
name|'def'
name|'fake_instance_exists'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_hard_reboot
dedent|''
name|'def'
name|'fake_hard_reboot'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'instance_exists'"
op|','
name|'fake_instance_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_hard_reboot'"
op|','
name|'fake_hard_reboot'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'called'
op|'['
string|"'count'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hard_reboot
dedent|''
name|'def'
name|'test_hard_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'{'
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'raw\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk\'/>"'
nl|'\n'
string|'"<target dev=\'vda\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"<disk type=\'file\'><driver name=\'qemu\' type=\'qcow2\'/>"'
nl|'\n'
string|'"<source file=\'/test/disk.local\'/>"'
nl|'\n'
string|'"<target dev=\'vdb\' bus=\'virtio\'/></disk>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'get_instance_disk_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'to_xml'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_create_images_and_backing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'_create_domain_and_network'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'count'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'called'
op|'['
string|"'count'"
op|']'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'state'
op|'='
name|'state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'disk_info'
op|'='
name|'blockinfo'
op|'.'
name|'get_disk_info'
op|'('
name|'CONF'
op|'.'
name|'libvirt_type'
op|','
nl|'\n'
name|'instance'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'to_xml'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|','
nl|'\n'
name|'write_to_disk'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
name|'disk_info_json'
op|'='
string|'\'[{"virt_disk_size": 2}]\''
newline|'\n'
name|'conn'
op|'.'
name|'get_instance_disk_info'
op|'('
name|'instance'
op|'['
string|'"name"'
op|']'
op|','
name|'dummyxml'
op|','
nl|'\n'
name|'block_device_info'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'disk_info_json'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_images_and_backing'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
name|'instance'
op|')'
op|','
nl|'\n'
name|'disk_info_json'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_create_domain_and_network'
op|'('
name|'dummyxml'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'block_device_info'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'reboot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_hard_reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_undefines
dedent|''
name|'def'
name|'test_destroy_undefines'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
string|"'id'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_rbd
dedent|''
name|'def'
name|'test_cleanup_rbd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
string|"'id'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'fake_volumes'
op|'='
op|'['
string|"'875a8070-d0b9-4949-8b31-104d125c9a64.local'"
op|','
nl|'\n'
string|"'875a8070-d0b9-4949-8b31-104d125c9a64.swap'"
op|','
nl|'\n'
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
op|','
nl|'\n'
string|"'wrong875a8070-d0b9-4949-8b31-104d125c9a64'"
op|']'
newline|'\n'
name|'fake_pool'
op|'='
string|"'fake_pool'"
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fakeinstancename'"
op|','
string|"'id'"
op|':'
string|"'instanceid'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
op|'}'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_images_rbd_pool'
op|'='
name|'fake_pool'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|','
nl|'\n'
string|"'remove_rbd_volumes'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'libvirt_utils'
op|'.'
name|'remove_rbd_volumes'
op|'('
name|'fake_pool'
op|','
nl|'\n'
op|'*'
name|'fake_volumes'
op|'['
op|':'
number|'3'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_cleanup_rbd'
op|'('
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_undefines_no_undefine_flags
dedent|''
name|'def'
name|'test_destroy_undefines_no_undefine_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'Err'"
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
string|"'id'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_undefines_no_attribute_with_managed_save
dedent|''
name|'def'
name|'test_destroy_undefines_no_attribute_with_managed_save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'managedSaveRemove'
op|'('
number|'0'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
string|"'id'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_undefines_no_attribute_no_managed_save
dedent|''
name|'def'
name|'test_destroy_undefines_no_attribute_no_managed_save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefineFlags'
op|'('
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'hasManagedSaveImage'
op|'('
number|'0'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'AttributeError'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'undefine'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
string|"'id'"
op|':'
op|'-'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_delete_instance_files
dedent|''
name|'def'
name|'fake_delete_instance_files'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_delete_instance_files'"
op|','
nl|'\n'
name|'fake_delete_instance_files'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_timed_out
dedent|''
name|'def'
name|'test_destroy_timed_out'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"timed out"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_error_code
dedent|''
name|'def'
name|'fake_get_error_code'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'libvirt'
op|'.'
name|'VIR_ERR_OPERATION_TIMEOUT'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|"'get_error_code'"
op|','
nl|'\n'
name|'fake_get_error_code'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstancePowerOffFailure'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'destroy'
op|','
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_private_destroy_not_found
dedent|''
name|'def'
name|'test_private_destroy_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'ID'
op|'('
op|')'
newline|'\n'
name|'mock'
op|'.'
name|'destroy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_info'"
op|','
name|'fake_get_info'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|'"name"'
op|':'
string|'"instancename"'
op|','
string|'"id"'
op|':'
string|'"instanceid"'
op|','
nl|'\n'
string|'"uuid"'
op|':'
string|'"875a8070-d0b9-4949-8b31-104d125c9a64"'
op|'}'
newline|'\n'
comment|"# NOTE(vish): verifies destroy doesn't raise if the instance disappears"
nl|'\n'
name|'conn'
op|'.'
name|'_destroy'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_undefine_domain_with_not_found_instance
dedent|''
name|'def'
name|'test_undefine_domain_with_not_found_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"not found"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
string|'"get_error_code"'
op|')'
newline|'\n'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'.'
name|'get_error_code'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_ERR_NO_DOMAIN'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
nl|'\n'
comment|"# NOTE(wenjianhn): verifies undefine doesn't raise if the"
nl|'\n'
comment|'# instance disappears'
nl|'\n'
name|'conn'
op|'.'
name|'_undefine_domain'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_over_committed_size_total
dedent|''
name|'def'
name|'test_disk_over_committed_size_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure destroy calls managedSaveRemove for saved instance.'
nl|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|list_instances
name|'def'
name|'list_instances'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|"'fake1'"
op|','
string|"'fake2'"
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'list_instances'"
op|','
name|'list_instances'
op|')'
newline|'\n'
nl|'\n'
name|'fake_disks'
op|'='
op|'{'
string|"'fake1'"
op|':'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk1'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'10653532160'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'fake2'"
op|':'
op|'['
op|'{'
string|"'type'"
op|':'
string|"'raw'"
op|','
string|"'path'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/somepath/disk2'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'over_committed_disk_size'"
op|':'
string|"'0'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|get_info
name|'def'
name|'get_info'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'fake_disks'
op|'.'
name|'get'
op|'('
name|'instance_name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'get_instance_disk_info'"
op|','
name|'get_info'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'get_disk_over_committed_size_total'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
number|'10653532160'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cpu_info
dedent|''
name|'def'
name|'test_cpu_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_host_capabilities_stub
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cpu'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCPU'
op|'('
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'model'
op|'='
string|'"Opteron_G4"'
newline|'\n'
name|'cpu'
op|'.'
name|'vendor'
op|'='
string|'"AMD"'
newline|'\n'
name|'cpu'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'cores'
op|'='
number|'2'
newline|'\n'
name|'cpu'
op|'.'
name|'threads'
op|'='
number|'1'
newline|'\n'
name|'cpu'
op|'.'
name|'sockets'
op|'='
number|'4'
newline|'\n'
nl|'\n'
name|'cpu'
op|'.'
name|'add_feature'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCPUFeature'
op|'('
string|'"extapic"'
op|')'
op|')'
newline|'\n'
name|'cpu'
op|'.'
name|'add_feature'
op|'('
name|'vconfig'
op|'.'
name|'LibvirtConfigCPUFeature'
op|'('
string|'"3dnow"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCapsHost'
op|'('
op|')'
newline|'\n'
name|'caps'
op|'.'
name|'host'
op|'.'
name|'cpu'
op|'='
name|'cpu'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
string|'"x86_64"'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|'"kvm"'
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
name|'vm_mode'
op|'.'
name|'HVM'
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
string|'"i686"'
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|'"kvm"'
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'get_host_capabilities'"
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'want'
op|'='
op|'{'
string|'"vendor"'
op|':'
string|'"AMD"'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"extapic"'
op|','
string|'"3dnow"'
op|']'
op|','
nl|'\n'
string|'"model"'
op|':'
string|'"Opteron_G4"'
op|','
nl|'\n'
string|'"arch"'
op|':'
string|'"x86_64"'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
number|'2'
op|','
string|'"threads"'
op|':'
number|'1'
op|','
string|'"sockets"'
op|':'
number|'4'
op|'}'
op|'}'
newline|'\n'
name|'got'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'conn'
op|'.'
name|'get_cpu_info'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want'
op|','
name|'got'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pcidev_info
dedent|''
name|'def'
name|'test_get_pcidev_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_nodeDeviceLookupByName
indent|'        '
name|'def'
name|'fake_nodeDeviceLookupByName'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeNodeDevice'
op|'('
name|'_fake_NodeDevXml'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'='
name|'fake_nodeDeviceLookupByName'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actualvf'
op|'='
name|'conn'
op|'.'
name|'_get_pcidev_info'
op|'('
string|'"pci_0000_04_00_3"'
op|')'
newline|'\n'
name|'expect_vf'
op|'='
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:00.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"label"'
op|':'
string|"'label_8086_1521'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actualvf'
op|','
name|'expect_vf'
op|')'
newline|'\n'
name|'actualvf'
op|'='
name|'conn'
op|'.'
name|'_get_pcidev_info'
op|'('
string|'"pci_0000_04_10_7"'
op|')'
newline|'\n'
name|'expect_vf'
op|'='
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_10_7"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"label"'
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
op|'['
op|'('
string|"'0x0000'"
op|','
string|"'0x04'"
op|','
string|"'0x00'"
op|','
string|"'0x3'"
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actualvf'
op|','
name|'expect_vf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_device_assignable
dedent|''
name|'def'
name|'test_pci_device_assignable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'dev_filter'
op|','
string|"'device_assignable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'fake_dev'
op|'='
op|'{'
string|"'dev_type'"
op|':'
string|"'type-PF'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'conn'
op|'.'
name|'_pci_device_assignable'
op|'('
name|'fake_dev'
op|')'
op|')'
newline|'\n'
name|'fake_dev'
op|'='
op|'{'
string|"'dev_type'"
op|':'
string|"'type-VF'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conn'
op|'.'
name|'_pci_device_assignable'
op|'('
name|'fake_dev'
op|')'
op|')'
newline|'\n'
name|'fake_dev'
op|'='
op|'{'
string|"'dev_type'"
op|':'
string|"'type-PCI'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conn'
op|'.'
name|'_pci_device_assignable'
op|'('
name|'fake_dev'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pci_passthrough_devices
dedent|''
name|'def'
name|'test_get_pci_passthrough_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fakelistDevices
indent|'        '
name|'def'
name|'fakelistDevices'
op|'('
name|'caps'
op|','
name|'fakeargs'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
string|"'pci_0000_04_00_3'"
op|','
string|"'pci_0000_04_10_7'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'listDevices'
op|'='
name|'fakelistDevices'
newline|'\n'
nl|'\n'
DECL|function|fake_nodeDeviceLookupByName
name|'def'
name|'fake_nodeDeviceLookupByName'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeNodeDevice'
op|'('
name|'_fake_NodeDevXml'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'nodeDeviceLookupByName'
op|'='
name|'fake_nodeDeviceLookupByName'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|'.'
name|'dev_filter'
op|','
string|"'device_assignable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
name|'actjson'
op|'='
name|'conn'
op|'.'
name|'get_pci_passthrough_devices'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expectvfs'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_10_7"'
op|','
nl|'\n'
string|'"domain"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.7"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1520'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
op|'['
op|'('
string|"'0x0000'"
op|','
string|"'0x04'"
op|','
string|"'0x00'"
op|','
string|"'0x3'"
op|')'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'actctualvfs'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'actjson'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'actctualvfs'
op|'['
number|'0'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'not'
name|'in'
op|'['
string|"'phys_function'"
op|','
string|"'virt_functions'"
op|','
string|"'label'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actctualvfs'
op|'['
number|'0'
op|']'
op|'['
name|'key'
op|']'
op|','
name|'expectvfs'
op|'['
number|'1'
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_vcpus_exception
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_diagnostic_vcpus_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'vcpus missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169L'
op|','
number|'688640L'
op|','
number|'0L'
op|','
number|'0L'
op|','
op|'-'
number|'1L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408L'
op|','
number|'82L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160L'
op|','
string|"'rss'"
op|':'
number|'200164L'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160L'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"testvirt"'
op|'}'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'vda_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160L'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160L'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164L'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408L'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82L'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0L'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_blockstats_exception
dedent|''
name|'def'
name|'test_diagnostic_blockstats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000L'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'blockStats missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408L'
op|','
number|'82L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160L'
op|','
string|"'rss'"
op|':'
number|'200164L'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160L'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"testvirt"'
op|'}'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000L'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000L'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000L'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000L'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160L'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160L'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164L'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408L'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82L'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0L'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_interfacestats_exception
dedent|''
name|'def'
name|'test_diagnostic_interfacestats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000L'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169L'
op|','
number|'688640L'
op|','
number|'0L'
op|','
number|'0L'
op|','
op|'-'
number|'1L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'interfaceStat missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160L'
op|','
string|"'rss'"
op|':'
number|'200164L'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160L'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"testvirt"'
op|'}'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000L'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000L'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000L'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000L'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160L'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160L'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164L'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_memorystats_exception
dedent|''
name|'def'
name|'test_diagnostic_memorystats_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000L'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169L'
op|','
number|'688640L'
op|','
number|'0L'
op|','
number|'0L'
op|','
op|'-'
number|'1L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408L'
op|','
number|'82L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'memoryStats missing'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160L'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"testvirt"'
op|'}'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000L'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000L'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000L'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000L'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160L'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408L'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82L'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0L'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_diagnostic_full
dedent|''
name|'def'
name|'test_diagnostic_full'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                    <devices>\n                        <disk type=\'file\'>\n                            <source file=\'filename\'/>\n                            <target dev=\'vda\' bus=\'virtio\'/>\n                        </disk>\n                        <disk type=\'block\'>\n                            <source dev=\'/path/to/dev/1\'/>\n                            <target dev=\'vdb\' bus=\'virtio\'/>\n                        </disk>\n                        <interface type=\'network\'>\n                            <mac address=\'52:54:00:a4:38:38\'/>\n                            <source network=\'default\'/>\n                            <target dev=\'vnet0\'/>\n                        </interface>\n                    </devices>\n                </domain>\n            """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'DiagFakeDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'fake_xml'
op|'='
name|'xml'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
op|'['
op|'('
number|'0'
op|','
number|'1'
op|','
number|'15340000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1640000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
number|'1'
op|','
number|'3040000000L'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
number|'1'
op|','
number|'1420000000L'
op|','
number|'0'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|blockStats
dedent|''
name|'def'
name|'blockStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'169L'
op|','
number|'688640L'
op|','
number|'0L'
op|','
number|'0L'
op|','
op|'-'
number|'1L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interfaceStats
dedent|''
name|'def'
name|'interfaceStats'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'4408L'
op|','
number|'82L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|','
number|'0L'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memoryStats
dedent|''
name|'def'
name|'memoryStats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'actual'"
op|':'
number|'220160L'
op|','
string|"'rss'"
op|':'
number|'200164L'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|maxMemory
dedent|''
name|'def'
name|'maxMemory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'280160L'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_name'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'DiagFakeDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'fake_lookup_name'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"testvirt"'
op|'}'
op|')'
newline|'\n'
name|'expect'
op|'='
op|'{'
string|"'cpu0_time'"
op|':'
number|'15340000000L'
op|','
nl|'\n'
string|"'cpu1_time'"
op|':'
number|'1640000000L'
op|','
nl|'\n'
string|"'cpu2_time'"
op|':'
number|'3040000000L'
op|','
nl|'\n'
string|"'cpu3_time'"
op|':'
number|'1420000000L'
op|','
nl|'\n'
string|"'vda_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vda_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vda_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vda_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'vdb_read'"
op|':'
number|'688640L'
op|','
nl|'\n'
string|"'vdb_read_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'vdb_write'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_write_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vdb_errors'"
op|':'
op|'-'
number|'1L'
op|','
nl|'\n'
string|"'memory'"
op|':'
number|'280160L'
op|','
nl|'\n'
string|"'memory-actual'"
op|':'
number|'220160L'
op|','
nl|'\n'
string|"'memory-rss'"
op|':'
number|'200164L'
op|','
nl|'\n'
string|"'vnet0_rx'"
op|':'
number|'4408L'
op|','
nl|'\n'
string|"'vnet0_rx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_rx_packets'"
op|':'
number|'82L'
op|','
nl|'\n'
string|"'vnet0_tx'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_drop'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_errors'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'vnet0_tx_packets'"
op|':'
number|'0L'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failing_vcpu_count
dedent|''
name|'def'
name|'test_failing_vcpu_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Domain can fail to return the vcpu description in case it\'s\n        just starting up or shutting down. Make sure None is handled\n        gracefully.\n        """'
newline|'\n'
nl|'\n'
DECL|class|DiagFakeDomain
name|'class'
name|'DiagFakeDomain'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'vcpus'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_vcpus'
op|'='
name|'vcpus'
newline|'\n'
nl|'\n'
DECL|member|vcpus
dedent|''
name|'def'
name|'vcpus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'_vcpus'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'('
op|'['
number|'1'
op|']'
op|'*'
name|'self'
op|'.'
name|'_vcpus'
op|','
op|'['
name|'True'
op|']'
op|'*'
name|'self'
op|'.'
name|'_vcpus'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'_conn'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'list_instance_ids'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'lookupByID'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'list_instance_ids'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'lookupByID'
op|'('
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'DiagFakeDomain'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'lookupByID'
op|'('
number|'2'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'DiagFakeDomain'
op|'('
number|'5'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'driver'
op|'.'
name|'get_vcpu_used'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_capabilities
dedent|''
name|'def'
name|'test_get_instance_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_host_capabilities_stub
name|'def'
name|'get_host_capabilities_stub'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'caps'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigCaps'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
string|"'hvm'"
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
string|"'x86_64'"
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|"'kvm'"
op|','
string|"'qemu'"
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'guest'
op|'='
name|'vconfig'
op|'.'
name|'LibvirtConfigGuest'
op|'('
op|')'
newline|'\n'
name|'guest'
op|'.'
name|'ostype'
op|'='
string|"'hvm'"
newline|'\n'
name|'guest'
op|'.'
name|'arch'
op|'='
string|"'i686'"
newline|'\n'
name|'guest'
op|'.'
name|'domtype'
op|'='
op|'['
string|"'kvm'"
op|']'
newline|'\n'
name|'caps'
op|'.'
name|'guests'
op|'.'
name|'append'
op|'('
name|'guest'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'caps'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'get_host_capabilities'"
op|','
nl|'\n'
name|'get_host_capabilities_stub'
op|')'
newline|'\n'
nl|'\n'
name|'want'
op|'='
op|'['
op|'('
string|"'x86_64'"
op|','
string|"'kvm'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
string|"'x86_64'"
op|','
string|"'qemu'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
string|"'i686'"
op|','
string|"'kvm'"
op|','
string|"'hvm'"
op|')'
op|']'
newline|'\n'
name|'got'
op|'='
name|'conn'
op|'.'
name|'get_instance_capabilities'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want'
op|','
name|'got'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_event_dispatch
dedent|''
name|'def'
name|'test_event_dispatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Validate that the libvirt self-pipe for forwarding'
nl|'\n'
comment|'# events between threads is working sanely'
nl|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'got_events'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|handler
name|'def'
name|'handler'
op|'('
name|'event'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_events'
op|'.'
name|'append'
op|'('
name|'event'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'.'
name|'register_event_listener'
op|'('
name|'handler'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_init_events_pipe'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'event1'
op|'='
name|'virtevent'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STARTED'
op|')'
newline|'\n'
name|'event2'
op|'='
name|'virtevent'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_PAUSED'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_queue_event'
op|'('
name|'event1'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_queue_event'
op|'('
name|'event2'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'want_events'
op|'='
op|'['
name|'event1'
op|','
name|'event2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want_events'
op|','
name|'got_events'
op|')'
newline|'\n'
nl|'\n'
name|'event3'
op|'='
name|'virtevent'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_RESUMED'
op|')'
newline|'\n'
name|'event4'
op|'='
name|'virtevent'
op|'.'
name|'LifecycleEvent'
op|'('
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_queue_event'
op|'('
name|'event3'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_queue_event'
op|'('
name|'event4'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'want_events'
op|'='
op|'['
name|'event1'
op|','
name|'event2'
op|','
name|'event3'
op|','
name|'event4'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'want_events'
op|','
name|'got_events'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_event_lifecycle
dedent|''
name|'def'
name|'test_event_lifecycle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Validate that libvirt events are correctly translated'
nl|'\n'
comment|'# to Nova events'
nl|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'got_events'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|handler
name|'def'
name|'handler'
op|'('
name|'event'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_events'
op|'.'
name|'append'
op|'('
name|'event'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conn'
op|'.'
name|'register_event_listener'
op|'('
name|'handler'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_init_events_pipe'
op|'('
op|')'
newline|'\n'
name|'fake_dom_xml'
op|'='
string|'"""\n                <domain type=\'kvm\'>\n                  <uuid>cef19ce0-0ca2-11df-855d-b19fbce37686</uuid>\n                  <devices>\n                    <disk type=\'file\'>\n                      <source file=\'filename\'/>\n                    </disk>\n                  </devices>\n                </domain>\n            """'
newline|'\n'
name|'dom'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_dom_xml'
op|','
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'_event_lifecycle_callback'
op|'('
name|'conn'
op|'.'
name|'_conn'
op|','
nl|'\n'
name|'dom'
op|','
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_EVENT_STOPPED'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
name|'conn'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_dispatch_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_events'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'type'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'virtevent'
op|'.'
name|'LifecycleEvent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"cef19ce0-0ca2-11df-855d-b19fbce37686"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_events'
op|'['
number|'0'
op|']'
op|'.'
name|'transition'
op|','
nl|'\n'
name|'virtevent'
op|'.'
name|'EVENT_LIFECYCLE_STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode
dedent|''
name|'def'
name|'test_set_cache_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=directsync'"
op|']'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuestDisk'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'source_type'
op|'='
string|"'file'"
newline|'\n'
name|'conn'
op|'.'
name|'set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|','
string|"'directsync'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode_invalid_mode
dedent|''
name|'def'
name|'test_set_cache_mode_invalid_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=FAKE'"
op|']'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuestDisk'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'source_type'
op|'='
string|"'file'"
newline|'\n'
name|'conn'
op|'.'
name|'set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_cache_mode_invalid_object
dedent|''
name|'def'
name|'test_set_cache_mode_invalid_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_cachemodes'
op|'='
op|'['
string|"'file=directsync'"
op|']'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'fake_conf'
op|'='
name|'FakeConfigGuest'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_conf'
op|'.'
name|'driver_cache'
op|'='
string|"'fake'"
newline|'\n'
name|'conn'
op|'.'
name|'set_cache_mode'
op|'('
name|'fake_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_conf'
op|'.'
name|'driver_cache'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_shared_storage_detection
dedent|''
name|'def'
name|'_test_shared_storage_detection'
op|'('
name|'self'
op|','
name|'is_same'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'get_host_ip_addr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'unlink'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'bar'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'ssh'"
op|','
string|"'foo'"
op|','
string|"'touch'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'is_same'
op|')'
newline|'\n'
name|'if'
name|'is_same'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'ssh'"
op|','
string|"'foo'"
op|','
string|"'rm'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'return'
name|'conn'
op|'.'
name|'_is_storage_shared_with'
op|'('
string|"'foo'"
op|','
string|"'/path'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_same_host
dedent|''
name|'def'
name|'test_shared_storage_detection_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_test_shared_storage_detection'
op|'('
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_different_host
dedent|''
name|'def'
name|'test_shared_storage_detection_different_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_test_shared_storage_detection'
op|'('
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared_storage_detection_easy
dedent|''
name|'def'
name|'test_shared_storage_detection_easy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|','
string|"'get_host_ip_addr'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'unlink'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conn'
op|'.'
name|'_is_storage_shared_with'
op|'('
string|"'foo'"
op|','
string|"'/path'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_define_xml_fails
dedent|''
name|'def'
name|'test_create_domain_define_xml_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the xml is logged when defining the domain fails.\n        """'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
nl|'\n'
DECL|function|fake_defineXML
name|'def'
name|'fake_defineXML'
op|'('
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_xml'
op|','
name|'xml'
op|')'
newline|'\n'
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'virDomainDefineXML() failed'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'defineXML'
op|'='
name|'fake_defineXML'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'conn'
op|'.'
name|'_create_domain'
op|','
name|'fake_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_with_flags_fails
dedent|''
name|'def'
name|'test_create_domain_with_flags_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the xml is logged when creating the domain with flags fails.\n        """'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
name|'fake_domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_createWithFlags
name|'def'
name|'fake_createWithFlags'
op|'('
name|'launch_flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'virDomainCreateWithFlags() failed'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_domain'
op|','
string|"'createWithFlags'"
op|','
name|'fake_createWithFlags'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|','
name|'conn'
op|'.'
name|'_create_domain'
op|','
nl|'\n'
name|'domain'
op|'='
name|'fake_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_domain_enable_hairpin_fails
dedent|''
name|'def'
name|'test_create_domain_enable_hairpin_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the xml is logged when enabling hairpin mode for the domain\n        fails.\n        """'
newline|'\n'
name|'fake_xml'
op|'='
string|'"<test>this is a test</test>"'
newline|'\n'
name|'fake_domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_enable_hairpin
name|'def'
name|'fake_enable_hairpin'
op|'('
name|'launch_flags'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_error
name|'def'
name|'fake_error'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fake_xml'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'LOG'
op|','
string|"'error'"
op|','
name|'fake_error'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conn'
op|','
string|"'_enable_hairpin'"
op|','
name|'fake_enable_hairpin'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'processutils'
op|'.'
name|'ProcessExecutionError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'_create_domain'
op|','
nl|'\n'
name|'domain'
op|'='
name|'fake_domain'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'log_error_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console
dedent|''
name|'def'
name|'test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<graphics type=\'vnc\' port=\'5900\'/>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'vnc_dict'
op|'='
name|'conn'
op|'.'
name|'get_vnc_console'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vnc_dict'
op|'['
string|"'port'"
op|']'
op|','
string|"'5900'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_unavailable
dedent|''
name|'def'
name|'test_get_vnc_console_unavailable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices></devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'get_vnc_console'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_spice_console
dedent|''
name|'def'
name|'test_get_spice_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices>"'
nl|'\n'
string|'"<graphics type=\'spice\' port=\'5950\'/>"'
nl|'\n'
string|'"</devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'spice_dict'
op|'='
name|'conn'
op|'.'
name|'get_spice_console'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spice_dict'
op|'['
string|"'port'"
op|']'
op|','
string|"'5950'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_spice_console_unavailable
dedent|''
name|'def'
name|'test_get_spice_console_unavailable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'dummyxml'
op|'='
op|'('
string|'"<domain type=\'kvm\'><name>instance-0000000a</name>"'
nl|'\n'
string|'"<devices></devices></domain>"'
op|')'
newline|'\n'
nl|'\n'
name|'vdmock'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMock'
op|'('
name|'libvirt'
op|'.'
name|'virDomain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vdmock'
op|','
string|'"XMLDesc"'
op|')'
newline|'\n'
name|'vdmock'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dummyxml'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_name'
op|'=='
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vdmock'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'create_fake_libvirt_mock'
op|'('
name|'lookupByName'
op|'='
name|'fake_lookup'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'get_spice_console'
op|','
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_attach_detach_interface_get_config
dedent|''
name|'def'
name|'_test_attach_detach_interface_get_config'
op|'('
name|'self'
op|','
name|'method_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the get_config() method is properly called in\n        attach_interface() and detach_interface().\n\n        method_name: either \\"attach_interface\\" or \\"detach_interface\\"\n                     depending on the method to test.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
string|"'_conn'"
op|')'
newline|'\n'
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'.'
name|'_conn'
op|'.'
name|'lookupByName'
op|'='
name|'self'
op|'.'
name|'fake_lookup'
newline|'\n'
nl|'\n'
name|'test_instance'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'self'
op|'.'
name|'test_instance'
op|')'
newline|'\n'
name|'test_instance'
op|'['
string|"'name'"
op|']'
op|'='
string|'"test"'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'method_name'
op|'=='
string|'"attach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'test_instance'
op|'['
string|"'image_ref'"
op|']'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'method_name'
op|'=='
string|'"detach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'fake_image_meta'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Unhandled method %"'
op|'%'
name|'method_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'virtapi'
op|'='
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
newline|'\n'
name|'fake_inst_type_id'
op|'='
name|'test_instance'
op|'['
string|"'instance_type_id'"
op|']'
newline|'\n'
name|'fake_inst_type'
op|'='
name|'virtapi'
op|'.'
name|'instance_type_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_inst_type_id'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'conn'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
name|'test_instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fake_image_meta'
op|','
name|'fake_inst_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|'.'
name|'vif_driver'
op|','
string|"'get_config'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'vif_driver'
op|'.'
name|'get_config'
op|'('
name|'test_instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fake_image_meta'
op|','
name|'fake_inst_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'method_name'
op|'=='
string|'"attach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'attach_interface'
op|'('
name|'test_instance'
op|','
name|'fake_image_meta'
op|','
nl|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'method_name'
op|'=='
string|'"detach_interface"'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'detach_interface'
op|'('
name|'test_instance'
op|','
name|'network_info'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Unhandled method %"'
op|'%'
name|'method_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_get_config
dedent|''
dedent|''
name|'def'
name|'test_attach_interface_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the get_config() method is properly called in\n        attach_interface().\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_test_attach_detach_interface_get_config'
op|'('
string|'"attach_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_get_config
dedent|''
name|'def'
name|'test_detach_interface_get_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that the get_config() method is properly called in\n        detach_interface().\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_test_attach_detach_interface_get_config'
op|'('
string|'"detach_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_root_device_name
dedent|''
name|'def'
name|'test_default_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_instance'"
op|'}'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'root_bdm'
op|'='
op|'{'
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'detination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'image_id'"
op|':'
string|"'fake_id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'fake_libvirt_type'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'blockinfo'
op|','
string|"'get_disk_bus_for_device_type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'blockinfo'
op|','
string|"'get_root_info'"
op|')'
newline|'\n'
nl|'\n'
name|'blockinfo'
op|'.'
name|'get_disk_bus_for_device_type'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
string|"'disk'"
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'virtio'"
op|')'
newline|'\n'
name|'blockinfo'
op|'.'
name|'get_disk_bus_for_device_type'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
nl|'\n'
string|"'cdrom'"
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'ide'"
op|')'
newline|'\n'
name|'blockinfo'
op|'.'
name|'get_root_info'
op|'('
string|"'fake_libvirt_type'"
op|','
nl|'\n'
name|'image_meta'
op|','
name|'root_bdm'
op|','
nl|'\n'
string|"'virtio'"
op|','
string|"'ide'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'dev'"
op|':'
string|"'vda'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'default_root_device_name'
op|'('
name|'instance'
op|','
name|'image_meta'
op|','
nl|'\n'
name|'root_bdm'
op|')'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_device_names_for_instance
dedent|''
name|'def'
name|'test_default_device_names_for_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_instance'"
op|'}'
newline|'\n'
name|'root_device_name'
op|'='
string|"'/dev/vda'"
newline|'\n'
name|'ephemerals'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'vdb'"
op|'}'
op|']'
newline|'\n'
name|'swap'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'vdc'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'vdc'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|"'fake_libvirt_type'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'blockinfo'
op|','
string|"'default_device_names'"
op|')'
newline|'\n'
nl|'\n'
name|'blockinfo'
op|'.'
name|'default_device_names'
op|'('
string|"'fake_libvirt_type'"
op|','
name|'instance'
op|','
nl|'\n'
name|'root_device_name'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'ephemerals'
op|','
name|'swap'
op|','
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'default_device_names_for_instance'
op|'('
name|'instance'
op|','
name|'root_device_name'
op|','
nl|'\n'
name|'ephemerals'
op|','
name|'swap'
op|','
nl|'\n'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hypervisor_hostname_caching
dedent|''
name|'def'
name|'test_hypervisor_hostname_caching'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure that the first hostname is always returned'
nl|'\n'
DECL|class|FakeConn
indent|'        '
name|'class'
name|'FakeConn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|getHostname
indent|'            '
name|'def'
name|'getHostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|getLibVersion
dedent|''
name|'def'
name|'getLibVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'99999'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_wrapped_conn'
op|'='
name|'FakeConn'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conn'
op|'.'
name|'_wrapped_conn'
op|','
string|"'getHostname'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_conn'
op|'.'
name|'getHostname'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_conn'
op|'.'
name|'getHostname'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'bar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'conn'
op|'.'
name|'get_hypervisor_hostname'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'conn'
op|'.'
name|'get_hypervisor_hostname'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_connection_serial
dedent|''
name|'def'
name|'test_get_connection_serial'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|get_conn_currency
indent|'        '
name|'def'
name|'get_conn_currency'
op|'('
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'_conn'
op|'.'
name|'getLibVersion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|connect_with_block
dedent|''
name|'def'
name|'connect_with_block'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
comment|'# enough to allow another connect to run'
nl|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'calls'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'conn'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'calls'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_connect'"
op|','
name|'connect_with_block'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# call serially'
nl|'\n'
name|'get_conn_currency'
op|'('
name|'driver'
op|')'
newline|'\n'
name|'get_conn_currency'
op|'('
name|'driver'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'calls'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_connection_concurrency
dedent|''
name|'def'
name|'test_get_connection_concurrency'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|get_conn_currency
indent|'        '
name|'def'
name|'get_conn_currency'
op|'('
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'_conn'
op|'.'
name|'getLibVersion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|connect_with_block
dedent|''
name|'def'
name|'connect_with_block'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
comment|'# enough to allow another connect to run'
nl|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'calls'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'conn'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'calls'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|','
nl|'\n'
string|"'_connect'"
op|','
name|'connect_with_block'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# call concurrently'
nl|'\n'
name|'thr1'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'get_conn_currency'
op|','
name|'driver'
op|'='
name|'driver'
op|')'
newline|'\n'
name|'thr2'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'get_conn_currency'
op|','
name|'driver'
op|'='
name|'driver'
op|')'
newline|'\n'
nl|'\n'
comment|'# let threads run'
nl|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'thr1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'thr2'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'calls'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostStateTestCase
dedent|''
dedent|''
name|'class'
name|'HostStateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|cpu_info
indent|'    '
name|'cpu_info'
op|'='
op|'('
string|'\'{"vendor": "Intel", "model": "pentium", "arch": "i686", \''
nl|'\n'
string|'\'"features": ["ssse3", "monitor", "pni", "sse2", "sse", \''
nl|'\n'
string|'\'"fxsr", "clflush", "pse36", "pat", "cmov", "mca", "pge", \''
nl|'\n'
string|'\'"mtrr", "sep", "apic"], \''
nl|'\n'
string|'\'"topology": {"cores": "1", "threads": "1", "sockets": "1"}}\''
op|')'
newline|'\n'
DECL|variable|instance_caps
name|'instance_caps'
op|'='
op|'['
op|'('
string|'"x86_64"'
op|','
string|'"kvm"'
op|','
string|'"hvm"'
op|')'
op|','
op|'('
string|'"i686"'
op|','
string|'"kvm"'
op|','
string|'"hvm"'
op|')'
op|']'
newline|'\n'
DECL|variable|pci_devices
name|'pci_devices'
op|'='
op|'['
op|'{'
nl|'\n'
string|'"dev_id"'
op|':'
string|'"pci_0000_04_00_3"'
op|','
nl|'\n'
string|'"address"'
op|':'
string|'"0000:04:10.3"'
op|','
nl|'\n'
string|'"product_id"'
op|':'
string|"'1521'"
op|','
nl|'\n'
string|'"vendor_id"'
op|':'
string|"'8086'"
op|','
nl|'\n'
string|'"dev_type"'
op|':'
string|"'type-PF'"
op|','
nl|'\n'
string|'"phys_function"'
op|':'
name|'None'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|class|FakeConnection
name|'class'
name|'FakeConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fake connection object."""'
newline|'\n'
nl|'\n'
DECL|member|get_vcpu_total
name|'def'
name|'get_vcpu_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|get_vcpu_used
dedent|''
name|'def'
name|'get_vcpu_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_cpu_info
dedent|''
name|'def'
name|'get_cpu_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HostStateTestCase'
op|'.'
name|'cpu_info'
newline|'\n'
nl|'\n'
DECL|member|get_disk_over_committed_size_total
dedent|''
name|'def'
name|'get_disk_over_committed_size_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_local_gb_info
dedent|''
name|'def'
name|'get_local_gb_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'total'"
op|':'
number|'100'
op|','
string|"'used'"
op|':'
number|'20'
op|','
string|"'free'"
op|':'
number|'80'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|get_memory_mb_total
dedent|''
name|'def'
name|'get_memory_mb_total'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'497'
newline|'\n'
nl|'\n'
DECL|member|get_memory_mb_used
dedent|''
name|'def'
name|'get_memory_mb_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'88'
newline|'\n'
nl|'\n'
DECL|member|get_hypervisor_type
dedent|''
name|'def'
name|'get_hypervisor_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'QEMU'"
newline|'\n'
nl|'\n'
DECL|member|get_hypervisor_version
dedent|''
name|'def'
name|'get_hypervisor_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'13091'
newline|'\n'
nl|'\n'
DECL|member|get_hypervisor_hostname
dedent|''
name|'def'
name|'get_hypervisor_hostname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'compute1'"
newline|'\n'
nl|'\n'
DECL|member|get_host_uptime
dedent|''
name|'def'
name|'get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
string|"'10:01:16 up  1:36,  6 users,  '"
nl|'\n'
string|"'load average: 0.21, 0.16, 0.19'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_disk_available_least
dedent|''
name|'def'
name|'get_disk_available_least'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'13091'
newline|'\n'
nl|'\n'
DECL|member|get_instance_capabilities
dedent|''
name|'def'
name|'get_instance_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HostStateTestCase'
op|'.'
name|'instance_caps'
newline|'\n'
nl|'\n'
DECL|member|get_pci_passthrough_devices
dedent|''
name|'def'
name|'get_pci_passthrough_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'HostStateTestCase'
op|'.'
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_status
dedent|''
dedent|''
name|'def'
name|'test_update_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hs'
op|'='
name|'libvirt_driver'
op|'.'
name|'HostState'
op|'('
name|'self'
op|'.'
name|'FakeConnection'
op|'('
op|')'
op|')'
newline|'\n'
name|'stats'
op|'='
name|'hs'
op|'.'
name|'_stats'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"vcpus"'
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"memory_mb"'
op|']'
op|','
number|'497'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"local_gb"'
op|']'
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"vcpus_used"'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"memory_mb_used"'
op|']'
op|','
number|'88'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"local_gb_used"'
op|']'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_type"'
op|']'
op|','
string|"'QEMU'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_version"'
op|']'
op|','
number|'13091'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"hypervisor_hostname"'
op|']'
op|','
string|"'compute1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'stats'
op|'['
string|'"cpu_info"'
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"vendor"'
op|':'
string|'"Intel"'
op|','
string|'"model"'
op|':'
string|'"pentium"'
op|','
string|'"arch"'
op|':'
string|'"i686"'
op|','
nl|'\n'
string|'"features"'
op|':'
op|'['
string|'"ssse3"'
op|','
string|'"monitor"'
op|','
string|'"pni"'
op|','
string|'"sse2"'
op|','
string|'"sse"'
op|','
nl|'\n'
string|'"fxsr"'
op|','
string|'"clflush"'
op|','
string|'"pse36"'
op|','
string|'"pat"'
op|','
string|'"cmov"'
op|','
nl|'\n'
string|'"mca"'
op|','
string|'"pge"'
op|','
string|'"mtrr"'
op|','
string|'"sep"'
op|','
string|'"apic"'
op|']'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
string|'"1"'
op|','
string|'"threads"'
op|':'
string|'"1"'
op|','
string|'"sockets"'
op|':'
string|'"1"'
op|'}'
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|'"disk_available_least"'
op|']'
op|','
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'stats'
op|'['
string|'"pci_passthrough_devices"'
op|']'
op|')'
op|','
nl|'\n'
name|'HostStateTestCase'
op|'.'
name|'pci_devices'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NWFilterFakes
dedent|''
dedent|''
name|'class'
name|'NWFilterFakes'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'filters'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|nwfilterLookupByName
dedent|''
name|'def'
name|'nwfilterLookupByName'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'in'
name|'self'
op|'.'
name|'filters'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'filters'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'Filter Not Found'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|filterDefineXMLMock
dedent|''
name|'def'
name|'filterDefineXMLMock'
op|'('
name|'self'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
DECL|class|FakeNWFilterInternal
indent|'        '
name|'class'
name|'FakeNWFilterInternal'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'name'
op|','
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'self'
op|'.'
name|'xml'
op|'='
name|'xml'
newline|'\n'
nl|'\n'
DECL|member|undefine
dedent|''
name|'def'
name|'undefine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'filters'
op|'['
name|'self'
op|'.'
name|'name'
op|']'
newline|'\n'
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'name'
op|'='
name|'tree'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'if'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'filters'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'filters'
op|'['
name|'name'
op|']'
op|'='
name|'FakeNWFilterInternal'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'xml'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IptablesFirewallTestCase
dedent|''
dedent|''
name|'class'
name|'IptablesFirewallTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'IptablesFirewallTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeLibvirtDriver
name|'class'
name|'FakeLibvirtDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|nwfilterDefineXML
indent|'            '
name|'def'
name|'nwfilterDefineXML'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
string|'"""setup_basic_rules in nwfilter calls this."""'
newline|'\n'
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'fake_libvirt_connection'
op|'='
name|'FakeLibvirtDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'='
name|'firewall'
op|'.'
name|'IptablesFirewallDriver'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
nl|'\n'
name|'get_connection'
op|'='
name|'lambda'
op|':'
name|'self'
op|'.'
name|'fake_libvirt_connection'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|in_rules
dedent|''
name|'in_rules'
op|'='
op|'['
nl|'\n'
string|"'# Generated by iptables-save v1.4.10 on Sat Feb 19 00:03:19 2011'"
op|','
nl|'\n'
string|"'*nat'"
op|','
nl|'\n'
string|"':PREROUTING ACCEPT [1170:189210]'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [844:71028]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [5149:405186]'"
op|','
nl|'\n'
string|"':POSTROUTING ACCEPT [5063:386098]'"
op|','
nl|'\n'
string|"'# Completed on Tue Dec 18 15:50:25 2012'"
op|','
nl|'\n'
string|"'# Generated by iptables-save v1.4.12 on Tue Dec 18 15:50:25 201;'"
op|','
nl|'\n'
string|"'*mangle'"
op|','
nl|'\n'
string|"':PREROUTING ACCEPT [241:39722]'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [230:39282]'"
op|','
nl|'\n'
string|"':FORWARD ACCEPT [0:0]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [266:26558]'"
op|','
nl|'\n'
string|"':POSTROUTING ACCEPT [267:26590]'"
op|','
nl|'\n'
string|"'-A POSTROUTING -o virbr0 -p udp -m udp --dport 68 -j CHECKSUM '"
nl|'\n'
string|"'--checksum-fill'"
op|','
nl|'\n'
string|"'COMMIT'"
op|','
nl|'\n'
string|"'# Completed on Tue Dec 18 15:50:25 2012'"
op|','
nl|'\n'
string|"'# Generated by iptables-save v1.4.4 on Mon Dec  6 11:54:13 2010'"
op|','
nl|'\n'
string|"'*filter'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [969615:281627771]'"
op|','
nl|'\n'
string|"':FORWARD ACCEPT [0:0]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [915599:63811649]'"
op|','
nl|'\n'
string|"':nova-block-ipv4 - [0:0]'"
op|','
nl|'\n'
string|"'[0:0] -A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT '"
op|','
nl|'\n'
string|"'[0:0] -A FORWARD -d 192.168.122.0/24 -o virbr0 -m state --state RELATED'"
nl|'\n'
string|"',ESTABLISHED -j ACCEPT '"
op|','
nl|'\n'
string|"'[0:0] -A FORWARD -s 192.168.122.0/24 -i virbr0 -j ACCEPT '"
op|','
nl|'\n'
string|"'[0:0] -A FORWARD -i virbr0 -o virbr0 -j ACCEPT '"
op|','
nl|'\n'
string|"'[0:0] -A FORWARD -o virbr0 -j REJECT '"
nl|'\n'
string|"'--reject-with icmp-port-unreachable '"
op|','
nl|'\n'
string|"'[0:0] -A FORWARD -i virbr0 -j REJECT '"
nl|'\n'
string|"'--reject-with icmp-port-unreachable '"
op|','
nl|'\n'
string|"'COMMIT'"
op|','
nl|'\n'
string|"'# Completed on Mon Dec  6 11:54:13 2010'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|in6_filter_rules
name|'in6_filter_rules'
op|'='
op|'['
nl|'\n'
string|"'# Generated by ip6tables-save v1.4.4 on Tue Jan 18 23:47:56 2011'"
op|','
nl|'\n'
string|"'*filter'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [349155:75810423]'"
op|','
nl|'\n'
string|"':FORWARD ACCEPT [0:0]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [349256:75777230]'"
op|','
nl|'\n'
string|"'COMMIT'"
op|','
nl|'\n'
string|"'# Completed on Tue Jan 18 23:47:56 2011'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_ref
name|'def'
name|'_create_instance_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_static_filters
dedent|''
name|'def'
name|'test_static_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'src_instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'testgroup'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'test group'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'src_secgroup'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'testsourcegroup'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'src group'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'icmp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.11.0/24'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'icmp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'8'
op|','
nl|'\n'
string|"'to_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.11.0/24'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.10.0/24'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'group_id'"
op|':'
name|'src_secgroup'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'group_id'"
op|':'
name|'src_secgroup'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'admin_ctxt'
op|','
name|'src_instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'src_secgroup'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'src_instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'admin_ctxt'
op|','
name|'src_instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'#        self.fw.add_instance(instance_ref)'
nl|'\n'
DECL|function|fake_iptables_execute
name|'def'
name|'fake_iptables_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'process_input'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'process_input'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'cmd'
op|'=='
op|'('
string|"'ip6tables-save'"
op|','
string|"'-c'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'in6_filter_rules'
op|')'
op|','
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'cmd'
op|'=='
op|'('
string|"'iptables-save'"
op|','
string|"'-c'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'in_rules'
op|')'
op|','
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'cmd'
op|'=='
op|'('
string|"'iptables-restore'"
op|','
string|"'-c'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'lines'
op|'='
name|'process_input'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
string|"'*filter'"
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'out_rules'
op|'='
name|'lines'
newline|'\n'
dedent|''
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'cmd'
op|'=='
op|'('
string|"'ip6tables-restore'"
op|','
string|"'-c'"
op|','
op|')'
op|':'
newline|'\n'
indent|'                '
name|'lines'
op|'='
name|'process_input'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
string|"'*filter'"
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'out6_rules'
op|'='
name|'lines'
newline|'\n'
dedent|''
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'network_model'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'linux_net'
newline|'\n'
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'execute'
op|'='
name|'fake_iptables_execute'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|','
nl|'\n'
name|'lambda'
name|'instance'
op|':'
name|'network_model'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_model'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'apply_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_model'
op|')'
newline|'\n'
nl|'\n'
name|'in_rules'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'l'
op|':'
name|'not'
name|'l'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'in_rules'
op|')'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'in_rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'nova'"
name|'not'
name|'in'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'rule'
name|'in'
name|'self'
op|'.'
name|'out_rules'
op|','
nl|'\n'
string|"'Rule went missing: %s'"
op|'%'
name|'rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance_chain'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'out_rules'
op|':'
newline|'\n'
comment|"# This is pretty crude, but it'll do for now"
nl|'\n'
comment|'# last two octets change'
nl|'\n'
indent|'            '
name|'if'
name|'re'
op|'.'
name|'search'
op|'('
string|"'-d 192.168.[0-9]{1,3}.[0-9]{1,3} -j'"
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance_chain'
op|'='
name|'rule'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_chain'
op|','
string|'"The instance chain wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_chain'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'out_rules'
op|':'
newline|'\n'
comment|"# This is pretty crude, but it'll do for now"
nl|'\n'
indent|'            '
name|'if'
string|"'-A %s -j'"
op|'%'
name|'instance_chain'
name|'in'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'security_group_chain'
op|'='
name|'rule'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_chain'
op|','
nl|'\n'
string|'"The security group chain wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'\\[0\\:0\\] -A .* -j ACCEPT -p icmp '"
nl|'\n'
string|"'-s 192.168.11.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"ICMP acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'\\[0\\:0\\] -A .* -j ACCEPT -p icmp -m icmp '"
nl|'\n'
string|"'--icmp-type 8 -s 192.168.11.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"ICMP Echo Request acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'ip'
name|'in'
name|'network_model'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ip'
op|'['
string|"'version'"
op|']'
op|'!='
number|'4'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'\\[0\\:0\\] -A .* -j ACCEPT -p tcp -m multiport '"
nl|'\n'
string|"'--dports 80:81 -s %s'"
op|'%'
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"TCP port 80/81 acceptance rule wasn\'t added"'
op|')'
newline|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'\\[0\\:0\\] -A .* -j ACCEPT -s '"
nl|'\n'
string|"'%s'"
op|'%'
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"Protocol/port-less acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'\\[0\\:0\\] -A .* -j ACCEPT -p tcp '"
nl|'\n'
string|"'-m multiport --dports 80:81 -s 192.168.10.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"TCP port 80/81 acceptance rule wasn\'t added"'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filters_for_instance_with_ip_v6
dedent|''
name|'def'
name|'test_filters_for_instance_with_ip_v6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'rulesv4'
op|','
name|'rulesv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_filters_for_instance'
op|'('
string|'"fake"'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rulesv4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rulesv6'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filters_for_instance_without_ip_v6
dedent|''
name|'def'
name|'test_filters_for_instance_without_ip_v6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'rulesv4'
op|','
name|'rulesv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_filters_for_instance'
op|'('
string|'"fake"'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rulesv4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rulesv6'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multinic_iptables
dedent|''
name|'def'
name|'test_multinic_iptables'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ipv4_rules_per_addr'
op|'='
number|'1'
newline|'\n'
name|'ipv4_addr_per_network'
op|'='
number|'2'
newline|'\n'
name|'ipv6_rules_per_addr'
op|'='
number|'1'
newline|'\n'
name|'ipv6_addr_per_network'
op|'='
number|'1'
newline|'\n'
name|'networks_count'
op|'='
number|'5'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'networks_count'
op|','
nl|'\n'
name|'ipv4_addr_per_network'
op|')'
newline|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'meta'"
op|']'
op|'['
string|"'dhcp_server'"
op|']'
op|'='
string|"'1.1.1.1'"
newline|'\n'
name|'ipv4_len'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'ipv6_len'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv6'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'inst_ipv4'
op|','
name|'inst_ipv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instance_rules'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'ipv4'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
newline|'\n'
name|'ipv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv6'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
newline|'\n'
name|'ipv4_network_rules'
op|'='
name|'len'
op|'('
name|'ipv4'
op|')'
op|'-'
name|'len'
op|'('
name|'inst_ipv4'
op|')'
op|'-'
name|'ipv4_len'
newline|'\n'
name|'ipv6_network_rules'
op|'='
name|'len'
op|'('
name|'ipv6'
op|')'
op|'-'
name|'len'
op|'('
name|'inst_ipv6'
op|')'
op|'-'
name|'ipv6_len'
newline|'\n'
comment|'# Extra rules are for the DHCP request'
nl|'\n'
name|'rules'
op|'='
op|'('
name|'ipv4_rules_per_addr'
op|'*'
name|'ipv4_addr_per_network'
op|'*'
nl|'\n'
name|'networks_count'
op|')'
op|'+'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ipv4_network_rules'
op|','
name|'rules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ipv6_network_rules'
op|','
nl|'\n'
name|'ipv6_rules_per_addr'
op|'*'
name|'ipv6_addr_per_network'
op|'*'
name|'networks_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_do_refresh_security_group_rules
dedent|''
name|'def'
name|'test_do_refresh_security_group_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'fw'
op|','
nl|'\n'
string|"'instance_rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'fw'
op|','
nl|'\n'
string|"'add_filters_for_instance'"
op|','
nl|'\n'
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instance_rules'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'add_filters_for_instance'
op|'('
name|'instance_ref'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instance_rules'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'add_filters_for_instance'
op|'('
name|'instance_ref'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instances'
op|'['
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'instance_ref'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'do_refresh_security_group_rules'
op|'('
string|'"fake"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unfilter_instance_undefines_nwfilter
dedent|''
name|'def'
name|'test_unfilter_instance_undefines_nwfilter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fakefilter'
op|'='
name|'NWFilterFakes'
op|'('
op|')'
newline|'\n'
name|'_xml_mock'
op|'='
name|'fakefilter'
op|'.'
name|'filterDefineXMLMock'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'nwfilter'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterDefineXML'
op|'='
name|'_xml_mock'
newline|'\n'
name|'_lookup_name'
op|'='
name|'fakefilter'
op|'.'
name|'nwfilterLookupByName'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'nwfilter'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterLookupByName'
op|'='
name|'_lookup_name'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'apply_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'original_filter_count'
op|'='
name|'len'
op|'('
name|'fakefilter'
op|'.'
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'unfilter_instance'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
comment|'# should undefine just the instance filter'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'original_filter_count'
op|'-'
name|'len'
op|'('
name|'fakefilter'
op|'.'
name|'filters'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_firewall_rules
dedent|''
name|'def'
name|'test_provider_firewall_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# setup basic instance data'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
comment|'# FRAGILE: peeks at how the firewall names chains'
nl|'\n'
name|'chain_name'
op|'='
string|"'inst-%s'"
op|'%'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
comment|'# create a firewall via setup_basic_filtering like libvirt_conn.spawn'
nl|'\n'
comment|'# should have a chain with 0 rules'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'provider'"
op|','
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'chains'
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# add a rule and send the update message, check for 1 rule'
nl|'\n'
name|'provider_fw0'
op|'='
name|'db'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.99.99.99/32'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'65535'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Add another, refresh, and make sure number of rules goes to two'
nl|'\n'
name|'provider_fw1'
op|'='
name|'db'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'udp'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.99.99.99/32'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'65535'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create the instance filter and make sure it has a jump rule'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'apply_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'inst_rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
name|'chain_name'
op|']'
newline|'\n'
name|'jump_rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'inst_rules'
name|'if'
string|"'-j'"
name|'in'
name|'rule'
op|'.'
name|'rule'
op|']'
newline|'\n'
name|'provjump_rules'
op|'='
op|'['
op|']'
newline|'\n'
comment|"# IptablesTable doesn't make rules unique internally"
nl|'\n'
name|'for'
name|'rule'
name|'in'
name|'jump_rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'provider'"
name|'in'
name|'rule'
op|'.'
name|'rule'
name|'and'
name|'rule'
name|'not'
name|'in'
name|'provjump_rules'
op|':'
newline|'\n'
indent|'                '
name|'provjump_rules'
op|'.'
name|'append'
op|'('
name|'rule'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'provjump_rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# remove a rule from the db, cast to compute to refresh rule'
nl|'\n'
name|'db'
op|'.'
name|'provider_fw_rule_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'provider_fw1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NWFilterTestCase
dedent|''
dedent|''
name|'class'
name|'NWFilterTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NWFilterTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|Mock
name|'class'
name|'Mock'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fake_libvirt_connection'
op|'='
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'='
name|'firewall'
op|'.'
name|'NWFilterFirewall'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'self'
op|'.'
name|'fake_libvirt_connection'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cidr_rule_nwfilter_xml
dedent|''
name|'def'
name|'test_cidr_rule_nwfilter_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cloud_controller'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'cloud_controller'
op|'.'
name|'create_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testgroup'"
op|','
nl|'\n'
string|"'test group description'"
op|')'
newline|'\n'
name|'cloud_controller'
op|'.'
name|'authorize_security_group_ingress'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testgroup'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'80'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'81'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'cidr_ip'
op|'='
string|"'0.0.0.0/0'"
op|')'
newline|'\n'
nl|'\n'
name|'security_group'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake'"
op|','
nl|'\n'
string|"'testgroup'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'teardown_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|teardown_security_group
dedent|''
name|'def'
name|'teardown_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cloud_controller'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'cloud_controller'
op|'.'
name|'delete_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgroup'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup_and_return_security_group
dedent|''
name|'def'
name|'setup_and_return_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cloud_controller'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'cloud_controller'
op|'.'
name|'create_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testgroup'"
op|','
nl|'\n'
string|"'test group description'"
op|')'
newline|'\n'
name|'cloud_controller'
op|'.'
name|'authorize_security_group_ingress'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testgroup'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'80'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'81'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'cidr_ip'
op|'='
string|"'0.0.0.0/0'"
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake'"
op|','
string|"'testgroup'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_type
dedent|''
name|'def'
name|'_create_instance_type'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance."""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'name'"
op|']'
op|'='
string|"'m1.small'"
newline|'\n'
name|'inst'
op|'['
string|"'memory_mb'"
op|']'
op|'='
string|"'1024'"
newline|'\n'
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'root_gb'"
op|']'
op|'='
string|"'10'"
newline|'\n'
name|'inst'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
string|"'20'"
newline|'\n'
name|'inst'
op|'['
string|"'flavorid'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'swap'"
op|']'
op|'='
string|"'2048'"
newline|'\n'
name|'inst'
op|'['
string|"'rxtx_factor'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'flavor_create'
op|'('
name|'context'
op|','
name|'inst'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_creates_base_rule_first
dedent|''
name|'def'
name|'test_creates_base_rule_first'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# These come pre-defined by libvirt'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'defined_filters'
op|'='
op|'['
string|"'no-mac-spoofing'"
op|','
nl|'\n'
string|"'no-ip-spoofing'"
op|','
nl|'\n'
string|"'no-arp-spoofing'"
op|','
nl|'\n'
string|"'allow-dhcp-server'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'recursive_depends'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'self'
op|'.'
name|'defined_filters'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'f'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_filterDefineXMLMock
dedent|''
name|'def'
name|'_filterDefineXMLMock'
op|'('
name|'xml'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'name'
op|'='
name|'dom'
op|'.'
name|'firstChild'
op|'.'
name|'getAttribute'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'name'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'dom'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'filterref'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ref'
op|'='
name|'f'
op|'.'
name|'getAttribute'
op|'('
string|"'filter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ref'
name|'in'
name|'self'
op|'.'
name|'defined_filters'
op|','
nl|'\n'
op|'('
string|"'%s referenced filter that does '"
op|'+'
nl|'\n'
string|"'not yet exist: %s'"
op|')'
op|'%'
op|'('
name|'name'
op|','
name|'ref'
op|')'
op|')'
newline|'\n'
name|'dependencies'
op|'='
op|'['
name|'ref'
op|']'
op|'+'
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'ref'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'name'
op|']'
op|'+='
name|'dependencies'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'defined_filters'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fake_libvirt_connection'
op|'.'
name|'nwfilterDefineXML'
op|'='
name|'_filterDefineXMLMock'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'inst_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst_uuid'
op|'='
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|_ensure_all_called
name|'def'
name|'_ensure_all_called'
op|'('
name|'mac'
op|','
name|'allow_dhcp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_filter'
op|'='
string|"'nova-instance-%s-%s'"
op|'%'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'mac'
op|'.'
name|'translate'
op|'('
name|'None'
op|','
string|"':'"
op|')'
op|')'
newline|'\n'
name|'requiredlist'
op|'='
op|'['
string|"'no-arp-spoofing'"
op|','
string|"'no-ip-spoofing'"
op|','
nl|'\n'
string|"'no-mac-spoofing'"
op|']'
newline|'\n'
name|'required_not_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'allow_dhcp'
op|':'
newline|'\n'
indent|'                '
name|'requiredlist'
op|'.'
name|'append'
op|'('
string|"'allow-dhcp-server'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'required_not_list'
op|'.'
name|'append'
op|'('
string|"'allow-dhcp-server'"
op|')'
newline|'\n'
dedent|''
name|'for'
name|'required'
name|'in'
name|'requiredlist'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'required'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'instance_filter'
op|']'
op|','
nl|'\n'
string|'"Instance\'s filter does not include %s"'
op|'%'
nl|'\n'
name|'required'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'required_not'
name|'in'
name|'required_not_list'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'required_not'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'recursive_depends'
op|'['
name|'instance_filter'
op|']'
op|','
nl|'\n'
string|'"Instance filter includes %s"'
op|'%'
name|'required_not'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'security_group'
op|'='
name|'self'
op|'.'
name|'setup_and_return_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_id'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# since there is one (network_info) there is one vif'
nl|'\n'
comment|"# pass this vif's mac to _ensure_all_called()"
nl|'\n'
comment|'# to set the instance_filter properly'
nl|'\n'
name|'mac'
op|'='
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'meta'"
op|']'
op|'['
string|"'dhcp_server'"
op|']'
op|'='
string|"'1.1.1.1'"
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'allow_dhcp'
op|'='
name|'True'
newline|'\n'
name|'_ensure_all_called'
op|'('
name|'mac'
op|','
name|'allow_dhcp'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'meta'"
op|']'
op|'['
string|"'dhcp_server'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'allow_dhcp'
op|'='
name|'False'
newline|'\n'
name|'_ensure_all_called'
op|'('
name|'mac'
op|','
name|'allow_dhcp'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_remove_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'teardown_security_group'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unfilter_instance_undefines_nwfilters
dedent|''
name|'def'
name|'test_unfilter_instance_undefines_nwfilters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fakefilter'
op|'='
name|'NWFilterFakes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterDefineXML'
op|'='
name|'fakefilter'
op|'.'
name|'filterDefineXMLMock'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterLookupByName'
op|'='
name|'fakefilter'
op|'.'
name|'nwfilterLookupByName'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'inst_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst_uuid'
op|'='
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'='
name|'self'
op|'.'
name|'setup_and_return_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_id'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'original_filter_count'
op|'='
name|'len'
op|'('
name|'fakefilter'
op|'.'
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'unfilter_instance'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'original_filter_count'
op|'-'
name|'len'
op|'('
name|'fakefilter'
op|'.'
name|'filters'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nwfilter_parameters
dedent|''
name|'def'
name|'test_nwfilter_parameters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fakefilter'
op|'='
name|'NWFilterFakes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterDefineXML'
op|'='
name|'fakefilter'
op|'.'
name|'filterDefineXMLMock'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_conn'
op|'.'
name|'nwfilterLookupByName'
op|'='
name|'fakefilter'
op|'.'
name|'nwfilterLookupByName'
newline|'\n'
nl|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'inst_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst_uuid'
op|'='
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'='
name|'self'
op|'.'
name|'setup_and_return_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_id'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'setup_basic_filtering'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
name|'vif'
op|'='
name|'network_info'
op|'['
number|'0'
op|']'
newline|'\n'
name|'nic_id'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"''"
op|')'
newline|'\n'
name|'instance_filter_name'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_instance_filter_name'
op|'('
name|'instance'
op|','
name|'nic_id'
op|')'
newline|'\n'
name|'f'
op|'='
name|'fakefilter'
op|'.'
name|'nwfilterLookupByName'
op|'('
name|'instance_filter_name'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'f'
op|'.'
name|'xml'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'fref'
name|'in'
name|'tree'
op|'.'
name|'findall'
op|'('
string|"'filterref'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'parameters'
op|'='
name|'fref'
op|'.'
name|'findall'
op|'('
string|"'./parameter'"
op|')'
newline|'\n'
name|'for'
name|'parameter'
name|'in'
name|'parameters'
op|':'
newline|'\n'
indent|'                '
name|'subnet_v4'
op|','
name|'subnet_v6'
op|'='
name|'vif'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
newline|'\n'
name|'if'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'IP'"
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_ipv4_like'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
nl|'\n'
string|"'192.168'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'DHCPSERVER'"
op|':'
newline|'\n'
indent|'                    '
name|'dhcp_server'
op|'='
name|'subnet_v4'
op|'.'
name|'get'
op|'('
string|"'dhcp_server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'dhcp_server'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'RASERVER'"
op|':'
newline|'\n'
indent|'                    '
name|'ra_server'
op|'='
name|'subnet_v6'
op|'['
string|"'gateway'"
op|']'
op|'['
string|"'address'"
op|']'
op|'+'
string|'"/128"'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'ra_server'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'PROJNET'"
op|':'
newline|'\n'
indent|'                    '
name|'ipv4_cidr'
op|'='
name|'subnet_v4'
op|'['
string|"'cidr'"
op|']'
newline|'\n'
name|'net'
op|','
name|'mask'
op|'='
name|'netutils'
op|'.'
name|'get_net_and_mask'
op|'('
name|'ipv4_cidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'net'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'PROJMASK'"
op|':'
newline|'\n'
indent|'                    '
name|'ipv4_cidr'
op|'='
name|'subnet_v4'
op|'['
string|"'cidr'"
op|']'
newline|'\n'
name|'net'
op|','
name|'mask'
op|'='
name|'netutils'
op|'.'
name|'get_net_and_mask'
op|'('
name|'ipv4_cidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'mask'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'PROJNET6'"
op|':'
newline|'\n'
indent|'                    '
name|'ipv6_cidr'
op|'='
name|'subnet_v6'
op|'['
string|"'cidr'"
op|']'
newline|'\n'
name|'net'
op|','
name|'prefix'
op|'='
name|'netutils'
op|'.'
name|'get_net_and_prefixlen'
op|'('
name|'ipv6_cidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'net'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
string|"'PROJMASK6'"
op|':'
newline|'\n'
indent|'                    '
name|'ipv6_cidr'
op|'='
name|'subnet_v6'
op|'['
string|"'cidr'"
op|']'
newline|'\n'
name|'net'
op|','
name|'prefix'
op|'='
name|'netutils'
op|'.'
name|'get_net_and_prefixlen'
op|'('
name|'ipv6_cidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parameter'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
op|','
name|'prefix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|'('
string|"'unknown parameter '"
nl|'\n'
string|"'in filter'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtUtilsTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtUtilsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_get_iscsi_initiator
indent|'    '
name|'def'
name|'test_get_iscsi_initiator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'initiator'
op|'='
string|"'fake.initiator.iqn'"
newline|'\n'
name|'rval'
op|'='
op|'('
string|'"junk\\nInitiatorName=%s\\njunk\\n"'
op|'%'
name|'initiator'
op|','
name|'None'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'cat'"
op|','
string|"'/etc/iscsi/initiatorname.iscsi'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'rval'
op|')'
newline|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_iscsi_initiator'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'initiator'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_missing_iscsi_initiator
dedent|''
name|'def'
name|'test_get_missing_iscsi_initiator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'file_path'
op|'='
string|"'/etc/iscsi/initiatorname.iscsi'"
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'cat'"
op|','
name|'file_path'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FileNotFound'
op|'('
name|'file_path'
op|'='
name|'file_path'
op|')'
nl|'\n'
op|')'
newline|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_iscsi_initiator'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'raw'"
op|','
nl|'\n'
string|"'/some/path'"
op|','
string|"'10G'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'/some/stuff'"
op|','
string|"'1234567891234'"
op|')'
newline|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
string|"'raw'"
op|','
string|"'/some/path'"
op|','
string|"'10G'"
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'create_image'
op|'('
string|"'qcow2'"
op|','
string|"'/some/stuff'"
op|','
string|"'1234567891234'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_cow_image
dedent|''
name|'def'
name|'test_create_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'rval'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/some/path'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
nl|'\n'
string|"'qemu-img'"
op|','
string|"'info'"
op|','
string|"'/some/path'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'rval'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'-o'"
op|','
string|"'backing_file=/some/path'"
op|','
nl|'\n'
string|"'/the/new/cow'"
op|')'
newline|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'create_cow_image'
op|'('
string|"'/some/path'"
op|','
string|"'/the/new/cow'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pick_disk_driver_name
dedent|''
name|'def'
name|'test_pick_disk_driver_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'type_map'
op|'='
op|'{'
string|"'kvm'"
op|':'
op|'('
op|'['
name|'True'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'False'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'None'
op|','
string|"'qemu'"
op|']'
op|')'
op|','
nl|'\n'
string|"'qemu'"
op|':'
op|'('
op|'['
name|'True'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'False'
op|','
string|"'qemu'"
op|']'
op|','
op|'['
name|'None'
op|','
string|"'qemu'"
op|']'
op|')'
op|','
nl|'\n'
string|"'xen'"
op|':'
op|'('
op|'['
name|'True'
op|','
string|"'phy'"
op|']'
op|','
op|'['
name|'False'
op|','
string|"'tap2'"
op|']'
op|','
op|'['
name|'None'
op|','
string|"'tap2'"
op|']'
op|')'
op|','
nl|'\n'
string|"'uml'"
op|':'
op|'('
op|'['
name|'True'
op|','
name|'None'
op|']'
op|','
op|'['
name|'False'
op|','
name|'None'
op|']'
op|','
op|'['
name|'None'
op|','
name|'None'
op|']'
op|')'
op|','
nl|'\n'
string|"'lxc'"
op|':'
op|'('
op|'['
name|'True'
op|','
name|'None'
op|']'
op|','
op|'['
name|'False'
op|','
name|'None'
op|']'
op|','
op|'['
name|'None'
op|','
name|'None'
op|']'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'libvirt_type'
op|','
name|'checks'
op|')'
name|'in'
name|'type_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'libvirt_type'
op|'=='
string|'"xen"'
op|':'
newline|'\n'
indent|'                '
name|'version'
op|'='
number|'4001000'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'version'
op|'='
number|'1005001'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
name|'libvirt_type'
op|')'
newline|'\n'
name|'for'
op|'('
name|'is_block_dev'
op|','
name|'expected_result'
op|')'
name|'in'
name|'checks'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
name|'version'
op|','
nl|'\n'
name|'is_block_dev'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pick_disk_driver_name_xen_4_0_0
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_pick_disk_driver_name_xen_4_0_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_type'
op|'='
string|'"xen"'
op|')'
newline|'\n'
name|'result'
op|'='
name|'libvirt_utils'
op|'.'
name|'pick_disk_driver_name'
op|'('
number|'4000000'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|'"tap"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_disk_size
dedent|''
name|'def'
name|'test_get_disk_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/some/path'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'env'"
op|','
string|"'LC_ALL=C'"
op|','
string|"'LANG=C'"
op|','
string|"'qemu-img'"
op|','
string|"'info'"
op|','
nl|'\n'
string|"'/some/path'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
string|"'''image: 00000001\nfile format: raw\nvirtual size: 4.4M (4592640 bytes)\ndisk size: 4.4M'''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk'
op|'.'
name|'get_disk_size'
op|'('
string|"'/some/path'"
op|')'
op|','
number|'4592640'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_copy_image
dedent|''
name|'def'
name|'test_copy_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
name|'src_fd'
op|','
name|'src_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'src_fd'
op|','
string|"'w'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                    '
name|'fp'
op|'.'
name|'write'
op|'('
string|"'canary'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'libvirt_utils'
op|'.'
name|'copy_image'
op|'('
name|'src_path'
op|','
name|'dst_path'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'canary'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'src_path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_write_to_file
dedent|''
dedent|''
name|'def'
name|'test_write_to_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_write_to_file_with_umask
dedent|''
dedent|''
name|'def'
name|'test_write_to_file_with_umask'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|','
name|'umask'
op|'='
number|'0o277'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
name|'mode'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'dst_path'
op|')'
op|'.'
name|'st_mode'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|'&'
number|'0o277'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_chown
dedent|''
dedent|''
name|'def'
name|'test_chown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'chown'"
op|','
string|"'soren'"
op|','
string|"'/some/path'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'chown'
op|'('
string|"'/some/path'"
op|','
string|"'soren'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_do_test_extract_snapshot
dedent|''
name|'def'
name|'_do_test_extract_snapshot'
op|'('
name|'self'
op|','
name|'dest_format'
op|'='
string|"'raw'"
op|','
name|'out_format'
op|'='
string|"'raw'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-f'"
op|','
string|"'qcow2'"
op|','
string|"'-O'"
op|','
name|'out_format'
op|','
nl|'\n'
string|"'-s'"
op|','
string|"'snap1'"
op|','
string|"'/path/to/disk/image'"
op|','
string|"'/extracted/snap'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Start test'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'extract_snapshot'
op|'('
string|"'/path/to/disk/image'"
op|','
string|"'qcow2'"
op|','
nl|'\n'
string|"'snap1'"
op|','
string|"'/extracted/snap'"
op|','
name|'dest_format'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_extract_snapshot_raw
dedent|''
name|'def'
name|'test_extract_snapshot_raw'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_extract_snapshot_iso
dedent|''
name|'def'
name|'test_extract_snapshot_iso'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
name|'dest_format'
op|'='
string|"'iso'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_extract_snapshot_qcow2
dedent|''
name|'def'
name|'test_extract_snapshot_qcow2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_extract_snapshot'
op|'('
name|'dest_format'
op|'='
string|"'qcow2'"
op|','
name|'out_format'
op|'='
string|"'qcow2'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_load_file
dedent|''
name|'def'
name|'test_load_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
comment|'# We have a test for write_to_file. If that is sound, this suffices'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'libvirt_utils'
op|'.'
name|'load_file'
op|'('
name|'dst_path'
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_file_open
dedent|''
dedent|''
name|'def'
name|'test_file_open'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dst_fd'
op|','
name|'dst_path'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'close'
op|'('
name|'dst_fd'
op|')'
newline|'\n'
nl|'\n'
comment|'# We have a test for write_to_file. If that is sound, this suffices'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'write_to_file'
op|'('
name|'dst_path'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'with'
name|'libvirt_utils'
op|'.'
name|'file_open'
op|'('
name|'dst_path'
op|','
string|"'r'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'hello'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'dst_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_fs_info
dedent|''
dedent|''
name|'def'
name|'test_get_fs_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|FakeStatResult
indent|'        '
name|'class'
name|'FakeStatResult'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'f_bsize'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_frsize'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_blocks'
op|'='
number|'2000'
newline|'\n'
name|'self'
op|'.'
name|'f_bfree'
op|'='
number|'1000'
newline|'\n'
name|'self'
op|'.'
name|'f_bavail'
op|'='
number|'900'
newline|'\n'
name|'self'
op|'.'
name|'f_files'
op|'='
number|'2000'
newline|'\n'
name|'self'
op|'.'
name|'f_ffree'
op|'='
number|'1000'
newline|'\n'
name|'self'
op|'.'
name|'f_favail'
op|'='
number|'900'
newline|'\n'
name|'self'
op|'.'
name|'f_flag'
op|'='
number|'4096'
newline|'\n'
name|'self'
op|'.'
name|'f_namemax'
op|'='
number|'255'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'path'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_statvfs
name|'def'
name|'fake_statvfs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'return'
name|'FakeStatResult'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'statvfs'"
op|','
name|'fake_statvfs'
op|')'
newline|'\n'
nl|'\n'
name|'fs_info'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_fs_info'
op|'('
string|"'/some/file/path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/some/file/path'"
op|','
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8192000'
op|','
name|'fs_info'
op|'['
string|"'total'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3686400'
op|','
name|'fs_info'
op|'['
string|"'free'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4096000'
op|','
name|'fs_info'
op|'['
string|"'used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_fetch_image
dedent|''
name|'def'
name|'test_fetch_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'images'
op|','
string|"'fetch_to_raw'"
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
string|"'opaque context'"
newline|'\n'
name|'target'
op|'='
string|"'/tmp/targetfile'"
newline|'\n'
name|'image_id'
op|'='
string|"'4'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'libvirt_utils'
op|'.'
name|'fetch_image'
op|'('
name|'context'
op|','
name|'target'
op|','
name|'image_id'
op|','
nl|'\n'
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_fetch_raw_image
dedent|''
name|'def'
name|'test_fetch_raw_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
indent|'        '
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_rename
dedent|''
name|'def'
name|'fake_rename'
op|'('
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'mv'"
op|','
name|'old'
op|','
name|'new'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_unlink
dedent|''
name|'def'
name|'fake_unlink'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'rm'"
op|','
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_rm_on_error
dedent|''
name|'def'
name|'fake_rm_on_error'
op|'('
name|'path'
op|','
name|'remove'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
op|'('
string|"'rm'"
op|','
string|"'-f'"
op|','
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_qemu_img_info
dedent|''
name|'def'
name|'fake_qemu_img_info'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
DECL|class|FakeImgInfo
indent|'            '
name|'class'
name|'FakeImgInfo'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'file_format'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'file_format'
op|'=='
string|"'part'"
op|':'
newline|'\n'
DECL|variable|file_format
indent|'                '
name|'file_format'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
op|'-'
number|'2'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'file_format'
op|'=='
string|"'converted'"
op|':'
newline|'\n'
DECL|variable|file_format
indent|'                '
name|'file_format'
op|'='
string|"'raw'"
newline|'\n'
dedent|''
name|'if'
string|"'backing'"
name|'in'
name|'path'
op|':'
newline|'\n'
DECL|variable|backing_file
indent|'                '
name|'backing_file'
op|'='
string|"'backing'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|backing_file
indent|'                '
name|'backing_file'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'FakeImgInfo'
op|'.'
name|'file_format'
op|'='
name|'file_format'
newline|'\n'
name|'FakeImgInfo'
op|'.'
name|'backing_file'
op|'='
name|'backing_file'
newline|'\n'
nl|'\n'
name|'return'
name|'FakeImgInfo'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'rename'"
op|','
name|'fake_rename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|','
string|"'unlink'"
op|','
name|'fake_unlink'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'lambda'
op|'*'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'qemu_img_info'"
op|','
name|'fake_qemu_img_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fileutils'
op|','
string|"'delete_if_exists'"
op|','
name|'fake_rm_on_error'
op|')'
newline|'\n'
nl|'\n'
comment|'# Since the remove param of fileutils.remove_path_on_error()'
nl|'\n'
comment|'# is initialized at load time, we must provide a wrapper'
nl|'\n'
comment|'# that explicitly resets it to our fake delete_if_exists()'
nl|'\n'
name|'old_rm_path_on_error'
op|'='
name|'fileutils'
op|'.'
name|'remove_path_on_error'
newline|'\n'
name|'f'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'old_rm_path_on_error'
op|','
name|'remove'
op|'='
name|'fake_rm_on_error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fileutils'
op|','
string|"'remove_path_on_error'"
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
name|'context'
op|'='
string|"'opaque context'"
newline|'\n'
name|'image_id'
op|'='
string|"'4'"
newline|'\n'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'t.qcow2'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'qemu-img'"
op|','
string|"'convert'"
op|','
string|"'-O'"
op|','
string|"'raw'"
op|','
nl|'\n'
string|"'t.qcow2.part'"
op|','
string|"'t.qcow2.converted'"
op|')'
op|','
nl|'\n'
op|'('
string|"'rm'"
op|','
string|"'t.qcow2.part'"
op|')'
op|','
nl|'\n'
op|'('
string|"'mv'"
op|','
string|"'t.qcow2.converted'"
op|','
string|"'t.qcow2'"
op|')'
op|']'
newline|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'t.raw'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'mv'"
op|','
string|"'t.raw.part'"
op|','
string|"'t.raw'"
op|')'
op|']'
newline|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'target'
op|'='
string|"'backing.qcow2'"
newline|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'rm'"
op|','
string|"'-f'"
op|','
string|"'backing.qcow2.part'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|','
nl|'\n'
name|'images'
op|'.'
name|'fetch_to_raw'
op|','
nl|'\n'
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user_id'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'executes'
op|','
name|'expected_commands'
op|')'
newline|'\n'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'executes'
newline|'\n'
nl|'\n'
DECL|function|test_get_disk_backing_file
dedent|''
name|'def'
name|'test_get_disk_backing_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with_actual_path'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'with_actual_path'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|'"some: output\\n"'
nl|'\n'
string|'"backing file: /foo/bar/baz (actual path: /a/b/c)\\n"'
nl|'\n'
string|'"...: ...\\n"'
op|')'
op|','
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
string|'"some: output\\n"'
nl|'\n'
string|'"backing file: /foo/bar/baz\\n"'
nl|'\n'
string|'"...: ...\\n"'
op|')'
op|','
string|"''"
newline|'\n'
nl|'\n'
DECL|function|return_true
dedent|''
dedent|''
name|'def'
name|'return_true'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'return_true'
op|')'
newline|'\n'
nl|'\n'
name|'out'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
string|"'baz'"
op|')'
newline|'\n'
name|'with_actual_path'
op|'='
name|'True'
newline|'\n'
name|'out'
op|'='
name|'libvirt_utils'
op|'.'
name|'get_disk_backing_file'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtDriverTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtDriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LibvirtDriver."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'read_only'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance."""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'sys_meta'
op|'='
name|'flavors'
op|'.'
name|'save_flavor_info'
op|'('
nl|'\n'
op|'{'
op|'}'
op|','
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'type_id'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
string|"'m1.tiny'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
name|'type_id'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host1'"
newline|'\n'
name|'inst'
op|'['
string|"'root_gb'"
op|']'
op|'='
number|'10'
newline|'\n'
name|'inst'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'inst'
op|'['
string|"'config_drive'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'inst'
op|'['
string|"'kernel_id'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'inst'
op|'['
string|"'ramdisk_id'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'inst'
op|'['
string|"'key_data'"
op|']'
op|'='
string|"'ABCDEFG'"
newline|'\n'
name|'inst'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'sys_meta'
newline|'\n'
nl|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_exception
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'checked_shared_storage'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_get_instance_disk_info
name|'def'
name|'fake_get_instance_disk_info'
op|'('
name|'instance'
op|','
name|'xml'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'[]'"
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ip_addr
dedent|''
name|'def'
name|'fake_get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'counter'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'counter'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'False'
op|','
string|'"intentional failure"'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
dedent|''
dedent|''
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_is_storage_shared
dedent|''
name|'def'
name|'fake_is_storage_shared'
op|'('
name|'dest'
op|','
name|'inst_base'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'checked_shared_storage'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'fake_get_instance_disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_host_ip_addr'"
op|','
nl|'\n'
name|'fake_get_host_ip_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_is_storage_shared_with'"
op|','
nl|'\n'
name|'fake_is_storage_shared'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'None'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.2'"
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .migrate_disk_and_power_off.\n        """'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/test/disk'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/base/disk'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'raw'"
op|','
string|"'path'"
op|':'
string|"'/test/disk.local'"
op|','
nl|'\n'
string|"'virt_disk_size'"
op|':'
string|"'10737418240'"
op|','
nl|'\n'
string|"'backing_file'"
op|':'
string|"'/base/disk.local'"
op|','
nl|'\n'
string|"'disk_size'"
op|':'
string|"'83886080'"
op|'}'
op|']'
newline|'\n'
name|'disk_info_text'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'disk_info'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_instance_disk_info
name|'def'
name|'fake_get_instance_disk_info'
op|'('
name|'instance'
op|','
name|'xml'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'disk_info_text'
newline|'\n'
nl|'\n'
DECL|function|fake_destroy
dedent|''
name|'def'
name|'fake_destroy'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ip_addr
dedent|''
name|'def'
name|'fake_get_host_ip_addr'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'10.0.0.1'"
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_instance_disk_info'"
op|','
nl|'\n'
name|'fake_get_instance_disk_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_destroy'"
op|','
name|'fake_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_host_ip_addr'"
op|','
nl|'\n'
name|'fake_get_host_ip_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
comment|'# dest is different host case'
nl|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'None'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.2'"
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'disk_info_text'
op|')'
newline|'\n'
nl|'\n'
comment|'# dest is same host case'
nl|'\n'
name|'out'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'None'
op|','
name|'ins_ref'
op|','
string|"'10.0.0.1'"
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'out'
op|','
name|'disk_info_text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wait_for_running
dedent|''
name|'def'
name|'test_wait_for_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_info
indent|'        '
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance'
op|'['
string|"'name'"
op|']'
op|'=='
string|'"not_found"'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'instance'
op|'['
string|"'name'"
op|']'
op|'=='
string|'"running"'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance not found case'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_wait_for_running'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'not_found'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'not_found_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance is running case'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'loopingcall'
op|'.'
name|'LoopingCallDone'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_wait_for_running'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'running_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# else case'
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_wait_for_running'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'else'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'other_uuid'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_migration
dedent|''
name|'def'
name|'_test_finish_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .finish_migration.\n        """'
newline|'\n'
nl|'\n'
name|'disk_info'
op|'='
op|'['
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
string|"'path'"
op|':'
string|"'/test/disk'"
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'10'
op|','
string|"'backing_file'"
op|':'
string|"'/base/disk'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
string|"'raw'"
op|','
string|"'path'"
op|':'
string|"'/test/disk.local'"
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'10'
op|','
string|"'backing_file'"
op|':'
string|"'/base/disk.local'"
op|'}'
op|']'
newline|'\n'
name|'disk_info_text'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'disk_info'
op|')'
newline|'\n'
name|'powered_on'
op|'='
name|'power_on'
newline|'\n'
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_can_resize_image
name|'def'
name|'fake_can_resize_image'
op|'('
name|'path'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
dedent|''
name|'def'
name|'fake_extend'
op|'('
name|'path'
op|','
name|'size'
op|','
name|'use_cow'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_to_xml
dedent|''
name|'def'
name|'fake_to_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
name|'rescue'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'write_to_disk'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
dedent|''
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_create_image
dedent|''
name|'def'
name|'fake_create_image'
op|'('
name|'context'
op|','
name|'inst'
op|','
nl|'\n'
name|'disk_mapping'
op|','
name|'suffix'
op|'='
string|"''"
op|','
nl|'\n'
name|'disk_images'
op|'='
name|'None'
op|','
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
name|'inject_files'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inject_files'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
dedent|''
name|'def'
name|'fake_create_domain'
op|'('
name|'xml'
op|','
name|'instance'
op|'='
name|'None'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'powered_on'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_enable_hairpin
dedent|''
name|'def'
name|'fake_enable_hairpin'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
dedent|''
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'powered_on'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'disk'
op|','
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'libvirt_driver'
op|'.'
name|'disk'
op|','
string|"'can_resize_image'"
op|','
nl|'\n'
name|'fake_can_resize_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'to_xml'"
op|','
name|'fake_to_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_create_image'"
op|','
nl|'\n'
name|'fake_create_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_create_domain'"
op|','
nl|'\n'
name|'fake_create_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_enable_hairpin'"
op|','
nl|'\n'
name|'fake_enable_hairpin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'fw'
op|'='
name|'base_firewall'
op|'.'
name|'NoopFirewallDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'firewall_driver'"
op|','
name|'fw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'finish_migration'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'None'
op|','
name|'ins_ref'
op|','
nl|'\n'
name|'disk_info_text'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_domain_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on
dedent|''
name|'def'
name|'test_finish_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_off
dedent|''
name|'def'
name|'test_finish_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration
dedent|''
name|'def'
name|'_test_finish_revert_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test for nova.virt.libvirt.libvirt_driver.LivirtConnection\n        .finish_revert_migration.\n        """'
newline|'\n'
name|'powered_on'
op|'='
name|'power_on'
newline|'\n'
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_plug_vifs
dedent|''
name|'def'
name|'fake_plug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_create_domain
dedent|''
name|'def'
name|'fake_create_domain'
op|'('
name|'xml'
op|','
name|'instance'
op|'='
name|'None'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_create_domain_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'powered_on'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|fake_enable_hairpin
dedent|''
name|'def'
name|'fake_enable_hairpin'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_info
dedent|''
name|'def'
name|'fake_get_info'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'powered_on'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_to_xml
dedent|''
dedent|''
name|'def'
name|'fake_to_xml'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'network_info'
op|','
name|'disk_info'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
name|'rescue'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'to_xml'"
op|','
name|'fake_to_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'plug_vifs'"
op|','
name|'fake_plug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'fw'
op|'='
name|'base_firewall'
op|'.'
name|'NoopFirewallDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'firewall_driver'"
op|','
name|'fw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_create_domain'"
op|','
nl|'\n'
name|'fake_create_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_enable_hairpin'"
op|','
nl|'\n'
name|'fake_enable_hairpin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'get_info'"
op|','
nl|'\n'
name|'fake_get_info'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'utils'
op|'.'
name|'tempdir'
op|'('
op|')'
name|'as'
name|'tmpdir'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
name|'tmpdir'
op|')'
newline|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'ins_ref'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'libvirt_xml_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
nl|'\n'
name|'ins_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'libvirt.xml'"
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'libvirt_xml_path'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'finish_revert_migration'
op|'('
name|'ins_ref'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'fake_create_domain_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_on
dedent|''
dedent|''
name|'def'
name|'test_finish_revert_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_off
dedent|''
name|'def'
name|'test_finish_revert_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|','
name|'backup_made'
op|'='
name|'True'
op|','
nl|'\n'
name|'del_inst_failed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
DECL|class|FakeLoopingCall
indent|'        '
name|'class'
name|'FakeLoopingCall'
op|':'
newline|'\n'
DECL|member|start
indent|'            '
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'libvirt_utils'
op|','
string|"'get_instance_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'blockinfo'
op|','
string|"'get_disk_info'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'to_xml'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_create_domain_and_network'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'loopingcall'
op|','
string|"'FixedIntervalLoopingCall'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'FakeLoopingCall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'libvirt_utils'
op|'.'
name|'get_instance_path'
op|'('
op|'{'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/fake/foo'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/fake/foo_resize'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'backup_made'
op|')'
newline|'\n'
name|'if'
name|'backup_made'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'del_inst_failed'
op|':'
newline|'\n'
indent|'                '
name|'os_error'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'ENOENT'
op|','
string|"'No such file or directory'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/foo'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'os_error'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/foo'"
op|')'
newline|'\n'
dedent|''
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'mv'"
op|','
string|"'/fake/foo_resize'"
op|','
string|"'/fake/foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'finish_revert_migration'
op|'('
op|'{'
op|'}'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_new
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_before_backup
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_before_backup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_after_crash_delete_failed
dedent|''
name|'def'
name|'test_finish_revert_migration_after_crash_delete_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration_after_crash'
op|'('
name|'backup_made'
op|'='
name|'True'
op|','
nl|'\n'
name|'del_inst_failed'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_failed_migration
dedent|''
name|'def'
name|'test_cleanup_failed_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_cleanup_failed_migration'
op|'('
string|"'/fake/inst'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration
dedent|''
name|'def'
name|'test_confirm_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|'"_cleanup_resize"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'confirm_migration'
op|'('
string|'"migration_ref"'
op|','
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_resize_same_host
dedent|''
name|'def'
name|'test_cleanup_resize_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'host'"
op|':'
name|'CONF'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_shutil_rmtree
dedent|''
name|'def'
name|'fake_shutil_rmtree'
op|'('
name|'target'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|','
name|'fake_shutil_rmtree'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_resize_not_same_host
dedent|''
name|'def'
name|'test_cleanup_resize_not_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
string|"'not'"
op|'+'
name|'CONF'
op|'.'
name|'host'
newline|'\n'
name|'ins_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|'{'
string|"'host'"
op|':'
name|'host'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_os_path_exists
name|'def'
name|'fake_os_path_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_shutil_rmtree
dedent|''
name|'def'
name|'fake_shutil_rmtree'
op|'('
name|'target'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_undefine_domain
dedent|''
name|'def'
name|'fake_undefine_domain'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unplug_vifs
dedent|''
name|'def'
name|'fake_unplug_vifs'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_unfilter_instance
dedent|''
name|'def'
name|'fake_unfilter_instance'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|"'exists'"
op|','
name|'fake_os_path_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'shutil'
op|','
string|"'rmtree'"
op|','
name|'fake_shutil_rmtree'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_undefine_domain'"
op|','
nl|'\n'
name|'fake_undefine_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'unplug_vifs'"
op|','
nl|'\n'
name|'fake_unplug_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'firewall_driver'
op|','
nl|'\n'
string|"'unfilter_instance'"
op|','
name|'fake_unfilter_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_cleanup_resize'
op|'('
name|'ins_ref'
op|','
nl|'\n'
name|'_fake_network_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_disk_info_exception
dedent|''
name|'def'
name|'test_get_instance_disk_info_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_name'
op|'='
string|'"fake-instance-name"'
newline|'\n'
nl|'\n'
DECL|class|FakeExceptionDomain
name|'class'
name|'FakeExceptionDomain'
op|'('
name|'FakeVirtDomain'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'FakeExceptionDomain'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|XMLDesc
dedent|''
name|'def'
name|'XMLDesc'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|'"Libvirt error"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_lookup_by_name
dedent|''
dedent|''
name|'def'
name|'fake_lookup_by_name'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FakeExceptionDomain'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'libvirtconnection'
op|','
string|"'_lookup_by_name'"
op|','
nl|'\n'
name|'fake_lookup_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'get_instance_disk_info'
op|','
nl|'\n'
name|'instance_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cpuset_ids
dedent|''
name|'def'
name|'test_get_cpuset_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# correct syntax'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1,2"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'", ,   1 ,  ,,  2,    ,"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-1"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'" 1 - 1, 1 - 2 , 1 -3"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1,^2"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-2, ^1"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'2'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3,5,^2"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'3'
op|','
number|'5'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'" 1 -    3        ,   ^2,        5"'
op|')'
newline|'\n'
name|'cpuset_ids'
op|'='
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'3'
op|','
number|'5'
op|']'
op|','
name|'cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
comment|'# invalid syntax'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'" -1-3,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3-,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"-3,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3,5,^2^"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3,5,^2-"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"--13,^^5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"a-3,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-a,5,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3,b,^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"1-3,5,^c"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"3 - 1, 5 , ^ 2 "'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'" 1,1, ^1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'" 1,^1,^1,2, ^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vcpu_pin_set'
op|'='
string|'"^2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'libvirtconnection'
op|'.'
name|'_get_cpuset_ids'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtVolumeUsageTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtVolumeUsageTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test for LibvirtDriver.get_all_volume_usage."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeUsageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# creating instance'
nl|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|'='
string|"'875a8070-d0b9-4949-8b31-104d125c9a64'"
newline|'\n'
name|'self'
op|'.'
name|'ins_ref'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify bootable volume device path also'
nl|'\n'
name|'self'
op|'.'
name|'bdms'
op|'='
op|'['
op|'{'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/vde'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_volume_usage
dedent|''
name|'def'
name|'test_get_all_volume_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_block_stats
indent|'        '
name|'def'
name|'fake_block_stats'
op|'('
name|'instance_name'
op|','
name|'disk'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'169L'
op|','
number|'688640L'
op|','
number|'0L'
op|','
number|'0L'
op|','
op|'-'
number|'1L'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'block_stats'"
op|','
name|'fake_block_stats'
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_volume_usage'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
op|'['
name|'dict'
op|'('
name|'instance'
op|'='
name|'self'
op|'.'
name|'ins_ref'
op|','
name|'instance_bdms'
op|'='
name|'self'
op|'.'
name|'bdms'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'expected_usage'
op|'='
op|'['
op|'{'
string|"'volume'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'self'
op|'.'
name|'ins_ref'
op|','
nl|'\n'
string|"'rd_bytes'"
op|':'
number|'688640L'
op|','
string|"'wr_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'flush_operations'"
op|':'
op|'-'
number|'1L'
op|','
string|"'rd_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'wr_bytes'"
op|':'
number|'0L'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'self'
op|'.'
name|'ins_ref'
op|','
nl|'\n'
string|"'rd_bytes'"
op|':'
number|'688640L'
op|','
string|"'wr_req'"
op|':'
number|'0L'
op|','
nl|'\n'
string|"'flush_operations'"
op|':'
op|'-'
number|'1L'
op|','
string|"'rd_req'"
op|':'
number|'169L'
op|','
nl|'\n'
string|"'wr_bytes'"
op|':'
number|'0L'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|','
name|'expected_usage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_volume_usage_device_not_found
dedent|''
name|'def'
name|'test_get_all_volume_usage_device_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_lookup
indent|'        '
name|'def'
name|'fake_lookup'
op|'('
name|'instance_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'invalid path'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|','
name|'fake_lookup'
op|')'
newline|'\n'
name|'vol_usage'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_volume_usage'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
op|'['
name|'dict'
op|'('
name|'instance'
op|'='
name|'self'
op|'.'
name|'ins_ref'
op|','
name|'instance_bdms'
op|'='
name|'self'
op|'.'
name|'bdms'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol_usage'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtNonblockingTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtNonblockingTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test libvirt_nonblocking option."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtNonblockingTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_nonblocking'
op|'='
name|'True'
op|','
name|'libvirt_uri'
op|'='
string|'"test:///default"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_to_primitive
dedent|''
name|'def'
name|'test_connection_to_primitive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test bug 962840.'
nl|'\n'
indent|'        '
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
name|'as'
name|'libvirt_driver'
newline|'\n'
name|'connection'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
string|"''"
op|')'
newline|'\n'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'connection'
op|'.'
name|'_conn'
op|','
name|'convert_instances'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtVolumeSnapshotTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtVolumeSnapshotTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests for libvirtDriver.volume_snapshot_create/delete."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeSnapshotTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'libvirt_driver'
op|'.'
name|'LibvirtDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'c'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'instance-%s'"
op|')'
newline|'\n'
nl|'\n'
comment|'# creating instance'
nl|'\n'
name|'self'
op|'.'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'inst'
op|'['
string|"'id'"
op|']'
op|'='
string|"'1'"
newline|'\n'
nl|'\n'
comment|'# create domain info'
nl|'\n'
name|'self'
op|'.'
name|'dom_xml'
op|'='
string|'"""\n              <domain type=\'kvm\'>\n                <devices>\n                  <disk type=\'file\'>\n                     <source file=\'disk1_file\'/>\n                     <target dev=\'vda\' bus=\'virtio\'/>\n                     <serial>0e38683e-f0af-418f-a3f1-6b67ea0f919d</serial>\n                  </disk>\n                  <disk type=\'block\'>\n                    <source dev=\'/path/to/dev/1\'/>\n                    <target dev=\'vdb\' bus=\'virtio\' serial=\'1234\'/>\n                  </disk>\n                </devices>\n              </domain>"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'1234-5678'"
op|','
nl|'\n'
string|"'new_file'"
op|':'
string|"'new-file'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|'='
string|"'0e38683e-f0af-418f-a3f1-6b67ea0f919d'"
newline|'\n'
name|'self'
op|'.'
name|'snapshot_id'
op|'='
string|"'9c3ca9f4-9f4e-4dba-bedd-5c5e4b52b162'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'snap.img'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_2'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'qcow2'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'snap.img'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
string|"'other-snap.img'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'delete_info_invalid_type'
op|'='
op|'{'
string|"'type'"
op|':'
string|"'made_up_type'"
op|','
nl|'\n'
string|"'file_to_merge'"
op|':'
string|"'some_file'"
op|','
nl|'\n'
string|"'merge_target_file'"
op|':'
nl|'\n'
string|"'some_other_file'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtVolumeSnapshotTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create
dedent|''
name|'def'
name|'test_volume_snapshot_create'
op|'('
name|'self'
op|','
name|'quiesce'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'instance_name_template'
op|'='
string|"'instance-%s'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_id'
op|'='
string|"'snap-asdf-qwert'"
newline|'\n'
name|'new_file'
op|'='
string|"'new-file'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'snapshotCreateXML'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'snap_xml_src'
op|'='
op|'('
nl|'\n'
string|"'<domainsnapshot>\\n'"
nl|'\n'
string|"'  <disks>\\n'"
nl|'\n'
string|'\'    <disk name="disk1_file" snapshot="external" type="file">\\n\''
nl|'\n'
string|'\'      <source file="new-file"/>\\n\''
nl|'\n'
string|"'    </disk>\\n'"
nl|'\n'
string|'\'    <disk name="/path/to/dev/1" snapshot="no"/>\\n\''
nl|'\n'
string|"'  </disks>\\n'"
nl|'\n'
string|"'</domainsnapshot>\\n'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Older versions of libvirt may be missing these.'
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|'='
number|'32'
newline|'\n'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
op|'='
number|'64'
newline|'\n'
nl|'\n'
name|'snap_flags'
op|'='
op|'('
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY'
op|'|'
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA'
op|'|'
nl|'\n'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT'
op|')'
newline|'\n'
nl|'\n'
name|'snap_flags_q'
op|'='
name|'snap_flags'
op|'|'
name|'libvirt'
op|'.'
name|'VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE'
newline|'\n'
nl|'\n'
name|'if'
name|'quiesce'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags_q'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'libvirt'
op|'.'
name|'libvirtError'
op|'('
string|"'quiescing failed, no qemu-ga'"
op|')'
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'snapshotCreateXML'
op|'('
name|'snap_xml_src'
op|','
name|'snap_flags'
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
name|'snapshot_id'
op|','
nl|'\n'
name|'new_file'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_noquiesce
dedent|''
name|'def'
name|'test_volume_snapshot_create_noquiesce'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'test_volume_snapshot_create'
op|'('
name|'quiesce'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_outer_success
dedent|''
name|'def'
name|'test_volume_snapshot_create_outer_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_snapshot_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_lookup_by_name'
op|'('
string|"'instance-1'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'new_file'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
string|"'creating'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_create_outer_failure
dedent|''
name|'def'
name|'test_volume_snapshot_create_outer_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_snapshot_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_lookup_by_name'
op|'('
string|"'instance-1'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'domain'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'new_file'"
op|']'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'create_info'
op|'['
string|"'snapshot_id'"
op|']'
op|','
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'volume_snapshot_create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'create_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_1
dedent|''
name|'def'
name|'test_volume_snapshot_delete_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting newest snapshot -- blockRebase."""'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_lookup_by_name'
op|'('
string|"'instance-%s'"
op|'%'
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockRebase'
op|'('
string|"'vda'"
op|','
string|"'snap.img'"
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_2
dedent|''
name|'def'
name|'test_volume_snapshot_delete_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deleting older snapshot -- blockCommit."""'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'XMLDesc'"
op|')'
newline|'\n'
name|'domain'
op|'.'
name|'XMLDesc'
op|'('
number|'0'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockRebase'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'domain'
op|','
string|"'blockCommit'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_lookup_by_name'
op|'('
string|"'instance-%s'"
op|'%'
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'.'
name|'blockCommit'
op|'('
string|"'vda'"
op|','
string|"'other-snap.img'"
op|','
string|"'snap.img'"
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
name|'self'
op|'.'
name|'delete_info_2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_outer_success
dedent|''
name|'def'
name|'test_volume_snapshot_delete_outer_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'snapshot-1234'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_snapshot_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'delete_info'
op|'='
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'snapshot_id'
op|','
string|"'deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_outer_failure
dedent|''
name|'def'
name|'test_volume_snapshot_delete_outer_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
string|"'1234-9876'"
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_snapshot_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_snapshot_delete'
op|'('
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'delete_info'
op|'='
name|'self'
op|'.'
name|'delete_info_1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'oops'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'snapshot_id'
op|','
string|"'error_deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_snapshot_delete_invalid_type
dedent|''
name|'def'
name|'test_volume_snapshot_delete_invalid_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'domain'
op|'='
name|'FakeVirtDomain'
op|'('
name|'fake_xml'
op|'='
name|'self'
op|'.'
name|'dom_xml'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_lookup_by_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'_volume_api'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'has_min_version'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'has_min_version'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volume_api'
op|'.'
name|'update_snapshot_status'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
name|'self'
op|'.'
name|'snapshot_id'
op|','
string|"'error_deleting'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'volume_snapshot_delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'c'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume_uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'snapshot_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'delete_info_invalid_type'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
