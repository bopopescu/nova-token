begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Michael Still'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
op|'.'
name|'mount'
name|'import'
name|'nbd'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'max_nbd_devices'"
op|','
string|"'nova.virt.disk.mount.nbd'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NbdTestCase
name|'class'
name|'NbdTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NbdTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_nbd_devices'
op|'='
number|'2'
op|')'
newline|'\n'
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES_INITIALIZED'
op|'='
name|'False'
newline|'\n'
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_nbd_initialize
dedent|''
name|'def'
name|'test_nbd_initialize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'n'
op|'='
name|'nbd'
op|'.'
name|'NbdMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'n'
op|'.'
name|'_DEVICES_INITIALIZED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/dev/nbd0'"
op|','
string|"'/dev/nbd1'"
op|']'
op|','
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nbd_not_loaded
dedent|''
name|'def'
name|'test_nbd_not_loaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_exists'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'n'
op|'='
name|'nbd'
op|'.'
name|'NbdMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
comment|'# Fake out os.path.exists'
nl|'\n'
DECL|function|fake_exists
name|'def'
name|'fake_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/sys/block/nbd'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'orig_exists'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'os.path.exists'"
op|','
name|'fake_exists'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# This should fail, as we don\'t have the module "loaded"'
nl|'\n'
comment|'# TODO(mikal): work out how to force english as the gettext language'
nl|'\n'
comment|'# so that the error check always passes'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'None'
op|','
name|'n'
op|'.'
name|'_allocate_nbd'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'nbd unavailable: module not loaded'"
op|','
name|'n'
op|'.'
name|'error'
op|')'
newline|'\n'
nl|'\n'
comment|'# And no device should be consumed'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/dev/nbd0'"
op|','
string|"'/dev/nbd1'"
op|']'
op|','
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nbd_allocation
dedent|''
name|'def'
name|'test_nbd_allocation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_exists'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'n'
op|'='
name|'nbd'
op|'.'
name|'NbdMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
comment|'# Fake out os.path.exists'
nl|'\n'
DECL|function|fake_exists
name|'def'
name|'fake_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/sys/block/nbd'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'path'
op|'.'
name|'endswith'
op|'('
string|"'pid'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'orig_exists'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'os.path.exists'"
op|','
name|'fake_exists'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Allocate a nbd device'
nl|'\n'
name|'d'
op|'='
name|'n'
op|'.'
name|'_allocate_nbd'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/dev/nbd1'"
op|','
name|'d'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Allocate another'
nl|'\n'
name|'d'
op|'='
name|'n'
op|'.'
name|'_allocate_nbd'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/dev/nbd0'"
op|','
name|'d'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|']'
op|','
name|'nbd'
op|'.'
name|'NbdMount'
op|'.'
name|'_DEVICES'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
