begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Michael Still'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'disk'
op|'.'
name|'mount'
name|'import'
name|'loop'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_noop
name|'def'
name|'_fake_noop'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_trycmd_losetup_works
dedent|''
name|'def'
name|'_fake_trycmd_losetup_works'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"'/dev/loop0'"
op|','
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_trycmd_losetup_fails
dedent|''
name|'def'
name|'_fake_trycmd_losetup_fails'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwards'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"''"
op|','
string|"'doh'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LoopTestCase
dedent|''
name|'class'
name|'LoopTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_get_dev
indent|'    '
name|'def'
name|'test_get_dev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'l'
op|'='
name|'loop'
op|'.'
name|'LoopMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.utils.trycmd'"
op|','
nl|'\n'
name|'_fake_trycmd_losetup_works'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'_fake_noop'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# No error logged, device consumed'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'l'
op|'.'
name|'get_dev'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'l'
op|'.'
name|'linked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'l'
op|'.'
name|'error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/dev/loop0'"
op|','
name|'l'
op|'.'
name|'device'
op|')'
newline|'\n'
nl|'\n'
comment|'# Free'
nl|'\n'
name|'l'
op|'.'
name|'unget_dev'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'l'
op|'.'
name|'linked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'l'
op|'.'
name|'error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'l'
op|'.'
name|'device'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inner_get_dev_fails
dedent|''
name|'def'
name|'test_inner_get_dev_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'l'
op|'='
name|'loop'
op|'.'
name|'LoopMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.utils.trycmd'"
op|','
nl|'\n'
name|'_fake_trycmd_losetup_fails'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# No error logged, device consumed'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'l'
op|'.'
name|'_inner_get_dev'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'l'
op|'.'
name|'linked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|"''"
op|','
name|'l'
op|'.'
name|'error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'l'
op|'.'
name|'device'
op|')'
newline|'\n'
nl|'\n'
comment|'# Free'
nl|'\n'
name|'l'
op|'.'
name|'unget_dev'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'l'
op|'.'
name|'linked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'l'
op|'.'
name|'device'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dev_timeout
dedent|''
name|'def'
name|'test_get_dev_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'l'
op|'='
name|'loop'
op|'.'
name|'LoopMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'time.sleep'"
op|','
name|'_fake_noop'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.utils.trycmd'"
op|','
nl|'\n'
name|'_fake_trycmd_losetup_fails'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
op|'('
string|"'nova.virt.disk.mount.api.'"
nl|'\n'
string|"'MAX_DEVICE_WAIT'"
op|')'
op|','
op|'-'
number|'10'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Always fail to get a device'
nl|'\n'
DECL|function|fake_get_dev_fails
name|'def'
name|'fake_get_dev_fails'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'l'
op|'.'
name|'_inner_get_dev'
op|'='
name|'fake_get_dev_fails'
newline|'\n'
nl|'\n'
comment|'# Fail to get a device'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'l'
op|'.'
name|'get_dev'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unget_dev
dedent|''
name|'def'
name|'test_unget_dev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tempdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'l'
op|'='
name|'loop'
op|'.'
name|'LoopMount'
op|'('
name|'None'
op|','
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
string|"'nova.utils.execute'"
op|','
nl|'\n'
name|'_fake_noop'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# This just checks that a free of something we don't have doesn't"
nl|'\n'
comment|'# throw an exception'
nl|'\n'
name|'l'
op|'.'
name|'unget_dev'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
