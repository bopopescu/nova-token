begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# Copyright 2013 Canonical Corp.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'collections'
name|'import'
name|'namedtuple'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vm_util'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|fake_session
name|'class'
name|'fake_session'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'ret'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ret'
op|'='
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_call_method
dedent|''
name|'def'
name|'_call_method'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'ret'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareVMUtilTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareVMUtilTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareVMUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareVMUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|','
string|'"fake-ds"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'2'
op|']'
op|','
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'3'
op|']'
op|','
number|'1024'
op|'*'
number|'1024'
op|'*'
number|'500'
op|'*'
number|'1024'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name_with_regex
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name_with_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that matches with a datastore'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"^openstack.*\\d$"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
name|'datastore_valid_regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"openstack-ds0"'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name_with_list
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name_with_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex containing whitelist of datastores'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"(openstack-ds0|openstack-ds2)"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds1"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds2"'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
name|'datastore_valid_regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
string|'"openstack-ds1"'
op|','
name|'result'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name_with_regex_error
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name_with_regex_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that has no match'
nl|'\n'
comment|'# Checks if code raises DatastoreNotFound with a specific message'
nl|'\n'
indent|'        '
name|'datastore_invalid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"unknown-ds"'
op|')'
newline|'\n'
name|'exp_message'
op|'='
op|'('
name|'_'
op|'('
string|'"Datastore regex %s did not match any datastores"'
op|')'
nl|'\n'
op|'%'
name|'datastore_invalid_regex'
op|'.'
name|'pattern'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
comment|'# assertRaisesRegExp would have been a good choice instead of'
nl|'\n'
comment|"# try/catch block, but it's available only from Py 2.7."
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'datastore_invalid_regex'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'DatastoreNotFound'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exp_message'
op|','
name|'e'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"DatastoreNotFound Exception was not raised with "'
nl|'\n'
string|'"message: %s"'
op|'%'
name|'exp_message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name_without_datastore
dedent|''
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name_without_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|','
nl|'\n'
name|'fake_session'
op|'('
op|')'
op|','
name|'host'
op|'='
string|'"fake-host"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|','
nl|'\n'
name|'fake_session'
op|'('
op|')'
op|','
name|'cluster'
op|'='
string|'"fake-cluster"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_ref_from_id
dedent|''
name|'def'
name|'test_get_host_ref_from_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_host_name'
op|'='
string|'"ha-host"'
newline|'\n'
name|'fake_host_sys'
op|'='
name|'fake'
op|'.'
name|'HostSystem'
op|'('
name|'fake_host_name'
op|')'
newline|'\n'
name|'fake_host_id'
op|'='
name|'fake_host_sys'
op|'.'
name|'obj'
op|'.'
name|'value'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake_host_sys'
op|')'
newline|'\n'
name|'ref'
op|'='
name|'vm_util'
op|'.'
name|'get_host_ref_from_id'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
name|'fake_host_id'
op|','
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'ref'
op|','
name|'fake'
op|'.'
name|'HostSystem'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_host_id'
op|','
name|'ref'
op|'.'
name|'obj'
op|'.'
name|'value'
op|')'
newline|'\n'
nl|'\n'
name|'host_name'
op|'='
name|'vm_util'
op|'.'
name|'get_host_name_from_host_ref'
op|'('
name|'ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_host_name'
op|','
name|'host_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_name_for_vm
dedent|''
name|'def'
name|'test_get_host_name_for_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_host'
op|'='
name|'fake'
op|'.'
name|'HostSystem'
op|'('
op|')'
newline|'\n'
name|'fake_host_id'
op|'='
name|'fake_host'
op|'.'
name|'obj'
op|'.'
name|'value'
newline|'\n'
name|'fake_vm'
op|'='
name|'fake'
op|'.'
name|'VirtualMachine'
op|'('
name|'name'
op|'='
string|"'vm-123'"
op|','
nl|'\n'
name|'runtime_host'
op|'='
name|'fake_host'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake_vm'
op|')'
newline|'\n'
nl|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref_from_name'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
string|"'vm-123'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|')'
newline|'\n'
nl|'\n'
name|'host_id'
op|'='
name|'vm_util'
op|'.'
name|'get_host_id_from_vm_ref'
op|'('
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|','
name|'vm_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_host_id'
op|','
name|'host_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_property_from_property_set
dedent|''
name|'def'
name|'test_property_from_property_set'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'ObjectContent'
op|'='
name|'namedtuple'
op|'('
string|"'ObjectContent'"
op|','
op|'['
string|"'propSet'"
op|']'
op|')'
newline|'\n'
name|'DynamicProperty'
op|'='
name|'namedtuple'
op|'('
string|"'Property'"
op|','
op|'['
string|"'name'"
op|','
string|"'val'"
op|']'
op|')'
newline|'\n'
name|'MoRef'
op|'='
name|'namedtuple'
op|'('
string|"'Val'"
op|','
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'good_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'results_good'
op|'='
op|'['
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'name'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'vm-123'"
op|')'
op|')'
op|']'
op|')'
op|','
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'foo'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'bar1'"
op|')'
op|')'
op|','
nl|'\n'
name|'DynamicProperty'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'runtime.host'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'host-123'"
op|')'
op|')'
op|','
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'foo'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'bar2'"
op|')'
op|')'
op|','
nl|'\n'
op|']'
op|')'
op|','
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'something'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'thing'"
op|')'
op|')'
op|']'
op|')'
op|','
op|']'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results_good'
op|':'
newline|'\n'
indent|'            '
name|'good_objects'
op|'.'
name|'add_object'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'bad_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'results_bad'
op|'='
op|'['
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'name'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'vm-123'"
op|')'
op|')'
op|']'
op|')'
op|','
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'foo'"
op|','
name|'val'
op|'='
string|"'bar1'"
op|')'
op|','
nl|'\n'
name|'DynamicProperty'
op|'('
name|'name'
op|'='
string|"'foo'"
op|','
name|'val'
op|'='
string|"'bar2'"
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'ObjectContent'
op|'('
name|'propSet'
op|'='
op|'['
nl|'\n'
name|'DynamicProperty'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'something'"
op|','
name|'val'
op|'='
name|'MoRef'
op|'('
name|'value'
op|'='
string|"'thing'"
op|')'
op|')'
op|']'
op|')'
op|','
op|']'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results_bad'
op|':'
newline|'\n'
indent|'            '
name|'bad_objects'
op|'.'
name|'add_object'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'prop'
op|'='
name|'vm_util'
op|'.'
name|'property_from_property_set'
op|'('
nl|'\n'
string|"'runtime.host'"
op|','
name|'good_objects'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'prop'
op|')'
newline|'\n'
name|'value'
op|'='
name|'prop'
op|'.'
name|'val'
op|'.'
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host-123'"
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
name|'prop2'
op|'='
name|'vm_util'
op|'.'
name|'property_from_property_set'
op|'('
nl|'\n'
string|"'runtime.host'"
op|','
name|'bad_objects'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'prop2'
op|')'
newline|'\n'
nl|'\n'
name|'prop3'
op|'='
name|'vm_util'
op|'.'
name|'property_from_property_set'
op|'('
string|"'foo'"
op|','
name|'good_objects'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'prop3'
op|')'
newline|'\n'
name|'val3'
op|'='
name|'prop3'
op|'.'
name|'val'
op|'.'
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar1'"
op|','
name|'val3'
op|')'
newline|'\n'
nl|'\n'
name|'prop4'
op|'='
name|'vm_util'
op|'.'
name|'property_from_property_set'
op|'('
string|"'foo'"
op|','
name|'bad_objects'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'prop4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar1'"
op|','
name|'prop4'
op|'.'
name|'val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_ref_and_name_inaccessible_ds
dedent|''
name|'def'
name|'test_get_datastore_ref_and_name_inaccessible_ds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data_store'
op|'='
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
newline|'\n'
name|'data_store'
op|'.'
name|'set'
op|'('
string|'"summary.accessible"'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'data_store'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'vm_util'
op|'.'
name|'get_datastore_ref_and_name'
op|','
nl|'\n'
name|'fake_session'
op|'('
name|'fake_objects'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
