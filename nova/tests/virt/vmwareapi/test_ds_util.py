begin_unit
comment|'# Copyright (c) 2014 VMware, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'ds_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'error_util'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DsUtilTestCase
name|'class'
name|'DsUtilTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DsUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'session'
op|'='
name|'fake'
op|'.'
name|'FakeSession'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'api_retry_count'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DsUtilTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_datastore_path
dedent|''
name|'def'
name|'test_build_datastore_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'ds_util'
op|'.'
name|'build_datastore_path'
op|'('
string|"'ds'"
op|','
string|"'folder'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] folder'"
op|','
name|'path'
op|')'
newline|'\n'
name|'path'
op|'='
name|'ds_util'
op|'.'
name|'build_datastore_path'
op|'('
string|"'ds'"
op|','
string|"'folder/file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] folder/file'"
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_delete
dedent|''
name|'def'
name|'test_file_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DeleteDatastoreFile_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'name'
op|')'
newline|'\n'
name|'datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'datacenter'
op|')'
newline|'\n'
name|'return'
string|"'fake_delete_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_delete'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
name|'ds_path'
op|','
string|"'fake-dc-ref'"
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_delete_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_move
dedent|''
dedent|''
name|'def'
name|'test_file_move'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'MoveDatastoreFile_Task'"
op|','
name|'method'
op|')'
newline|'\n'
name|'sourceName'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] tmp/src'"
op|','
name|'sourceName'
op|')'
newline|'\n'
name|'destinationName'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] base/dst'"
op|','
name|'destinationName'
op|')'
newline|'\n'
name|'sourceDatacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'sourceDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'sourceDatacenter'
op|')'
newline|'\n'
name|'destinationDatacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'destinationDatacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'destinationDatacenter'
op|')'
newline|'\n'
name|'return'
string|"'fake_move_task'"
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'src_ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'tmp/src'"
op|')'
newline|'\n'
name|'dst_ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'base/dst'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_move'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-dc-ref'"
op|','
name|'src_ds_path'
op|','
name|'dst_ds_path'
op|')'
newline|'\n'
name|'_wait_for_task'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'fake_move_task'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mkdir
dedent|''
dedent|''
name|'def'
name|'test_mkdir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'MakeDirectory'"
op|','
name|'method'
op|')'
newline|'\n'
name|'name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'name'
op|')'
newline|'\n'
name|'datacenter'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datacenter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-dc-ref'"
op|','
name|'datacenter'
op|')'
newline|'\n'
name|'createParentDirectories'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'createParentDirectories'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'createParentDirectories'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'session'
op|','
name|'ds_path'
op|','
string|"'fake-dc-ref'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_exists
dedent|''
dedent|''
name|'def'
name|'test_file_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SearchDatastore_Task'"
op|':'
newline|'\n'
indent|'                '
name|'ds_browser'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-browser'"
op|','
name|'ds_browser'
op|')'
newline|'\n'
name|'datastorePath'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'datastorePath'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds] fake/path'"
op|','
name|'datastorePath'
op|')'
newline|'\n'
name|'return'
string|"'fake_exists_task'"
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
dedent|''
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
string|"'fake_exists_task'"
op|':'
newline|'\n'
indent|'                '
name|'result_file'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'result_file'
op|'.'
name|'path'
op|'='
string|"'fake-file'"
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'result'
op|'.'
name|'file'
op|'='
op|'['
name|'result_file'
op|']'
newline|'\n'
name|'result'
op|'.'
name|'path'
op|'='
string|"'[ds] fake/path'"
newline|'\n'
nl|'\n'
name|'task_info'
op|'='
name|'fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'task_info'
op|'.'
name|'result'
op|'='
name|'result'
newline|'\n'
nl|'\n'
name|'return'
name|'task_info'
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'file_exists'
op|'='
name|'ds_util'
op|'.'
name|'file_exists'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-browser'"
op|','
name|'ds_path'
op|','
string|"'fake-file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'file_exists'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_file_exists_fails
dedent|''
dedent|''
name|'def'
name|'test_file_exists_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'SearchDatastore_Task'"
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'fake_exists_task'"
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
dedent|''
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
string|"'fake_exists_task'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'error_util'
op|'.'
name|'FileNotFoundException'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Should never get here'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ds_path'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds'"
op|','
string|"'fake/path'"
op|')'
newline|'\n'
name|'file_exists'
op|'='
name|'ds_util'
op|'.'
name|'file_exists'
op|'('
name|'self'
op|'.'
name|'session'
op|','
nl|'\n'
string|"'fake-browser'"
op|','
name|'ds_path'
op|','
string|"'fake-file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'file_exists'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore
dedent|''
dedent|''
name|'def'
name|'test_get_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake_objects'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"fake-ds"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'units'
op|'.'
name|'Ti'
op|','
name|'result'
op|'.'
name|'capacity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'500'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
name|'result'
op|'.'
name|'freespace'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_regex
dedent|''
name|'def'
name|'test_get_datastore_with_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that matches with a datastore'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"^openstack.*\\d$"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'datastore_valid_regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"openstack-ds0"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_token
dedent|''
name|'def'
name|'test_get_datastore_with_token'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"^ds.*\\d$"'
op|')'
newline|'\n'
name|'fake0'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake0'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds0"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'5'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'fake0'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"foo"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'9'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'fake0'
op|','
string|"'token'"
op|','
string|"'token-0'"
op|')'
newline|'\n'
name|'fake1'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake1'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds2"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'8'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'fake1'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"ds3"'
op|','
number|'10'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake0'
op|','
name|'fake1'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
name|'regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"ds2"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_list
dedent|''
name|'def'
name|'test_get_datastore_with_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex containing whitelist of datastores'
nl|'\n'
indent|'        '
name|'datastore_valid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"(openstack-ds0|openstack-ds2)"'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds1"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"openstack-ds2"'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'datastore_valid_regex'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
string|'"openstack-ds1"'
op|','
name|'result'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_with_regex_error
dedent|''
name|'def'
name|'test_get_datastore_with_regex_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test with a regex that has no match'
nl|'\n'
comment|'# Checks if code raises DatastoreNotFound with a specific message'
nl|'\n'
indent|'        '
name|'datastore_invalid_regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"unknown-ds"'
op|')'
newline|'\n'
name|'exp_message'
op|'='
op|'('
name|'_'
op|'('
string|'"Datastore regex %s did not match any datastores"'
op|')'
nl|'\n'
op|'%'
name|'datastore_invalid_regex'
op|'.'
name|'pattern'
op|')'
newline|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds0"'
op|')'
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'fake'
op|'.'
name|'Datastore'
op|'('
string|'"fake-ds1"'
op|')'
op|')'
newline|'\n'
comment|'# assertRaisesRegExp would have been a good choice instead of'
nl|'\n'
comment|"# try/catch block, but it's available only from Py 2.7."
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ds_util'
op|'.'
name|'get_datastore'
op|'('
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake_objects'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'datastore_invalid_regex'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'DatastoreNotFound'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_message'
op|','
name|'e'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"DatastoreNotFound Exception was not raised with "'
nl|'\n'
string|'"message: %s"'
op|'%'
name|'exp_message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_without_datastore
dedent|''
dedent|''
name|'def'
name|'test_get_datastore_without_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'None'
op|')'
op|','
name|'host'
op|'='
string|'"fake-host"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'None'
op|')'
op|','
name|'cluster'
op|'='
string|'"fake-cluster"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_no_host_in_cluster
dedent|''
name|'def'
name|'test_get_datastore_no_host_in_cluster'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
string|'""'
op|')'
op|','
string|"'fake_cluster'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_datastore_inaccessible_ds
dedent|''
name|'def'
name|'test_get_datastore_inaccessible_ds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data_store'
op|'='
name|'fake'
op|'.'
name|'Datastore'
op|'('
op|')'
newline|'\n'
name|'data_store'
op|'.'
name|'set'
op|'('
string|'"summary.accessible"'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'fake_objects'
op|'='
name|'fake'
op|'.'
name|'FakeRetrieveResult'
op|'('
op|')'
newline|'\n'
name|'fake_objects'
op|'.'
name|'add_object'
op|'('
name|'data_store'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DatastoreNotFound'
op|','
nl|'\n'
name|'ds_util'
op|'.'
name|'get_datastore'
op|','
nl|'\n'
name|'fake'
op|'.'
name|'FakeObjectRetrievalSession'
op|'('
name|'fake_objects'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DatastoreTestCase
dedent|''
dedent|''
name|'class'
name|'DatastoreTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_ds
indent|'    '
name|'def'
name|'test_ds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ds'
op|'='
name|'ds_util'
op|'.'
name|'Datastore'
op|'('
nl|'\n'
string|'"fake_ref"'
op|','
string|'"ds_name"'
op|','
number|'2'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ds_name'"
op|','
name|'ds'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_ref'"
op|','
name|'ds'
op|'.'
name|'ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
name|'ds'
op|'.'
name|'capacity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
name|'ds'
op|'.'
name|'freespace'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_invalid_space
dedent|''
name|'def'
name|'test_ds_invalid_space'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'Datastore'
op|','
nl|'\n'
string|'"fake_ref"'
op|','
string|'"ds_name"'
op|','
number|'1'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
number|'2'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'Datastore'
op|','
nl|'\n'
string|'"fake_ref"'
op|','
string|'"ds_name"'
op|','
name|'None'
op|','
number|'2'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_no_capacity_no_freespace
dedent|''
name|'def'
name|'test_ds_no_capacity_no_freespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ds'
op|'='
name|'ds_util'
op|'.'
name|'Datastore'
op|'('
string|'"fake_ref"'
op|','
string|'"ds_name"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ds'
op|'.'
name|'capacity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'ds'
op|'.'
name|'freespace'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_invalid
dedent|''
name|'def'
name|'test_ds_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'Datastore'
op|','
name|'None'
op|','
string|'"ds_name"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'Datastore'
op|','
string|'"fake_ref"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_path
dedent|''
name|'def'
name|'test_build_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ds'
op|'='
name|'ds_util'
op|'.'
name|'Datastore'
op|'('
string|'"fake_ref"'
op|','
string|'"ds_name"'
op|')'
newline|'\n'
name|'ds_path'
op|'='
name|'ds'
op|'.'
name|'build_path'
op|'('
string|'"some_dir"'
op|','
string|'"foo.vmdk"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds_name] some_dir/foo.vmdk'"
op|','
name|'str'
op|'('
name|'ds_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DatastorePathTestCase
dedent|''
dedent|''
name|'class'
name|'DatastorePathTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path
indent|'    '
name|'def'
name|'test_ds_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'dsname'"
op|','
string|"'a/b/c'"
op|','
string|"'file.iso'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[dsname] a/b/c/file.iso'"
op|','
name|'str'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'a/b/c/file.iso'"
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'a/b/c'"
op|','
name|'p'
op|'.'
name|'parent'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[dsname] a/b/c'"
op|','
name|'str'
op|'('
name|'p'
op|'.'
name|'parent'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'dsname'"
op|','
name|'p'
op|'.'
name|'datastore'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'file.iso'"
op|','
name|'p'
op|'.'
name|'basename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'a/b/c'"
op|','
name|'p'
op|'.'
name|'dirname'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_no_ds_name
dedent|''
name|'def'
name|'test_ds_path_no_ds_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bad_args'
op|'='
op|'['
nl|'\n'
op|'('
string|"''"
op|','
op|'['
string|"'a/b/c'"
op|','
string|"'file.iso'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
name|'None'
op|','
op|'['
string|"'a/b/c'"
op|','
string|"'file.iso'"
op|']'
op|')'
op|']'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'bad_args'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'DatastorePath'
op|','
nl|'\n'
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_invalid_path_components
dedent|''
dedent|''
name|'def'
name|'test_ds_path_invalid_path_components'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bad_args'
op|'='
op|'['
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
name|'None'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"''"
op|','
name|'None'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a'"
op|','
name|'None'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a'"
op|','
name|'None'
op|','
string|"'b'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
name|'None'
op|','
string|"''"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
name|'None'
op|','
string|"'b'"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'t'
name|'in'
name|'bad_args'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'DatastorePath'
op|','
nl|'\n'
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_no_subdir
dedent|''
dedent|''
name|'def'
name|'test_ds_path_no_subdir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"''"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'x.vmdk'"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'canonical_p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'dsname'"
op|','
string|"'x.vmdk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[dsname] x.vmdk'"
op|','
name|'str'
op|'('
name|'canonical_p'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'canonical_p'
op|'.'
name|'dirname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'x.vmdk'"
op|','
name|'canonical_p'
op|'.'
name|'basename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'x.vmdk'"
op|','
name|'canonical_p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'canonical_p'
op|')'
op|','
name|'str'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_ds_only
dedent|''
dedent|''
name|'def'
name|'test_ds_path_ds_only'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"''"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"''"
op|','
string|"''"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'canonical_p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'dsname'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[dsname]'"
op|','
name|'str'
op|'('
name|'canonical_p'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'canonical_p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'canonical_p'
op|'.'
name|'basename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'canonical_p'
op|'.'
name|'dirname'
op|')'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'canonical_p'
op|')'
op|','
name|'str'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'canonical_p'
op|'.'
name|'rel_path'
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_equivalence
dedent|''
dedent|''
name|'def'
name|'test_ds_path_equivalence'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/b/c/'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/'"
op|','
string|"'b/c/'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/b/c'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'canonical_p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'dsname'"
op|','
string|"'a/b/c'"
op|','
string|"'x.vmdk'"
op|')'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'canonical_p'
op|')'
op|','
name|'str'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'canonical_p'
op|'.'
name|'datastore'
op|','
name|'p'
op|'.'
name|'datastore'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'canonical_p'
op|'.'
name|'rel_path'
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'canonical_p'
op|'.'
name|'parent'
op|')'
op|','
name|'str'
op|'('
name|'p'
op|'.'
name|'parent'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_non_equivalence
dedent|''
dedent|''
name|'def'
name|'test_ds_path_non_equivalence'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
nl|'\n'
comment|'# leading slash'
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'/a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'/a/b/c/'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/b/c'"
op|','
string|"'/x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
comment|'# leading space'
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/b/c/'"
op|','
string|"' x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/'"
op|','
string|"' b/c/'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"' a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|','
nl|'\n'
comment|'# trailing space'
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'/a/b/c/'"
op|','
string|"'x.vmdk '"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'dsname'"
op|','
op|'['
string|"'a/b/c/ '"
op|','
string|"'x.vmdk'"
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'canonical_p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'dsname'"
op|','
string|"'a/b/c'"
op|','
string|"'x.vmdk'"
op|')'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|','
op|'*'
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'str'
op|'('
name|'canonical_p'
op|')'
op|','
name|'str'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_equal
dedent|''
dedent|''
name|'def'
name|'test_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds_name'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'b'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds_name'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'a'
op|','
name|'b'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_join
dedent|''
name|'def'
name|'test_join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds_name'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'ds_path'
op|'='
name|'p'
op|'.'
name|'join'
op|'('
string|"'b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds_name] a/b'"
op|','
name|'str'
op|'('
name|'ds_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'('
string|"'ds_name'"
op|','
string|"'a'"
op|')'
newline|'\n'
name|'ds_path'
op|'='
name|'p'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'[ds_name] a'"
op|','
name|'str'
op|'('
name|'ds_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'bad_args'
op|'='
op|'['
nl|'\n'
op|'['
name|'None'
op|']'
op|','
nl|'\n'
op|'['
string|"''"
op|','
name|'None'
op|']'
op|','
nl|'\n'
op|'['
string|"'a'"
op|','
name|'None'
op|']'
op|','
nl|'\n'
op|'['
string|"'a'"
op|','
name|'None'
op|','
string|"'b'"
op|']'
op|']'
newline|'\n'
name|'for'
name|'arg'
name|'in'
name|'bad_args'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'p'
op|'.'
name|'join'
op|','
op|'*'
name|'arg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ds_path_parse
dedent|''
dedent|''
name|'def'
name|'test_ds_path_parse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'.'
name|'parse'
op|'('
string|"'[dsname]'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'dsname'"
op|','
name|'p'
op|'.'
name|'datastore'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'.'
name|'parse'
op|'('
string|"'[dsname] folder'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'dsname'"
op|','
name|'p'
op|'.'
name|'datastore'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'folder'"
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'.'
name|'parse'
op|'('
string|"'[dsname] folder/file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'dsname'"
op|','
name|'p'
op|'.'
name|'datastore'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'folder/file'"
op|','
name|'p'
op|'.'
name|'rel_path'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'p'
name|'in'
op|'['
name|'None'
op|','
string|"''"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'.'
name|'parse'
op|','
name|'p'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'p'
name|'in'
op|'['
string|"'bad path'"
op|','
string|"'/a/b/c'"
op|','
string|"'a/b/c'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'IndexError'
op|','
name|'ds_util'
op|'.'
name|'DatastorePath'
op|'.'
name|'parse'
op|','
name|'p'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
