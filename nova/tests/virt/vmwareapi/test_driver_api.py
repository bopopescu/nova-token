begin_unit
comment|'# Copyright (c) 2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'# Copyright (c) 2012 VMware, Inc.'
nl|'\n'
comment|'# Copyright (c) 2011 Citrix Systems, Inc.'
nl|'\n'
comment|'# Copyright 2011 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest suite for VMwareAPI.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'import'
name|'suds'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'test_flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'stubs'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
name|'as'
name|'nova_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
name|'as'
name|'v_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'ds_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'error_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'fake'
name|'as'
name|'vmwareapi_fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'imagecache'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vim'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vim_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vm_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'vmware_images'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'volume_util'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'vmwareapi'
name|'import'
name|'volumeops'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'remove_unused_original_minimum_age_seconds'"
op|','
nl|'\n'
string|"'nova.virt.imagecache'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|fake_vm_ref
name|'class'
name|'fake_vm_ref'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'value'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'_type'
op|'='
string|"'VirtualMachine'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|fake_service_content
dedent|''
dedent|''
name|'class'
name|'fake_service_content'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ServiceContent'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ServiceContent'
op|'.'
name|'fake'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareSudsTest
dedent|''
dedent|''
name|'class'
name|'VMwareSudsTest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareSudsTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|new_client_init
name|'def'
name|'new_client_init'
op|'('
name|'self'
op|','
name|'url'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'suds'
op|'.'
name|'client'
op|'.'
name|'Client'
op|','
nl|'\n'
string|"'__init__'"
op|','
name|'new'
op|'='
name|'new_client_init'
op|')'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vim'
op|'='
name|'self'
op|'.'
name|'_vim_create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'stopall'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_vim_create
dedent|''
name|'def'
name|'_vim_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_retrieve_service_content
indent|'        '
name|'def'
name|'fake_retrieve_service_content'
op|'('
name|'fake'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fake_service_content'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vim'
op|'.'
name|'Vim'
op|','
string|"'retrieve_service_content'"
op|','
nl|'\n'
name|'fake_retrieve_service_content'
op|')'
newline|'\n'
name|'return'
name|'vim'
op|'.'
name|'Vim'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exception_with_deepcopy
dedent|''
name|'def'
name|'test_exception_with_deepcopy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'self'
op|'.'
name|'vim'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'VimException'
op|','
nl|'\n'
name|'copy'
op|'.'
name|'deepcopy'
op|','
name|'self'
op|'.'
name|'vim'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareSessionTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareSessionTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_fake_is_vim_object
indent|'    '
name|'def'
name|'_fake_is_vim_object'
op|'('
name|'self'
op|','
name|'module'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.sleep'"
op|')'
newline|'\n'
DECL|member|test_call_method_vim_fault
name|'def'
name|'test_call_method_vim_fault'
op|'('
name|'self'
op|','
name|'mock_sleep'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_create_session
indent|'        '
name|'def'
name|'_fake_create_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'session'
op|'.'
name|'userName'
op|'='
string|"'fake_username'"
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
DECL|function|_fake_session_is_active
dedent|''
name|'def'
name|'_fake_session_is_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_is_vim_object'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_session_is_active'"
op|','
nl|'\n'
name|'_fake_session_is_active'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_fake_vim'
op|','
name|'_fake_create'
op|','
name|'_fake_is_active'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'api_session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'VimFaultException'
op|','
nl|'\n'
name|'api_session'
op|'.'
name|'_call_method'
op|','
nl|'\n'
name|'stubs'
op|','
string|"'fake_temp_method_exception'"
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_method_vim_empty
dedent|''
dedent|''
name|'def'
name|'test_call_method_vim_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_create_session
indent|'        '
name|'def'
name|'_fake_create_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'session'
op|'.'
name|'userName'
op|'='
string|"'fake_username'"
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
DECL|function|_fake_session_is_active
dedent|''
name|'def'
name|'_fake_session_is_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_is_vim_object'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_session_is_active'"
op|','
nl|'\n'
name|'_fake_session_is_active'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_fake_vim'
op|','
name|'_fake_create'
op|','
name|'_fake_is_active'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'api_session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'api_session'
op|'.'
name|'_call_method'
op|'('
name|'stubs'
op|','
string|"'fake_temp_method_exception'"
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.sleep'"
op|')'
newline|'\n'
DECL|member|test_call_method_session_exception
name|'def'
name|'test_call_method_session_exception'
op|'('
name|'self'
op|','
name|'mock_sleep'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_create_session
indent|'        '
name|'def'
name|'_fake_create_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'session'
op|'.'
name|'userName'
op|'='
string|"'fake_username'"
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_is_vim_object'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'_fake_vim'
op|','
name|'_fake_create'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'api_session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'SessionConnectionException'
op|','
nl|'\n'
name|'api_session'
op|'.'
name|'_call_method'
op|','
nl|'\n'
name|'stubs'
op|','
string|"'fake_temp_session_exception'"
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_method_session_file_exists_exception
dedent|''
dedent|''
name|'def'
name|'test_call_method_session_file_exists_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_create_session
indent|'        '
name|'def'
name|'_fake_create_session'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'session'
op|'.'
name|'key'
op|'='
string|"'fake_key'"
newline|'\n'
name|'session'
op|'.'
name|'userName'
op|'='
string|"'fake_username'"
newline|'\n'
name|'self'
op|'.'
name|'_session'
op|'='
name|'session'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_is_vim_object'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_is_vim_object'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'driver'
op|'.'
name|'VMwareAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'_fake_create_session'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'_fake_vim'
op|','
name|'_fake_create'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'api_session'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'FileAlreadyExistsException'
op|','
nl|'\n'
name|'api_session'
op|'.'
name|'_call_method'
op|','
nl|'\n'
name|'stubs'
op|','
string|"'fake_session_file_exception'"
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareAPIConfTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'VMwareAPIConfTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for VMWare API configurations."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIConfTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'vm_refs_cache_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIConfTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_configure_without_wsdl_loc_override
dedent|''
name|'def'
name|'test_configure_without_wsdl_loc_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test the default configuration behavior. By default,'
nl|'\n'
comment|'# use the WSDL sitting on the host we are talking to in'
nl|'\n'
comment|'# order to bind the SOAP client.'
nl|'\n'
indent|'        '
name|'wsdl_loc'
op|'='
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'vmware'
op|'.'
name|'wsdl_location'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'wsdl_loc'
op|')'
newline|'\n'
name|'wsdl_url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_wsdl_url'
op|'('
string|'"https"'
op|','
string|'"www.example.com"'
op|')'
newline|'\n'
name|'url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_soap_url'
op|'('
string|'"https"'
op|','
string|'"www.example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"https://www.example.com/sdk/vimService.wsdl"'
op|','
nl|'\n'
name|'wsdl_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"https://www.example.com/sdk"'
op|','
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_configure_without_wsdl_loc_override_using_ipv6
dedent|''
name|'def'
name|'test_configure_without_wsdl_loc_override_using_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Same as above but with ipv6 based host ip'
nl|'\n'
indent|'        '
name|'wsdl_loc'
op|'='
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'vmware'
op|'.'
name|'wsdl_location'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'wsdl_loc'
op|')'
newline|'\n'
name|'wsdl_url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_wsdl_url'
op|'('
string|'"https"'
op|','
string|'"::1"'
op|')'
newline|'\n'
name|'url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_soap_url'
op|'('
string|'"https"'
op|','
string|'"::1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"https://[::1]/sdk/vimService.wsdl"'
op|','
nl|'\n'
name|'wsdl_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"https://[::1]/sdk"'
op|','
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_configure_with_wsdl_loc_override
dedent|''
name|'def'
name|'test_configure_with_wsdl_loc_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Use the setting vmwareapi_wsdl_loc to override the'
nl|'\n'
comment|'# default path to the WSDL.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# This is useful as a work-around for XML parsing issues'
nl|'\n'
comment|'# found when using some WSDL in combination with some XML'
nl|'\n'
comment|'# parsers.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The wsdl_url should point to a different host than the one we'
nl|'\n'
comment|'# are actually going to send commands to.'
nl|'\n'
indent|'        '
name|'fake_wsdl'
op|'='
string|'"https://www.test.com/sdk/foo.wsdl"'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'wsdl_location'
op|'='
name|'fake_wsdl'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'wsdl_loc'
op|'='
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'vmware'
op|'.'
name|'wsdl_location'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'wsdl_loc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_wsdl'
op|','
name|'wsdl_loc'
op|')'
newline|'\n'
name|'wsdl_url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_wsdl_url'
op|'('
string|'"https"'
op|','
string|'"www.example.com"'
op|')'
newline|'\n'
name|'url'
op|'='
name|'vim'
op|'.'
name|'Vim'
op|'.'
name|'get_soap_url'
op|'('
string|'"https"'
op|','
string|'"www.example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_wsdl'
op|','
name|'wsdl_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"https://www.example.com/sdk"'
op|','
name|'url'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareAPIVMTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareAPIVMTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Vmware API connection calls."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'vm_refs_cache_reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host_ip'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'host_username'
op|'='
string|"'test_username'"
op|','
nl|'\n'
name|'host_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'cluster_name'
op|'='
string|"'test_cluster'"
op|','
nl|'\n'
name|'datastore_regex'
op|'='
string|"'.*'"
op|','
nl|'\n'
name|'api_retry_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'use_linked_clone'
op|'='
name|'False'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vnc_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'image_cache_subdirectory_name'
op|'='
string|"'vmware_base'"
op|','
nl|'\n'
name|'my_ip'
op|'='
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
string|"'test_url'"
newline|'\n'
name|'self'
op|'.'
name|'ds'
op|'='
string|"'ds1'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'set_stubs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareESXDriver'
op|'('
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|')'
newline|'\n'
comment|'# NOTE(vish): none of the network plugging code is actually'
nl|'\n'
comment|'#             being tested'
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|'='
name|'utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'c1c8ce3d-c2e0-4247-890c-ccf5cc1c004c'"
op|','
nl|'\n'
string|"'disk_format'"
op|':'
string|"'vmdk'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'512'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vnc_host'
op|'='
string|"'test_url'"
newline|'\n'
name|'self'
op|'.'
name|'_set_exception_vars'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'cleanup'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_exception_vars
dedent|''
name|'def'
name|'_set_exception_vars'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'wait_task'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_wait_for_task'
newline|'\n'
name|'self'
op|'.'
name|'call_method'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
newline|'\n'
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|test_driver_capabilities
dedent|''
name|'def'
name|'test_driver_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'capabilities'
op|'['
string|"'has_imagecache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'capabilities'
op|'['
string|"'supports_recreate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_login_retries
dedent|''
name|'def'
name|'test_login_retries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'attempts'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'login_session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|'('
op|')'
op|'.'
name|'_login'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_login
name|'def'
name|'_fake_login'
op|'('
name|'_self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'attempts'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'attempts'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'Here is my fake exception'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'login_session'
newline|'\n'
nl|'\n'
DECL|function|_fake_check_session
dedent|''
name|'def'
name|'_fake_check_session'
op|'('
name|'_self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|','
string|"'_login'"
op|','
name|'_fake_login'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'lambda'
name|'x'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|','
string|"'_check_session'"
op|','
nl|'\n'
name|'_fake_check_session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'attempts'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wait_for_task_exception
dedent|''
name|'def'
name|'test_wait_for_task_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'task_poll_interval'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'login_session'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|'('
op|')'
op|'.'
name|'_login'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stop_called'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|_fake_login
name|'def'
name|'_fake_login'
op|'('
name|'_self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'login_session'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FakeVim'
op|','
string|"'_login'"
op|','
name|'_fake_login'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_poll_task
name|'def'
name|'fake_poll_task'
op|'('
name|'task_ref'
op|','
name|'done'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'done'
op|'.'
name|'send_exception'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'fake exception'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_stop_loop
dedent|''
name|'def'
name|'fake_stop_loop'
op|'('
name|'loop'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stop_called'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'loop'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareAPISession'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"_poll_task"'
op|','
nl|'\n'
name|'fake_poll_task'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"_stop_loop"'
op|','
nl|'\n'
name|'fake_stop_loop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_wait_for_task'
op|','
string|"'fake-ref'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'stop_called'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_instance_type_by_name
dedent|''
name|'def'
name|'_get_instance_type_by_name'
op|'('
name|'self'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'instance_type'
name|'in'
name|'test_flavors'
op|'.'
name|'DEFAULT_FLAVORS'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'instance_type'
op|'['
string|"'name'"
op|']'
op|'=='
name|'type'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'instance_type'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'type'
op|'=='
string|"'m1.micro'"
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'memory_mb'"
op|':'
number|'128'
op|','
string|"'root_gb'"
op|':'
number|'0'
op|','
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'m1.micro'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
string|"'vcpus'"
op|':'
number|'1'
op|','
string|"'extra_specs'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
string|"'rxtx_factor'"
op|':'
number|'1.0'
op|','
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'1'"
op|','
string|"'vcpu_weight'"
op|':'
name|'None'
op|','
string|"'id'"
op|':'
number|'2'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'set_image_ref'
op|'='
name|'True'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'None'
op|','
name|'instance_type'
op|'='
string|"'m1.large'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'uuid'
op|':'
newline|'\n'
indent|'            '
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'type_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_type_by_name'
op|'('
name|'instance_type'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'uuid'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|'"fake_kernel_uuid"'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|'"fake_ramdisk_uuid"'
op|','
nl|'\n'
string|"'mac_address'"
op|':'
string|'"de:ad:be:ef:be:ef"'
op|','
nl|'\n'
string|"'flavor'"
op|':'
name|'instance_type'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'node'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'root_gb'"
op|']'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'ephemeral_gb'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|"'swap'"
op|':'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'swap'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'set_image_ref'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|'"fake_image_uuid"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'instance_node'
op|'='
name|'node'
newline|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_vm
dedent|''
name|'def'
name|'_create_vm'
op|'('
name|'self'
op|','
name|'node'
op|'='
name|'None'
op|','
name|'num_instances'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'instance_type'
op|'='
string|"'m1.large'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create and spawn the VM."""'
newline|'\n'
name|'if'
name|'not'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'node'
op|'='
name|'node'
op|','
name|'uuid'
op|'='
name|'uuid'
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_record'
op|'('
name|'num_instances'
op|'='
name|'num_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_vm_record
dedent|''
name|'def'
name|'_check_vm_record'
op|'('
name|'self'
op|','
name|'num_instances'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the spawned VM\'s properties correspond to the instance in\n        the db.\n        """'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
name|'num_instances'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get Nova record for VM'
nl|'\n'
name|'vm_info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'name'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get record for VM'
nl|'\n'
name|'vms'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
newline|'\n'
name|'for'
name|'vm'
name|'in'
name|'vms'
op|'.'
name|'objects'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'vm'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
name|'self'
op|'.'
name|'uuid'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
comment|'# Check that m1.large above turned into the right thing.'
nl|'\n'
dedent|''
dedent|''
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'vcpus'
op|'='
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_info'
op|'['
string|"'max_mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_info'
op|'['
string|"'mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.instanceUuid"'
op|')'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.numCpu"'
op|')'
op|','
name|'vcpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"summary.config.memorySizeMB"'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'vm'
op|'.'
name|'get'
op|'('
string|'"config.hardware.device"'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'device'
op|'.'
name|'obj_name'
op|','
nl|'\n'
string|'"ns0:VirtualE1000"'
op|')'
newline|'\n'
comment|'# Check that the VM is running according to Nova'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_info'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to vSphere API.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm'
op|'.'
name|'get'
op|'('
string|'"runtime.powerState"'
op|')'
op|','
string|"'poweredOn'"
op|')'
newline|'\n'
nl|'\n'
name|'found_vm_uuid'
op|'='
name|'False'
newline|'\n'
name|'found_iface_id'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'vm'
op|'.'
name|'get'
op|'('
string|'"config.extraConfig"'
op|')'
op|'.'
name|'OptionValue'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'c'
op|'.'
name|'key'
op|'=='
string|'"nvp.vm-uuid"'
name|'and'
name|'c'
op|'.'
name|'value'
op|'=='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found_vm_uuid'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'c'
op|'.'
name|'key'
op|'=='
string|'"nvp.iface-id.0"'
name|'and'
name|'c'
op|'.'
name|'value'
op|'=='
string|'"vif-xxx-yyy-zzz"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found_iface_id'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_vm_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_iface_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_vm_info
dedent|''
name|'def'
name|'_check_vm_info'
op|'('
name|'self'
op|','
name|'info'
op|','
name|'pwr_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if the get_info returned values correspond to the instance\n        object in the db.\n        """'
newline|'\n'
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|'"state"'
op|']'
op|','
name|'pwr_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|'"max_mem"'
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|'"mem"'
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|'"num_cpu"'
op|']'
op|','
name|'self'
op|'.'
name|'type_data'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_1
dedent|''
name|'def'
name|'test_list_instances_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids
dedent|''
name|'def'
name|'test_list_instance_uuids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'uuids'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instance_uuids_invalid_uuid
dedent|''
name|'def'
name|'test_list_instance_uuids_invalid_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'uuid'
op|'='
string|"'fake_id'"
op|')'
newline|'\n'
name|'uuids'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cached_files_exist
dedent|''
name|'def'
name|'_cached_files_exist'
op|'('
name|'self'
op|','
name|'exists'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cache'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'if'
name|'exists'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'cache'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'cache'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_dir_disk_created
dedent|''
dedent|''
name|'def'
name|'test_instance_dir_disk_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test image file is cached when even when use_linked_clone\n            is False\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'inst_file_path'
op|'='
string|"'[%s] %s/%s.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'cache'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'inst_file_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_dir_disk_created
dedent|''
name|'def'
name|'test_cache_dir_disk_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test image disk is cached when use_linked_clone is True."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'file'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'root'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.80.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'file'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'root'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iso_disk_type_created
dedent|''
name|'def'
name|'_iso_disk_type_created'
op|'('
name|'self'
op|','
name|'instance_type'
op|'='
string|"'m1.large'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'instance_type'
op|'='
name|'instance_type'
op|')'
newline|'\n'
name|'file'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.iso'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_type_created
dedent|''
name|'def'
name|'test_iso_disk_type_created'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iso_disk_type_created'
op|'('
op|')'
newline|'\n'
name|'vmdk_file_path'
op|'='
string|"'[%s] %s/%s.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'vmdk_file_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_type_created_with_root_gb_0
dedent|''
name|'def'
name|'test_iso_disk_type_created_with_root_gb_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iso_disk_type_created'
op|'('
name|'instance_type'
op|'='
string|"'m1.micro'"
op|')'
newline|'\n'
name|'vmdk_file_path'
op|'='
string|"'[%s] %s/%s.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'vmdk_file_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_cdrom_attach
dedent|''
name|'def'
name|'test_iso_disk_cdrom_attach'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'iso_path'
op|'='
op|'('
nl|'\n'
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.iso'"
op|'%'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'self'
op|'.'
name|'iso_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iso_disk_cdrom_attach_with_config_drive
dedent|''
name|'def'
name|'test_iso_disk_cdrom_attach_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'iso_path'
op|'='
op|'['
nl|'\n'
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.iso'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
op|','
nl|'\n'
string|"'[%s] fake-config-drive'"
op|'%'
name|'self'
op|'.'
name|'ds'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'iso_unit_nos'
op|'='
op|'['
number|'0'
op|','
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'iso_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|fake_create_config_drive
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
name|'uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'fake-config-drive'"
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
dedent|''
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'self'
op|'.'
name|'iso_path'
op|'['
name|'self'
op|'.'
name|'iso_index'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'iso_index'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'iso'"
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'iso_index'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cdrom_attach_with_config_drive
dedent|''
name|'def'
name|'test_cdrom_attach_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'iso_path'
op|'='
string|"'[%s] fake-config-drive'"
op|'%'
name|'self'
op|'.'
name|'ds'
newline|'\n'
name|'self'
op|'.'
name|'cd_attach_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_create_config_drive
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
name|'uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'fake-config-drive'"
newline|'\n'
nl|'\n'
DECL|function|fake_attach_cdrom
dedent|''
name|'def'
name|'fake_attach_cdrom'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
name|'data_store_ref'
op|','
nl|'\n'
name|'iso_uploaded_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'iso_uploaded_path'
op|','
name|'self'
op|'.'
name|'iso_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cd_attach_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_attach_cdrom_to_vm"'
op|','
nl|'\n'
name|'fake_attach_cdrom'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'cd_attach_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_with_delete_exception
dedent|''
name|'def'
name|'_spawn_with_delete_exception'
op|'('
name|'self'
op|','
name|'fault'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"DeleteDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|','
nl|'\n'
name|'error_fault'
op|'='
name|'fault'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'fault'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'VMwareDriverException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_not_found
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileNotFound'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_file_fault
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_file_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileFault'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_cannot_delete_file
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_cannot_delete_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'CannotDeleteFile'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_file_locked
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_file_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'FileLocked'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_delete_exception_general
dedent|''
name|'def'
name|'test_spawn_with_delete_exception_general'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_with_delete_exception'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend
dedent|''
name|'def'
name|'test_spawn_disk_extend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|')'
newline|'\n'
name|'requested_size'
op|'='
number|'80'
op|'*'
name|'units'
op|'.'
name|'Mi'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_extend_virtual_disk'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'requested_size'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_exists
dedent|''
name|'def'
name|'test_spawn_disk_extend_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/fake_image_uuid.80.vmdk'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'ds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'root'
op|'='
name|'root'
newline|'\n'
nl|'\n'
DECL|function|_fake_extend
name|'def'
name|'_fake_extend'
op|'('
name|'instance'
op|','
name|'requested_size'
op|','
name|'name'
op|','
name|'dc_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vmwareapi_fake'
op|'.'
name|'_add_file'
op|'('
name|'self'
op|'.'
name|'root'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|','
nl|'\n'
name|'_fake_extend'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'root'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_sparse
dedent|''
name|'def'
name|'test_spawn_disk_extend_sparse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmware_images'
op|','
string|"'get_vmdk_size_and_properties'"
op|')'
newline|'\n'
name|'result'
op|'='
op|'['
number|'1024'
op|','
op|'{'
string|'"vmware_ostype"'
op|':'
string|'"otherGuest"'
op|','
nl|'\n'
string|'"vmware_adaptertype"'
op|':'
string|'"lsiLogic"'
op|','
nl|'\n'
string|'"vmware_disktype"'
op|':'
string|'"sparse"'
op|'}'
op|']'
newline|'\n'
name|'vmware_images'
op|'.'
name|'get_vmdk_size_and_properties'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_extend_virtual_disk'"
op|')'
newline|'\n'
name|'requested_size'
op|'='
number|'80'
op|'*'
name|'units'
op|'.'
name|'Mi'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_extend_virtual_disk'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'requested_size'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_extend_insufficient_disk_space
dedent|''
name|'def'
name|'test_spawn_disk_extend_insufficient_disk_space'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_linked_clone'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'wait_task'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_wait_for_task'
newline|'\n'
name|'self'
op|'.'
name|'call_method'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
newline|'\n'
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'id'
op|'='
string|"'fake_image_uuid'"
newline|'\n'
name|'cached_image'
op|'='
string|"'[%s] vmware_base/%s/%s.80.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
nl|'\n'
name|'id'
op|','
name|'id'
op|')'
newline|'\n'
name|'tmp_file'
op|'='
string|"'[%s] vmware_base/%s/%s.80-flat.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
nl|'\n'
name|'id'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'cached_image'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'tmp_file'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
string|"'No space!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"ExtendVirtualDisk_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|'"_call_method"'
op|','
name|'fake_call_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|'"_wait_for_task"'
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'cached_image'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'tmp_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_disk_invalid_disk_size
dedent|''
name|'def'
name|'test_spawn_disk_invalid_disk_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmware_images'
op|','
string|"'get_vmdk_size_and_properties'"
op|')'
newline|'\n'
name|'result'
op|'='
op|'['
number|'82'
op|'*'
name|'units'
op|'.'
name|'Gi'
op|','
nl|'\n'
op|'{'
string|'"vmware_ostype"'
op|':'
string|'"otherGuest"'
op|','
nl|'\n'
string|'"vmware_adaptertype"'
op|':'
string|'"lsiLogic"'
op|','
nl|'\n'
string|'"vmware_disktype"'
op|':'
string|'"sparse"'
op|'}'
op|']'
newline|'\n'
name|'vmware_images'
op|'.'
name|'get_vmdk_size_and_properties'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceUnacceptable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_invalid_disk_format
dedent|''
name|'def'
name|'test_spawn_invalid_disk_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'['
string|"'disk_format'"
op|']'
op|'='
string|"'invalid'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidDiskFormat'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_file_exists_exception
dedent|''
name|'def'
name|'test_spawn_with_move_file_exists_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise an file exists exception. The flag'
nl|'\n'
comment|'# self.exception will be checked to see that'
nl|'\n'
comment|'# the exception has indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
indent|'        '
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'error_util'
op|'.'
name|'FileAlreadyExistsException'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_general_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_general_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise a general exception. The flag self.exception'
nl|'\n'
comment|'# will be checked to see that the exception has'
nl|'\n'
comment|'# indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
indent|'        '
name|'def'
name|'fake_wait_for_task'
op|'('
name|'task_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'task_ref'
op|'=='
name|'self'
op|'.'
name|'task_ref'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'error_util'
op|'.'
name|'VMwareDriverException'
op|'('
string|"'Exception!'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'wait_task'
op|'('
name|'task_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'task_ref'
op|'='
name|'task_ref'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_wait_for_task'"
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_wait_for_task'
op|','
name|'_call_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'VMwareDriverException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_poll_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_poll_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'call_method'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error_util'
op|'.'
name|'VMwareDriverException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_move_file_exists_poll_exception
dedent|''
dedent|''
name|'def'
name|'test_spawn_with_move_file_exists_poll_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The test will validate that the spawn completes'
nl|'\n'
comment|'# successfully. The "MoveDatastoreFile_Task" will'
nl|'\n'
comment|'# raise a file exists exception. The flag self.exception'
nl|'\n'
comment|'# will be checked to see that the exception has'
nl|'\n'
comment|'# indeed been raised.'
nl|'\n'
nl|'\n'
DECL|function|fake_call_method
indent|'        '
name|'def'
name|'fake_call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task_ref'
op|'='
name|'self'
op|'.'
name|'call_method'
op|'('
name|'module'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|'"MoveDatastoreFile_Task"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception'
op|'='
name|'True'
newline|'\n'
name|'task_mdo'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'create_task'
op|'('
name|'method'
op|','
string|'"error"'
op|','
nl|'\n'
name|'error_fault'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'FileAlreadyExists'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'task_mdo'
op|'.'
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'task_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|"'_call_method'"
op|','
nl|'\n'
name|'fake_call_method'
op|')'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_attach_volume_vmdk
dedent|''
dedent|''
name|'def'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'self'
op|','
name|'set_image_ref'
op|'='
name|'True'
op|','
name|'vc_support'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'set_image_ref'
op|'='
name|'set_image_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'block_device'
op|','
string|"'volume_in_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'v_driver'
op|','
string|"'block_device_info_get_mapping'"
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'root_disk'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|'}'
op|']'
newline|'\n'
name|'v_driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'root_disk'
op|')'
newline|'\n'
name|'if'
name|'vc_support'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_get_res_pool_of_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_get_res_pool_of_vm'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_res_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_relocate_vmdk_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_relocate_vmdk_volume'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake_res_pool'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'mount_device'"
op|':'
string|"'vda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk_no_image_ref
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk_no_image_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'set_image_ref'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_iscsi
dedent|''
name|'def'
name|'test_spawn_attach_volume_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'block_device'
op|','
string|"'volume_in_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'v_driver'
op|','
string|"'block_device_info_get_mapping'"
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'root_disk'
op|'='
op|'['
op|'{'
string|"'connection_info'"
op|':'
name|'connection_info'
op|'}'
op|']'
newline|'\n'
name|'v_driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'root_disk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_volume'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'block_device_info'
op|'='
op|'{'
string|"'mount_device'"
op|':'
string|"'vda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_upload_image
dedent|''
name|'def'
name|'mock_upload_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image'
op|','
name|'instance'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image'
op|','
string|"'Test-Snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'disk_type'"
op|']'
op|','
string|"'preallocated'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vm_ref_using_extra_config
dedent|''
name|'def'
name|'test_get_vm_ref_using_extra_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_vm_ref_from_extraconfig'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
comment|'# Disrupt the fake Virtual Machine object so that extraConfig'
nl|'\n'
comment|'# cannot be matched.'
nl|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'fake_vm'
op|'.'
name|'get'
op|'('
string|'\'config.extraConfig["nvp.vm-uuid"]\''
op|')'
op|'.'
name|'value'
op|'='
string|'""'
newline|'\n'
comment|'# We should not get a Virtual Machine through extraConfig.'
nl|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_vm_ref_from_extraconfig'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference should be none'"
op|')'
newline|'\n'
comment|'# Check if we can find the Virtual Machine using the name.'
nl|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'get_vm_ref'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_object_for_optionvalue
dedent|''
name|'def'
name|'test_get_object_for_optionvalue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'vms'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'_call_method'
op|'('
name|'vim_util'
op|','
string|'"get_objects"'
op|','
nl|'\n'
string|'"VirtualMachine"'
op|','
op|'['
string|'\'config.extraConfig["nvp.vm-uuid"]\''
op|']'
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_util'
op|'.'
name|'_get_object_for_optionvalue'
op|'('
name|'vms'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|'"uuid"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_ref'
op|','
string|"'VM Reference cannot be none'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_snapshot
dedent|''
name|'def'
name|'_test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
nl|'\n'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'vmware_images'
op|','
string|"'upload_image'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'mock_upload_image'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|'"Test-Snapshot"'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_non_existent
dedent|''
name|'def'
name|'test_snapshot_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|'"Test-Snapshot"'
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_delete_vm_snapshot
dedent|''
name|'def'
name|'test_snapshot_delete_vm_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
op|'.'
name|'obj'
newline|'\n'
name|'snapshot_ref'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'ManagedObjectReference'
op|'('
nl|'\n'
name|'value'
op|'='
string|'"Snapshot-123"'
op|','
nl|'\n'
name|'name'
op|'='
string|'"VirtualMachineSnapshot"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
nl|'\n'
string|"'_create_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_create_vm_snapshot'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'snapshot_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVMOps'
op|','
nl|'\n'
string|"'_delete_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_delete_vm_snapshot'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'fake_vm'
op|','
name|'snapshot_ref'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_with_uuid
dedent|''
name|'def'
name|'test_reboot_with_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test fall back to use name when can\'t find by uuid."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake-name'"
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'reboot_type'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'fake-name'"
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_non_existent
dedent|''
name|'def'
name|'test_reboot_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_poll_rebooting_instances
dedent|''
name|'def'
name|'test_poll_rebooting_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'reboot'"
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'reboot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'poll_rebooting_instances'
op|'('
number|'60'
op|','
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_not_poweredon
dedent|''
name|'def'
name|'test_reboot_not_poweredon'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceRebootFailure'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_non_existent
dedent|''
name|'def'
name|'test_suspend_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_non_existent
dedent|''
name|'def'
name|'test_resume_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_not_suspended
dedent|''
name|'def'
name|'test_resume_not_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceResumeFailure'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on
dedent|''
name|'def'
name|'test_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_on'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on_non_existent
dedent|''
name|'def'
name|'test_power_on_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_on'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off
dedent|''
name|'def'
name|'test_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off_non_existent
dedent|''
name|'def'
name|'test_power_off_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off_suspended
dedent|''
name|'def'
name|'test_power_off_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'suspend'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstancePowerOffFailure'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'power_off'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot
dedent|''
name|'def'
name|'test_resume_state_on_host_boot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_vm_state_from_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"reboot"'
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'get_vm_state_from_name'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|'"poweredOff"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'network_info'"
op|','
nl|'\n'
string|"'hard'"
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_no_reboot_1
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_no_reboot_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Don\'t call reboot on instance which is poweredon."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_vm_state_from_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'reboot'"
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'get_vm_state_from_name'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|'"poweredOn"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_state_on_host_boot_no_reboot_2
dedent|''
name|'def'
name|'test_resume_state_on_host_boot_no_reboot_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Don\'t call reboot on instance which is suspended."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_vm_state_from_name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|"'reboot'"
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'get_vm_state_from_name'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|'"suspended"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'network_info'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info
dedent|''
name|'def'
name|'test_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_no_datastore
dedent|''
name|'def'
name|'test_destroy_no_datastore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# Overwrite the vmPathName'
nl|'\n'
name|'vms'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'vms'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vm'
op|'.'
name|'set'
op|'('
string|'"config.files.vmPathName"'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy_non_existent
dedent|''
name|'def'
name|'test_destroy_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_rescue
dedent|''
name|'def'
name|'_rescue'
op|'('
name|'self'
op|','
name|'config_drive'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
DECL|function|fake_attach_disk_to_vm
indent|'        '
name|'def'
name|'fake_attach_disk_to_vm'
op|'('
name|'vm_ref'
op|','
name|'instance'
op|','
nl|'\n'
name|'adapter_type'
op|','
name|'disk_type'
op|','
name|'vmdk_path'
op|'='
name|'None'
op|','
nl|'\n'
name|'disk_size'
op|'='
name|'None'
op|','
name|'linked_clone'
op|'='
name|'False'
op|','
nl|'\n'
name|'controller_key'
op|'='
name|'None'
op|','
name|'unit_number'
op|'='
name|'None'
op|','
nl|'\n'
name|'device_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'config_drive'
op|':'
newline|'\n'
DECL|function|fake_create_config_drive
indent|'            '
name|'def'
name|'fake_create_config_drive'
op|'('
name|'instance'
op|','
name|'injected_files'
op|','
name|'password'
op|','
nl|'\n'
name|'data_store_name'
op|','
name|'folder'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'cookies'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|"'_create_config_drive'"
op|','
nl|'\n'
name|'fake_create_config_drive'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volumeops'
op|','
string|'"attach_disk_to_vm"'
op|','
nl|'\n'
name|'fake_attach_disk_to_vm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
string|"'fake-password'"
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
string|"'1-rescue'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'%s-rescue'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'vm_util'
op|'.'
name|'vm_ref_cache_get'
op|'('
string|"'%s-rescue'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue
dedent|''
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_rescue'
op|'('
op|')'
newline|'\n'
name|'inst_file_path'
op|'='
string|"'[%s] %s/%s.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'uuid'
op|','
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'inst_file_path'
op|')'
op|')'
newline|'\n'
name|'rescue_file_path'
op|'='
string|"'[%s] %s-rescue/%s-rescue.vmdk'"
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'rescue_file_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_with_config_drive
dedent|''
name|'def'
name|'test_rescue_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_rescue'
op|'('
name|'config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue
dedent|''
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_rescue'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detach_disk_from_vm
name|'def'
name|'fake_detach_disk_from_vm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_volumeops'
op|','
string|'"detach_disk_from_vm"'
op|','
nl|'\n'
name|'fake_detach_disk_from_vm'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unrescue'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareESXDriver does not implement the pause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'pause'
op|','
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareESXDriver does not implement the unpause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_diagnostics
dedent|''
name|'def'
name|'test_get_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'memoryReservation'"
op|':'
number|'0'
op|','
string|"'suspendInterval'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'maxCpuUsage'"
op|':'
number|'2000'
op|','
string|"'toolsInstallerMounted'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'consumedOverheadMemory'"
op|':'
number|'20'
op|','
string|"'numEthernetCards'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'numCpu'"
op|':'
number|'1'
op|','
string|"'featureRequirement'"
op|':'
op|'['
op|'{'
string|"'key'"
op|':'
string|"'cpuid.AES'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'memoryOverhead'"
op|':'
number|'21417984'
op|','
nl|'\n'
string|"'guestMemoryUsage'"
op|':'
number|'0'
op|','
string|"'connectionState'"
op|':'
string|"'connected'"
op|','
nl|'\n'
string|"'memorySizeMB'"
op|':'
number|'512'
op|','
string|"'balloonedMemory'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vmPathName'"
op|':'
string|"'fake_path'"
op|','
string|"'template'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'overallCpuUsage'"
op|':'
number|'0'
op|','
string|"'powerState'"
op|':'
string|"'poweredOn'"
op|','
nl|'\n'
string|"'cpuReservation'"
op|':'
number|'0'
op|','
string|"'overallCpuDemand'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'numVirtualDisks'"
op|':'
number|'1'
op|','
string|"'hostMemoryUsage'"
op|':'
number|'141'
op|'}'
newline|'\n'
name|'expected'
op|'='
name|'dict'
op|'('
op|'['
op|'('
string|"'vmware:'"
op|'+'
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
op|'{'
string|"'name'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_output
dedent|''
name|'def'
name|'test_get_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_console_output'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_migration
dedent|''
name|'def'
name|'_test_finish_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|','
name|'resize_instance'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests the finish_migration method on vmops."""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'power_on_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_power_on
name|'def'
name|'fake_power_on'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'power_on_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_vmops_update_instance_progress
dedent|''
name|'def'
name|'fake_vmops_update_instance_progress'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'step'
op|','
nl|'\n'
name|'total_steps'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'step'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vmops'
op|'.'
name|'RESIZE_TOTAL_STEPS'
op|','
name|'total_steps'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_power_on"'
op|','
name|'fake_power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_update_instance_progress"'
op|','
nl|'\n'
name|'fake_vmops_update_instance_progress'
op|')'
newline|'\n'
nl|'\n'
comment|'# setup the test instance in the database'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
comment|'# perform the migration on our stubbed methods'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'finish_migration'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'migration'
op|'='
name|'None'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'disk_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'resize_instance'
op|'='
name|'resize_instance'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on
dedent|''
name|'def'
name|'test_finish_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_finish_migration'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_off
dedent|''
name|'def'
name|'test_finish_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_finish_migration'
op|','
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration
dedent|''
name|'def'
name|'test_confirm_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'confirm_migration'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration
dedent|''
name|'def'
name|'_test_finish_revert_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests the finish_revert_migration method on vmops."""'
newline|'\n'
nl|'\n'
comment|'# setup the test instance in the database'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'power_on_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'vm_name'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
op|'+'
string|"'-orig'"
newline|'\n'
nl|'\n'
DECL|function|fake_power_on
name|'def'
name|'fake_power_on'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'power_on_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_orig_vm_name_label
dedent|''
name|'def'
name|'fake_get_orig_vm_name_label'
op|'('
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'vm_name'
newline|'\n'
nl|'\n'
DECL|function|fake_get_vm_ref_from_name
dedent|''
name|'def'
name|'fake_get_vm_ref_from_name'
op|'('
name|'session'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'vm_name'
op|','
name|'vm_name'
op|')'
newline|'\n'
name|'return'
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_get_vm_ref_from_uuid
dedent|''
name|'def'
name|'fake_get_vm_ref_from_uuid'
op|'('
name|'session'
op|','
name|'vm_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_call_method
dedent|''
name|'def'
name|'fake_call_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_wait_for_task
dedent|''
name|'def'
name|'fake_wait_for_task'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_power_on"'
op|','
name|'fake_power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_get_orig_vm_name_label"'
op|','
nl|'\n'
name|'fake_get_orig_vm_name_label'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_util'
op|','
string|'"_get_vm_ref_from_uuid"'
op|','
nl|'\n'
name|'fake_get_vm_ref_from_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_util'
op|','
string|'"get_vm_ref_from_name"'
op|','
nl|'\n'
name|'fake_get_vm_ref_from_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|'"_call_method"'
op|','
name|'fake_call_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
string|'"_wait_for_task"'
op|','
nl|'\n'
name|'fake_wait_for_task'
op|')'
newline|'\n'
nl|'\n'
comment|'# perform the revert on our stubbed methods'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'finish_revert_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_on'
op|'='
name|'power_on'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_on
dedent|''
name|'def'
name|'test_finish_revert_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_finish_migration'
op|','
name|'power_on'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_off
dedent|''
name|'def'
name|'test_finish_revert_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_finish_migration'
op|','
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_console_pool_info
dedent|''
name|'def'
name|'test_get_console_pool_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_console_pool_info'
op|'('
string|'"console_type"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'address'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'username'"
op|']'
op|','
string|"'test_username'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'password'"
op|']'
op|','
string|"'test_pass'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_non_existent
dedent|''
name|'def'
name|'test_get_vnc_console_non_existent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_vnc_console
dedent|''
name|'def'
name|'_test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'OptionValue'
op|'='
name|'collections'
op|'.'
name|'namedtuple'
op|'('
string|"'OptionValue'"
op|','
op|'['
string|"'key'"
op|','
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'opt_val'
op|'='
name|'OptionValue'
op|'('
name|'key'
op|'='
string|"''"
op|','
name|'value'
op|'='
number|'5906'
op|')'
newline|'\n'
name|'fake_vm'
op|'.'
name|'set'
op|'('
name|'vm_util'
op|'.'
name|'VNC_CONFIG_KEY'
op|','
name|'opt_val'
op|')'
newline|'\n'
name|'vnc_dict'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vnc_dict'
op|'['
string|"'host'"
op|']'
op|','
name|'self'
op|'.'
name|'vnc_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vnc_dict'
op|'['
string|"'port'"
op|']'
op|','
number|'5906'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console
dedent|''
name|'def'
name|'test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_vnc_console'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_vnc_console_noport
dedent|''
name|'def'
name|'test_get_vnc_console_noport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ConsoleTypeUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_vnc_console'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_ip_addr
dedent|''
name|'def'
name|'test_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
op|','
string|'"test_url"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_connector
dedent|''
name|'def'
name|'test_get_volume_connector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connector_dict'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'fake_vm'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|'"VirtualMachine"'
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'fake_vm_id'
op|'='
name|'fake_vm'
op|'.'
name|'obj'
op|'.'
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector_dict'
op|'['
string|"'instance'"
op|']'
op|','
name|'fake_vm_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_vmdk_connection_info
dedent|''
name|'def'
name|'_test_vmdk_connection_info'
op|'('
name|'self'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'driver_volume_type'"
op|':'
name|'type'
op|','
nl|'\n'
string|"'serial'"
op|':'
string|"'volume-fake-id'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
string|"'volume'"
op|':'
string|"'vm-10'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'volume-fake-id'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_volume_attach_vmdk
dedent|''
name|'def'
name|'test_volume_attach_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_attach_volume_vmdk'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_attach_volume_vmdk'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_detach_vmdk
dedent|''
name|'def'
name|'test_volume_detach_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_detach_volume_vmdk'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_detach_volume_vmdk'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_vmdk_disk_to_vm
dedent|''
name|'def'
name|'test_attach_vmdk_disk_to_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
nl|'\n'
comment|'# create fake backing info'
nl|'\n'
name|'volume_device'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'volume_device'
op|'.'
name|'backing'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'DataObject'
op|'('
op|')'
newline|'\n'
name|'volume_device'
op|'.'
name|'backing'
op|'.'
name|'fileName'
op|'='
string|"'fake_path'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_get_vmdk_base_volume_device'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_get_vmdk_base_volume_device'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'volume_device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_disk_to_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'vmdk_path'
op|'='
string|"'fake_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_vmdk_disk_from_vm
dedent|''
name|'def'
name|'test_detach_vmdk_disk_from_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'vmdk'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_get_volume_uuid'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_get_volume_uuid'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'volume-fake-id'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_disk_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_vmdk_backed_disk_device'"
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'get_vmdk_backed_disk_device'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake_disk_uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_device'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_consolidate_vmdk_volume'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_consolidate_vmdk_volume'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'fake_device'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'detach_disk_from_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_attach_iscsi
dedent|''
name|'def'
name|'test_volume_attach_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_attach_volume_iscsi'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_attach_volume_iscsi'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volume_detach_iscsi
dedent|''
name|'def'
name|'test_volume_detach_iscsi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'_detach_volume_iscsi'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'_detach_volume_iscsi'
op|'('
name|'connection_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_iscsi_disk_to_vm
dedent|''
name|'def'
name|'test_attach_iscsi_disk_to_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_portal'"
op|']'
op|'='
string|"'fake_target_portal'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_iqn'"
op|']'
op|'='
string|"'fake_target_iqn'"
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'discover'
op|'='
op|'('
string|"'fake_name'"
op|','
string|"'fake_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'discover_st'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'discover_st'
op|'('
nl|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'discover'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'attach_disk_to_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'attach_disk_to_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'rdmp'"
op|','
nl|'\n'
name|'device_name'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_st
dedent|''
name|'def'
name|'test_find_st'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|"'target_portal'"
op|':'
string|"'fake_target_host:port'"
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
string|"'fake_target_iqn'"
op|'}'
newline|'\n'
name|'host'
op|'='
name|'vmwareapi_fake'
op|'.'
name|'_get_objects'
op|'('
string|"'HostSystem'"
op|')'
op|'.'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
name|'host'
op|'.'
name|'_add_iscsi_target'
op|'('
name|'data'
op|')'
newline|'\n'
name|'result'
op|'='
name|'volume_util'
op|'.'
name|'find_st'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
string|"'fake-device'"
op|','
string|"'fake-uuid'"
op|')'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_iscsi_disk_from_vm
dedent|''
name|'def'
name|'test_detach_iscsi_disk_from_vm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connection_info'
op|'='
name|'self'
op|'.'
name|'_test_vmdk_connection_info'
op|'('
string|"'iscsi'"
op|')'
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_portal'"
op|']'
op|'='
string|"'fake_target_portal'"
newline|'\n'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'target_iqn'"
op|']'
op|'='
string|"'fake_target_iqn'"
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/vdc'"
newline|'\n'
name|'find'
op|'='
op|'('
string|"'fake_name'"
op|','
string|"'fake_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volume_util'
op|','
string|"'find_st'"
op|')'
newline|'\n'
name|'volume_util'
op|'.'
name|'find_st'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'find'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vm_util'
op|','
string|"'get_rdm_disk'"
op|')'
newline|'\n'
name|'device'
op|'='
string|"'fake_device'"
newline|'\n'
name|'vm_util'
op|'.'
name|'get_rdm_disk'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'fake_uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|','
nl|'\n'
string|"'detach_disk_from_vm'"
op|')'
newline|'\n'
name|'volumeops'
op|'.'
name|'VMwareVolumeOps'
op|'.'
name|'detach_disk_from_vm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'device'
op|','
name|'destroy_disk'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'mount_point'
op|','
nl|'\n'
name|'encryption'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_info_get
dedent|''
name|'def'
name|'test_connection_info_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'connector'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instance'"
op|','
name|'connector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_info_get_after_destroy
dedent|''
name|'def'
name|'test_connection_info_get_after_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'connector'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'ip'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'host'"
op|']'
op|','
string|"'test_url'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'connector'
op|'['
string|"'initiator'"
op|']'
op|','
string|"'iscsi-name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instance'"
op|','
name|'connector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_instance_security_rules
dedent|''
name|'def'
name|'test_refresh_instance_security_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'refresh_instance_security_rules'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_image_used
dedent|''
name|'def'
name|'test_image_aging_image_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_timestamp_filename
dedent|''
name|'def'
name|'_get_timestamp_filename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s%s'"
op|'%'
op|'('
name|'imagecache'
op|'.'
name|'TIMESTAMP_PREFIX'
op|','
nl|'\n'
name|'timeutils'
op|'.'
name|'strtime'
op|'('
name|'at'
op|'='
name|'self'
op|'.'
name|'old_time'
op|','
nl|'\n'
name|'fmt'
op|'='
name|'imagecache'
op|'.'
name|'TIMESTAMP_FORMAT'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_override_time
dedent|''
name|'def'
name|'_override_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'old_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'00'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_get_timestamp_filename
name|'def'
name|'_fake_get_timestamp_filename'
op|'('
name|'fake'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'imagecache'
op|'.'
name|'ImageCacheManager'
op|','
string|"'_get_timestamp_filename'"
op|','
nl|'\n'
name|'_fake_get_timestamp_filename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_timestamp_file_exists
dedent|''
name|'def'
name|'_timestamp_file_exists'
op|'('
name|'self'
op|','
name|'exists'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/%s/'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'exists'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'timestamp'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vmwareapi_fake'
op|'.'
name|'get_file'
op|'('
name|'timestamp'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_aging_image_marked_for_deletion
dedent|''
dedent|''
name|'def'
name|'_image_aging_image_marked_for_deletion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_image_marked_for_deletion
dedent|''
name|'def'
name|'test_image_aging_image_marked_for_deletion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_timestamp_file_removed
dedent|''
name|'def'
name|'_timestamp_file_removed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'num_instances'
op|'='
number|'2'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp_file_removed_spawn
dedent|''
name|'def'
name|'test_timestamp_file_removed_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_timestamp_file_removed'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp_file_removed_aging
dedent|''
name|'def'
name|'test_timestamp_file_removed_aging'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_timestamp_file_removed'
op|'('
op|')'
newline|'\n'
name|'ts'
op|'='
name|'self'
op|'.'
name|'_get_timestamp_filename'
op|'('
op|')'
newline|'\n'
name|'ts_path'
op|'='
op|'('
string|"'[%s] vmware_base/fake_image_uuid/%s/'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'ts'
op|')'
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'_add_file'
op|'('
name|'ts_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_disabled
dedent|''
name|'def'
name|'test_image_aging_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'remove_unused_base_images'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
name|'exists'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_timestamp_file_exists'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_image_aging_aged
dedent|''
name|'def'
name|'_image_aging_aged'
op|'('
name|'self'
op|','
name|'aging_time'
op|'='
number|'100'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_override_time'
op|'('
op|')'
newline|'\n'
name|'cur_time'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'11'
op|','
number|'22'
op|','
number|'12'
op|','
number|'00'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'remove_unused_original_minimum_age_seconds'
op|'='
name|'aging_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_image_aging_image_marked_for_deletion'
op|'('
op|')'
newline|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'timeutils'
op|'.'
name|'set_time_override'
op|'('
name|'cur_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'manage_image_cache'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'all_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_aged
dedent|''
name|'def'
name|'test_image_aging_aged'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_image_aging_aged'
op|'('
name|'aging_time'
op|'='
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
name|'exists'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_image_aging_not_aged
dedent|''
name|'def'
name|'test_image_aging_not_aged'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_image_aging_aged'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cached_files_exist'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareAPIHostTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareAPIHostTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Vmware API host calls."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIHostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'image_cache_subdirectory_name'
op|'='
string|"'vmware_base'"
op|')'
newline|'\n'
name|'vm_util'
op|'.'
name|'vm_refs_cache_reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host_ip'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'host_username'
op|'='
string|"'test_username'"
op|','
nl|'\n'
name|'host_password'
op|'='
string|"'test_pass'"
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'set_stubs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareESXDriver'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIHostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'cleanup'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_state
dedent|''
name|'def'
name|'test_host_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'vcpus'"
op|']'
op|','
number|'16'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'disk_total'"
op|']'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'disk_available'"
op|']'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'disk_used'"
op|']'
op|','
number|'1024'
op|'-'
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'host_memory_total'"
op|']'
op|','
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'host_memory_free'"
op|']'
op|','
number|'1024'
op|'-'
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_version'"
op|']'
op|','
number|'5000000'
op|')'
newline|'\n'
name|'supported_instances'
op|'='
op|'['
op|'('
string|"'i686'"
op|','
string|"'vmware'"
op|','
string|"'hvm'"
op|')'
op|','
nl|'\n'
op|'('
string|"'x86_64'"
op|','
string|"'vmware'"
op|','
string|"'hvm'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'supported_instances'"
op|']'
op|','
name|'supported_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_host_action
dedent|''
name|'def'
name|'_test_host_action'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'action'
op|','
name|'expected'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'method'
op|'('
string|"'host'"
op|','
name|'action'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_reboot
dedent|''
name|'def'
name|'test_host_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'reboot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_shutdown
dedent|''
name|'def'
name|'test_host_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'shutdown'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_startup
dedent|''
name|'def'
name|'test_host_startup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'startup'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_on
dedent|''
name|'def'
name|'test_host_maintenance_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_off
dedent|''
name|'def'
name|'test_host_maintenance_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_uptime
dedent|''
name|'def'
name|'test_get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_uptime'
op|'('
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Please refer to test_url for the uptime'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VMwareAPIVCDriverTestCase
dedent|''
dedent|''
name|'class'
name|'VMwareAPIVCDriverTestCase'
op|'('
name|'VMwareAPIVMTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVCDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cluster_name'
op|'='
string|"'test_cluster'"
newline|'\n'
name|'cluster_name2'
op|'='
string|"'test_cluster2'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cluster_name'
op|'='
op|'['
name|'cluster_name'
op|','
name|'cluster_name2'
op|']'
op|','
nl|'\n'
name|'api_retry_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'task_poll_interval'
op|'='
number|'10'
op|','
name|'datastore_regex'
op|'='
string|"'.*'"
op|','
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vnc_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'image_cache_subdirectory_name'
op|'='
string|"'vmware_base'"
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'reset'
op|'('
name|'vc'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|'('
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_resources'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'node_name2'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_resources'
op|'.'
name|'keys'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'cluster_name2'
name|'in'
name|'self'
op|'.'
name|'node_name2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ds'
op|'='
string|"'ds1'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ds'
op|'='
string|"'ds2'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'vnc_host'
op|'='
string|"'ha-host'"
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VMwareAPIVCDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'vmwareapi_fake'
op|'.'
name|'cleanup'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_mocks_for_session
dedent|''
name|'def'
name|'_setup_mocks_for_session'
op|'('
name|'self'
op|','
name|'mock_init'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_init'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'vcdriver'
op|'='
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|'('
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'return'
name|'vcdriver'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.vmwareapi.driver.VMwareVCDriver.__init__'"
op|')'
newline|'\n'
DECL|member|test_init_host_and_cleanup_host
name|'def'
name|'test_init_host_and_cleanup_host'
op|'('
name|'self'
op|','
name|'mock_init'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vcdriver'
op|'='
name|'self'
op|'.'
name|'_setup_mocks_for_session'
op|'('
name|'mock_init'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'init_host'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'_create_session'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vcdriver'
op|'.'
name|'cleanup_host'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'Logout'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.vmwareapi.driver.LOG'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.vmwareapi.driver.VMwareVCDriver.__init__'"
op|')'
newline|'\n'
DECL|member|test_cleanup_host_with_no_login
name|'def'
name|'test_cleanup_host_with_no_login'
op|'('
name|'self'
op|','
name|'mock_init'
op|','
name|'mock_logger'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vcdriver'
op|'='
name|'self'
op|'.'
name|'_setup_mocks_for_session'
op|'('
name|'mock_init'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'init_host'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'_create_session'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Not logged in...'
nl|'\n'
comment|'# observe that no exceptions were thrown'
nl|'\n'
name|'mock_sc'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'retrieve_service_content'
op|'.'
name|'return_value'
op|'='
name|'mock_sc'
newline|'\n'
name|'web_fault'
op|'='
name|'suds'
op|'.'
name|'WebFault'
op|'('
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
newline|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'Logout'
op|'.'
name|'side_effect'
op|'='
name|'web_fault'
newline|'\n'
name|'vcdriver'
op|'.'
name|'cleanup_host'
op|'('
string|'"foo"'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert that the mock Logout method was never called'
nl|'\n'
name|'vcdriver'
op|'.'
name|'_session'
op|'.'
name|'vim'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'Logout'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'debug'
op|'.'
name|'assert_called_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_power_action
dedent|''
name|'def'
name|'test_host_power_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'host'"
op|','
string|"'action'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_mode
dedent|''
name|'def'
name|'test_host_maintenance_mode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
string|"'host'"
op|','
string|"'mode'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_host_enabled
dedent|''
name|'def'
name|'test_set_host_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'set_host_enabled'
op|','
string|"'host'"
op|','
string|"'state'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_datastore_regex_configured
dedent|''
name|'def'
name|'test_datastore_regex_configured'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_resources'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_datastore_regex'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_resources'
op|'['
name|'node'
op|']'
op|'['
string|"'vmops'"
op|']'
op|'.'
name|'_datastore_regex'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_resource
dedent|''
dedent|''
name|'def'
name|'test_get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_available_resource'
op|'('
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'cpu_info'
op|'='
op|'{'
string|'"model"'
op|':'
op|'['
string|'"Intel(R) Xeon(R)"'
op|','
string|'"Intel(R) Xeon(R)"'
op|']'
op|','
nl|'\n'
string|'"vendor"'
op|':'
op|'['
string|'"Intel"'
op|','
string|'"Intel"'
op|']'
op|','
nl|'\n'
string|'"topology"'
op|':'
op|'{'
string|'"cores"'
op|':'
number|'16'
op|','
nl|'\n'
string|'"threads"'
op|':'
number|'32'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'vcpus'"
op|']'
op|','
number|'32'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'local_gb'"
op|']'
op|','
number|'2048'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'local_gb_used'"
op|']'
op|','
number|'2048'
op|'-'
number|'600'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'memory_mb'"
op|']'
op|','
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_type'"
op|']'
op|','
string|"'VMware vCenter Server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_version'"
op|']'
op|','
number|'5001000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|','
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'cpu_info'"
op|']'
op|','
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'cpu_info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'['
string|"'supported_instances'"
op|']'
op|','
nl|'\n'
string|'\'[["i686", "vmware", "hvm"], ["x86_64", "vmware", "hvm"]]\''
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_datastore_regex
dedent|''
name|'def'
name|'test_invalid_datastore_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Tests if we raise an exception for Invalid Regular Expression in'
nl|'\n'
comment|'# vmware_datastore_regex'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'cluster_name'
op|'='
op|'['
string|"'test_cluster'"
op|']'
op|','
name|'datastore_regex'
op|'='
string|"'fake-ds(01'"
op|','
nl|'\n'
name|'group'
op|'='
string|"'vmware'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
name|'driver'
op|'.'
name|'VMwareVCDriver'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_nodes
dedent|''
name|'def'
name|'test_get_available_nodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nodelist'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_available_nodes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'nodelist'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'self'
op|'.'
name|'node_name'
op|','
name|'nodelist'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'self'
op|'.'
name|'node_name2'
op|','
name|'nodelist'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_multiple_node
dedent|''
name|'def'
name|'test_spawn_multiple_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_is_neutron
indent|'        '
name|'def'
name|'fake_is_neutron'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova_utils'
op|','
string|"'is_neutron'"
op|','
name|'fake_is_neutron'
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name'
op|','
name|'num_instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuid1'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'uuid1'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
name|'node'
op|'='
name|'self'
op|'.'
name|'node_name2'
op|','
name|'num_instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'uuid2'
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'uuid2'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on
dedent|''
name|'def'
name|'test_finish_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'power_on'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'self'
op|'.'
name|'power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_off
dedent|''
name|'def'
name|'test_finish_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'False'
op|','
name|'self'
op|'.'
name|'power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on_resize
dedent|''
name|'def'
name|'test_finish_migration_power_on_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'power_on'
op|'='
name|'True'
op|','
nl|'\n'
name|'resize_instance'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'self'
op|'.'
name|'power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_on
dedent|''
name|'def'
name|'test_finish_revert_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'power_on'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'self'
op|'.'
name|'power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_off
dedent|''
name|'def'
name|'test_finish_revert_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'power_on'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'False'
op|','
name|'self'
op|'.'
name|'power_on_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Ensure VMwareVCVMOps's get_copy_virtual_disk_spec is getting called"
nl|'\n'
comment|'# two times'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVCVMOps'
op|','
nl|'\n'
string|"'get_copy_virtual_disk_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'get_copy_virtual_disk_spec'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'get_copy_virtual_disk_spec'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_using_file_manager
dedent|''
name|'def'
name|'test_snapshot_using_file_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'uuid_str'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'uuidutils'
op|','
nl|'\n'
string|"'generate_uuid'"
op|')'
newline|'\n'
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'uuid_str'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'ds_util'
op|','
string|"'file_delete'"
op|')'
newline|'\n'
comment|'# Check calls for delete vmdk and -flat.vmdk pair'
nl|'\n'
name|'ds_util'
op|'.'
name|'file_delete'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|'"[%s] vmware_temp/%s-flat.vmdk"'
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'uuid_str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'ds_util'
op|'.'
name|'file_delete'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|'"[%s] vmware_temp/%s.vmdk"'
op|'%'
op|'('
name|'self'
op|'.'
name|'ds'
op|','
name|'uuid_str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_snapshot'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_invalid_node
dedent|''
name|'def'
name|'test_spawn_invalid_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
name|'node'
op|'='
string|"'InvalidNodeName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_sparse_image
dedent|''
name|'def'
name|'test_spawn_with_sparse_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Only a sparse disk image triggers the copy'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmware_images'
op|','
string|"'get_vmdk_size_and_properties'"
op|')'
newline|'\n'
name|'result'
op|'='
op|'['
number|'1024'
op|','
op|'{'
string|'"vmware_ostype"'
op|':'
string|'"otherGuest"'
op|','
nl|'\n'
string|'"vmware_adaptertype"'
op|':'
string|'"lsiLogic"'
op|','
nl|'\n'
string|'"vmware_disktype"'
op|':'
string|'"sparse"'
op|'}'
op|']'
newline|'\n'
name|'vmware_images'
op|'.'
name|'get_vmdk_size_and_properties'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
comment|"# Ensure VMwareVCVMOps's get_copy_virtual_disk_spec is getting called"
nl|'\n'
comment|'# two times'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmops'
op|'.'
name|'VMwareVCVMOps'
op|','
nl|'\n'
string|"'get_copy_virtual_disk_spec'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'get_copy_virtual_disk_spec'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'get_copy_virtual_disk_spec'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'self'
op|'.'
name|'instance_node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vm_info'
op|'('
name|'info'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_plug_vifs
dedent|''
name|'def'
name|'test_plug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'plug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unplug_vifs
dedent|''
name|'def'
name|'test_unplug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unplug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_update_instance_progress
indent|'        '
name|'def'
name|'fake_update_instance_progress'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'step'
op|','
nl|'\n'
name|'total_steps'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_get_host_ref_from_name
dedent|''
name|'def'
name|'fake_get_host_ref_from_name'
op|'('
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'flavor'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake'"
op|','
string|"'flavorid'"
op|':'
string|"'fake_id'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_update_instance_progress"'
op|','
nl|'\n'
name|'fake_update_instance_progress'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|','
string|'"_get_host_ref_from_name"'
op|','
nl|'\n'
name|'fake_get_host_ref_from_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'fake_dest'"
op|','
name|'flavor'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration
dedent|''
name|'def'
name|'test_confirm_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'confirm_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'vc_support'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_attach_volume_vmdk_no_image_ref
dedent|''
name|'def'
name|'test_spawn_attach_volume_vmdk_no_image_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_spawn_attach_volume_vmdk'
op|'('
name|'set_image_ref'
op|'='
name|'False'
op|','
name|'vc_support'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareVCDriver does not implement the pause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'pause'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that the VMwareVCDriver does not implement the unpause method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_datastore_dc_map
dedent|''
name|'def'
name|'test_datastore_dc_map'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vmops'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_resources'
op|'['
name|'self'
op|'.'
name|'node_name'
op|']'
op|'['
string|"'vmops'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'vmops'
op|'.'
name|'_datastore_dc_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_vm'
op|'('
op|')'
newline|'\n'
comment|'# currently there are 4 data stores'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'vmops'
op|'.'
name|'_datastore_dc_mapping'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rollback_live_migration_at_destination
dedent|''
name|'def'
name|'test_rollback_live_migration_at_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
string|'"destroy"'
op|')'
name|'as'
name|'mock_destroy'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'rollback_live_migration_at_destination'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"instance"'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|'"instance"'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
